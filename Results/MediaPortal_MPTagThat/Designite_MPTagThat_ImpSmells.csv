Implementation smell,Namespace,Class,File,Method,Description
Long Method,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,Main_Load,The method has 238 lines of code.
Long Method,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,LocaliseScreen,The method has 155 lines of code.
Long Method,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitPreferences,The method has 241 lines of code.
Long Method,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,buttonSettingsApply_Click,The method has 129 lines of code.
Long Method,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,OnAction,The method has 139 lines of code.
Long Method,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The method has 4433 lines of code.
Long Method,MPTagThat,Program,C:\repos\MediaPortal_MPTagThat\MPTagThat\Program.cs,Main,The method has 133 lines of code.
Long Method,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,LoadSettings,The method has 117 lines of code.
Long Method,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The method has 506 lines of code.
Long Method,MPTagThat.Commands,CmdConvert,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\CmdConvert.cs,Execute,The method has 104 lines of code.
Long Method,MPTagThat.Commands,CmdGetCoverArt,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\CmdGetCoverArt.cs,Execute,The method has 156 lines of code.
Long Method,MPTagThat.Commands,CmdIdentifyFile,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\CmdIdentifyFile.cs,Execute,The method has 123 lines of code.
Long Method,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The method has 179 lines of code.
Long Method,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The method has 181 lines of code.
Long Method,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The method has 201 lines of code.
Long Method,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The method has 234 lines of code.
Long Method,MPTagThat.Dialogues,Preview,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\Preview.cs,AddRemoveColumn,The method has 137 lines of code.
Long Method,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The method has 114 lines of code.
Long Method,MPTagThat.Dialogues,SwitchDatabase,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SwitchDatabase.cs,InitializeComponent,The method has 127 lines of code.
Long Method,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The method has 445 lines of code.
Long Method,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,ReplaceParametersWithValues,The method has 161 lines of code.
Long Method,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The method has 465 lines of code.
Long Method,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The method has 304 lines of code.
Long Method,MPTagThat.InternetLookup,AlbumSearchResult,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumSearchResult.cs,InitializeComponent,The method has 115 lines of code.
Long Method,MPTagThat.InternetLookup,ArtistAlbumDialog,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\ArtistAlbumDialog.cs,InitializeComponent,The method has 109 lines of code.
Long Method,MPTagThat.InternetLookup,InternetLookup,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\InternetLookup.cs,ShowAlbumDetails,The method has 111 lines of code.
Long Method,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,FillForm,The method has 654 lines of code.
Long Method,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,btApply_Click,The method has 874 lines of code.
Long Method,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,OnTextChanged,The method has 104 lines of code.
Long Method,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The method has 3331 lines of code.
Long Method,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The method has 246 lines of code.
Long Method,MPTagThat.GridView,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\LyricsSearch.cs,InitializeComponent,The method has 102 lines of code.
Long Method,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,InitializeComponent,The method has 132 lines of code.
Long Method,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,RippingThread,The method has 181 lines of code.
Long Method,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The method has 181 lines of code.
Long Method,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,FolderScan,The method has 125 lines of code.
Long Method,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,ApplyTagFilter,The method has 180 lines of code.
Long Method,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,InitializeComponent,The method has 180 lines of code.
Long Method,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,Organise,The method has 209 lines of code.
Long Method,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The method has 616 lines of code.
Long Method,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The method has 535 lines of code.
Long Method,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,DrawSpectrum,The method has 112 lines of code.
Long Method,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The method has 263 lines of code.
Long Method,MPTagThat.Player,PlayList,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayList.cs,InitializeComponent,The method has 159 lines of code.
Long Method,MPTagThat.Player,PlayListPLSIO,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayList\PlayListPLSIO.cs,Load,The method has 100 lines of code.
Complex Method,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,Main_Load,Cyclomatic complexity of the method is 14
Complex Method,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,LoadSettings,Cyclomatic complexity of the method is 10
Complex Method,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitPreferences,Cyclomatic complexity of the method is 24
Complex Method,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,LoadKeyMap,Cyclomatic complexity of the method is 8
Complex Method,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,buttonSettingsApply_Click,Cyclomatic complexity of the method is 14
Complex Method,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,ExecuteDatabaseQuery_Executed,Cyclomatic complexity of the method is 8
Complex Method,MPTagThat,MiscInfoControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\MiscInfoControl.cs,AddNonMusicFiles,Cyclomatic complexity of the method is 8
Complex Method,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,LoadSettings,Cyclomatic complexity of the method is 15
Complex Method,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,treeViewFolderBrowser_AfterSelect,Cyclomatic complexity of the method is 8
Complex Method,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,RefreshFilter,Cyclomatic complexity of the method is 8
Complex Method,MPTagThat.Commands,CmdSave,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\CmdSave.cs,SaveTrack,Cyclomatic complexity of the method is 8
Complex Method,MPTagThat.Commands,CmdReplayGain,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\CmdReplayGain.cs,Execute,Cyclomatic complexity of the method is 10
Complex Method,MPTagThat.Commands,CmdGetCoverArt,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\CmdGetCoverArt.cs,Execute,Cyclomatic complexity of the method is 23
Complex Method,MPTagThat.Commands,CmdGetLyrics,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\CmdGetLyrics.cs,PostProcess,Cyclomatic complexity of the method is 8
Complex Method,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,MaintainFindReplaceBuffer,Cyclomatic complexity of the method is 9
Complex Method,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,CaseConvert,Cyclomatic complexity of the method is 16
Complex Method,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,ConvertCase,Cyclomatic complexity of the method is 9
Complex Method,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,ReplaceParametersWithValues,Cyclomatic complexity of the method is 10
Complex Method,MPTagThat.InternetLookup,InternetLookup,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\InternetLookup.cs,SearchForAlbumInformation,Cyclomatic complexity of the method is 8
Complex Method,MPTagThat.InternetLookup,InternetLookup,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\InternetLookup.cs,ShowAlbumDetails,Cyclomatic complexity of the method is 16
Complex Method,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,FillForm,Cyclomatic complexity of the method is 120
Complex Method,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,btApply_Click,Cyclomatic complexity of the method is 110
Complex Method,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,buttonGetPictureInternet_Click,Cyclomatic complexity of the method is 8
Complex Method,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,BurningThread,Cyclomatic complexity of the method is 8
Complex Method,MPTagThat.GridView,GridViewConvert,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Conversion\GridViewConvert.cs,ConversionThread,Cyclomatic complexity of the method is 9
Complex Method,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,RippingThread,Cyclomatic complexity of the method is 17
Complex Method,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,ExecuteCommandThread,Cyclomatic complexity of the method is 14
Complex Method,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,FolderScan,Cyclomatic complexity of the method is 10
Complex Method,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,GetFiles,Cyclomatic complexity of the method is 8
Complex Method,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,DatabaseScan,Cyclomatic complexity of the method is 9
Complex Method,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,ApplyTagFilter,Cyclomatic complexity of the method is 14
Complex Method,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,tracksGrid_CellValueNeeded,Cyclomatic complexity of the method is 8
Complex Method,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,LoadSettings,Cyclomatic complexity of the method is 8
Complex Method,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,Organise,Cyclomatic complexity of the method is 25
Complex Method,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,Tag2FileName,Cyclomatic complexity of the method is 9
Complex Method,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,buttonPlay_Click,Cyclomatic complexity of the method is 13
Complex Method,MPTagThat.Player,PlayListPLSIO,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayList\PlayListPLSIO.cs,Load,Cyclomatic complexity of the method is 14
Long Parameter List,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,MapAction,The method has 5 parameters. Parameters: map' nodeId' nodeKey' nodeRibbonKey' nodeDesc
Long Parameter List,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,lyricFoundMethod,The method has 5 parameters. Parameters: lyricStrings' artist' title' site' row
Long Parameter List,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,lyricNotFoundMethod,The method has 5 parameters. Parameters: artist' title' message' site' row
Long Parameter List,MPTagThat.GridView,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\LyricsSearch.cs,lyricFound,The method has 5 parameters. Parameters: lyricStrings' artist' title' site' row
Long Parameter List,MPTagThat.GridView,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\LyricsSearch.cs,lyricNotFound,The method has 5 parameters. Parameters: artist' title' message' site' row
Long Identifier,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,,The length of the parameter toolStripStatusLabelScanProgress is 32.
Long Identifier,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,,The length of the parameter backstageViewPageRecentFolders is 30.
Long Identifier,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,,The length of the parameter backstageViewButtonChangeColumns is 32.
Long Identifier,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,,The length of the parameter navigationBarGroupItemsContainer1 is 33.
Long Identifier,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,,The length of the parameter navigationBarGroupItemsContainer2 is 33.
Long Identifier,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,,The length of the parameter navigationBarItemTagsLyricsCover is 32.
Long Identifier,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,,The length of the parameter navigationBarGroupItemsContainer3 is 33.
Long Identifier,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,,The length of the parameter groupBoxMusicBrainzMultipleAlbums is 33.
Long Identifier,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,,The length of the parameter radioButtonFirstLetterUpperCase is 31.
Long Identifier,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,,The length of the parameter radioButtonAllFirstLetterUpperCase is 34.
Long Identifier,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,,The length of the parameter checkBoxAlwaysUpperCaseFirstLetter is 34.
Long Identifier,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,,The length of the parameter checkBoxReplaceSpaceByUnderscore is 32.
Long Identifier,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,,The length of the parameter checkBoxReplaceUnderscoreBySpace is 32.
Long Identifier,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,,The length of the parameter checkBoxRemoveExistingPictures is 30.
Long Identifier,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,,The length of the parameter _officialAudioSourceInformation is 31.
Long Identifier,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,,The length of the parameter _officialInternetRadioInformation is 33.
Long Identifier,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,,The length of the parameter lookupTitlleOnGoogleImagesToolStripMenuItem is 43.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,LocaliseScreen,The length of the statement  "        $"{localisation.ToString("ribbon"' "DatabaseQueryGroup")}. {localisation.ToString("ribbon"' "ActiveDatabase")} {_musicDatabase.CurrentDatabase}"; " is 145.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitPreferences,The length of the statement  "      comboBoxThemes.Items.Add(new Item(string.Format("{0} (2010)"' localisation.ToString("Settings"' "Blue"))' "Office2010Blue"' "")); " is 129.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitPreferences,The length of the statement  "      comboBoxThemes.Items.Add(new Item(string.Format("{0} (2010)"' localisation.ToString("Settings"' "Silver"))' "Office2010Silver"' "")); " is 133.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitPreferences,The length of the statement  "      comboBoxThemes.Items.Add(new Item(string.Format("{0} (2010)"' localisation.ToString("Settings"' "Black"))' "Office2010Black"' "")); " is 131.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitPreferences,The length of the statement  "      comboBoxWMAEncoderFormat.Items.Add(new Item(localisation.ToString("Settings"' "EncoderWmaLossless")' "wmalossless"' "")); " is 121.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,ExecuteDatabaseQuery_Executed,The length of the statement  "        ToolStripStatusFiles.Text = string.Format(ServiceScope.Get<ILocalisation>().ToString("main"' "toolStripLabelFiles")' result.Count' 0); " is 134.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(Main)); " is 124.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonProgressCancel.SmallImages.Images"))))}); " is 130.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("ribbon.ApplicationButtonImages.Images"))))}); " is 128.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.pictureBoxTrackListTop.InitialImage = ((System.Drawing.Image)(resources.GetObject("pictureBoxTrackListTop.InitialImage"))); " is 128.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.pictureBoxTrackListBottom.InitialImage = ((System.Drawing.Image)(resources.GetObject("pictureBoxTrackListBottom.InitialImage"))); " is 134.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.comboBoxDebugLevel.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left)  " is 151.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.comboBoxThemes.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left)  " is 147.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.comboBoxLanguage.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left)  " is 149.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.tbRibbonKeyValue.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)  " is 152.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.lblRibbonShortCut.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left))); " is 155.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.lblKeyShortCut.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left))); " is 152.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.buttonChangeKey.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 154.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.tbKeyValue.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)  " is 146.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.ttLabel1.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left))); " is 146.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.ckShift.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left))); " is 145.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.ckCtrl.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left))); " is 144.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.ckAlt.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left))); " is 143.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.tbKeyDescription.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)  " is 152.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.lbKeyDescription.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left))); " is 154.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.tbAction.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)  " is 144.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.lbKeyAction.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left))); " is 149.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.treeViewKeys.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)  " is 148.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.ckChangeCoverSize.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left)  " is 150.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.groupBoxRippingFormatOptions.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left)  " is 161.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.textBoxRippingFilenameFormat.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left)  " is 161.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.buttonTargetFolderBrowse.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 160.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.tbTargetFolder.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left)  " is 147.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.hScrollBarOggEncodingQuality.Scroll += new System.Windows.Forms.ScrollEventHandler(this.hScrollBarOggEncodingQuality_Scroll); " is 130.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.hScrollBarFlacEncodingQuality.Scroll += new System.Windows.Forms.ScrollEventHandler(this.hScrollBarFlacEncodingQuality_Scroll); " is 132.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.comboBoxWMASampleFormat.SelectedIndexChanged += new System.EventHandler(this.comboBoxWMASampleFormat_SelectedIndexChanged); " is 128.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.comboBoxWMAEncoderFormat.SelectedIndexChanged += new System.EventHandler(this.comboBoxWMAEncoderFormat_SelectedIndexChanged); " is 130.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Default"' ((System.Drawing.Image)(resources.GetObject("backstageViewButtonSave.LargeImages.Images"))))' " is 132.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("backstageViewButtonSave.LargeImages.Images1"))))}); " is 134.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Default"' ((System.Drawing.Image)(resources.GetObject("backstageViewButtonSave.SmallImages.Images"))))' " is 132.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("backstageViewButtonSave.SmallImages.Images1"))))}); " is 134.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("backstageViewButtonRefresh.LargeImages.Images"))))}); " is 136.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("backstageViewButtonRefresh.SmallImages.Images"))))}); " is 136.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonExecuteQuery.LargeImages.Images"))))}); " is 128.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.buttonExecuteQuery.ScreenTip.Image = ((System.Drawing.Image)(resources.GetObject("buttonExecuteQuery.ScreenTip.Image"))); " is 126.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonExecuteQuery.SmallImages.Images"))))}); " is 128.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonDBSwitch.LargeImages.Images"))))}); " is 124.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonDBSwitch.SmallImages.Images"))))}); " is 124.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.buttonSelectMusicFolder.BackgroundImage = ((System.Drawing.Image)(resources.GetObject("buttonSelectMusicFolder.BackgroundImage"))); " is 136.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.buttonSelectMusicFolder.InformativenessMinimumLevel = "Elegant.Ui.RibbonGroupButtonInformativenessLevel:LargeImageWithText"; " is 129.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonStartDBScan.LargeImages.Images"))))}); " is 127.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.buttonStartDBScan.ScreenTip.Image = ((System.Drawing.Image)(resources.GetObject("buttonStartDBScan.ScreenTip.Image"))); " is 124.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonStartDBScan.SmallImages.Images"))))}); " is 127.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonAbortDBScan.LargeImages.Images"))))}); " is 127.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.buttonAbortDBScan.ScreenTip.Image = ((System.Drawing.Image)(resources.GetObject("buttonAbortDBScan.ScreenTip.Image"))); " is 124.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonAbortDBScan.SmallImages.Images"))))}); " is 127.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonDeleteDB.LargeImages.Images"))))}); " is 124.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonDeleteDB.SmallImages.Images"))))}); " is 124.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("startMenuSave.LargeImages.Images"))))}); " is 123.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("startMenuSave.SmallImages.Images"))))}); " is 123.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("startMenuRefresh.LargeImages.Images"))))' " is 124.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.startMenuRefresh.ScreenTip.Image = ((System.Drawing.Image)(resources.GetObject("startMenuRefresh.ScreenTip.Image"))); " is 122.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("startMenuRefresh.SmallImages.Images"))))}); " is 126.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonTagFromFile.LargeImages.Images"))))}); " is 127.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.buttonTagFromFile.ScreenTip.Image = ((System.Drawing.Image)(resources.GetObject("buttonTagFromFile.ScreenTip.Image"))); " is 124.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonTagFromFile.SmallImages.Images"))))}); " is 127.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonTagIdentifyFiles.LargeImages.Images"))))}); " is 132.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.buttonTagIdentifyFiles.ScreenTip.Image = ((System.Drawing.Image)(resources.GetObject("buttonTagIdentifyFiles.ScreenTip.Image"))); " is 134.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonTagIdentifyFiles.SmallImages.Images"))))}); " is 132.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonTagFromInternet.LargeImages.Images"))))}); " is 131.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.buttonTagFromInternet.ScreenTip.Image = ((System.Drawing.Image)(resources.GetObject("buttonTagFromInternet.ScreenTip.Image"))); " is 132.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonTagFromInternet.SmallImages.Images"))))}); " is 131.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.buttonCaseConversion.ButtonScreenTip.Image = ((System.Drawing.Image)(resources.GetObject("buttonCaseConversion.ButtonScreenTip.Image"))); " is 142.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonCaseConversion.LargeImages.Images"))))}); " is 130.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonCaseConversion.SmallImages.Images"))))}); " is 130.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonGetLyrics.LargeImages.Images"))))}); " is 125.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.buttonGetLyrics.ScreenTip.Image = ((System.Drawing.Image)(resources.GetObject("buttonGetLyrics.ScreenTip.Image"))); " is 120.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonGetLyrics.SmallImages.Images"))))}); " is 125.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonFind.LargeImages.Images"))))}); " is 120.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonReplace.SmallImages.Images"))))}); " is 123.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonValidateSong.LargeImages.Images"))))}); " is 128.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonValidateSong.SmallImages.Images"))))}); " is 128.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonFixSong.LargeImages.Images"))))}); " is 123.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonFixSong.SmallImages.Images"))))}); " is 123.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.buttonDeleteTag.ButtonScreenTip.Image = ((System.Drawing.Image)(resources.GetObject("buttonDeleteTag.ButtonScreenTip.Image"))); " is 132.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonDeleteTag.LargeImages.Images"))))}); " is 125.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonDeleteTag.SmallImages.Images"))))}); " is 125.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonRemoveComment.LargeImages.Images"))))}); " is 129.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.buttonRemoveComment.ScreenTip.Image = ((System.Drawing.Image)(resources.GetObject("buttonRemoveComment.ScreenTip.Image"))); " is 128.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonRemoveComment.SmallImages.Images"))))}); " is 129.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonScriptExecute.LargeImages.Images"))))}); " is 129.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.buttonScriptExecute.ScreenTip.Image = ((System.Drawing.Image)(resources.GetObject("buttonScriptExecute.ScreenTip.Image"))); " is 128.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonScriptExecute.SmallImages.Images"))))}); " is 129.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonNumberOnClick.LargeImages.Images"))))}); " is 129.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.buttonNumberOnClick.ScreenTip.Image = ((System.Drawing.Image)(resources.GetObject("buttonNumberOnClick.ScreenTip.Image"))); " is 128.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonNumberOnClick.SmallImages.Images"))))}); " is 129.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.buttonAutoNumber.ScreenTip.Image = ((System.Drawing.Image)(resources.GetObject("buttonAutoNumber.ScreenTip.Image"))); " is 122.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonAutoNumber.SmallImages.Images"))))}); " is 126.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.ribbon.SetGalleryItemHeightMeasurementMode(this.galleryPicture' Elegant.Ui.GalleryItemHeightMeasurementMode.Large); " is 120.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.galleryPicture.HoveredItemChanged += new System.EventHandler<Elegant.Ui.GalleryHoveredItemChangedEventArgs>(this.galleryPicture_HoveredItemChanged); " is 153.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonGetCoverArt.LargeImages.Images"))))}); " is 127.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.buttonGetCoverArt.ScreenTip.Image = ((System.Drawing.Image)(resources.GetObject("buttonGetCoverArt.ScreenTip.Image"))); " is 124.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonGetCoverArt.SmallImages.Images"))))}); " is 127.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonRemoveCoverArt.LargeImages.Images"))))}); " is 130.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.buttonRemoveCoverArt.ScreenTip.Image = ((System.Drawing.Image)(resources.GetObject("buttonRemoveCoverArt.ScreenTip.Image"))); " is 130.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonRemoveCoverArt.SmallImages.Images"))))}); " is 130.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.buttonSaveAsThumb.ScreenTip.Image = ((System.Drawing.Image)(resources.GetObject("buttonSaveAsThumb.ScreenTip.Image"))); " is 124.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonSaveAsThumb.SmallImages.Images"))))}); " is 127.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.buttonRenameFiles.ButtonScreenTip.Image = ((System.Drawing.Image)(resources.GetObject("buttonRenameFiles.ButtonScreenTip.Image"))); " is 136.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonRenameFiles.LargeImages.Images"))))}); " is 127.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonRenameFiles.SmallImages.Images"))))}); " is 127.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonOrganiseFiles.LargeImages.Images"))))}); " is 129.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.buttonOrganiseFiles.ScreenTip.Image = ((System.Drawing.Image)(resources.GetObject("buttonOrganiseFiles.ScreenTip.Image"))); " is 128.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonOrganiseFiles.SmallImages.Images"))))}); " is 129.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.buttonAddToBurner.InformativenessMaximumLevel = "Elegant.Ui.RibbonGroupButtonInformativenessLevel:SmallImageWithText"; " is 123.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.buttonAddToBurner.ScreenTip.Image = ((System.Drawing.Image)(resources.GetObject("buttonAddToBurner.ScreenTip.Image"))); " is 124.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonAddToBurner.SmallImages.Images"))))}); " is 127.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.buttonAddToConversion.InformativenessMaximumLevel = "Elegant.Ui.RibbonGroupButtonInformativenessLevel:SmallImageWithText"; " is 127.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.buttonAddToConversion.ScreenTip.Image = ((System.Drawing.Image)(resources.GetObject("buttonAddToConversion.ScreenTip.Image"))); " is 132.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonAddToConversion.SmallImages.Images"))))}); " is 131.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.buttonAddToPlaylist.InformativenessMaximumLevel = "Elegant.Ui.RibbonGroupButtonInformativenessLevel:SmallImageWithText"; " is 125.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.buttonAddToPlaylist.ScreenTip.Image = ((System.Drawing.Image)(resources.GetObject("buttonAddToPlaylist.ScreenTip.Image"))); " is 128.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonAddToPlaylist.SmallImages.Images"))))}); " is 129.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonRipStart.LargeImages.Images"))))}); " is 124.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonRipStart.SmallImages.Images"))))}); " is 124.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonRipCancel.LargeImages.Images"))))}); " is 125.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.buttonRipCancel.ScreenTip.Image = ((System.Drawing.Image)(resources.GetObject("buttonRipCancel.ScreenTip.Image"))); " is 120.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonRipCancel.SmallImages.Images"))))}); " is 125.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonRipFolderSelect.SmallImages.Images"))))}); " is 131.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonConvertStart.LargeImages.Images"))))}); " is 128.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.buttonConvertStart.ScreenTip.Image = ((System.Drawing.Image)(resources.GetObject("buttonConvertStart.ScreenTip.Image"))); " is 126.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonConvertStart.SmallImages.Images"))))}); " is 128.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonConvertCancel.LargeImages.Images"))))}); " is 129.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.buttonConvertCancel.ScreenTip.Image = ((System.Drawing.Image)(resources.GetObject("buttonConvertCancel.ScreenTip.Image"))); " is 128.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonConvertCancel.SmallImages.Images"))))}); " is 129.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.buttonConvertFolderSelect.InformativenessMaximumLevel = "Elegant.Ui.RibbonGroupButtonInformativenessLevel:SmallImage"; " is 123.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonConvertFolderSelect.SmallImages.Images"))))}); " is 135.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonBurnStart.LargeImages.Images"))))}); " is 125.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.buttonBurnStart.ScreenTip.Image = ((System.Drawing.Image)(resources.GetObject("buttonBurnStart.ScreenTip.Image"))); " is 120.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonBurnStart.SmallImages.Images"))))}); " is 125.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonBurnCancel.LargeImages.Images"))))}); " is 126.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.buttonBurnCancel.ScreenTip.Image = ((System.Drawing.Image)(resources.GetObject("buttonBurnCancel.ScreenTip.Image"))); " is 122.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "            new Elegant.Ui.ControlImage("Normal"' ((System.Drawing.Image)(resources.GetObject("buttonBurnCancel.SmallImages.Images"))))}); " is 126.
Long Statement,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The length of the statement  "      this.comboBoxBurnerSpeed.SelectedIndexChanged += new System.EventHandler(this.comboBoxBurnerSpeed_SelectedIndexChanged); " is 120.
Long Statement,MPTagThat,MiscInfoControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\MiscInfoControl.cs,listViewNonMusicFiles_BeforeLabelEdit,The length of the statement  "      _savedImageSize = listViewNonMusicFiles.Items[e.Item].Text.Substring(listViewNonMusicFiles.Items[e.Item].Text.IndexOf("|")); " is 124.
Long Statement,MPTagThat,MiscInfoControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\MiscInfoControl.cs,listViewNonMusicFiles_AfterLabelEdit,The length of the statement  "        listViewNonMusicFiles.Items[e.Item].ToolTipText = string.Format("{0} | {1} {2} {3} {4}kb"' fi.FullName' fi.LastWriteTime.ToShortDateString()' " is 141.
Long Statement,MPTagThat,MiscInfoControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\MiscInfoControl.cs,InitializeComponent,The length of the statement  "      this.listViewNonMusicFiles.AfterLabelEdit += new System.Windows.Forms.LabelEditEventHandler(this.listViewNonMusicFiles_AfterLabelEdit); " is 135.
Long Statement,MPTagThat,MiscInfoControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\MiscInfoControl.cs,InitializeComponent,The length of the statement  "      this.listViewNonMusicFiles.BeforeLabelEdit += new System.Windows.Forms.LabelEditEventHandler(this.listViewNonMusicFiles_BeforeLabelEdit); " is 137.
Long Statement,MPTagThat,MiscInfoControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\MiscInfoControl.cs,InitializeComponent,The length of the statement  "      this.listViewNonMusicFiles.MouseDown += new System.Windows.Forms.MouseEventHandler(this.listViewNonMusicFiles_MouseDown); " is 121.
Long Statement,MPTagThat,MiscInfoControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\MiscInfoControl.cs,InitializeComponent,The length of the statement  "      this.listViewNonMusicFiles.MouseMove += new System.Windows.Forms.MouseEventHandler(this.listViewNonMusicFiles_MouseMove); " is 121.
Long Statement,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The length of the statement  "      System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(TreeViewControl)); " is 135.
Long Statement,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The length of the statement  "      this.treeViewPanel.CaptionFont = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 170.
Long Statement,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The length of the statement  "      this.treeViewFolderBrowser.DriveTypes = ((Raccoom.Windows.Forms.DriveTypes)((((Raccoom.Windows.Forms.DriveTypes.NoRootDirectory | Raccoom.Windows.Forms.DriveTypes.RemovableDisk)  " is 177.
Long Statement,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The length of the statement  "      this.treeViewFolderBrowser.SelectedDirectories = ((System.Collections.Specialized.StringCollection)(resources.GetObject("treeViewFolderBrowser.SelectedDirectories"))); " is 167.
Long Statement,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The length of the statement  "      this.treeViewFolderBrowser.AfterLabelEdit += new System.Windows.Forms.NodeLabelEditEventHandler(this.treeViewFolderBrowser_AfterLabelEdit); " is 139.
Long Statement,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The length of the statement  "      this.treeViewFolderBrowser.NodeMouseHover += new System.Windows.Forms.TreeNodeMouseHoverEventHandler(this.treeViewFolderBrowser_NodeMouseHover); " is 144.
Long Statement,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The length of the statement  "      this.treeViewFolderBrowser.BeforeSelect += new System.Windows.Forms.TreeViewCancelEventHandler(this.treeViewFolderBrowser_BeforeSelect); " is 136.
Long Statement,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The length of the statement  "      this.treeViewFolderBrowser.AfterSelect += new System.Windows.Forms.TreeViewEventHandler(this.treeViewFolderBrowser_AfterSelect); " is 128.
Long Statement,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The length of the statement  "      this.jumpToFolderPanel.CaptionFont = new System.Drawing.Font("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 174.
Long Statement,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The length of the statement  "      this.cbSelectedFolder.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left)  " is 149.
Long Statement,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The length of the statement  "      this.btJumpToFolder.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 150.
Long Statement,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The length of the statement  "      this.dataGridViewTagFilter.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)  " is 157.
Long Statement,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The length of the statement  "      this.dataGridViewTagFilter.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize; " is 127.
Long Statement,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The length of the statement  "      this.dataGridViewTagFilter.CellEndEdit += new System.Windows.Forms.DataGridViewCellEventHandler(this.dataGridViewTagFilter_CellEndEdit); " is 136.
Long Statement,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The length of the statement  "      this.dataGridViewTagFilter.CurrentCellDirtyStateChanged += new System.EventHandler(this.dataGridViewTagFilter_CurrentCellDirtyStateChanged); " is 140.
Long Statement,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The length of the statement  "      this.dataGridViewTagFilter.DataError += new System.Windows.Forms.DataGridViewDataErrorEventHandler(this.dataGridViewTagFilter_DataError); " is 137.
Long Statement,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The length of the statement  "      this.dataGridViewTagFilter.RowsRemoved += new System.Windows.Forms.DataGridViewRowsRemovedEventHandler(this.dataGridViewTagFilter_RowsRemoved); " is 143.
Long Statement,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The length of the statement  "      this.lbFileMask.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left))); " is 148.
Long Statement,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The length of the statement  "      this.tbFileMask.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)  " is 146.
Long Statement,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The length of the statement  "      this.cbListFormats.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)  " is 149.
Long Statement,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The length of the statement  "      this.optionsPanelLeft.CaptionFont = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 173.
Long Statement,MPTagThat.Commands,CmdConvert,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\CmdConvert.cs,Execute,The length of the statement  "        _msg.MessageData["tooltip"] = String.Format("{0}: {1}"' inputFile' _localisation.ToString("Conversion"' "OpenFileError")); " is 122.
Long Statement,MPTagThat.Commands,CmdConvert,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\CmdConvert.cs,Execute,The length of the statement  "        _msg.MessageData["tooltip"] = String.Format("{0}: {1}"' inputFile' _localisation.ToString("Conversion"' "EncodingFileError")); " is 126.
Long Statement,MPTagThat.Commands,CmdSave,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\CmdSave.cs,SaveTrack,The length of the statement  "          string originalFileName = track.FullFileName; // Need the original filename for database update' in case a rename happens " is 121.
Long Statement,MPTagThat.Commands,CmdReplayGain,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\CmdReplayGain.cs,Execute,The length of the statement  "      Log.Info("ReplayGain: Finished analysis. Gain: {0} Peak level: {1}"' titleGain.ToString(CultureInfo.InvariantCulture)' peak.ToString(CultureInfo.InvariantCulture)); " is 164.
Long Statement,MPTagThat.Commands,CmdBpm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\CmdBpm.cs,Execute,The length of the statement  "      float bpm = BassFx.BASS_FX_BPM_DecodeGet(stream' 0.0' len' 0' BASSFXBpm.BASS_FX_BPM_BKGRND | BASSFXBpm.BASS_FX_FREESOURCE | BASSFXBpm.BASS_FX_BPM_MULT2' " is 152.
Long Statement,MPTagThat.Commands,CmdGetCoverArt,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\CmdGetCoverArt.cs,Execute,The length of the statement  "            if (Options.MainSettings.ChangeCoverSize && Core.Common.Picture.ImageFromData(_folderThumb.Data).Width > Options.MainSettings.MaxCoverWidth) " is 140.
Long Statement,MPTagThat.Commands,CmdGetCoverArt,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\CmdGetCoverArt.cs,Execute,The length of the statement  "        if ((track.Pictures.Count == 0 || Options.MainSettings.OverwriteExistingCovers) && !Options.MainSettings.OnlySaveFolderThumb) " is 125.
Long Statement,MPTagThat.Commands,CmdGetCoverArt,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\CmdGetCoverArt.cs,Execute,The length of the statement  "            if (Options.MainSettings.ChangeCoverSize && Core.Common.Picture.ImageFromData(pic.Data).Width > Options.MainSettings.MaxCoverWidth) " is 131.
Long Statement,MPTagThat.Commands,CmdGetCoverArt,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\CmdGetCoverArt.cs,Execute,The length of the statement  "            if (Options.MainSettings.ChangeCoverSize && Core.Common.Picture.ImageFromData(pic.Data).Width > Options.MainSettings.MaxCoverWidth) " is 131.
Long Statement,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The length of the statement  "      this.lvSearchResults.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)  " is 151.
Long Statement,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The length of the statement  "      this.groupBoxMusicBrainzMultipleAlbums.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left)  " is 166.
Long Statement,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The length of the statement  "      this.btUpdate.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 147.
Long Statement,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The length of the statement  "      this.btClose.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 146.
Long Statement,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The length of the statement  "      this.gbSearchInfo.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left)  " is 145.
Long Statement,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The length of the statement  "      this.tbTitle.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left)  " is 140.
Long Statement,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The length of the statement  "      this.tbArtist.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left)  " is 141.
Long Statement,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,FillResults,The length of the statement  "				var albumSize = (album.CoverWidth == "0" || album.CoverWidth == "") ? " " : string.Format(" {0}x{1} "' album.CoverWidth' album.CoverHeight); " is 140.
Long Statement,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The length of the statement  "      this.lvSearchResults.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)  " is 151.
Long Statement,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The length of the statement  "      this.btSearch.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 147.
Long Statement,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The length of the statement  "      this.lblAlbum.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 158.
Long Statement,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The length of the statement  "      this.lblArtist.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 159.
Long Statement,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The length of the statement  "      this.btUpdate.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 147.
Long Statement,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The length of the statement  "      this.btClose.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 146.
Long Statement,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The length of the statement  "      this.btCancelAll.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 150.
Long Statement,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The length of the statement  "      System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(About)); " is 125.
Long Statement,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The length of the statement  "      this.lbAppTitle.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 160.
Long Statement,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The length of the statement  "      this.lbLinkForum.LinkClicked += new System.Windows.Forms.LinkLabelLinkClickedEventHandler(this.lbLinkForum_LinkClicked); " is 120.
Long Statement,MPTagThat.Dialogues,ColumnSelect,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\ColumnSelect.cs,InitializeComponent,The length of the statement  "      this.btOk.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 143.
Long Statement,MPTagThat.Dialogues,ColumnSelect,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\ColumnSelect.cs,InitializeComponent,The length of the statement  "      this.btCancel.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 147.
Long Statement,MPTagThat.Dialogues,ColumnSelect,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\ColumnSelect.cs,InitializeComponent,The length of the statement  "      this.lvColumns.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom) " is 145.
Long Statement,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The length of the statement  "      this.tabControlFindReplace.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)  " is 157.
Long Statement,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The length of the statement  "      this.buttonReplaceAll.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 155.
Long Statement,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The length of the statement  "      this.buttonReplace.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 152.
Long Statement,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The length of the statement  "      this.buttonClose.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 150.
Long Statement,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The length of the statement  "      this.labelHeader.Font = new System.Drawing.Font("Microsoft Sans Serif"' 12F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 159.
Long Statement,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The length of the statement  "      this.buttonFindNext.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 153.
Long Statement,MPTagThat.Dialogues,Preview,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\Preview.cs,InitializeComponent,The length of the statement  "      this.dataGridViewPreview.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize; " is 125.
Long Statement,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The length of the statement  "      System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(SplashForm)); " is 130.
Long Statement,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The length of the statement  "      this.label1.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 156.
Long Statement,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The length of the statement  "      this.label2.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 156.
Long Statement,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The length of the statement  "      this.lbVersion.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 159.
Long Statement,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The length of the statement  "      this.lbDate.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 156.
Long Statement,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The length of the statement  "      this.lbStatus.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 158.
Long Statement,MPTagThat.Dialogues,SwitchDatabase,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SwitchDatabase.cs,InitializeComponent,The length of the statement  "      System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(SwitchDatabase)); " is 134.
Long Statement,MPTagThat.Dialogues,SwitchDatabase,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SwitchDatabase.cs,InitializeComponent,The length of the statement  "      this.dataGridViewDatabases.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize; " is 127.
Long Statement,MPTagThat.Dialogues,SwitchDatabase,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SwitchDatabase.cs,InitializeComponent,The length of the statement  "      this.dataGridViewDatabases.CellContentClick += new System.Windows.Forms.DataGridViewCellEventHandler(this.dataGridViewDatabases_CellContentClick); " is 146.
Long Statement,MPTagThat.Dialogues,SwitchDatabase,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SwitchDatabase.cs,InitializeComponent,The length of the statement  "      this.dataGridViewDatabases.DataError += new System.Windows.Forms.DataGridViewDataErrorEventHandler(this.dataGridViewDatabases_DataError); " is 137.
Long Statement,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The length of the statement  "      this.tabControlConversion.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)  " is 156.
Long Statement,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The length of the statement  "      this.buttonConvert.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 152.
Long Statement,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The length of the statement  "      this.buttonCancel.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 151.
Long Statement,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The length of the statement  "      this.labelHeader.Font = new System.Drawing.Font("Microsoft Sans Serif"' 12F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 159.
Long Statement,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The length of the statement  "      this.groupBoxParm.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)  " is 148.
Long Statement,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The length of the statement  "      this.btApply.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 146.
Long Statement,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The length of the statement  "      this.btCancel.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 147.
Long Statement,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The length of the statement  "      this.labelHeader.Font = new System.Drawing.Font("Microsoft Sans Serif"' 12F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 159.
Long Statement,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The length of the statement  "      this.GroupBoxFormat.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left)  " is 147.
Long Statement,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The length of the statement  "      this.tabControl1.SelectedTabPageChanged += new Elegant.Ui.TabPageChangedEventHandler(this.tabControl1_SelectedTabPageChanged); " is 126.
Long Statement,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The length of the statement  "      this.lvAlbumTracks.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom) " is 148.
Long Statement,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The length of the statement  "      this.lvDiscTracks.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom) " is 148.
Long Statement,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The length of the statement  "      this.btCancel.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 147.
Long Statement,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The length of the statement  "      this.btContinue.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 149.
Long Statement,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The length of the statement  "      this.btUp.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 140.
Long Statement,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The length of the statement  "      this.btDown.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 142.
Long Statement,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The length of the statement  "      this.labelHeader.Font = new System.Drawing.Font("Microsoft Sans Serif"' 12F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 159.
Long Statement,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The length of the statement  "      this.GroupBoxAlbumDetails.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 153.
Long Statement,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The length of the statement  "      this.pictureBoxCover.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 151.
Long Statement,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The length of the statement  "      this.cbGenre.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 140.
Long Statement,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The length of the statement  "      this.tbAlbum.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 140.
Long Statement,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The length of the statement  "      this.tbArtist.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 141.
Long Statement,MPTagThat.InternetLookup,AlbumSearchResult,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumSearchResult.cs,InitializeComponent,The length of the statement  "      this.lvAlbumSearchResult.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom) " is 155.
Long Statement,MPTagThat.InternetLookup,AlbumSearchResult,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumSearchResult.cs,InitializeComponent,The length of the statement  "      this.lvAlbumSearchResult.MouseDoubleClick += new System.Windows.Forms.MouseEventHandler(this.lvAlbumSearchResult_MouseDoubleClick); " is 131.
Long Statement,MPTagThat.InternetLookup,AlbumSearchResult,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumSearchResult.cs,InitializeComponent,The length of the statement  "      this.btCancel.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 147.
Long Statement,MPTagThat.InternetLookup,AlbumSearchResult,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumSearchResult.cs,InitializeComponent,The length of the statement  "      this.btContinue.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 149.
Long Statement,MPTagThat.InternetLookup,AlbumSearchResult,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumSearchResult.cs,InitializeComponent,The length of the statement  "      this.labelHeader.Font = new System.Drawing.Font("Microsoft Sans Serif"' 12F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 159.
Long Statement,MPTagThat.InternetLookup,ArtistAlbumDialog,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\ArtistAlbumDialog.cs,InitializeComponent,The length of the statement  "      this.textBoxArtist.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 146.
Long Statement,MPTagThat.InternetLookup,ArtistAlbumDialog,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\ArtistAlbumDialog.cs,InitializeComponent,The length of the statement  "      this.textBoxAlbum.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 145.
Long Statement,MPTagThat.InternetLookup,ArtistAlbumDialog,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\ArtistAlbumDialog.cs,InitializeComponent,The length of the statement  "      this.btContinue.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 149.
Long Statement,MPTagThat.InternetLookup,ArtistAlbumDialog,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\ArtistAlbumDialog.cs,InitializeComponent,The length of the statement  "      this.btCancel.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 147.
Long Statement,MPTagThat.InternetLookup,ArtistAlbumDialog,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\ArtistAlbumDialog.cs,InitializeComponent,The length of the statement  "      this.labelHeader.Font = new System.Drawing.Font("Microsoft Sans Serif"' 12F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 159.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,FillForm,The length of the statement  "            dataGridViewPicture.Rows.Add(new object[] { picture.Description' Enum.Format(typeof(PictureType)' picture.Type' "G") }); " is 120.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,btApply_Click,The length of the statement  "              PopmFrame rating = new PopmFrame(ratingRow.Cells[0].Value.ToString()' Convert.ToInt32(ratingRow.Cells[1].Value.ToString())' " is 123.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,SearchAutocompleteAlbumArtists,The length of the statement  "      cbAlbumArtist.Items.AddRange(ServiceScope.Get<IMusicDatabase>().SearchAutocompleteArtists(cbAlbumArtist.Text).ToArray()); " is 121.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(TagEditControl)); " is 134.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.tabControlTagEdit.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 167.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.tabPageMain.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 161.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.dataGridViewComment.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize; " is 125.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.dataGridViewComment.CellClick += new System.Windows.Forms.DataGridViewCellEventHandler(this.dataGridViewComment_CellClick); " is 128.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.lblGenre.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 158.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.cbGenre.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 157.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.ckGenre.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 157.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.groupBoxArtist.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 164.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.tbNumDiscs.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 160.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.ckDisk.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 156.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.lblDisc.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 157.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.tbDisc.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 156.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.ckBPM.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 155.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.lblBPM.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 156.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.tbBPM.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 155.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.tbNumTracks.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 161.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.ckYear.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 156.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.ckTrack.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 157.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.lblAlbumArtist.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 164.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.ckArtist.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 158.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.lblTrack.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 158.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.tbTrack.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 157.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.ckAlbumArtist.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 163.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.lblArtist.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 159.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.tbAlbum.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 157.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.ckAlbum.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 157.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.lblYear.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 157.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.tbYear.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 156.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.lblTitle.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 158.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.lblAlbum.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 158.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.ckTitle.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 157.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.tbTitle.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 157.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.tabPagePictures.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 165.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.dataGridViewPicture.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize; " is 125.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.dataGridViewPicture.CellClick += new System.Windows.Forms.DataGridViewCellEventHandler(this.dataGridViewPicture_CellClick); " is 128.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.lblPicType.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 160.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.cbPicType.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 159.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.tbPicDesc.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 159.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.lblPicDesc.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 160.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.tbTrackLength.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 163.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.lblTRackLength.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 164.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.ckMediaType.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 161.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.lblMediaType.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 162.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.tbAlbumArtistSort.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 167.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.ckAlbumArtistSort.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 167.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.lblAlbumArtistSort.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 168.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.tbTitleSort.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 161.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.ckTitleSort.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 161.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.lblTitleSort.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 162.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.tbAlbumSort.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 161.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.ckAlbumSort.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 161.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.lblAlbumSort.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 162.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.tbArtistSort.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 162.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.ckArtistSort.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 162.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.lblArtistSort.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 163.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.tbSubTitle.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 160.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.ckSubTitle.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 160.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.lblSubTitle.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 161.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.tbContentGroup.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 164.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.ckContentGroup.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 164.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.lblContentGroup.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 165.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.tbCopyright.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 161.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.ckCopyright.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 161.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.lblCopyright.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 162.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.tbEncodedBy.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 161.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.ckEncodedBy.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 161.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.lblEncodedBy.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 162.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.tbPublisher.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 161.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.ckPublisher.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 161.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.lblPublisher.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 162.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.tbTextWriter.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 162.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.ckTextWriter.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 162.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.lblTextWriter.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 163.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.tbInterpretedBy.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 165.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.ckInterpretedBy.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 165.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.lblInterpretedBy.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 166.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.tbComposer.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 160.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.ckComposer.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 160.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.lblComposer.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 161.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.tbConductor.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 161.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.ckConductor.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 161.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.lblConductor.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 162.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.tbOriginalRelease.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 167.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.ckOriginalRelease.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 167.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.lblOriginalRelease.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 168.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.tbOriginalOwner.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 165.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.ckOriginalOwner.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 165.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.lblOriginalOwner.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 166.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.tbOriginalArtist.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 166.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.ckOriginalArtist.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 166.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.lblOriginalArtist.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 167.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.tbOriginalLyricsWriter.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 172.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.ckOriginalLyricsWriter.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 172.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.lblOriginalLyricsWriter.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 173.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.tbOriginalFileName.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 168.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.ckOriginalFileName.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 168.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.lblOriginalFileName.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 169.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.tbOriginalAlbum.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 165.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.ckOriginalAlbum.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 165.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.lblOriginalAlbum.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 166.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.lblID3V24only.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 163.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.ckInvolvedMusician.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 168.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.dataGridViewMusician.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize; " is 126.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.tbMusicianName.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 164.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.lblMusicianName.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 165.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.tbMusicianInstrument.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 170.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.lblMusicianInstrument.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 171.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.ckInvolvedPerson.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 166.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.dataGridViewInvolvedPeople.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize; " is 132.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.tbInvolvedPersonName.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 170.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.lblInvolvedPersonName.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 171.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.tbInvolvedPersonFunction.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 174.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.lblInvolvedPersonFunction.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 175.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.tbCommercialInformationUrl.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 176.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.ckCommercialInformationUrl.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 176.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.lblCommercialInformationUrl.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 177.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.tbOfficialPublisherUrl.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 172.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.ckOfficialPublisherUrl.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 172.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.lblOfficialPublisherUrl.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 173.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.tbOfficialPaymentUrl.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 170.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.ckOfficialPaymentUrl.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 170.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.lblOfficialPaymentUrl.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 171.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.tbOfficialInternetRadioUrl.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 176.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.ckOfficialInternetRadioUrl.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 176.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.lblOfficialInternetRadioUrl.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 177.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.tbOfficialAudioSourceUrl.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 174.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.ckOfficialAudioSourceUrl.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 174.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.lblOfficialAudioSourceUrl.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 175.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.tbOfficialArtistUrl.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 169.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.ckOfficialArtistUrl.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 169.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.lblOfficialArtistUrl.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 170.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.tbOfficialAudioFileUrl.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 172.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.ckOfficialAudioFileUrl.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 172.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.lbOfficialAudioFileUrl.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 172.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.tbCopyrightUrl.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 164.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.ckCopyrightUrl.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 164.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.lblCopyrightUrl.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 165.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.dataGridViewLyrics.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize; " is 124.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.dataGridViewLyrics.CellClick += new System.Windows.Forms.DataGridViewCellEventHandler(this.dataGridViewLyrics_CellClick); " is 126.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.dataGridViewRating.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize; " is 124.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.dataGridViewRating.CellClick += new System.Windows.Forms.DataGridViewCellEventHandler(this.dataGridViewRating_CellClick); " is 126.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      dataGridViewCellStyle1.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(215))))' ((int)(((byte)(225))))' ((int)(((byte)(245))))); " is 137.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.dataGridViewUserFrames.ClipboardCopyMode = System.Windows.Forms.DataGridViewClipboardCopyMode.EnableWithoutHeaderText; " is 123.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.dataGridViewUserFrames.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize; " is 128.
Long Statement,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The length of the statement  "      this.lbEditedFile.Font = new System.Drawing.Font("Microsoft Sans Serif"' 12F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 160.
Long Statement,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The length of the statement  "      this.tbTitle.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left)  " is 140.
Long Statement,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The length of the statement  "      this.lvSearchResults.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)  " is 151.
Long Statement,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The length of the statement  "      this.groupBox1.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)  " is 145.
Long Statement,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The length of the statement  "      this.btUpdate.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 147.
Long Statement,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The length of the statement  "      this.tbArtist.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left)  " is 141.
Long Statement,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The length of the statement  "      this.btClose.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 146.
Long Statement,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The length of the statement  "      this.tbLyrics.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left)  " is 141.
Long Statement,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The length of the statement  "      this.groupBox2.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left)  " is 142.
Long Statement,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The length of the statement  "      this.gbSearchInfo.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left)  " is 145.
Long Statement,MPTagThat.GridView,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\LyricsSearch.cs,threadFinished,The length of the statement  "      // Due to a bug' we first need the view to readonly' otherwise the checkbox in the first column is not displayed as checked. " is 124.
Long Statement,MPTagThat.GridView,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\LyricsSearch.cs,InitializeComponent,The length of the statement  "      dataGridViewCellStyle1.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(215))))' ((int)(((byte)(225))))' ((int)(((byte)(245))))); " is 137.
Long Statement,MPTagThat.GridView,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\LyricsSearch.cs,InitializeComponent,The length of the statement  "      this.dataGridViewLyrics.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom) " is 154.
Long Statement,MPTagThat.GridView,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\LyricsSearch.cs,InitializeComponent,The length of the statement  "      this.dataGridViewLyrics.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize; " is 124.
Long Statement,MPTagThat.GridView,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\LyricsSearch.cs,InitializeComponent,The length of the statement  "      this.btUpdate.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 147.
Long Statement,MPTagThat.GridView,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\LyricsSearch.cs,InitializeComponent,The length of the statement  "      this.btCancel.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 147.
Long Statement,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,InitializeComponent,The length of the statement  "      this.lbMediaInfo.Font = new System.Drawing.Font("Microsoft Sans Serif"' 12F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 159.
Long Statement,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,InitializeComponent,The length of the statement  "      this.lbUsed.Font = new System.Drawing.Font("Microsoft Sans Serif"' 12F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 154.
Long Statement,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,InitializeComponent,The length of the statement  "      this.lbBurningStatus.Font = new System.Drawing.Font("Microsoft Sans Serif"' 12F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 163.
Long Statement,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,InitializeComponent,The length of the statement  "      dataGridViewCellStyle1.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(215))))' ((int)(((byte)(225))))' ((int)(((byte)(245))))); " is 137.
Long Statement,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,InitializeComponent,The length of the statement  "      dataGridViewCellStyle2.Font = new System.Drawing.Font("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 167.
Long Statement,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,InitializeComponent,The length of the statement  "      this.dataGridViewBurn.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize; " is 122.
Long Statement,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,InitializeComponent,The length of the statement  "      this.dataGridViewBurn.CellContentClick += new System.Windows.Forms.DataGridViewCellEventHandler(this.dataGridViewBurn_CellContentClick); " is 136.
Long Statement,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,InitializeComponent,The length of the statement  "      this.dataGridViewBurn.CellPainting += new System.Windows.Forms.DataGridViewCellPaintingEventHandler(this.OnCellPainting); " is 121.
Long Statement,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,InitializeComponent,The length of the statement  "      this.dataGridViewBurn.RowsAdded += new System.Windows.Forms.DataGridViewRowsAddedEventHandler(this.dataGridViewBurn_RowsAdded); " is 127.
Long Statement,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,InitializeComponent,The length of the statement  "      this.dataGridViewBurn.RowsRemoved += new System.Windows.Forms.DataGridViewRowsRemovedEventHandler(this.dataGridViewBurn_RowsRemoved); " is 133.
Long Statement,MPTagThat.GridView,GridViewConvert,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Conversion\GridViewConvert.cs,ConversionThread,The length of the statement  "        MessageBox.Show(_localisation.ToString("Conversion"' "ErrorDirectory")' _localisation.ToString("message"' "Error_Title")' MessageBoxButtons.OK); " is 144.
Long Statement,MPTagThat.GridView,GridViewConvert,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Conversion\GridViewConvert.cs,InitializeComponent,The length of the statement  "      dataGridViewCellStyle1.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(215))))' ((int)(((byte)(225))))' ((int)(((byte)(245))))); " is 137.
Long Statement,MPTagThat.GridView,GridViewConvert,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Conversion\GridViewConvert.cs,InitializeComponent,The length of the statement  "      dataGridViewCellStyle2.Font = new System.Drawing.Font("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 167.
Long Statement,MPTagThat.GridView,GridViewConvert,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Conversion\GridViewConvert.cs,InitializeComponent,The length of the statement  "      this.dataGridViewConvert.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize; " is 125.
Long Statement,MPTagThat.GridView,FreeDBMultiCDSelect,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\FreeDBMultiCDSelect.cs,InitializeComponent,The length of the statement  "        this.listBoxCDMatches.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom) " is 152.
Long Statement,MPTagThat.GridView,FreeDBMultiCDSelect,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\FreeDBMultiCDSelect.cs,InitializeComponent,The length of the statement  "        this.buttonOK.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 147.
Long Statement,MPTagThat.GridView,FreeDBMultiCDSelect,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\FreeDBMultiCDSelect.cs,InitializeComponent,The length of the statement  "        this.buttonCancel.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 151.
Long Statement,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The length of the statement  "      this.lbRippingStatus.Font = new System.Drawing.Font("Microsoft Sans Serif"' 12F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 163.
Long Statement,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The length of the statement  "      this.lbYear.Font = new System.Drawing.Font("Microsoft Sans Serif"' 12F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 154.
Long Statement,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The length of the statement  "      this.lbGenre.Font = new System.Drawing.Font("Microsoft Sans Serif"' 12F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 155.
Long Statement,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The length of the statement  "      this.lbAlbum.Font = new System.Drawing.Font("Microsoft Sans Serif"' 12F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 155.
Long Statement,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The length of the statement  "      this.lbAlbumArtist.Font = new System.Drawing.Font("Microsoft Sans Serif"' 12F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 161.
Long Statement,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The length of the statement  "      dataGridViewCellStyle1.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(215))))' ((int)(((byte)(225))))' ((int)(((byte)(245))))); " is 137.
Long Statement,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The length of the statement  "      this.dataGridViewRip.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize; " is 121.
Long Statement,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,InitializeComponent,The length of the statement  "      dataGridViewCellStyle1.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(215))))' ((int)(((byte)(225))))' ((int)(((byte)(245))))); " is 137.
Long Statement,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,InitializeComponent,The length of the statement  "      this.lookupTitlleOnGoogleImagesToolStripMenuItem.Click += new System.EventHandler(this.lookupTitlleOnGoogleImagesToolStripMenuItem_Click); " is 138.
Long Statement,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,Organise,The length of the statement  "                _main.TracksGridView.AddErrorMessage(row' string.Format("{0}: {1}"' newFilename' localisation.ToString("organise"' "FileExists"))); " is 131.
Long Statement,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,Organise,The length of the statement  "            // then continue' as this would lead in the source file to be deleted first and then there's nothing' which could be copied " is 123.
Long Statement,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,Organise,The length of the statement  "              _main.TracksGridView.AddErrorMessage(row' string.Format("{0}: {1}"' newFilename' localisation.ToString("organise"' "SameFile"))); " is 129.
Long Statement,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The length of the statement  "      this.groupBoxParm.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Left | System.Windows.Forms.AnchorStyles.Right))); " is 149.
Long Statement,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The length of the statement  "      this.groupBoxOptions.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Left | System.Windows.Forms.AnchorStyles.Right))); " is 152.
Long Statement,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The length of the statement  "      this.labelHeader.Font = new System.Drawing.Font("Microsoft Sans Serif"' 12F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 159.
Long Statement,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The length of the statement  "      this.groupBoxSelection.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left)  " is 150.
Long Statement,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The length of the statement  "      this.tabControl1.SelectedTabPageChanged += new Elegant.Ui.TabPageChangedEventHandler(this.tabControl1_SelectedTabPageChanged); " is 126.
Long Statement,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The length of the statement  "      this.btApply.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 146.
Long Statement,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The length of the statement  "      this.btCancel.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 147.
Long Statement,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The length of the statement  "      this.groupBoxParm.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)  " is 148.
Long Statement,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The length of the statement  "      this.labelHeader.Font = new System.Drawing.Font("Microsoft Sans Serif"' 12F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 159.
Long Statement,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The length of the statement  "      this.GroupBoxFormat.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left)  " is 147.
Long Statement,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The length of the statement  "      this.cbFormat.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left)  " is 141.
Long Statement,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The length of the statement  "      this.tabControl1.SelectedTabPageChanged += new Elegant.Ui.TabPageChangedEventHandler(this.tabControl1_SelectedTabPageChanged); " is 126.
Long Statement,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The length of the statement  "      System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(PlayerControl)); " is 133.
Complex Conditional,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,LoadSettings,The conditional expression  "_formLocation.X < 0 || _formLocation.Y < 0 ||            _formLocation.X > Screen.PrimaryScreen.Bounds.Width || _formLocation.Y > Screen.PrimaryScreen.Bounds.Height"  is complex.
Complex Conditional,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,LoadSettings,The conditional expression  "_formSize.Width < 0 || _formSize.Height < 0 ||            _formSize.Width > Screen.PrimaryScreen.Bounds.Width || _formSize.Height > Screen.PrimaryScreen.Bounds.Height"  is complex.
Complex Conditional,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,txtbox_KeyPress,The conditional expression  "!Char.IsDigit(keyChar) // 0 - 9            &&            keyChar != 8 // backspace            &&            keyChar != 13 // enter            &&            keyChar != '/'"  is complex.
Complex Conditional,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,tracksGrid_QueryContinueDrag,The conditional expression  "((MousePosition.X - _screenOffset.X) < f.DesktopBounds.Left) ||              ((MousePosition.X - _screenOffset.X) > f.DesktopBounds.Right + _main.Player.PlayListForm.Width) ||              ((MousePosition.Y - _screenOffset.Y) < f.DesktopBounds.Top) ||              ((MousePosition.Y - _screenOffset.Y) > f.DesktopBounds.Bottom)"  is complex.
Empty Catch Block,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,Main_Load,The method has an empty catch block.
Empty Catch Block,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,SetGalleryItem,The method has an empty catch block.
Empty Catch Block,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,SetRecentFolder,The method has an empty catch block.
Empty Catch Block,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,buttonSettingsApply_Click,The method has an empty catch block.
Empty Catch Block,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,DataGridView_SelectionChanged,The method has an empty catch block.
Empty Catch Block,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,ExecuteDatabaseQuery_Executed,The method has an empty catch block.
Empty Catch Block,MPTagThat,MiscInfoControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\MiscInfoControl.cs,AddNonMusicFiles,The method has an empty catch block.
Empty Catch Block,MPTagThat,MiscInfoControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\MiscInfoControl.cs,ProcessCmdKey,The method has an empty catch block.
Empty Catch Block,MPTagThat,Program,C:\repos\MediaPortal_MPTagThat\MPTagThat\Program.cs,Main,The method has an empty catch block.
Empty Catch Block,MPTagThat,Program,C:\repos\MediaPortal_MPTagThat\MPTagThat\Program.cs,Main,The method has an empty catch block.
Empty Catch Block,MPTagThat,Program,C:\repos\MediaPortal_MPTagThat\MPTagThat\Program.cs,ReadConfig,The method has an empty catch block.
Empty Catch Block,MPTagThat,Program,C:\repos\MediaPortal_MPTagThat\MPTagThat\Program.cs,CheckPath,The method has an empty catch block.
Empty Catch Block,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,DeleteFolder,The method has an empty catch block.
Empty Catch Block,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,DeleteFolder,The method has an empty catch block.
Empty Catch Block,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,DeleteFolder,The method has an empty catch block.
Empty Catch Block,MPTagThat.Commands,CmdGetCoverArt,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\CmdGetCoverArt.cs,Execute,The method has an empty catch block.
Empty Catch Block,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,AddImageToList,The method has an empty catch block.
Empty Catch Block,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,FileName2TagPreview,The method has an empty catch block.
Empty Catch Block,MPTagThat.InternetLookup,InternetLookup,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\InternetLookup.cs,ShowAlbumDetails,The method has an empty catch block.
Empty Catch Block,MPTagThat.InternetLookup,InternetLookup,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\InternetLookup.cs,ShowAlbumDetails,The method has an empty catch block.
Empty Catch Block,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,btApply_Click,The method has an empty catch block.
Empty Catch Block,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,btApply_Click,The method has an empty catch block.
Empty Catch Block,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,btApply_Click,The method has an empty catch block.
Empty Catch Block,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,btApply_Click,The method has an empty catch block.
Empty Catch Block,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,btApply_Click,The method has an empty catch block.
Empty Catch Block,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,btApply_Click,The method has an empty catch block.
Empty Catch Block,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,CleanupBurnDirectory,The method has an empty catch block.
Empty Catch Block,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,DeleteTracks,The method has an empty catch block.
Empty Catch Block,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,FolderScan,The method has an empty catch block.
Empty Catch Block,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,FolderScan,The method has an empty catch block.
Empty Catch Block,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,DatabaseScan,The method has an empty catch block.
Empty Catch Block,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,DatabaseScan,The method has an empty catch block.
Empty Catch Block,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,tracksGrid_ColumnWidthChanged,The method has an empty catch block.
Empty Catch Block,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,OrganiseFilesPreview,The method has an empty catch block.
Empty Catch Block,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,Tag2FileNamePreview,The method has an empty catch block.
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,Main_Load,The following statement contains a magic number: try        {          _splashScreen = new SplashScreen();          _splashScreen.Run();          _splashScreen.SetInformation(localisation.ToString("splash"' "Startup"));          log.Info("Main: Loading Main form");            // Listen to Messages          IMessageQueue queueMessage = ServiceScope.Get<IMessageBroker>().GetOrCreate("message");          queueMessage.OnMessageReceive += OnMessageReceive;            // Add the Ribbon Control to the Top Panel          _splashScreen.SetInformation(localisation.ToString("splash"' "AddRibbon"));            _initialising = true;            #region Setup Ribbon            log.Info("Initialising Ribbon");            ribbon.SetStyle(ControlStyles.DoubleBuffer |               ControlStyles.OptimizedDoubleBuffer |               ControlStyles.UserPaint |               ControlStyles.AllPaintingInWmPaint' true);            // Register the Ribbon Button Events          RegisterCommands();            // Register Ribbon KeyTips          RegisterKeyTips();            // Load Recent Folders          List<PinItem> recentPlacesPinItems = new List<PinItem>();            foreach (string folderItem in Options.MainSettings.RecentFolders)          {            try            {              string directoryName = Path.GetDirectoryName(folderItem);              string folderName = Path.GetFileName(directoryName);              if (string.IsNullOrEmpty(folderName))                folderName = directoryName;                PinItem pinItem = new PinItem(                folderName'                directoryName'                Resources.RecentFolder_Large'                false'                directoryName);                recentPlacesPinItems.Add(pinItem);            }            catch (ArgumentException)            {              }          }            pinListRecentFolders.BeginInit();          pinListRecentFolders.Items.AddRange(recentPlacesPinItems.ToArray());          pinListRecentFolders.EndInit();            // Load the available Scripts          int i = 0;          comboBoxScripts.Items.Clear();          ArrayList scripts = null;            if (Options.MainSettings.ActiveScript == "")          {            Options.MainSettings.ActiveScript = "Switch Artist";          }            scripts = ServiceScope.Get<IScriptManager>().GetScripts();          i = 0;          foreach (string[] item in scripts)          {            comboBoxScripts.Items.Add(new Item(item[1]' item[0]' item[2]));            if (item[1] == Options.MainSettings.ActiveScript)            {              comboBoxScripts.SelectedIndex = i;            }            i++;          }            comboBoxRipEncoder.Items.Add(new Item("MP3 Encoder"' "mp3"' ""));          comboBoxRipEncoder.Items.Add(new Item("OGG Encoder"' "ogg"' ""));          comboBoxRipEncoder.Items.Add(new Item("FLAC Encoder"' "flac"' ""));          comboBoxRipEncoder.Items.Add(new Item("AAC Encoder"' "m4a"' ""));          comboBoxRipEncoder.Items.Add(new Item("WMA Encoder"' "wma"' ""));          comboBoxRipEncoder.Items.Add(new Item("WAV Encoder"' "wav"' ""));          comboBoxRipEncoder.Items.Add(new Item("MusePack Encoder"' "mpc"' ""));          comboBoxRipEncoder.Items.Add(new Item("WavPack Encoder"' "wv"' ""));            comboBoxConvertEncoder.Items.Add(new Item("MP3 Encoder"' "mp3"' ""));          comboBoxConvertEncoder.Items.Add(new Item("OGG Encoder"' "ogg"' ""));          comboBoxConvertEncoder.Items.Add(new Item("FLAC Encoder"' "flac"' ""));          comboBoxConvertEncoder.Items.Add(new Item("AAC Encoder"' "m4a"' ""));          comboBoxConvertEncoder.Items.Add(new Item("WMA Encoder"' "wma"' ""));          comboBoxConvertEncoder.Items.Add(new Item("WAV Encoder"' "wav"' ""));          comboBoxConvertEncoder.Items.Add(new Item("MusePack Encoder"' "mpc"' ""));          comboBoxConvertEncoder.Items.Add(new Item("WavPack Encoder"' "wv"' ""));            i = 0;          foreach (Item item in comboBoxRipEncoder.Items)          {            if ((string)item.Value == Options.MainSettings.RipEncoder)            {              comboBoxRipEncoder.SelectedIndex = i;              break;            }            i++;          }            i = 0;          foreach (Item item in comboBoxConvertEncoder.Items)          {            if ((string)item.Value == Options.MainSettings.LastConversionEncoderUsed)            {              comboBoxConvertEncoder.SelectedIndex = i;              break;            }            i++;          }            textBoxRipOutputFolder.Text = Options.MainSettings.RipTargetFolder;          ribbon.CurrentTabPage = ribbonTabPageTag;          ribbon.CustomTitleBarEnabled = true;          ribbon.Minimized = false;          log.Info("Finished Initialising Ribbon");            #endregion            #region Setup Grids            log.Debug("Main: Setup Grid");          _splashScreen.SetInformation(localisation.ToString("splash"' "AddGrids"));          // Add the Grids to the Main Form          _gridViewControl = new GridViewTracks();          _gridViewBurn = new GridViewBurn(this);          _gridViewRip = new GridViewRip(this);          _gridViewConvert = new GridViewConvert(this);          _playerControl = new PlayerControl();            //           // gridViewControl          //           _gridViewControl.AutoScroll = true;          _gridViewControl.Changed = false;          _gridViewControl.Dock = DockStyle.Fill;          _gridViewControl.Location = new Point(0' 0);          _gridViewControl.Name = "gridViewControl";          _gridViewControl.Size = new Size(676' 470);          _gridViewControl.TabIndex = 8;          //           // gridViewBurn          //           _gridViewBurn.Dock = DockStyle.Fill;          _gridViewBurn.Location = new Point(0' 0);          _gridViewBurn.Name = "gridViewBurn";          _gridViewBurn.Size = new Size(676' 470);          _gridViewBurn.TabIndex = 9;          _gridViewBurn.Visible = false;          //          // gridViewRip          //           _gridViewRip.Dock = DockStyle.Fill;          _gridViewRip.Location = new Point(0' 0);          _gridViewRip.Name = "gridViewRip";          _gridViewRip.Size = new Size(676' 470);          _gridViewRip.TabIndex = 9;          _gridViewRip.Visible = false;          //          // gridViewConvert          //           _gridViewConvert.Dock = DockStyle.Fill;          _gridViewConvert.Location = new Point(0' 0);          _gridViewConvert.Name = "gridViewConvert";          _gridViewConvert.Size = new Size(676' 470);          _gridViewConvert.TabIndex = 9;          _gridViewConvert.Visible = false;          //           // playerControl          //           _playerControl.Dock = DockStyle.Fill;          _playerControl.Location = new Point(0' 0);          _playerControl.Name = "playerControl";          _playerControl.Size = new Size(1008' 68);          _playerControl.TabIndex = 0;            playerPanel.Controls.Add(_playerControl);            // Set reference to Main' so that we may use the ErrorGrid          _gridViewControl.SetMainRef(this);            #endregion            // Setup Treeview          _treeViewControl = new TreeViewControl(this);          _treeViewControl.Dock = DockStyle.Fill;          panelLeftTop.Controls.Add(_treeViewControl);            // Setup Misc Info Control          _miscInfoControl = new MiscInfoControl();          _miscInfoControl.Dock = DockStyle.Fill;          panelRight.Controls.Add(_miscInfoControl);            // Setup TagEdit Control          _tagEditControl = new TagEditControl(this);            // Now position the Tracklist and Tagedit Panel          PositionTrackList();            PopulateScriptsCombo();            // Start Listening for Media Changes          ServiceScope.Get<IMediaChangeMonitor>().StartListening(Handle);            //          // Music Database          //          _musicDatabase = ServiceScope.Get<IMusicDatabase>();            foreach (string musicShare in Options.MainSettings.MusicShares)          {            comboBoxMusicFolder.Items.Add(musicShare);          }          if (comboBoxMusicFolder.Items.Count > 0)          {            comboBoxMusicFolder.SelectedIndex = 0;          }            foreach (string query in Options.MainSettings.MusicDatabaseQueries)          {            comboBoxDatabaseQuery.Items.Add(query);          }            // Load BASS          LoadBass();            // Localise the Screens          log.Info("Main: Localisation");          _splashScreen.SetInformation(localisation.ToString("splash"' "Localisation"));          LocaliseScreen();            // Load the Settings          _splashScreen.SetInformation(localisation.ToString("splash"' "LoadSettings"));          LoadSettings();            // Populate the Treeview with the directories found          _treeViewControl.Init();          _treeViewControl.TreeView.Populate();          _treeViewControl.TreeView.Nodes[0].Expand();          _treeViewControl.TreeView.ShowFolder(_selectedDirectory);            _splashScreen.Stop();            Theme = Options.Themes[Options.MainSettings.Theme];            // Display the files in the last selected Directory          if (_selectedDirectory != String.Empty && !TreeView.DatabaseMode)          {            toolStripStatusLabelFolder.Text = _selectedDirectory;              ThreadStart ts = FolderScanAsync;            Thread FolderScanAsyncThread = new Thread(ts);            FolderScanAsyncThread.Name = "FolderScanAsyncThread";            FolderScanAsyncThread.Start();          }            // setup various Event Handler needed          _gridViewControl.View.SelectionChanged += DataGridView_SelectionChanged;            _initialising = false;            // Activate the form' will be hidden because of the size change          Activate();        }        catch (Exception ex)        {          log.Error("Exception while loading main form. {0} {1}"' ex.Message' ex.StackTrace);        }
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,Main_Load,The following statement contains a magic number: try        {          _splashScreen = new SplashScreen();          _splashScreen.Run();          _splashScreen.SetInformation(localisation.ToString("splash"' "Startup"));          log.Info("Main: Loading Main form");            // Listen to Messages          IMessageQueue queueMessage = ServiceScope.Get<IMessageBroker>().GetOrCreate("message");          queueMessage.OnMessageReceive += OnMessageReceive;            // Add the Ribbon Control to the Top Panel          _splashScreen.SetInformation(localisation.ToString("splash"' "AddRibbon"));            _initialising = true;            #region Setup Ribbon            log.Info("Initialising Ribbon");            ribbon.SetStyle(ControlStyles.DoubleBuffer |               ControlStyles.OptimizedDoubleBuffer |               ControlStyles.UserPaint |               ControlStyles.AllPaintingInWmPaint' true);            // Register the Ribbon Button Events          RegisterCommands();            // Register Ribbon KeyTips          RegisterKeyTips();            // Load Recent Folders          List<PinItem> recentPlacesPinItems = new List<PinItem>();            foreach (string folderItem in Options.MainSettings.RecentFolders)          {            try            {              string directoryName = Path.GetDirectoryName(folderItem);              string folderName = Path.GetFileName(directoryName);              if (string.IsNullOrEmpty(folderName))                folderName = directoryName;                PinItem pinItem = new PinItem(                folderName'                directoryName'                Resources.RecentFolder_Large'                false'                directoryName);                recentPlacesPinItems.Add(pinItem);            }            catch (ArgumentException)            {              }          }            pinListRecentFolders.BeginInit();          pinListRecentFolders.Items.AddRange(recentPlacesPinItems.ToArray());          pinListRecentFolders.EndInit();            // Load the available Scripts          int i = 0;          comboBoxScripts.Items.Clear();          ArrayList scripts = null;            if (Options.MainSettings.ActiveScript == "")          {            Options.MainSettings.ActiveScript = "Switch Artist";          }            scripts = ServiceScope.Get<IScriptManager>().GetScripts();          i = 0;          foreach (string[] item in scripts)          {            comboBoxScripts.Items.Add(new Item(item[1]' item[0]' item[2]));            if (item[1] == Options.MainSettings.ActiveScript)            {              comboBoxScripts.SelectedIndex = i;            }            i++;          }            comboBoxRipEncoder.Items.Add(new Item("MP3 Encoder"' "mp3"' ""));          comboBoxRipEncoder.Items.Add(new Item("OGG Encoder"' "ogg"' ""));          comboBoxRipEncoder.Items.Add(new Item("FLAC Encoder"' "flac"' ""));          comboBoxRipEncoder.Items.Add(new Item("AAC Encoder"' "m4a"' ""));          comboBoxRipEncoder.Items.Add(new Item("WMA Encoder"' "wma"' ""));          comboBoxRipEncoder.Items.Add(new Item("WAV Encoder"' "wav"' ""));          comboBoxRipEncoder.Items.Add(new Item("MusePack Encoder"' "mpc"' ""));          comboBoxRipEncoder.Items.Add(new Item("WavPack Encoder"' "wv"' ""));            comboBoxConvertEncoder.Items.Add(new Item("MP3 Encoder"' "mp3"' ""));          comboBoxConvertEncoder.Items.Add(new Item("OGG Encoder"' "ogg"' ""));          comboBoxConvertEncoder.Items.Add(new Item("FLAC Encoder"' "flac"' ""));          comboBoxConvertEncoder.Items.Add(new Item("AAC Encoder"' "m4a"' ""));          comboBoxConvertEncoder.Items.Add(new Item("WMA Encoder"' "wma"' ""));          comboBoxConvertEncoder.Items.Add(new Item("WAV Encoder"' "wav"' ""));          comboBoxConvertEncoder.Items.Add(new Item("MusePack Encoder"' "mpc"' ""));          comboBoxConvertEncoder.Items.Add(new Item("WavPack Encoder"' "wv"' ""));            i = 0;          foreach (Item item in comboBoxRipEncoder.Items)          {            if ((string)item.Value == Options.MainSettings.RipEncoder)            {              comboBoxRipEncoder.SelectedIndex = i;              break;            }            i++;          }            i = 0;          foreach (Item item in comboBoxConvertEncoder.Items)          {            if ((string)item.Value == Options.MainSettings.LastConversionEncoderUsed)            {              comboBoxConvertEncoder.SelectedIndex = i;              break;            }            i++;          }            textBoxRipOutputFolder.Text = Options.MainSettings.RipTargetFolder;          ribbon.CurrentTabPage = ribbonTabPageTag;          ribbon.CustomTitleBarEnabled = true;          ribbon.Minimized = false;          log.Info("Finished Initialising Ribbon");            #endregion            #region Setup Grids            log.Debug("Main: Setup Grid");          _splashScreen.SetInformation(localisation.ToString("splash"' "AddGrids"));          // Add the Grids to the Main Form          _gridViewControl = new GridViewTracks();          _gridViewBurn = new GridViewBurn(this);          _gridViewRip = new GridViewRip(this);          _gridViewConvert = new GridViewConvert(this);          _playerControl = new PlayerControl();            //           // gridViewControl          //           _gridViewControl.AutoScroll = true;          _gridViewControl.Changed = false;          _gridViewControl.Dock = DockStyle.Fill;          _gridViewControl.Location = new Point(0' 0);          _gridViewControl.Name = "gridViewControl";          _gridViewControl.Size = new Size(676' 470);          _gridViewControl.TabIndex = 8;          //           // gridViewBurn          //           _gridViewBurn.Dock = DockStyle.Fill;          _gridViewBurn.Location = new Point(0' 0);          _gridViewBurn.Name = "gridViewBurn";          _gridViewBurn.Size = new Size(676' 470);          _gridViewBurn.TabIndex = 9;          _gridViewBurn.Visible = false;          //          // gridViewRip          //           _gridViewRip.Dock = DockStyle.Fill;          _gridViewRip.Location = new Point(0' 0);          _gridViewRip.Name = "gridViewRip";          _gridViewRip.Size = new Size(676' 470);          _gridViewRip.TabIndex = 9;          _gridViewRip.Visible = false;          //          // gridViewConvert          //           _gridViewConvert.Dock = DockStyle.Fill;          _gridViewConvert.Location = new Point(0' 0);          _gridViewConvert.Name = "gridViewConvert";          _gridViewConvert.Size = new Size(676' 470);          _gridViewConvert.TabIndex = 9;          _gridViewConvert.Visible = false;          //           // playerControl          //           _playerControl.Dock = DockStyle.Fill;          _playerControl.Location = new Point(0' 0);          _playerControl.Name = "playerControl";          _playerControl.Size = new Size(1008' 68);          _playerControl.TabIndex = 0;            playerPanel.Controls.Add(_playerControl);            // Set reference to Main' so that we may use the ErrorGrid          _gridViewControl.SetMainRef(this);            #endregion            // Setup Treeview          _treeViewControl = new TreeViewControl(this);          _treeViewControl.Dock = DockStyle.Fill;          panelLeftTop.Controls.Add(_treeViewControl);            // Setup Misc Info Control          _miscInfoControl = new MiscInfoControl();          _miscInfoControl.Dock = DockStyle.Fill;          panelRight.Controls.Add(_miscInfoControl);            // Setup TagEdit Control          _tagEditControl = new TagEditControl(this);            // Now position the Tracklist and Tagedit Panel          PositionTrackList();            PopulateScriptsCombo();            // Start Listening for Media Changes          ServiceScope.Get<IMediaChangeMonitor>().StartListening(Handle);            //          // Music Database          //          _musicDatabase = ServiceScope.Get<IMusicDatabase>();            foreach (string musicShare in Options.MainSettings.MusicShares)          {            comboBoxMusicFolder.Items.Add(musicShare);          }          if (comboBoxMusicFolder.Items.Count > 0)          {            comboBoxMusicFolder.SelectedIndex = 0;          }            foreach (string query in Options.MainSettings.MusicDatabaseQueries)          {            comboBoxDatabaseQuery.Items.Add(query);          }            // Load BASS          LoadBass();            // Localise the Screens          log.Info("Main: Localisation");          _splashScreen.SetInformation(localisation.ToString("splash"' "Localisation"));          LocaliseScreen();            // Load the Settings          _splashScreen.SetInformation(localisation.ToString("splash"' "LoadSettings"));          LoadSettings();            // Populate the Treeview with the directories found          _treeViewControl.Init();          _treeViewControl.TreeView.Populate();          _treeViewControl.TreeView.Nodes[0].Expand();          _treeViewControl.TreeView.ShowFolder(_selectedDirectory);            _splashScreen.Stop();            Theme = Options.Themes[Options.MainSettings.Theme];            // Display the files in the last selected Directory          if (_selectedDirectory != String.Empty && !TreeView.DatabaseMode)          {            toolStripStatusLabelFolder.Text = _selectedDirectory;              ThreadStart ts = FolderScanAsync;            Thread FolderScanAsyncThread = new Thread(ts);            FolderScanAsyncThread.Name = "FolderScanAsyncThread";            FolderScanAsyncThread.Start();          }            // setup various Event Handler needed          _gridViewControl.View.SelectionChanged += DataGridView_SelectionChanged;            _initialising = false;            // Activate the form' will be hidden because of the size change          Activate();        }        catch (Exception ex)        {          log.Error("Exception while loading main form. {0} {1}"' ex.Message' ex.StackTrace);        }
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,Main_Load,The following statement contains a magic number: try        {          _splashScreen = new SplashScreen();          _splashScreen.Run();          _splashScreen.SetInformation(localisation.ToString("splash"' "Startup"));          log.Info("Main: Loading Main form");            // Listen to Messages          IMessageQueue queueMessage = ServiceScope.Get<IMessageBroker>().GetOrCreate("message");          queueMessage.OnMessageReceive += OnMessageReceive;            // Add the Ribbon Control to the Top Panel          _splashScreen.SetInformation(localisation.ToString("splash"' "AddRibbon"));            _initialising = true;            #region Setup Ribbon            log.Info("Initialising Ribbon");            ribbon.SetStyle(ControlStyles.DoubleBuffer |               ControlStyles.OptimizedDoubleBuffer |               ControlStyles.UserPaint |               ControlStyles.AllPaintingInWmPaint' true);            // Register the Ribbon Button Events          RegisterCommands();            // Register Ribbon KeyTips          RegisterKeyTips();            // Load Recent Folders          List<PinItem> recentPlacesPinItems = new List<PinItem>();            foreach (string folderItem in Options.MainSettings.RecentFolders)          {            try            {              string directoryName = Path.GetDirectoryName(folderItem);              string folderName = Path.GetFileName(directoryName);              if (string.IsNullOrEmpty(folderName))                folderName = directoryName;                PinItem pinItem = new PinItem(                folderName'                directoryName'                Resources.RecentFolder_Large'                false'                directoryName);                recentPlacesPinItems.Add(pinItem);            }            catch (ArgumentException)            {              }          }            pinListRecentFolders.BeginInit();          pinListRecentFolders.Items.AddRange(recentPlacesPinItems.ToArray());          pinListRecentFolders.EndInit();            // Load the available Scripts          int i = 0;          comboBoxScripts.Items.Clear();          ArrayList scripts = null;            if (Options.MainSettings.ActiveScript == "")          {            Options.MainSettings.ActiveScript = "Switch Artist";          }            scripts = ServiceScope.Get<IScriptManager>().GetScripts();          i = 0;          foreach (string[] item in scripts)          {            comboBoxScripts.Items.Add(new Item(item[1]' item[0]' item[2]));            if (item[1] == Options.MainSettings.ActiveScript)            {              comboBoxScripts.SelectedIndex = i;            }            i++;          }            comboBoxRipEncoder.Items.Add(new Item("MP3 Encoder"' "mp3"' ""));          comboBoxRipEncoder.Items.Add(new Item("OGG Encoder"' "ogg"' ""));          comboBoxRipEncoder.Items.Add(new Item("FLAC Encoder"' "flac"' ""));          comboBoxRipEncoder.Items.Add(new Item("AAC Encoder"' "m4a"' ""));          comboBoxRipEncoder.Items.Add(new Item("WMA Encoder"' "wma"' ""));          comboBoxRipEncoder.Items.Add(new Item("WAV Encoder"' "wav"' ""));          comboBoxRipEncoder.Items.Add(new Item("MusePack Encoder"' "mpc"' ""));          comboBoxRipEncoder.Items.Add(new Item("WavPack Encoder"' "wv"' ""));            comboBoxConvertEncoder.Items.Add(new Item("MP3 Encoder"' "mp3"' ""));          comboBoxConvertEncoder.Items.Add(new Item("OGG Encoder"' "ogg"' ""));          comboBoxConvertEncoder.Items.Add(new Item("FLAC Encoder"' "flac"' ""));          comboBoxConvertEncoder.Items.Add(new Item("AAC Encoder"' "m4a"' ""));          comboBoxConvertEncoder.Items.Add(new Item("WMA Encoder"' "wma"' ""));          comboBoxConvertEncoder.Items.Add(new Item("WAV Encoder"' "wav"' ""));          comboBoxConvertEncoder.Items.Add(new Item("MusePack Encoder"' "mpc"' ""));          comboBoxConvertEncoder.Items.Add(new Item("WavPack Encoder"' "wv"' ""));            i = 0;          foreach (Item item in comboBoxRipEncoder.Items)          {            if ((string)item.Value == Options.MainSettings.RipEncoder)            {              comboBoxRipEncoder.SelectedIndex = i;              break;            }            i++;          }            i = 0;          foreach (Item item in comboBoxConvertEncoder.Items)          {            if ((string)item.Value == Options.MainSettings.LastConversionEncoderUsed)            {              comboBoxConvertEncoder.SelectedIndex = i;              break;            }            i++;          }            textBoxRipOutputFolder.Text = Options.MainSettings.RipTargetFolder;          ribbon.CurrentTabPage = ribbonTabPageTag;          ribbon.CustomTitleBarEnabled = true;          ribbon.Minimized = false;          log.Info("Finished Initialising Ribbon");            #endregion            #region Setup Grids            log.Debug("Main: Setup Grid");          _splashScreen.SetInformation(localisation.ToString("splash"' "AddGrids"));          // Add the Grids to the Main Form          _gridViewControl = new GridViewTracks();          _gridViewBurn = new GridViewBurn(this);          _gridViewRip = new GridViewRip(this);          _gridViewConvert = new GridViewConvert(this);          _playerControl = new PlayerControl();            //           // gridViewControl          //           _gridViewControl.AutoScroll = true;          _gridViewControl.Changed = false;          _gridViewControl.Dock = DockStyle.Fill;          _gridViewControl.Location = new Point(0' 0);          _gridViewControl.Name = "gridViewControl";          _gridViewControl.Size = new Size(676' 470);          _gridViewControl.TabIndex = 8;          //           // gridViewBurn          //           _gridViewBurn.Dock = DockStyle.Fill;          _gridViewBurn.Location = new Point(0' 0);          _gridViewBurn.Name = "gridViewBurn";          _gridViewBurn.Size = new Size(676' 470);          _gridViewBurn.TabIndex = 9;          _gridViewBurn.Visible = false;          //          // gridViewRip          //           _gridViewRip.Dock = DockStyle.Fill;          _gridViewRip.Location = new Point(0' 0);          _gridViewRip.Name = "gridViewRip";          _gridViewRip.Size = new Size(676' 470);          _gridViewRip.TabIndex = 9;          _gridViewRip.Visible = false;          //          // gridViewConvert          //           _gridViewConvert.Dock = DockStyle.Fill;          _gridViewConvert.Location = new Point(0' 0);          _gridViewConvert.Name = "gridViewConvert";          _gridViewConvert.Size = new Size(676' 470);          _gridViewConvert.TabIndex = 9;          _gridViewConvert.Visible = false;          //           // playerControl          //           _playerControl.Dock = DockStyle.Fill;          _playerControl.Location = new Point(0' 0);          _playerControl.Name = "playerControl";          _playerControl.Size = new Size(1008' 68);          _playerControl.TabIndex = 0;            playerPanel.Controls.Add(_playerControl);            // Set reference to Main' so that we may use the ErrorGrid          _gridViewControl.SetMainRef(this);            #endregion            // Setup Treeview          _treeViewControl = new TreeViewControl(this);          _treeViewControl.Dock = DockStyle.Fill;          panelLeftTop.Controls.Add(_treeViewControl);            // Setup Misc Info Control          _miscInfoControl = new MiscInfoControl();          _miscInfoControl.Dock = DockStyle.Fill;          panelRight.Controls.Add(_miscInfoControl);            // Setup TagEdit Control          _tagEditControl = new TagEditControl(this);            // Now position the Tracklist and Tagedit Panel          PositionTrackList();            PopulateScriptsCombo();            // Start Listening for Media Changes          ServiceScope.Get<IMediaChangeMonitor>().StartListening(Handle);            //          // Music Database          //          _musicDatabase = ServiceScope.Get<IMusicDatabase>();            foreach (string musicShare in Options.MainSettings.MusicShares)          {            comboBoxMusicFolder.Items.Add(musicShare);          }          if (comboBoxMusicFolder.Items.Count > 0)          {            comboBoxMusicFolder.SelectedIndex = 0;          }            foreach (string query in Options.MainSettings.MusicDatabaseQueries)          {            comboBoxDatabaseQuery.Items.Add(query);          }            // Load BASS          LoadBass();            // Localise the Screens          log.Info("Main: Localisation");          _splashScreen.SetInformation(localisation.ToString("splash"' "Localisation"));          LocaliseScreen();            // Load the Settings          _splashScreen.SetInformation(localisation.ToString("splash"' "LoadSettings"));          LoadSettings();            // Populate the Treeview with the directories found          _treeViewControl.Init();          _treeViewControl.TreeView.Populate();          _treeViewControl.TreeView.Nodes[0].Expand();          _treeViewControl.TreeView.ShowFolder(_selectedDirectory);            _splashScreen.Stop();            Theme = Options.Themes[Options.MainSettings.Theme];            // Display the files in the last selected Directory          if (_selectedDirectory != String.Empty && !TreeView.DatabaseMode)          {            toolStripStatusLabelFolder.Text = _selectedDirectory;              ThreadStart ts = FolderScanAsync;            Thread FolderScanAsyncThread = new Thread(ts);            FolderScanAsyncThread.Name = "FolderScanAsyncThread";            FolderScanAsyncThread.Start();          }            // setup various Event Handler needed          _gridViewControl.View.SelectionChanged += DataGridView_SelectionChanged;            _initialising = false;            // Activate the form' will be hidden because of the size change          Activate();        }        catch (Exception ex)        {          log.Error("Exception while loading main form. {0} {1}"' ex.Message' ex.StackTrace);        }
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,Main_Load,The following statement contains a magic number: try        {          _splashScreen = new SplashScreen();          _splashScreen.Run();          _splashScreen.SetInformation(localisation.ToString("splash"' "Startup"));          log.Info("Main: Loading Main form");            // Listen to Messages          IMessageQueue queueMessage = ServiceScope.Get<IMessageBroker>().GetOrCreate("message");          queueMessage.OnMessageReceive += OnMessageReceive;            // Add the Ribbon Control to the Top Panel          _splashScreen.SetInformation(localisation.ToString("splash"' "AddRibbon"));            _initialising = true;            #region Setup Ribbon            log.Info("Initialising Ribbon");            ribbon.SetStyle(ControlStyles.DoubleBuffer |               ControlStyles.OptimizedDoubleBuffer |               ControlStyles.UserPaint |               ControlStyles.AllPaintingInWmPaint' true);            // Register the Ribbon Button Events          RegisterCommands();            // Register Ribbon KeyTips          RegisterKeyTips();            // Load Recent Folders          List<PinItem> recentPlacesPinItems = new List<PinItem>();            foreach (string folderItem in Options.MainSettings.RecentFolders)          {            try            {              string directoryName = Path.GetDirectoryName(folderItem);              string folderName = Path.GetFileName(directoryName);              if (string.IsNullOrEmpty(folderName))                folderName = directoryName;                PinItem pinItem = new PinItem(                folderName'                directoryName'                Resources.RecentFolder_Large'                false'                directoryName);                recentPlacesPinItems.Add(pinItem);            }            catch (ArgumentException)            {              }          }            pinListRecentFolders.BeginInit();          pinListRecentFolders.Items.AddRange(recentPlacesPinItems.ToArray());          pinListRecentFolders.EndInit();            // Load the available Scripts          int i = 0;          comboBoxScripts.Items.Clear();          ArrayList scripts = null;            if (Options.MainSettings.ActiveScript == "")          {            Options.MainSettings.ActiveScript = "Switch Artist";          }            scripts = ServiceScope.Get<IScriptManager>().GetScripts();          i = 0;          foreach (string[] item in scripts)          {            comboBoxScripts.Items.Add(new Item(item[1]' item[0]' item[2]));            if (item[1] == Options.MainSettings.ActiveScript)            {              comboBoxScripts.SelectedIndex = i;            }            i++;          }            comboBoxRipEncoder.Items.Add(new Item("MP3 Encoder"' "mp3"' ""));          comboBoxRipEncoder.Items.Add(new Item("OGG Encoder"' "ogg"' ""));          comboBoxRipEncoder.Items.Add(new Item("FLAC Encoder"' "flac"' ""));          comboBoxRipEncoder.Items.Add(new Item("AAC Encoder"' "m4a"' ""));          comboBoxRipEncoder.Items.Add(new Item("WMA Encoder"' "wma"' ""));          comboBoxRipEncoder.Items.Add(new Item("WAV Encoder"' "wav"' ""));          comboBoxRipEncoder.Items.Add(new Item("MusePack Encoder"' "mpc"' ""));          comboBoxRipEncoder.Items.Add(new Item("WavPack Encoder"' "wv"' ""));            comboBoxConvertEncoder.Items.Add(new Item("MP3 Encoder"' "mp3"' ""));          comboBoxConvertEncoder.Items.Add(new Item("OGG Encoder"' "ogg"' ""));          comboBoxConvertEncoder.Items.Add(new Item("FLAC Encoder"' "flac"' ""));          comboBoxConvertEncoder.Items.Add(new Item("AAC Encoder"' "m4a"' ""));          comboBoxConvertEncoder.Items.Add(new Item("WMA Encoder"' "wma"' ""));          comboBoxConvertEncoder.Items.Add(new Item("WAV Encoder"' "wav"' ""));          comboBoxConvertEncoder.Items.Add(new Item("MusePack Encoder"' "mpc"' ""));          comboBoxConvertEncoder.Items.Add(new Item("WavPack Encoder"' "wv"' ""));            i = 0;          foreach (Item item in comboBoxRipEncoder.Items)          {            if ((string)item.Value == Options.MainSettings.RipEncoder)            {              comboBoxRipEncoder.SelectedIndex = i;              break;            }            i++;          }            i = 0;          foreach (Item item in comboBoxConvertEncoder.Items)          {            if ((string)item.Value == Options.MainSettings.LastConversionEncoderUsed)            {              comboBoxConvertEncoder.SelectedIndex = i;              break;            }            i++;          }            textBoxRipOutputFolder.Text = Options.MainSettings.RipTargetFolder;          ribbon.CurrentTabPage = ribbonTabPageTag;          ribbon.CustomTitleBarEnabled = true;          ribbon.Minimized = false;          log.Info("Finished Initialising Ribbon");            #endregion            #region Setup Grids            log.Debug("Main: Setup Grid");          _splashScreen.SetInformation(localisation.ToString("splash"' "AddGrids"));          // Add the Grids to the Main Form          _gridViewControl = new GridViewTracks();          _gridViewBurn = new GridViewBurn(this);          _gridViewRip = new GridViewRip(this);          _gridViewConvert = new GridViewConvert(this);          _playerControl = new PlayerControl();            //           // gridViewControl          //           _gridViewControl.AutoScroll = true;          _gridViewControl.Changed = false;          _gridViewControl.Dock = DockStyle.Fill;          _gridViewControl.Location = new Point(0' 0);          _gridViewControl.Name = "gridViewControl";          _gridViewControl.Size = new Size(676' 470);          _gridViewControl.TabIndex = 8;          //           // gridViewBurn          //           _gridViewBurn.Dock = DockStyle.Fill;          _gridViewBurn.Location = new Point(0' 0);          _gridViewBurn.Name = "gridViewBurn";          _gridViewBurn.Size = new Size(676' 470);          _gridViewBurn.TabIndex = 9;          _gridViewBurn.Visible = false;          //          // gridViewRip          //           _gridViewRip.Dock = DockStyle.Fill;          _gridViewRip.Location = new Point(0' 0);          _gridViewRip.Name = "gridViewRip";          _gridViewRip.Size = new Size(676' 470);          _gridViewRip.TabIndex = 9;          _gridViewRip.Visible = false;          //          // gridViewConvert          //           _gridViewConvert.Dock = DockStyle.Fill;          _gridViewConvert.Location = new Point(0' 0);          _gridViewConvert.Name = "gridViewConvert";          _gridViewConvert.Size = new Size(676' 470);          _gridViewConvert.TabIndex = 9;          _gridViewConvert.Visible = false;          //           // playerControl          //           _playerControl.Dock = DockStyle.Fill;          _playerControl.Location = new Point(0' 0);          _playerControl.Name = "playerControl";          _playerControl.Size = new Size(1008' 68);          _playerControl.TabIndex = 0;            playerPanel.Controls.Add(_playerControl);            // Set reference to Main' so that we may use the ErrorGrid          _gridViewControl.SetMainRef(this);            #endregion            // Setup Treeview          _treeViewControl = new TreeViewControl(this);          _treeViewControl.Dock = DockStyle.Fill;          panelLeftTop.Controls.Add(_treeViewControl);            // Setup Misc Info Control          _miscInfoControl = new MiscInfoControl();          _miscInfoControl.Dock = DockStyle.Fill;          panelRight.Controls.Add(_miscInfoControl);            // Setup TagEdit Control          _tagEditControl = new TagEditControl(this);            // Now position the Tracklist and Tagedit Panel          PositionTrackList();            PopulateScriptsCombo();            // Start Listening for Media Changes          ServiceScope.Get<IMediaChangeMonitor>().StartListening(Handle);            //          // Music Database          //          _musicDatabase = ServiceScope.Get<IMusicDatabase>();            foreach (string musicShare in Options.MainSettings.MusicShares)          {            comboBoxMusicFolder.Items.Add(musicShare);          }          if (comboBoxMusicFolder.Items.Count > 0)          {            comboBoxMusicFolder.SelectedIndex = 0;          }            foreach (string query in Options.MainSettings.MusicDatabaseQueries)          {            comboBoxDatabaseQuery.Items.Add(query);          }            // Load BASS          LoadBass();            // Localise the Screens          log.Info("Main: Localisation");          _splashScreen.SetInformation(localisation.ToString("splash"' "Localisation"));          LocaliseScreen();            // Load the Settings          _splashScreen.SetInformation(localisation.ToString("splash"' "LoadSettings"));          LoadSettings();            // Populate the Treeview with the directories found          _treeViewControl.Init();          _treeViewControl.TreeView.Populate();          _treeViewControl.TreeView.Nodes[0].Expand();          _treeViewControl.TreeView.ShowFolder(_selectedDirectory);            _splashScreen.Stop();            Theme = Options.Themes[Options.MainSettings.Theme];            // Display the files in the last selected Directory          if (_selectedDirectory != String.Empty && !TreeView.DatabaseMode)          {            toolStripStatusLabelFolder.Text = _selectedDirectory;              ThreadStart ts = FolderScanAsync;            Thread FolderScanAsyncThread = new Thread(ts);            FolderScanAsyncThread.Name = "FolderScanAsyncThread";            FolderScanAsyncThread.Start();          }            // setup various Event Handler needed          _gridViewControl.View.SelectionChanged += DataGridView_SelectionChanged;            _initialising = false;            // Activate the form' will be hidden because of the size change          Activate();        }        catch (Exception ex)        {          log.Error("Exception while loading main form. {0} {1}"' ex.Message' ex.StackTrace);        }
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,Main_Load,The following statement contains a magic number: try        {          _splashScreen = new SplashScreen();          _splashScreen.Run();          _splashScreen.SetInformation(localisation.ToString("splash"' "Startup"));          log.Info("Main: Loading Main form");            // Listen to Messages          IMessageQueue queueMessage = ServiceScope.Get<IMessageBroker>().GetOrCreate("message");          queueMessage.OnMessageReceive += OnMessageReceive;            // Add the Ribbon Control to the Top Panel          _splashScreen.SetInformation(localisation.ToString("splash"' "AddRibbon"));            _initialising = true;            #region Setup Ribbon            log.Info("Initialising Ribbon");            ribbon.SetStyle(ControlStyles.DoubleBuffer |               ControlStyles.OptimizedDoubleBuffer |               ControlStyles.UserPaint |               ControlStyles.AllPaintingInWmPaint' true);            // Register the Ribbon Button Events          RegisterCommands();            // Register Ribbon KeyTips          RegisterKeyTips();            // Load Recent Folders          List<PinItem> recentPlacesPinItems = new List<PinItem>();            foreach (string folderItem in Options.MainSettings.RecentFolders)          {            try            {              string directoryName = Path.GetDirectoryName(folderItem);              string folderName = Path.GetFileName(directoryName);              if (string.IsNullOrEmpty(folderName))                folderName = directoryName;                PinItem pinItem = new PinItem(                folderName'                directoryName'                Resources.RecentFolder_Large'                false'                directoryName);                recentPlacesPinItems.Add(pinItem);            }            catch (ArgumentException)            {              }          }            pinListRecentFolders.BeginInit();          pinListRecentFolders.Items.AddRange(recentPlacesPinItems.ToArray());          pinListRecentFolders.EndInit();            // Load the available Scripts          int i = 0;          comboBoxScripts.Items.Clear();          ArrayList scripts = null;            if (Options.MainSettings.ActiveScript == "")          {            Options.MainSettings.ActiveScript = "Switch Artist";          }            scripts = ServiceScope.Get<IScriptManager>().GetScripts();          i = 0;          foreach (string[] item in scripts)          {            comboBoxScripts.Items.Add(new Item(item[1]' item[0]' item[2]));            if (item[1] == Options.MainSettings.ActiveScript)            {              comboBoxScripts.SelectedIndex = i;            }            i++;          }            comboBoxRipEncoder.Items.Add(new Item("MP3 Encoder"' "mp3"' ""));          comboBoxRipEncoder.Items.Add(new Item("OGG Encoder"' "ogg"' ""));          comboBoxRipEncoder.Items.Add(new Item("FLAC Encoder"' "flac"' ""));          comboBoxRipEncoder.Items.Add(new Item("AAC Encoder"' "m4a"' ""));          comboBoxRipEncoder.Items.Add(new Item("WMA Encoder"' "wma"' ""));          comboBoxRipEncoder.Items.Add(new Item("WAV Encoder"' "wav"' ""));          comboBoxRipEncoder.Items.Add(new Item("MusePack Encoder"' "mpc"' ""));          comboBoxRipEncoder.Items.Add(new Item("WavPack Encoder"' "wv"' ""));            comboBoxConvertEncoder.Items.Add(new Item("MP3 Encoder"' "mp3"' ""));          comboBoxConvertEncoder.Items.Add(new Item("OGG Encoder"' "ogg"' ""));          comboBoxConvertEncoder.Items.Add(new Item("FLAC Encoder"' "flac"' ""));          comboBoxConvertEncoder.Items.Add(new Item("AAC Encoder"' "m4a"' ""));          comboBoxConvertEncoder.Items.Add(new Item("WMA Encoder"' "wma"' ""));          comboBoxConvertEncoder.Items.Add(new Item("WAV Encoder"' "wav"' ""));          comboBoxConvertEncoder.Items.Add(new Item("MusePack Encoder"' "mpc"' ""));          comboBoxConvertEncoder.Items.Add(new Item("WavPack Encoder"' "wv"' ""));            i = 0;          foreach (Item item in comboBoxRipEncoder.Items)          {            if ((string)item.Value == Options.MainSettings.RipEncoder)            {              comboBoxRipEncoder.SelectedIndex = i;              break;            }            i++;          }            i = 0;          foreach (Item item in comboBoxConvertEncoder.Items)          {            if ((string)item.Value == Options.MainSettings.LastConversionEncoderUsed)            {              comboBoxConvertEncoder.SelectedIndex = i;              break;            }            i++;          }            textBoxRipOutputFolder.Text = Options.MainSettings.RipTargetFolder;          ribbon.CurrentTabPage = ribbonTabPageTag;          ribbon.CustomTitleBarEnabled = true;          ribbon.Minimized = false;          log.Info("Finished Initialising Ribbon");            #endregion            #region Setup Grids            log.Debug("Main: Setup Grid");          _splashScreen.SetInformation(localisation.ToString("splash"' "AddGrids"));          // Add the Grids to the Main Form          _gridViewControl = new GridViewTracks();          _gridViewBurn = new GridViewBurn(this);          _gridViewRip = new GridViewRip(this);          _gridViewConvert = new GridViewConvert(this);          _playerControl = new PlayerControl();            //           // gridViewControl          //           _gridViewControl.AutoScroll = true;          _gridViewControl.Changed = false;          _gridViewControl.Dock = DockStyle.Fill;          _gridViewControl.Location = new Point(0' 0);          _gridViewControl.Name = "gridViewControl";          _gridViewControl.Size = new Size(676' 470);          _gridViewControl.TabIndex = 8;          //           // gridViewBurn          //           _gridViewBurn.Dock = DockStyle.Fill;          _gridViewBurn.Location = new Point(0' 0);          _gridViewBurn.Name = "gridViewBurn";          _gridViewBurn.Size = new Size(676' 470);          _gridViewBurn.TabIndex = 9;          _gridViewBurn.Visible = false;          //          // gridViewRip          //           _gridViewRip.Dock = DockStyle.Fill;          _gridViewRip.Location = new Point(0' 0);          _gridViewRip.Name = "gridViewRip";          _gridViewRip.Size = new Size(676' 470);          _gridViewRip.TabIndex = 9;          _gridViewRip.Visible = false;          //          // gridViewConvert          //           _gridViewConvert.Dock = DockStyle.Fill;          _gridViewConvert.Location = new Point(0' 0);          _gridViewConvert.Name = "gridViewConvert";          _gridViewConvert.Size = new Size(676' 470);          _gridViewConvert.TabIndex = 9;          _gridViewConvert.Visible = false;          //           // playerControl          //           _playerControl.Dock = DockStyle.Fill;          _playerControl.Location = new Point(0' 0);          _playerControl.Name = "playerControl";          _playerControl.Size = new Size(1008' 68);          _playerControl.TabIndex = 0;            playerPanel.Controls.Add(_playerControl);            // Set reference to Main' so that we may use the ErrorGrid          _gridViewControl.SetMainRef(this);            #endregion            // Setup Treeview          _treeViewControl = new TreeViewControl(this);          _treeViewControl.Dock = DockStyle.Fill;          panelLeftTop.Controls.Add(_treeViewControl);            // Setup Misc Info Control          _miscInfoControl = new MiscInfoControl();          _miscInfoControl.Dock = DockStyle.Fill;          panelRight.Controls.Add(_miscInfoControl);            // Setup TagEdit Control          _tagEditControl = new TagEditControl(this);            // Now position the Tracklist and Tagedit Panel          PositionTrackList();            PopulateScriptsCombo();            // Start Listening for Media Changes          ServiceScope.Get<IMediaChangeMonitor>().StartListening(Handle);            //          // Music Database          //          _musicDatabase = ServiceScope.Get<IMusicDatabase>();            foreach (string musicShare in Options.MainSettings.MusicShares)          {            comboBoxMusicFolder.Items.Add(musicShare);          }          if (comboBoxMusicFolder.Items.Count > 0)          {            comboBoxMusicFolder.SelectedIndex = 0;          }            foreach (string query in Options.MainSettings.MusicDatabaseQueries)          {            comboBoxDatabaseQuery.Items.Add(query);          }            // Load BASS          LoadBass();            // Localise the Screens          log.Info("Main: Localisation");          _splashScreen.SetInformation(localisation.ToString("splash"' "Localisation"));          LocaliseScreen();            // Load the Settings          _splashScreen.SetInformation(localisation.ToString("splash"' "LoadSettings"));          LoadSettings();            // Populate the Treeview with the directories found          _treeViewControl.Init();          _treeViewControl.TreeView.Populate();          _treeViewControl.TreeView.Nodes[0].Expand();          _treeViewControl.TreeView.ShowFolder(_selectedDirectory);            _splashScreen.Stop();            Theme = Options.Themes[Options.MainSettings.Theme];            // Display the files in the last selected Directory          if (_selectedDirectory != String.Empty && !TreeView.DatabaseMode)          {            toolStripStatusLabelFolder.Text = _selectedDirectory;              ThreadStart ts = FolderScanAsync;            Thread FolderScanAsyncThread = new Thread(ts);            FolderScanAsyncThread.Name = "FolderScanAsyncThread";            FolderScanAsyncThread.Start();          }            // setup various Event Handler needed          _gridViewControl.View.SelectionChanged += DataGridView_SelectionChanged;            _initialising = false;            // Activate the form' will be hidden because of the size change          Activate();        }        catch (Exception ex)        {          log.Error("Exception while loading main form. {0} {1}"' ex.Message' ex.StackTrace);        }
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,Main_Load,The following statement contains a magic number: try        {          _splashScreen = new SplashScreen();          _splashScreen.Run();          _splashScreen.SetInformation(localisation.ToString("splash"' "Startup"));          log.Info("Main: Loading Main form");            // Listen to Messages          IMessageQueue queueMessage = ServiceScope.Get<IMessageBroker>().GetOrCreate("message");          queueMessage.OnMessageReceive += OnMessageReceive;            // Add the Ribbon Control to the Top Panel          _splashScreen.SetInformation(localisation.ToString("splash"' "AddRibbon"));            _initialising = true;            #region Setup Ribbon            log.Info("Initialising Ribbon");            ribbon.SetStyle(ControlStyles.DoubleBuffer |               ControlStyles.OptimizedDoubleBuffer |               ControlStyles.UserPaint |               ControlStyles.AllPaintingInWmPaint' true);            // Register the Ribbon Button Events          RegisterCommands();            // Register Ribbon KeyTips          RegisterKeyTips();            // Load Recent Folders          List<PinItem> recentPlacesPinItems = new List<PinItem>();            foreach (string folderItem in Options.MainSettings.RecentFolders)          {            try            {              string directoryName = Path.GetDirectoryName(folderItem);              string folderName = Path.GetFileName(directoryName);              if (string.IsNullOrEmpty(folderName))                folderName = directoryName;                PinItem pinItem = new PinItem(                folderName'                directoryName'                Resources.RecentFolder_Large'                false'                directoryName);                recentPlacesPinItems.Add(pinItem);            }            catch (ArgumentException)            {              }          }            pinListRecentFolders.BeginInit();          pinListRecentFolders.Items.AddRange(recentPlacesPinItems.ToArray());          pinListRecentFolders.EndInit();            // Load the available Scripts          int i = 0;          comboBoxScripts.Items.Clear();          ArrayList scripts = null;            if (Options.MainSettings.ActiveScript == "")          {            Options.MainSettings.ActiveScript = "Switch Artist";          }            scripts = ServiceScope.Get<IScriptManager>().GetScripts();          i = 0;          foreach (string[] item in scripts)          {            comboBoxScripts.Items.Add(new Item(item[1]' item[0]' item[2]));            if (item[1] == Options.MainSettings.ActiveScript)            {              comboBoxScripts.SelectedIndex = i;            }            i++;          }            comboBoxRipEncoder.Items.Add(new Item("MP3 Encoder"' "mp3"' ""));          comboBoxRipEncoder.Items.Add(new Item("OGG Encoder"' "ogg"' ""));          comboBoxRipEncoder.Items.Add(new Item("FLAC Encoder"' "flac"' ""));          comboBoxRipEncoder.Items.Add(new Item("AAC Encoder"' "m4a"' ""));          comboBoxRipEncoder.Items.Add(new Item("WMA Encoder"' "wma"' ""));          comboBoxRipEncoder.Items.Add(new Item("WAV Encoder"' "wav"' ""));          comboBoxRipEncoder.Items.Add(new Item("MusePack Encoder"' "mpc"' ""));          comboBoxRipEncoder.Items.Add(new Item("WavPack Encoder"' "wv"' ""));            comboBoxConvertEncoder.Items.Add(new Item("MP3 Encoder"' "mp3"' ""));          comboBoxConvertEncoder.Items.Add(new Item("OGG Encoder"' "ogg"' ""));          comboBoxConvertEncoder.Items.Add(new Item("FLAC Encoder"' "flac"' ""));          comboBoxConvertEncoder.Items.Add(new Item("AAC Encoder"' "m4a"' ""));          comboBoxConvertEncoder.Items.Add(new Item("WMA Encoder"' "wma"' ""));          comboBoxConvertEncoder.Items.Add(new Item("WAV Encoder"' "wav"' ""));          comboBoxConvertEncoder.Items.Add(new Item("MusePack Encoder"' "mpc"' ""));          comboBoxConvertEncoder.Items.Add(new Item("WavPack Encoder"' "wv"' ""));            i = 0;          foreach (Item item in comboBoxRipEncoder.Items)          {            if ((string)item.Value == Options.MainSettings.RipEncoder)            {              comboBoxRipEncoder.SelectedIndex = i;              break;            }            i++;          }            i = 0;          foreach (Item item in comboBoxConvertEncoder.Items)          {            if ((string)item.Value == Options.MainSettings.LastConversionEncoderUsed)            {              comboBoxConvertEncoder.SelectedIndex = i;              break;            }            i++;          }            textBoxRipOutputFolder.Text = Options.MainSettings.RipTargetFolder;          ribbon.CurrentTabPage = ribbonTabPageTag;          ribbon.CustomTitleBarEnabled = true;          ribbon.Minimized = false;          log.Info("Finished Initialising Ribbon");            #endregion            #region Setup Grids            log.Debug("Main: Setup Grid");          _splashScreen.SetInformation(localisation.ToString("splash"' "AddGrids"));          // Add the Grids to the Main Form          _gridViewControl = new GridViewTracks();          _gridViewBurn = new GridViewBurn(this);          _gridViewRip = new GridViewRip(this);          _gridViewConvert = new GridViewConvert(this);          _playerControl = new PlayerControl();            //           // gridViewControl          //           _gridViewControl.AutoScroll = true;          _gridViewControl.Changed = false;          _gridViewControl.Dock = DockStyle.Fill;          _gridViewControl.Location = new Point(0' 0);          _gridViewControl.Name = "gridViewControl";          _gridViewControl.Size = new Size(676' 470);          _gridViewControl.TabIndex = 8;          //           // gridViewBurn          //           _gridViewBurn.Dock = DockStyle.Fill;          _gridViewBurn.Location = new Point(0' 0);          _gridViewBurn.Name = "gridViewBurn";          _gridViewBurn.Size = new Size(676' 470);          _gridViewBurn.TabIndex = 9;          _gridViewBurn.Visible = false;          //          // gridViewRip          //           _gridViewRip.Dock = DockStyle.Fill;          _gridViewRip.Location = new Point(0' 0);          _gridViewRip.Name = "gridViewRip";          _gridViewRip.Size = new Size(676' 470);          _gridViewRip.TabIndex = 9;          _gridViewRip.Visible = false;          //          // gridViewConvert          //           _gridViewConvert.Dock = DockStyle.Fill;          _gridViewConvert.Location = new Point(0' 0);          _gridViewConvert.Name = "gridViewConvert";          _gridViewConvert.Size = new Size(676' 470);          _gridViewConvert.TabIndex = 9;          _gridViewConvert.Visible = false;          //           // playerControl          //           _playerControl.Dock = DockStyle.Fill;          _playerControl.Location = new Point(0' 0);          _playerControl.Name = "playerControl";          _playerControl.Size = new Size(1008' 68);          _playerControl.TabIndex = 0;            playerPanel.Controls.Add(_playerControl);            // Set reference to Main' so that we may use the ErrorGrid          _gridViewControl.SetMainRef(this);            #endregion            // Setup Treeview          _treeViewControl = new TreeViewControl(this);          _treeViewControl.Dock = DockStyle.Fill;          panelLeftTop.Controls.Add(_treeViewControl);            // Setup Misc Info Control          _miscInfoControl = new MiscInfoControl();          _miscInfoControl.Dock = DockStyle.Fill;          panelRight.Controls.Add(_miscInfoControl);            // Setup TagEdit Control          _tagEditControl = new TagEditControl(this);            // Now position the Tracklist and Tagedit Panel          PositionTrackList();            PopulateScriptsCombo();            // Start Listening for Media Changes          ServiceScope.Get<IMediaChangeMonitor>().StartListening(Handle);            //          // Music Database          //          _musicDatabase = ServiceScope.Get<IMusicDatabase>();            foreach (string musicShare in Options.MainSettings.MusicShares)          {            comboBoxMusicFolder.Items.Add(musicShare);          }          if (comboBoxMusicFolder.Items.Count > 0)          {            comboBoxMusicFolder.SelectedIndex = 0;          }            foreach (string query in Options.MainSettings.MusicDatabaseQueries)          {            comboBoxDatabaseQuery.Items.Add(query);          }            // Load BASS          LoadBass();            // Localise the Screens          log.Info("Main: Localisation");          _splashScreen.SetInformation(localisation.ToString("splash"' "Localisation"));          LocaliseScreen();            // Load the Settings          _splashScreen.SetInformation(localisation.ToString("splash"' "LoadSettings"));          LoadSettings();            // Populate the Treeview with the directories found          _treeViewControl.Init();          _treeViewControl.TreeView.Populate();          _treeViewControl.TreeView.Nodes[0].Expand();          _treeViewControl.TreeView.ShowFolder(_selectedDirectory);            _splashScreen.Stop();            Theme = Options.Themes[Options.MainSettings.Theme];            // Display the files in the last selected Directory          if (_selectedDirectory != String.Empty && !TreeView.DatabaseMode)          {            toolStripStatusLabelFolder.Text = _selectedDirectory;              ThreadStart ts = FolderScanAsync;            Thread FolderScanAsyncThread = new Thread(ts);            FolderScanAsyncThread.Name = "FolderScanAsyncThread";            FolderScanAsyncThread.Start();          }            // setup various Event Handler needed          _gridViewControl.View.SelectionChanged += DataGridView_SelectionChanged;            _initialising = false;            // Activate the form' will be hidden because of the size change          Activate();        }        catch (Exception ex)        {          log.Error("Exception while loading main form. {0} {1}"' ex.Message' ex.StackTrace);        }
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,Main_Load,The following statement contains a magic number: try        {          _splashScreen = new SplashScreen();          _splashScreen.Run();          _splashScreen.SetInformation(localisation.ToString("splash"' "Startup"));          log.Info("Main: Loading Main form");            // Listen to Messages          IMessageQueue queueMessage = ServiceScope.Get<IMessageBroker>().GetOrCreate("message");          queueMessage.OnMessageReceive += OnMessageReceive;            // Add the Ribbon Control to the Top Panel          _splashScreen.SetInformation(localisation.ToString("splash"' "AddRibbon"));            _initialising = true;            #region Setup Ribbon            log.Info("Initialising Ribbon");            ribbon.SetStyle(ControlStyles.DoubleBuffer |               ControlStyles.OptimizedDoubleBuffer |               ControlStyles.UserPaint |               ControlStyles.AllPaintingInWmPaint' true);            // Register the Ribbon Button Events          RegisterCommands();            // Register Ribbon KeyTips          RegisterKeyTips();            // Load Recent Folders          List<PinItem> recentPlacesPinItems = new List<PinItem>();            foreach (string folderItem in Options.MainSettings.RecentFolders)          {            try            {              string directoryName = Path.GetDirectoryName(folderItem);              string folderName = Path.GetFileName(directoryName);              if (string.IsNullOrEmpty(folderName))                folderName = directoryName;                PinItem pinItem = new PinItem(                folderName'                directoryName'                Resources.RecentFolder_Large'                false'                directoryName);                recentPlacesPinItems.Add(pinItem);            }            catch (ArgumentException)            {              }          }            pinListRecentFolders.BeginInit();          pinListRecentFolders.Items.AddRange(recentPlacesPinItems.ToArray());          pinListRecentFolders.EndInit();            // Load the available Scripts          int i = 0;          comboBoxScripts.Items.Clear();          ArrayList scripts = null;            if (Options.MainSettings.ActiveScript == "")          {            Options.MainSettings.ActiveScript = "Switch Artist";          }            scripts = ServiceScope.Get<IScriptManager>().GetScripts();          i = 0;          foreach (string[] item in scripts)          {            comboBoxScripts.Items.Add(new Item(item[1]' item[0]' item[2]));            if (item[1] == Options.MainSettings.ActiveScript)            {              comboBoxScripts.SelectedIndex = i;            }            i++;          }            comboBoxRipEncoder.Items.Add(new Item("MP3 Encoder"' "mp3"' ""));          comboBoxRipEncoder.Items.Add(new Item("OGG Encoder"' "ogg"' ""));          comboBoxRipEncoder.Items.Add(new Item("FLAC Encoder"' "flac"' ""));          comboBoxRipEncoder.Items.Add(new Item("AAC Encoder"' "m4a"' ""));          comboBoxRipEncoder.Items.Add(new Item("WMA Encoder"' "wma"' ""));          comboBoxRipEncoder.Items.Add(new Item("WAV Encoder"' "wav"' ""));          comboBoxRipEncoder.Items.Add(new Item("MusePack Encoder"' "mpc"' ""));          comboBoxRipEncoder.Items.Add(new Item("WavPack Encoder"' "wv"' ""));            comboBoxConvertEncoder.Items.Add(new Item("MP3 Encoder"' "mp3"' ""));          comboBoxConvertEncoder.Items.Add(new Item("OGG Encoder"' "ogg"' ""));          comboBoxConvertEncoder.Items.Add(new Item("FLAC Encoder"' "flac"' ""));          comboBoxConvertEncoder.Items.Add(new Item("AAC Encoder"' "m4a"' ""));          comboBoxConvertEncoder.Items.Add(new Item("WMA Encoder"' "wma"' ""));          comboBoxConvertEncoder.Items.Add(new Item("WAV Encoder"' "wav"' ""));          comboBoxConvertEncoder.Items.Add(new Item("MusePack Encoder"' "mpc"' ""));          comboBoxConvertEncoder.Items.Add(new Item("WavPack Encoder"' "wv"' ""));            i = 0;          foreach (Item item in comboBoxRipEncoder.Items)          {            if ((string)item.Value == Options.MainSettings.RipEncoder)            {              comboBoxRipEncoder.SelectedIndex = i;              break;            }            i++;          }            i = 0;          foreach (Item item in comboBoxConvertEncoder.Items)          {            if ((string)item.Value == Options.MainSettings.LastConversionEncoderUsed)            {              comboBoxConvertEncoder.SelectedIndex = i;              break;            }            i++;          }            textBoxRipOutputFolder.Text = Options.MainSettings.RipTargetFolder;          ribbon.CurrentTabPage = ribbonTabPageTag;          ribbon.CustomTitleBarEnabled = true;          ribbon.Minimized = false;          log.Info("Finished Initialising Ribbon");            #endregion            #region Setup Grids            log.Debug("Main: Setup Grid");          _splashScreen.SetInformation(localisation.ToString("splash"' "AddGrids"));          // Add the Grids to the Main Form          _gridViewControl = new GridViewTracks();          _gridViewBurn = new GridViewBurn(this);          _gridViewRip = new GridViewRip(this);          _gridViewConvert = new GridViewConvert(this);          _playerControl = new PlayerControl();            //           // gridViewControl          //           _gridViewControl.AutoScroll = true;          _gridViewControl.Changed = false;          _gridViewControl.Dock = DockStyle.Fill;          _gridViewControl.Location = new Point(0' 0);          _gridViewControl.Name = "gridViewControl";          _gridViewControl.Size = new Size(676' 470);          _gridViewControl.TabIndex = 8;          //           // gridViewBurn          //           _gridViewBurn.Dock = DockStyle.Fill;          _gridViewBurn.Location = new Point(0' 0);          _gridViewBurn.Name = "gridViewBurn";          _gridViewBurn.Size = new Size(676' 470);          _gridViewBurn.TabIndex = 9;          _gridViewBurn.Visible = false;          //          // gridViewRip          //           _gridViewRip.Dock = DockStyle.Fill;          _gridViewRip.Location = new Point(0' 0);          _gridViewRip.Name = "gridViewRip";          _gridViewRip.Size = new Size(676' 470);          _gridViewRip.TabIndex = 9;          _gridViewRip.Visible = false;          //          // gridViewConvert          //           _gridViewConvert.Dock = DockStyle.Fill;          _gridViewConvert.Location = new Point(0' 0);          _gridViewConvert.Name = "gridViewConvert";          _gridViewConvert.Size = new Size(676' 470);          _gridViewConvert.TabIndex = 9;          _gridViewConvert.Visible = false;          //           // playerControl          //           _playerControl.Dock = DockStyle.Fill;          _playerControl.Location = new Point(0' 0);          _playerControl.Name = "playerControl";          _playerControl.Size = new Size(1008' 68);          _playerControl.TabIndex = 0;            playerPanel.Controls.Add(_playerControl);            // Set reference to Main' so that we may use the ErrorGrid          _gridViewControl.SetMainRef(this);            #endregion            // Setup Treeview          _treeViewControl = new TreeViewControl(this);          _treeViewControl.Dock = DockStyle.Fill;          panelLeftTop.Controls.Add(_treeViewControl);            // Setup Misc Info Control          _miscInfoControl = new MiscInfoControl();          _miscInfoControl.Dock = DockStyle.Fill;          panelRight.Controls.Add(_miscInfoControl);            // Setup TagEdit Control          _tagEditControl = new TagEditControl(this);            // Now position the Tracklist and Tagedit Panel          PositionTrackList();            PopulateScriptsCombo();            // Start Listening for Media Changes          ServiceScope.Get<IMediaChangeMonitor>().StartListening(Handle);            //          // Music Database          //          _musicDatabase = ServiceScope.Get<IMusicDatabase>();            foreach (string musicShare in Options.MainSettings.MusicShares)          {            comboBoxMusicFolder.Items.Add(musicShare);          }          if (comboBoxMusicFolder.Items.Count > 0)          {            comboBoxMusicFolder.SelectedIndex = 0;          }            foreach (string query in Options.MainSettings.MusicDatabaseQueries)          {            comboBoxDatabaseQuery.Items.Add(query);          }            // Load BASS          LoadBass();            // Localise the Screens          log.Info("Main: Localisation");          _splashScreen.SetInformation(localisation.ToString("splash"' "Localisation"));          LocaliseScreen();            // Load the Settings          _splashScreen.SetInformation(localisation.ToString("splash"' "LoadSettings"));          LoadSettings();            // Populate the Treeview with the directories found          _treeViewControl.Init();          _treeViewControl.TreeView.Populate();          _treeViewControl.TreeView.Nodes[0].Expand();          _treeViewControl.TreeView.ShowFolder(_selectedDirectory);            _splashScreen.Stop();            Theme = Options.Themes[Options.MainSettings.Theme];            // Display the files in the last selected Directory          if (_selectedDirectory != String.Empty && !TreeView.DatabaseMode)          {            toolStripStatusLabelFolder.Text = _selectedDirectory;              ThreadStart ts = FolderScanAsync;            Thread FolderScanAsyncThread = new Thread(ts);            FolderScanAsyncThread.Name = "FolderScanAsyncThread";            FolderScanAsyncThread.Start();          }            // setup various Event Handler needed          _gridViewControl.View.SelectionChanged += DataGridView_SelectionChanged;            _initialising = false;            // Activate the form' will be hidden because of the size change          Activate();        }        catch (Exception ex)        {          log.Error("Exception while loading main form. {0} {1}"' ex.Message' ex.StackTrace);        }
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,Main_Load,The following statement contains a magic number: try        {          _splashScreen = new SplashScreen();          _splashScreen.Run();          _splashScreen.SetInformation(localisation.ToString("splash"' "Startup"));          log.Info("Main: Loading Main form");            // Listen to Messages          IMessageQueue queueMessage = ServiceScope.Get<IMessageBroker>().GetOrCreate("message");          queueMessage.OnMessageReceive += OnMessageReceive;            // Add the Ribbon Control to the Top Panel          _splashScreen.SetInformation(localisation.ToString("splash"' "AddRibbon"));            _initialising = true;            #region Setup Ribbon            log.Info("Initialising Ribbon");            ribbon.SetStyle(ControlStyles.DoubleBuffer |               ControlStyles.OptimizedDoubleBuffer |               ControlStyles.UserPaint |               ControlStyles.AllPaintingInWmPaint' true);            // Register the Ribbon Button Events          RegisterCommands();            // Register Ribbon KeyTips          RegisterKeyTips();            // Load Recent Folders          List<PinItem> recentPlacesPinItems = new List<PinItem>();            foreach (string folderItem in Options.MainSettings.RecentFolders)          {            try            {              string directoryName = Path.GetDirectoryName(folderItem);              string folderName = Path.GetFileName(directoryName);              if (string.IsNullOrEmpty(folderName))                folderName = directoryName;                PinItem pinItem = new PinItem(                folderName'                directoryName'                Resources.RecentFolder_Large'                false'                directoryName);                recentPlacesPinItems.Add(pinItem);            }            catch (ArgumentException)            {              }          }            pinListRecentFolders.BeginInit();          pinListRecentFolders.Items.AddRange(recentPlacesPinItems.ToArray());          pinListRecentFolders.EndInit();            // Load the available Scripts          int i = 0;          comboBoxScripts.Items.Clear();          ArrayList scripts = null;            if (Options.MainSettings.ActiveScript == "")          {            Options.MainSettings.ActiveScript = "Switch Artist";          }            scripts = ServiceScope.Get<IScriptManager>().GetScripts();          i = 0;          foreach (string[] item in scripts)          {            comboBoxScripts.Items.Add(new Item(item[1]' item[0]' item[2]));            if (item[1] == Options.MainSettings.ActiveScript)            {              comboBoxScripts.SelectedIndex = i;            }            i++;          }            comboBoxRipEncoder.Items.Add(new Item("MP3 Encoder"' "mp3"' ""));          comboBoxRipEncoder.Items.Add(new Item("OGG Encoder"' "ogg"' ""));          comboBoxRipEncoder.Items.Add(new Item("FLAC Encoder"' "flac"' ""));          comboBoxRipEncoder.Items.Add(new Item("AAC Encoder"' "m4a"' ""));          comboBoxRipEncoder.Items.Add(new Item("WMA Encoder"' "wma"' ""));          comboBoxRipEncoder.Items.Add(new Item("WAV Encoder"' "wav"' ""));          comboBoxRipEncoder.Items.Add(new Item("MusePack Encoder"' "mpc"' ""));          comboBoxRipEncoder.Items.Add(new Item("WavPack Encoder"' "wv"' ""));            comboBoxConvertEncoder.Items.Add(new Item("MP3 Encoder"' "mp3"' ""));          comboBoxConvertEncoder.Items.Add(new Item("OGG Encoder"' "ogg"' ""));          comboBoxConvertEncoder.Items.Add(new Item("FLAC Encoder"' "flac"' ""));          comboBoxConvertEncoder.Items.Add(new Item("AAC Encoder"' "m4a"' ""));          comboBoxConvertEncoder.Items.Add(new Item("WMA Encoder"' "wma"' ""));          comboBoxConvertEncoder.Items.Add(new Item("WAV Encoder"' "wav"' ""));          comboBoxConvertEncoder.Items.Add(new Item("MusePack Encoder"' "mpc"' ""));          comboBoxConvertEncoder.Items.Add(new Item("WavPack Encoder"' "wv"' ""));            i = 0;          foreach (Item item in comboBoxRipEncoder.Items)          {            if ((string)item.Value == Options.MainSettings.RipEncoder)            {              comboBoxRipEncoder.SelectedIndex = i;              break;            }            i++;          }            i = 0;          foreach (Item item in comboBoxConvertEncoder.Items)          {            if ((string)item.Value == Options.MainSettings.LastConversionEncoderUsed)            {              comboBoxConvertEncoder.SelectedIndex = i;              break;            }            i++;          }            textBoxRipOutputFolder.Text = Options.MainSettings.RipTargetFolder;          ribbon.CurrentTabPage = ribbonTabPageTag;          ribbon.CustomTitleBarEnabled = true;          ribbon.Minimized = false;          log.Info("Finished Initialising Ribbon");            #endregion            #region Setup Grids            log.Debug("Main: Setup Grid");          _splashScreen.SetInformation(localisation.ToString("splash"' "AddGrids"));          // Add the Grids to the Main Form          _gridViewControl = new GridViewTracks();          _gridViewBurn = new GridViewBurn(this);          _gridViewRip = new GridViewRip(this);          _gridViewConvert = new GridViewConvert(this);          _playerControl = new PlayerControl();            //           // gridViewControl          //           _gridViewControl.AutoScroll = true;          _gridViewControl.Changed = false;          _gridViewControl.Dock = DockStyle.Fill;          _gridViewControl.Location = new Point(0' 0);          _gridViewControl.Name = "gridViewControl";          _gridViewControl.Size = new Size(676' 470);          _gridViewControl.TabIndex = 8;          //           // gridViewBurn          //           _gridViewBurn.Dock = DockStyle.Fill;          _gridViewBurn.Location = new Point(0' 0);          _gridViewBurn.Name = "gridViewBurn";          _gridViewBurn.Size = new Size(676' 470);          _gridViewBurn.TabIndex = 9;          _gridViewBurn.Visible = false;          //          // gridViewRip          //           _gridViewRip.Dock = DockStyle.Fill;          _gridViewRip.Location = new Point(0' 0);          _gridViewRip.Name = "gridViewRip";          _gridViewRip.Size = new Size(676' 470);          _gridViewRip.TabIndex = 9;          _gridViewRip.Visible = false;          //          // gridViewConvert          //           _gridViewConvert.Dock = DockStyle.Fill;          _gridViewConvert.Location = new Point(0' 0);          _gridViewConvert.Name = "gridViewConvert";          _gridViewConvert.Size = new Size(676' 470);          _gridViewConvert.TabIndex = 9;          _gridViewConvert.Visible = false;          //           // playerControl          //           _playerControl.Dock = DockStyle.Fill;          _playerControl.Location = new Point(0' 0);          _playerControl.Name = "playerControl";          _playerControl.Size = new Size(1008' 68);          _playerControl.TabIndex = 0;            playerPanel.Controls.Add(_playerControl);            // Set reference to Main' so that we may use the ErrorGrid          _gridViewControl.SetMainRef(this);            #endregion            // Setup Treeview          _treeViewControl = new TreeViewControl(this);          _treeViewControl.Dock = DockStyle.Fill;          panelLeftTop.Controls.Add(_treeViewControl);            // Setup Misc Info Control          _miscInfoControl = new MiscInfoControl();          _miscInfoControl.Dock = DockStyle.Fill;          panelRight.Controls.Add(_miscInfoControl);            // Setup TagEdit Control          _tagEditControl = new TagEditControl(this);            // Now position the Tracklist and Tagedit Panel          PositionTrackList();            PopulateScriptsCombo();            // Start Listening for Media Changes          ServiceScope.Get<IMediaChangeMonitor>().StartListening(Handle);            //          // Music Database          //          _musicDatabase = ServiceScope.Get<IMusicDatabase>();            foreach (string musicShare in Options.MainSettings.MusicShares)          {            comboBoxMusicFolder.Items.Add(musicShare);          }          if (comboBoxMusicFolder.Items.Count > 0)          {            comboBoxMusicFolder.SelectedIndex = 0;          }            foreach (string query in Options.MainSettings.MusicDatabaseQueries)          {            comboBoxDatabaseQuery.Items.Add(query);          }            // Load BASS          LoadBass();            // Localise the Screens          log.Info("Main: Localisation");          _splashScreen.SetInformation(localisation.ToString("splash"' "Localisation"));          LocaliseScreen();            // Load the Settings          _splashScreen.SetInformation(localisation.ToString("splash"' "LoadSettings"));          LoadSettings();            // Populate the Treeview with the directories found          _treeViewControl.Init();          _treeViewControl.TreeView.Populate();          _treeViewControl.TreeView.Nodes[0].Expand();          _treeViewControl.TreeView.ShowFolder(_selectedDirectory);            _splashScreen.Stop();            Theme = Options.Themes[Options.MainSettings.Theme];            // Display the files in the last selected Directory          if (_selectedDirectory != String.Empty && !TreeView.DatabaseMode)          {            toolStripStatusLabelFolder.Text = _selectedDirectory;              ThreadStart ts = FolderScanAsync;            Thread FolderScanAsyncThread = new Thread(ts);            FolderScanAsyncThread.Name = "FolderScanAsyncThread";            FolderScanAsyncThread.Start();          }            // setup various Event Handler needed          _gridViewControl.View.SelectionChanged += DataGridView_SelectionChanged;            _initialising = false;            // Activate the form' will be hidden because of the size change          Activate();        }        catch (Exception ex)        {          log.Error("Exception while loading main form. {0} {1}"' ex.Message' ex.StackTrace);        }
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,Main_Load,The following statement contains a magic number: try        {          _splashScreen = new SplashScreen();          _splashScreen.Run();          _splashScreen.SetInformation(localisation.ToString("splash"' "Startup"));          log.Info("Main: Loading Main form");            // Listen to Messages          IMessageQueue queueMessage = ServiceScope.Get<IMessageBroker>().GetOrCreate("message");          queueMessage.OnMessageReceive += OnMessageReceive;            // Add the Ribbon Control to the Top Panel          _splashScreen.SetInformation(localisation.ToString("splash"' "AddRibbon"));            _initialising = true;            #region Setup Ribbon            log.Info("Initialising Ribbon");            ribbon.SetStyle(ControlStyles.DoubleBuffer |               ControlStyles.OptimizedDoubleBuffer |               ControlStyles.UserPaint |               ControlStyles.AllPaintingInWmPaint' true);            // Register the Ribbon Button Events          RegisterCommands();            // Register Ribbon KeyTips          RegisterKeyTips();            // Load Recent Folders          List<PinItem> recentPlacesPinItems = new List<PinItem>();            foreach (string folderItem in Options.MainSettings.RecentFolders)          {            try            {              string directoryName = Path.GetDirectoryName(folderItem);              string folderName = Path.GetFileName(directoryName);              if (string.IsNullOrEmpty(folderName))                folderName = directoryName;                PinItem pinItem = new PinItem(                folderName'                directoryName'                Resources.RecentFolder_Large'                false'                directoryName);                recentPlacesPinItems.Add(pinItem);            }            catch (ArgumentException)            {              }          }            pinListRecentFolders.BeginInit();          pinListRecentFolders.Items.AddRange(recentPlacesPinItems.ToArray());          pinListRecentFolders.EndInit();            // Load the available Scripts          int i = 0;          comboBoxScripts.Items.Clear();          ArrayList scripts = null;            if (Options.MainSettings.ActiveScript == "")          {            Options.MainSettings.ActiveScript = "Switch Artist";          }            scripts = ServiceScope.Get<IScriptManager>().GetScripts();          i = 0;          foreach (string[] item in scripts)          {            comboBoxScripts.Items.Add(new Item(item[1]' item[0]' item[2]));            if (item[1] == Options.MainSettings.ActiveScript)            {              comboBoxScripts.SelectedIndex = i;            }            i++;          }            comboBoxRipEncoder.Items.Add(new Item("MP3 Encoder"' "mp3"' ""));          comboBoxRipEncoder.Items.Add(new Item("OGG Encoder"' "ogg"' ""));          comboBoxRipEncoder.Items.Add(new Item("FLAC Encoder"' "flac"' ""));          comboBoxRipEncoder.Items.Add(new Item("AAC Encoder"' "m4a"' ""));          comboBoxRipEncoder.Items.Add(new Item("WMA Encoder"' "wma"' ""));          comboBoxRipEncoder.Items.Add(new Item("WAV Encoder"' "wav"' ""));          comboBoxRipEncoder.Items.Add(new Item("MusePack Encoder"' "mpc"' ""));          comboBoxRipEncoder.Items.Add(new Item("WavPack Encoder"' "wv"' ""));            comboBoxConvertEncoder.Items.Add(new Item("MP3 Encoder"' "mp3"' ""));          comboBoxConvertEncoder.Items.Add(new Item("OGG Encoder"' "ogg"' ""));          comboBoxConvertEncoder.Items.Add(new Item("FLAC Encoder"' "flac"' ""));          comboBoxConvertEncoder.Items.Add(new Item("AAC Encoder"' "m4a"' ""));          comboBoxConvertEncoder.Items.Add(new Item("WMA Encoder"' "wma"' ""));          comboBoxConvertEncoder.Items.Add(new Item("WAV Encoder"' "wav"' ""));          comboBoxConvertEncoder.Items.Add(new Item("MusePack Encoder"' "mpc"' ""));          comboBoxConvertEncoder.Items.Add(new Item("WavPack Encoder"' "wv"' ""));            i = 0;          foreach (Item item in comboBoxRipEncoder.Items)          {            if ((string)item.Value == Options.MainSettings.RipEncoder)            {              comboBoxRipEncoder.SelectedIndex = i;              break;            }            i++;          }            i = 0;          foreach (Item item in comboBoxConvertEncoder.Items)          {            if ((string)item.Value == Options.MainSettings.LastConversionEncoderUsed)            {              comboBoxConvertEncoder.SelectedIndex = i;              break;            }            i++;          }            textBoxRipOutputFolder.Text = Options.MainSettings.RipTargetFolder;          ribbon.CurrentTabPage = ribbonTabPageTag;          ribbon.CustomTitleBarEnabled = true;          ribbon.Minimized = false;          log.Info("Finished Initialising Ribbon");            #endregion            #region Setup Grids            log.Debug("Main: Setup Grid");          _splashScreen.SetInformation(localisation.ToString("splash"' "AddGrids"));          // Add the Grids to the Main Form          _gridViewControl = new GridViewTracks();          _gridViewBurn = new GridViewBurn(this);          _gridViewRip = new GridViewRip(this);          _gridViewConvert = new GridViewConvert(this);          _playerControl = new PlayerControl();            //           // gridViewControl          //           _gridViewControl.AutoScroll = true;          _gridViewControl.Changed = false;          _gridViewControl.Dock = DockStyle.Fill;          _gridViewControl.Location = new Point(0' 0);          _gridViewControl.Name = "gridViewControl";          _gridViewControl.Size = new Size(676' 470);          _gridViewControl.TabIndex = 8;          //           // gridViewBurn          //           _gridViewBurn.Dock = DockStyle.Fill;          _gridViewBurn.Location = new Point(0' 0);          _gridViewBurn.Name = "gridViewBurn";          _gridViewBurn.Size = new Size(676' 470);          _gridViewBurn.TabIndex = 9;          _gridViewBurn.Visible = false;          //          // gridViewRip          //           _gridViewRip.Dock = DockStyle.Fill;          _gridViewRip.Location = new Point(0' 0);          _gridViewRip.Name = "gridViewRip";          _gridViewRip.Size = new Size(676' 470);          _gridViewRip.TabIndex = 9;          _gridViewRip.Visible = false;          //          // gridViewConvert          //           _gridViewConvert.Dock = DockStyle.Fill;          _gridViewConvert.Location = new Point(0' 0);          _gridViewConvert.Name = "gridViewConvert";          _gridViewConvert.Size = new Size(676' 470);          _gridViewConvert.TabIndex = 9;          _gridViewConvert.Visible = false;          //           // playerControl          //           _playerControl.Dock = DockStyle.Fill;          _playerControl.Location = new Point(0' 0);          _playerControl.Name = "playerControl";          _playerControl.Size = new Size(1008' 68);          _playerControl.TabIndex = 0;            playerPanel.Controls.Add(_playerControl);            // Set reference to Main' so that we may use the ErrorGrid          _gridViewControl.SetMainRef(this);            #endregion            // Setup Treeview          _treeViewControl = new TreeViewControl(this);          _treeViewControl.Dock = DockStyle.Fill;          panelLeftTop.Controls.Add(_treeViewControl);            // Setup Misc Info Control          _miscInfoControl = new MiscInfoControl();          _miscInfoControl.Dock = DockStyle.Fill;          panelRight.Controls.Add(_miscInfoControl);            // Setup TagEdit Control          _tagEditControl = new TagEditControl(this);            // Now position the Tracklist and Tagedit Panel          PositionTrackList();            PopulateScriptsCombo();            // Start Listening for Media Changes          ServiceScope.Get<IMediaChangeMonitor>().StartListening(Handle);            //          // Music Database          //          _musicDatabase = ServiceScope.Get<IMusicDatabase>();            foreach (string musicShare in Options.MainSettings.MusicShares)          {            comboBoxMusicFolder.Items.Add(musicShare);          }          if (comboBoxMusicFolder.Items.Count > 0)          {            comboBoxMusicFolder.SelectedIndex = 0;          }            foreach (string query in Options.MainSettings.MusicDatabaseQueries)          {            comboBoxDatabaseQuery.Items.Add(query);          }            // Load BASS          LoadBass();            // Localise the Screens          log.Info("Main: Localisation");          _splashScreen.SetInformation(localisation.ToString("splash"' "Localisation"));          LocaliseScreen();            // Load the Settings          _splashScreen.SetInformation(localisation.ToString("splash"' "LoadSettings"));          LoadSettings();            // Populate the Treeview with the directories found          _treeViewControl.Init();          _treeViewControl.TreeView.Populate();          _treeViewControl.TreeView.Nodes[0].Expand();          _treeViewControl.TreeView.ShowFolder(_selectedDirectory);            _splashScreen.Stop();            Theme = Options.Themes[Options.MainSettings.Theme];            // Display the files in the last selected Directory          if (_selectedDirectory != String.Empty && !TreeView.DatabaseMode)          {            toolStripStatusLabelFolder.Text = _selectedDirectory;              ThreadStart ts = FolderScanAsync;            Thread FolderScanAsyncThread = new Thread(ts);            FolderScanAsyncThread.Name = "FolderScanAsyncThread";            FolderScanAsyncThread.Start();          }            // setup various Event Handler needed          _gridViewControl.View.SelectionChanged += DataGridView_SelectionChanged;            _initialising = false;            // Activate the form' will be hidden because of the size change          Activate();        }        catch (Exception ex)        {          log.Error("Exception while loading main form. {0} {1}"' ex.Message' ex.StackTrace);        }
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,Main_Load,The following statement contains a magic number: try        {          _splashScreen = new SplashScreen();          _splashScreen.Run();          _splashScreen.SetInformation(localisation.ToString("splash"' "Startup"));          log.Info("Main: Loading Main form");            // Listen to Messages          IMessageQueue queueMessage = ServiceScope.Get<IMessageBroker>().GetOrCreate("message");          queueMessage.OnMessageReceive += OnMessageReceive;            // Add the Ribbon Control to the Top Panel          _splashScreen.SetInformation(localisation.ToString("splash"' "AddRibbon"));            _initialising = true;            #region Setup Ribbon            log.Info("Initialising Ribbon");            ribbon.SetStyle(ControlStyles.DoubleBuffer |               ControlStyles.OptimizedDoubleBuffer |               ControlStyles.UserPaint |               ControlStyles.AllPaintingInWmPaint' true);            // Register the Ribbon Button Events          RegisterCommands();            // Register Ribbon KeyTips          RegisterKeyTips();            // Load Recent Folders          List<PinItem> recentPlacesPinItems = new List<PinItem>();            foreach (string folderItem in Options.MainSettings.RecentFolders)          {            try            {              string directoryName = Path.GetDirectoryName(folderItem);              string folderName = Path.GetFileName(directoryName);              if (string.IsNullOrEmpty(folderName))                folderName = directoryName;                PinItem pinItem = new PinItem(                folderName'                directoryName'                Resources.RecentFolder_Large'                false'                directoryName);                recentPlacesPinItems.Add(pinItem);            }            catch (ArgumentException)            {              }          }            pinListRecentFolders.BeginInit();          pinListRecentFolders.Items.AddRange(recentPlacesPinItems.ToArray());          pinListRecentFolders.EndInit();            // Load the available Scripts          int i = 0;          comboBoxScripts.Items.Clear();          ArrayList scripts = null;            if (Options.MainSettings.ActiveScript == "")          {            Options.MainSettings.ActiveScript = "Switch Artist";          }            scripts = ServiceScope.Get<IScriptManager>().GetScripts();          i = 0;          foreach (string[] item in scripts)          {            comboBoxScripts.Items.Add(new Item(item[1]' item[0]' item[2]));            if (item[1] == Options.MainSettings.ActiveScript)            {              comboBoxScripts.SelectedIndex = i;            }            i++;          }            comboBoxRipEncoder.Items.Add(new Item("MP3 Encoder"' "mp3"' ""));          comboBoxRipEncoder.Items.Add(new Item("OGG Encoder"' "ogg"' ""));          comboBoxRipEncoder.Items.Add(new Item("FLAC Encoder"' "flac"' ""));          comboBoxRipEncoder.Items.Add(new Item("AAC Encoder"' "m4a"' ""));          comboBoxRipEncoder.Items.Add(new Item("WMA Encoder"' "wma"' ""));          comboBoxRipEncoder.Items.Add(new Item("WAV Encoder"' "wav"' ""));          comboBoxRipEncoder.Items.Add(new Item("MusePack Encoder"' "mpc"' ""));          comboBoxRipEncoder.Items.Add(new Item("WavPack Encoder"' "wv"' ""));            comboBoxConvertEncoder.Items.Add(new Item("MP3 Encoder"' "mp3"' ""));          comboBoxConvertEncoder.Items.Add(new Item("OGG Encoder"' "ogg"' ""));          comboBoxConvertEncoder.Items.Add(new Item("FLAC Encoder"' "flac"' ""));          comboBoxConvertEncoder.Items.Add(new Item("AAC Encoder"' "m4a"' ""));          comboBoxConvertEncoder.Items.Add(new Item("WMA Encoder"' "wma"' ""));          comboBoxConvertEncoder.Items.Add(new Item("WAV Encoder"' "wav"' ""));          comboBoxConvertEncoder.Items.Add(new Item("MusePack Encoder"' "mpc"' ""));          comboBoxConvertEncoder.Items.Add(new Item("WavPack Encoder"' "wv"' ""));            i = 0;          foreach (Item item in comboBoxRipEncoder.Items)          {            if ((string)item.Value == Options.MainSettings.RipEncoder)            {              comboBoxRipEncoder.SelectedIndex = i;              break;            }            i++;          }            i = 0;          foreach (Item item in comboBoxConvertEncoder.Items)          {            if ((string)item.Value == Options.MainSettings.LastConversionEncoderUsed)            {              comboBoxConvertEncoder.SelectedIndex = i;              break;            }            i++;          }            textBoxRipOutputFolder.Text = Options.MainSettings.RipTargetFolder;          ribbon.CurrentTabPage = ribbonTabPageTag;          ribbon.CustomTitleBarEnabled = true;          ribbon.Minimized = false;          log.Info("Finished Initialising Ribbon");            #endregion            #region Setup Grids            log.Debug("Main: Setup Grid");          _splashScreen.SetInformation(localisation.ToString("splash"' "AddGrids"));          // Add the Grids to the Main Form          _gridViewControl = new GridViewTracks();          _gridViewBurn = new GridViewBurn(this);          _gridViewRip = new GridViewRip(this);          _gridViewConvert = new GridViewConvert(this);          _playerControl = new PlayerControl();            //           // gridViewControl          //           _gridViewControl.AutoScroll = true;          _gridViewControl.Changed = false;          _gridViewControl.Dock = DockStyle.Fill;          _gridViewControl.Location = new Point(0' 0);          _gridViewControl.Name = "gridViewControl";          _gridViewControl.Size = new Size(676' 470);          _gridViewControl.TabIndex = 8;          //           // gridViewBurn          //           _gridViewBurn.Dock = DockStyle.Fill;          _gridViewBurn.Location = new Point(0' 0);          _gridViewBurn.Name = "gridViewBurn";          _gridViewBurn.Size = new Size(676' 470);          _gridViewBurn.TabIndex = 9;          _gridViewBurn.Visible = false;          //          // gridViewRip          //           _gridViewRip.Dock = DockStyle.Fill;          _gridViewRip.Location = new Point(0' 0);          _gridViewRip.Name = "gridViewRip";          _gridViewRip.Size = new Size(676' 470);          _gridViewRip.TabIndex = 9;          _gridViewRip.Visible = false;          //          // gridViewConvert          //           _gridViewConvert.Dock = DockStyle.Fill;          _gridViewConvert.Location = new Point(0' 0);          _gridViewConvert.Name = "gridViewConvert";          _gridViewConvert.Size = new Size(676' 470);          _gridViewConvert.TabIndex = 9;          _gridViewConvert.Visible = false;          //           // playerControl          //           _playerControl.Dock = DockStyle.Fill;          _playerControl.Location = new Point(0' 0);          _playerControl.Name = "playerControl";          _playerControl.Size = new Size(1008' 68);          _playerControl.TabIndex = 0;            playerPanel.Controls.Add(_playerControl);            // Set reference to Main' so that we may use the ErrorGrid          _gridViewControl.SetMainRef(this);            #endregion            // Setup Treeview          _treeViewControl = new TreeViewControl(this);          _treeViewControl.Dock = DockStyle.Fill;          panelLeftTop.Controls.Add(_treeViewControl);            // Setup Misc Info Control          _miscInfoControl = new MiscInfoControl();          _miscInfoControl.Dock = DockStyle.Fill;          panelRight.Controls.Add(_miscInfoControl);            // Setup TagEdit Control          _tagEditControl = new TagEditControl(this);            // Now position the Tracklist and Tagedit Panel          PositionTrackList();            PopulateScriptsCombo();            // Start Listening for Media Changes          ServiceScope.Get<IMediaChangeMonitor>().StartListening(Handle);            //          // Music Database          //          _musicDatabase = ServiceScope.Get<IMusicDatabase>();            foreach (string musicShare in Options.MainSettings.MusicShares)          {            comboBoxMusicFolder.Items.Add(musicShare);          }          if (comboBoxMusicFolder.Items.Count > 0)          {            comboBoxMusicFolder.SelectedIndex = 0;          }            foreach (string query in Options.MainSettings.MusicDatabaseQueries)          {            comboBoxDatabaseQuery.Items.Add(query);          }            // Load BASS          LoadBass();            // Localise the Screens          log.Info("Main: Localisation");          _splashScreen.SetInformation(localisation.ToString("splash"' "Localisation"));          LocaliseScreen();            // Load the Settings          _splashScreen.SetInformation(localisation.ToString("splash"' "LoadSettings"));          LoadSettings();            // Populate the Treeview with the directories found          _treeViewControl.Init();          _treeViewControl.TreeView.Populate();          _treeViewControl.TreeView.Nodes[0].Expand();          _treeViewControl.TreeView.ShowFolder(_selectedDirectory);            _splashScreen.Stop();            Theme = Options.Themes[Options.MainSettings.Theme];            // Display the files in the last selected Directory          if (_selectedDirectory != String.Empty && !TreeView.DatabaseMode)          {            toolStripStatusLabelFolder.Text = _selectedDirectory;              ThreadStart ts = FolderScanAsync;            Thread FolderScanAsyncThread = new Thread(ts);            FolderScanAsyncThread.Name = "FolderScanAsyncThread";            FolderScanAsyncThread.Start();          }            // setup various Event Handler needed          _gridViewControl.View.SelectionChanged += DataGridView_SelectionChanged;            _initialising = false;            // Activate the form' will be hidden because of the size change          Activate();        }        catch (Exception ex)        {          log.Error("Exception while loading main form. {0} {1}"' ex.Message' ex.StackTrace);        }
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,Main_Load,The following statement contains a magic number: try        {          _splashScreen = new SplashScreen();          _splashScreen.Run();          _splashScreen.SetInformation(localisation.ToString("splash"' "Startup"));          log.Info("Main: Loading Main form");            // Listen to Messages          IMessageQueue queueMessage = ServiceScope.Get<IMessageBroker>().GetOrCreate("message");          queueMessage.OnMessageReceive += OnMessageReceive;            // Add the Ribbon Control to the Top Panel          _splashScreen.SetInformation(localisation.ToString("splash"' "AddRibbon"));            _initialising = true;            #region Setup Ribbon            log.Info("Initialising Ribbon");            ribbon.SetStyle(ControlStyles.DoubleBuffer |               ControlStyles.OptimizedDoubleBuffer |               ControlStyles.UserPaint |               ControlStyles.AllPaintingInWmPaint' true);            // Register the Ribbon Button Events          RegisterCommands();            // Register Ribbon KeyTips          RegisterKeyTips();            // Load Recent Folders          List<PinItem> recentPlacesPinItems = new List<PinItem>();            foreach (string folderItem in Options.MainSettings.RecentFolders)          {            try            {              string directoryName = Path.GetDirectoryName(folderItem);              string folderName = Path.GetFileName(directoryName);              if (string.IsNullOrEmpty(folderName))                folderName = directoryName;                PinItem pinItem = new PinItem(                folderName'                directoryName'                Resources.RecentFolder_Large'                false'                directoryName);                recentPlacesPinItems.Add(pinItem);            }            catch (ArgumentException)            {              }          }            pinListRecentFolders.BeginInit();          pinListRecentFolders.Items.AddRange(recentPlacesPinItems.ToArray());          pinListRecentFolders.EndInit();            // Load the available Scripts          int i = 0;          comboBoxScripts.Items.Clear();          ArrayList scripts = null;            if (Options.MainSettings.ActiveScript == "")          {            Options.MainSettings.ActiveScript = "Switch Artist";          }            scripts = ServiceScope.Get<IScriptManager>().GetScripts();          i = 0;          foreach (string[] item in scripts)          {            comboBoxScripts.Items.Add(new Item(item[1]' item[0]' item[2]));            if (item[1] == Options.MainSettings.ActiveScript)            {              comboBoxScripts.SelectedIndex = i;            }            i++;          }            comboBoxRipEncoder.Items.Add(new Item("MP3 Encoder"' "mp3"' ""));          comboBoxRipEncoder.Items.Add(new Item("OGG Encoder"' "ogg"' ""));          comboBoxRipEncoder.Items.Add(new Item("FLAC Encoder"' "flac"' ""));          comboBoxRipEncoder.Items.Add(new Item("AAC Encoder"' "m4a"' ""));          comboBoxRipEncoder.Items.Add(new Item("WMA Encoder"' "wma"' ""));          comboBoxRipEncoder.Items.Add(new Item("WAV Encoder"' "wav"' ""));          comboBoxRipEncoder.Items.Add(new Item("MusePack Encoder"' "mpc"' ""));          comboBoxRipEncoder.Items.Add(new Item("WavPack Encoder"' "wv"' ""));            comboBoxConvertEncoder.Items.Add(new Item("MP3 Encoder"' "mp3"' ""));          comboBoxConvertEncoder.Items.Add(new Item("OGG Encoder"' "ogg"' ""));          comboBoxConvertEncoder.Items.Add(new Item("FLAC Encoder"' "flac"' ""));          comboBoxConvertEncoder.Items.Add(new Item("AAC Encoder"' "m4a"' ""));          comboBoxConvertEncoder.Items.Add(new Item("WMA Encoder"' "wma"' ""));          comboBoxConvertEncoder.Items.Add(new Item("WAV Encoder"' "wav"' ""));          comboBoxConvertEncoder.Items.Add(new Item("MusePack Encoder"' "mpc"' ""));          comboBoxConvertEncoder.Items.Add(new Item("WavPack Encoder"' "wv"' ""));            i = 0;          foreach (Item item in comboBoxRipEncoder.Items)          {            if ((string)item.Value == Options.MainSettings.RipEncoder)            {              comboBoxRipEncoder.SelectedIndex = i;              break;            }            i++;          }            i = 0;          foreach (Item item in comboBoxConvertEncoder.Items)          {            if ((string)item.Value == Options.MainSettings.LastConversionEncoderUsed)            {              comboBoxConvertEncoder.SelectedIndex = i;              break;            }            i++;          }            textBoxRipOutputFolder.Text = Options.MainSettings.RipTargetFolder;          ribbon.CurrentTabPage = ribbonTabPageTag;          ribbon.CustomTitleBarEnabled = true;          ribbon.Minimized = false;          log.Info("Finished Initialising Ribbon");            #endregion            #region Setup Grids            log.Debug("Main: Setup Grid");          _splashScreen.SetInformation(localisation.ToString("splash"' "AddGrids"));          // Add the Grids to the Main Form          _gridViewControl = new GridViewTracks();          _gridViewBurn = new GridViewBurn(this);          _gridViewRip = new GridViewRip(this);          _gridViewConvert = new GridViewConvert(this);          _playerControl = new PlayerControl();            //           // gridViewControl          //           _gridViewControl.AutoScroll = true;          _gridViewControl.Changed = false;          _gridViewControl.Dock = DockStyle.Fill;          _gridViewControl.Location = new Point(0' 0);          _gridViewControl.Name = "gridViewControl";          _gridViewControl.Size = new Size(676' 470);          _gridViewControl.TabIndex = 8;          //           // gridViewBurn          //           _gridViewBurn.Dock = DockStyle.Fill;          _gridViewBurn.Location = new Point(0' 0);          _gridViewBurn.Name = "gridViewBurn";          _gridViewBurn.Size = new Size(676' 470);          _gridViewBurn.TabIndex = 9;          _gridViewBurn.Visible = false;          //          // gridViewRip          //           _gridViewRip.Dock = DockStyle.Fill;          _gridViewRip.Location = new Point(0' 0);          _gridViewRip.Name = "gridViewRip";          _gridViewRip.Size = new Size(676' 470);          _gridViewRip.TabIndex = 9;          _gridViewRip.Visible = false;          //          // gridViewConvert          //           _gridViewConvert.Dock = DockStyle.Fill;          _gridViewConvert.Location = new Point(0' 0);          _gridViewConvert.Name = "gridViewConvert";          _gridViewConvert.Size = new Size(676' 470);          _gridViewConvert.TabIndex = 9;          _gridViewConvert.Visible = false;          //           // playerControl          //           _playerControl.Dock = DockStyle.Fill;          _playerControl.Location = new Point(0' 0);          _playerControl.Name = "playerControl";          _playerControl.Size = new Size(1008' 68);          _playerControl.TabIndex = 0;            playerPanel.Controls.Add(_playerControl);            // Set reference to Main' so that we may use the ErrorGrid          _gridViewControl.SetMainRef(this);            #endregion            // Setup Treeview          _treeViewControl = new TreeViewControl(this);          _treeViewControl.Dock = DockStyle.Fill;          panelLeftTop.Controls.Add(_treeViewControl);            // Setup Misc Info Control          _miscInfoControl = new MiscInfoControl();          _miscInfoControl.Dock = DockStyle.Fill;          panelRight.Controls.Add(_miscInfoControl);            // Setup TagEdit Control          _tagEditControl = new TagEditControl(this);            // Now position the Tracklist and Tagedit Panel          PositionTrackList();            PopulateScriptsCombo();            // Start Listening for Media Changes          ServiceScope.Get<IMediaChangeMonitor>().StartListening(Handle);            //          // Music Database          //          _musicDatabase = ServiceScope.Get<IMusicDatabase>();            foreach (string musicShare in Options.MainSettings.MusicShares)          {            comboBoxMusicFolder.Items.Add(musicShare);          }          if (comboBoxMusicFolder.Items.Count > 0)          {            comboBoxMusicFolder.SelectedIndex = 0;          }            foreach (string query in Options.MainSettings.MusicDatabaseQueries)          {            comboBoxDatabaseQuery.Items.Add(query);          }            // Load BASS          LoadBass();            // Localise the Screens          log.Info("Main: Localisation");          _splashScreen.SetInformation(localisation.ToString("splash"' "Localisation"));          LocaliseScreen();            // Load the Settings          _splashScreen.SetInformation(localisation.ToString("splash"' "LoadSettings"));          LoadSettings();            // Populate the Treeview with the directories found          _treeViewControl.Init();          _treeViewControl.TreeView.Populate();          _treeViewControl.TreeView.Nodes[0].Expand();          _treeViewControl.TreeView.ShowFolder(_selectedDirectory);            _splashScreen.Stop();            Theme = Options.Themes[Options.MainSettings.Theme];            // Display the files in the last selected Directory          if (_selectedDirectory != String.Empty && !TreeView.DatabaseMode)          {            toolStripStatusLabelFolder.Text = _selectedDirectory;              ThreadStart ts = FolderScanAsync;            Thread FolderScanAsyncThread = new Thread(ts);            FolderScanAsyncThread.Name = "FolderScanAsyncThread";            FolderScanAsyncThread.Start();          }            // setup various Event Handler needed          _gridViewControl.View.SelectionChanged += DataGridView_SelectionChanged;            _initialising = false;            // Activate the form' will be hidden because of the size change          Activate();        }        catch (Exception ex)        {          log.Error("Exception while loading main form. {0} {1}"' ex.Message' ex.StackTrace);        }
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,Main_Load,The following statement contains a magic number: try        {          _splashScreen = new SplashScreen();          _splashScreen.Run();          _splashScreen.SetInformation(localisation.ToString("splash"' "Startup"));          log.Info("Main: Loading Main form");            // Listen to Messages          IMessageQueue queueMessage = ServiceScope.Get<IMessageBroker>().GetOrCreate("message");          queueMessage.OnMessageReceive += OnMessageReceive;            // Add the Ribbon Control to the Top Panel          _splashScreen.SetInformation(localisation.ToString("splash"' "AddRibbon"));            _initialising = true;            #region Setup Ribbon            log.Info("Initialising Ribbon");            ribbon.SetStyle(ControlStyles.DoubleBuffer |               ControlStyles.OptimizedDoubleBuffer |               ControlStyles.UserPaint |               ControlStyles.AllPaintingInWmPaint' true);            // Register the Ribbon Button Events          RegisterCommands();            // Register Ribbon KeyTips          RegisterKeyTips();            // Load Recent Folders          List<PinItem> recentPlacesPinItems = new List<PinItem>();            foreach (string folderItem in Options.MainSettings.RecentFolders)          {            try            {              string directoryName = Path.GetDirectoryName(folderItem);              string folderName = Path.GetFileName(directoryName);              if (string.IsNullOrEmpty(folderName))                folderName = directoryName;                PinItem pinItem = new PinItem(                folderName'                directoryName'                Resources.RecentFolder_Large'                false'                directoryName);                recentPlacesPinItems.Add(pinItem);            }            catch (ArgumentException)            {              }          }            pinListRecentFolders.BeginInit();          pinListRecentFolders.Items.AddRange(recentPlacesPinItems.ToArray());          pinListRecentFolders.EndInit();            // Load the available Scripts          int i = 0;          comboBoxScripts.Items.Clear();          ArrayList scripts = null;            if (Options.MainSettings.ActiveScript == "")          {            Options.MainSettings.ActiveScript = "Switch Artist";          }            scripts = ServiceScope.Get<IScriptManager>().GetScripts();          i = 0;          foreach (string[] item in scripts)          {            comboBoxScripts.Items.Add(new Item(item[1]' item[0]' item[2]));            if (item[1] == Options.MainSettings.ActiveScript)            {              comboBoxScripts.SelectedIndex = i;            }            i++;          }            comboBoxRipEncoder.Items.Add(new Item("MP3 Encoder"' "mp3"' ""));          comboBoxRipEncoder.Items.Add(new Item("OGG Encoder"' "ogg"' ""));          comboBoxRipEncoder.Items.Add(new Item("FLAC Encoder"' "flac"' ""));          comboBoxRipEncoder.Items.Add(new Item("AAC Encoder"' "m4a"' ""));          comboBoxRipEncoder.Items.Add(new Item("WMA Encoder"' "wma"' ""));          comboBoxRipEncoder.Items.Add(new Item("WAV Encoder"' "wav"' ""));          comboBoxRipEncoder.Items.Add(new Item("MusePack Encoder"' "mpc"' ""));          comboBoxRipEncoder.Items.Add(new Item("WavPack Encoder"' "wv"' ""));            comboBoxConvertEncoder.Items.Add(new Item("MP3 Encoder"' "mp3"' ""));          comboBoxConvertEncoder.Items.Add(new Item("OGG Encoder"' "ogg"' ""));          comboBoxConvertEncoder.Items.Add(new Item("FLAC Encoder"' "flac"' ""));          comboBoxConvertEncoder.Items.Add(new Item("AAC Encoder"' "m4a"' ""));          comboBoxConvertEncoder.Items.Add(new Item("WMA Encoder"' "wma"' ""));          comboBoxConvertEncoder.Items.Add(new Item("WAV Encoder"' "wav"' ""));          comboBoxConvertEncoder.Items.Add(new Item("MusePack Encoder"' "mpc"' ""));          comboBoxConvertEncoder.Items.Add(new Item("WavPack Encoder"' "wv"' ""));            i = 0;          foreach (Item item in comboBoxRipEncoder.Items)          {            if ((string)item.Value == Options.MainSettings.RipEncoder)            {              comboBoxRipEncoder.SelectedIndex = i;              break;            }            i++;          }            i = 0;          foreach (Item item in comboBoxConvertEncoder.Items)          {            if ((string)item.Value == Options.MainSettings.LastConversionEncoderUsed)            {              comboBoxConvertEncoder.SelectedIndex = i;              break;            }            i++;          }            textBoxRipOutputFolder.Text = Options.MainSettings.RipTargetFolder;          ribbon.CurrentTabPage = ribbonTabPageTag;          ribbon.CustomTitleBarEnabled = true;          ribbon.Minimized = false;          log.Info("Finished Initialising Ribbon");            #endregion            #region Setup Grids            log.Debug("Main: Setup Grid");          _splashScreen.SetInformation(localisation.ToString("splash"' "AddGrids"));          // Add the Grids to the Main Form          _gridViewControl = new GridViewTracks();          _gridViewBurn = new GridViewBurn(this);          _gridViewRip = new GridViewRip(this);          _gridViewConvert = new GridViewConvert(this);          _playerControl = new PlayerControl();            //           // gridViewControl          //           _gridViewControl.AutoScroll = true;          _gridViewControl.Changed = false;          _gridViewControl.Dock = DockStyle.Fill;          _gridViewControl.Location = new Point(0' 0);          _gridViewControl.Name = "gridViewControl";          _gridViewControl.Size = new Size(676' 470);          _gridViewControl.TabIndex = 8;          //           // gridViewBurn          //           _gridViewBurn.Dock = DockStyle.Fill;          _gridViewBurn.Location = new Point(0' 0);          _gridViewBurn.Name = "gridViewBurn";          _gridViewBurn.Size = new Size(676' 470);          _gridViewBurn.TabIndex = 9;          _gridViewBurn.Visible = false;          //          // gridViewRip          //           _gridViewRip.Dock = DockStyle.Fill;          _gridViewRip.Location = new Point(0' 0);          _gridViewRip.Name = "gridViewRip";          _gridViewRip.Size = new Size(676' 470);          _gridViewRip.TabIndex = 9;          _gridViewRip.Visible = false;          //          // gridViewConvert          //           _gridViewConvert.Dock = DockStyle.Fill;          _gridViewConvert.Location = new Point(0' 0);          _gridViewConvert.Name = "gridViewConvert";          _gridViewConvert.Size = new Size(676' 470);          _gridViewConvert.TabIndex = 9;          _gridViewConvert.Visible = false;          //           // playerControl          //           _playerControl.Dock = DockStyle.Fill;          _playerControl.Location = new Point(0' 0);          _playerControl.Name = "playerControl";          _playerControl.Size = new Size(1008' 68);          _playerControl.TabIndex = 0;            playerPanel.Controls.Add(_playerControl);            // Set reference to Main' so that we may use the ErrorGrid          _gridViewControl.SetMainRef(this);            #endregion            // Setup Treeview          _treeViewControl = new TreeViewControl(this);          _treeViewControl.Dock = DockStyle.Fill;          panelLeftTop.Controls.Add(_treeViewControl);            // Setup Misc Info Control          _miscInfoControl = new MiscInfoControl();          _miscInfoControl.Dock = DockStyle.Fill;          panelRight.Controls.Add(_miscInfoControl);            // Setup TagEdit Control          _tagEditControl = new TagEditControl(this);            // Now position the Tracklist and Tagedit Panel          PositionTrackList();            PopulateScriptsCombo();            // Start Listening for Media Changes          ServiceScope.Get<IMediaChangeMonitor>().StartListening(Handle);            //          // Music Database          //          _musicDatabase = ServiceScope.Get<IMusicDatabase>();            foreach (string musicShare in Options.MainSettings.MusicShares)          {            comboBoxMusicFolder.Items.Add(musicShare);          }          if (comboBoxMusicFolder.Items.Count > 0)          {            comboBoxMusicFolder.SelectedIndex = 0;          }            foreach (string query in Options.MainSettings.MusicDatabaseQueries)          {            comboBoxDatabaseQuery.Items.Add(query);          }            // Load BASS          LoadBass();            // Localise the Screens          log.Info("Main: Localisation");          _splashScreen.SetInformation(localisation.ToString("splash"' "Localisation"));          LocaliseScreen();            // Load the Settings          _splashScreen.SetInformation(localisation.ToString("splash"' "LoadSettings"));          LoadSettings();            // Populate the Treeview with the directories found          _treeViewControl.Init();          _treeViewControl.TreeView.Populate();          _treeViewControl.TreeView.Nodes[0].Expand();          _treeViewControl.TreeView.ShowFolder(_selectedDirectory);            _splashScreen.Stop();            Theme = Options.Themes[Options.MainSettings.Theme];            // Display the files in the last selected Directory          if (_selectedDirectory != String.Empty && !TreeView.DatabaseMode)          {            toolStripStatusLabelFolder.Text = _selectedDirectory;              ThreadStart ts = FolderScanAsync;            Thread FolderScanAsyncThread = new Thread(ts);            FolderScanAsyncThread.Name = "FolderScanAsyncThread";            FolderScanAsyncThread.Start();          }            // setup various Event Handler needed          _gridViewControl.View.SelectionChanged += DataGridView_SelectionChanged;            _initialising = false;            // Activate the form' will be hidden because of the size change          Activate();        }        catch (Exception ex)        {          log.Error("Exception while loading main form. {0} {1}"' ex.Message' ex.StackTrace);        }
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,Main_Load,The following statement contains a magic number: try        {          _splashScreen = new SplashScreen();          _splashScreen.Run();          _splashScreen.SetInformation(localisation.ToString("splash"' "Startup"));          log.Info("Main: Loading Main form");            // Listen to Messages          IMessageQueue queueMessage = ServiceScope.Get<IMessageBroker>().GetOrCreate("message");          queueMessage.OnMessageReceive += OnMessageReceive;            // Add the Ribbon Control to the Top Panel          _splashScreen.SetInformation(localisation.ToString("splash"' "AddRibbon"));            _initialising = true;            #region Setup Ribbon            log.Info("Initialising Ribbon");            ribbon.SetStyle(ControlStyles.DoubleBuffer |               ControlStyles.OptimizedDoubleBuffer |               ControlStyles.UserPaint |               ControlStyles.AllPaintingInWmPaint' true);            // Register the Ribbon Button Events          RegisterCommands();            // Register Ribbon KeyTips          RegisterKeyTips();            // Load Recent Folders          List<PinItem> recentPlacesPinItems = new List<PinItem>();            foreach (string folderItem in Options.MainSettings.RecentFolders)          {            try            {              string directoryName = Path.GetDirectoryName(folderItem);              string folderName = Path.GetFileName(directoryName);              if (string.IsNullOrEmpty(folderName))                folderName = directoryName;                PinItem pinItem = new PinItem(                folderName'                directoryName'                Resources.RecentFolder_Large'                false'                directoryName);                recentPlacesPinItems.Add(pinItem);            }            catch (ArgumentException)            {              }          }            pinListRecentFolders.BeginInit();          pinListRecentFolders.Items.AddRange(recentPlacesPinItems.ToArray());          pinListRecentFolders.EndInit();            // Load the available Scripts          int i = 0;          comboBoxScripts.Items.Clear();          ArrayList scripts = null;            if (Options.MainSettings.ActiveScript == "")          {            Options.MainSettings.ActiveScript = "Switch Artist";          }            scripts = ServiceScope.Get<IScriptManager>().GetScripts();          i = 0;          foreach (string[] item in scripts)          {            comboBoxScripts.Items.Add(new Item(item[1]' item[0]' item[2]));            if (item[1] == Options.MainSettings.ActiveScript)            {              comboBoxScripts.SelectedIndex = i;            }            i++;          }            comboBoxRipEncoder.Items.Add(new Item("MP3 Encoder"' "mp3"' ""));          comboBoxRipEncoder.Items.Add(new Item("OGG Encoder"' "ogg"' ""));          comboBoxRipEncoder.Items.Add(new Item("FLAC Encoder"' "flac"' ""));          comboBoxRipEncoder.Items.Add(new Item("AAC Encoder"' "m4a"' ""));          comboBoxRipEncoder.Items.Add(new Item("WMA Encoder"' "wma"' ""));          comboBoxRipEncoder.Items.Add(new Item("WAV Encoder"' "wav"' ""));          comboBoxRipEncoder.Items.Add(new Item("MusePack Encoder"' "mpc"' ""));          comboBoxRipEncoder.Items.Add(new Item("WavPack Encoder"' "wv"' ""));            comboBoxConvertEncoder.Items.Add(new Item("MP3 Encoder"' "mp3"' ""));          comboBoxConvertEncoder.Items.Add(new Item("OGG Encoder"' "ogg"' ""));          comboBoxConvertEncoder.Items.Add(new Item("FLAC Encoder"' "flac"' ""));          comboBoxConvertEncoder.Items.Add(new Item("AAC Encoder"' "m4a"' ""));          comboBoxConvertEncoder.Items.Add(new Item("WMA Encoder"' "wma"' ""));          comboBoxConvertEncoder.Items.Add(new Item("WAV Encoder"' "wav"' ""));          comboBoxConvertEncoder.Items.Add(new Item("MusePack Encoder"' "mpc"' ""));          comboBoxConvertEncoder.Items.Add(new Item("WavPack Encoder"' "wv"' ""));            i = 0;          foreach (Item item in comboBoxRipEncoder.Items)          {            if ((string)item.Value == Options.MainSettings.RipEncoder)            {              comboBoxRipEncoder.SelectedIndex = i;              break;            }            i++;          }            i = 0;          foreach (Item item in comboBoxConvertEncoder.Items)          {            if ((string)item.Value == Options.MainSettings.LastConversionEncoderUsed)            {              comboBoxConvertEncoder.SelectedIndex = i;              break;            }            i++;          }            textBoxRipOutputFolder.Text = Options.MainSettings.RipTargetFolder;          ribbon.CurrentTabPage = ribbonTabPageTag;          ribbon.CustomTitleBarEnabled = true;          ribbon.Minimized = false;          log.Info("Finished Initialising Ribbon");            #endregion            #region Setup Grids            log.Debug("Main: Setup Grid");          _splashScreen.SetInformation(localisation.ToString("splash"' "AddGrids"));          // Add the Grids to the Main Form          _gridViewControl = new GridViewTracks();          _gridViewBurn = new GridViewBurn(this);          _gridViewRip = new GridViewRip(this);          _gridViewConvert = new GridViewConvert(this);          _playerControl = new PlayerControl();            //           // gridViewControl          //           _gridViewControl.AutoScroll = true;          _gridViewControl.Changed = false;          _gridViewControl.Dock = DockStyle.Fill;          _gridViewControl.Location = new Point(0' 0);          _gridViewControl.Name = "gridViewControl";          _gridViewControl.Size = new Size(676' 470);          _gridViewControl.TabIndex = 8;          //           // gridViewBurn          //           _gridViewBurn.Dock = DockStyle.Fill;          _gridViewBurn.Location = new Point(0' 0);          _gridViewBurn.Name = "gridViewBurn";          _gridViewBurn.Size = new Size(676' 470);          _gridViewBurn.TabIndex = 9;          _gridViewBurn.Visible = false;          //          // gridViewRip          //           _gridViewRip.Dock = DockStyle.Fill;          _gridViewRip.Location = new Point(0' 0);          _gridViewRip.Name = "gridViewRip";          _gridViewRip.Size = new Size(676' 470);          _gridViewRip.TabIndex = 9;          _gridViewRip.Visible = false;          //          // gridViewConvert          //           _gridViewConvert.Dock = DockStyle.Fill;          _gridViewConvert.Location = new Point(0' 0);          _gridViewConvert.Name = "gridViewConvert";          _gridViewConvert.Size = new Size(676' 470);          _gridViewConvert.TabIndex = 9;          _gridViewConvert.Visible = false;          //           // playerControl          //           _playerControl.Dock = DockStyle.Fill;          _playerControl.Location = new Point(0' 0);          _playerControl.Name = "playerControl";          _playerControl.Size = new Size(1008' 68);          _playerControl.TabIndex = 0;            playerPanel.Controls.Add(_playerControl);            // Set reference to Main' so that we may use the ErrorGrid          _gridViewControl.SetMainRef(this);            #endregion            // Setup Treeview          _treeViewControl = new TreeViewControl(this);          _treeViewControl.Dock = DockStyle.Fill;          panelLeftTop.Controls.Add(_treeViewControl);            // Setup Misc Info Control          _miscInfoControl = new MiscInfoControl();          _miscInfoControl.Dock = DockStyle.Fill;          panelRight.Controls.Add(_miscInfoControl);            // Setup TagEdit Control          _tagEditControl = new TagEditControl(this);            // Now position the Tracklist and Tagedit Panel          PositionTrackList();            PopulateScriptsCombo();            // Start Listening for Media Changes          ServiceScope.Get<IMediaChangeMonitor>().StartListening(Handle);            //          // Music Database          //          _musicDatabase = ServiceScope.Get<IMusicDatabase>();            foreach (string musicShare in Options.MainSettings.MusicShares)          {            comboBoxMusicFolder.Items.Add(musicShare);          }          if (comboBoxMusicFolder.Items.Count > 0)          {            comboBoxMusicFolder.SelectedIndex = 0;          }            foreach (string query in Options.MainSettings.MusicDatabaseQueries)          {            comboBoxDatabaseQuery.Items.Add(query);          }            // Load BASS          LoadBass();            // Localise the Screens          log.Info("Main: Localisation");          _splashScreen.SetInformation(localisation.ToString("splash"' "Localisation"));          LocaliseScreen();            // Load the Settings          _splashScreen.SetInformation(localisation.ToString("splash"' "LoadSettings"));          LoadSettings();            // Populate the Treeview with the directories found          _treeViewControl.Init();          _treeViewControl.TreeView.Populate();          _treeViewControl.TreeView.Nodes[0].Expand();          _treeViewControl.TreeView.ShowFolder(_selectedDirectory);            _splashScreen.Stop();            Theme = Options.Themes[Options.MainSettings.Theme];            // Display the files in the last selected Directory          if (_selectedDirectory != String.Empty && !TreeView.DatabaseMode)          {            toolStripStatusLabelFolder.Text = _selectedDirectory;              ThreadStart ts = FolderScanAsync;            Thread FolderScanAsyncThread = new Thread(ts);            FolderScanAsyncThread.Name = "FolderScanAsyncThread";            FolderScanAsyncThread.Start();          }            // setup various Event Handler needed          _gridViewControl.View.SelectionChanged += DataGridView_SelectionChanged;            _initialising = false;            // Activate the form' will be hidden because of the size change          Activate();        }        catch (Exception ex)        {          log.Error("Exception while loading main form. {0} {1}"' ex.Message' ex.StackTrace);        }
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,Main_Load,The following statement contains a magic number: try        {          _splashScreen = new SplashScreen();          _splashScreen.Run();          _splashScreen.SetInformation(localisation.ToString("splash"' "Startup"));          log.Info("Main: Loading Main form");            // Listen to Messages          IMessageQueue queueMessage = ServiceScope.Get<IMessageBroker>().GetOrCreate("message");          queueMessage.OnMessageReceive += OnMessageReceive;            // Add the Ribbon Control to the Top Panel          _splashScreen.SetInformation(localisation.ToString("splash"' "AddRibbon"));            _initialising = true;            #region Setup Ribbon            log.Info("Initialising Ribbon");            ribbon.SetStyle(ControlStyles.DoubleBuffer |               ControlStyles.OptimizedDoubleBuffer |               ControlStyles.UserPaint |               ControlStyles.AllPaintingInWmPaint' true);            // Register the Ribbon Button Events          RegisterCommands();            // Register Ribbon KeyTips          RegisterKeyTips();            // Load Recent Folders          List<PinItem> recentPlacesPinItems = new List<PinItem>();            foreach (string folderItem in Options.MainSettings.RecentFolders)          {            try            {              string directoryName = Path.GetDirectoryName(folderItem);              string folderName = Path.GetFileName(directoryName);              if (string.IsNullOrEmpty(folderName))                folderName = directoryName;                PinItem pinItem = new PinItem(                folderName'                directoryName'                Resources.RecentFolder_Large'                false'                directoryName);                recentPlacesPinItems.Add(pinItem);            }            catch (ArgumentException)            {              }          }            pinListRecentFolders.BeginInit();          pinListRecentFolders.Items.AddRange(recentPlacesPinItems.ToArray());          pinListRecentFolders.EndInit();            // Load the available Scripts          int i = 0;          comboBoxScripts.Items.Clear();          ArrayList scripts = null;            if (Options.MainSettings.ActiveScript == "")          {            Options.MainSettings.ActiveScript = "Switch Artist";          }            scripts = ServiceScope.Get<IScriptManager>().GetScripts();          i = 0;          foreach (string[] item in scripts)          {            comboBoxScripts.Items.Add(new Item(item[1]' item[0]' item[2]));            if (item[1] == Options.MainSettings.ActiveScript)            {              comboBoxScripts.SelectedIndex = i;            }            i++;          }            comboBoxRipEncoder.Items.Add(new Item("MP3 Encoder"' "mp3"' ""));          comboBoxRipEncoder.Items.Add(new Item("OGG Encoder"' "ogg"' ""));          comboBoxRipEncoder.Items.Add(new Item("FLAC Encoder"' "flac"' ""));          comboBoxRipEncoder.Items.Add(new Item("AAC Encoder"' "m4a"' ""));          comboBoxRipEncoder.Items.Add(new Item("WMA Encoder"' "wma"' ""));          comboBoxRipEncoder.Items.Add(new Item("WAV Encoder"' "wav"' ""));          comboBoxRipEncoder.Items.Add(new Item("MusePack Encoder"' "mpc"' ""));          comboBoxRipEncoder.Items.Add(new Item("WavPack Encoder"' "wv"' ""));            comboBoxConvertEncoder.Items.Add(new Item("MP3 Encoder"' "mp3"' ""));          comboBoxConvertEncoder.Items.Add(new Item("OGG Encoder"' "ogg"' ""));          comboBoxConvertEncoder.Items.Add(new Item("FLAC Encoder"' "flac"' ""));          comboBoxConvertEncoder.Items.Add(new Item("AAC Encoder"' "m4a"' ""));          comboBoxConvertEncoder.Items.Add(new Item("WMA Encoder"' "wma"' ""));          comboBoxConvertEncoder.Items.Add(new Item("WAV Encoder"' "wav"' ""));          comboBoxConvertEncoder.Items.Add(new Item("MusePack Encoder"' "mpc"' ""));          comboBoxConvertEncoder.Items.Add(new Item("WavPack Encoder"' "wv"' ""));            i = 0;          foreach (Item item in comboBoxRipEncoder.Items)          {            if ((string)item.Value == Options.MainSettings.RipEncoder)            {              comboBoxRipEncoder.SelectedIndex = i;              break;            }            i++;          }            i = 0;          foreach (Item item in comboBoxConvertEncoder.Items)          {            if ((string)item.Value == Options.MainSettings.LastConversionEncoderUsed)            {              comboBoxConvertEncoder.SelectedIndex = i;              break;            }            i++;          }            textBoxRipOutputFolder.Text = Options.MainSettings.RipTargetFolder;          ribbon.CurrentTabPage = ribbonTabPageTag;          ribbon.CustomTitleBarEnabled = true;          ribbon.Minimized = false;          log.Info("Finished Initialising Ribbon");            #endregion            #region Setup Grids            log.Debug("Main: Setup Grid");          _splashScreen.SetInformation(localisation.ToString("splash"' "AddGrids"));          // Add the Grids to the Main Form          _gridViewControl = new GridViewTracks();          _gridViewBurn = new GridViewBurn(this);          _gridViewRip = new GridViewRip(this);          _gridViewConvert = new GridViewConvert(this);          _playerControl = new PlayerControl();            //           // gridViewControl          //           _gridViewControl.AutoScroll = true;          _gridViewControl.Changed = false;          _gridViewControl.Dock = DockStyle.Fill;          _gridViewControl.Location = new Point(0' 0);          _gridViewControl.Name = "gridViewControl";          _gridViewControl.Size = new Size(676' 470);          _gridViewControl.TabIndex = 8;          //           // gridViewBurn          //           _gridViewBurn.Dock = DockStyle.Fill;          _gridViewBurn.Location = new Point(0' 0);          _gridViewBurn.Name = "gridViewBurn";          _gridViewBurn.Size = new Size(676' 470);          _gridViewBurn.TabIndex = 9;          _gridViewBurn.Visible = false;          //          // gridViewRip          //           _gridViewRip.Dock = DockStyle.Fill;          _gridViewRip.Location = new Point(0' 0);          _gridViewRip.Name = "gridViewRip";          _gridViewRip.Size = new Size(676' 470);          _gridViewRip.TabIndex = 9;          _gridViewRip.Visible = false;          //          // gridViewConvert          //           _gridViewConvert.Dock = DockStyle.Fill;          _gridViewConvert.Location = new Point(0' 0);          _gridViewConvert.Name = "gridViewConvert";          _gridViewConvert.Size = new Size(676' 470);          _gridViewConvert.TabIndex = 9;          _gridViewConvert.Visible = false;          //           // playerControl          //           _playerControl.Dock = DockStyle.Fill;          _playerControl.Location = new Point(0' 0);          _playerControl.Name = "playerControl";          _playerControl.Size = new Size(1008' 68);          _playerControl.TabIndex = 0;            playerPanel.Controls.Add(_playerControl);            // Set reference to Main' so that we may use the ErrorGrid          _gridViewControl.SetMainRef(this);            #endregion            // Setup Treeview          _treeViewControl = new TreeViewControl(this);          _treeViewControl.Dock = DockStyle.Fill;          panelLeftTop.Controls.Add(_treeViewControl);            // Setup Misc Info Control          _miscInfoControl = new MiscInfoControl();          _miscInfoControl.Dock = DockStyle.Fill;          panelRight.Controls.Add(_miscInfoControl);            // Setup TagEdit Control          _tagEditControl = new TagEditControl(this);            // Now position the Tracklist and Tagedit Panel          PositionTrackList();            PopulateScriptsCombo();            // Start Listening for Media Changes          ServiceScope.Get<IMediaChangeMonitor>().StartListening(Handle);            //          // Music Database          //          _musicDatabase = ServiceScope.Get<IMusicDatabase>();            foreach (string musicShare in Options.MainSettings.MusicShares)          {            comboBoxMusicFolder.Items.Add(musicShare);          }          if (comboBoxMusicFolder.Items.Count > 0)          {            comboBoxMusicFolder.SelectedIndex = 0;          }            foreach (string query in Options.MainSettings.MusicDatabaseQueries)          {            comboBoxDatabaseQuery.Items.Add(query);          }            // Load BASS          LoadBass();            // Localise the Screens          log.Info("Main: Localisation");          _splashScreen.SetInformation(localisation.ToString("splash"' "Localisation"));          LocaliseScreen();            // Load the Settings          _splashScreen.SetInformation(localisation.ToString("splash"' "LoadSettings"));          LoadSettings();            // Populate the Treeview with the directories found          _treeViewControl.Init();          _treeViewControl.TreeView.Populate();          _treeViewControl.TreeView.Nodes[0].Expand();          _treeViewControl.TreeView.ShowFolder(_selectedDirectory);            _splashScreen.Stop();            Theme = Options.Themes[Options.MainSettings.Theme];            // Display the files in the last selected Directory          if (_selectedDirectory != String.Empty && !TreeView.DatabaseMode)          {            toolStripStatusLabelFolder.Text = _selectedDirectory;              ThreadStart ts = FolderScanAsync;            Thread FolderScanAsyncThread = new Thread(ts);            FolderScanAsyncThread.Name = "FolderScanAsyncThread";            FolderScanAsyncThread.Start();          }            // setup various Event Handler needed          _gridViewControl.View.SelectionChanged += DataGridView_SelectionChanged;            _initialising = false;            // Activate the form' will be hidden because of the size change          Activate();        }        catch (Exception ex)        {          log.Error("Exception while loading main form. {0} {1}"' ex.Message' ex.StackTrace);        }
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,Main_Load,The following statement contains a magic number: try        {          _splashScreen = new SplashScreen();          _splashScreen.Run();          _splashScreen.SetInformation(localisation.ToString("splash"' "Startup"));          log.Info("Main: Loading Main form");            // Listen to Messages          IMessageQueue queueMessage = ServiceScope.Get<IMessageBroker>().GetOrCreate("message");          queueMessage.OnMessageReceive += OnMessageReceive;            // Add the Ribbon Control to the Top Panel          _splashScreen.SetInformation(localisation.ToString("splash"' "AddRibbon"));            _initialising = true;            #region Setup Ribbon            log.Info("Initialising Ribbon");            ribbon.SetStyle(ControlStyles.DoubleBuffer |               ControlStyles.OptimizedDoubleBuffer |               ControlStyles.UserPaint |               ControlStyles.AllPaintingInWmPaint' true);            // Register the Ribbon Button Events          RegisterCommands();            // Register Ribbon KeyTips          RegisterKeyTips();            // Load Recent Folders          List<PinItem> recentPlacesPinItems = new List<PinItem>();            foreach (string folderItem in Options.MainSettings.RecentFolders)          {            try            {              string directoryName = Path.GetDirectoryName(folderItem);              string folderName = Path.GetFileName(directoryName);              if (string.IsNullOrEmpty(folderName))                folderName = directoryName;                PinItem pinItem = new PinItem(                folderName'                directoryName'                Resources.RecentFolder_Large'                false'                directoryName);                recentPlacesPinItems.Add(pinItem);            }            catch (ArgumentException)            {              }          }            pinListRecentFolders.BeginInit();          pinListRecentFolders.Items.AddRange(recentPlacesPinItems.ToArray());          pinListRecentFolders.EndInit();            // Load the available Scripts          int i = 0;          comboBoxScripts.Items.Clear();          ArrayList scripts = null;            if (Options.MainSettings.ActiveScript == "")          {            Options.MainSettings.ActiveScript = "Switch Artist";          }            scripts = ServiceScope.Get<IScriptManager>().GetScripts();          i = 0;          foreach (string[] item in scripts)          {            comboBoxScripts.Items.Add(new Item(item[1]' item[0]' item[2]));            if (item[1] == Options.MainSettings.ActiveScript)            {              comboBoxScripts.SelectedIndex = i;            }            i++;          }            comboBoxRipEncoder.Items.Add(new Item("MP3 Encoder"' "mp3"' ""));          comboBoxRipEncoder.Items.Add(new Item("OGG Encoder"' "ogg"' ""));          comboBoxRipEncoder.Items.Add(new Item("FLAC Encoder"' "flac"' ""));          comboBoxRipEncoder.Items.Add(new Item("AAC Encoder"' "m4a"' ""));          comboBoxRipEncoder.Items.Add(new Item("WMA Encoder"' "wma"' ""));          comboBoxRipEncoder.Items.Add(new Item("WAV Encoder"' "wav"' ""));          comboBoxRipEncoder.Items.Add(new Item("MusePack Encoder"' "mpc"' ""));          comboBoxRipEncoder.Items.Add(new Item("WavPack Encoder"' "wv"' ""));            comboBoxConvertEncoder.Items.Add(new Item("MP3 Encoder"' "mp3"' ""));          comboBoxConvertEncoder.Items.Add(new Item("OGG Encoder"' "ogg"' ""));          comboBoxConvertEncoder.Items.Add(new Item("FLAC Encoder"' "flac"' ""));          comboBoxConvertEncoder.Items.Add(new Item("AAC Encoder"' "m4a"' ""));          comboBoxConvertEncoder.Items.Add(new Item("WMA Encoder"' "wma"' ""));          comboBoxConvertEncoder.Items.Add(new Item("WAV Encoder"' "wav"' ""));          comboBoxConvertEncoder.Items.Add(new Item("MusePack Encoder"' "mpc"' ""));          comboBoxConvertEncoder.Items.Add(new Item("WavPack Encoder"' "wv"' ""));            i = 0;          foreach (Item item in comboBoxRipEncoder.Items)          {            if ((string)item.Value == Options.MainSettings.RipEncoder)            {              comboBoxRipEncoder.SelectedIndex = i;              break;            }            i++;          }            i = 0;          foreach (Item item in comboBoxConvertEncoder.Items)          {            if ((string)item.Value == Options.MainSettings.LastConversionEncoderUsed)            {              comboBoxConvertEncoder.SelectedIndex = i;              break;            }            i++;          }            textBoxRipOutputFolder.Text = Options.MainSettings.RipTargetFolder;          ribbon.CurrentTabPage = ribbonTabPageTag;          ribbon.CustomTitleBarEnabled = true;          ribbon.Minimized = false;          log.Info("Finished Initialising Ribbon");            #endregion            #region Setup Grids            log.Debug("Main: Setup Grid");          _splashScreen.SetInformation(localisation.ToString("splash"' "AddGrids"));          // Add the Grids to the Main Form          _gridViewControl = new GridViewTracks();          _gridViewBurn = new GridViewBurn(this);          _gridViewRip = new GridViewRip(this);          _gridViewConvert = new GridViewConvert(this);          _playerControl = new PlayerControl();            //           // gridViewControl          //           _gridViewControl.AutoScroll = true;          _gridViewControl.Changed = false;          _gridViewControl.Dock = DockStyle.Fill;          _gridViewControl.Location = new Point(0' 0);          _gridViewControl.Name = "gridViewControl";          _gridViewControl.Size = new Size(676' 470);          _gridViewControl.TabIndex = 8;          //           // gridViewBurn          //           _gridViewBurn.Dock = DockStyle.Fill;          _gridViewBurn.Location = new Point(0' 0);          _gridViewBurn.Name = "gridViewBurn";          _gridViewBurn.Size = new Size(676' 470);          _gridViewBurn.TabIndex = 9;          _gridViewBurn.Visible = false;          //          // gridViewRip          //           _gridViewRip.Dock = DockStyle.Fill;          _gridViewRip.Location = new Point(0' 0);          _gridViewRip.Name = "gridViewRip";          _gridViewRip.Size = new Size(676' 470);          _gridViewRip.TabIndex = 9;          _gridViewRip.Visible = false;          //          // gridViewConvert          //           _gridViewConvert.Dock = DockStyle.Fill;          _gridViewConvert.Location = new Point(0' 0);          _gridViewConvert.Name = "gridViewConvert";          _gridViewConvert.Size = new Size(676' 470);          _gridViewConvert.TabIndex = 9;          _gridViewConvert.Visible = false;          //           // playerControl          //           _playerControl.Dock = DockStyle.Fill;          _playerControl.Location = new Point(0' 0);          _playerControl.Name = "playerControl";          _playerControl.Size = new Size(1008' 68);          _playerControl.TabIndex = 0;            playerPanel.Controls.Add(_playerControl);            // Set reference to Main' so that we may use the ErrorGrid          _gridViewControl.SetMainRef(this);            #endregion            // Setup Treeview          _treeViewControl = new TreeViewControl(this);          _treeViewControl.Dock = DockStyle.Fill;          panelLeftTop.Controls.Add(_treeViewControl);            // Setup Misc Info Control          _miscInfoControl = new MiscInfoControl();          _miscInfoControl.Dock = DockStyle.Fill;          panelRight.Controls.Add(_miscInfoControl);            // Setup TagEdit Control          _tagEditControl = new TagEditControl(this);            // Now position the Tracklist and Tagedit Panel          PositionTrackList();            PopulateScriptsCombo();            // Start Listening for Media Changes          ServiceScope.Get<IMediaChangeMonitor>().StartListening(Handle);            //          // Music Database          //          _musicDatabase = ServiceScope.Get<IMusicDatabase>();            foreach (string musicShare in Options.MainSettings.MusicShares)          {            comboBoxMusicFolder.Items.Add(musicShare);          }          if (comboBoxMusicFolder.Items.Count > 0)          {            comboBoxMusicFolder.SelectedIndex = 0;          }            foreach (string query in Options.MainSettings.MusicDatabaseQueries)          {            comboBoxDatabaseQuery.Items.Add(query);          }            // Load BASS          LoadBass();            // Localise the Screens          log.Info("Main: Localisation");          _splashScreen.SetInformation(localisation.ToString("splash"' "Localisation"));          LocaliseScreen();            // Load the Settings          _splashScreen.SetInformation(localisation.ToString("splash"' "LoadSettings"));          LoadSettings();            // Populate the Treeview with the directories found          _treeViewControl.Init();          _treeViewControl.TreeView.Populate();          _treeViewControl.TreeView.Nodes[0].Expand();          _treeViewControl.TreeView.ShowFolder(_selectedDirectory);            _splashScreen.Stop();            Theme = Options.Themes[Options.MainSettings.Theme];            // Display the files in the last selected Directory          if (_selectedDirectory != String.Empty && !TreeView.DatabaseMode)          {            toolStripStatusLabelFolder.Text = _selectedDirectory;              ThreadStart ts = FolderScanAsync;            Thread FolderScanAsyncThread = new Thread(ts);            FolderScanAsyncThread.Name = "FolderScanAsyncThread";            FolderScanAsyncThread.Start();          }            // setup various Event Handler needed          _gridViewControl.View.SelectionChanged += DataGridView_SelectionChanged;            _initialising = false;            // Activate the form' will be hidden because of the size change          Activate();        }        catch (Exception ex)        {          log.Error("Exception while loading main form. {0} {1}"' ex.Message' ex.StackTrace);        }
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,PopulateScriptsCombo,The following statement contains a magic number: foreach (string[] item in scripts)        {          comboBoxScripts.Items.Add(new Item(item[1]' item[0]' item[2]));          if (item[1] == Options.MainSettings.ActiveScript)          {            comboBoxScripts.SelectedIndex = i;          }          i++;        }
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,SetRecentFolder,The following statement contains a magic number: if (Options.MainSettings.RecentFolders.Count > 20)        {          Options.MainSettings.RecentFolders.RemoveAt(20);        }
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,SetRecentFolder,The following statement contains a magic number: if (Options.MainSettings.RecentFolders.Count > 20)        {          Options.MainSettings.RecentFolders.RemoveAt(20);        }
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,FindRibbonWinAsync,The following statement contains a magic number: while (hWnd == IntPtr.Zero)        {          Thread.Sleep(100);          hWnd = FindWindowByCaption(IntPtr.Zero' "Elegant UI");        }
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,FindRibbonWinAsync,The following statement contains a magic number: Thread.Sleep(500);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,LoadBassAsync,The following statement contains a magic number: if (!Bass.BASS_Init(0' 44100' BASSInit.BASS_DEVICE_DEFAULT' IntPtr.Zero))        {          int error = (int)Bass.BASS_ErrorGetCode();          log.Error("Error Init Bass: {0}"' Enum.GetName(typeof(BASSError)' error));          return;        }
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,LoadSettings,The following statement contains a magic number: _treeViewControl.DatabaseMode = Options.MainSettings.DataProvider == 3;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,LoadSettings,The following statement contains a magic number: if (_formLocation.X < 0 || _formLocation.Y < 0 ||            _formLocation.X > Screen.PrimaryScreen.Bounds.Width || _formLocation.Y > Screen.PrimaryScreen.Bounds.Height)        {          _formLocation.X = 10;          _formLocation.Y = 10;        }
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,LoadSettings,The following statement contains a magic number: if (_formLocation.X < 0 || _formLocation.Y < 0 ||            _formLocation.X > Screen.PrimaryScreen.Bounds.Width || _formLocation.Y > Screen.PrimaryScreen.Bounds.Height)        {          _formLocation.X = 10;          _formLocation.Y = 10;        }
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,LoadSettings,The following statement contains a magic number: if (_formSize.Width < 0 || _formSize.Height < 0 ||            _formSize.Width > Screen.PrimaryScreen.Bounds.Width || _formSize.Height > Screen.PrimaryScreen.Bounds.Height)        {          _formSize.Width = 1024;          _formSize.Height = 768;        }
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,LoadSettings,The following statement contains a magic number: if (_formSize.Width < 0 || _formSize.Height < 0 ||            _formSize.Width > Screen.PrimaryScreen.Bounds.Width || _formSize.Height > Screen.PrimaryScreen.Bounds.Height)        {          _formSize.Width = 1024;          _formSize.Height = 768;        }
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,LoadSettings,The following statement contains a magic number: if (Options.MainSettings.BottomPanelSize > -1 && Options.MainSettings.BottomPanelSize < 1024)          panelMiddleBottom.Height = Options.MainSettings.BottomPanelSize;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,ShowModalDialog,The following statement contains a magic number: int x = (ClientSize.Width / 2) - (f.Width / 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,ShowModalDialog,The following statement contains a magic number: int x = (ClientSize.Width / 2) - (f.Width / 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,ShowModalDialog,The following statement contains a magic number: int y = (ClientSize.Height / 2) - (f.Height / 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,ShowModalDialog,The following statement contains a magic number: int y = (ClientSize.Height / 2) - (f.Height / 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,ShowCenteredForm,The following statement contains a magic number: int x = (ClientSize.Width / 2) - (f.Width / 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,ShowCenteredForm,The following statement contains a magic number: int x = (ClientSize.Width / 2) - (f.Width / 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,ShowCenteredForm,The following statement contains a magic number: int y = (ClientSize.Height / 2) - (f.Height / 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,ShowCenteredForm,The following statement contains a magic number: int y = (ClientSize.Height / 2) - (f.Height / 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitPreferences,The following statement contains a magic number: switch (Options.MainSettings.ID3V2Version)        {          case 0: // APE Tags embedded in mp3            radioButtonUseApe.Checked = true;            break;            case 3:            radioButtonUseV3.Checked = true;            break;            case 4:            radioButtonUseV4.Checked = true;            break;        }
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitPreferences,The following statement contains a magic number: switch (Options.MainSettings.ID3V2Version)        {          case 0: // APE Tags embedded in mp3            radioButtonUseApe.Checked = true;            break;            case 3:            radioButtonUseV3.Checked = true;            break;            case 4:            radioButtonUseV4.Checked = true;            break;        }
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitPreferences,The following statement contains a magic number: switch (Options.MainSettings.ID3Version)        {          case 1:            radioButtonID3V1.Checked = true;            break;            case 2:            radioButtonID3V2.Checked = true;            break;            case 3:            radioButtonID3Both.Checked = true;            break;        }
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitPreferences,The following statement contains a magic number: switch (Options.MainSettings.ID3Version)        {          case 1:            radioButtonID3V1.Checked = true;            break;            case 2:            radioButtonID3V2.Checked = true;            break;            case 3:            radioButtonID3Both.Checked = true;            break;        }
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,tbRibbonKeyValue_KeyPress,The following statement contains a magic number: const char Delete = (char)8;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,buttonSettingsApply_Click,The following statement contains a magic number: try        {          Options.MainSettings.RipLameABRBitRate = comboBoxLamePresets.SelectedIndex == 4                                                     ? Convert.ToInt32(textBoxABRBitrate.Text)                                                     : 0;        }        catch (FormatException) { }
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,buttonSettingsApply_Click,The following statement contains a magic number: if (radioButtonUseV3.Checked)          Options.MainSettings.ID3V2Version = 3;        else if (radioButtonUseV4.Checked)          Options.MainSettings.ID3V2Version = 4;        else          Options.MainSettings.ID3V2Version = 0;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,buttonSettingsApply_Click,The following statement contains a magic number: if (radioButtonUseV3.Checked)          Options.MainSettings.ID3V2Version = 3;        else if (radioButtonUseV4.Checked)          Options.MainSettings.ID3V2Version = 4;        else          Options.MainSettings.ID3V2Version = 0;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,buttonSettingsApply_Click,The following statement contains a magic number: if (radioButtonID3V1.Checked)          Options.MainSettings.ID3Version = 1;        else if (radioButtonID3V2.Checked)          Options.MainSettings.ID3Version = 2;        else          Options.MainSettings.ID3Version = 3;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,buttonSettingsApply_Click,The following statement contains a magic number: if (radioButtonID3V1.Checked)          Options.MainSettings.ID3Version = 1;        else if (radioButtonID3V2.Checked)          Options.MainSettings.ID3Version = 2;        else          Options.MainSettings.ID3Version = 3;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,lblParm_Click,The following statement contains a magic number: if (parameter != String.Empty)        {          text = text.Insert(cursorPos' parameter);          textBoxRippingFilenameFormat.Text = text;          if (label.Name == "lblParmFolder")            cursorPos += 1;          else            cursorPos += 3;            textBoxRippingFilenameFormat.SelectionStart = cursorPos;        }
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,comboBoxPreset_SelectedIndexChanged,The following statement contains a magic number: switch (comboBoxLamePresets.SelectedIndex)        {          case 0:            textBoxPresetDesc.Text = localisation.ToString("settings"' "DescPrefMedium");            break;            case 1:            textBoxPresetDesc.Text = localisation.ToString("settings"' "DescPrefStandard");            break;            case 2:            textBoxPresetDesc.Text = localisation.ToString("settings"' "DescPrefExtreme");            break;            case 3:            textBoxPresetDesc.Text = localisation.ToString("settings"' "DescPrefInsane");            break;            case 4:            textBoxPresetDesc.Text = localisation.ToString("settings"' "DescPrefABR");            textBoxABRBitrate.Enabled = true;            break;        }
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,comboBoxPreset_SelectedIndexChanged,The following statement contains a magic number: switch (comboBoxLamePresets.SelectedIndex)        {          case 0:            textBoxPresetDesc.Text = localisation.ToString("settings"' "DescPrefMedium");            break;            case 1:            textBoxPresetDesc.Text = localisation.ToString("settings"' "DescPrefStandard");            break;            case 2:            textBoxPresetDesc.Text = localisation.ToString("settings"' "DescPrefExtreme");            break;            case 3:            textBoxPresetDesc.Text = localisation.ToString("settings"' "DescPrefInsane");            break;            case 4:            textBoxPresetDesc.Text = localisation.ToString("settings"' "DescPrefABR");            textBoxABRBitrate.Enabled = true;            break;        }
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,comboBoxPreset_SelectedIndexChanged,The following statement contains a magic number: switch (comboBoxLamePresets.SelectedIndex)        {          case 0:            textBoxPresetDesc.Text = localisation.ToString("settings"' "DescPrefMedium");            break;            case 1:            textBoxPresetDesc.Text = localisation.ToString("settings"' "DescPrefStandard");            break;            case 2:            textBoxPresetDesc.Text = localisation.ToString("settings"' "DescPrefExtreme");            break;            case 3:            textBoxPresetDesc.Text = localisation.ToString("settings"' "DescPrefInsane");            break;            case 4:            textBoxPresetDesc.Text = localisation.ToString("settings"' "DescPrefABR");            textBoxABRBitrate.Enabled = true;            break;        }
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,comboBoxWMAEncoderFormat_SelectedIndexChanged,The following statement contains a magic number: switch (comboBoxWMAEncoderFormat.SelectedIndex)        {          case 0: // WMA Standard            comboBoxWMACbrVbr.Items.AddRange(new[]                                               {                                                 new Item(localisation.ToString("settings"' "Cbr")' "Cbr"' "")'                                                 new Item(localisation.ToString("settings"' "Vbr")' "Vbr"' "")                                               });            SetWMACbrVbr();            break;            case 1: // WMA Pro            comboBoxWMACbrVbr.Items.AddRange(new[]                                               {                                                 new Item(localisation.ToString("settings"' "Cbr")' "Cbr"' "")'                                                 new Item(localisation.ToString("settings"' "Vbr")' "Vbr"' "")                                               });            SetWMACbrVbr();            break;            case 2: // WMA LossLess            comboBoxWMACbrVbr.Items.AddRange(new[] { new Item(localisation.ToString("settings"' "Vbr")' "Vbr"' "") });            comboBoxWMACbrVbr.SelectedIndex = 0;            break;        }
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,SetWMASampleCombo,The following statement contains a magic number: if (encoder == "wma")        {          if (vbrcbr == "Cbr")          {            modeTab = Options.WmaStandardSampleCBR;            defaultValue = 10;            _defaultBitRateIndex = 4;          }          else          {            modeTab = Options.WmaStandardSampleVBR;            defaultValue = 0;            _defaultBitRateIndex = 4;          }        }        else if (encoder == "wmapro")        {          if (vbrcbr == "Cbr")          {            modeTab = Options.WmaProSampleCBR;            defaultValue = 1;            _defaultBitRateIndex = 4;          }          else          {            modeTab = Options.WmaProSampleVBR;            defaultValue = 0;            _defaultBitRateIndex = 4;          }        }        else        {          // Lossless          modeTab = Options.WmaLosslessSampleVBR;          defaultValue = 0;          _defaultBitRateIndex = 0;        }
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,SetWMASampleCombo,The following statement contains a magic number: if (encoder == "wma")        {          if (vbrcbr == "Cbr")          {            modeTab = Options.WmaStandardSampleCBR;            defaultValue = 10;            _defaultBitRateIndex = 4;          }          else          {            modeTab = Options.WmaStandardSampleVBR;            defaultValue = 0;            _defaultBitRateIndex = 4;          }        }        else if (encoder == "wmapro")        {          if (vbrcbr == "Cbr")          {            modeTab = Options.WmaProSampleCBR;            defaultValue = 1;            _defaultBitRateIndex = 4;          }          else          {            modeTab = Options.WmaProSampleVBR;            defaultValue = 0;            _defaultBitRateIndex = 4;          }        }        else        {          // Lossless          modeTab = Options.WmaLosslessSampleVBR;          defaultValue = 0;          _defaultBitRateIndex = 0;        }
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,SetWMASampleCombo,The following statement contains a magic number: if (encoder == "wma")        {          if (vbrcbr == "Cbr")          {            modeTab = Options.WmaStandardSampleCBR;            defaultValue = 10;            _defaultBitRateIndex = 4;          }          else          {            modeTab = Options.WmaStandardSampleVBR;            defaultValue = 0;            _defaultBitRateIndex = 4;          }        }        else if (encoder == "wmapro")        {          if (vbrcbr == "Cbr")          {            modeTab = Options.WmaProSampleCBR;            defaultValue = 1;            _defaultBitRateIndex = 4;          }          else          {            modeTab = Options.WmaProSampleVBR;            defaultValue = 0;            _defaultBitRateIndex = 4;          }        }        else        {          // Lossless          modeTab = Options.WmaLosslessSampleVBR;          defaultValue = 0;          _defaultBitRateIndex = 0;        }
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,SetWMASampleCombo,The following statement contains a magic number: if (encoder == "wma")        {          if (vbrcbr == "Cbr")          {            modeTab = Options.WmaStandardSampleCBR;            defaultValue = 10;            _defaultBitRateIndex = 4;          }          else          {            modeTab = Options.WmaStandardSampleVBR;            defaultValue = 0;            _defaultBitRateIndex = 4;          }        }        else if (encoder == "wmapro")        {          if (vbrcbr == "Cbr")          {            modeTab = Options.WmaProSampleCBR;            defaultValue = 1;            _defaultBitRateIndex = 4;          }          else          {            modeTab = Options.WmaProSampleVBR;            defaultValue = 0;            _defaultBitRateIndex = 4;          }        }        else        {          // Lossless          modeTab = Options.WmaLosslessSampleVBR;          defaultValue = 0;          _defaultBitRateIndex = 0;        }
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,SetWMASampleCombo,The following statement contains a magic number: if (encoder == "wma")        {          if (vbrcbr == "Cbr")          {            modeTab = Options.WmaStandardSampleCBR;            defaultValue = 10;            _defaultBitRateIndex = 4;          }          else          {            modeTab = Options.WmaStandardSampleVBR;            defaultValue = 0;            _defaultBitRateIndex = 4;          }        }        else if (encoder == "wmapro")        {          if (vbrcbr == "Cbr")          {            modeTab = Options.WmaProSampleCBR;            defaultValue = 1;            _defaultBitRateIndex = 4;          }          else          {            modeTab = Options.WmaProSampleVBR;            defaultValue = 0;            _defaultBitRateIndex = 4;          }        }        else        {          // Lossless          modeTab = Options.WmaLosslessSampleVBR;          defaultValue = 0;          _defaultBitRateIndex = 0;        }
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,SetWMABitRateCombo,The following statement contains a magic number: if (encoder == "wmalossless")        {          comboBoxWMABitRate.Items.Add(100);          comboBoxWMABitRate.SelectedIndex = 0;        }        else        {          int[] bitRates = BassWma.BASS_WMA_EncodeGetRates(Convert.ToInt32(sampleFormat[2])'                                                           Convert.ToInt32(sampleFormat[1])' encodeFlags);          for (int i = 0; i < bitRates.Length; i++)            comboBoxWMABitRate.Items.Add(bitRates[i]);            comboBoxWMABitRate.SelectedItem = Convert.ToInt32(Options.MainSettings.RipEncoderWMABitRate);          if (comboBoxWMABitRate.SelectedItem == null)          {            if (comboBoxWMABitRate.Items.Count - 1 < _defaultBitRateIndex)              comboBoxWMABitRate.SelectedIndex = 0;            else              comboBoxWMABitRate.SelectedIndex = _defaultBitRateIndex;          }        }
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,SetWMABitRateCombo,The following statement contains a magic number: if (encoder == "wmalossless")        {          comboBoxWMABitRate.Items.Add(100);          comboBoxWMABitRate.SelectedIndex = 0;        }        else        {          int[] bitRates = BassWma.BASS_WMA_EncodeGetRates(Convert.ToInt32(sampleFormat[2])'                                                           Convert.ToInt32(sampleFormat[1])' encodeFlags);          for (int i = 0; i < bitRates.Length; i++)            comboBoxWMABitRate.Items.Add(bitRates[i]);            comboBoxWMABitRate.SelectedItem = Convert.ToInt32(Options.MainSettings.RipEncoderWMABitRate);          if (comboBoxWMABitRate.SelectedItem == null)          {            if (comboBoxWMABitRate.Items.Count - 1 < _defaultBitRateIndex)              comboBoxWMABitRate.SelectedIndex = 0;            else              comboBoxWMABitRate.SelectedIndex = _defaultBitRateIndex;          }        }
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,ExecuteDatabaseQuery_Executed,The following statement contains a magic number: foreach (string q in comboBoxDatabaseQuery.Items)        {          Options.MainSettings.MusicDatabaseQueries.Add(q);          if (i++ > 10)          {            break;          }        }
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.panelBottom.Location = new System.Drawing.Point(0' 1072);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.panelBottom.Size = new System.Drawing.Size(1497' 90);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.panelBottom.Size = new System.Drawing.Size(1497' 90);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.panelBottom.TabIndex = 12;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.playerPanel.Size = new System.Drawing.Size(1497' 90);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.playerPanel.Size = new System.Drawing.Size(1497' 90);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.playerPanel.TabIndex = 11;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.statusBar.Location = new System.Drawing.Point(0' 1162);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.statusBar.Size = new System.Drawing.Size(1497' 22);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.statusBar.Size = new System.Drawing.Size(1497' 22);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.statusBar.TabIndex = 16;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.statusBarNotificationsArea1.MaximumSize = new System.Drawing.Size(0' 22);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.statusBarNotificationsArea1.MinimumSize = new System.Drawing.Size(0' 22);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.statusBarNotificationsArea1.Size = new System.Drawing.Size(1182' 22);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.statusBarNotificationsArea1.Size = new System.Drawing.Size(1182' 22);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.statusBarPane2.MaximumSize = new System.Drawing.Size(0' 22);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.statusBarPane2.MinimumSize = new System.Drawing.Size(0' 22);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.statusBarPane2.Size = new System.Drawing.Size(151' 22);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.statusBarPane2.Size = new System.Drawing.Size(151' 22);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.toolStripStatusLabelFiles.Location = new System.Drawing.Point(5' 5);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.toolStripStatusLabelFiles.Location = new System.Drawing.Point(5' 5);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.toolStripStatusLabelFiles.Margin = new System.Windows.Forms.Padding(3' 0' 3' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.toolStripStatusLabelFiles.Margin = new System.Windows.Forms.Padding(3' 0' 3' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.toolStripStatusLabelFiles.Size = new System.Drawing.Size(57' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.toolStripStatusLabelFiles.Size = new System.Drawing.Size(57' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.toolStripStatusLabelFilter.Location = new System.Drawing.Point(68' 5);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.toolStripStatusLabelFilter.Location = new System.Drawing.Point(68' 5);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.toolStripStatusLabelFilter.Margin = new System.Windows.Forms.Padding(3' 0' 3' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.toolStripStatusLabelFilter.Margin = new System.Windows.Forms.Padding(3' 0' 3' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.toolStripStatusLabelFilter.Size = new System.Drawing.Size(48' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.toolStripStatusLabelFilter.Size = new System.Drawing.Size(48' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.statusBarPane3.Location = new System.Drawing.Point(151' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.statusBarPane3.MaximumSize = new System.Drawing.Size(0' 22);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.statusBarPane3.MinimumSize = new System.Drawing.Size(0' 22);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.statusBarPane3.Padding = new System.Windows.Forms.Padding(10' 2' 2' 1);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.statusBarPane3.Padding = new System.Windows.Forms.Padding(10' 2' 2' 1);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.statusBarPane3.Padding = new System.Windows.Forms.Padding(10' 2' 2' 1);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.statusBarPane3.Size = new System.Drawing.Size(119' 22);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.statusBarPane3.Size = new System.Drawing.Size(119' 22);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.toolStripStatusLabelFolder.Location = new System.Drawing.Point(13' 5);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.toolStripStatusLabelFolder.Location = new System.Drawing.Point(13' 5);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.toolStripStatusLabelFolder.Margin = new System.Windows.Forms.Padding(3' 0' 3' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.toolStripStatusLabelFolder.Margin = new System.Windows.Forms.Padding(3' 0' 3' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.toolStripStatusLabelFolder.Size = new System.Drawing.Size(63' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.toolStripStatusLabelFolder.Size = new System.Drawing.Size(63' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.statusBarPane5.Location = new System.Drawing.Point(270' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.statusBarPane5.MaximumSize = new System.Drawing.Size(0' 22);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.statusBarPane5.MinimumSize = new System.Drawing.Size(0' 22);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.statusBarPane5.Size = new System.Drawing.Size(40' 22);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.statusBarPane5.Size = new System.Drawing.Size(40' 22);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.statusBarPane5.TabIndex = 2;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.toolStripStatusLabelProgress.Location = new System.Drawing.Point(5' 11);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.toolStripStatusLabelProgress.Location = new System.Drawing.Point(5' 11);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.statusBarControlsArea1.Location = new System.Drawing.Point(1182' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.statusBarControlsArea1.MaximumSize = new System.Drawing.Size(0' 22);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.statusBarControlsArea1.MinimumSize = new System.Drawing.Size(0' 22);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.statusBarControlsArea1.Size = new System.Drawing.Size(315' 22);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.statusBarControlsArea1.Size = new System.Drawing.Size(315' 22);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.statusBarPane4.MaximumSize = new System.Drawing.Size(0' 22);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.statusBarPane4.MinimumSize = new System.Drawing.Size(0' 22);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.statusBarPane4.Size = new System.Drawing.Size(34' 22);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.statusBarPane4.Size = new System.Drawing.Size(34' 22);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.statusBarPane4.TabIndex = 2;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.toolStripStatusLabelScanProgress.Location = new System.Drawing.Point(5' 11);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.toolStripStatusLabelScanProgress.Location = new System.Drawing.Point(5' 11);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.statusBarPane1.Location = new System.Drawing.Point(34' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.statusBarPane1.MaximumSize = new System.Drawing.Size(0' 22);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.statusBarPane1.MinimumSize = new System.Drawing.Size(0' 22);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.statusBarPane1.Size = new System.Drawing.Size(229' 22);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.statusBarPane1.Size = new System.Drawing.Size(229' 22);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.progressBar1.DesiredWidth = 175;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.progressBar1.Location = new System.Drawing.Point(3' 5);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.progressBar1.Location = new System.Drawing.Point(3' 5);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.progressBar1.Size = new System.Drawing.Size(175' 12);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.progressBar1.Size = new System.Drawing.Size(175' 12);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonProgressCancel.Location = new System.Drawing.Point(180' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonProgressCancel.Location = new System.Drawing.Point(180' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonProgressCancel.Size = new System.Drawing.Size(22' 19);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonProgressCancel.Size = new System.Drawing.Size(22' 19);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ribbon.Size = new System.Drawing.Size(1497' 150);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ribbon.Size = new System.Drawing.Size(1497' 150);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ribbon.TabIndex = 15;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageView.Location = new System.Drawing.Point(0' 51);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageView.Size = new System.Drawing.Size(1401' 1111);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageView.Size = new System.Drawing.Size(1401' 1111);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageView.TabIndex = 17;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewPageOptions.Padding = new System.Windows.Forms.Padding(0' 1' 2' 1);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewPageOptions.Size = new System.Drawing.Size(1316' 1109);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewPageOptions.Size = new System.Drawing.Size(1316' 1109);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.panel2.Location = new System.Drawing.Point(210' 57);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.panel2.Location = new System.Drawing.Point(210' 57);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.panel2.Size = new System.Drawing.Size(1104' 1051);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.panel2.Size = new System.Drawing.Size(1104' 1051);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tabControlSettings.Size = new System.Drawing.Size(1104' 1051);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tabControlSettings.Size = new System.Drawing.Size(1104' 1051);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tabPageSettingsGeneral.Size = new System.Drawing.Size(1102' 1036);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tabPageSettingsGeneral.Size = new System.Drawing.Size(1102' 1036);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxGeneral.Location = new System.Drawing.Point(6' 25);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxGeneral.Location = new System.Drawing.Point(6' 25);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxGeneral.Size = new System.Drawing.Size(587' 207);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxGeneral.Size = new System.Drawing.Size(587' 207);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbTracklistLocation.Location = new System.Drawing.Point(16' 144);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbTracklistLocation.Location = new System.Drawing.Point(16' 144);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbTracklistLocation.Size = new System.Drawing.Size(100' 23);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbTracklistLocation.Size = new System.Drawing.Size(100' 23);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbTracklistLocation.TabIndex = 2;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.pictureBoxTrackListTop.Location = new System.Drawing.Point(215' 122);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.pictureBoxTrackListTop.Location = new System.Drawing.Point(215' 122);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.pictureBoxTrackListTop.Size = new System.Drawing.Size(97' 57);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.pictureBoxTrackListTop.Size = new System.Drawing.Size(97' 57);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.pictureBoxTrackListTop.TabIndex = 2;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.pictureBoxTrackListBottom.Location = new System.Drawing.Point(333' 122);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.pictureBoxTrackListBottom.Location = new System.Drawing.Point(333' 122);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.pictureBoxTrackListBottom.Size = new System.Drawing.Size(97' 57);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.pictureBoxTrackListBottom.Size = new System.Drawing.Size(97' 57);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.pictureBoxTrackListBottom.TabIndex = 6;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxDebugLevel.Location = new System.Drawing.Point(218' 80);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxDebugLevel.Location = new System.Drawing.Point(218' 80);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxDebugLevel.Size = new System.Drawing.Size(320' 21);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxDebugLevel.Size = new System.Drawing.Size(320' 21);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxDebugLevel.TabIndex = 2;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxDebugLevel.TextEditorWidth = 301;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbDebugLevel.Location = new System.Drawing.Point(16' 83);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbDebugLevel.Location = new System.Drawing.Point(16' 83);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbDebugLevel.Size = new System.Drawing.Size(67' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbDebugLevel.Size = new System.Drawing.Size(67' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbDebugLevel.TabIndex = 5;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbTheme.Location = new System.Drawing.Point(16' 52);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbTheme.Location = new System.Drawing.Point(16' 52);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbTheme.Size = new System.Drawing.Size(43' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbTheme.Size = new System.Drawing.Size(43' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbTheme.TabIndex = 4;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxThemes.Location = new System.Drawing.Point(218' 49);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxThemes.Location = new System.Drawing.Point(218' 49);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxThemes.Size = new System.Drawing.Size(320' 21);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxThemes.Size = new System.Drawing.Size(320' 21);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxThemes.TextEditorWidth = 301;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxLanguage.Location = new System.Drawing.Point(218' 17);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxLanguage.Location = new System.Drawing.Point(218' 17);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxLanguage.Size = new System.Drawing.Size(320' 21);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxLanguage.Size = new System.Drawing.Size(320' 21);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxLanguage.TextEditorWidth = 301;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbLanguage.Location = new System.Drawing.Point(16' 20);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbLanguage.Location = new System.Drawing.Point(16' 20);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbLanguage.Size = new System.Drawing.Size(58' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbLanguage.Size = new System.Drawing.Size(58' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tabPageSettingsKeys.Size = new System.Drawing.Size(1032' 1036);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tabPageSettingsKeys.Size = new System.Drawing.Size(1032' 1036);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxKeys.Location = new System.Drawing.Point(9' 21);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxKeys.Location = new System.Drawing.Point(9' 21);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxKeys.Size = new System.Drawing.Size(581' 471);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxKeys.Size = new System.Drawing.Size(581' 471);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxKeys.TabIndex = 2;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tbRibbonKeyValue.Location = new System.Drawing.Point(196' 432);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tbRibbonKeyValue.Location = new System.Drawing.Point(196' 432);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tbRibbonKeyValue.Size = new System.Drawing.Size(20' 20);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tbRibbonKeyValue.Size = new System.Drawing.Size(20' 20);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tbRibbonKeyValue.TabIndex = 13;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lblRibbonShortCut.Location = new System.Drawing.Point(22' 435);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lblRibbonShortCut.Location = new System.Drawing.Point(22' 435);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lblRibbonShortCut.Size = new System.Drawing.Size(87' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lblRibbonShortCut.Size = new System.Drawing.Size(87' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lblRibbonShortCut.TabIndex = 12;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lblKeyShortCut.Location = new System.Drawing.Point(22' 406);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lblKeyShortCut.Location = new System.Drawing.Point(22' 406);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lblKeyShortCut.Size = new System.Drawing.Size(71' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lblKeyShortCut.Size = new System.Drawing.Size(71' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lblKeyShortCut.TabIndex = 11;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonChangeKey.Location = new System.Drawing.Point(480' 425);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonChangeKey.Location = new System.Drawing.Point(480' 425);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonChangeKey.Size = new System.Drawing.Size(89' 23);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonChangeKey.Size = new System.Drawing.Size(89' 23);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonChangeKey.TabIndex = 10;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tbKeyValue.Location = new System.Drawing.Point(416' 393);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tbKeyValue.Location = new System.Drawing.Point(416' 393);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tbKeyValue.Size = new System.Drawing.Size(153' 20);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tbKeyValue.Size = new System.Drawing.Size(153' 20);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tbKeyValue.TabIndex = 9;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ttLabel1.Location = new System.Drawing.Point(397' 397);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ttLabel1.Location = new System.Drawing.Point(397' 397);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ttLabel1.Size = new System.Drawing.Size(13' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ttLabel1.Size = new System.Drawing.Size(13' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ttLabel1.TabIndex = 8;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckShift.Location = new System.Drawing.Point(305' 393);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckShift.Location = new System.Drawing.Point(305' 393);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckShift.Size = new System.Drawing.Size(47' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckShift.Size = new System.Drawing.Size(47' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckShift.TabIndex = 7;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckCtrl.Location = new System.Drawing.Point(250' 393);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckCtrl.Location = new System.Drawing.Point(250' 393);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckCtrl.Size = new System.Drawing.Size(41' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckCtrl.Size = new System.Drawing.Size(41' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckCtrl.TabIndex = 6;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckAlt.Location = new System.Drawing.Point(196' 393);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckAlt.Location = new System.Drawing.Point(196' 393);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckAlt.Size = new System.Drawing.Size(38' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckAlt.Size = new System.Drawing.Size(38' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckAlt.TabIndex = 5;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tbKeyDescription.Location = new System.Drawing.Point(194' 357);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tbKeyDescription.Location = new System.Drawing.Point(194' 357);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tbKeyDescription.Size = new System.Drawing.Size(375' 20);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tbKeyDescription.Size = new System.Drawing.Size(375' 20);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbKeyDescription.Location = new System.Drawing.Point(22' 357);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbKeyDescription.Location = new System.Drawing.Point(22' 357);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbKeyDescription.Size = new System.Drawing.Size(63' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbKeyDescription.Size = new System.Drawing.Size(63' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbKeyDescription.TabIndex = 3;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tbAction.Location = new System.Drawing.Point(194' 328);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tbAction.Location = new System.Drawing.Point(194' 328);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tbAction.Size = new System.Drawing.Size(375' 20);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tbAction.Size = new System.Drawing.Size(375' 20);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbKeyAction.Location = new System.Drawing.Point(22' 331);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbKeyAction.Location = new System.Drawing.Point(22' 331);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbKeyAction.Size = new System.Drawing.Size(40' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbKeyAction.Size = new System.Drawing.Size(40' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.treeViewKeys.Location = new System.Drawing.Point(19' 31);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.treeViewKeys.Location = new System.Drawing.Point(19' 31);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.treeViewKeys.Size = new System.Drawing.Size(550' 284);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.treeViewKeys.Size = new System.Drawing.Size(550' 284);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tabPageSettingsTagsGeneral.Size = new System.Drawing.Size(1032' 1036);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tabPageSettingsTagsGeneral.Size = new System.Drawing.Size(1032' 1036);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tabPageSettingsTagsGeneral.TabIndex = 2;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxTagsGeneral.Location = new System.Drawing.Point(6' 25);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxTagsGeneral.Location = new System.Drawing.Point(6' 25);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxTagsGeneral.Size = new System.Drawing.Size(580' 153);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxTagsGeneral.Size = new System.Drawing.Size(580' 153);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxTagsGeneral.TabIndex = 4;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckChangeReadonlyAttributte.Location = new System.Drawing.Point(14' 99);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckChangeReadonlyAttributte.Location = new System.Drawing.Point(14' 99);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckChangeReadonlyAttributte.Size = new System.Drawing.Size(544' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckChangeReadonlyAttributte.Size = new System.Drawing.Size(544' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckChangeReadonlyAttributte.TabIndex = 6;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckAutoFillNumberOfTracks.Location = new System.Drawing.Point(14' 48);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckAutoFillNumberOfTracks.Location = new System.Drawing.Point(14' 48);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckAutoFillNumberOfTracks.Size = new System.Drawing.Size(544' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckAutoFillNumberOfTracks.Size = new System.Drawing.Size(544' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckAutoFillNumberOfTracks.TabIndex = 5;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckUseCaseConversionWhenSaving.Location = new System.Drawing.Point(14' 73);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckUseCaseConversionWhenSaving.Location = new System.Drawing.Point(14' 73);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckUseCaseConversionWhenSaving.Size = new System.Drawing.Size(544' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckUseCaseConversionWhenSaving.Size = new System.Drawing.Size(544' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckCopyArtistToAlbumArtist.Location = new System.Drawing.Point(15' 25);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckCopyArtistToAlbumArtist.Location = new System.Drawing.Point(15' 25);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckCopyArtistToAlbumArtist.Size = new System.Drawing.Size(543' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckCopyArtistToAlbumArtist.Size = new System.Drawing.Size(543' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tabPageSettingsTagsId3.Size = new System.Drawing.Size(1032' 1036);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tabPageSettingsTagsId3.Size = new System.Drawing.Size(1032' 1036);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tabPageSettingsTagsId3.TabIndex = 3;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxCustomGenres.Location = new System.Drawing.Point(7' 423);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxCustomGenres.Location = new System.Drawing.Point(7' 423);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxCustomGenres.Size = new System.Drawing.Size(586' 199);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxCustomGenres.Size = new System.Drawing.Size(586' 199);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxCustomGenres.TabIndex = 5;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonDeleteCustomGenre.Location = new System.Drawing.Point(388' 85);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonDeleteCustomGenre.Location = new System.Drawing.Point(388' 85);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonDeleteCustomGenre.Size = new System.Drawing.Size(183' 36);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonDeleteCustomGenre.Size = new System.Drawing.Size(183' 36);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonDeleteCustomGenre.TabIndex = 5;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.listViewCustomGenres.Location = new System.Drawing.Point(11' 30);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.listViewCustomGenres.Location = new System.Drawing.Point(11' 30);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.listViewCustomGenres.Size = new System.Drawing.Size(364' 149);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.listViewCustomGenres.Size = new System.Drawing.Size(364' 149);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.listViewCustomGenres.TabIndex = 4;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonAddCustomGenre.Location = new System.Drawing.Point(389' 33);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonAddCustomGenre.Location = new System.Drawing.Point(389' 33);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonAddCustomGenre.Size = new System.Drawing.Size(183' 36);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonAddCustomGenre.Size = new System.Drawing.Size(183' 36);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonAddCustomGenre.TabIndex = 3;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxTagValidate.Location = new System.Drawing.Point(6' 317);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxTagValidate.Location = new System.Drawing.Point(6' 317);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxTagValidate.Size = new System.Drawing.Size(586' 87);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxTagValidate.Size = new System.Drawing.Size(586' 87);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxTagValidate.TabIndex = 4;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckAutoFixMp3.Location = new System.Drawing.Point(12' 52);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckAutoFixMp3.Location = new System.Drawing.Point(12' 52);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckAutoFixMp3.Size = new System.Drawing.Size(559' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckAutoFixMp3.Size = new System.Drawing.Size(559' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckValidateMP3.Location = new System.Drawing.Point(12' 29);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckValidateMP3.Location = new System.Drawing.Point(12' 29);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckValidateMP3.Size = new System.Drawing.Size(559' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckValidateMP3.Size = new System.Drawing.Size(559' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxTagsID3.Location = new System.Drawing.Point(6' 24);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxTagsID3.Location = new System.Drawing.Point(6' 24);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxTagsID3.Size = new System.Drawing.Size(586' 279);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxTagsID3.Size = new System.Drawing.Size(586' 279);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxTagsID3.TabIndex = 3;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckClearUserFramesOnSave.Location = new System.Drawing.Point(14' 245);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckClearUserFramesOnSave.Location = new System.Drawing.Point(14' 245);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckClearUserFramesOnSave.Size = new System.Drawing.Size(559' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckClearUserFramesOnSave.Size = new System.Drawing.Size(559' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckClearUserFramesOnSave.TabIndex = 2;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxCharacterEncoding.Location = new System.Drawing.Point(331' 18);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxCharacterEncoding.Location = new System.Drawing.Point(331' 18);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxCharacterEncoding.Size = new System.Drawing.Size(171' 21);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxCharacterEncoding.Size = new System.Drawing.Size(171' 21);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxCharacterEncoding.TabIndex = 7;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxCharacterEncoding.TextEditorWidth = 152;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonUseApe.Location = new System.Drawing.Point(12' 92);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonUseApe.Location = new System.Drawing.Point(12' 92);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonUseApe.Size = new System.Drawing.Size(300' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonUseApe.Size = new System.Drawing.Size(300' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonUseApe.TabIndex = 2;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbCharacterEncoding.Location = new System.Drawing.Point(13' 23);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbCharacterEncoding.Location = new System.Drawing.Point(13' 23);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbCharacterEncoding.Size = new System.Drawing.Size(280' 23);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbCharacterEncoding.Size = new System.Drawing.Size(280' 23);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbCharacterEncoding.TabIndex = 6;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonUseV4.Location = new System.Drawing.Point(12' 69);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonUseV4.Location = new System.Drawing.Point(12' 69);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonUseV4.Size = new System.Drawing.Size(282' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonUseV4.Size = new System.Drawing.Size(282' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonUseV3.Location = new System.Drawing.Point(12' 46);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonUseV3.Location = new System.Drawing.Point(12' 46);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonUseV3.Size = new System.Drawing.Size(271' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonUseV3.Size = new System.Drawing.Size(271' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxID3Update.Location = new System.Drawing.Point(12' 134);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxID3Update.Location = new System.Drawing.Point(12' 134);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxID3Update.Size = new System.Drawing.Size(560' 99);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxID3Update.Size = new System.Drawing.Size(560' 99);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxRemoveID3V1.Location = new System.Drawing.Point(278' 34);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxRemoveID3V1.Location = new System.Drawing.Point(278' 34);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxRemoveID3V1.Size = new System.Drawing.Size(255' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxRemoveID3V1.Size = new System.Drawing.Size(255' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxRemoveID3V1.TabIndex = 4;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxRemoveID3V2.Location = new System.Drawing.Point(278' 11);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxRemoveID3V2.Location = new System.Drawing.Point(278' 11);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxRemoveID3V2.Size = new System.Drawing.Size(255' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxRemoveID3V2.Size = new System.Drawing.Size(255' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxRemoveID3V2.TabIndex = 3;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonID3Both.Location = new System.Drawing.Point(15' 66);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonID3Both.Location = new System.Drawing.Point(15' 66);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonID3Both.Size = new System.Drawing.Size(256' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonID3Both.Size = new System.Drawing.Size(256' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonID3Both.TabIndex = 2;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonID3V2.Location = new System.Drawing.Point(15' 43);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonID3V2.Location = new System.Drawing.Point(15' 43);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonID3V2.Size = new System.Drawing.Size(55' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonID3V2.Size = new System.Drawing.Size(55' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonID3V1.Location = new System.Drawing.Point(15' 20);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonID3V1.Location = new System.Drawing.Point(15' 20);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonID3V1.Size = new System.Drawing.Size(55' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonID3V1.Size = new System.Drawing.Size(55' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tabPageSettingsLyricsCover.Size = new System.Drawing.Size(1032' 1036);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tabPageSettingsLyricsCover.Size = new System.Drawing.Size(1032' 1036);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tabPageSettingsLyricsCover.TabIndex = 4;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxPictures.Location = new System.Drawing.Point(10' 15);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxPictures.Location = new System.Drawing.Point(10' 15);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxPictures.Size = new System.Drawing.Size(596' 349);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxPictures.Size = new System.Drawing.Size(596' 349);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxPictures.TabIndex = 5;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxAlbumInfoSites.Location = new System.Drawing.Point(21' 194);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxAlbumInfoSites.Location = new System.Drawing.Point(21' 194);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxAlbumInfoSites.Size = new System.Drawing.Size(558' 147);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxAlbumInfoSites.Size = new System.Drawing.Size(558' 147);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxAlbumInfoSites.TabIndex = 14;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckLastFm.Location = new System.Drawing.Point(12' 107);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckLastFm.Location = new System.Drawing.Point(12' 107);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckLastFm.Size = new System.Drawing.Size(104' 24);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckLastFm.Size = new System.Drawing.Size(104' 24);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckLastFm.TabIndex = 3;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckDiscogs.Location = new System.Drawing.Point(12' 79);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckDiscogs.Location = new System.Drawing.Point(12' 79);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckDiscogs.Size = new System.Drawing.Size(104' 24);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckDiscogs.Size = new System.Drawing.Size(104' 24);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckDiscogs.TabIndex = 2;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxAmazonSite.Location = new System.Drawing.Point(150' 27);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxAmazonSite.Location = new System.Drawing.Point(150' 27);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxAmazonSite.Size = new System.Drawing.Size(232' 21);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxAmazonSite.Size = new System.Drawing.Size(232' 21);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxAmazonSite.TabIndex = 10;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxAmazonSite.TextEditorWidth = 213;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckMusicBrainz.Location = new System.Drawing.Point(12' 54);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckMusicBrainz.Location = new System.Drawing.Point(12' 54);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckMusicBrainz.Size = new System.Drawing.Size(104' 24);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckMusicBrainz.Size = new System.Drawing.Size(104' 24);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckAmazon.Location = new System.Drawing.Point(12' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckAmazon.Location = new System.Drawing.Point(12' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckAmazon.Size = new System.Drawing.Size(104' 24);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckAmazon.Size = new System.Drawing.Size(104' 24);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tbCoverSize.Location = new System.Drawing.Point(44' 158);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tbCoverSize.Location = new System.Drawing.Point(44' 158);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tbCoverSize.MaxLength = 5;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tbCoverSize.Size = new System.Drawing.Size(51' 20);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tbCoverSize.Size = new System.Drawing.Size(51' 20);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tbCoverSize.TabIndex = 13;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckChangeCoverSize.Location = new System.Drawing.Point(27' 133);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckChangeCoverSize.Location = new System.Drawing.Point(27' 133);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckChangeCoverSize.Size = new System.Drawing.Size(490' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckChangeCoverSize.Size = new System.Drawing.Size(490' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckChangeCoverSize.TabIndex = 12;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckOnlySaveFolderThumb.Location = new System.Drawing.Point(27' 106);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckOnlySaveFolderThumb.Location = new System.Drawing.Point(27' 106);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckOnlySaveFolderThumb.Size = new System.Drawing.Size(531' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckOnlySaveFolderThumb.Size = new System.Drawing.Size(531' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckOnlySaveFolderThumb.TabIndex = 11;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckUseExistinbgThumb.Location = new System.Drawing.Point(27' 52);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckUseExistinbgThumb.Location = new System.Drawing.Point(27' 52);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckUseExistinbgThumb.Size = new System.Drawing.Size(545' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckUseExistinbgThumb.Size = new System.Drawing.Size(545' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckUseExistinbgThumb.TabIndex = 8;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckOverwriteExistingCovers.Location = new System.Drawing.Point(27' 78);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckOverwriteExistingCovers.Location = new System.Drawing.Point(27' 78);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckOverwriteExistingCovers.Size = new System.Drawing.Size(531' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckOverwriteExistingCovers.Size = new System.Drawing.Size(531' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckOverwriteExistingCovers.TabIndex = 7;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckCreateMissingFolderThumb.Location = new System.Drawing.Point(27' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckCreateMissingFolderThumb.Location = new System.Drawing.Point(27' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckCreateMissingFolderThumb.Size = new System.Drawing.Size(545' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckCreateMissingFolderThumb.Size = new System.Drawing.Size(545' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckCreateMissingFolderThumb.TabIndex = 6;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxLyrics.Location = new System.Drawing.Point(13' 375);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxLyrics.Location = new System.Drawing.Point(13' 375);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxLyrics.Size = new System.Drawing.Size(590' 284);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxLyrics.Size = new System.Drawing.Size(590' 284);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxLyrics.TabIndex = 4;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckOverwriteExistingLyrics.Location = new System.Drawing.Point(27' 57);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckOverwriteExistingLyrics.Location = new System.Drawing.Point(27' 57);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckOverwriteExistingLyrics.Size = new System.Drawing.Size(475' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckOverwriteExistingLyrics.Size = new System.Drawing.Size(475' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckOverwriteExistingLyrics.TabIndex = 9;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckSwitchArtist.Location = new System.Drawing.Point(27' 33);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckSwitchArtist.Location = new System.Drawing.Point(27' 33);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckSwitchArtist.MaximumSize = new System.Drawing.Size(400' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckSwitchArtist.Size = new System.Drawing.Size(400' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckSwitchArtist.Size = new System.Drawing.Size(400' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxLyricsSites.Location = new System.Drawing.Point(15' 96);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxLyricsSites.Location = new System.Drawing.Point(15' 96);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxLyricsSites.Size = new System.Drawing.Size(557' 175);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxLyricsSites.Size = new System.Drawing.Size(557' 175);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.listViewLyricsSites.Location = new System.Drawing.Point(23' 31);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.listViewLyricsSites.Location = new System.Drawing.Point(23' 31);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.listViewLyricsSites.Size = new System.Drawing.Size(520' 123);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.listViewLyricsSites.Size = new System.Drawing.Size(520' 123);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tabPageSettingsRipGeneral.Size = new System.Drawing.Size(1032' 1036);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tabPageSettingsRipGeneral.Size = new System.Drawing.Size(1032' 1036);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tabPageSettingsRipGeneral.TabIndex = 6;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxEncoding.Location = new System.Drawing.Point(5' 30);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxEncoding.Location = new System.Drawing.Point(5' 30);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxEncoding.Size = new System.Drawing.Size(577' 90);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxEncoding.Size = new System.Drawing.Size(577' 90);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxEncoding.TabIndex = 6;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxEncoder.Location = new System.Drawing.Point(9' 41);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxEncoder.Location = new System.Drawing.Point(9' 41);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxEncoder.Size = new System.Drawing.Size(275' 21);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxEncoder.Size = new System.Drawing.Size(275' 21);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbEncodingFormat.Location = new System.Drawing.Point(6' 25);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbEncodingFormat.Location = new System.Drawing.Point(6' 25);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbEncodingFormat.Size = new System.Drawing.Size(197' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbEncodingFormat.Size = new System.Drawing.Size(197' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxRippingOptions.Location = new System.Drawing.Point(5' 376);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxRippingOptions.Location = new System.Drawing.Point(5' 376);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxRippingOptions.Size = new System.Drawing.Size(577' 90);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxRippingOptions.Size = new System.Drawing.Size(577' 90);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxRippingOptions.TabIndex = 7;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckActivateTargetFolder.Location = new System.Drawing.Point(19' 47);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckActivateTargetFolder.Location = new System.Drawing.Point(19' 47);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckActivateTargetFolder.Size = new System.Drawing.Size(494' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckActivateTargetFolder.Size = new System.Drawing.Size(494' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckRipEjectCD.Location = new System.Drawing.Point(19' 23);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckRipEjectCD.Location = new System.Drawing.Point(19' 23);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckRipEjectCD.Size = new System.Drawing.Size(464' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ckRipEjectCD.Size = new System.Drawing.Size(464' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxCustomPath.Location = new System.Drawing.Point(5' 134);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxCustomPath.Location = new System.Drawing.Point(5' 134);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxCustomPath.Size = new System.Drawing.Size(577' 235);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxCustomPath.Size = new System.Drawing.Size(577' 235);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxCustomPath.TabIndex = 5;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxRippingFormatOptions.Location = new System.Drawing.Point(9' 108);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxRippingFormatOptions.Location = new System.Drawing.Point(9' 108);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxRippingFormatOptions.Size = new System.Drawing.Size(551' 109);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxRippingFormatOptions.Size = new System.Drawing.Size(551' 109);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxRippingFormatOptions.TabIndex = 5;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lblParmFolder.Location = new System.Drawing.Point(11' 78);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lblParmFolder.Location = new System.Drawing.Point(11' 78);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lblParmFolder.Size = new System.Drawing.Size(240' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lblParmFolder.Size = new System.Drawing.Size(240' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lblParmFolder.TabIndex = 17;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lblAlbumArtist.Location = new System.Drawing.Point(7' 55);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lblAlbumArtist.Location = new System.Drawing.Point(7' 55);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lblAlbumArtist.Size = new System.Drawing.Size(151' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lblAlbumArtist.Size = new System.Drawing.Size(151' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lblAlbumArtist.TabIndex = 16;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lblParmGenre.Location = new System.Drawing.Point(167' 37);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lblParmGenre.Location = new System.Drawing.Point(167' 37);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lblParmGenre.Size = new System.Drawing.Size(68' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lblParmGenre.Size = new System.Drawing.Size(68' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lblParmGenre.TabIndex = 15;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTrack.Location = new System.Drawing.Point(326' 37);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTrack.Location = new System.Drawing.Point(326' 37);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTrack.Size = new System.Drawing.Size(106' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTrack.Size = new System.Drawing.Size(106' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTrack.TabIndex = 14;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lblParmYear.Location = new System.Drawing.Point(7' 37);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lblParmYear.Location = new System.Drawing.Point(7' 37);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lblParmYear.Size = new System.Drawing.Size(60' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lblParmYear.Size = new System.Drawing.Size(60' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lblParmYear.TabIndex = 13;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lblParmAlbum.Location = new System.Drawing.Point(326' 20);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lblParmAlbum.Location = new System.Drawing.Point(326' 20);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lblParmAlbum.Size = new System.Drawing.Size(67' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lblParmAlbum.Size = new System.Drawing.Size(67' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lblParmAlbum.TabIndex = 12;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTitle.Location = new System.Drawing.Point(167' 20);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTitle.Location = new System.Drawing.Point(167' 20);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTitle.Size = new System.Drawing.Size(58' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTitle.Size = new System.Drawing.Size(58' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTitle.TabIndex = 11;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lblParmArtist.Location = new System.Drawing.Point(5' 20);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lblParmArtist.Location = new System.Drawing.Point(5' 20);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lblParmArtist.Size = new System.Drawing.Size(61' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lblParmArtist.Size = new System.Drawing.Size(61' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lblParmArtist.TabIndex = 10;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxRippingFilenameFormat.Location = new System.Drawing.Point(85' 71);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxRippingFilenameFormat.Location = new System.Drawing.Point(85' 71);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxRippingFilenameFormat.Size = new System.Drawing.Size(421' 20);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxRippingFilenameFormat.Size = new System.Drawing.Size(421' 20);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxRippingFilenameFormat.TabIndex = 4;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbFormat.Location = new System.Drawing.Point(6' 74);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbFormat.Location = new System.Drawing.Point(6' 74);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbFormat.Size = new System.Drawing.Size(42' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbFormat.Size = new System.Drawing.Size(42' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbFormat.TabIndex = 3;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonTargetFolderBrowse.Location = new System.Drawing.Point(514' 23);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonTargetFolderBrowse.Location = new System.Drawing.Point(514' 23);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonTargetFolderBrowse.Size = new System.Drawing.Size(46' 23);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonTargetFolderBrowse.Size = new System.Drawing.Size(46' 23);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonTargetFolderBrowse.TabIndex = 2;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tbTargetFolder.Location = new System.Drawing.Point(85' 25);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tbTargetFolder.Location = new System.Drawing.Point(85' 25);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tbTargetFolder.Size = new System.Drawing.Size(421' 20);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tbTargetFolder.Size = new System.Drawing.Size(421' 20);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbTargetFolder.Location = new System.Drawing.Point(6' 29);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbTargetFolder.Location = new System.Drawing.Point(6' 29);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbTargetFolder.Size = new System.Drawing.Size(73' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbTargetFolder.Size = new System.Drawing.Size(73' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tabPageSettingsRipMp3.Size = new System.Drawing.Size(1032' 1036);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tabPageSettingsRipMp3.Size = new System.Drawing.Size(1032' 1036);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tabPageSettingsRipMp3.TabIndex = 7;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxPresets.Location = new System.Drawing.Point(7' 28);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxPresets.Location = new System.Drawing.Point(7' 28);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxPresets.Size = new System.Drawing.Size(588' 271);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxPresets.Size = new System.Drawing.Size(588' 271);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxPresets.TabIndex = 2;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxPresetDesc.Location = new System.Drawing.Point(10' 89);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxPresetDesc.Location = new System.Drawing.Point(10' 89);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxPresetDesc.Size = new System.Drawing.Size(558' 159);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxPresetDesc.Size = new System.Drawing.Size(558' 159);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxPresetDesc.TabIndex = 4;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxABRBitrate.Location = new System.Drawing.Point(207' 50);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxABRBitrate.Location = new System.Drawing.Point(207' 50);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxABRBitrate.Size = new System.Drawing.Size(60' 20);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxABRBitrate.Size = new System.Drawing.Size(60' 20);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxABRBitrate.TabIndex = 3;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbABRBitrate.Location = new System.Drawing.Point(207' 30);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbABRBitrate.Location = new System.Drawing.Point(207' 30);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbABRBitrate.Size = new System.Drawing.Size(65' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbABRBitrate.Size = new System.Drawing.Size(65' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbABRBitrate.TabIndex = 2;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxLamePresets.Location = new System.Drawing.Point(9' 49);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxLamePresets.Location = new System.Drawing.Point(9' 49);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxLamePresets.Size = new System.Drawing.Size(154' 21);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxLamePresets.Size = new System.Drawing.Size(154' 21);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbPreset.Location = new System.Drawing.Point(10' 31);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbPreset.Location = new System.Drawing.Point(10' 31);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbPreset.Size = new System.Drawing.Size(40' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbPreset.Size = new System.Drawing.Size(40' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxMp3Experts.Location = new System.Drawing.Point(6' 318);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxMp3Experts.Location = new System.Drawing.Point(6' 318);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxMp3Experts.Size = new System.Drawing.Size(588' 112);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxMp3Experts.Size = new System.Drawing.Size(588' 112);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxMp3Experts.TabIndex = 3;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbLameExpertsWarning.Location = new System.Drawing.Point(13' 80);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbLameExpertsWarning.Location = new System.Drawing.Point(13' 80);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbLameExpertsWarning.Size = new System.Drawing.Size(364' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbLameExpertsWarning.Size = new System.Drawing.Size(364' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbLameExpertsWarning.TabIndex = 2;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxLameParms.Location = new System.Drawing.Point(13' 37);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxLameParms.Location = new System.Drawing.Point(13' 37);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxLameParms.Size = new System.Drawing.Size(565' 20);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxLameParms.Size = new System.Drawing.Size(565' 20);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbLameExpertOptions.Location = new System.Drawing.Point(10' 20);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbLameExpertOptions.Location = new System.Drawing.Point(10' 20);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbLameExpertOptions.Size = new System.Drawing.Size(230' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbLameExpertOptions.Size = new System.Drawing.Size(230' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tabPageSettingsRipOgg.Size = new System.Drawing.Size(1032' 1036);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tabPageSettingsRipOgg.Size = new System.Drawing.Size(1032' 1036);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tabPageSettingsRipOgg.TabIndex = 8;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxOggEncoding.Location = new System.Drawing.Point(9' 28);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxOggEncoding.Location = new System.Drawing.Point(9' 28);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxOggEncoding.Size = new System.Drawing.Size(583' 99);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxOggEncoding.Size = new System.Drawing.Size(583' 99);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxOggEncoding.TabIndex = 3;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbOggQualitySelected.Location = new System.Drawing.Point(566' 48);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbOggQualitySelected.Location = new System.Drawing.Point(566' 48);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbOggQualitySelected.Size = new System.Drawing.Size(13' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbOggQualitySelected.Size = new System.Drawing.Size(13' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbOggQualitySelected.TabIndex = 2;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbOggQuality.Location = new System.Drawing.Point(16' 48);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbOggQuality.Location = new System.Drawing.Point(16' 48);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbOggQuality.Size = new System.Drawing.Size(42' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbOggQuality.Size = new System.Drawing.Size(42' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.hScrollBarOggEncodingQuality.Location = new System.Drawing.Point(124' 40);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.hScrollBarOggEncodingQuality.Location = new System.Drawing.Point(124' 40);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.hScrollBarOggEncodingQuality.Maximum = 10;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.hScrollBarOggEncodingQuality.Minimum = -2;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.hScrollBarOggEncodingQuality.Size = new System.Drawing.Size(426' 25);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.hScrollBarOggEncodingQuality.Size = new System.Drawing.Size(426' 25);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.hScrollBarOggEncodingQuality.Value = 3;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxOggExpert.Location = new System.Drawing.Point(7' 142);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxOggExpert.Location = new System.Drawing.Point(7' 142);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxOggExpert.Size = new System.Drawing.Size(585' 94);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxOggExpert.Size = new System.Drawing.Size(585' 94);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxOggExpert.TabIndex = 4;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbOggExpertWarning.Location = new System.Drawing.Point(10' 70);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbOggExpertWarning.Location = new System.Drawing.Point(10' 70);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbOggExpertWarning.Size = new System.Drawing.Size(413' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbOggExpertWarning.Size = new System.Drawing.Size(413' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbOggExpertWarning.TabIndex = 2;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxOggParms.Location = new System.Drawing.Point(13' 37);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxOggParms.Location = new System.Drawing.Point(13' 37);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxOggParms.Size = new System.Drawing.Size(539' 20);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxOggParms.Size = new System.Drawing.Size(539' 20);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbOggExpert.Location = new System.Drawing.Point(10' 20);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbOggExpert.Location = new System.Drawing.Point(10' 20);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbOggExpert.Size = new System.Drawing.Size(221' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbOggExpert.Size = new System.Drawing.Size(221' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tabPageSettingsRipFlac.Size = new System.Drawing.Size(1032' 1036);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tabPageSettingsRipFlac.Size = new System.Drawing.Size(1032' 1036);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tabPageSettingsRipFlac.TabIndex = 9;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxFlacEncoding.Location = new System.Drawing.Point(7' 28);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxFlacEncoding.Location = new System.Drawing.Point(7' 28);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxFlacEncoding.Size = new System.Drawing.Size(577' 99);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxFlacEncoding.Size = new System.Drawing.Size(577' 99);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxFlacEncoding.TabIndex = 5;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbFlacQualitySelected.Location = new System.Drawing.Point(567' 48);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbFlacQualitySelected.Location = new System.Drawing.Point(567' 48);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbFlacQualitySelected.Size = new System.Drawing.Size(13' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbFlacQualitySelected.Size = new System.Drawing.Size(13' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbFlacQualitySelected.TabIndex = 2;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbFlacQuality.Location = new System.Drawing.Point(16' 48);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbFlacQuality.Location = new System.Drawing.Point(16' 48);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbFlacQuality.Size = new System.Drawing.Size(42' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbFlacQuality.Size = new System.Drawing.Size(42' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.hScrollBarFlacEncodingQuality.Location = new System.Drawing.Point(126' 40);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.hScrollBarFlacEncodingQuality.Location = new System.Drawing.Point(126' 40);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.hScrollBarFlacEncodingQuality.Maximum = 8;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.hScrollBarFlacEncodingQuality.Size = new System.Drawing.Size(424' 25);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.hScrollBarFlacEncodingQuality.Size = new System.Drawing.Size(424' 25);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.hScrollBarFlacEncodingQuality.Value = 4;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxFlacSettings.Location = new System.Drawing.Point(5' 142);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxFlacSettings.Location = new System.Drawing.Point(5' 142);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxFlacSettings.Size = new System.Drawing.Size(579' 99);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxFlacSettings.Size = new System.Drawing.Size(579' 99);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxFlacSettings.TabIndex = 6;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbFlacExpertsWarning.Location = new System.Drawing.Point(10' 70);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbFlacExpertsWarning.Location = new System.Drawing.Point(10' 70);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbFlacExpertsWarning.Size = new System.Drawing.Size(416' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbFlacExpertsWarning.Size = new System.Drawing.Size(416' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbFlacExpertsWarning.TabIndex = 2;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxFlacParms.Location = new System.Drawing.Point(13' 37);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxFlacParms.Location = new System.Drawing.Point(13' 37);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxFlacParms.Size = new System.Drawing.Size(539' 20);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxFlacParms.Size = new System.Drawing.Size(539' 20);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbFlacExperts.Location = new System.Drawing.Point(10' 20);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbFlacExperts.Location = new System.Drawing.Point(10' 20);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbFlacExperts.Size = new System.Drawing.Size(227' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbFlacExperts.Size = new System.Drawing.Size(227' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tabPageSettingsRipAAC.Size = new System.Drawing.Size(704' 1039);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tabPageSettingsRipAAC.Size = new System.Drawing.Size(704' 1039);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tabPageSettingsRipAAC.TabIndex = 10;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxAACEncoding.Location = new System.Drawing.Point(8' 25);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxAACEncoding.Location = new System.Drawing.Point(8' 25);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxAACEncoding.Size = new System.Drawing.Size(587' 117);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxAACEncoding.Size = new System.Drawing.Size(587' 117);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxAACBitrates.Location = new System.Drawing.Point(155' 38);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxAACBitrates.Location = new System.Drawing.Point(155' 38);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxAACBitrates.Size = new System.Drawing.Size(97' 21);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxAACBitrates.Size = new System.Drawing.Size(97' 21);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxAACBitrates.TabIndex = 3;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.labelAACBitrate.Location = new System.Drawing.Point(8' 41);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.labelAACBitrate.Location = new System.Drawing.Point(8' 41);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.labelAACBitrate.Size = new System.Drawing.Size(40' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.labelAACBitrate.Size = new System.Drawing.Size(40' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.labelAACBitrate.TabIndex = 2;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tabPageSettingsRipWMA.Size = new System.Drawing.Size(704' 1039);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tabPageSettingsRipWMA.Size = new System.Drawing.Size(704' 1039);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tabPageSettingsRipWMA.TabIndex = 11;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxWMAEncoding.Location = new System.Drawing.Point(8' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxWMAEncoding.Location = new System.Drawing.Point(8' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxWMAEncoding.Size = new System.Drawing.Size(577' 163);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxWMAEncoding.Size = new System.Drawing.Size(577' 163);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxWMAEncoding.TabIndex = 2;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxWMABitRate.Location = new System.Drawing.Point(294' 112);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxWMABitRate.Location = new System.Drawing.Point(294' 112);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxWMABitRate.Size = new System.Drawing.Size(108' 21);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxWMABitRate.Size = new System.Drawing.Size(108' 21);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxWMABitRate.TabIndex = 6;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxWMACbrVbr.Location = new System.Drawing.Point(156' 112);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxWMACbrVbr.Location = new System.Drawing.Point(156' 112);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxWMACbrVbr.Size = new System.Drawing.Size(110' 21);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxWMACbrVbr.Size = new System.Drawing.Size(110' 21);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxWMACbrVbr.TabIndex = 5;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.labelWMAQuality.Location = new System.Drawing.Point(9' 115);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.labelWMAQuality.Location = new System.Drawing.Point(9' 115);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.labelWMAQuality.Size = new System.Drawing.Size(42' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.labelWMAQuality.Size = new System.Drawing.Size(42' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.labelWMAQuality.TabIndex = 4;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxWMASampleFormat.Location = new System.Drawing.Point(156' 72);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxWMASampleFormat.Location = new System.Drawing.Point(156' 72);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxWMASampleFormat.Size = new System.Drawing.Size(246' 21);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxWMASampleFormat.Size = new System.Drawing.Size(246' 21);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxWMASampleFormat.TabIndex = 3;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.labelWMASampleFormat.Location = new System.Drawing.Point(9' 75);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.labelWMASampleFormat.Location = new System.Drawing.Point(9' 75);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.labelWMASampleFormat.Size = new System.Drawing.Size(80' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.labelWMASampleFormat.Size = new System.Drawing.Size(80' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.labelWMASampleFormat.TabIndex = 2;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxWMAEncoderFormat.Location = new System.Drawing.Point(156' 32);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxWMAEncoderFormat.Location = new System.Drawing.Point(156' 32);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxWMAEncoderFormat.Size = new System.Drawing.Size(246' 21);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxWMAEncoderFormat.Size = new System.Drawing.Size(246' 21);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.labelWMAEncoderFormat.Location = new System.Drawing.Point(9' 35);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.labelWMAEncoderFormat.Location = new System.Drawing.Point(9' 35);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.labelWMAEncoderFormat.Size = new System.Drawing.Size(85' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.labelWMAEncoderFormat.Size = new System.Drawing.Size(85' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tabPageSettingsRipMPC.Size = new System.Drawing.Size(704' 1039);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tabPageSettingsRipMPC.Size = new System.Drawing.Size(704' 1039);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tabPageSettingsRipMPC.TabIndex = 12;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxMPCExpert.Location = new System.Drawing.Point(6' 108);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxMPCExpert.Location = new System.Drawing.Point(6' 108);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxMPCExpert.Size = new System.Drawing.Size(583' 112);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxMPCExpert.Size = new System.Drawing.Size(583' 112);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxMPCExpert.TabIndex = 5;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbMPCExpertsWarning.Location = new System.Drawing.Point(13' 80);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbMPCExpertsWarning.Location = new System.Drawing.Point(13' 80);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbMPCExpertsWarning.Size = new System.Drawing.Size(384' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbMPCExpertsWarning.Size = new System.Drawing.Size(384' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbMPCExpertsWarning.TabIndex = 2;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxMPCParms.Location = new System.Drawing.Point(13' 37);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxMPCParms.Location = new System.Drawing.Point(13' 37);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxMPCParms.Size = new System.Drawing.Size(527' 20);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxMPCParms.Size = new System.Drawing.Size(527' 20);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbMPCExperts.Location = new System.Drawing.Point(10' 20);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbMPCExperts.Location = new System.Drawing.Point(10' 20);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbMPCExperts.Size = new System.Drawing.Size(252' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbMPCExperts.Size = new System.Drawing.Size(252' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxMPCPresets.Location = new System.Drawing.Point(6' 30);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxMPCPresets.Location = new System.Drawing.Point(6' 30);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxMPCPresets.Size = new System.Drawing.Size(583' 63);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxMPCPresets.Size = new System.Drawing.Size(583' 63);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxMPCPresets.TabIndex = 4;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxMPCPresets.Location = new System.Drawing.Point(157' 23);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxMPCPresets.Location = new System.Drawing.Point(157' 23);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxMPCPresets.Size = new System.Drawing.Size(421' 21);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxMPCPresets.Size = new System.Drawing.Size(421' 21);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxMPCPresets.TextEditorWidth = 402;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbMPCPresets.Location = new System.Drawing.Point(7' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbMPCPresets.Location = new System.Drawing.Point(7' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbMPCPresets.Size = new System.Drawing.Size(40' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbMPCPresets.Size = new System.Drawing.Size(40' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tabPageSettingsRipWV.Size = new System.Drawing.Size(704' 1039);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tabPageSettingsRipWV.Size = new System.Drawing.Size(704' 1039);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.tabPageSettingsRipWV.TabIndex = 13;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxWVExpertSettings.Location = new System.Drawing.Point(6' 105);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxWVExpertSettings.Location = new System.Drawing.Point(6' 105);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxWVExpertSettings.Size = new System.Drawing.Size(586' 97);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxWVExpertSettings.Size = new System.Drawing.Size(586' 97);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxWVExpertSettings.TabIndex = 7;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbWVExpertWarning.Location = new System.Drawing.Point(10' 69);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbWVExpertWarning.Location = new System.Drawing.Point(10' 69);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbWVExpertWarning.Size = new System.Drawing.Size(383' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbWVExpertWarning.Size = new System.Drawing.Size(383' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbWVExpertWarning.TabIndex = 2;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxWVParms.Location = new System.Drawing.Point(13' 37);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxWVParms.Location = new System.Drawing.Point(13' 37);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxWVParms.Size = new System.Drawing.Size(567' 20);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxWVParms.Size = new System.Drawing.Size(567' 20);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbWVExpert.Location = new System.Drawing.Point(10' 20);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbWVExpert.Location = new System.Drawing.Point(10' 20);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbWVExpert.Size = new System.Drawing.Size(250' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbWVExpert.Size = new System.Drawing.Size(250' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxWVPresets.Location = new System.Drawing.Point(6' 27);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxWVPresets.Location = new System.Drawing.Point(6' 27);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxWVPresets.Size = new System.Drawing.Size(586' 63);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxWVPresets.Size = new System.Drawing.Size(586' 63);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxWVPresets.TabIndex = 6;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxWVPresets.Location = new System.Drawing.Point(144' 23);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxWVPresets.Location = new System.Drawing.Point(144' 23);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxWVPresets.Size = new System.Drawing.Size(436' 21);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxWVPresets.Size = new System.Drawing.Size(436' 21);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxWVPresets.TextEditorWidth = 417;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbWVPreset.Location = new System.Drawing.Point(7' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbWVPreset.Location = new System.Drawing.Point(7' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbWVPreset.Size = new System.Drawing.Size(40' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.lbWVPreset.Size = new System.Drawing.Size(40' 13);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.panel3.Location = new System.Drawing.Point(210' 1);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.panel3.Size = new System.Drawing.Size(1104' 56);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.panel3.Size = new System.Drawing.Size(1104' 56);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.panel3.TabIndex = 2;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonSettingsCancel.Location = new System.Drawing.Point(134' 16);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonSettingsCancel.Location = new System.Drawing.Point(134' 16);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonSettingsCancel.Size = new System.Drawing.Size(100' 23);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonSettingsCancel.Size = new System.Drawing.Size(100' 23);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonSettingsCancel.TabIndex = 3;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonSettingsApply.Location = new System.Drawing.Point(23' 16);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonSettingsApply.Location = new System.Drawing.Point(23' 16);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonSettingsApply.Size = new System.Drawing.Size(100' 23);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonSettingsApply.Size = new System.Drawing.Size(100' 23);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonSettingsApply.TabIndex = 2;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewPanel1.Size = new System.Drawing.Size(210' 1107);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewPanel1.Size = new System.Drawing.Size(210' 1107);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupedNavigationBar1.Size = new System.Drawing.Size(210' 1107);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.groupedNavigationBar1.Size = new System.Drawing.Size(210' 1107);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.navigationBarGroupItemsContainer1.Location = new System.Drawing.Point(0' 24);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.navigationBarGroupItemsContainer1.Size = new System.Drawing.Size(208' 10);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.navigationBarGroupItemsContainer1.Size = new System.Drawing.Size(208' 10);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.navigationBarGroupItemsContainer1.TabIndex = 2;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.navigationBarItemKeys.TabIndex = 2;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.navigationBarGroupItemsContainer2.Location = new System.Drawing.Point(0' 58);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.navigationBarGroupItemsContainer2.Size = new System.Drawing.Size(208' 10);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.navigationBarGroupItemsContainer2.Size = new System.Drawing.Size(208' 10);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.navigationBarGroupItemsContainer2.TabIndex = 5;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.navigationBarItemTagsId3.TabIndex = 2;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.navigationBarItemTagsLyricsCover.TabIndex = 3;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.navigationBarGroupItemsContainer3.Location = new System.Drawing.Point(0' 92);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.navigationBarGroupItemsContainer3.Size = new System.Drawing.Size(208' 10);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.navigationBarGroupItemsContainer3.Size = new System.Drawing.Size(208' 10);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.navigationBarGroupItemsContainer3.TabIndex = 8;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.navigationBarItemRipMp3.TabIndex = 2;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.navigationBarItemRipOgg.TabIndex = 3;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.navigationBarItemFlac.TabIndex = 4;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.navigationBarItemRipAAC.TabIndex = 5;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.navigationBarItemRipWMA.TabIndex = 6;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.navigationBarItemMPC.TabIndex = 7;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.navigationBarItemRipWV.TabIndex = 8;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonSave.ImageToTextSpace = 5;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonSave.Location = new System.Drawing.Point(7' 7);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonSave.Location = new System.Drawing.Point(7' 7);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonSave.Margin = new System.Windows.Forms.Padding(6' 0' 6' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonSave.Margin = new System.Windows.Forms.Padding(6' 0' 6' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonSave.Margin = new System.Windows.Forms.Padding(6' 0' 6' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonSave.Padding = new System.Windows.Forms.Padding(16' 6' 16' 6);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonSave.Padding = new System.Windows.Forms.Padding(16' 6' 16' 6);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonSave.Padding = new System.Windows.Forms.Padding(16' 6' 16' 6);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonSave.Padding = new System.Windows.Forms.Padding(16' 6' 16' 6);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonSave.Size = new System.Drawing.Size(142' 28);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonSave.Size = new System.Drawing.Size(142' 28);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonSave.TabIndex = 2;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonRefresh.ImageToTextSpace = 5;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonRefresh.Location = new System.Drawing.Point(7' 37);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonRefresh.Location = new System.Drawing.Point(7' 37);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonRefresh.Margin = new System.Windows.Forms.Padding(6' 0' 6' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonRefresh.Margin = new System.Windows.Forms.Padding(6' 0' 6' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonRefresh.Margin = new System.Windows.Forms.Padding(6' 0' 6' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonRefresh.Padding = new System.Windows.Forms.Padding(16' 6' 16' 6);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonRefresh.Padding = new System.Windows.Forms.Padding(16' 6' 16' 6);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonRefresh.Padding = new System.Windows.Forms.Padding(16' 6' 16' 6);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonRefresh.Padding = new System.Windows.Forms.Padding(16' 6' 16' 6);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonRefresh.Size = new System.Drawing.Size(142' 28);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonRefresh.Size = new System.Drawing.Size(142' 28);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonRefresh.TabIndex = 4;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewPageRecentFolders.Padding = new System.Windows.Forms.Padding(0' 1' 2' 1);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewPageRecentFolders.Size = new System.Drawing.Size(926' 817);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewPageRecentFolders.Size = new System.Drawing.Size(926' 817);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Location = new System.Drawing.Point(33' 36);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Location = new System.Drawing.Point(33' 36);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Size = new System.Drawing.Size(779' 913);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Size = new System.Drawing.Size(779' 913);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.separatorRecentFolders.Location = new System.Drawing.Point(16' 19);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.separatorRecentFolders.Location = new System.Drawing.Point(16' 19);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.separatorRecentFolders.Size = new System.Drawing.Size(112' 20);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.separatorRecentFolders.Size = new System.Drawing.Size(112' 20);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.separatorRecentFolders.TabIndex = 2;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.pinListRecentFolders.Location = new System.Drawing.Point(16' 56);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.pinListRecentFolders.Location = new System.Drawing.Point(16' 56);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.pinListRecentFolders.PinnedItemsSeparatorMargin = new System.Windows.Forms.Padding(0' 5' 0' 5);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.pinListRecentFolders.PinnedItemsSeparatorMargin = new System.Windows.Forms.Padding(0' 5' 0' 5);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.pinListRecentFolders.Size = new System.Drawing.Size(747' 837);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.pinListRecentFolders.Size = new System.Drawing.Size(747' 837);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewSeparator1.Location = new System.Drawing.Point(1' 143);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewSeparator1.Size = new System.Drawing.Size(154' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewSeparator1.Size = new System.Drawing.Size(154' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewSeparator1.TabIndex = 6;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonChangeColumns.ImageToTextSpace = 5;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonChangeColumns.Location = new System.Drawing.Point(7' 145);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonChangeColumns.Location = new System.Drawing.Point(7' 145);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonChangeColumns.Margin = new System.Windows.Forms.Padding(6' 0' 6' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonChangeColumns.Margin = new System.Windows.Forms.Padding(6' 0' 6' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonChangeColumns.Margin = new System.Windows.Forms.Padding(6' 0' 6' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonChangeColumns.Padding = new System.Windows.Forms.Padding(16' 6' 16' 6);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonChangeColumns.Padding = new System.Windows.Forms.Padding(16' 6' 16' 6);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonChangeColumns.Padding = new System.Windows.Forms.Padding(16' 6' 16' 6);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonChangeColumns.Padding = new System.Windows.Forms.Padding(16' 6' 16' 6);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonChangeColumns.Size = new System.Drawing.Size(142' 25);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonChangeColumns.Size = new System.Drawing.Size(142' 25);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonChangeColumns.TabIndex = 5;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewSeparator2.Location = new System.Drawing.Point(1' 172);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewSeparator2.Size = new System.Drawing.Size(154' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewSeparator2.Size = new System.Drawing.Size(154' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewSeparator2.TabIndex = 8;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonExit.ImageToTextSpace = 5;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonExit.Location = new System.Drawing.Point(7' 174);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonExit.Location = new System.Drawing.Point(7' 174);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonExit.Margin = new System.Windows.Forms.Padding(6' 0' 6' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonExit.Margin = new System.Windows.Forms.Padding(6' 0' 6' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonExit.Margin = new System.Windows.Forms.Padding(6' 0' 6' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonExit.Padding = new System.Windows.Forms.Padding(16' 6' 16' 6);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonExit.Padding = new System.Windows.Forms.Padding(16' 6' 16' 6);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonExit.Padding = new System.Windows.Forms.Padding(16' 6' 16' 6);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonExit.Padding = new System.Windows.Forms.Padding(16' 6' 16' 6);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonExit.Size = new System.Drawing.Size(142' 25);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonExit.Size = new System.Drawing.Size(142' 25);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.backstageViewButtonExit.TabIndex = 7;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ribbonTabPageDatabase.Size = new System.Drawing.Size(1497' 99);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ribbonTabPageDatabase.Size = new System.Drawing.Size(1497' 99);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ribbonGroupQuery.Size = new System.Drawing.Size(421' 94);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ribbonGroupQuery.Size = new System.Drawing.Size(421' 94);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxDatabaseQuery.Location = new System.Drawing.Point(4' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxDatabaseQuery.Location = new System.Drawing.Point(4' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxDatabaseQuery.Size = new System.Drawing.Size(307' 24);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxDatabaseQuery.Size = new System.Drawing.Size(307' 24);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxDatabaseQuery.TextEditorWidth = 288;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonExecuteQuery.Location = new System.Drawing.Point(313' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonExecuteQuery.Location = new System.Drawing.Point(313' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonExecuteQuery.Size = new System.Drawing.Size(42' 72);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonExecuteQuery.Size = new System.Drawing.Size(42' 72);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.separator4.Location = new System.Drawing.Point(358' 6);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.separator4.Location = new System.Drawing.Point(358' 6);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.separator4.Size = new System.Drawing.Size(3' 61);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.separator4.Size = new System.Drawing.Size(3' 61);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.separator4.TabIndex = 3;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonDBSwitch.Location = new System.Drawing.Point(364' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonDBSwitch.Location = new System.Drawing.Point(364' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonDBSwitch.Size = new System.Drawing.Size(52' 72);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonDBSwitch.Size = new System.Drawing.Size(52' 72);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonDBSwitch.TabIndex = 2;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ribbonGroupDatabaseMaint.Location = new System.Drawing.Point(422' 1);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ribbonGroupDatabaseMaint.Size = new System.Drawing.Size(424' 94);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ribbonGroupDatabaseMaint.Size = new System.Drawing.Size(424' 94);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.labelMusicFolder.Location = new System.Drawing.Point(3' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.labelMusicFolder.Location = new System.Drawing.Point(3' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.labelMusicFolder.Size = new System.Drawing.Size(68' 24);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.labelMusicFolder.Size = new System.Drawing.Size(68' 24);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.labelMusicFolder.TabIndex = 11;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxMusicFolder.Location = new System.Drawing.Point(4' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxMusicFolder.Location = new System.Drawing.Point(4' 26);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxMusicFolder.Size = new System.Drawing.Size(229' 24);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxMusicFolder.Size = new System.Drawing.Size(229' 24);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxMusicFolder.TabIndex = 10;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxMusicFolder.TextEditorWidth = 210;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxClearDatabase.Location = new System.Drawing.Point(4' 50);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxClearDatabase.Location = new System.Drawing.Point(4' 50);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxClearDatabase.Size = new System.Drawing.Size(229' 24);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxClearDatabase.Size = new System.Drawing.Size(229' 24);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxClearDatabase.TabIndex = 8;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonSelectMusicFolder.Location = new System.Drawing.Point(235' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonSelectMusicFolder.Location = new System.Drawing.Point(235' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonSelectMusicFolder.Size = new System.Drawing.Size(42' 72);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonSelectMusicFolder.Size = new System.Drawing.Size(42' 72);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonSelectMusicFolder.TabIndex = 12;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonStartDBScan.Location = new System.Drawing.Point(279' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonStartDBScan.Location = new System.Drawing.Point(279' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonStartDBScan.Size = new System.Drawing.Size(42' 72);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonStartDBScan.Size = new System.Drawing.Size(42' 72);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonAbortDBScan.Location = new System.Drawing.Point(323' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonAbortDBScan.Location = new System.Drawing.Point(323' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonAbortDBScan.Size = new System.Drawing.Size(42' 72);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonAbortDBScan.Size = new System.Drawing.Size(42' 72);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonAbortDBScan.TabIndex = 2;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonDeleteDB.Location = new System.Drawing.Point(367' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonDeleteDB.Location = new System.Drawing.Point(367' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonDeleteDB.Size = new System.Drawing.Size(52' 72);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonDeleteDB.Size = new System.Drawing.Size(52' 72);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonDeleteDB.TabIndex = 3;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.startMenuSave.Size = new System.Drawing.Size(195' 23);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.startMenuSave.Size = new System.Drawing.Size(195' 23);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.startMenuSave.TabIndex = 2;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.startMenuRefresh.Location = new System.Drawing.Point(0' 23);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.startMenuRefresh.Size = new System.Drawing.Size(195' 23);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.startMenuRefresh.Size = new System.Drawing.Size(195' 23);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.startMenuRefresh.TabIndex = 4;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ribbonTabPageTag.Size = new System.Drawing.Size(1401' 99);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ribbonTabPageTag.Size = new System.Drawing.Size(1401' 99);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ribbonGroupTagsRetrieve.Size = new System.Drawing.Size(161' 94);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ribbonGroupTagsRetrieve.Size = new System.Drawing.Size(161' 94);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonTagFromFile.Location = new System.Drawing.Point(35' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonTagFromFile.Location = new System.Drawing.Point(35' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonTagFromFile.Size = new System.Drawing.Size(85' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonTagIdentifyFiles.Location = new System.Drawing.Point(35' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonTagIdentifyFiles.Location = new System.Drawing.Point(35' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonTagIdentifyFiles.Size = new System.Drawing.Size(67' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonTagFromInternet.Location = new System.Drawing.Point(35' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonTagFromInternet.Location = new System.Drawing.Point(35' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonTagFromInternet.Size = new System.Drawing.Size(90' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonTagFromInternet.TabIndex = 2;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ribbonGroupTagsEdit.Location = new System.Drawing.Point(162' 1);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ribbonGroupTagsEdit.Size = new System.Drawing.Size(445' 94);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ribbonGroupTagsEdit.Size = new System.Drawing.Size(445' 94);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ribbonGroupTagsEdit.TabIndex = 2;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonCaseConversion.Location = new System.Drawing.Point(83' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonCaseConversion.Location = new System.Drawing.Point(83' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonCaseConversion.Size = new System.Drawing.Size(100' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonCaseConversion.TabIndex = 5;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.popupMenu3.Size = new System.Drawing.Size(100' 100);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.popupMenu3.Size = new System.Drawing.Size(100' 100);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonCaseConversionOptions.Location = new System.Drawing.Point(2' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonCaseConversionOptions.Location = new System.Drawing.Point(2' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonCaseConversionOptions.Size = new System.Drawing.Size(192' 23);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonCaseConversionOptions.Size = new System.Drawing.Size(192' 23);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonCaseConversionOptions.TabIndex = 2;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonGetLyrics.Location = new System.Drawing.Point(83' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonGetLyrics.Location = new System.Drawing.Point(83' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonGetLyrics.Size = new System.Drawing.Size(56' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.separator1.Location = new System.Drawing.Point(84' 6);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.separator1.Location = new System.Drawing.Point(84' 6);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.separator1.Size = new System.Drawing.Size(3' 61);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.separator1.Size = new System.Drawing.Size(3' 61);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.separator1.TabIndex = 11;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonFind.Location = new System.Drawing.Point(83' 74);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonFind.Location = new System.Drawing.Point(83' 74);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonFind.Size = new System.Drawing.Size(40' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonFind.TabIndex = 10;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.popupMenu4.Size = new System.Drawing.Size(100' 100);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.popupMenu4.Size = new System.Drawing.Size(100' 100);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonReplace.Location = new System.Drawing.Point(2' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonReplace.Location = new System.Drawing.Point(2' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonReplace.Size = new System.Drawing.Size(126' 23);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonReplace.Size = new System.Drawing.Size(126' 23);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonReplace.TabIndex = 3;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonValidateSong.Location = new System.Drawing.Point(83' 74);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonValidateSong.Location = new System.Drawing.Point(83' 74);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonValidateSong.Size = new System.Drawing.Size(86' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonValidateSong.TabIndex = 12;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.popupMenu5.Size = new System.Drawing.Size(100' 100);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.popupMenu5.Size = new System.Drawing.Size(100' 100);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonFixSong.Location = new System.Drawing.Point(2' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonFixSong.Location = new System.Drawing.Point(2' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonFixSong.Size = new System.Drawing.Size(126' 23);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonFixSong.Size = new System.Drawing.Size(126' 23);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonFixSong.TabIndex = 3;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.separator2.Location = new System.Drawing.Point(186' 6);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.separator2.Location = new System.Drawing.Point(186' 6);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.separator2.Size = new System.Drawing.Size(3' 61);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.separator2.Size = new System.Drawing.Size(3' 61);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.separator2.TabIndex = 8;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonDeleteTag.Location = new System.Drawing.Point(185' 74);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonDeleteTag.Location = new System.Drawing.Point(185' 74);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonDeleteTag.Size = new System.Drawing.Size(78' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.popupMenu2.Size = new System.Drawing.Size(100' 100);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.popupMenu2.Size = new System.Drawing.Size(100' 100);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonDeleteAllTags.Location = new System.Drawing.Point(2' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonDeleteAllTags.Location = new System.Drawing.Point(2' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonDeleteAllTags.Size = new System.Drawing.Size(156' 23);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonDeleteAllTags.Size = new System.Drawing.Size(156' 23);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonDeleteAllTags.TabIndex = 2;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonDeleteID3v1.Location = new System.Drawing.Point(2' 25);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonDeleteID3v1.Location = new System.Drawing.Point(2' 25);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonDeleteID3v1.Size = new System.Drawing.Size(156' 23);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonDeleteID3v1.Size = new System.Drawing.Size(156' 23);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonDeleteID3v1.TabIndex = 3;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonDeleteID3v2.Location = new System.Drawing.Point(2' 48);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonDeleteID3v2.Location = new System.Drawing.Point(2' 48);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonDeleteID3v2.Size = new System.Drawing.Size(156' 23);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonDeleteID3v2.Size = new System.Drawing.Size(156' 23);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonDeleteID3v2.TabIndex = 4;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonRemoveComment.Location = new System.Drawing.Point(265' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonRemoveComment.Location = new System.Drawing.Point(265' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonRemoveComment.Size = new System.Drawing.Size(96' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.separator3.Location = new System.Drawing.Point(266' 6);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.separator3.Location = new System.Drawing.Point(266' 6);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.separator3.Size = new System.Drawing.Size(3' 61);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.separator3.Size = new System.Drawing.Size(3' 61);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.separator3.TabIndex = 9;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonGroup1.Location = new System.Drawing.Point(264' 74);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonGroup1.Location = new System.Drawing.Point(264' 74);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonGroup1.Size = new System.Drawing.Size(39' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonGroup1.TabIndex = 7;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxScripts.Size = new System.Drawing.Size(19' 21);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxScripts.Size = new System.Drawing.Size(19' 21);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonScriptExecute.Location = new System.Drawing.Point(21' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonScriptExecute.Size = new System.Drawing.Size(8' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonGroup3.Location = new System.Drawing.Point(264' 74);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonGroup3.Location = new System.Drawing.Point(264' 74);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonGroup3.Size = new System.Drawing.Size(64' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonGroup3.TabIndex = 6;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonNumberOnClick.Size = new System.Drawing.Size(8' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonNumberOnClick.TabIndex = 2;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonAutoNumber.Location = new System.Drawing.Point(8' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonAutoNumber.Size = new System.Drawing.Size(8' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxNumber.Location = new System.Drawing.Point(17' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxNumber.Margin = new System.Windows.Forms.Padding(1' 0' 10' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxNumber.MaxLength = 4;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxNumber.MinimumSize = new System.Drawing.Size(60' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxNumber.Padding = new System.Windows.Forms.Padding(0' 1' 15' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxNumber.Size = new System.Drawing.Size(60' 21);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxNumber.Size = new System.Drawing.Size(60' 21);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxNumber.TabIndex = 2;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxNumber.TextEditorWidth = 39;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonGroup2.Location = new System.Drawing.Point(264' 74);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonGroup2.Location = new System.Drawing.Point(264' 74);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonGroup2.Size = new System.Drawing.Size(26' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonGroup2.TabIndex = 13;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonReplayGain.Size = new System.Drawing.Size(8' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonBpm.Location = new System.Drawing.Point(8' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonBpm.Size = new System.Drawing.Size(8' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ribbonGroupPicture.Location = new System.Drawing.Point(607' 1);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ribbonGroupPicture.Size = new System.Drawing.Size(118' 94);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ribbonGroupPicture.Size = new System.Drawing.Size(118' 94);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ribbonGroupPicture.TabIndex = 6;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.galleryPicture.ItemWidth = 62;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.galleryPicture.Location = new System.Drawing.Point(18' 5);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.galleryPicture.Location = new System.Drawing.Point(18' 5);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.galleryPicture.Popup.Size = new System.Drawing.Size(100' 100);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.galleryPicture.Popup.Size = new System.Drawing.Size(100' 100);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.galleryPicture.Size = new System.Drawing.Size(81' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonGetCoverArt.Location = new System.Drawing.Point(18' 8);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonGetCoverArt.Location = new System.Drawing.Point(18' 8);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonGetCoverArt.Size = new System.Drawing.Size(6' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonGetCoverArt.TabIndex = 2;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonRemoveCoverArt.Location = new System.Drawing.Point(18' 8);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonRemoveCoverArt.Location = new System.Drawing.Point(18' 8);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonRemoveCoverArt.Size = new System.Drawing.Size(6' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonRemoveCoverArt.TabIndex = 3;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonSaveAsThumb.Location = new System.Drawing.Point(18' 8);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonSaveAsThumb.Location = new System.Drawing.Point(18' 8);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonSaveAsThumb.Size = new System.Drawing.Size(6' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonSaveAsThumb.TabIndex = 4;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ribbonGroupOrganise.Location = new System.Drawing.Point(725' 1);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ribbonGroupOrganise.Size = new System.Drawing.Size(111' 94);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ribbonGroupOrganise.Size = new System.Drawing.Size(111' 94);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ribbonGroupOrganise.TabIndex = 3;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonRenameFiles.Location = new System.Drawing.Point(13' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonRenameFiles.Location = new System.Drawing.Point(13' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonRenameFiles.Size = new System.Drawing.Size(84' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.popupMenu1.Size = new System.Drawing.Size(100' 100);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.popupMenu1.Size = new System.Drawing.Size(100' 100);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonRenameFilesOptions.Location = new System.Drawing.Point(2' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonRenameFilesOptions.Location = new System.Drawing.Point(2' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonRenameFilesOptions.Size = new System.Drawing.Size(173' 23);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonRenameFilesOptions.Size = new System.Drawing.Size(173' 23);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonRenameFilesOptions.TabIndex = 2;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonOrganiseFiles.Location = new System.Drawing.Point(13' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonOrganiseFiles.Location = new System.Drawing.Point(13' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonOrganiseFiles.Size = new System.Drawing.Size(75' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ribbonGroupOther.Location = new System.Drawing.Point(836' 1);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ribbonGroupOther.Size = new System.Drawing.Size(133' 94);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ribbonGroupOther.Size = new System.Drawing.Size(133' 94);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ribbonGroupOther.TabIndex = 5;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonAddToBurner.Location = new System.Drawing.Point(18' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonAddToBurner.Location = new System.Drawing.Point(18' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonAddToBurner.Size = new System.Drawing.Size(74' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonAddToConversion.Location = new System.Drawing.Point(18' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonAddToConversion.Location = new System.Drawing.Point(18' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonAddToConversion.Size = new System.Drawing.Size(96' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonAddToPlaylist.Location = new System.Drawing.Point(18' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonAddToPlaylist.Location = new System.Drawing.Point(18' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonAddToPlaylist.Size = new System.Drawing.Size(75' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonAddToPlaylist.TabIndex = 2;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ribbonTabPageRip.Size = new System.Drawing.Size(1241' 99);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ribbonTabPageRip.Size = new System.Drawing.Size(1241' 99);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ribbonGroupRip.Size = new System.Drawing.Size(95' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonRipStart.Location = new System.Drawing.Point(16' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonRipStart.Location = new System.Drawing.Point(16' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonRipStart.Size = new System.Drawing.Size(25' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonRipStart.TabIndex = 4;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonRipCancel.Location = new System.Drawing.Point(16' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonRipCancel.Location = new System.Drawing.Point(16' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonRipCancel.Size = new System.Drawing.Size(61' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonRipCancel.TabIndex = 5;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ribbonGroupRipOptions.Location = new System.Drawing.Point(96' 1);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ribbonGroupRipOptions.Size = new System.Drawing.Size(514' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxRipOutputFolder.Location = new System.Drawing.Point(4' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxRipOutputFolder.Location = new System.Drawing.Point(4' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxRipOutputFolder.Size = new System.Drawing.Size(473' 19);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxRipOutputFolder.Size = new System.Drawing.Size(473' 19);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxRipOutputFolder.TabIndex = 3;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxRipOutputFolder.TextEditorWidth = 322;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxRipEncoder.Location = new System.Drawing.Point(479' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxRipEncoder.Location = new System.Drawing.Point(479' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxRipEncoder.Size = new System.Drawing.Size(473' 19);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxRipEncoder.Size = new System.Drawing.Size(473' 19);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxRipEncoder.TabIndex = 2;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxRipEncoder.TextEditorWidth = 309;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonRipFolderSelect.Location = new System.Drawing.Point(954' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonRipFolderSelect.Location = new System.Drawing.Point(954' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonRipFolderSelect.Size = new System.Drawing.Size(6' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonRipFolderSelect.TabIndex = 4;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ribbonTabPageConvert.Size = new System.Drawing.Size(1377' 99);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ribbonTabPageConvert.Size = new System.Drawing.Size(1377' 99);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ribbonGroupConvert.Size = new System.Drawing.Size(139' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonConvertStart.Location = new System.Drawing.Point(20' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonConvertStart.Location = new System.Drawing.Point(20' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonConvertStart.Size = new System.Drawing.Size(87' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonConvertCancel.Location = new System.Drawing.Point(20' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonConvertCancel.Location = new System.Drawing.Point(20' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonConvertCancel.Size = new System.Drawing.Size(98' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ribbonGroupConvertOptions.Location = new System.Drawing.Point(140' 1);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ribbonGroupConvertOptions.Size = new System.Drawing.Size(513' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxConvertOutputFolder.Location = new System.Drawing.Point(4' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxConvertOutputFolder.Location = new System.Drawing.Point(4' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxConvertOutputFolder.Size = new System.Drawing.Size(472' 19);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxConvertOutputFolder.Size = new System.Drawing.Size(472' 19);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxConvertOutputFolder.TabIndex = 4;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.textBoxConvertOutputFolder.TextEditorWidth = 321;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxConvertEncoder.Location = new System.Drawing.Point(478' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxConvertEncoder.Location = new System.Drawing.Point(478' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxConvertEncoder.Size = new System.Drawing.Size(472' 19);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxConvertEncoder.Size = new System.Drawing.Size(472' 19);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxConvertEncoder.TabIndex = 5;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxConvertEncoder.TextEditorWidth = 308;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonConvertFolderSelect.Location = new System.Drawing.Point(952' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonConvertFolderSelect.Location = new System.Drawing.Point(952' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonConvertFolderSelect.Size = new System.Drawing.Size(6' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonConvertFolderSelect.TabIndex = 6;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ribbonTabPageBurn.Size = new System.Drawing.Size(1393' 99);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ribbonTabPageBurn.Size = new System.Drawing.Size(1393' 99);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ribbonGroupBurn.Size = new System.Drawing.Size(95' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonBurnStart.Location = new System.Drawing.Point(13' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonBurnStart.Location = new System.Drawing.Point(13' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonBurnStart.Size = new System.Drawing.Size(56' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonBurnCancel.Location = new System.Drawing.Point(13' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonBurnCancel.Location = new System.Drawing.Point(13' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.buttonBurnCancel.Size = new System.Drawing.Size(67' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ribbonGroupBurnOptions.Location = new System.Drawing.Point(96' 1);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ribbonGroupBurnOptions.Size = new System.Drawing.Size(362' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxBurner.Location = new System.Drawing.Point(4' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxBurner.Location = new System.Drawing.Point(4' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxBurner.Size = new System.Drawing.Size(348' 19);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxBurner.Size = new System.Drawing.Size(348' 19);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxBurner.TextEditorWidth = 180;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxBurnerSpeed.Location = new System.Drawing.Point(354' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxBurnerSpeed.Location = new System.Drawing.Point(354' 2);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxBurnerSpeed.Size = new System.Drawing.Size(268' 19);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxBurnerSpeed.Size = new System.Drawing.Size(268' 19);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.panelMiddle.Location = new System.Drawing.Point(0' 150);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.panelMiddle.Size = new System.Drawing.Size(1497' 919);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.panelMiddle.Size = new System.Drawing.Size(1497' 919);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.panelMiddle.TabIndex = 10;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.panelMiddleTop.Location = new System.Drawing.Point(158' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.panelMiddleTop.Size = new System.Drawing.Size(1165' 652);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.panelMiddleTop.Size = new System.Drawing.Size(1165' 652);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.panelMiddleTop.TabIndex = 11;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.panelFileList.Size = new System.Drawing.Size(1165' 652);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.panelFileList.Size = new System.Drawing.Size(1165' 652);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.panelFileList.TabIndex = 9;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.splitterLeft.AnimationDelay = 20;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.splitterLeft.AnimationStep = 20;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.splitterLeft.Location = new System.Drawing.Point(150' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.splitterLeft.TabIndex = 2;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.panelLeft.Size = new System.Drawing.Size(150' 919);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.panelLeft.Size = new System.Drawing.Size(150' 919);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.panelLeftTop.Size = new System.Drawing.Size(150' 919);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.panelLeftTop.Size = new System.Drawing.Size(150' 919);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.panelLeftTop.TabIndex = 4;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.splitterRight.AnimationDelay = 20;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.splitterRight.AnimationStep = 20;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.splitterRight.Location = new System.Drawing.Point(1323' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.splitterRight.TabIndex = 4;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.panelRight.Location = new System.Drawing.Point(1331' 0);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.panelRight.Size = new System.Drawing.Size(166' 919);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.panelRight.Size = new System.Drawing.Size(166' 919);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.panelRight.TabIndex = 3;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.splitterBottom.AnimationDelay = 20;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.splitterBottom.AnimationStep = 200;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.splitterBottom.Location = new System.Drawing.Point(150' 652);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.splitterBottom.Location = new System.Drawing.Point(150' 652);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.splitterBottom.TabIndex = 6;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.panelMiddleBottom.Location = new System.Drawing.Point(150' 655);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.panelMiddleBottom.Location = new System.Drawing.Point(150' 655);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.panelMiddleBottom.Size = new System.Drawing.Size(1181' 264);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.panelMiddleBottom.Size = new System.Drawing.Size(1181' 264);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.panelMiddleBottom.TabIndex = 12;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.splitterPlayer.AnimationStep = 50;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.splitterPlayer.Location = new System.Drawing.Point(0' 1069);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.splitterPlayer.TabIndex = 13;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewTextBoxColumn1.Width = 300;
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(1497' 1184);
Magic Number,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(1497' 1184);
Magic Number,MPTagThat,MiscInfoControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\MiscInfoControl.cs,MiscInfoControl,The following statement contains a magic number: MenuItem[] nonMusicMenuitems = new MenuItem[2];
Magic Number,MPTagThat,MiscInfoControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\MiscInfoControl.cs,AddNonMusicFiles,The following statement contains a magic number: _imgList.ImageSize = new Size(64' 64);
Magic Number,MPTagThat,MiscInfoControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\MiscInfoControl.cs,AddNonMusicFiles,The following statement contains a magic number: _imgList.ImageSize = new Size(64' 64);
Magic Number,MPTagThat,MiscInfoControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\MiscInfoControl.cs,AddNonMusicFiles,The following statement contains a magic number: foreach (FileInfo fi in files)        {          log.Trace("Creatung thumb for: {0}"' fi.FullName);            // Create Image          bool imgFailure = false;          bool nonPicFile = true;          Size originalImageSize = new Size(0'0);            if (Util.IsPicture(fi.Name))          {            nonPicFile = false;            try            {              Image img = GetImageFromFile(fi.FullName' out originalImageSize);              if (img != null)              {                _imgList.Images.Add(img);              }              else              {                imgFailure = true;              }            }            catch (Exception)            {              imgFailure = true;            }          }          if (nonPicFile || imgFailure)          {            // For a non Picture file or if we had troubles creating the thumb' see if we have a file specific icon            string defaultName = "";            if (fi.Extension.Length > 0)            {              try              {                defaultName = string.Format("Fileicons\\{0}.png"' fi.Extension.Substring(1));              }              catch (Exception) {}            }            if (File.Exists(defaultName))            {              Image img = GetImageFromFile(defaultName' out originalImageSize);              if (img != null)              {                _imgList.Images.Add(img);              }            }            else            {              Image img = GetImageFromFile("Fileicons\\unknown.png"' out originalImageSize);              if (img != null)              {                _imgList.Images.Add(img);              }            }          }            string itemName = string.Format("{0}\n| {1}x{2} |"' fi.Name' originalImageSize.Width' originalImageSize.Height);          ListViewItem item = new ListViewItem(itemName);          item.Tag = fi.FullName;          item.ToolTipText = string.Format("{0} | {1} {2} | {3}x{4} | {5}kb"' fi.FullName' fi.LastWriteTime.ToShortDateString()'                                           fi.LastWriteTime.ToShortTimeString()' originalImageSize.Width' originalImageSize.Height' fi.Length / 1024);            item.ImageIndex = i;          listViewNonMusicFiles.Items.Add(item);          i++;        }
Magic Number,MPTagThat,MiscInfoControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\MiscInfoControl.cs,GetImageFromFile,The following statement contains a magic number: try        {          using (FileStream fs = new FileStream(fileName' FileMode.Open' FileAccess.Read' FileShare.ReadWrite))          {            img = new FreeImageBitmap(fs);            fs.Close();          }          size = img.Size;            // convert Image Size to 64 x 64 for display in the Imagelist          img.Rescale(64' 64' FREE_IMAGE_FILTER.FILTER_BOX);        }        catch (Exception ex)        {          log.Error("File has invalid Picture: {0} {1}"' fileName' ex.Message);        }
Magic Number,MPTagThat,MiscInfoControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\MiscInfoControl.cs,GetImageFromFile,The following statement contains a magic number: try        {          using (FileStream fs = new FileStream(fileName' FileMode.Open' FileAccess.Read' FileShare.ReadWrite))          {            img = new FreeImageBitmap(fs);            fs.Close();          }          size = img.Size;            // convert Image Size to 64 x 64 for display in the Imagelist          img.Rescale(64' 64' FREE_IMAGE_FILTER.FILTER_BOX);        }        catch (Exception ex)        {          log.Error("File has invalid Picture: {0} {1}"' fileName' ex.Message);        }
Magic Number,MPTagThat,MiscInfoControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\MiscInfoControl.cs,listViewNonMusicFiles_AfterLabelEdit,The following statement contains a magic number: try        {          FileSystem.MoveFile(_savedFileName' e.Label' UIOption.AllDialogs' UICancelOption.DoNothing);          listViewNonMusicFiles.Items[e.Item].Tag = e.Label;                    // We have stored the changed label in the Tag and are now setting the alternate title          e.CancelEdit = true;           listViewNonMusicFiles.Items[e.Item].Text = string.Format("{0}\n{1}"' Path.GetFileName(e.Label)' _savedImageSize);            FileInfo fi = new FileInfo((string)listViewNonMusicFiles.Items[e.Item].Tag);          listViewNonMusicFiles.Items[e.Item].ToolTipText = string.Format("{0} | {1} {2} {3} {4}kb"' fi.FullName' fi.LastWriteTime.ToShortDateString()'                                           fi.LastWriteTime.ToShortTimeString()' _savedImageSize' fi.Length / 1024);          }        catch (Exception ex)        {          e.CancelEdit = true;          listViewNonMusicFiles.Items[e.Item].Text = (string)listViewNonMusicFiles.Items[e.Item].Tag;          log.Error("Error renaming file: {0} to {1} Exception: {2}"' _savedFileName' e.Label' ex.Message);        }
Magic Number,MPTagThat,MiscInfoControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\MiscInfoControl.cs,listViewNonMusicFiles_RenameToFolderJpg,The following statement contains a magic number: try        {          FileSystem.MoveFile((string)item.Tag' newName' UIOption.OnlyErrorDialogs' UICancelOption.DoNothing);          item.Tag = newName;            // Set Text and fileInfo for renamed Item          item.Text = string.Format("{0}\n{1}"' Path.GetFileName(newName)' savedImageSize);          FileInfo fi = new FileInfo(newName);          item.ToolTipText = string.Format("{0} | {1} {2} {3} {4}kb"' fi.FullName' fi.LastWriteTime.ToShortDateString()'                                           fi.LastWriteTime.ToShortTimeString()' savedImageSize' fi.Length / 1024);        }        catch (Exception ex)        {          log.Error("Error renaming file: {0} to {1} Exception: {2}"' item.Text' newName' ex.Message);        }
Magic Number,MPTagThat,MiscInfoControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\MiscInfoControl.cs,listViewNonMusicFiles_MouseDown,The following statement contains a magic number: if (e.Button == MouseButtons.Left && listViewNonMusicFiles.SelectedItems.Count > 0)        {          // Remember the point where the mouse down occurred. The DragSize indicates          // the size that the mouse can move before a drag event should be started.                          Size dragSize = SystemInformation.DragSize;            // Create a rectangle using the DragSize' with the mouse position being          // at the center of the rectangle.          _dragBoxFromMouseDown = new Rectangle(new Point(e.X - (dragSize.Width / 2)' e.Y - (dragSize.Height / 2))'                                                dragSize);        }        else          _dragBoxFromMouseDown = Rectangle.Empty;
Magic Number,MPTagThat,MiscInfoControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\MiscInfoControl.cs,listViewNonMusicFiles_MouseDown,The following statement contains a magic number: if (e.Button == MouseButtons.Left && listViewNonMusicFiles.SelectedItems.Count > 0)        {          // Remember the point where the mouse down occurred. The DragSize indicates          // the size that the mouse can move before a drag event should be started.                          Size dragSize = SystemInformation.DragSize;            // Create a rectangle using the DragSize' with the mouse position being          // at the center of the rectangle.          _dragBoxFromMouseDown = new Rectangle(new Point(e.X - (dragSize.Width / 2)' e.Y - (dragSize.Height / 2))'                                                dragSize);        }        else          _dragBoxFromMouseDown = Rectangle.Empty;
Magic Number,MPTagThat,MiscInfoControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\MiscInfoControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageNonMusicFiles.Padding = new System.Windows.Forms.Padding(3);
Magic Number,MPTagThat,MiscInfoControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\MiscInfoControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageNonMusicFiles.Size = new System.Drawing.Size(201' 449);
Magic Number,MPTagThat,MiscInfoControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\MiscInfoControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageNonMusicFiles.Size = new System.Drawing.Size(201' 449);
Magic Number,MPTagThat,MiscInfoControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\MiscInfoControl.cs,InitializeComponent,The following statement contains a magic number: this.listViewNonMusicFiles.Location = new System.Drawing.Point(3' 3);
Magic Number,MPTagThat,MiscInfoControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\MiscInfoControl.cs,InitializeComponent,The following statement contains a magic number: this.listViewNonMusicFiles.Location = new System.Drawing.Point(3' 3);
Magic Number,MPTagThat,MiscInfoControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\MiscInfoControl.cs,InitializeComponent,The following statement contains a magic number: this.listViewNonMusicFiles.Size = new System.Drawing.Size(195' 443);
Magic Number,MPTagThat,MiscInfoControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\MiscInfoControl.cs,InitializeComponent,The following statement contains a magic number: this.listViewNonMusicFiles.Size = new System.Drawing.Size(195' 443);
Magic Number,MPTagThat,MiscInfoControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\MiscInfoControl.cs,InitializeComponent,The following statement contains a magic number: this.tabControlMisc.Size = new System.Drawing.Size(203' 470);
Magic Number,MPTagThat,MiscInfoControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\MiscInfoControl.cs,InitializeComponent,The following statement contains a magic number: this.tabControlMisc.Size = new System.Drawing.Size(203' 470);
Magic Number,MPTagThat,MiscInfoControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\MiscInfoControl.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(203' 470);
Magic Number,MPTagThat,MiscInfoControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\MiscInfoControl.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(203' 470);
Magic Number,MPTagThat,PictureControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\PictureControl.cs,PictureControl,The following statement contains a magic number: Width = item.Image.Width + ((Width - ClientSize.Width) / 2) + 8;
Magic Number,MPTagThat,PictureControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\PictureControl.cs,PictureControl,The following statement contains a magic number: Width = item.Image.Width + ((Width - ClientSize.Width) / 2) + 8;
Magic Number,MPTagThat,PictureControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\PictureControl.cs,PictureControl,The following statement contains a magic number: Height = item.Image.Height + (Height - ClientSize.Height - 2 * ((Width - ClientSize.Width) / 2)) + 11;
Magic Number,MPTagThat,PictureControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\PictureControl.cs,PictureControl,The following statement contains a magic number: Height = item.Image.Height + (Height - ClientSize.Height - 2 * ((Width - ClientSize.Width) / 2)) + 11;
Magic Number,MPTagThat,PictureControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\PictureControl.cs,PictureControl,The following statement contains a magic number: Height = item.Image.Height + (Height - ClientSize.Height - 2 * ((Width - ClientSize.Width) / 2)) + 11;
Magic Number,MPTagThat,PictureControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\PictureControl.cs,InitializeComponent,The following statement contains a magic number: this.pictureBoxCover.Size = new System.Drawing.Size(284' 264);
Magic Number,MPTagThat,PictureControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\PictureControl.cs,InitializeComponent,The following statement contains a magic number: this.pictureBoxCover.Size = new System.Drawing.Size(284' 264);
Magic Number,MPTagThat,PictureControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\PictureControl.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(284' 264);
Magic Number,MPTagThat,PictureControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\PictureControl.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(284' 264);
Magic Number,MPTagThat,Program,C:\repos\MediaPortal_MPTagThat\MPTagThat\Program.cs,Main,The following statement contains a magic number: foreach (string arg in args)        {          if (arg.ToLower().StartsWith("/folder="))          {            _startupFolder = arg.Substring(8);          }          else if (arg.ToLower() == "/portable")          {            _portable = 1;          }        }
Magic Number,MPTagThat,Program,C:\repos\MediaPortal_MPTagThat\MPTagThat\Program.cs,DoInitService,The following statement contains a magic number: byte[] buffer = new byte[2048];
Magic Number,MPTagThat,Program,C:\repos\MediaPortal_MPTagThat\MPTagThat\Program.cs,DoInitService,The following statement contains a magic number: using (var mmf = MemoryMappedFile.CreateOrOpen("MPTagThat"' 2048))        {          // Create accessor to MMF          using (var accessor = mmf.CreateViewAccessor(0' buffer.Length))          {            // Wait for the Message to be fired            while (true)            {              ServiceScope.Get<ILogger>().GetLogger.Debug("Wait for Startup Event to be fired");              messageWaitHandle.WaitOne();              ServiceScope.Get<ILogger>().GetLogger.Debug("Startup Event fired");                // Read from MMF              accessor.ReadArray(0' buffer' 0' buffer.Length);                string startupFolder = Encoding.Default.GetString(buffer).Trim(' '' '\x00');              SetCurrentFolder(startupFolder);            }          }        }
Magic Number,MPTagThat,Program,C:\repos\MediaPortal_MPTagThat\MPTagThat\Program.cs,ReadConfig,The following statement contains a magic number: try        {          XmlDocument doc = new XmlDocument();          doc.Load(configFile);            // Check' if we got a config.xml          if (doc.DocumentElement == null) return;          string strRoot = doc.DocumentElement.Name;          if (strRoot != "config") return;            XmlNode portableNode = doc.DocumentElement.SelectSingleNode("/config/portable");          if (portableNode != null)          {            if (_portable == 0)            {              // Only use the value from Config' if not overriden by an argument              _portable = Convert.ToInt32(portableNode.InnerText);            }            _startupSettings.Portable = _portable != 0;          }            XmlNode maxSongsNode = doc.DocumentElement.SelectSingleNode("/config/MaximumNumberOfSongsInList");          _startupSettings.MaxSongs = maxSongsNode != null ? Convert.ToInt32(maxSongsNode.InnerText) : 500;    				XmlNode ravenDebugNode = doc.DocumentElement.SelectSingleNode("/config/RavenDebug");  				_startupSettings.RavenDebug = ravenDebugNode != null && Convert.ToInt32(ravenDebugNode.InnerText) != 0;            XmlNode ravenStudioNode = doc.DocumentElement.SelectSingleNode("/config/RavenStudio");          _startupSettings.RavenStudio = ravenStudioNode != null && Convert.ToInt32(ravenStudioNode.InnerText) != 0;            XmlNode ravenPortNode = doc.DocumentElement.SelectSingleNode("/config/RavenStudioPort");          _startupSettings.RavenStudioPort = ravenPortNode != null ? Convert.ToInt32(ravenPortNode.InnerText) : 8080;            XmlNode ravenDatabaseNode = doc.DocumentElement.SelectSingleNode("/config/MusicDatabaseFolder");          var dbPath = ravenDatabaseNode?.InnerText ?? "%APPDATA%\\MPTagThat\\Databases";          dbPath = CheckPath(dbPath);          _startupSettings.DatabaseFolder = dbPath;            XmlNode coverArtNode = doc.DocumentElement.SelectSingleNode("/config/CoverArtFolder");          var coverArtPath = coverArtNode?.InnerText ?? "%APPDATA%\\MPTagThat\\CoverArt";          coverArtPath = CheckPath(coverArtPath);          _startupSettings.CoverArtFolder = coverArtPath;        }        catch (Exception)        {          // ignored        }
Magic Number,MPTagThat,Program,C:\repos\MediaPortal_MPTagThat\MPTagThat\Program.cs,ReadConfig,The following statement contains a magic number: try        {          XmlDocument doc = new XmlDocument();          doc.Load(configFile);            // Check' if we got a config.xml          if (doc.DocumentElement == null) return;          string strRoot = doc.DocumentElement.Name;          if (strRoot != "config") return;            XmlNode portableNode = doc.DocumentElement.SelectSingleNode("/config/portable");          if (portableNode != null)          {            if (_portable == 0)            {              // Only use the value from Config' if not overriden by an argument              _portable = Convert.ToInt32(portableNode.InnerText);            }            _startupSettings.Portable = _portable != 0;          }            XmlNode maxSongsNode = doc.DocumentElement.SelectSingleNode("/config/MaximumNumberOfSongsInList");          _startupSettings.MaxSongs = maxSongsNode != null ? Convert.ToInt32(maxSongsNode.InnerText) : 500;    				XmlNode ravenDebugNode = doc.DocumentElement.SelectSingleNode("/config/RavenDebug");  				_startupSettings.RavenDebug = ravenDebugNode != null && Convert.ToInt32(ravenDebugNode.InnerText) != 0;            XmlNode ravenStudioNode = doc.DocumentElement.SelectSingleNode("/config/RavenStudio");          _startupSettings.RavenStudio = ravenStudioNode != null && Convert.ToInt32(ravenStudioNode.InnerText) != 0;            XmlNode ravenPortNode = doc.DocumentElement.SelectSingleNode("/config/RavenStudioPort");          _startupSettings.RavenStudioPort = ravenPortNode != null ? Convert.ToInt32(ravenPortNode.InnerText) : 8080;            XmlNode ravenDatabaseNode = doc.DocumentElement.SelectSingleNode("/config/MusicDatabaseFolder");          var dbPath = ravenDatabaseNode?.InnerText ?? "%APPDATA%\\MPTagThat\\Databases";          dbPath = CheckPath(dbPath);          _startupSettings.DatabaseFolder = dbPath;            XmlNode coverArtNode = doc.DocumentElement.SelectSingleNode("/config/CoverArtFolder");          var coverArtPath = coverArtNode?.InnerText ?? "%APPDATA%\\MPTagThat\\CoverArt";          coverArtPath = CheckPath(coverArtPath);          _startupSettings.CoverArtFolder = coverArtPath;        }        catch (Exception)        {          // ignored        }
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,Init,The following statement contains a magic number: if (Options.MainSettings.DataProvider == 2)        {          _databaseMode = true;        }
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,LocaliseScreen,The following statement contains a magic number: contextMenuTreeView.Items[2].Text = localisation.ToString("contextmenu"' "Paste");
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,LocaliseScreen,The following statement contains a magic number: contextMenuTreeView.Items[3].Text = localisation.ToString("contextmenu"' "Delete");
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,LocaliseScreen,The following statement contains a magic number: contextMenuTreeView.Items[4].Text = localisation.ToString("contextmenu"' "Refresh");
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,LoadSettings,The following statement contains a magic number: if (Options.TreeViewSettings.Filter.Count > 0)        {          _filter = Options.TreeViewSettings.Filter[0];          if (Options.TreeViewSettings.LastUsedFormat != "")          {            foreach (TreeViewFilter filter in Options.TreeViewSettings.Filter)            {              if (filter.Name == Options.TreeViewSettings.LastUsedFormat)              {                _filter = filter;                break;              }            }          }            // Now set the File Formats          foreach (Item item in cbListFormats.Items)          {            if ((string)item.Value == _filter.FileFilter)            {              cbListFormats.SelectedItem = item;              break;            }          }            ckUseTagFilter.Checked = _filter.UseTagFilter;          ckUseTagFilter_CheckedChanged(ckUseTagFilter' new EventArgs());          dataGridViewTagFilter.Enabled = ckUseTagFilter.Checked;          int rowIndex = 0;          foreach (TreeViewTagFilter tagFilter in _filter.TagFilter)          {            dataGridViewTagFilter.Rows.Insert(rowIndex' 1);              int i = 0;            foreach (string filterFieldValue in _filterFieldValues)            {              if (filterFieldValue == tagFilter.Field)              {                dataGridViewTagFilter.Rows[rowIndex].Cells[0].Value = TagFilterField.Items[i];                break;              }              i++;            }              if (dataGridViewTagFilter.Rows[rowIndex].Cells[0].Value == null)            {              rowIndex++;              continue;            }              if (IsSpecialFilterColumn(dataGridViewTagFilter.Rows[rowIndex].Cells[0].Value.ToString()))            {              DataGridViewCheckBoxCell ckCell = new DataGridViewCheckBoxCell();              if (tagFilter.FilterValue == "1")              {                tagFilter.FilterValue = "true";              }              ckCell.Value = tagFilter.FilterValue;              dataGridViewTagFilter.Rows[rowIndex].Cells[1] = ckCell;            }            else            {              dataGridViewTagFilter.Rows[rowIndex].Cells[1].Value = tagFilter.FilterValue;            }              string op = null;            if (tagFilter.FilterOperator == "or")            {              op = "or";            }            else if (tagFilter.FilterOperator == "and")            {              op = "and";            }            dataGridViewTagFilter.Rows[rowIndex].Cells[2].Value = op;            rowIndex++;          }            // Fill the Recent folders into the folder selection list          foreach (string folderItem in Options.MainSettings.RecentFolders)          {            cbSelectedFolder.Items.Add(folderItem);          }        }
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,treeViewFolderBrowser_AfterSelect,The following statement contains a magic number: if (node != null)        {          if (DatabaseMode)          {            _main.CurrentDirectory = (string)node.Tag;          }          else          {            _main.CurrentDirectory = node.Path;          }            // Check' if the user selected a CD/DVD drive          bool isCDDrive = false;          string driveLetter = "";          if (node.Path.Length == 3)          {            driveLetter = node.Path.Substring(0' 1);            isCDDrive = Util.IsCDDrive(driveLetter);          }          if (isCDDrive)          {            _main.RipGridView.SelectedCDRomDrive = driveLetter;            _main.Ribbon.CurrentTabPage = _main.TabRip;            _main.BurnGridView.Hide();            _main.RipGridView.Show();            _main.TracksGridView.Hide();            if (!_main.SplitterRight.IsCollapsed)            {              _main.SplitterRight.ToggleState();            }          }          else          {            // If we selected a folder' while being in the Burn or Rip View' go to the TagTab            if (_main.Ribbon.CurrentTabPage != _main.TabTag)            {              _main.Ribbon.CurrentTabPage = _main.TabTag;              _main.BurnGridView.Hide();              _main.RipGridView.Hide();              _main.TracksGridView.Show();              if (_main.SplitterRight.IsCollapsed && !Options.MainSettings.RightPanelCollapsed)                _main.SplitterRight.ToggleState();            }            _main.SetRecentFolder(_main.CurrentDirectory);            _main.RefreshTrackList();          }        }
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,GetNode,The following statement contains a magic number: TreeViewHitTestInfo hitTestInfo = treeViewFolderBrowser.HitTest(point.X - pt.X' point.Y - pt.Y - 20);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,treeViewFolderBrowser_DragOver,The following statement contains a magic number: if (e.KeyState == 9 && (e.AllowedEffect & DragDropEffects.Copy) == DragDropEffects.Copy)        // The Ctrl Key + LMB was pressed        {          e.Effect = DragDropEffects.Copy;        }        else        {          e.Effect = DragDropEffects.Move;        }
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,treeViewFolderBrowser_DragDrop,The following statement contains a magic number: if (e.KeyState == 8) // The Ctrl Key was pressed        {          bMove = false;        }        else        {          bMove = true;        }
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,contextMenuTreeViewCopy_Click,The following statement contains a magic number: contextMenuTreeView.Items[2].Enabled = true;
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,contextMenuTreeViewCut_Click,The following statement contains a magic number: contextMenuTreeView.Items[2].Enabled = true;
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,contextMenuTreeViewPaste_Click,The following statement contains a magic number: contextMenuTreeView.Items[2].Enabled = false;
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,cbDataProvider_SelectedIndexChanged,The following statement contains a magic number: if (cbDataProvider.SelectedIndex == 2)        {          _databaseMode = true;        }        else        {          _databaseMode = false;        }
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,RefreshFilter,The following statement contains a magic number: foreach (DataGridViewRow row in dataGridViewTagFilter.Rows)        {          TreeViewTagFilter tagfilter = new TreeViewTagFilter();            // there's no SelectIndex property for DatagridCellComboBox          // and i have also problems using a DataSource' so we need to loop          if (row.Cells[0].Value != null)          {            tagfilter.Field = _filterFieldValues[TagFilterField.Items.IndexOf(row.Cells[0].Value.ToString())];          }            if (row.Cells[1].Value != null)          {            tagfilter.FilterValue = row.Cells[1].Value.ToString();          }            if (row.Cells[2].Value != null)          {            string selectedValue = row.Cells[2].Value.ToString();            int i = 0;            foreach (string item in TagFilterOperator.Items)            {              if (item == selectedValue)              {                tagfilter.FilterOperator = i == 0 ? "and" : "or";                break;              }              i++;            }          }          _filter.TagFilter.Add(tagfilter);        }
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,RefreshFilter,The following statement contains a magic number: foreach (DataGridViewRow row in dataGridViewTagFilter.Rows)        {          TreeViewTagFilter tagfilter = new TreeViewTagFilter();            // there's no SelectIndex property for DatagridCellComboBox          // and i have also problems using a DataSource' so we need to loop          if (row.Cells[0].Value != null)          {            tagfilter.Field = _filterFieldValues[TagFilterField.Items.IndexOf(row.Cells[0].Value.ToString())];          }            if (row.Cells[1].Value != null)          {            tagfilter.FilterValue = row.Cells[1].Value.ToString();          }            if (row.Cells[2].Value != null)          {            string selectedValue = row.Cells[2].Value.ToString();            int i = 0;            foreach (string item in TagFilterOperator.Items)            {              if (item == selectedValue)              {                tagfilter.FilterOperator = i == 0 ? "and" : "or";                break;              }              i++;            }          }          _filter.TagFilter.Add(tagfilter);        }
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.contextMenuTreeView.Size = new System.Drawing.Size(114' 120);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.contextMenuTreeView.Size = new System.Drawing.Size(114' 120);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.menuCopy.Size = new System.Drawing.Size(113' 22);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.menuCopy.Size = new System.Drawing.Size(113' 22);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.menuCut.Size = new System.Drawing.Size(113' 22);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.menuCut.Size = new System.Drawing.Size(113' 22);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.menuPaste.Size = new System.Drawing.Size(113' 22);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.menuPaste.Size = new System.Drawing.Size(113' 22);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.menuDelete.Size = new System.Drawing.Size(113' 22);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.menuDelete.Size = new System.Drawing.Size(113' 22);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator1.Size = new System.Drawing.Size(110' 6);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator1.Size = new System.Drawing.Size(110' 6);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.menuRefresh.Size = new System.Drawing.Size(113' 22);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.menuRefresh.Size = new System.Drawing.Size(113' 22);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.contextMenuStripFilter.Size = new System.Drawing.Size(137' 48);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.contextMenuStripFilter.Size = new System.Drawing.Size(137' 48);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.menuInsertFilter.Size = new System.Drawing.Size(136' 22);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.menuInsertFilter.Size = new System.Drawing.Size(136' 22);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.menuDeleteFilter.Size = new System.Drawing.Size(136' 22);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.menuDeleteFilter.Size = new System.Drawing.Size(136' 22);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.tabControlTreeView.Size = new System.Drawing.Size(218' 535);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.tabControlTreeView.Size = new System.Drawing.Size(218' 535);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.tabControlTreeView.TabIndex = 8;
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageViews.Padding = new System.Windows.Forms.Padding(3);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageViews.Size = new System.Drawing.Size(216' 514);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageViews.Size = new System.Drawing.Size(216' 514);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.treeViewPanel.AnimationStep = 30;
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.treeViewPanel.CaptionSize = 24;
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.treeViewPanel.Location = new System.Drawing.Point(3' 54);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.treeViewPanel.Location = new System.Drawing.Point(3' 54);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.treeViewPanel.Size = new System.Drawing.Size(210' 457);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.treeViewPanel.Size = new System.Drawing.Size(210' 457);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.treeViewPanel.TabIndex = 7;
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.treeViewPanelBottom.Location = new System.Drawing.Point(0' 24);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.treeViewPanelBottom.Size = new System.Drawing.Size(210' 433);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.treeViewPanelBottom.Size = new System.Drawing.Size(210' 433);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.treeViewPanelBottom.TabIndex = 2;
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.treeViewFolderBrowser.Size = new System.Drawing.Size(210' 433);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.treeViewFolderBrowser.Size = new System.Drawing.Size(210' 433);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.treeViewPanelTop.Size = new System.Drawing.Size(210' 24);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.treeViewPanelTop.Size = new System.Drawing.Size(210' 24);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.treeViewPanelUpper.Location = new System.Drawing.Point(3' 3);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.treeViewPanelUpper.Location = new System.Drawing.Point(3' 3);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.treeViewPanelUpper.Size = new System.Drawing.Size(210' 51);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.treeViewPanelUpper.Size = new System.Drawing.Size(210' 51);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.treeViewPanelUpper.TabIndex = 8;
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.jumpToFolderPanel.CaptionSize = 20;
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.jumpToFolderPanel.Size = new System.Drawing.Size(210' 51);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.jumpToFolderPanel.Size = new System.Drawing.Size(210' 51);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.cbSelectedFolder.Location = new System.Drawing.Point(3' 24);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.cbSelectedFolder.Location = new System.Drawing.Point(3' 24);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.cbSelectedFolder.Size = new System.Drawing.Size(173' 21);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.cbSelectedFolder.Size = new System.Drawing.Size(173' 21);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.cbSelectedFolder.TabIndex = 2;
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.cbSelectedFolder.TextEditorWidth = 154;
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.btJumpToFolder.Location = new System.Drawing.Point(188' 25);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.btJumpToFolder.Location = new System.Drawing.Point(188' 25);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.btJumpToFolder.Size = new System.Drawing.Size(21' 23);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.btJumpToFolder.Size = new System.Drawing.Size(21' 23);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageFilter.Padding = new System.Windows.Forms.Padding(3);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageFilter.Size = new System.Drawing.Size(216' 514);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageFilter.Size = new System.Drawing.Size(216' 514);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewTagFilter.Location = new System.Drawing.Point(6' 34);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewTagFilter.Location = new System.Drawing.Point(6' 34);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewTagFilter.Size = new System.Drawing.Size(198' 392);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewTagFilter.Size = new System.Drawing.Size(198' 392);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewTagFilter.TabIndex = 4;
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.TagFilterField.MaxDropDownItems = 50;
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.TagFilterField.Width = 35;
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.TagFilterOperator.Width = 58;
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.lbFileMask.Location = new System.Drawing.Point(8' 459);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.lbFileMask.Location = new System.Drawing.Point(8' 459);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.lbFileMask.Size = new System.Drawing.Size(52' 13);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.lbFileMask.Size = new System.Drawing.Size(52' 13);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.lbFileMask.TabIndex = 3;
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.tbFileMask.Location = new System.Drawing.Point(6' 476);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.tbFileMask.Location = new System.Drawing.Point(6' 476);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.tbFileMask.Size = new System.Drawing.Size(201' 20);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.tbFileMask.Size = new System.Drawing.Size(201' 20);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.tbFileMask.TabIndex = 2;
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.cbListFormats.Location = new System.Drawing.Point(6' 432);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.cbListFormats.Location = new System.Drawing.Point(6' 432);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.cbListFormats.Size = new System.Drawing.Size(201' 21);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.cbListFormats.Size = new System.Drawing.Size(201' 21);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.ckUseTagFilter.Location = new System.Drawing.Point(6' 7);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.ckUseTagFilter.Location = new System.Drawing.Point(6' 7);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.ckUseTagFilter.Size = new System.Drawing.Size(198' 26);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.ckUseTagFilter.Size = new System.Drawing.Size(198' 26);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.panelLeftBottom.Location = new System.Drawing.Point(0' 535);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.panelLeftBottom.Size = new System.Drawing.Size(218' 141);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.panelLeftBottom.Size = new System.Drawing.Size(218' 141);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.panelLeftBottom.TabIndex = 6;
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.optionsPanelLeft.AnimationStep = 30;
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.optionsPanelLeft.CaptionSize = 24;
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.optionsPanelLeft.Size = new System.Drawing.Size(218' 141);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.optionsPanelLeft.Size = new System.Drawing.Size(218' 141);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.optionsPanelLeft.TabIndex = 2;
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.btnRefreshFolder.Location = new System.Drawing.Point(13' 98);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.btnRefreshFolder.Location = new System.Drawing.Point(13' 98);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.btnRefreshFolder.MaximumSize = new System.Drawing.Size(220' 20);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.btnRefreshFolder.MaximumSize = new System.Drawing.Size(220' 20);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.btnRefreshFolder.Size = new System.Drawing.Size(184' 20);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.btnRefreshFolder.Size = new System.Drawing.Size(184' 20);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.btnRefreshFolder.TabIndex = 4;
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.cbDataProvider.Location = new System.Drawing.Point(13' 35);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.cbDataProvider.Location = new System.Drawing.Point(13' 35);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.cbDataProvider.Size = new System.Drawing.Size(180' 21);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.cbDataProvider.Size = new System.Drawing.Size(180' 21);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.cbDataProvider.TabIndex = 5;
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxRecursive.Location = new System.Drawing.Point(13' 63);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxRecursive.Location = new System.Drawing.Point(13' 63);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxRecursive.MaximumSize = new System.Drawing.Size(250' 30);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxRecursive.MaximumSize = new System.Drawing.Size(250' 30);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxRecursive.Size = new System.Drawing.Size(184' 30);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxRecursive.Size = new System.Drawing.Size(184' 30);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxRecursive.TabIndex = 3;
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(218' 676);
Magic Number,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(218' 676);
Magic Number,MPTagThat.Commands,CmdCoverArtDrop,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\CmdCoverArtDrop.cs,GetCoverArtFromUrl,The following statement contains a magic number: try        {          // When dragging from Google images' we have a imgurl. extract the right url.          int imgurlIndex = url.IndexOf("imgurl="' StringComparison.Ordinal);          if (imgurlIndex > -1)          {            url = url.Substring(imgurlIndex + 7);            url = url.Substring(0' url.IndexOf("&"' StringComparison.Ordinal));          }            Log.Info("Retrieving Coverart from: {0}"' url);          WebRequest req = WebRequest.Create(url);          req.Proxy = new WebProxy();          req.Proxy.Credentials = CredentialCache.DefaultCredentials;          WebResponse response = req.GetResponse();          Stream stream = response.GetResponseStream();          if (stream == null)          {            return null;          }          Image img = Image.FromStream(stream);          stream.Close();            var pic = new Picture { Data = Picture.ImageToByte((Image)img.Clone()) };            if (Options.MainSettings.ChangeCoverSize && img.Width > Options.MainSettings.MaxCoverWidth)          {            pic.Resize(Options.MainSettings.MaxCoverWidth);          }            img.Dispose();          return pic;        }        catch (Exception ex)        {          Log.Error("Error retrieving Image from Url: {0} Error: {1}"' url' ex.Message);        }
Magic Number,MPTagThat.Commands,CmdConvert,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\CmdConvert.cs,Execute,The following statement contains a magic number: _msg.MessageData["percent"] = 100.0;
Magic Number,MPTagThat.Commands,CmdSave,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\CmdSave.cs,PostProcess,The following statement contains a magic number: Options.ReadOnlyFileHandling = 2;
Magic Number,MPTagThat.Commands,CmdSave,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\CmdSave.cs,SaveTrack,The following statement contains a magic number: try        {          if (track.Changed)          {            Util.SendProgress($"Saving file {track.FullFileName}");            Log.Debug($"Save: Saving track: {track.FullFileName}");              // The track to be saved' may be currently playing. If this is the case stop playback to free the file            if (track.FullFileName == TracksGrid.MainForm.Player.CurrentSongPlaying)            {              Log.Debug("Save: Song is played in Player. Stop playback to free the file");              TracksGrid.MainForm.Player.Stop();            }              if (Options.MainSettings.CopyArtist && track.AlbumArtist == "")            {              track.AlbumArtist = track.Artist;            }              if (Options.MainSettings.UseCaseConversion)            {              CaseConversion.CaseConversion convert = new CaseConversion.CaseConversion(TracksGrid.MainForm' true);              convert.CaseConvert(track' rowIndex);              convert.Dispose();            }              string originalFileName = track.FullFileName; // Need the original filename for database update' in case a rename happens              // Save the file             string errorMessage = "";            if (Track.SaveFile(track' ref errorMessage))            {              if (RenameFile(track))              {                // rename was ok' so get the new file into the binding list                string ext = Path.GetExtension(track.FileName);                string newFileName = Path.Combine(Path.GetDirectoryName(track.FullFileName)'                                                  String.Format("{0}{1}"' Path.GetFileNameWithoutExtension(track.FileName)'                                                                ext));                  track = Track.Create(newFileName);                Options.Songlist[rowIndex] = track;              }                // Check' if we need to create a folder.jpg              if (!System.IO.File.Exists(Path.Combine(Path.GetDirectoryName(track.FullFileName)' "folder.jpg")) &&                  Options.MainSettings.CreateFolderThumb)              {                Util.SavePicture(track);              }                // Update the Music Database              ServiceScope.Get<IMusicDatabase>().UpdateTrack(track' originalFileName);                track.Status = 0;              TracksGrid.View.Rows[rowIndex].Cells[0].ToolTipText = "";              track.Changed = false;              TracksGrid.View.Rows[rowIndex].Tag = "";              Options.Songlist[rowIndex] = track;              TracksGrid.SetGridRowColors(rowIndex);            }            else            {              track.Status = 2;              TracksGrid.AddErrorMessage(TracksGrid.View.Rows[rowIndex]' errorMessage);            }          }        }        catch (Exception ex)        {          Options.Songlist[rowIndex].Status = 2;          TracksGrid.AddErrorMessage(TracksGrid.View.Rows[rowIndex]' ex.Message);          Log.Error("Save: Error Saving data for row {0}: {1} {2}"' rowIndex' ex.Message' ex.StackTrace);          return false;        }
Magic Number,MPTagThat.Commands,CmdSave,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\CmdSave.cs,SaveTrack,The following statement contains a magic number: try        {          if (track.Changed)          {            Util.SendProgress($"Saving file {track.FullFileName}");            Log.Debug($"Save: Saving track: {track.FullFileName}");              // The track to be saved' may be currently playing. If this is the case stop playback to free the file            if (track.FullFileName == TracksGrid.MainForm.Player.CurrentSongPlaying)            {              Log.Debug("Save: Song is played in Player. Stop playback to free the file");              TracksGrid.MainForm.Player.Stop();            }              if (Options.MainSettings.CopyArtist && track.AlbumArtist == "")            {              track.AlbumArtist = track.Artist;            }              if (Options.MainSettings.UseCaseConversion)            {              CaseConversion.CaseConversion convert = new CaseConversion.CaseConversion(TracksGrid.MainForm' true);              convert.CaseConvert(track' rowIndex);              convert.Dispose();            }              string originalFileName = track.FullFileName; // Need the original filename for database update' in case a rename happens              // Save the file             string errorMessage = "";            if (Track.SaveFile(track' ref errorMessage))            {              if (RenameFile(track))              {                // rename was ok' so get the new file into the binding list                string ext = Path.GetExtension(track.FileName);                string newFileName = Path.Combine(Path.GetDirectoryName(track.FullFileName)'                                                  String.Format("{0}{1}"' Path.GetFileNameWithoutExtension(track.FileName)'                                                                ext));                  track = Track.Create(newFileName);                Options.Songlist[rowIndex] = track;              }                // Check' if we need to create a folder.jpg              if (!System.IO.File.Exists(Path.Combine(Path.GetDirectoryName(track.FullFileName)' "folder.jpg")) &&                  Options.MainSettings.CreateFolderThumb)              {                Util.SavePicture(track);              }                // Update the Music Database              ServiceScope.Get<IMusicDatabase>().UpdateTrack(track' originalFileName);                track.Status = 0;              TracksGrid.View.Rows[rowIndex].Cells[0].ToolTipText = "";              track.Changed = false;              TracksGrid.View.Rows[rowIndex].Tag = "";              Options.Songlist[rowIndex] = track;              TracksGrid.SetGridRowColors(rowIndex);            }            else            {              track.Status = 2;              TracksGrid.AddErrorMessage(TracksGrid.View.Rows[rowIndex]' errorMessage);            }          }        }        catch (Exception ex)        {          Options.Songlist[rowIndex].Status = 2;          TracksGrid.AddErrorMessage(TracksGrid.View.Rows[rowIndex]' ex.Message);          Log.Error("Save: Error Saving data for row {0}: {1} {2}"' rowIndex' ex.Message' ex.StackTrace);          return false;        }
Magic Number,MPTagThat.Commands,CmdFixMp3File,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\CmdFixMP3File.cs,Execute,The following statement contains a magic number: if (track.IsMp3)        {          Util.SendProgress(string.Format("Fixing file {0}"' track.FileName));          string strError;          track.MP3ValidationError = MP3Val.FixMp3File(track.FullFileName' out strError);          if (track.MP3ValidationError == Util.MP3Error.Fixed)          {            TracksGrid.SetGridRowColors(rowIndex);            track.Status = 4;            TracksGrid.View.Rows[rowIndex].Cells[0].ToolTipText = "";          }          else          {            TracksGrid.SetColorMP3Errors(rowIndex' track.MP3ValidationError);            track.Status = 3;            TracksGrid.View.Rows[rowIndex].Cells[0].ToolTipText = strError;          }        }
Magic Number,MPTagThat.Commands,CmdFixMp3File,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\CmdFixMP3File.cs,Execute,The following statement contains a magic number: if (track.IsMp3)        {          Util.SendProgress(string.Format("Fixing file {0}"' track.FileName));          string strError;          track.MP3ValidationError = MP3Val.FixMp3File(track.FullFileName' out strError);          if (track.MP3ValidationError == Util.MP3Error.Fixed)          {            TracksGrid.SetGridRowColors(rowIndex);            track.Status = 4;            TracksGrid.View.Rows[rowIndex].Cells[0].ToolTipText = "";          }          else          {            TracksGrid.SetColorMP3Errors(rowIndex' track.MP3ValidationError);            track.Status = 3;            TracksGrid.View.Rows[rowIndex].Cells[0].ToolTipText = strError;          }        }
Magic Number,MPTagThat.Commands,CmdReplayGain,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\CmdReplayGain.cs,ReplayAnalyze,The following statement contains a magic number: int[] chanmap = new int[2];
Magic Number,MPTagThat.Commands,CmdReplayGain,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\CmdReplayGain.cs,ReplayAnalyze,The following statement contains a magic number: int length = (int)Bass.BASS_ChannelSeconds2Bytes(channel' 0.02);
Magic Number,MPTagThat.Commands,CmdReplayGain,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\CmdReplayGain.cs,ReplayAnalyze,The following statement contains a magic number: Int16[] buffer = new Int16[length / 2];
Magic Number,MPTagThat.Commands,CmdReplayGain,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\CmdReplayGain.cs,ReplayAnalyze,The following statement contains a magic number: double[] leftSamples = new double[length / 2];
Magic Number,MPTagThat.Commands,CmdReplayGain,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\CmdReplayGain.cs,ReplayAnalyze,The following statement contains a magic number: double[] rightSamples = new double[length / 2];
Magic Number,MPTagThat.Commands,CmdReplayGain,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\CmdReplayGain.cs,ReplayAnalyze,The following statement contains a magic number: while (Bass.BASS_ChannelIsActive(stream1) == BASSActive.BASS_ACTIVE_PLAYING          || Bass.BASS_ChannelIsActive(stream2) == BASSActive.BASS_ACTIVE_PLAYING)        {          result = Bass.BASS_ChannelGetData(stream1' buffer' length);            int l4 = result / 2;          for (int a = 0; a < l4; a++)          {            leftSamples[a] = Convert.ToDouble(buffer[a]);          }            result = Bass.BASS_ChannelGetData(stream2' buffer' length);          l4 = result / 2;          for (int a = 0; a < l4; a++)          {            rightSamples[a] = Convert.ToDouble(buffer[a]);          }            AnalyzeSamples(leftSamples' rightSamples' new UIntPtr((uint)l4 / 2)' 2);          leftSamples = new double[length / 2];          rightSamples = new double[length / 2];        }
Magic Number,MPTagThat.Commands,CmdReplayGain,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\CmdReplayGain.cs,ReplayAnalyze,The following statement contains a magic number: while (Bass.BASS_ChannelIsActive(stream1) == BASSActive.BASS_ACTIVE_PLAYING          || Bass.BASS_ChannelIsActive(stream2) == BASSActive.BASS_ACTIVE_PLAYING)        {          result = Bass.BASS_ChannelGetData(stream1' buffer' length);            int l4 = result / 2;          for (int a = 0; a < l4; a++)          {            leftSamples[a] = Convert.ToDouble(buffer[a]);          }            result = Bass.BASS_ChannelGetData(stream2' buffer' length);          l4 = result / 2;          for (int a = 0; a < l4; a++)          {            rightSamples[a] = Convert.ToDouble(buffer[a]);          }            AnalyzeSamples(leftSamples' rightSamples' new UIntPtr((uint)l4 / 2)' 2);          leftSamples = new double[length / 2];          rightSamples = new double[length / 2];        }
Magic Number,MPTagThat.Commands,CmdReplayGain,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\CmdReplayGain.cs,ReplayAnalyze,The following statement contains a magic number: while (Bass.BASS_ChannelIsActive(stream1) == BASSActive.BASS_ACTIVE_PLAYING          || Bass.BASS_ChannelIsActive(stream2) == BASSActive.BASS_ACTIVE_PLAYING)        {          result = Bass.BASS_ChannelGetData(stream1' buffer' length);            int l4 = result / 2;          for (int a = 0; a < l4; a++)          {            leftSamples[a] = Convert.ToDouble(buffer[a]);          }            result = Bass.BASS_ChannelGetData(stream2' buffer' length);          l4 = result / 2;          for (int a = 0; a < l4; a++)          {            rightSamples[a] = Convert.ToDouble(buffer[a]);          }            AnalyzeSamples(leftSamples' rightSamples' new UIntPtr((uint)l4 / 2)' 2);          leftSamples = new double[length / 2];          rightSamples = new double[length / 2];        }
Magic Number,MPTagThat.Commands,CmdReplayGain,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\CmdReplayGain.cs,ReplayAnalyze,The following statement contains a magic number: while (Bass.BASS_ChannelIsActive(stream1) == BASSActive.BASS_ACTIVE_PLAYING          || Bass.BASS_ChannelIsActive(stream2) == BASSActive.BASS_ACTIVE_PLAYING)        {          result = Bass.BASS_ChannelGetData(stream1' buffer' length);            int l4 = result / 2;          for (int a = 0; a < l4; a++)          {            leftSamples[a] = Convert.ToDouble(buffer[a]);          }            result = Bass.BASS_ChannelGetData(stream2' buffer' length);          l4 = result / 2;          for (int a = 0; a < l4; a++)          {            rightSamples[a] = Convert.ToDouble(buffer[a]);          }            AnalyzeSamples(leftSamples' rightSamples' new UIntPtr((uint)l4 / 2)' 2);          leftSamples = new double[length / 2];          rightSamples = new double[length / 2];        }
Magic Number,MPTagThat.Commands,CmdReplayGain,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\CmdReplayGain.cs,ReplayAnalyze,The following statement contains a magic number: while (Bass.BASS_ChannelIsActive(stream1) == BASSActive.BASS_ACTIVE_PLAYING          || Bass.BASS_ChannelIsActive(stream2) == BASSActive.BASS_ACTIVE_PLAYING)        {          result = Bass.BASS_ChannelGetData(stream1' buffer' length);            int l4 = result / 2;          for (int a = 0; a < l4; a++)          {            leftSamples[a] = Convert.ToDouble(buffer[a]);          }            result = Bass.BASS_ChannelGetData(stream2' buffer' length);          l4 = result / 2;          for (int a = 0; a < l4; a++)          {            rightSamples[a] = Convert.ToDouble(buffer[a]);          }            AnalyzeSamples(leftSamples' rightSamples' new UIntPtr((uint)l4 / 2)' 2);          leftSamples = new double[length / 2];          rightSamples = new double[length / 2];        }
Magic Number,MPTagThat.Commands,CmdReplayGain,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\CmdReplayGain.cs,ReplayAnalyze,The following statement contains a magic number: while (Bass.BASS_ChannelIsActive(stream1) == BASSActive.BASS_ACTIVE_PLAYING          || Bass.BASS_ChannelIsActive(stream2) == BASSActive.BASS_ACTIVE_PLAYING)        {          result = Bass.BASS_ChannelGetData(stream1' buffer' length);            int l4 = result / 2;          for (int a = 0; a < l4; a++)          {            leftSamples[a] = Convert.ToDouble(buffer[a]);          }            result = Bass.BASS_ChannelGetData(stream2' buffer' length);          l4 = result / 2;          for (int a = 0; a < l4; a++)          {            rightSamples[a] = Convert.ToDouble(buffer[a]);          }            AnalyzeSamples(leftSamples' rightSamples' new UIntPtr((uint)l4 / 2)' 2);          leftSamples = new double[length / 2];          rightSamples = new double[length / 2];        }
Magic Number,MPTagThat.Commands,CmdBpm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\CmdBpm.cs,Execute,The following statement contains a magic number: TracksGrid.SetProgressBar(100);
Magic Number,MPTagThat.Commands,CmdValidateMp3File,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\CmdValidateMP3File.cs,Execute,The following statement contains a magic number: if (track.IsMp3)        {          Util.SendProgress(string.Format("Validating file {0}"' track.FileName));          string strError;          track.MP3ValidationError = MP3Val.ValidateMp3File(track.FullFileName' out strError);          if (track.MP3ValidationError != Util.MP3Error.NoError)          {            TracksGrid.SetColorMP3Errors(rowIndex' track.MP3ValidationError);            track.Status = 3;            TracksGrid.View.Rows[rowIndex].Cells[0].ToolTipText = strError;          }          else          {            TracksGrid.View.Rows[rowIndex].Cells[0].ToolTipText = "";          }        }
Magic Number,MPTagThat.Commands,CmdGetCoverArt,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\CmdGetCoverArt.cs,Execute,The following statement contains a magic number: if (_album != null)        {          if (!_savedCoverCash.ContainsKey(coverSearchString))          {            _savedCoverCash.Add(coverSearchString' _album);          }            // Only write a picture if we don't have a picture OR Overwrite Pictures is set);          if ((track.Pictures.Count == 0 || Options.MainSettings.OverwriteExistingCovers) && !Options.MainSettings.OnlySaveFolderThumb)          {            track.Pictures.Clear();              ByteVector vector = _album.AlbumImage;            if (vector != null)            {              var pic = new Core.Common.Picture();              pic.MimeType = "image/jpg";              pic.Description = "Front Cover";              pic.Type = PictureType.FrontCover;              pic.Data = vector.Data;                if (Options.MainSettings.ChangeCoverSize && Core.Common.Picture.ImageFromData(pic.Data).Width > Options.MainSettings.MaxCoverWidth)              {                pic.Resize(Options.MainSettings.MaxCoverWidth);              }                track.Pictures.Add(pic);            }              // And also set the Year from the Release Date delivered by Amazon            // only if not present in Track            if (_album.Year != null)            {              string strYear = _album.Year;              if (strYear.Length > 4)                strYear = strYear.Substring(0' 4);                int year = 0;              try              {                year = Convert.ToInt32(strYear);              }              catch (Exception)              {                // ignored              }              if (year > 0 && track.Year == 0)                track.Year = year;            }              TracksGrid.MainForm.SetGalleryItem();          }        }
Magic Number,MPTagThat.Commands,CmdGetCoverArt,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\CmdGetCoverArt.cs,Execute,The following statement contains a magic number: if (_album != null)        {          if (!_savedCoverCash.ContainsKey(coverSearchString))          {            _savedCoverCash.Add(coverSearchString' _album);          }            // Only write a picture if we don't have a picture OR Overwrite Pictures is set);          if ((track.Pictures.Count == 0 || Options.MainSettings.OverwriteExistingCovers) && !Options.MainSettings.OnlySaveFolderThumb)          {            track.Pictures.Clear();              ByteVector vector = _album.AlbumImage;            if (vector != null)            {              var pic = new Core.Common.Picture();              pic.MimeType = "image/jpg";              pic.Description = "Front Cover";              pic.Type = PictureType.FrontCover;              pic.Data = vector.Data;                if (Options.MainSettings.ChangeCoverSize && Core.Common.Picture.ImageFromData(pic.Data).Width > Options.MainSettings.MaxCoverWidth)              {                pic.Resize(Options.MainSettings.MaxCoverWidth);              }                track.Pictures.Add(pic);            }              // And also set the Year from the Release Date delivered by Amazon            // only if not present in Track            if (_album.Year != null)            {              string strYear = _album.Year;              if (strYear.Length > 4)                strYear = strYear.Substring(0' 4);                int year = 0;              try              {                year = Convert.ToInt32(strYear);              }              catch (Exception)              {                // ignored              }              if (year > 0 && track.Year == 0)                track.Year = year;            }              TracksGrid.MainForm.SetGalleryItem();          }        }
Magic Number,MPTagThat.Commands,CmdGetLyrics,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\CmdGetLyrics.cs,PostProcess,The following statement contains a magic number: if (tracks.Count > 0)        {          try          {            LyricsSearch lyricssearch = new LyricsSearch(tracks);            lyricssearch.Owner = TracksGrid.MainForm;            lyricssearch.StartPosition = FormStartPosition.CenterParent;            if (lyricssearch.ShowDialog() == DialogResult.OK)            {              DataGridView lyricsResult = lyricssearch.GridView;              foreach (DataGridViewRow lyricsRow in lyricsResult.Rows)              {                if (lyricsRow.Cells[0].Value == DBNull.Value || lyricsRow.Cells[0].Value == null)                  continue;                  if ((bool)lyricsRow.Cells[0].Value != true)                  continue;                  foreach (DataGridViewRow row in TracksGrid.View.Rows)                {                  TrackData lyricsTrack = tracks[lyricsRow.Index];                  TrackData track = Options.Songlist[row.Index];                  if (lyricsTrack.FullFileName == track.FullFileName)                  {                    track.Lyrics = (string)lyricsRow.Cells[5].Value;                    TracksGrid.SetBackgroundColorChanged(row.Index);                    track.Changed = true;                    Options.Songlist[row.Index] = track;                    itemsChanged = true;                    break;                  }                }              }            }          }          catch (Exception ex)          {            Log.Error("Error in Lyricssearch: {0}"' ex.Message);          }        }
Magic Number,MPTagThat.Commands,CmdIdentifyFile,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\CmdIdentifyFile.cs,Execute,The following statement contains a magic number: using (MusicBrainzTrackInfo trackinfo = new MusicBrainzTrackInfo())        {          Util.SendProgress(string.Format("Identifying file {0}"' track.FileName));          Log.Debug("Identify: Processing file: {0}"' track.FullFileName);          List<MusicBrainzTrack> musicBrainzTracks = trackinfo.GetMusicBrainzTrack(track.FullFileName);            if (musicBrainzTracks == null)          {            Log.Debug("Identify: Couldn't identify file");            return false;          }            if (musicBrainzTracks.Count > 0)          {            MusicBrainzTrack musicBrainzTrack = null;            if (musicBrainzTracks.Count == 1 && musicBrainzTracks[0].Releases.Count == 1)            {              musicBrainzTrack = musicBrainzTracks[0];              // Have we got already this album              if (musicBrainzTrack.AlbumId == null || musicBrainzTrack.AlbumId != _musicBrainzAlbum.Id)              {                using (var albumInfo = new MusicBrainzAlbumInfo())                {                  _musicBrainzAlbum = albumInfo.GetMusicBrainzAlbumById(musicBrainzTrack.Releases[0].AlbumId);                }              }              musicBrainzTrack.AlbumId = _musicBrainzAlbum.Id;            }            else            {              // Skip the Album selection' if the album been selected already for a previous track              bool albumFound = false;              foreach (var mbtrack in musicBrainzTracks)              {                foreach (var mbRelease in mbtrack.Releases)                {                  if (mbRelease.AlbumId == _musicBrainzAlbum.Id)                  {                    albumFound = true;                    musicBrainzTrack = mbtrack;                    musicBrainzTrack.AlbumId = mbRelease.AlbumId;                    break;                  }                }              }                if (!albumFound)              {                var dlgAlbumResults = new MusicBrainzAlbumResults(musicBrainzTracks);                dlgAlbumResults.Owner = TracksGrid.MainForm;                dlgAlbumResults.StartPosition = FormStartPosition.CenterParent;                if (dlgAlbumResults.ShowDialog() == DialogResult.OK)                {                  var itemTag = dlgAlbumResults.SelectedListItem as Dictionary<string' MusicBrainzTrack>;                  if (itemTag != null)                    foreach (var albumId in itemTag.Keys)                    {                      itemTag.TryGetValue(albumId' out musicBrainzTrack);                      if (musicBrainzTrack != null) musicBrainzTrack.AlbumId = albumId;                    }                }                dlgAlbumResults.Dispose();              }            }              // We didn't get a track            if (musicBrainzTrack == null)            {              Log.Debug("Identify: No information returned from Musicbrainz");              return false;            }              // Are we still at the same album?            // if not' get the album' so that we have the release date            if (_musicBrainzAlbum.Id != musicBrainzTrack.AlbumId)            {              using (var albumInfo = new MusicBrainzAlbumInfo())              {                Application.DoEvents();                if (ProgressCancelled)                {                  return false;                }                _musicBrainzAlbum = albumInfo.GetMusicBrainzAlbumById(musicBrainzTrack.AlbumId);              }            }              track.Title = musicBrainzTrack.Title;            track.Artist = musicBrainzTrack.Artist;            track.Album = _musicBrainzAlbum.Title;            track.AlbumArtist = _musicBrainzAlbum.Artist;              // Get the Disic and Track# from the Album            foreach (var mbTrack in _musicBrainzAlbum.Tracks)            {              if (mbTrack.Id == musicBrainzTrack.Id)              {                track.TrackNumber = Convert.ToUInt32(mbTrack.Number);                track.TrackCount = Convert.ToUInt32(mbTrack.TrackCount);                track.DiscNumber = Convert.ToUInt32(mbTrack.DiscId);                track.DiscCount = Convert.ToUInt32(_musicBrainzAlbum.DiscCount);                break;              }            }              if (_musicBrainzAlbum.Year != null && _musicBrainzAlbum.Year.Length >= 4)              track.Year = Convert.ToInt32(_musicBrainzAlbum.Year.Substring(0' 4));              // Do we have a valid Amazon Album?            if (_musicBrainzAlbum.Amazon != null)            {              // Only write a picture if we don't have a picture OR Overwrite Pictures is set              if (track.Pictures.Count == 0 || Options.MainSettings.OverwriteExistingCovers)              {                var vector = _musicBrainzAlbum.Amazon.AlbumImage;                if (vector != null)                {                  var pic = new Core.Common.Picture();                  pic.MimeType = "image/jpg";                  pic.Description = "";                  pic.Type = PictureType.FrontCover;                  pic.Data = vector.Data;                  track.Pictures.Add(pic);                }              }            }              return true;          }        }
Magic Number,MPTagThat.Commands,CmdIdentifyFile,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\CmdIdentifyFile.cs,Execute,The following statement contains a magic number: using (MusicBrainzTrackInfo trackinfo = new MusicBrainzTrackInfo())        {          Util.SendProgress(string.Format("Identifying file {0}"' track.FileName));          Log.Debug("Identify: Processing file: {0}"' track.FullFileName);          List<MusicBrainzTrack> musicBrainzTracks = trackinfo.GetMusicBrainzTrack(track.FullFileName);            if (musicBrainzTracks == null)          {            Log.Debug("Identify: Couldn't identify file");            return false;          }            if (musicBrainzTracks.Count > 0)          {            MusicBrainzTrack musicBrainzTrack = null;            if (musicBrainzTracks.Count == 1 && musicBrainzTracks[0].Releases.Count == 1)            {              musicBrainzTrack = musicBrainzTracks[0];              // Have we got already this album              if (musicBrainzTrack.AlbumId == null || musicBrainzTrack.AlbumId != _musicBrainzAlbum.Id)              {                using (var albumInfo = new MusicBrainzAlbumInfo())                {                  _musicBrainzAlbum = albumInfo.GetMusicBrainzAlbumById(musicBrainzTrack.Releases[0].AlbumId);                }              }              musicBrainzTrack.AlbumId = _musicBrainzAlbum.Id;            }            else            {              // Skip the Album selection' if the album been selected already for a previous track              bool albumFound = false;              foreach (var mbtrack in musicBrainzTracks)              {                foreach (var mbRelease in mbtrack.Releases)                {                  if (mbRelease.AlbumId == _musicBrainzAlbum.Id)                  {                    albumFound = true;                    musicBrainzTrack = mbtrack;                    musicBrainzTrack.AlbumId = mbRelease.AlbumId;                    break;                  }                }              }                if (!albumFound)              {                var dlgAlbumResults = new MusicBrainzAlbumResults(musicBrainzTracks);                dlgAlbumResults.Owner = TracksGrid.MainForm;                dlgAlbumResults.StartPosition = FormStartPosition.CenterParent;                if (dlgAlbumResults.ShowDialog() == DialogResult.OK)                {                  var itemTag = dlgAlbumResults.SelectedListItem as Dictionary<string' MusicBrainzTrack>;                  if (itemTag != null)                    foreach (var albumId in itemTag.Keys)                    {                      itemTag.TryGetValue(albumId' out musicBrainzTrack);                      if (musicBrainzTrack != null) musicBrainzTrack.AlbumId = albumId;                    }                }                dlgAlbumResults.Dispose();              }            }              // We didn't get a track            if (musicBrainzTrack == null)            {              Log.Debug("Identify: No information returned from Musicbrainz");              return false;            }              // Are we still at the same album?            // if not' get the album' so that we have the release date            if (_musicBrainzAlbum.Id != musicBrainzTrack.AlbumId)            {              using (var albumInfo = new MusicBrainzAlbumInfo())              {                Application.DoEvents();                if (ProgressCancelled)                {                  return false;                }                _musicBrainzAlbum = albumInfo.GetMusicBrainzAlbumById(musicBrainzTrack.AlbumId);              }            }              track.Title = musicBrainzTrack.Title;            track.Artist = musicBrainzTrack.Artist;            track.Album = _musicBrainzAlbum.Title;            track.AlbumArtist = _musicBrainzAlbum.Artist;              // Get the Disic and Track# from the Album            foreach (var mbTrack in _musicBrainzAlbum.Tracks)            {              if (mbTrack.Id == musicBrainzTrack.Id)              {                track.TrackNumber = Convert.ToUInt32(mbTrack.Number);                track.TrackCount = Convert.ToUInt32(mbTrack.TrackCount);                track.DiscNumber = Convert.ToUInt32(mbTrack.DiscId);                track.DiscCount = Convert.ToUInt32(_musicBrainzAlbum.DiscCount);                break;              }            }              if (_musicBrainzAlbum.Year != null && _musicBrainzAlbum.Year.Length >= 4)              track.Year = Convert.ToInt32(_musicBrainzAlbum.Year.Substring(0' 4));              // Do we have a valid Amazon Album?            if (_musicBrainzAlbum.Amazon != null)            {              // Only write a picture if we don't have a picture OR Overwrite Pictures is set              if (track.Pictures.Count == 0 || Options.MainSettings.OverwriteExistingCovers)              {                var vector = _musicBrainzAlbum.Amazon.AlbumImage;                if (vector != null)                {                  var pic = new Core.Common.Picture();                  pic.MimeType = "image/jpg";                  pic.Description = "";                  pic.Type = PictureType.FrontCover;                  pic.Data = vector.Data;                  track.Pictures.Add(pic);                }              }            }              return true;          }        }
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,FillResults,The following statement contains a magic number: foreach (MusicBrainzTrack track in tracks)        {          foreach (MusicBrainzRelease release in track.Releases)          {            var itemTag = new Dictionary<string' MusicBrainzTrack> {{release.AlbumId' track}};            var item = new ListViewItem(release.Album) {Tag = itemTag};            item.SubItems.Add(release.Country);            item.SubItems.Add(release.Year.ToString());            string minute = (track.Duration / 60).ToString().PadLeft(2' '0');            string secs = ((track.Duration) % 60).ToString().PadLeft(2' '0');            item.SubItems.Add(string.Format("{0}:{1}"' minute' secs));            lvSearchResults.Items.Add(item);                    }        }
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,FillResults,The following statement contains a magic number: foreach (MusicBrainzTrack track in tracks)        {          foreach (MusicBrainzRelease release in track.Releases)          {            var itemTag = new Dictionary<string' MusicBrainzTrack> {{release.AlbumId' track}};            var item = new ListViewItem(release.Album) {Tag = itemTag};            item.SubItems.Add(release.Country);            item.SubItems.Add(release.Year.ToString());            string minute = (track.Duration / 60).ToString().PadLeft(2' '0');            string secs = ((track.Duration) % 60).ToString().PadLeft(2' '0');            item.SubItems.Add(string.Format("{0}:{1}"' minute' secs));            lvSearchResults.Items.Add(item);                    }        }
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,FillResults,The following statement contains a magic number: foreach (MusicBrainzTrack track in tracks)        {          foreach (MusicBrainzRelease release in track.Releases)          {            var itemTag = new Dictionary<string' MusicBrainzTrack> {{release.AlbumId' track}};            var item = new ListViewItem(release.Album) {Tag = itemTag};            item.SubItems.Add(release.Country);            item.SubItems.Add(release.Year.ToString());            string minute = (track.Duration / 60).ToString().PadLeft(2' '0');            string secs = ((track.Duration) % 60).ToString().PadLeft(2' '0');            item.SubItems.Add(string.Format("{0}:{1}"' minute' secs));            lvSearchResults.Items.Add(item);                    }        }
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,FillResults,The following statement contains a magic number: foreach (MusicBrainzTrack track in tracks)        {          foreach (MusicBrainzRelease release in track.Releases)          {            var itemTag = new Dictionary<string' MusicBrainzTrack> {{release.AlbumId' track}};            var item = new ListViewItem(release.Album) {Tag = itemTag};            item.SubItems.Add(release.Country);            item.SubItems.Add(release.Year.ToString());            string minute = (track.Duration / 60).ToString().PadLeft(2' '0');            string secs = ((track.Duration) % 60).ToString().PadLeft(2' '0');            item.SubItems.Add(string.Format("{0}:{1}"' minute' secs));            lvSearchResults.Items.Add(item);                    }        }
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The following statement contains a magic number: this.lvSearchResults.Location = new System.Drawing.Point(17' 27);
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The following statement contains a magic number: this.lvSearchResults.Location = new System.Drawing.Point(17' 27);
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The following statement contains a magic number: this.lvSearchResults.Size = new System.Drawing.Size(551' 328);
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The following statement contains a magic number: this.lvSearchResults.Size = new System.Drawing.Size(551' 328);
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The following statement contains a magic number: this.lvSearchResults.TabIndex = 10;
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The following statement contains a magic number: this.chAlbum.Width = 330;
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The following statement contains a magic number: this.chDuration.Width = 65;
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxMusicBrainzMultipleAlbums.Location = new System.Drawing.Point(21' 121);
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxMusicBrainzMultipleAlbums.Location = new System.Drawing.Point(21' 121);
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxMusicBrainzMultipleAlbums.Size = new System.Drawing.Size(587' 372);
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxMusicBrainzMultipleAlbums.Size = new System.Drawing.Size(587' 372);
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxMusicBrainzMultipleAlbums.TabIndex = 39;
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The following statement contains a magic number: this.lbTitle.Location = new System.Drawing.Point(15' 56);
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The following statement contains a magic number: this.lbTitle.Location = new System.Drawing.Point(15' 56);
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The following statement contains a magic number: this.lbTitle.Size = new System.Drawing.Size(30' 13);
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The following statement contains a magic number: this.lbTitle.Size = new System.Drawing.Size(30' 13);
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The following statement contains a magic number: this.lbTitle.TabIndex = 2;
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The following statement contains a magic number: this.btUpdate.Location = new System.Drawing.Point(402' 510);
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The following statement contains a magic number: this.btUpdate.Location = new System.Drawing.Point(402' 510);
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The following statement contains a magic number: this.btUpdate.Size = new System.Drawing.Size(100' 23);
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The following statement contains a magic number: this.btUpdate.Size = new System.Drawing.Size(100' 23);
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The following statement contains a magic number: this.btUpdate.TabIndex = 43;
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The following statement contains a magic number: this.btClose.Location = new System.Drawing.Point(508' 510);
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The following statement contains a magic number: this.btClose.Location = new System.Drawing.Point(508' 510);
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The following statement contains a magic number: this.btClose.Size = new System.Drawing.Size(100' 23);
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The following statement contains a magic number: this.btClose.Size = new System.Drawing.Size(100' 23);
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The following statement contains a magic number: this.btClose.TabIndex = 44;
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The following statement contains a magic number: this.lbArtist.Location = new System.Drawing.Point(15' 29);
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The following statement contains a magic number: this.lbArtist.Location = new System.Drawing.Point(15' 29);
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The following statement contains a magic number: this.lbArtist.Size = new System.Drawing.Size(33' 13);
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The following statement contains a magic number: this.lbArtist.Size = new System.Drawing.Size(33' 13);
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The following statement contains a magic number: this.gbSearchInfo.Location = new System.Drawing.Point(21' 21);
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The following statement contains a magic number: this.gbSearchInfo.Location = new System.Drawing.Point(21' 21);
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The following statement contains a magic number: this.gbSearchInfo.Size = new System.Drawing.Size(587' 85);
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The following statement contains a magic number: this.gbSearchInfo.Size = new System.Drawing.Size(587' 85);
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The following statement contains a magic number: this.gbSearchInfo.TabIndex = 38;
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The following statement contains a magic number: this.tbTitle.Location = new System.Drawing.Point(73' 53);
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The following statement contains a magic number: this.tbTitle.Location = new System.Drawing.Point(73' 53);
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The following statement contains a magic number: this.tbTitle.Size = new System.Drawing.Size(495' 20);
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The following statement contains a magic number: this.tbTitle.Size = new System.Drawing.Size(495' 20);
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The following statement contains a magic number: this.tbTitle.TabIndex = 2;
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The following statement contains a magic number: this.tbArtist.Location = new System.Drawing.Point(73' 26);
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The following statement contains a magic number: this.tbArtist.Location = new System.Drawing.Point(73' 26);
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The following statement contains a magic number: this.tbArtist.Size = new System.Drawing.Size(495' 20);
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The following statement contains a magic number: this.tbArtist.Size = new System.Drawing.Size(495' 20);
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The following statement contains a magic number: this.chYear.Width = 63;
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The following statement contains a magic number: this.chCountry.Width = 88;
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(631' 549);
Magic Number,MPTagThat.Commands,MusicBrainzAlbumResults,C:\repos\MediaPortal_MPTagThat\MPTagThat\Commands\MusicBrainzAlbumResults.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(631' 549);
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,CoverSearch,The following statement contains a magic number: _imagelist.ImageSize = new Size(128' 128);
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,CoverSearch,The following statement contains a magic number: _imagelist.ImageSize = new Size(128' 128);
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.lvSearchResults.Location = new System.Drawing.Point(15' 117);
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.lvSearchResults.Location = new System.Drawing.Point(15' 117);
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.lvSearchResults.Size = new System.Drawing.Size(575' 414);
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.lvSearchResults.Size = new System.Drawing.Size(575' 414);
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.lvSearchResults.TabIndex = 4;
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.chAlbum.Width = 520;
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxAmazonMultipleAlbums.Location = new System.Drawing.Point(12' 12);
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxAmazonMultipleAlbums.Location = new System.Drawing.Point(12' 12);
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxAmazonMultipleAlbums.Size = new System.Drawing.Size(607' 547);
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxAmazonMultipleAlbums.Size = new System.Drawing.Size(607' 547);
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxAmazonMultipleAlbums.TabIndex = 39;
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.lbFileDetails.Location = new System.Drawing.Point(17' 32);
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.lbFileDetails.Location = new System.Drawing.Point(17' 32);
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.lbFileDetails.Size = new System.Drawing.Size(53' 13);
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.lbFileDetails.Size = new System.Drawing.Size(53' 13);
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.lbFileDetails.TabIndex = 15;
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.tbAlbum.Location = new System.Drawing.Point(118' 88);
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.tbAlbum.Location = new System.Drawing.Point(118' 88);
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.tbAlbum.Size = new System.Drawing.Size(348' 20);
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.tbAlbum.Size = new System.Drawing.Size(348' 20);
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.tbAlbum.TabIndex = 2;
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.btSearch.Location = new System.Drawing.Point(490' 59);
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.btSearch.Location = new System.Drawing.Point(490' 59);
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.btSearch.Size = new System.Drawing.Size(100' 23);
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.btSearch.Size = new System.Drawing.Size(100' 23);
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.btSearch.TabIndex = 3;
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.tbArtist.Location = new System.Drawing.Point(118' 62);
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.tbArtist.Location = new System.Drawing.Point(118' 62);
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.tbArtist.Size = new System.Drawing.Size(348' 20);
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.tbArtist.Size = new System.Drawing.Size(348' 20);
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.lblAlbum.Location = new System.Drawing.Point(17' 87);
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.lblAlbum.Location = new System.Drawing.Point(17' 87);
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.lblAlbum.Size = new System.Drawing.Size(49' 16);
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.lblAlbum.Size = new System.Drawing.Size(49' 16);
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.lblAlbum.TabIndex = 12;
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.lblArtist.Location = new System.Drawing.Point(17' 66);
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.lblArtist.Location = new System.Drawing.Point(17' 66);
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.lblArtist.Size = new System.Drawing.Size(40' 16);
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.lblArtist.Size = new System.Drawing.Size(40' 16);
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.lblArtist.TabIndex = 11;
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.btUpdate.Location = new System.Drawing.Point(273' 572);
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.btUpdate.Location = new System.Drawing.Point(273' 572);
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.btUpdate.Size = new System.Drawing.Size(100' 23);
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.btUpdate.Size = new System.Drawing.Size(100' 23);
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.btUpdate.TabIndex = 5;
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.btClose.Location = new System.Drawing.Point(396' 572);
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.btClose.Location = new System.Drawing.Point(396' 572);
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.btClose.Size = new System.Drawing.Size(100' 23);
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.btClose.Size = new System.Drawing.Size(100' 23);
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.btClose.TabIndex = 6;
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.btCancelAll.Location = new System.Drawing.Point(519' 572);
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.btCancelAll.Location = new System.Drawing.Point(519' 572);
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.btCancelAll.Size = new System.Drawing.Size(100' 23);
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.btCancelAll.Size = new System.Drawing.Size(100' 23);
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.btCancelAll.TabIndex = 40;
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(631' 607);
Magic Number,MPTagThat.Dialogues,CoverSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CoverSearch.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(631' 607);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.lbAppTitle.Location = new System.Drawing.Point(63' 30);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.lbAppTitle.Location = new System.Drawing.Point(63' 30);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.lbAppTitle.Size = new System.Drawing.Size(243' 16);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.lbAppTitle.Size = new System.Drawing.Size(243' 16);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.btOk.Location = new System.Drawing.Point(212' 344);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.btOk.Location = new System.Drawing.Point(212' 344);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.btOk.Size = new System.Drawing.Size(75' 23);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.btOk.Size = new System.Drawing.Size(75' 23);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.btOk.TabIndex = 2;
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.lbVersion.Location = new System.Drawing.Point(15' 65);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.lbVersion.Location = new System.Drawing.Point(15' 65);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.lbVersion.Size = new System.Drawing.Size(45' 13);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.lbVersion.Size = new System.Drawing.Size(45' 13);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.lbVersion.TabIndex = 3;
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.lbBuildDate.Location = new System.Drawing.Point(15' 91);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.lbBuildDate.Location = new System.Drawing.Point(15' 91);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.lbBuildDate.Size = new System.Drawing.Size(59' 13);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.lbBuildDate.Size = new System.Drawing.Size(59' 13);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.lbBuildDate.TabIndex = 4;
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.lbWikiLink.Location = new System.Drawing.Point(95' 279);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.lbWikiLink.Location = new System.Drawing.Point(95' 279);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.lbWikiLink.Size = new System.Drawing.Size(356' 13);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.lbWikiLink.Size = new System.Drawing.Size(356' 13);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.lbWikiLink.TabIndex = 5;
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.lbVersionDetail.Location = new System.Drawing.Point(142' 64);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.lbVersionDetail.Location = new System.Drawing.Point(142' 64);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.lbVersionDetail.Size = new System.Drawing.Size(38' 13);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.lbVersionDetail.Size = new System.Drawing.Size(38' 13);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.lbVersionDetail.TabIndex = 6;
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.lbDate.Location = new System.Drawing.Point(142' 91);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.lbDate.Location = new System.Drawing.Point(142' 91);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.lbDate.Size = new System.Drawing.Size(61' 13);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.lbDate.Size = new System.Drawing.Size(61' 13);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.lbDate.TabIndex = 7;
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.pictureBoxAbout.Location = new System.Drawing.Point(341' 30);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.pictureBoxAbout.Location = new System.Drawing.Point(341' 30);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.pictureBoxAbout.Size = new System.Drawing.Size(163' 162);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.pictureBoxAbout.Size = new System.Drawing.Size(163' 162);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.pictureBoxAbout.TabIndex = 8;
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.lbLinkForum.Location = new System.Drawing.Point(95' 308);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.lbLinkForum.Location = new System.Drawing.Point(95' 308);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.lbLinkForum.Size = new System.Drawing.Size(279' 13);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.lbLinkForum.Size = new System.Drawing.Size(279' 13);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.lbLinkForum.TabIndex = 9;
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.tbDescription.Location = new System.Drawing.Point(15' 221);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.tbDescription.Location = new System.Drawing.Point(15' 221);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.tbDescription.Size = new System.Drawing.Size(480' 55);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.tbDescription.Size = new System.Drawing.Size(480' 55);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.tbDescription.TabIndex = 10;
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.lbContributors.Location = new System.Drawing.Point(15' 128);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.lbContributors.Location = new System.Drawing.Point(15' 128);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.lbContributors.Size = new System.Drawing.Size(59' 13);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.lbContributors.Size = new System.Drawing.Size(59' 13);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.lbContributors.TabIndex = 11;
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.tbContributors.Location = new System.Drawing.Point(15' 145);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.tbContributors.Location = new System.Drawing.Point(15' 145);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.tbContributors.Size = new System.Drawing.Size(323' 55);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.tbContributors.Size = new System.Drawing.Size(323' 55);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.tbContributors.TabIndex = 12;
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.lbWiki.Location = new System.Drawing.Point(15' 279);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.lbWiki.Location = new System.Drawing.Point(15' 279);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.lbWiki.Size = new System.Drawing.Size(59' 23);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.lbWiki.Size = new System.Drawing.Size(59' 23);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.lbWiki.TabIndex = 13;
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.lbForum.Location = new System.Drawing.Point(15' 308);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.lbForum.Location = new System.Drawing.Point(15' 308);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.lbForum.Size = new System.Drawing.Size(59' 23);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.lbForum.Size = new System.Drawing.Size(59' 23);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.lbForum.TabIndex = 14;
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(528' 394);
Magic Number,MPTagThat.Dialogues,About,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\About.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(528' 394);
Magic Number,MPTagThat.Dialogues,ColumnSelect,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\ColumnSelect.cs,OnLoad,The following statement contains a magic number: foreach (DataGridViewColumn column in grid.View.Columns)        {          i++;          // Don't allow FileName and Status to be selected          if (i < 2)            continue;          // Don't add the Dummmy Column          if (i == grid.View.Columns.Count - 1)            break;            ListViewItem lvItem = new ListViewItem();          lvItem.Checked = column.Visible;          lvItem.Text = column.HeaderText;          lvColumns.Items.Add(lvItem);        }
Magic Number,MPTagThat.Dialogues,ColumnSelect,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\ColumnSelect.cs,btOk_Click,The following statement contains a magic number: for (int i = 0; i < lvColumns.Items.Count; i++)        {          if (lvColumns.Items[i].Checked)            grid.View.Columns[i + 2].Visible = true;          else            grid.View.Columns[i + 2].Visible = false;        }
Magic Number,MPTagThat.Dialogues,ColumnSelect,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\ColumnSelect.cs,btOk_Click,The following statement contains a magic number: for (int i = 0; i < lvColumns.Items.Count; i++)        {          if (lvColumns.Items[i].Checked)            grid.View.Columns[i + 2].Visible = true;          else            grid.View.Columns[i + 2].Visible = false;        }
Magic Number,MPTagThat.Dialogues,ColumnSelect,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\ColumnSelect.cs,InitializeComponent,The following statement contains a magic number: this.lblHeading.Location = new System.Drawing.Point(12' 18);
Magic Number,MPTagThat.Dialogues,ColumnSelect,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\ColumnSelect.cs,InitializeComponent,The following statement contains a magic number: this.lblHeading.Location = new System.Drawing.Point(12' 18);
Magic Number,MPTagThat.Dialogues,ColumnSelect,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\ColumnSelect.cs,InitializeComponent,The following statement contains a magic number: this.lblHeading.Size = new System.Drawing.Size(146' 13);
Magic Number,MPTagThat.Dialogues,ColumnSelect,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\ColumnSelect.cs,InitializeComponent,The following statement contains a magic number: this.lblHeading.Size = new System.Drawing.Size(146' 13);
Magic Number,MPTagThat.Dialogues,ColumnSelect,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\ColumnSelect.cs,InitializeComponent,The following statement contains a magic number: this.btOk.Location = new System.Drawing.Point(269' 590);
Magic Number,MPTagThat.Dialogues,ColumnSelect,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\ColumnSelect.cs,InitializeComponent,The following statement contains a magic number: this.btOk.Location = new System.Drawing.Point(269' 590);
Magic Number,MPTagThat.Dialogues,ColumnSelect,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\ColumnSelect.cs,InitializeComponent,The following statement contains a magic number: this.btOk.Size = new System.Drawing.Size(75' 23);
Magic Number,MPTagThat.Dialogues,ColumnSelect,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\ColumnSelect.cs,InitializeComponent,The following statement contains a magic number: this.btOk.Size = new System.Drawing.Size(75' 23);
Magic Number,MPTagThat.Dialogues,ColumnSelect,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\ColumnSelect.cs,InitializeComponent,The following statement contains a magic number: this.btOk.TabIndex = 2;
Magic Number,MPTagThat.Dialogues,ColumnSelect,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\ColumnSelect.cs,InitializeComponent,The following statement contains a magic number: this.btCancel.Location = new System.Drawing.Point(350' 590);
Magic Number,MPTagThat.Dialogues,ColumnSelect,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\ColumnSelect.cs,InitializeComponent,The following statement contains a magic number: this.btCancel.Location = new System.Drawing.Point(350' 590);
Magic Number,MPTagThat.Dialogues,ColumnSelect,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\ColumnSelect.cs,InitializeComponent,The following statement contains a magic number: this.btCancel.Size = new System.Drawing.Size(75' 23);
Magic Number,MPTagThat.Dialogues,ColumnSelect,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\ColumnSelect.cs,InitializeComponent,The following statement contains a magic number: this.btCancel.Size = new System.Drawing.Size(75' 23);
Magic Number,MPTagThat.Dialogues,ColumnSelect,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\ColumnSelect.cs,InitializeComponent,The following statement contains a magic number: this.btCancel.TabIndex = 3;
Magic Number,MPTagThat.Dialogues,ColumnSelect,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\ColumnSelect.cs,InitializeComponent,The following statement contains a magic number: this.lvColumns.Location = new System.Drawing.Point(15' 43);
Magic Number,MPTagThat.Dialogues,ColumnSelect,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\ColumnSelect.cs,InitializeComponent,The following statement contains a magic number: this.lvColumns.Location = new System.Drawing.Point(15' 43);
Magic Number,MPTagThat.Dialogues,ColumnSelect,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\ColumnSelect.cs,InitializeComponent,The following statement contains a magic number: this.lvColumns.Size = new System.Drawing.Size(410' 541);
Magic Number,MPTagThat.Dialogues,ColumnSelect,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\ColumnSelect.cs,InitializeComponent,The following statement contains a magic number: this.lvColumns.Size = new System.Drawing.Size(410' 541);
Magic Number,MPTagThat.Dialogues,ColumnSelect,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\ColumnSelect.cs,InitializeComponent,The following statement contains a magic number: this.lvColumns.TabIndex = 4;
Magic Number,MPTagThat.Dialogues,ColumnSelect,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\ColumnSelect.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(437' 625);
Magic Number,MPTagThat.Dialogues,ColumnSelect,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\ColumnSelect.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(437' 625);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.tabControlFindReplace.Location = new System.Drawing.Point(11' 32);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.tabControlFindReplace.Location = new System.Drawing.Point(11' 32);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.tabControlFindReplace.Size = new System.Drawing.Size(466' 273);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.tabControlFindReplace.Size = new System.Drawing.Size(466' 273);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.tabPageFind.Padding = new System.Windows.Forms.Padding(3);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.tabPageFind.Size = new System.Drawing.Size(464' 252);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.tabPageFind.Size = new System.Drawing.Size(464' 252);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.tabPageReplace.Padding = new System.Windows.Forms.Padding(3);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.tabPageReplace.Size = new System.Drawing.Size(464' 252);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.tabPageReplace.Size = new System.Drawing.Size(464' 252);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.buttonReplaceAll.Location = new System.Drawing.Point(346' 94);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.buttonReplaceAll.Location = new System.Drawing.Point(346' 94);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.buttonReplaceAll.Size = new System.Drawing.Size(108' 23);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.buttonReplaceAll.Size = new System.Drawing.Size(108' 23);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.buttonReplaceAll.TabIndex = 26;
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.buttonReplace.Location = new System.Drawing.Point(346' 63);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.buttonReplace.Location = new System.Drawing.Point(346' 63);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.buttonReplace.Size = new System.Drawing.Size(108' 23);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.buttonReplace.Size = new System.Drawing.Size(108' 23);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.buttonReplace.TabIndex = 25;
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.cbReplace.Location = new System.Drawing.Point(132' 54);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.cbReplace.Location = new System.Drawing.Point(132' 54);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.cbReplace.Size = new System.Drawing.Size(195' 21);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.cbReplace.Size = new System.Drawing.Size(195' 21);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.lblReplaceWith.Location = new System.Drawing.Point(39' 57);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.lblReplaceWith.Location = new System.Drawing.Point(39' 57);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.lblReplaceWith.Size = new System.Drawing.Size(72' 13);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.lblReplaceWith.Size = new System.Drawing.Size(72' 13);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.buttonClose.Location = new System.Drawing.Point(358' 176);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.buttonClose.Location = new System.Drawing.Point(358' 176);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.buttonClose.Size = new System.Drawing.Size(108' 23);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.buttonClose.Size = new System.Drawing.Size(108' 23);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.buttonClose.TabIndex = 2;
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.lblFindWhat.Location = new System.Drawing.Point(68' 84);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.lblFindWhat.Location = new System.Drawing.Point(68' 84);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.lblFindWhat.Size = new System.Drawing.Size(56' 13);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.lblFindWhat.Size = new System.Drawing.Size(56' 13);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.lblFindWhat.TabIndex = 5;
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.cbFind.Location = new System.Drawing.Point(144' 79);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.cbFind.Location = new System.Drawing.Point(144' 79);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.cbFind.Size = new System.Drawing.Size(195' 21);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.cbFind.Size = new System.Drawing.Size(195' 21);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxMatching.Location = new System.Drawing.Point(25' 200);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxMatching.Location = new System.Drawing.Point(25' 200);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxMatching.Size = new System.Drawing.Size(220' 81);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxMatching.Size = new System.Drawing.Size(220' 81);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxMatching.TabIndex = 2;
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxMatchWholeWords.Location = new System.Drawing.Point(10' 46);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxMatchWholeWords.Location = new System.Drawing.Point(10' 46);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxMatchWholeWords.Size = new System.Drawing.Size(140' 26);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxMatchWholeWords.Size = new System.Drawing.Size(140' 26);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxMatchCase.Location = new System.Drawing.Point(10' 23);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxMatchCase.Location = new System.Drawing.Point(10' 23);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxMatchCase.Size = new System.Drawing.Size(83' 26);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxMatchCase.Size = new System.Drawing.Size(83' 26);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.labelHeader.Location = new System.Drawing.Point(7' 9);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.labelHeader.Location = new System.Drawing.Point(7' 9);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.labelHeader.Size = new System.Drawing.Size(62' 20);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.labelHeader.Size = new System.Drawing.Size(62' 20);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.labelHeader.TabIndex = 23;
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.buttonFindNext.Location = new System.Drawing.Point(358' 82);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.buttonFindNext.Location = new System.Drawing.Point(358' 82);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.buttonFindNext.Size = new System.Drawing.Size(108' 23);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.buttonFindNext.Size = new System.Drawing.Size(108' 23);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.buttonFindNext.TabIndex = 24;
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(489' 318);
Magic Number,MPTagThat.Dialogues,FindReplace,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FindReplace.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(489' 318);
Magic Number,MPTagThat.Dialogues,Preview,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\Preview.cs,Preview,The following statement contains a magic number: AddGridColumn(0' "FileName"' localisation.ToString("column_header"' "FileName")' 250);
Magic Number,MPTagThat.Dialogues,Preview,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\Preview.cs,AddRemoveColumn,The following statement contains a magic number: switch (parm)        {          case "<A>":            if (column.Name != "Artist")            {              RemoveGridColumn(position);              AddGridColumn(position' "Artist"' localisation.ToString("column_header"' "Artist")' 150);            }            break;            case "<T>":            if (column.Name != "Title")            {              RemoveGridColumn(position);              AddGridColumn(position' "Title"' localisation.ToString("column_header"' "Title")' 150);            }            break;            case "<B>":            if (column.Name != "Album")            {              RemoveGridColumn(position);              AddGridColumn(position' "Album"' localisation.ToString("column_header"' "Album")' 150);            }            break;            case "<Y>":            if (column.Name != "Track")            {              RemoveGridColumn(position);              AddGridColumn(position' "Year"' localisation.ToString("column_header"' "Year")' 40);            }            break;            case "<K>":            if (column.Name != "Track")            {              RemoveGridColumn(position);              AddGridColumn(position' "Track"' localisation.ToString("column_header"' "Track")' 40);            }            break;            case "<k>":            if (column.Name != "NumTrack")            {              RemoveGridColumn(position);              AddGridColumn(position' "NumTrack"' localisation.ToString("column_header"' "NumTracks")' 80);            }            break;            case "<D>":            if (column.Name != "Disc")            {              RemoveGridColumn(position);              AddGridColumn(position' "Disc"' localisation.ToString("column_header"' "Disc")' 40);            }            break;            case "<d>":            if (column.Name != "NumDisc")            {              RemoveGridColumn(position);              AddGridColumn(position' "NumDisc"' localisation.ToString("column_header"' "NumDiscs")' 80);            }            break;            case "<G>":            if (column.Name != "Genre")            {              RemoveGridColumn(position);              AddGridColumn(position' "Genre"' localisation.ToString("column_header"' "Genre")' 100);            }            break;            case "<O>":            if (column.Name != "AlbumArtist")            {              RemoveGridColumn(position);              AddGridColumn(position' "AlbumArtist"' localisation.ToString("column_header"' "AlbumArtist")' 150);            }            break;            case "<C>":            if (column.Name != "Comment")            {              RemoveGridColumn(position);              AddGridColumn(position' "Comment"' localisation.ToString("column_header"' "Comment")' 150);            }            break;            case "<N>":            if (column.Name != "Conductor")            {              RemoveGridColumn(position);              AddGridColumn(position' "Conductor"' localisation.ToString("column_header"' "Conductor")' 150);            }            break;            case "<R>":            if (column.Name != "Composer")            {              RemoveGridColumn(position);              AddGridColumn(position' "Composer"' localisation.ToString("column_header"' "Composer")' 150);            }            break;            case "<U>":            if (column.Name != "Grouping")            {              RemoveGridColumn(position);              AddGridColumn(position' "Grouping"' localisation.ToString("column_header"' "Grouping")' 150);            }            break;            case "<S>":            if (column.Name != "Subtitle")            {              RemoveGridColumn(position);              AddGridColumn(position' "Subtitle"' localisation.ToString("column_header"' "Subtitle")' 150);            }            break;            case "<M>":            if (column.Name != "Interpreter")            {              RemoveGridColumn(position);              AddGridColumn(position' "Interpreter"' localisation.ToString("column_header"' "Interpreter")' 150);            }            break;            case "<E>":            if (column.Name != "BPM")            {              RemoveGridColumn(position);              AddGridColumn(position' "BPM"' localisation.ToString("column_header"' "BPM")' 50);            }            break;            case "<X>":            // ignore it            break;        }
Magic Number,MPTagThat.Dialogues,Preview,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\Preview.cs,AddRemoveColumn,The following statement contains a magic number: switch (parm)        {          case "<A>":            if (column.Name != "Artist")            {              RemoveGridColumn(position);              AddGridColumn(position' "Artist"' localisation.ToString("column_header"' "Artist")' 150);            }            break;            case "<T>":            if (column.Name != "Title")            {              RemoveGridColumn(position);              AddGridColumn(position' "Title"' localisation.ToString("column_header"' "Title")' 150);            }            break;            case "<B>":            if (column.Name != "Album")            {              RemoveGridColumn(position);              AddGridColumn(position' "Album"' localisation.ToString("column_header"' "Album")' 150);            }            break;            case "<Y>":            if (column.Name != "Track")            {              RemoveGridColumn(position);              AddGridColumn(position' "Year"' localisation.ToString("column_header"' "Year")' 40);            }            break;            case "<K>":            if (column.Name != "Track")            {              RemoveGridColumn(position);              AddGridColumn(position' "Track"' localisation.ToString("column_header"' "Track")' 40);            }            break;            case "<k>":            if (column.Name != "NumTrack")            {              RemoveGridColumn(position);              AddGridColumn(position' "NumTrack"' localisation.ToString("column_header"' "NumTracks")' 80);            }            break;            case "<D>":            if (column.Name != "Disc")            {              RemoveGridColumn(position);              AddGridColumn(position' "Disc"' localisation.ToString("column_header"' "Disc")' 40);            }            break;            case "<d>":            if (column.Name != "NumDisc")            {              RemoveGridColumn(position);              AddGridColumn(position' "NumDisc"' localisation.ToString("column_header"' "NumDiscs")' 80);            }            break;            case "<G>":            if (column.Name != "Genre")            {              RemoveGridColumn(position);              AddGridColumn(position' "Genre"' localisation.ToString("column_header"' "Genre")' 100);            }            break;            case "<O>":            if (column.Name != "AlbumArtist")            {              RemoveGridColumn(position);              AddGridColumn(position' "AlbumArtist"' localisation.ToString("column_header"' "AlbumArtist")' 150);            }            break;            case "<C>":            if (column.Name != "Comment")            {              RemoveGridColumn(position);              AddGridColumn(position' "Comment"' localisation.ToString("column_header"' "Comment")' 150);            }            break;            case "<N>":            if (column.Name != "Conductor")            {              RemoveGridColumn(position);              AddGridColumn(position' "Conductor"' localisation.ToString("column_header"' "Conductor")' 150);            }            break;            case "<R>":            if (column.Name != "Composer")            {              RemoveGridColumn(position);              AddGridColumn(position' "Composer"' localisation.ToString("column_header"' "Composer")' 150);            }            break;            case "<U>":            if (column.Name != "Grouping")            {              RemoveGridColumn(position);              AddGridColumn(position' "Grouping"' localisation.ToString("column_header"' "Grouping")' 150);            }            break;            case "<S>":            if (column.Name != "Subtitle")            {              RemoveGridColumn(position);              AddGridColumn(position' "Subtitle"' localisation.ToString("column_header"' "Subtitle")' 150);            }            break;            case "<M>":            if (column.Name != "Interpreter")            {              RemoveGridColumn(position);              AddGridColumn(position' "Interpreter"' localisation.ToString("column_header"' "Interpreter")' 150);            }            break;            case "<E>":            if (column.Name != "BPM")            {              RemoveGridColumn(position);              AddGridColumn(position' "BPM"' localisation.ToString("column_header"' "BPM")' 50);            }            break;            case "<X>":            // ignore it            break;        }
Magic Number,MPTagThat.Dialogues,Preview,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\Preview.cs,AddRemoveColumn,The following statement contains a magic number: switch (parm)        {          case "<A>":            if (column.Name != "Artist")            {              RemoveGridColumn(position);              AddGridColumn(position' "Artist"' localisation.ToString("column_header"' "Artist")' 150);            }            break;            case "<T>":            if (column.Name != "Title")            {              RemoveGridColumn(position);              AddGridColumn(position' "Title"' localisation.ToString("column_header"' "Title")' 150);            }            break;            case "<B>":            if (column.Name != "Album")            {              RemoveGridColumn(position);              AddGridColumn(position' "Album"' localisation.ToString("column_header"' "Album")' 150);            }            break;            case "<Y>":            if (column.Name != "Track")            {              RemoveGridColumn(position);              AddGridColumn(position' "Year"' localisation.ToString("column_header"' "Year")' 40);            }            break;            case "<K>":            if (column.Name != "Track")            {              RemoveGridColumn(position);              AddGridColumn(position' "Track"' localisation.ToString("column_header"' "Track")' 40);            }            break;            case "<k>":            if (column.Name != "NumTrack")            {              RemoveGridColumn(position);              AddGridColumn(position' "NumTrack"' localisation.ToString("column_header"' "NumTracks")' 80);            }            break;            case "<D>":            if (column.Name != "Disc")            {              RemoveGridColumn(position);              AddGridColumn(position' "Disc"' localisation.ToString("column_header"' "Disc")' 40);            }            break;            case "<d>":            if (column.Name != "NumDisc")            {              RemoveGridColumn(position);              AddGridColumn(position' "NumDisc"' localisation.ToString("column_header"' "NumDiscs")' 80);            }            break;            case "<G>":            if (column.Name != "Genre")            {              RemoveGridColumn(position);              AddGridColumn(position' "Genre"' localisation.ToString("column_header"' "Genre")' 100);            }            break;            case "<O>":            if (column.Name != "AlbumArtist")            {              RemoveGridColumn(position);              AddGridColumn(position' "AlbumArtist"' localisation.ToString("column_header"' "AlbumArtist")' 150);            }            break;            case "<C>":            if (column.Name != "Comment")            {              RemoveGridColumn(position);              AddGridColumn(position' "Comment"' localisation.ToString("column_header"' "Comment")' 150);            }            break;            case "<N>":            if (column.Name != "Conductor")            {              RemoveGridColumn(position);              AddGridColumn(position' "Conductor"' localisation.ToString("column_header"' "Conductor")' 150);            }            break;            case "<R>":            if (column.Name != "Composer")            {              RemoveGridColumn(position);              AddGridColumn(position' "Composer"' localisation.ToString("column_header"' "Composer")' 150);            }            break;            case "<U>":            if (column.Name != "Grouping")            {              RemoveGridColumn(position);              AddGridColumn(position' "Grouping"' localisation.ToString("column_header"' "Grouping")' 150);            }            break;            case "<S>":            if (column.Name != "Subtitle")            {              RemoveGridColumn(position);              AddGridColumn(position' "Subtitle"' localisation.ToString("column_header"' "Subtitle")' 150);            }            break;            case "<M>":            if (column.Name != "Interpreter")            {              RemoveGridColumn(position);              AddGridColumn(position' "Interpreter"' localisation.ToString("column_header"' "Interpreter")' 150);            }            break;            case "<E>":            if (column.Name != "BPM")            {              RemoveGridColumn(position);              AddGridColumn(position' "BPM"' localisation.ToString("column_header"' "BPM")' 50);            }            break;            case "<X>":            // ignore it            break;        }
Magic Number,MPTagThat.Dialogues,Preview,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\Preview.cs,AddRemoveColumn,The following statement contains a magic number: switch (parm)        {          case "<A>":            if (column.Name != "Artist")            {              RemoveGridColumn(position);              AddGridColumn(position' "Artist"' localisation.ToString("column_header"' "Artist")' 150);            }            break;            case "<T>":            if (column.Name != "Title")            {              RemoveGridColumn(position);              AddGridColumn(position' "Title"' localisation.ToString("column_header"' "Title")' 150);            }            break;            case "<B>":            if (column.Name != "Album")            {              RemoveGridColumn(position);              AddGridColumn(position' "Album"' localisation.ToString("column_header"' "Album")' 150);            }            break;            case "<Y>":            if (column.Name != "Track")            {              RemoveGridColumn(position);              AddGridColumn(position' "Year"' localisation.ToString("column_header"' "Year")' 40);            }            break;            case "<K>":            if (column.Name != "Track")            {              RemoveGridColumn(position);              AddGridColumn(position' "Track"' localisation.ToString("column_header"' "Track")' 40);            }            break;            case "<k>":            if (column.Name != "NumTrack")            {              RemoveGridColumn(position);              AddGridColumn(position' "NumTrack"' localisation.ToString("column_header"' "NumTracks")' 80);            }            break;            case "<D>":            if (column.Name != "Disc")            {              RemoveGridColumn(position);              AddGridColumn(position' "Disc"' localisation.ToString("column_header"' "Disc")' 40);            }            break;            case "<d>":            if (column.Name != "NumDisc")            {              RemoveGridColumn(position);              AddGridColumn(position' "NumDisc"' localisation.ToString("column_header"' "NumDiscs")' 80);            }            break;            case "<G>":            if (column.Name != "Genre")            {              RemoveGridColumn(position);              AddGridColumn(position' "Genre"' localisation.ToString("column_header"' "Genre")' 100);            }            break;            case "<O>":            if (column.Name != "AlbumArtist")            {              RemoveGridColumn(position);              AddGridColumn(position' "AlbumArtist"' localisation.ToString("column_header"' "AlbumArtist")' 150);            }            break;            case "<C>":            if (column.Name != "Comment")            {              RemoveGridColumn(position);              AddGridColumn(position' "Comment"' localisation.ToString("column_header"' "Comment")' 150);            }            break;            case "<N>":            if (column.Name != "Conductor")            {              RemoveGridColumn(position);              AddGridColumn(position' "Conductor"' localisation.ToString("column_header"' "Conductor")' 150);            }            break;            case "<R>":            if (column.Name != "Composer")            {              RemoveGridColumn(position);              AddGridColumn(position' "Composer"' localisation.ToString("column_header"' "Composer")' 150);            }            break;            case "<U>":            if (column.Name != "Grouping")            {              RemoveGridColumn(position);              AddGridColumn(position' "Grouping"' localisation.ToString("column_header"' "Grouping")' 150);            }            break;            case "<S>":            if (column.Name != "Subtitle")            {              RemoveGridColumn(position);              AddGridColumn(position' "Subtitle"' localisation.ToString("column_header"' "Subtitle")' 150);            }            break;            case "<M>":            if (column.Name != "Interpreter")            {              RemoveGridColumn(position);              AddGridColumn(position' "Interpreter"' localisation.ToString("column_header"' "Interpreter")' 150);            }            break;            case "<E>":            if (column.Name != "BPM")            {              RemoveGridColumn(position);              AddGridColumn(position' "BPM"' localisation.ToString("column_header"' "BPM")' 50);            }            break;            case "<X>":            // ignore it            break;        }
Magic Number,MPTagThat.Dialogues,Preview,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\Preview.cs,AddRemoveColumn,The following statement contains a magic number: switch (parm)        {          case "<A>":            if (column.Name != "Artist")            {              RemoveGridColumn(position);              AddGridColumn(position' "Artist"' localisation.ToString("column_header"' "Artist")' 150);            }            break;            case "<T>":            if (column.Name != "Title")            {              RemoveGridColumn(position);              AddGridColumn(position' "Title"' localisation.ToString("column_header"' "Title")' 150);            }            break;            case "<B>":            if (column.Name != "Album")            {              RemoveGridColumn(position);              AddGridColumn(position' "Album"' localisation.ToString("column_header"' "Album")' 150);            }            break;            case "<Y>":            if (column.Name != "Track")            {              RemoveGridColumn(position);              AddGridColumn(position' "Year"' localisation.ToString("column_header"' "Year")' 40);            }            break;            case "<K>":            if (column.Name != "Track")            {              RemoveGridColumn(position);              AddGridColumn(position' "Track"' localisation.ToString("column_header"' "Track")' 40);            }            break;            case "<k>":            if (column.Name != "NumTrack")            {              RemoveGridColumn(position);              AddGridColumn(position' "NumTrack"' localisation.ToString("column_header"' "NumTracks")' 80);            }            break;            case "<D>":            if (column.Name != "Disc")            {              RemoveGridColumn(position);              AddGridColumn(position' "Disc"' localisation.ToString("column_header"' "Disc")' 40);            }            break;            case "<d>":            if (column.Name != "NumDisc")            {              RemoveGridColumn(position);              AddGridColumn(position' "NumDisc"' localisation.ToString("column_header"' "NumDiscs")' 80);            }            break;            case "<G>":            if (column.Name != "Genre")            {              RemoveGridColumn(position);              AddGridColumn(position' "Genre"' localisation.ToString("column_header"' "Genre")' 100);            }            break;            case "<O>":            if (column.Name != "AlbumArtist")            {              RemoveGridColumn(position);              AddGridColumn(position' "AlbumArtist"' localisation.ToString("column_header"' "AlbumArtist")' 150);            }            break;            case "<C>":            if (column.Name != "Comment")            {              RemoveGridColumn(position);              AddGridColumn(position' "Comment"' localisation.ToString("column_header"' "Comment")' 150);            }            break;            case "<N>":            if (column.Name != "Conductor")            {              RemoveGridColumn(position);              AddGridColumn(position' "Conductor"' localisation.ToString("column_header"' "Conductor")' 150);            }            break;            case "<R>":            if (column.Name != "Composer")            {              RemoveGridColumn(position);              AddGridColumn(position' "Composer"' localisation.ToString("column_header"' "Composer")' 150);            }            break;            case "<U>":            if (column.Name != "Grouping")            {              RemoveGridColumn(position);              AddGridColumn(position' "Grouping"' localisation.ToString("column_header"' "Grouping")' 150);            }            break;            case "<S>":            if (column.Name != "Subtitle")            {              RemoveGridColumn(position);              AddGridColumn(position' "Subtitle"' localisation.ToString("column_header"' "Subtitle")' 150);            }            break;            case "<M>":            if (column.Name != "Interpreter")            {              RemoveGridColumn(position);              AddGridColumn(position' "Interpreter"' localisation.ToString("column_header"' "Interpreter")' 150);            }            break;            case "<E>":            if (column.Name != "BPM")            {              RemoveGridColumn(position);              AddGridColumn(position' "BPM"' localisation.ToString("column_header"' "BPM")' 50);            }            break;            case "<X>":            // ignore it            break;        }
Magic Number,MPTagThat.Dialogues,Preview,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\Preview.cs,AddRemoveColumn,The following statement contains a magic number: switch (parm)        {          case "<A>":            if (column.Name != "Artist")            {              RemoveGridColumn(position);              AddGridColumn(position' "Artist"' localisation.ToString("column_header"' "Artist")' 150);            }            break;            case "<T>":            if (column.Name != "Title")            {              RemoveGridColumn(position);              AddGridColumn(position' "Title"' localisation.ToString("column_header"' "Title")' 150);            }            break;            case "<B>":            if (column.Name != "Album")            {              RemoveGridColumn(position);              AddGridColumn(position' "Album"' localisation.ToString("column_header"' "Album")' 150);            }            break;            case "<Y>":            if (column.Name != "Track")            {              RemoveGridColumn(position);              AddGridColumn(position' "Year"' localisation.ToString("column_header"' "Year")' 40);            }            break;            case "<K>":            if (column.Name != "Track")            {              RemoveGridColumn(position);              AddGridColumn(position' "Track"' localisation.ToString("column_header"' "Track")' 40);            }            break;            case "<k>":            if (column.Name != "NumTrack")            {              RemoveGridColumn(position);              AddGridColumn(position' "NumTrack"' localisation.ToString("column_header"' "NumTracks")' 80);            }            break;            case "<D>":            if (column.Name != "Disc")            {              RemoveGridColumn(position);              AddGridColumn(position' "Disc"' localisation.ToString("column_header"' "Disc")' 40);            }            break;            case "<d>":            if (column.Name != "NumDisc")            {              RemoveGridColumn(position);              AddGridColumn(position' "NumDisc"' localisation.ToString("column_header"' "NumDiscs")' 80);            }            break;            case "<G>":            if (column.Name != "Genre")            {              RemoveGridColumn(position);              AddGridColumn(position' "Genre"' localisation.ToString("column_header"' "Genre")' 100);            }            break;            case "<O>":            if (column.Name != "AlbumArtist")            {              RemoveGridColumn(position);              AddGridColumn(position' "AlbumArtist"' localisation.ToString("column_header"' "AlbumArtist")' 150);            }            break;            case "<C>":            if (column.Name != "Comment")            {              RemoveGridColumn(position);              AddGridColumn(position' "Comment"' localisation.ToString("column_header"' "Comment")' 150);            }            break;            case "<N>":            if (column.Name != "Conductor")            {              RemoveGridColumn(position);              AddGridColumn(position' "Conductor"' localisation.ToString("column_header"' "Conductor")' 150);            }            break;            case "<R>":            if (column.Name != "Composer")            {              RemoveGridColumn(position);              AddGridColumn(position' "Composer"' localisation.ToString("column_header"' "Composer")' 150);            }            break;            case "<U>":            if (column.Name != "Grouping")            {              RemoveGridColumn(position);              AddGridColumn(position' "Grouping"' localisation.ToString("column_header"' "Grouping")' 150);            }            break;            case "<S>":            if (column.Name != "Subtitle")            {              RemoveGridColumn(position);              AddGridColumn(position' "Subtitle"' localisation.ToString("column_header"' "Subtitle")' 150);            }            break;            case "<M>":            if (column.Name != "Interpreter")            {              RemoveGridColumn(position);              AddGridColumn(position' "Interpreter"' localisation.ToString("column_header"' "Interpreter")' 150);            }            break;            case "<E>":            if (column.Name != "BPM")            {              RemoveGridColumn(position);              AddGridColumn(position' "BPM"' localisation.ToString("column_header"' "BPM")' 50);            }            break;            case "<X>":            // ignore it            break;        }
Magic Number,MPTagThat.Dialogues,Preview,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\Preview.cs,AddRemoveColumn,The following statement contains a magic number: switch (parm)        {          case "<A>":            if (column.Name != "Artist")            {              RemoveGridColumn(position);              AddGridColumn(position' "Artist"' localisation.ToString("column_header"' "Artist")' 150);            }            break;            case "<T>":            if (column.Name != "Title")            {              RemoveGridColumn(position);              AddGridColumn(position' "Title"' localisation.ToString("column_header"' "Title")' 150);            }            break;            case "<B>":            if (column.Name != "Album")            {              RemoveGridColumn(position);              AddGridColumn(position' "Album"' localisation.ToString("column_header"' "Album")' 150);            }            break;            case "<Y>":            if (column.Name != "Track")            {              RemoveGridColumn(position);              AddGridColumn(position' "Year"' localisation.ToString("column_header"' "Year")' 40);            }            break;            case "<K>":            if (column.Name != "Track")            {              RemoveGridColumn(position);              AddGridColumn(position' "Track"' localisation.ToString("column_header"' "Track")' 40);            }            break;            case "<k>":            if (column.Name != "NumTrack")            {              RemoveGridColumn(position);              AddGridColumn(position' "NumTrack"' localisation.ToString("column_header"' "NumTracks")' 80);            }            break;            case "<D>":            if (column.Name != "Disc")            {              RemoveGridColumn(position);              AddGridColumn(position' "Disc"' localisation.ToString("column_header"' "Disc")' 40);            }            break;            case "<d>":            if (column.Name != "NumDisc")            {              RemoveGridColumn(position);              AddGridColumn(position' "NumDisc"' localisation.ToString("column_header"' "NumDiscs")' 80);            }            break;            case "<G>":            if (column.Name != "Genre")            {              RemoveGridColumn(position);              AddGridColumn(position' "Genre"' localisation.ToString("column_header"' "Genre")' 100);            }            break;            case "<O>":            if (column.Name != "AlbumArtist")            {              RemoveGridColumn(position);              AddGridColumn(position' "AlbumArtist"' localisation.ToString("column_header"' "AlbumArtist")' 150);            }            break;            case "<C>":            if (column.Name != "Comment")            {              RemoveGridColumn(position);              AddGridColumn(position' "Comment"' localisation.ToString("column_header"' "Comment")' 150);            }            break;            case "<N>":            if (column.Name != "Conductor")            {              RemoveGridColumn(position);              AddGridColumn(position' "Conductor"' localisation.ToString("column_header"' "Conductor")' 150);            }            break;            case "<R>":            if (column.Name != "Composer")            {              RemoveGridColumn(position);              AddGridColumn(position' "Composer"' localisation.ToString("column_header"' "Composer")' 150);            }            break;            case "<U>":            if (column.Name != "Grouping")            {              RemoveGridColumn(position);              AddGridColumn(position' "Grouping"' localisation.ToString("column_header"' "Grouping")' 150);            }            break;            case "<S>":            if (column.Name != "Subtitle")            {              RemoveGridColumn(position);              AddGridColumn(position' "Subtitle"' localisation.ToString("column_header"' "Subtitle")' 150);            }            break;            case "<M>":            if (column.Name != "Interpreter")            {              RemoveGridColumn(position);              AddGridColumn(position' "Interpreter"' localisation.ToString("column_header"' "Interpreter")' 150);            }            break;            case "<E>":            if (column.Name != "BPM")            {              RemoveGridColumn(position);              AddGridColumn(position' "BPM"' localisation.ToString("column_header"' "BPM")' 50);            }            break;            case "<X>":            // ignore it            break;        }
Magic Number,MPTagThat.Dialogues,Preview,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\Preview.cs,AddRemoveColumn,The following statement contains a magic number: switch (parm)        {          case "<A>":            if (column.Name != "Artist")            {              RemoveGridColumn(position);              AddGridColumn(position' "Artist"' localisation.ToString("column_header"' "Artist")' 150);            }            break;            case "<T>":            if (column.Name != "Title")            {              RemoveGridColumn(position);              AddGridColumn(position' "Title"' localisation.ToString("column_header"' "Title")' 150);            }            break;            case "<B>":            if (column.Name != "Album")            {              RemoveGridColumn(position);              AddGridColumn(position' "Album"' localisation.ToString("column_header"' "Album")' 150);            }            break;            case "<Y>":            if (column.Name != "Track")            {              RemoveGridColumn(position);              AddGridColumn(position' "Year"' localisation.ToString("column_header"' "Year")' 40);            }            break;            case "<K>":            if (column.Name != "Track")            {              RemoveGridColumn(position);              AddGridColumn(position' "Track"' localisation.ToString("column_header"' "Track")' 40);            }            break;            case "<k>":            if (column.Name != "NumTrack")            {              RemoveGridColumn(position);              AddGridColumn(position' "NumTrack"' localisation.ToString("column_header"' "NumTracks")' 80);            }            break;            case "<D>":            if (column.Name != "Disc")            {              RemoveGridColumn(position);              AddGridColumn(position' "Disc"' localisation.ToString("column_header"' "Disc")' 40);            }            break;            case "<d>":            if (column.Name != "NumDisc")            {              RemoveGridColumn(position);              AddGridColumn(position' "NumDisc"' localisation.ToString("column_header"' "NumDiscs")' 80);            }            break;            case "<G>":            if (column.Name != "Genre")            {              RemoveGridColumn(position);              AddGridColumn(position' "Genre"' localisation.ToString("column_header"' "Genre")' 100);            }            break;            case "<O>":            if (column.Name != "AlbumArtist")            {              RemoveGridColumn(position);              AddGridColumn(position' "AlbumArtist"' localisation.ToString("column_header"' "AlbumArtist")' 150);            }            break;            case "<C>":            if (column.Name != "Comment")            {              RemoveGridColumn(position);              AddGridColumn(position' "Comment"' localisation.ToString("column_header"' "Comment")' 150);            }            break;            case "<N>":            if (column.Name != "Conductor")            {              RemoveGridColumn(position);              AddGridColumn(position' "Conductor"' localisation.ToString("column_header"' "Conductor")' 150);            }            break;            case "<R>":            if (column.Name != "Composer")            {              RemoveGridColumn(position);              AddGridColumn(position' "Composer"' localisation.ToString("column_header"' "Composer")' 150);            }            break;            case "<U>":            if (column.Name != "Grouping")            {              RemoveGridColumn(position);              AddGridColumn(position' "Grouping"' localisation.ToString("column_header"' "Grouping")' 150);            }            break;            case "<S>":            if (column.Name != "Subtitle")            {              RemoveGridColumn(position);              AddGridColumn(position' "Subtitle"' localisation.ToString("column_header"' "Subtitle")' 150);            }            break;            case "<M>":            if (column.Name != "Interpreter")            {              RemoveGridColumn(position);              AddGridColumn(position' "Interpreter"' localisation.ToString("column_header"' "Interpreter")' 150);            }            break;            case "<E>":            if (column.Name != "BPM")            {              RemoveGridColumn(position);              AddGridColumn(position' "BPM"' localisation.ToString("column_header"' "BPM")' 50);            }            break;            case "<X>":            // ignore it            break;        }
Magic Number,MPTagThat.Dialogues,Preview,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\Preview.cs,AddRemoveColumn,The following statement contains a magic number: switch (parm)        {          case "<A>":            if (column.Name != "Artist")            {              RemoveGridColumn(position);              AddGridColumn(position' "Artist"' localisation.ToString("column_header"' "Artist")' 150);            }            break;            case "<T>":            if (column.Name != "Title")            {              RemoveGridColumn(position);              AddGridColumn(position' "Title"' localisation.ToString("column_header"' "Title")' 150);            }            break;            case "<B>":            if (column.Name != "Album")            {              RemoveGridColumn(position);              AddGridColumn(position' "Album"' localisation.ToString("column_header"' "Album")' 150);            }            break;            case "<Y>":            if (column.Name != "Track")            {              RemoveGridColumn(position);              AddGridColumn(position' "Year"' localisation.ToString("column_header"' "Year")' 40);            }            break;            case "<K>":            if (column.Name != "Track")            {              RemoveGridColumn(position);              AddGridColumn(position' "Track"' localisation.ToString("column_header"' "Track")' 40);            }            break;            case "<k>":            if (column.Name != "NumTrack")            {              RemoveGridColumn(position);              AddGridColumn(position' "NumTrack"' localisation.ToString("column_header"' "NumTracks")' 80);            }            break;            case "<D>":            if (column.Name != "Disc")            {              RemoveGridColumn(position);              AddGridColumn(position' "Disc"' localisation.ToString("column_header"' "Disc")' 40);            }            break;            case "<d>":            if (column.Name != "NumDisc")            {              RemoveGridColumn(position);              AddGridColumn(position' "NumDisc"' localisation.ToString("column_header"' "NumDiscs")' 80);            }            break;            case "<G>":            if (column.Name != "Genre")            {              RemoveGridColumn(position);              AddGridColumn(position' "Genre"' localisation.ToString("column_header"' "Genre")' 100);            }            break;            case "<O>":            if (column.Name != "AlbumArtist")            {              RemoveGridColumn(position);              AddGridColumn(position' "AlbumArtist"' localisation.ToString("column_header"' "AlbumArtist")' 150);            }            break;            case "<C>":            if (column.Name != "Comment")            {              RemoveGridColumn(position);              AddGridColumn(position' "Comment"' localisation.ToString("column_header"' "Comment")' 150);            }            break;            case "<N>":            if (column.Name != "Conductor")            {              RemoveGridColumn(position);              AddGridColumn(position' "Conductor"' localisation.ToString("column_header"' "Conductor")' 150);            }            break;            case "<R>":            if (column.Name != "Composer")            {              RemoveGridColumn(position);              AddGridColumn(position' "Composer"' localisation.ToString("column_header"' "Composer")' 150);            }            break;            case "<U>":            if (column.Name != "Grouping")            {              RemoveGridColumn(position);              AddGridColumn(position' "Grouping"' localisation.ToString("column_header"' "Grouping")' 150);            }            break;            case "<S>":            if (column.Name != "Subtitle")            {              RemoveGridColumn(position);              AddGridColumn(position' "Subtitle"' localisation.ToString("column_header"' "Subtitle")' 150);            }            break;            case "<M>":            if (column.Name != "Interpreter")            {              RemoveGridColumn(position);              AddGridColumn(position' "Interpreter"' localisation.ToString("column_header"' "Interpreter")' 150);            }            break;            case "<E>":            if (column.Name != "BPM")            {              RemoveGridColumn(position);              AddGridColumn(position' "BPM"' localisation.ToString("column_header"' "BPM")' 50);            }            break;            case "<X>":            // ignore it            break;        }
Magic Number,MPTagThat.Dialogues,Preview,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\Preview.cs,AddRemoveColumn,The following statement contains a magic number: switch (parm)        {          case "<A>":            if (column.Name != "Artist")            {              RemoveGridColumn(position);              AddGridColumn(position' "Artist"' localisation.ToString("column_header"' "Artist")' 150);            }            break;            case "<T>":            if (column.Name != "Title")            {              RemoveGridColumn(position);              AddGridColumn(position' "Title"' localisation.ToString("column_header"' "Title")' 150);            }            break;            case "<B>":            if (column.Name != "Album")            {              RemoveGridColumn(position);              AddGridColumn(position' "Album"' localisation.ToString("column_header"' "Album")' 150);            }            break;            case "<Y>":            if (column.Name != "Track")            {              RemoveGridColumn(position);              AddGridColumn(position' "Year"' localisation.ToString("column_header"' "Year")' 40);            }            break;            case "<K>":            if (column.Name != "Track")            {              RemoveGridColumn(position);              AddGridColumn(position' "Track"' localisation.ToString("column_header"' "Track")' 40);            }            break;            case "<k>":            if (column.Name != "NumTrack")            {              RemoveGridColumn(position);              AddGridColumn(position' "NumTrack"' localisation.ToString("column_header"' "NumTracks")' 80);            }            break;            case "<D>":            if (column.Name != "Disc")            {              RemoveGridColumn(position);              AddGridColumn(position' "Disc"' localisation.ToString("column_header"' "Disc")' 40);            }            break;            case "<d>":            if (column.Name != "NumDisc")            {              RemoveGridColumn(position);              AddGridColumn(position' "NumDisc"' localisation.ToString("column_header"' "NumDiscs")' 80);            }            break;            case "<G>":            if (column.Name != "Genre")            {              RemoveGridColumn(position);              AddGridColumn(position' "Genre"' localisation.ToString("column_header"' "Genre")' 100);            }            break;            case "<O>":            if (column.Name != "AlbumArtist")            {              RemoveGridColumn(position);              AddGridColumn(position' "AlbumArtist"' localisation.ToString("column_header"' "AlbumArtist")' 150);            }            break;            case "<C>":            if (column.Name != "Comment")            {              RemoveGridColumn(position);              AddGridColumn(position' "Comment"' localisation.ToString("column_header"' "Comment")' 150);            }            break;            case "<N>":            if (column.Name != "Conductor")            {              RemoveGridColumn(position);              AddGridColumn(position' "Conductor"' localisation.ToString("column_header"' "Conductor")' 150);            }            break;            case "<R>":            if (column.Name != "Composer")            {              RemoveGridColumn(position);              AddGridColumn(position' "Composer"' localisation.ToString("column_header"' "Composer")' 150);            }            break;            case "<U>":            if (column.Name != "Grouping")            {              RemoveGridColumn(position);              AddGridColumn(position' "Grouping"' localisation.ToString("column_header"' "Grouping")' 150);            }            break;            case "<S>":            if (column.Name != "Subtitle")            {              RemoveGridColumn(position);              AddGridColumn(position' "Subtitle"' localisation.ToString("column_header"' "Subtitle")' 150);            }            break;            case "<M>":            if (column.Name != "Interpreter")            {              RemoveGridColumn(position);              AddGridColumn(position' "Interpreter"' localisation.ToString("column_header"' "Interpreter")' 150);            }            break;            case "<E>":            if (column.Name != "BPM")            {              RemoveGridColumn(position);              AddGridColumn(position' "BPM"' localisation.ToString("column_header"' "BPM")' 50);            }            break;            case "<X>":            // ignore it            break;        }
Magic Number,MPTagThat.Dialogues,Preview,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\Preview.cs,AddRemoveColumn,The following statement contains a magic number: switch (parm)        {          case "<A>":            if (column.Name != "Artist")            {              RemoveGridColumn(position);              AddGridColumn(position' "Artist"' localisation.ToString("column_header"' "Artist")' 150);            }            break;            case "<T>":            if (column.Name != "Title")            {              RemoveGridColumn(position);              AddGridColumn(position' "Title"' localisation.ToString("column_header"' "Title")' 150);            }            break;            case "<B>":            if (column.Name != "Album")            {              RemoveGridColumn(position);              AddGridColumn(position' "Album"' localisation.ToString("column_header"' "Album")' 150);            }            break;            case "<Y>":            if (column.Name != "Track")            {              RemoveGridColumn(position);              AddGridColumn(position' "Year"' localisation.ToString("column_header"' "Year")' 40);            }            break;            case "<K>":            if (column.Name != "Track")            {              RemoveGridColumn(position);              AddGridColumn(position' "Track"' localisation.ToString("column_header"' "Track")' 40);            }            break;            case "<k>":            if (column.Name != "NumTrack")            {              RemoveGridColumn(position);              AddGridColumn(position' "NumTrack"' localisation.ToString("column_header"' "NumTracks")' 80);            }            break;            case "<D>":            if (column.Name != "Disc")            {              RemoveGridColumn(position);              AddGridColumn(position' "Disc"' localisation.ToString("column_header"' "Disc")' 40);            }            break;            case "<d>":            if (column.Name != "NumDisc")            {              RemoveGridColumn(position);              AddGridColumn(position' "NumDisc"' localisation.ToString("column_header"' "NumDiscs")' 80);            }            break;            case "<G>":            if (column.Name != "Genre")            {              RemoveGridColumn(position);              AddGridColumn(position' "Genre"' localisation.ToString("column_header"' "Genre")' 100);            }            break;            case "<O>":            if (column.Name != "AlbumArtist")            {              RemoveGridColumn(position);              AddGridColumn(position' "AlbumArtist"' localisation.ToString("column_header"' "AlbumArtist")' 150);            }            break;            case "<C>":            if (column.Name != "Comment")            {              RemoveGridColumn(position);              AddGridColumn(position' "Comment"' localisation.ToString("column_header"' "Comment")' 150);            }            break;            case "<N>":            if (column.Name != "Conductor")            {              RemoveGridColumn(position);              AddGridColumn(position' "Conductor"' localisation.ToString("column_header"' "Conductor")' 150);            }            break;            case "<R>":            if (column.Name != "Composer")            {              RemoveGridColumn(position);              AddGridColumn(position' "Composer"' localisation.ToString("column_header"' "Composer")' 150);            }            break;            case "<U>":            if (column.Name != "Grouping")            {              RemoveGridColumn(position);              AddGridColumn(position' "Grouping"' localisation.ToString("column_header"' "Grouping")' 150);            }            break;            case "<S>":            if (column.Name != "Subtitle")            {              RemoveGridColumn(position);              AddGridColumn(position' "Subtitle"' localisation.ToString("column_header"' "Subtitle")' 150);            }            break;            case "<M>":            if (column.Name != "Interpreter")            {              RemoveGridColumn(position);              AddGridColumn(position' "Interpreter"' localisation.ToString("column_header"' "Interpreter")' 150);            }            break;            case "<E>":            if (column.Name != "BPM")            {              RemoveGridColumn(position);              AddGridColumn(position' "BPM"' localisation.ToString("column_header"' "BPM")' 50);            }            break;            case "<X>":            // ignore it            break;        }
Magic Number,MPTagThat.Dialogues,Preview,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\Preview.cs,AddRemoveColumn,The following statement contains a magic number: switch (parm)        {          case "<A>":            if (column.Name != "Artist")            {              RemoveGridColumn(position);              AddGridColumn(position' "Artist"' localisation.ToString("column_header"' "Artist")' 150);            }            break;            case "<T>":            if (column.Name != "Title")            {              RemoveGridColumn(position);              AddGridColumn(position' "Title"' localisation.ToString("column_header"' "Title")' 150);            }            break;            case "<B>":            if (column.Name != "Album")            {              RemoveGridColumn(position);              AddGridColumn(position' "Album"' localisation.ToString("column_header"' "Album")' 150);            }            break;            case "<Y>":            if (column.Name != "Track")            {              RemoveGridColumn(position);              AddGridColumn(position' "Year"' localisation.ToString("column_header"' "Year")' 40);            }            break;            case "<K>":            if (column.Name != "Track")            {              RemoveGridColumn(position);              AddGridColumn(position' "Track"' localisation.ToString("column_header"' "Track")' 40);            }            break;            case "<k>":            if (column.Name != "NumTrack")            {              RemoveGridColumn(position);              AddGridColumn(position' "NumTrack"' localisation.ToString("column_header"' "NumTracks")' 80);            }            break;            case "<D>":            if (column.Name != "Disc")            {              RemoveGridColumn(position);              AddGridColumn(position' "Disc"' localisation.ToString("column_header"' "Disc")' 40);            }            break;            case "<d>":            if (column.Name != "NumDisc")            {              RemoveGridColumn(position);              AddGridColumn(position' "NumDisc"' localisation.ToString("column_header"' "NumDiscs")' 80);            }            break;            case "<G>":            if (column.Name != "Genre")            {              RemoveGridColumn(position);              AddGridColumn(position' "Genre"' localisation.ToString("column_header"' "Genre")' 100);            }            break;            case "<O>":            if (column.Name != "AlbumArtist")            {              RemoveGridColumn(position);              AddGridColumn(position' "AlbumArtist"' localisation.ToString("column_header"' "AlbumArtist")' 150);            }            break;            case "<C>":            if (column.Name != "Comment")            {              RemoveGridColumn(position);              AddGridColumn(position' "Comment"' localisation.ToString("column_header"' "Comment")' 150);            }            break;            case "<N>":            if (column.Name != "Conductor")            {              RemoveGridColumn(position);              AddGridColumn(position' "Conductor"' localisation.ToString("column_header"' "Conductor")' 150);            }            break;            case "<R>":            if (column.Name != "Composer")            {              RemoveGridColumn(position);              AddGridColumn(position' "Composer"' localisation.ToString("column_header"' "Composer")' 150);            }            break;            case "<U>":            if (column.Name != "Grouping")            {              RemoveGridColumn(position);              AddGridColumn(position' "Grouping"' localisation.ToString("column_header"' "Grouping")' 150);            }            break;            case "<S>":            if (column.Name != "Subtitle")            {              RemoveGridColumn(position);              AddGridColumn(position' "Subtitle"' localisation.ToString("column_header"' "Subtitle")' 150);            }            break;            case "<M>":            if (column.Name != "Interpreter")            {              RemoveGridColumn(position);              AddGridColumn(position' "Interpreter"' localisation.ToString("column_header"' "Interpreter")' 150);            }            break;            case "<E>":            if (column.Name != "BPM")            {              RemoveGridColumn(position);              AddGridColumn(position' "BPM"' localisation.ToString("column_header"' "BPM")' 50);            }            break;            case "<X>":            // ignore it            break;        }
Magic Number,MPTagThat.Dialogues,Preview,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\Preview.cs,AddRemoveColumn,The following statement contains a magic number: switch (parm)        {          case "<A>":            if (column.Name != "Artist")            {              RemoveGridColumn(position);              AddGridColumn(position' "Artist"' localisation.ToString("column_header"' "Artist")' 150);            }            break;            case "<T>":            if (column.Name != "Title")            {              RemoveGridColumn(position);              AddGridColumn(position' "Title"' localisation.ToString("column_header"' "Title")' 150);            }            break;            case "<B>":            if (column.Name != "Album")            {              RemoveGridColumn(position);              AddGridColumn(position' "Album"' localisation.ToString("column_header"' "Album")' 150);            }            break;            case "<Y>":            if (column.Name != "Track")            {              RemoveGridColumn(position);              AddGridColumn(position' "Year"' localisation.ToString("column_header"' "Year")' 40);            }            break;            case "<K>":            if (column.Name != "Track")            {              RemoveGridColumn(position);              AddGridColumn(position' "Track"' localisation.ToString("column_header"' "Track")' 40);            }            break;            case "<k>":            if (column.Name != "NumTrack")            {              RemoveGridColumn(position);              AddGridColumn(position' "NumTrack"' localisation.ToString("column_header"' "NumTracks")' 80);            }            break;            case "<D>":            if (column.Name != "Disc")            {              RemoveGridColumn(position);              AddGridColumn(position' "Disc"' localisation.ToString("column_header"' "Disc")' 40);            }            break;            case "<d>":            if (column.Name != "NumDisc")            {              RemoveGridColumn(position);              AddGridColumn(position' "NumDisc"' localisation.ToString("column_header"' "NumDiscs")' 80);            }            break;            case "<G>":            if (column.Name != "Genre")            {              RemoveGridColumn(position);              AddGridColumn(position' "Genre"' localisation.ToString("column_header"' "Genre")' 100);            }            break;            case "<O>":            if (column.Name != "AlbumArtist")            {              RemoveGridColumn(position);              AddGridColumn(position' "AlbumArtist"' localisation.ToString("column_header"' "AlbumArtist")' 150);            }            break;            case "<C>":            if (column.Name != "Comment")            {              RemoveGridColumn(position);              AddGridColumn(position' "Comment"' localisation.ToString("column_header"' "Comment")' 150);            }            break;            case "<N>":            if (column.Name != "Conductor")            {              RemoveGridColumn(position);              AddGridColumn(position' "Conductor"' localisation.ToString("column_header"' "Conductor")' 150);            }            break;            case "<R>":            if (column.Name != "Composer")            {              RemoveGridColumn(position);              AddGridColumn(position' "Composer"' localisation.ToString("column_header"' "Composer")' 150);            }            break;            case "<U>":            if (column.Name != "Grouping")            {              RemoveGridColumn(position);              AddGridColumn(position' "Grouping"' localisation.ToString("column_header"' "Grouping")' 150);            }            break;            case "<S>":            if (column.Name != "Subtitle")            {              RemoveGridColumn(position);              AddGridColumn(position' "Subtitle"' localisation.ToString("column_header"' "Subtitle")' 150);            }            break;            case "<M>":            if (column.Name != "Interpreter")            {              RemoveGridColumn(position);              AddGridColumn(position' "Interpreter"' localisation.ToString("column_header"' "Interpreter")' 150);            }            break;            case "<E>":            if (column.Name != "BPM")            {              RemoveGridColumn(position);              AddGridColumn(position' "BPM"' localisation.ToString("column_header"' "BPM")' 50);            }            break;            case "<X>":            // ignore it            break;        }
Magic Number,MPTagThat.Dialogues,Preview,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\Preview.cs,AddRemoveColumn,The following statement contains a magic number: switch (parm)        {          case "<A>":            if (column.Name != "Artist")            {              RemoveGridColumn(position);              AddGridColumn(position' "Artist"' localisation.ToString("column_header"' "Artist")' 150);            }            break;            case "<T>":            if (column.Name != "Title")            {              RemoveGridColumn(position);              AddGridColumn(position' "Title"' localisation.ToString("column_header"' "Title")' 150);            }            break;            case "<B>":            if (column.Name != "Album")            {              RemoveGridColumn(position);              AddGridColumn(position' "Album"' localisation.ToString("column_header"' "Album")' 150);            }            break;            case "<Y>":            if (column.Name != "Track")            {              RemoveGridColumn(position);              AddGridColumn(position' "Year"' localisation.ToString("column_header"' "Year")' 40);            }            break;            case "<K>":            if (column.Name != "Track")            {              RemoveGridColumn(position);              AddGridColumn(position' "Track"' localisation.ToString("column_header"' "Track")' 40);            }            break;            case "<k>":            if (column.Name != "NumTrack")            {              RemoveGridColumn(position);              AddGridColumn(position' "NumTrack"' localisation.ToString("column_header"' "NumTracks")' 80);            }            break;            case "<D>":            if (column.Name != "Disc")            {              RemoveGridColumn(position);              AddGridColumn(position' "Disc"' localisation.ToString("column_header"' "Disc")' 40);            }            break;            case "<d>":            if (column.Name != "NumDisc")            {              RemoveGridColumn(position);              AddGridColumn(position' "NumDisc"' localisation.ToString("column_header"' "NumDiscs")' 80);            }            break;            case "<G>":            if (column.Name != "Genre")            {              RemoveGridColumn(position);              AddGridColumn(position' "Genre"' localisation.ToString("column_header"' "Genre")' 100);            }            break;            case "<O>":            if (column.Name != "AlbumArtist")            {              RemoveGridColumn(position);              AddGridColumn(position' "AlbumArtist"' localisation.ToString("column_header"' "AlbumArtist")' 150);            }            break;            case "<C>":            if (column.Name != "Comment")            {              RemoveGridColumn(position);              AddGridColumn(position' "Comment"' localisation.ToString("column_header"' "Comment")' 150);            }            break;            case "<N>":            if (column.Name != "Conductor")            {              RemoveGridColumn(position);              AddGridColumn(position' "Conductor"' localisation.ToString("column_header"' "Conductor")' 150);            }            break;            case "<R>":            if (column.Name != "Composer")            {              RemoveGridColumn(position);              AddGridColumn(position' "Composer"' localisation.ToString("column_header"' "Composer")' 150);            }            break;            case "<U>":            if (column.Name != "Grouping")            {              RemoveGridColumn(position);              AddGridColumn(position' "Grouping"' localisation.ToString("column_header"' "Grouping")' 150);            }            break;            case "<S>":            if (column.Name != "Subtitle")            {              RemoveGridColumn(position);              AddGridColumn(position' "Subtitle"' localisation.ToString("column_header"' "Subtitle")' 150);            }            break;            case "<M>":            if (column.Name != "Interpreter")            {              RemoveGridColumn(position);              AddGridColumn(position' "Interpreter"' localisation.ToString("column_header"' "Interpreter")' 150);            }            break;            case "<E>":            if (column.Name != "BPM")            {              RemoveGridColumn(position);              AddGridColumn(position' "BPM"' localisation.ToString("column_header"' "BPM")' 50);            }            break;            case "<X>":            // ignore it            break;        }
Magic Number,MPTagThat.Dialogues,Preview,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\Preview.cs,AddRemoveColumn,The following statement contains a magic number: switch (parm)        {          case "<A>":            if (column.Name != "Artist")            {              RemoveGridColumn(position);              AddGridColumn(position' "Artist"' localisation.ToString("column_header"' "Artist")' 150);            }            break;            case "<T>":            if (column.Name != "Title")            {              RemoveGridColumn(position);              AddGridColumn(position' "Title"' localisation.ToString("column_header"' "Title")' 150);            }            break;            case "<B>":            if (column.Name != "Album")            {              RemoveGridColumn(position);              AddGridColumn(position' "Album"' localisation.ToString("column_header"' "Album")' 150);            }            break;            case "<Y>":            if (column.Name != "Track")            {              RemoveGridColumn(position);              AddGridColumn(position' "Year"' localisation.ToString("column_header"' "Year")' 40);            }            break;            case "<K>":            if (column.Name != "Track")            {              RemoveGridColumn(position);              AddGridColumn(position' "Track"' localisation.ToString("column_header"' "Track")' 40);            }            break;            case "<k>":            if (column.Name != "NumTrack")            {              RemoveGridColumn(position);              AddGridColumn(position' "NumTrack"' localisation.ToString("column_header"' "NumTracks")' 80);            }            break;            case "<D>":            if (column.Name != "Disc")            {              RemoveGridColumn(position);              AddGridColumn(position' "Disc"' localisation.ToString("column_header"' "Disc")' 40);            }            break;            case "<d>":            if (column.Name != "NumDisc")            {              RemoveGridColumn(position);              AddGridColumn(position' "NumDisc"' localisation.ToString("column_header"' "NumDiscs")' 80);            }            break;            case "<G>":            if (column.Name != "Genre")            {              RemoveGridColumn(position);              AddGridColumn(position' "Genre"' localisation.ToString("column_header"' "Genre")' 100);            }            break;            case "<O>":            if (column.Name != "AlbumArtist")            {              RemoveGridColumn(position);              AddGridColumn(position' "AlbumArtist"' localisation.ToString("column_header"' "AlbumArtist")' 150);            }            break;            case "<C>":            if (column.Name != "Comment")            {              RemoveGridColumn(position);              AddGridColumn(position' "Comment"' localisation.ToString("column_header"' "Comment")' 150);            }            break;            case "<N>":            if (column.Name != "Conductor")            {              RemoveGridColumn(position);              AddGridColumn(position' "Conductor"' localisation.ToString("column_header"' "Conductor")' 150);            }            break;            case "<R>":            if (column.Name != "Composer")            {              RemoveGridColumn(position);              AddGridColumn(position' "Composer"' localisation.ToString("column_header"' "Composer")' 150);            }            break;            case "<U>":            if (column.Name != "Grouping")            {              RemoveGridColumn(position);              AddGridColumn(position' "Grouping"' localisation.ToString("column_header"' "Grouping")' 150);            }            break;            case "<S>":            if (column.Name != "Subtitle")            {              RemoveGridColumn(position);              AddGridColumn(position' "Subtitle"' localisation.ToString("column_header"' "Subtitle")' 150);            }            break;            case "<M>":            if (column.Name != "Interpreter")            {              RemoveGridColumn(position);              AddGridColumn(position' "Interpreter"' localisation.ToString("column_header"' "Interpreter")' 150);            }            break;            case "<E>":            if (column.Name != "BPM")            {              RemoveGridColumn(position);              AddGridColumn(position' "BPM"' localisation.ToString("column_header"' "BPM")' 50);            }            break;            case "<X>":            // ignore it            break;        }
Magic Number,MPTagThat.Dialogues,Preview,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\Preview.cs,AddRemoveColumn,The following statement contains a magic number: switch (parm)        {          case "<A>":            if (column.Name != "Artist")            {              RemoveGridColumn(position);              AddGridColumn(position' "Artist"' localisation.ToString("column_header"' "Artist")' 150);            }            break;            case "<T>":            if (column.Name != "Title")            {              RemoveGridColumn(position);              AddGridColumn(position' "Title"' localisation.ToString("column_header"' "Title")' 150);            }            break;            case "<B>":            if (column.Name != "Album")            {              RemoveGridColumn(position);              AddGridColumn(position' "Album"' localisation.ToString("column_header"' "Album")' 150);            }            break;            case "<Y>":            if (column.Name != "Track")            {              RemoveGridColumn(position);              AddGridColumn(position' "Year"' localisation.ToString("column_header"' "Year")' 40);            }            break;            case "<K>":            if (column.Name != "Track")            {              RemoveGridColumn(position);              AddGridColumn(position' "Track"' localisation.ToString("column_header"' "Track")' 40);            }            break;            case "<k>":            if (column.Name != "NumTrack")            {              RemoveGridColumn(position);              AddGridColumn(position' "NumTrack"' localisation.ToString("column_header"' "NumTracks")' 80);            }            break;            case "<D>":            if (column.Name != "Disc")            {              RemoveGridColumn(position);              AddGridColumn(position' "Disc"' localisation.ToString("column_header"' "Disc")' 40);            }            break;            case "<d>":            if (column.Name != "NumDisc")            {              RemoveGridColumn(position);              AddGridColumn(position' "NumDisc"' localisation.ToString("column_header"' "NumDiscs")' 80);            }            break;            case "<G>":            if (column.Name != "Genre")            {              RemoveGridColumn(position);              AddGridColumn(position' "Genre"' localisation.ToString("column_header"' "Genre")' 100);            }            break;            case "<O>":            if (column.Name != "AlbumArtist")            {              RemoveGridColumn(position);              AddGridColumn(position' "AlbumArtist"' localisation.ToString("column_header"' "AlbumArtist")' 150);            }            break;            case "<C>":            if (column.Name != "Comment")            {              RemoveGridColumn(position);              AddGridColumn(position' "Comment"' localisation.ToString("column_header"' "Comment")' 150);            }            break;            case "<N>":            if (column.Name != "Conductor")            {              RemoveGridColumn(position);              AddGridColumn(position' "Conductor"' localisation.ToString("column_header"' "Conductor")' 150);            }            break;            case "<R>":            if (column.Name != "Composer")            {              RemoveGridColumn(position);              AddGridColumn(position' "Composer"' localisation.ToString("column_header"' "Composer")' 150);            }            break;            case "<U>":            if (column.Name != "Grouping")            {              RemoveGridColumn(position);              AddGridColumn(position' "Grouping"' localisation.ToString("column_header"' "Grouping")' 150);            }            break;            case "<S>":            if (column.Name != "Subtitle")            {              RemoveGridColumn(position);              AddGridColumn(position' "Subtitle"' localisation.ToString("column_header"' "Subtitle")' 150);            }            break;            case "<M>":            if (column.Name != "Interpreter")            {              RemoveGridColumn(position);              AddGridColumn(position' "Interpreter"' localisation.ToString("column_header"' "Interpreter")' 150);            }            break;            case "<E>":            if (column.Name != "BPM")            {              RemoveGridColumn(position);              AddGridColumn(position' "BPM"' localisation.ToString("column_header"' "BPM")' 50);            }            break;            case "<X>":            // ignore it            break;        }
Magic Number,MPTagThat.Dialogues,Preview,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\Preview.cs,AddRemoveColumn,The following statement contains a magic number: switch (parm)        {          case "<A>":            if (column.Name != "Artist")            {              RemoveGridColumn(position);              AddGridColumn(position' "Artist"' localisation.ToString("column_header"' "Artist")' 150);            }            break;            case "<T>":            if (column.Name != "Title")            {              RemoveGridColumn(position);              AddGridColumn(position' "Title"' localisation.ToString("column_header"' "Title")' 150);            }            break;            case "<B>":            if (column.Name != "Album")            {              RemoveGridColumn(position);              AddGridColumn(position' "Album"' localisation.ToString("column_header"' "Album")' 150);            }            break;            case "<Y>":            if (column.Name != "Track")            {              RemoveGridColumn(position);              AddGridColumn(position' "Year"' localisation.ToString("column_header"' "Year")' 40);            }            break;            case "<K>":            if (column.Name != "Track")            {              RemoveGridColumn(position);              AddGridColumn(position' "Track"' localisation.ToString("column_header"' "Track")' 40);            }            break;            case "<k>":            if (column.Name != "NumTrack")            {              RemoveGridColumn(position);              AddGridColumn(position' "NumTrack"' localisation.ToString("column_header"' "NumTracks")' 80);            }            break;            case "<D>":            if (column.Name != "Disc")            {              RemoveGridColumn(position);              AddGridColumn(position' "Disc"' localisation.ToString("column_header"' "Disc")' 40);            }            break;            case "<d>":            if (column.Name != "NumDisc")            {              RemoveGridColumn(position);              AddGridColumn(position' "NumDisc"' localisation.ToString("column_header"' "NumDiscs")' 80);            }            break;            case "<G>":            if (column.Name != "Genre")            {              RemoveGridColumn(position);              AddGridColumn(position' "Genre"' localisation.ToString("column_header"' "Genre")' 100);            }            break;            case "<O>":            if (column.Name != "AlbumArtist")            {              RemoveGridColumn(position);              AddGridColumn(position' "AlbumArtist"' localisation.ToString("column_header"' "AlbumArtist")' 150);            }            break;            case "<C>":            if (column.Name != "Comment")            {              RemoveGridColumn(position);              AddGridColumn(position' "Comment"' localisation.ToString("column_header"' "Comment")' 150);            }            break;            case "<N>":            if (column.Name != "Conductor")            {              RemoveGridColumn(position);              AddGridColumn(position' "Conductor"' localisation.ToString("column_header"' "Conductor")' 150);            }            break;            case "<R>":            if (column.Name != "Composer")            {              RemoveGridColumn(position);              AddGridColumn(position' "Composer"' localisation.ToString("column_header"' "Composer")' 150);            }            break;            case "<U>":            if (column.Name != "Grouping")            {              RemoveGridColumn(position);              AddGridColumn(position' "Grouping"' localisation.ToString("column_header"' "Grouping")' 150);            }            break;            case "<S>":            if (column.Name != "Subtitle")            {              RemoveGridColumn(position);              AddGridColumn(position' "Subtitle"' localisation.ToString("column_header"' "Subtitle")' 150);            }            break;            case "<M>":            if (column.Name != "Interpreter")            {              RemoveGridColumn(position);              AddGridColumn(position' "Interpreter"' localisation.ToString("column_header"' "Interpreter")' 150);            }            break;            case "<E>":            if (column.Name != "BPM")            {              RemoveGridColumn(position);              AddGridColumn(position' "BPM"' localisation.ToString("column_header"' "BPM")' 50);            }            break;            case "<X>":            // ignore it            break;        }
Magic Number,MPTagThat.Dialogues,Preview,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\Preview.cs,BuildPreviewGrid,The following statement contains a magic number: while ((index = parameters.IndexOf("<")) > -1)        {          string parm = parameters.Substring(index' 3);          parms.Add(parm);          parameters = parameters.Substring(index + 3);        }
Magic Number,MPTagThat.Dialogues,Preview,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\Preview.cs,BuildPreviewGrid,The following statement contains a magic number: while ((index = parameters.IndexOf("<")) > -1)        {          string parm = parameters.Substring(index' 3);          parms.Add(parm);          parameters = parameters.Substring(index + 3);        }
Magic Number,MPTagThat.Dialogues,Preview,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\Preview.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewPreview.Location = new System.Drawing.Point(13' 12);
Magic Number,MPTagThat.Dialogues,Preview,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\Preview.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewPreview.Location = new System.Drawing.Point(13' 12);
Magic Number,MPTagThat.Dialogues,Preview,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\Preview.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewPreview.Size = new System.Drawing.Size(755' 197);
Magic Number,MPTagThat.Dialogues,Preview,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\Preview.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewPreview.Size = new System.Drawing.Size(755' 197);
Magic Number,MPTagThat.Dialogues,Preview,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\Preview.cs,InitializeComponent,The following statement contains a magic number: this.MaximumSize = new System.Drawing.Size(780' 375);
Magic Number,MPTagThat.Dialogues,Preview,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\Preview.cs,InitializeComponent,The following statement contains a magic number: this.MaximumSize = new System.Drawing.Size(780' 375);
Magic Number,MPTagThat.Dialogues,Preview,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\Preview.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(780' 222);
Magic Number,MPTagThat.Dialogues,Preview,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\Preview.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(780' 222);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.pictureBoxAbout.Location = new System.Drawing.Point(16' 43);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.pictureBoxAbout.Location = new System.Drawing.Point(16' 43);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.pictureBoxAbout.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.pictureBoxAbout.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.pictureBoxAbout.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.pictureBoxAbout.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.pictureBoxAbout.Size = new System.Drawing.Size(217' 199);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.pictureBoxAbout.Size = new System.Drawing.Size(217' 199);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.pictureBoxAbout.TabIndex = 9;
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox1.Location = new System.Drawing.Point(261' 43);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox1.Location = new System.Drawing.Point(261' 43);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox1.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox1.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox1.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox1.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox1.Size = new System.Drawing.Size(411' 62);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox1.Size = new System.Drawing.Size(411' 62);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox1.TabIndex = 10;
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(261' 137);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(261' 137);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.label1.Margin = new System.Windows.Forms.Padding(4' 0' 4' 0);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.label1.Margin = new System.Windows.Forms.Padding(4' 0' 4' 0);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(71' 20);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(71' 20);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.label1.TabIndex = 11;
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(261' 170);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(261' 170);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.label2.Margin = new System.Windows.Forms.Padding(4' 0' 4' 0);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.label2.Margin = new System.Windows.Forms.Padding(4' 0' 4' 0);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(93' 20);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(93' 20);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.label2.TabIndex = 12;
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.lbVersion.Location = new System.Drawing.Point(487' 137);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.lbVersion.Location = new System.Drawing.Point(487' 137);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.lbVersion.Margin = new System.Windows.Forms.Padding(4' 0' 4' 0);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.lbVersion.Margin = new System.Windows.Forms.Padding(4' 0' 4' 0);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.lbVersion.Size = new System.Drawing.Size(57' 20);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.lbVersion.Size = new System.Drawing.Size(57' 20);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.lbVersion.TabIndex = 13;
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.lbDate.Location = new System.Drawing.Point(487' 170);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.lbDate.Location = new System.Drawing.Point(487' 170);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.lbDate.Margin = new System.Windows.Forms.Padding(4' 0' 4' 0);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.lbDate.Margin = new System.Windows.Forms.Padding(4' 0' 4' 0);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.lbDate.Size = new System.Drawing.Size(93' 20);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.lbDate.Size = new System.Drawing.Size(93' 20);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.lbDate.TabIndex = 14;
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.lbStatus.Location = new System.Drawing.Point(261' 223);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.lbStatus.Location = new System.Drawing.Point(261' 223);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.lbStatus.Margin = new System.Windows.Forms.Padding(4' 0' 4' 0);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.lbStatus.Margin = new System.Windows.Forms.Padding(4' 0' 4' 0);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.lbStatus.Size = new System.Drawing.Size(119' 20);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.lbStatus.Size = new System.Drawing.Size(119' 20);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.lbStatus.TabIndex = 15;
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(717' 293);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(717' 293);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MPTagThat.Dialogues,SplashForm,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashForm.cs,InitializeComponent,The following statement contains a magic number: this.Opacity = 0.75;
Magic Number,MPTagThat.Dialogues,SplashScreen,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SplashScreen\SplashScreen.cs,DoRun,The following statement contains a magic number: while (!_stopRequested) //run until stop of splashscreen is requested        {          _frm.TopMost = false;          _frm.BringToFront();            if (oldInfo != _info)          {            _frm.SetInformation(_info);            oldInfo = _info;          }          Thread.Sleep(25);        }
Magic Number,MPTagThat.Dialogues,SwitchDatabase,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SwitchDatabase.cs,btDatabaseAdd_Click,The following statement contains a magic number: if (_databases.Count == 1)        {          databaseNumber = 1;        }        else        {          var name = _databases[_databases.Count - 2].Folder;          databaseNumber = Int32.Parse(name.Substring(2)) + 1;        }
Magic Number,MPTagThat.Dialogues,SwitchDatabase,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SwitchDatabase.cs,btDatabaseAdd_Click,The following statement contains a magic number: if (_databases.Count == 1)        {          databaseNumber = 1;        }        else        {          var name = _databases[_databases.Count - 2].Folder;          databaseNumber = Int32.Parse(name.Substring(2)) + 1;        }
Magic Number,MPTagThat.Dialogues,SwitchDatabase,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SwitchDatabase.cs,InitializeComponent,The following statement contains a magic number: this.btClose.Location = new System.Drawing.Point(260' 351);
Magic Number,MPTagThat.Dialogues,SwitchDatabase,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SwitchDatabase.cs,InitializeComponent,The following statement contains a magic number: this.btClose.Location = new System.Drawing.Point(260' 351);
Magic Number,MPTagThat.Dialogues,SwitchDatabase,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SwitchDatabase.cs,InitializeComponent,The following statement contains a magic number: this.btClose.Size = new System.Drawing.Size(75' 23);
Magic Number,MPTagThat.Dialogues,SwitchDatabase,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SwitchDatabase.cs,InitializeComponent,The following statement contains a magic number: this.btClose.Size = new System.Drawing.Size(75' 23);
Magic Number,MPTagThat.Dialogues,SwitchDatabase,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SwitchDatabase.cs,InitializeComponent,The following statement contains a magic number: this.btClose.TabIndex = 4;
Magic Number,MPTagThat.Dialogues,SwitchDatabase,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SwitchDatabase.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewDatabases.Location = new System.Drawing.Point(30' 30);
Magic Number,MPTagThat.Dialogues,SwitchDatabase,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SwitchDatabase.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewDatabases.Location = new System.Drawing.Point(30' 30);
Magic Number,MPTagThat.Dialogues,SwitchDatabase,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SwitchDatabase.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewDatabases.Size = new System.Drawing.Size(520' 230);
Magic Number,MPTagThat.Dialogues,SwitchDatabase,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SwitchDatabase.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewDatabases.Size = new System.Drawing.Size(520' 230);
Magic Number,MPTagThat.Dialogues,SwitchDatabase,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SwitchDatabase.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewDatabases.TabIndex = 5;
Magic Number,MPTagThat.Dialogues,SwitchDatabase,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SwitchDatabase.cs,InitializeComponent,The following statement contains a magic number: this.DatabaseSwitch.Width = 50;
Magic Number,MPTagThat.Dialogues,SwitchDatabase,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SwitchDatabase.cs,InitializeComponent,The following statement contains a magic number: this.DatabaseDelete.Width = 50;
Magic Number,MPTagThat.Dialogues,SwitchDatabase,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SwitchDatabase.cs,InitializeComponent,The following statement contains a magic number: this.lbDatabaseDescription.Location = new System.Drawing.Point(30' 288);
Magic Number,MPTagThat.Dialogues,SwitchDatabase,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SwitchDatabase.cs,InitializeComponent,The following statement contains a magic number: this.lbDatabaseDescription.Location = new System.Drawing.Point(30' 288);
Magic Number,MPTagThat.Dialogues,SwitchDatabase,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SwitchDatabase.cs,InitializeComponent,The following statement contains a magic number: this.lbDatabaseDescription.Size = new System.Drawing.Size(176' 23);
Magic Number,MPTagThat.Dialogues,SwitchDatabase,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SwitchDatabase.cs,InitializeComponent,The following statement contains a magic number: this.lbDatabaseDescription.Size = new System.Drawing.Size(176' 23);
Magic Number,MPTagThat.Dialogues,SwitchDatabase,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SwitchDatabase.cs,InitializeComponent,The following statement contains a magic number: this.lbDatabaseDescription.TabIndex = 6;
Magic Number,MPTagThat.Dialogues,SwitchDatabase,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SwitchDatabase.cs,InitializeComponent,The following statement contains a magic number: this.tbDatabaseDescription.Location = new System.Drawing.Point(171' 288);
Magic Number,MPTagThat.Dialogues,SwitchDatabase,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SwitchDatabase.cs,InitializeComponent,The following statement contains a magic number: this.tbDatabaseDescription.Location = new System.Drawing.Point(171' 288);
Magic Number,MPTagThat.Dialogues,SwitchDatabase,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SwitchDatabase.cs,InitializeComponent,The following statement contains a magic number: this.tbDatabaseDescription.Size = new System.Drawing.Size(258' 20);
Magic Number,MPTagThat.Dialogues,SwitchDatabase,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SwitchDatabase.cs,InitializeComponent,The following statement contains a magic number: this.tbDatabaseDescription.Size = new System.Drawing.Size(258' 20);
Magic Number,MPTagThat.Dialogues,SwitchDatabase,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SwitchDatabase.cs,InitializeComponent,The following statement contains a magic number: this.tbDatabaseDescription.TabIndex = 7;
Magic Number,MPTagThat.Dialogues,SwitchDatabase,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SwitchDatabase.cs,InitializeComponent,The following statement contains a magic number: this.btDatabaseAdd.Location = new System.Drawing.Point(432' 285);
Magic Number,MPTagThat.Dialogues,SwitchDatabase,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SwitchDatabase.cs,InitializeComponent,The following statement contains a magic number: this.btDatabaseAdd.Location = new System.Drawing.Point(432' 285);
Magic Number,MPTagThat.Dialogues,SwitchDatabase,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SwitchDatabase.cs,InitializeComponent,The following statement contains a magic number: this.btDatabaseAdd.Size = new System.Drawing.Size(118' 23);
Magic Number,MPTagThat.Dialogues,SwitchDatabase,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SwitchDatabase.cs,InitializeComponent,The following statement contains a magic number: this.btDatabaseAdd.Size = new System.Drawing.Size(118' 23);
Magic Number,MPTagThat.Dialogues,SwitchDatabase,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SwitchDatabase.cs,InitializeComponent,The following statement contains a magic number: this.btDatabaseAdd.TabIndex = 8;
Magic Number,MPTagThat.Dialogues,SwitchDatabase,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SwitchDatabase.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(580' 400);
Magic Number,MPTagThat.Dialogues,SwitchDatabase,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\SwitchDatabase.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(580' 400);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,CaseConvert,The following statement contains a magic number: if (checkBoxConvertFileName.Checked)        {          string fileName = ConvertCase(Path.GetFileNameWithoutExtension(track.FileName));            // Now check the length of the filename          if (fileName.Length > 255)          {            log.Debug("Filename too long: {0}"' fileName);            track.Status = 2;            _main.TracksGridView.AddErrorMessage(_main.TracksGridView.View.Rows[rowIndex]'                                                 String.Format("{0}: {1}"'                                                               localisation.ToString("tag2filename"' "NameTooLong")'                                                               fileName));            bErrors = true;          }            if (!bErrors)          {            // Now that we have a correct Filename            track.FileName = string.Format("{0}{1}"' fileName' Path.GetExtension(track.FileName));            track.Changed = true;            _main.TracksGridView.Changed = true;            _main.TracksGridView.SetBackgroundColorChanged(rowIndex);            Options.Songlist[rowIndex] = track;          }        }
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,CaseConvert,The following statement contains a magic number: if (checkBoxConvertFileName.Checked)        {          string fileName = ConvertCase(Path.GetFileNameWithoutExtension(track.FileName));            // Now check the length of the filename          if (fileName.Length > 255)          {            log.Debug("Filename too long: {0}"' fileName);            track.Status = 2;            _main.TracksGridView.AddErrorMessage(_main.TracksGridView.View.Rows[rowIndex]'                                                 String.Format("{0}: {1}"'                                                               localisation.ToString("tag2filename"' "NameTooLong")'                                                               fileName));            bErrors = true;          }            if (!bErrors)          {            // Now that we have a correct Filename            track.FileName = string.Format("{0}{1}"' fileName' Path.GetExtension(track.FileName));            track.Changed = true;            _main.TracksGridView.Changed = true;            _main.TracksGridView.SetBackgroundColorChanged(rowIndex);            Options.Songlist[rowIndex] = track;          }        }
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,ProcessCmdKey,The following statement contains a magic number: if ((int)keyData == 13)   // Handle Enter key as default Apply Button        {          buttonConvert_Click(null' new EventArgs());          return true;        }        else if ((int)keyData == 27)  // Handle Escape to Close the form        {          buttonCancel_Click(null' new EventArgs());          return true;        }
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,ProcessCmdKey,The following statement contains a magic number: if ((int)keyData == 13)   // Handle Enter key as default Apply Button        {          buttonConvert_Click(null' new EventArgs());          return true;        }        else if ((int)keyData == 27)  // Handle Escape to Close the form        {          buttonCancel_Click(null' new EventArgs());          return true;        }
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.tabControlConversion.Location = new System.Drawing.Point(11' 49);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.tabControlConversion.Location = new System.Drawing.Point(11' 49);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.tabControlConversion.Size = new System.Drawing.Size(591' 341);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.tabControlConversion.Size = new System.Drawing.Size(591' 341);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.tabPageSettings.Padding = new System.Windows.Forms.Padding(3);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.tabPageSettings.Size = new System.Drawing.Size(589' 320);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.tabPageSettings.Size = new System.Drawing.Size(589' 320);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxOptions.Location = new System.Drawing.Point(8' 207);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxOptions.Location = new System.Drawing.Point(8' 207);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxOptions.Size = new System.Drawing.Size(563' 100);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxOptions.Size = new System.Drawing.Size(563' 100);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxOptions.TabIndex = 4;
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxAlwaysUpperCaseFirstLetter.Location = new System.Drawing.Point(10' 74);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxAlwaysUpperCaseFirstLetter.Location = new System.Drawing.Point(10' 74);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxAlwaysUpperCaseFirstLetter.Size = new System.Drawing.Size(166' 17);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxAlwaysUpperCaseFirstLetter.Size = new System.Drawing.Size(166' 17);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxAlwaysUpperCaseFirstLetter.TabIndex = 5;
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxReplaceSpaceByUnderscore.Location = new System.Drawing.Point(272' 51);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxReplaceSpaceByUnderscore.Location = new System.Drawing.Point(272' 51);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxReplaceSpaceByUnderscore.Size = new System.Drawing.Size(133' 17);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxReplaceSpaceByUnderscore.Size = new System.Drawing.Size(133' 17);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxReplaceSpaceByUnderscore.TabIndex = 4;
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxReplaceUnderscoreBySpace.Location = new System.Drawing.Point(10' 51);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxReplaceUnderscoreBySpace.Location = new System.Drawing.Point(10' 51);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxReplaceUnderscoreBySpace.Size = new System.Drawing.Size(133' 17);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxReplaceUnderscoreBySpace.Size = new System.Drawing.Size(133' 17);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxReplaceUnderscoreBySpace.TabIndex = 3;
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxReplaceSpaceby20.Location = new System.Drawing.Point(272' 28);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxReplaceSpaceby20.Location = new System.Drawing.Point(272' 28);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxReplaceSpaceby20.Size = new System.Drawing.Size(147' 17);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxReplaceSpaceby20.Size = new System.Drawing.Size(147' 17);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxReplaceSpaceby20.TabIndex = 2;
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxReplace20bySpace.Location = new System.Drawing.Point(10' 28);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxReplace20bySpace.Location = new System.Drawing.Point(10' 28);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxReplace20bySpace.Size = new System.Drawing.Size(147' 17);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxReplace20bySpace.Size = new System.Drawing.Size(147' 17);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxMethod.Location = new System.Drawing.Point(278' 55);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxMethod.Location = new System.Drawing.Point(278' 55);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxMethod.Size = new System.Drawing.Size(293' 145);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxMethod.Size = new System.Drawing.Size(293' 145);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxMethod.TabIndex = 3;
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonAllFirstLetterUpperCase.Location = new System.Drawing.Point(6' 116);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonAllFirstLetterUpperCase.Location = new System.Drawing.Point(6' 116);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonAllFirstLetterUpperCase.Size = new System.Drawing.Size(147' 17);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonAllFirstLetterUpperCase.Size = new System.Drawing.Size(147' 17);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonAllFirstLetterUpperCase.TabIndex = 3;
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonFirstLetterUpperCase.Location = new System.Drawing.Point(6' 85);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonFirstLetterUpperCase.Location = new System.Drawing.Point(6' 85);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonFirstLetterUpperCase.Size = new System.Drawing.Size(133' 17);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonFirstLetterUpperCase.Size = new System.Drawing.Size(133' 17);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonFirstLetterUpperCase.TabIndex = 2;
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonAllUpperCase.Location = new System.Drawing.Point(6' 54);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonAllUpperCase.Location = new System.Drawing.Point(6' 54);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonAllUpperCase.Size = new System.Drawing.Size(95' 17);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonAllUpperCase.Size = new System.Drawing.Size(95' 17);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonAllLowerCase.Location = new System.Drawing.Point(6' 23);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonAllLowerCase.Location = new System.Drawing.Point(6' 23);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonAllLowerCase.Size = new System.Drawing.Size(95' 17);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonAllLowerCase.Size = new System.Drawing.Size(95' 17);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxConvert.Location = new System.Drawing.Point(8' 55);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxConvert.Location = new System.Drawing.Point(8' 55);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxConvert.Size = new System.Drawing.Size(255' 145);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxConvert.Size = new System.Drawing.Size(255' 145);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxConvert.TabIndex = 2;
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxComment.Location = new System.Drawing.Point(10' 115);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxComment.Location = new System.Drawing.Point(10' 115);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxComment.Size = new System.Drawing.Size(70' 17);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxComment.Size = new System.Drawing.Size(70' 17);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxComment.TabIndex = 4;
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxTitle.Location = new System.Drawing.Point(10' 92);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxTitle.Location = new System.Drawing.Point(10' 92);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxTitle.Size = new System.Drawing.Size(46' 17);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxTitle.Size = new System.Drawing.Size(46' 17);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxTitle.TabIndex = 3;
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxAlbum.Location = new System.Drawing.Point(10' 69);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxAlbum.Location = new System.Drawing.Point(10' 69);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxAlbum.Size = new System.Drawing.Size(55' 17);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxAlbum.Size = new System.Drawing.Size(55' 17);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxAlbum.TabIndex = 2;
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxAlbumArtist.Location = new System.Drawing.Point(10' 46);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxAlbumArtist.Location = new System.Drawing.Point(10' 46);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxAlbumArtist.Size = new System.Drawing.Size(78' 17);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxAlbumArtist.Size = new System.Drawing.Size(78' 17);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxArtist.Location = new System.Drawing.Point(10' 23);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxArtist.Location = new System.Drawing.Point(10' 23);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxArtist.Size = new System.Drawing.Size(49' 17);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxArtist.Size = new System.Drawing.Size(49' 17);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxConvertTags.Location = new System.Drawing.Point(284' 21);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxConvertTags.Location = new System.Drawing.Point(284' 21);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxConvertTags.Size = new System.Drawing.Size(90' 17);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxConvertTags.Size = new System.Drawing.Size(90' 17);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxConvertFileName.Location = new System.Drawing.Point(18' 21);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxConvertFileName.Location = new System.Drawing.Point(18' 21);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxConvertFileName.Size = new System.Drawing.Size(108' 17);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxConvertFileName.Size = new System.Drawing.Size(108' 17);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.Exceptions.Padding = new System.Windows.Forms.Padding(3);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.Exceptions.Size = new System.Drawing.Size(589' 320);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.Exceptions.Size = new System.Drawing.Size(589' 320);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.buttonRemoveException.Location = new System.Drawing.Point(397' 53);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.buttonRemoveException.Location = new System.Drawing.Point(397' 53);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.buttonRemoveException.Size = new System.Drawing.Size(171' 23);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.buttonRemoveException.Size = new System.Drawing.Size(171' 23);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.buttonRemoveException.TabIndex = 3;
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.buttonAddException.Location = new System.Drawing.Point(397' 16);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.buttonAddException.Location = new System.Drawing.Point(397' 16);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.buttonAddException.Size = new System.Drawing.Size(171' 23);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.buttonAddException.Size = new System.Drawing.Size(171' 23);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.buttonAddException.TabIndex = 2;
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.tbException.Location = new System.Drawing.Point(7' 16);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.tbException.Location = new System.Drawing.Point(7' 16);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.tbException.Size = new System.Drawing.Size(367' 20);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.tbException.Size = new System.Drawing.Size(367' 20);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.listBoxExceptions.Location = new System.Drawing.Point(8' 53);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.listBoxExceptions.Location = new System.Drawing.Point(8' 53);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.listBoxExceptions.Size = new System.Drawing.Size(366' 251);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.listBoxExceptions.Size = new System.Drawing.Size(366' 251);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.buttonConvert.Location = new System.Drawing.Point(437' 9);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.buttonConvert.Location = new System.Drawing.Point(437' 9);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.buttonConvert.Size = new System.Drawing.Size(75' 23);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.buttonConvert.Size = new System.Drawing.Size(75' 23);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.buttonCancel.Location = new System.Drawing.Point(518' 9);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.buttonCancel.Location = new System.Drawing.Point(518' 9);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.buttonCancel.Size = new System.Drawing.Size(75' 23);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.buttonCancel.Size = new System.Drawing.Size(75' 23);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.buttonCancel.TabIndex = 2;
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.labelHeader.Location = new System.Drawing.Point(7' 9);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.labelHeader.Location = new System.Drawing.Point(7' 9);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.labelHeader.Size = new System.Drawing.Size(62' 20);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.labelHeader.Size = new System.Drawing.Size(62' 20);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.labelHeader.TabIndex = 23;
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.mptPanel1.Size = new System.Drawing.Size(614' 419);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.mptPanel1.Size = new System.Drawing.Size(614' 419);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.mptPanel1.TabIndex = 24;
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(614' 419);
Magic Number,MPTagThat.CaseConversion,CaseConversion,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\CaseConversion.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(614' 419);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,FileName2Tag,The following statement contains a magic number: foreach (DataGridViewRow row in tracksGrid.Rows)        {          if (!row.Selected)            continue;            try          {            _main.TracksGridView.Changed = true;            _main.TracksGridView.SetBackgroundColorChanged(row.Index);            track = Options.Songlist[row.Index];            track.Changed = true;              ReplaceParametersWithValues(parameters' false);          }          catch (Exception ex)          {            log.Error("Error applying changes from Filename To Tag: {0} stack: {1}"' ex.Message' ex.StackTrace);            Options.Songlist[row.Index].Status = 2;            _main.TracksGridView.AddErrorMessage(row' localisation.ToString("TagAndRename"' "InvalidParm"));            bErrors = true;          }        }
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,lblParm_Click,The following statement contains a magic number: if (parameter != String.Empty)        {          text = text.Insert(cursorPos' parameter);          cbFormat.Text = text;          if (label.Name == "lblParmFolder")            cursorPos += 1;          else            cursorPos += 3;            cbFormat.SelectionStart = cursorPos;        }
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,ProcessCmdKey,The following statement contains a magic number: if ((int)keyData == 13)   // Handle Enter key as default Apply Button        {          btApply_Click(null' new EventArgs());          return true;        }        else if ((int)keyData == 27)  // Handle Escape to Close the form        {          btCancel_Click(null' new EventArgs());          return true;        }
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,ProcessCmdKey,The following statement contains a magic number: if ((int)keyData == 13)   // Handle Enter key as default Apply Button        {          btApply_Click(null' new EventArgs());          return true;        }        else if ((int)keyData == 27)  // Handle Escape to Close the form        {          btCancel_Click(null' new EventArgs());          return true;        }
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxParm.Location = new System.Drawing.Point(8' 9);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxParm.Location = new System.Drawing.Point(8' 9);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxParm.Size = new System.Drawing.Size(724' 170);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxParm.Size = new System.Drawing.Size(724' 170);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxParm.TabIndex = 21;
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblModifiedBy.Location = new System.Drawing.Point(6' 119);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblModifiedBy.Location = new System.Drawing.Point(6' 119);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblModifiedBy.Size = new System.Drawing.Size(141' 13);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblModifiedBy.Size = new System.Drawing.Size(141' 13);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblModifiedBy.TabIndex = 18;
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblBPM.Location = new System.Drawing.Point(271' 119);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblBPM.Location = new System.Drawing.Point(271' 119);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblBPM.Size = new System.Drawing.Size(61' 13);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblBPM.Size = new System.Drawing.Size(61' 13);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblBPM.TabIndex = 17;
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblSubTitle.Location = new System.Drawing.Point(533' 99);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblSubTitle.Location = new System.Drawing.Point(533' 99);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblSubTitle.Size = new System.Drawing.Size(77' 13);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblSubTitle.Size = new System.Drawing.Size(77' 13);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblSubTitle.TabIndex = 16;
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblContentGroup.Location = new System.Drawing.Point(533' 78);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblContentGroup.Location = new System.Drawing.Point(533' 78);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblContentGroup.Size = new System.Drawing.Size(108' 13);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblContentGroup.Size = new System.Drawing.Size(108' 13);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblContentGroup.TabIndex = 15;
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblComposer.Location = new System.Drawing.Point(533' 58);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblComposer.Location = new System.Drawing.Point(533' 58);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblComposer.Size = new System.Drawing.Size(86' 13);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblComposer.Size = new System.Drawing.Size(86' 13);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblComposer.TabIndex = 14;
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblConductor.Location = new System.Drawing.Point(271' 58);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblConductor.Location = new System.Drawing.Point(271' 58);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblConductor.Size = new System.Drawing.Size(88' 13);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblConductor.Size = new System.Drawing.Size(88' 13);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblConductor.TabIndex = 13;
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmFolder.Location = new System.Drawing.Point(11' 143);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmFolder.Location = new System.Drawing.Point(11' 143);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmFolder.Size = new System.Drawing.Size(391' 13);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmFolder.Size = new System.Drawing.Size(391' 13);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmFolder.TabIndex = 12;
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmUnused.Location = new System.Drawing.Point(533' 119);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmUnused.Location = new System.Drawing.Point(533' 119);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmUnused.Size = new System.Drawing.Size(75' 13);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmUnused.Size = new System.Drawing.Size(75' 13);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmUnused.TabIndex = 11;
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmComment.Location = new System.Drawing.Point(533' 38);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmComment.Location = new System.Drawing.Point(533' 38);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmComment.Size = new System.Drawing.Size(82' 13);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmComment.Size = new System.Drawing.Size(82' 13);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmComment.TabIndex = 10;
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblAlbumArtist.Location = new System.Drawing.Point(6' 58);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblAlbumArtist.Location = new System.Drawing.Point(6' 58);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblAlbumArtist.Size = new System.Drawing.Size(151' 13);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblAlbumArtist.Size = new System.Drawing.Size(151' 13);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblAlbumArtist.TabIndex = 9;
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmGenre.Location = new System.Drawing.Point(271' 38);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmGenre.Location = new System.Drawing.Point(271' 38);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmGenre.Size = new System.Drawing.Size(68' 13);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmGenre.Size = new System.Drawing.Size(68' 13);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmGenre.TabIndex = 8;
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmDiscTotal.Location = new System.Drawing.Point(271' 99);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmDiscTotal.Location = new System.Drawing.Point(271' 99);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmDiscTotal.Size = new System.Drawing.Size(110' 13);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmDiscTotal.Size = new System.Drawing.Size(110' 13);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmDiscTotal.TabIndex = 7;
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmDisc.Location = new System.Drawing.Point(6' 99);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmDisc.Location = new System.Drawing.Point(6' 99);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmDisc.Size = new System.Drawing.Size(100' 13);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmDisc.Size = new System.Drawing.Size(100' 13);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmDisc.TabIndex = 6;
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTrackTotal.Location = new System.Drawing.Point(271' 78);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTrackTotal.Location = new System.Drawing.Point(271' 78);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTrackTotal.Size = new System.Drawing.Size(115' 13);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTrackTotal.Size = new System.Drawing.Size(115' 13);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTrackTotal.TabIndex = 5;
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTrack.Location = new System.Drawing.Point(6' 78);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTrack.Location = new System.Drawing.Point(6' 78);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTrack.Size = new System.Drawing.Size(106' 13);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTrack.Size = new System.Drawing.Size(106' 13);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTrack.TabIndex = 4;
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmYear.Location = new System.Drawing.Point(6' 38);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmYear.Location = new System.Drawing.Point(6' 38);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmYear.Size = new System.Drawing.Size(60' 13);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmYear.Size = new System.Drawing.Size(60' 13);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmYear.TabIndex = 3;
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmAlbum.Location = new System.Drawing.Point(533' 17);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmAlbum.Location = new System.Drawing.Point(533' 17);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmAlbum.Size = new System.Drawing.Size(67' 13);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmAlbum.Size = new System.Drawing.Size(67' 13);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmAlbum.TabIndex = 2;
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTitle.Location = new System.Drawing.Point(271' 16);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTitle.Location = new System.Drawing.Point(271' 16);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTitle.Size = new System.Drawing.Size(58' 13);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTitle.Size = new System.Drawing.Size(58' 13);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmArtist.Location = new System.Drawing.Point(6' 17);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmArtist.Location = new System.Drawing.Point(6' 17);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmArtist.Size = new System.Drawing.Size(61' 13);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.lblParmArtist.Size = new System.Drawing.Size(61' 13);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.btApply.Location = new System.Drawing.Point(552' 22);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.btApply.Location = new System.Drawing.Point(552' 22);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.btApply.Size = new System.Drawing.Size(99' 23);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.btApply.Size = new System.Drawing.Size(99' 23);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.btCancel.Location = new System.Drawing.Point(666' 22);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.btCancel.Location = new System.Drawing.Point(666' 22);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.btCancel.Size = new System.Drawing.Size(99' 23);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.btCancel.Size = new System.Drawing.Size(99' 23);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.btCancel.TabIndex = 2;
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.labelHeader.Location = new System.Drawing.Point(24' 22);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.labelHeader.Location = new System.Drawing.Point(24' 22);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.labelHeader.Size = new System.Drawing.Size(62' 20);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.labelHeader.Size = new System.Drawing.Size(62' 20);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.labelHeader.TabIndex = 22;
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.GroupBoxFormat.Location = new System.Drawing.Point(19' 54);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.GroupBoxFormat.Location = new System.Drawing.Point(19' 54);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.GroupBoxFormat.Size = new System.Drawing.Size(744' 83);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.GroupBoxFormat.Size = new System.Drawing.Size(744' 83);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.GroupBoxFormat.TabIndex = 23;
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.btReview.Location = new System.Drawing.Point(421' 49);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.btReview.Location = new System.Drawing.Point(421' 49);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.btReview.Size = new System.Drawing.Size(200' 23);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.btReview.Size = new System.Drawing.Size(200' 23);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.btReview.TabIndex = 17;
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.btRemoveFormat.Location = new System.Drawing.Point(215' 49);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.btRemoveFormat.Location = new System.Drawing.Point(215' 49);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.btRemoveFormat.Size = new System.Drawing.Size(200' 23);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.btRemoveFormat.Size = new System.Drawing.Size(200' 23);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.btRemoveFormat.TabIndex = 16;
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.btAddFormat.Location = new System.Drawing.Point(9' 49);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.btAddFormat.Location = new System.Drawing.Point(9' 49);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.btAddFormat.Size = new System.Drawing.Size(200' 23);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.btAddFormat.Size = new System.Drawing.Size(200' 23);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.btAddFormat.TabIndex = 15;
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.cbFormat.Location = new System.Drawing.Point(9' 22);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.cbFormat.Location = new System.Drawing.Point(9' 22);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.cbFormat.Size = new System.Drawing.Size(610' 21);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.cbFormat.Size = new System.Drawing.Size(610' 21);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.cbFormat.TabIndex = 14;
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.cbFormat.TextEditorWidth = 591;
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Size = new System.Drawing.Size(780' 375);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Size = new System.Drawing.Size(780' 375);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.panel1.TabIndex = 24;
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.tabControl1.Location = new System.Drawing.Point(19' 154);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.tabControl1.Location = new System.Drawing.Point(19' 154);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.tabControl1.Size = new System.Drawing.Size(744' 210);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.tabControl1.Size = new System.Drawing.Size(744' 210);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.tabControl1.TabIndex = 22;
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.tabPagePreview.Size = new System.Drawing.Size(742' 189);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.tabPagePreview.Size = new System.Drawing.Size(742' 189);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.tabPageParameter.Size = new System.Drawing.Size(742' 189);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.tabPageParameter.Size = new System.Drawing.Size(742' 189);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.MaximumSize = new System.Drawing.Size(780' 375);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.MaximumSize = new System.Drawing.Size(780' 375);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size(780' 375);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size(780' 375);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(780' 375);
Magic Number,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(780' 375);
Magic Number,MPTagThat.FileNameToTag,ParameterPart,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\ParameterPart.cs,ParameterPart,The following statement contains a magic number: for (int i = 0; i <= upperBound; i++)        {          if ((i == upperBound) | (delimiters[i] != ""))          {            parms.Add(str.Substring(str.IndexOf("<")' 3));            str = str.Substring(str.IndexOf("<") + 3);          }        }
Magic Number,MPTagThat.FileNameToTag,ParameterPart,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\ParameterPart.cs,ParameterPart,The following statement contains a magic number: for (int i = 0; i <= upperBound; i++)        {          if ((i == upperBound) | (delimiters[i] != ""))          {            parms.Add(str.Substring(str.IndexOf("<")' 3));            str = str.Substring(str.IndexOf("<") + 3);          }        }
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.lvAlbumTracks.Location = new System.Drawing.Point(22' 212);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.lvAlbumTracks.Location = new System.Drawing.Point(22' 212);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.lvAlbumTracks.Size = new System.Drawing.Size(315' 298);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.lvAlbumTracks.Size = new System.Drawing.Size(315' 298);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.lvAlbumTracks.TabIndex = 10;
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.chTrackNum.Width = 43;
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.chTitle.Width = 231;
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.lvDiscTracks.Location = new System.Drawing.Point(367' 212);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.lvDiscTracks.Location = new System.Drawing.Point(367' 212);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.lvDiscTracks.Size = new System.Drawing.Size(352' 298);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.lvDiscTracks.Size = new System.Drawing.Size(352' 298);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.lvDiscTracks.TabIndex = 11;
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.chFileName.Width = 250;
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.btCancel.Location = new System.Drawing.Point(664' 520);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.btCancel.Location = new System.Drawing.Point(664' 520);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.btCancel.Size = new System.Drawing.Size(100' 23);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.btCancel.Size = new System.Drawing.Size(100' 23);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.btCancel.TabIndex = 6;
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.btContinue.Location = new System.Drawing.Point(558' 520);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.btContinue.Location = new System.Drawing.Point(558' 520);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.btContinue.Size = new System.Drawing.Size(100' 23);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.btContinue.Size = new System.Drawing.Size(100' 23);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.btContinue.TabIndex = 5;
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.lbTracksToTag.Location = new System.Drawing.Point(364' 192);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.lbTracksToTag.Location = new System.Drawing.Point(364' 192);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.lbTracksToTag.Size = new System.Drawing.Size(70' 13);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.lbTracksToTag.Size = new System.Drawing.Size(70' 13);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.lbTracksToTag.TabIndex = 9;
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.lbAlbumTracks.Location = new System.Drawing.Point(19' 192);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.lbAlbumTracks.Location = new System.Drawing.Point(19' 192);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.lbAlbumTracks.Size = new System.Drawing.Size(86' 13);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.lbAlbumTracks.Size = new System.Drawing.Size(86' 13);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.lbAlbumTracks.TabIndex = 8;
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.btUp.Location = new System.Drawing.Point(725' 339);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.btUp.Location = new System.Drawing.Point(725' 339);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.btUp.Size = new System.Drawing.Size(50' 23);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.btUp.Size = new System.Drawing.Size(50' 23);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.btUp.TabIndex = 7;
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.btDown.Location = new System.Drawing.Point(725' 368);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.btDown.Location = new System.Drawing.Point(725' 368);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.btDown.Size = new System.Drawing.Size(50' 23);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.btDown.Size = new System.Drawing.Size(50' 23);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.btDown.TabIndex = 8;
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.labelHeader.Location = new System.Drawing.Point(18' 22);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.labelHeader.Location = new System.Drawing.Point(18' 22);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.labelHeader.Size = new System.Drawing.Size(62' 20);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.labelHeader.Size = new System.Drawing.Size(62' 20);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.labelHeader.TabIndex = 23;
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.GroupBoxAlbumDetails.Location = new System.Drawing.Point(22' 54);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.GroupBoxAlbumDetails.Location = new System.Drawing.Point(22' 54);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.GroupBoxAlbumDetails.Size = new System.Drawing.Size(742' 121);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.GroupBoxAlbumDetails.Size = new System.Drawing.Size(742' 121);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.GroupBoxAlbumDetails.TabIndex = 24;
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.pictureBoxCover.Location = new System.Drawing.Point(634' 13);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.pictureBoxCover.Location = new System.Drawing.Point(634' 13);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.pictureBoxCover.Size = new System.Drawing.Size(100' 100);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.pictureBoxCover.Size = new System.Drawing.Size(100' 100);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.pictureBoxCover.TabIndex = 13;
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.cbGenre.Location = new System.Drawing.Point(226' 86);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.cbGenre.Location = new System.Drawing.Point(226' 86);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.cbGenre.Size = new System.Drawing.Size(390' 21);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.cbGenre.Size = new System.Drawing.Size(390' 21);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.cbGenre.TabIndex = 12;
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.tbYear.Location = new System.Drawing.Point(71' 86);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.tbYear.Location = new System.Drawing.Point(71' 86);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.tbYear.Size = new System.Drawing.Size(89' 20);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.tbYear.Size = new System.Drawing.Size(89' 20);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.tbYear.TabIndex = 10;
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.tbAlbum.Location = new System.Drawing.Point(71' 54);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.tbAlbum.Location = new System.Drawing.Point(71' 54);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.tbAlbum.Size = new System.Drawing.Size(545' 20);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.tbAlbum.Size = new System.Drawing.Size(545' 20);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.tbAlbum.TabIndex = 9;
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.tbArtist.Location = new System.Drawing.Point(71' 22);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.tbArtist.Location = new System.Drawing.Point(71' 22);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.tbArtist.Size = new System.Drawing.Size(545' 20);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.tbArtist.Size = new System.Drawing.Size(545' 20);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.tbArtist.TabIndex = 6;
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.lbGenre.Location = new System.Drawing.Point(181' 89);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.lbGenre.Location = new System.Drawing.Point(181' 89);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.lbGenre.Size = new System.Drawing.Size(39' 13);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.lbGenre.Size = new System.Drawing.Size(39' 13);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.lbGenre.TabIndex = 11;
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.lbYear.Location = new System.Drawing.Point(9' 89);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.lbYear.Location = new System.Drawing.Point(9' 89);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.lbYear.Size = new System.Drawing.Size(32' 13);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.lbYear.Size = new System.Drawing.Size(32' 13);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.lbYear.TabIndex = 8;
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.lbAlbum.Location = new System.Drawing.Point(9' 57);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.lbAlbum.Location = new System.Drawing.Point(9' 57);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.lbAlbum.Size = new System.Drawing.Size(39' 13);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.lbAlbum.Size = new System.Drawing.Size(39' 13);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.lbAlbum.TabIndex = 7;
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.lbArtist.Location = new System.Drawing.Point(9' 25);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.lbArtist.Location = new System.Drawing.Point(9' 25);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.lbArtist.Size = new System.Drawing.Size(33' 13);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.lbArtist.Size = new System.Drawing.Size(33' 13);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.lbArtist.TabIndex = 5;
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(787' 555);
Magic Number,MPTagThat.InternetLookup,AlbumDetails,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumDetails.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(787' 555);
Magic Number,MPTagThat.InternetLookup,AlbumSearchResult,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumSearchResult.cs,InitializeComponent,The following statement contains a magic number: this.lvAlbumSearchResult.Location = new System.Drawing.Point(22' 54);
Magic Number,MPTagThat.InternetLookup,AlbumSearchResult,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumSearchResult.cs,InitializeComponent,The following statement contains a magic number: this.lvAlbumSearchResult.Location = new System.Drawing.Point(22' 54);
Magic Number,MPTagThat.InternetLookup,AlbumSearchResult,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumSearchResult.cs,InitializeComponent,The following statement contains a magic number: this.lvAlbumSearchResult.Size = new System.Drawing.Size(723' 432);
Magic Number,MPTagThat.InternetLookup,AlbumSearchResult,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumSearchResult.cs,InitializeComponent,The following statement contains a magic number: this.lvAlbumSearchResult.Size = new System.Drawing.Size(723' 432);
Magic Number,MPTagThat.InternetLookup,AlbumSearchResult,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumSearchResult.cs,InitializeComponent,The following statement contains a magic number: this.chArtist.Width = 186;
Magic Number,MPTagThat.InternetLookup,AlbumSearchResult,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumSearchResult.cs,InitializeComponent,The following statement contains a magic number: this.chTitle.Width = 281;
Magic Number,MPTagThat.InternetLookup,AlbumSearchResult,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumSearchResult.cs,InitializeComponent,The following statement contains a magic number: this.chTracks.Width = 55;
Magic Number,MPTagThat.InternetLookup,AlbumSearchResult,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumSearchResult.cs,InitializeComponent,The following statement contains a magic number: this.chYear.Width = 55;
Magic Number,MPTagThat.InternetLookup,AlbumSearchResult,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumSearchResult.cs,InitializeComponent,The following statement contains a magic number: this.chLabel.Width = 141;
Magic Number,MPTagThat.InternetLookup,AlbumSearchResult,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumSearchResult.cs,InitializeComponent,The following statement contains a magic number: this.btCancel.Location = new System.Drawing.Point(645' 501);
Magic Number,MPTagThat.InternetLookup,AlbumSearchResult,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumSearchResult.cs,InitializeComponent,The following statement contains a magic number: this.btCancel.Location = new System.Drawing.Point(645' 501);
Magic Number,MPTagThat.InternetLookup,AlbumSearchResult,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumSearchResult.cs,InitializeComponent,The following statement contains a magic number: this.btCancel.Size = new System.Drawing.Size(100' 23);
Magic Number,MPTagThat.InternetLookup,AlbumSearchResult,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumSearchResult.cs,InitializeComponent,The following statement contains a magic number: this.btCancel.Size = new System.Drawing.Size(100' 23);
Magic Number,MPTagThat.InternetLookup,AlbumSearchResult,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumSearchResult.cs,InitializeComponent,The following statement contains a magic number: this.btCancel.TabIndex = 7;
Magic Number,MPTagThat.InternetLookup,AlbumSearchResult,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumSearchResult.cs,InitializeComponent,The following statement contains a magic number: this.btContinue.Location = new System.Drawing.Point(539' 501);
Magic Number,MPTagThat.InternetLookup,AlbumSearchResult,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumSearchResult.cs,InitializeComponent,The following statement contains a magic number: this.btContinue.Location = new System.Drawing.Point(539' 501);
Magic Number,MPTagThat.InternetLookup,AlbumSearchResult,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumSearchResult.cs,InitializeComponent,The following statement contains a magic number: this.btContinue.Size = new System.Drawing.Size(100' 23);
Magic Number,MPTagThat.InternetLookup,AlbumSearchResult,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumSearchResult.cs,InitializeComponent,The following statement contains a magic number: this.btContinue.Size = new System.Drawing.Size(100' 23);
Magic Number,MPTagThat.InternetLookup,AlbumSearchResult,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumSearchResult.cs,InitializeComponent,The following statement contains a magic number: this.btContinue.TabIndex = 6;
Magic Number,MPTagThat.InternetLookup,AlbumSearchResult,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumSearchResult.cs,InitializeComponent,The following statement contains a magic number: this.labelHeader.Location = new System.Drawing.Point(18' 22);
Magic Number,MPTagThat.InternetLookup,AlbumSearchResult,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumSearchResult.cs,InitializeComponent,The following statement contains a magic number: this.labelHeader.Location = new System.Drawing.Point(18' 22);
Magic Number,MPTagThat.InternetLookup,AlbumSearchResult,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumSearchResult.cs,InitializeComponent,The following statement contains a magic number: this.labelHeader.Size = new System.Drawing.Size(62' 20);
Magic Number,MPTagThat.InternetLookup,AlbumSearchResult,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumSearchResult.cs,InitializeComponent,The following statement contains a magic number: this.labelHeader.Size = new System.Drawing.Size(62' 20);
Magic Number,MPTagThat.InternetLookup,AlbumSearchResult,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumSearchResult.cs,InitializeComponent,The following statement contains a magic number: this.labelHeader.TabIndex = 23;
Magic Number,MPTagThat.InternetLookup,AlbumSearchResult,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumSearchResult.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(768' 544);
Magic Number,MPTagThat.InternetLookup,AlbumSearchResult,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\AlbumSearchResult.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(768' 544);
Magic Number,MPTagThat.InternetLookup,ArtistAlbumDialog,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\ArtistAlbumDialog.cs,InitializeComponent,The following statement contains a magic number: this.mptLabel1.Location = new System.Drawing.Point(22' 55);
Magic Number,MPTagThat.InternetLookup,ArtistAlbumDialog,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\ArtistAlbumDialog.cs,InitializeComponent,The following statement contains a magic number: this.mptLabel1.Location = new System.Drawing.Point(22' 55);
Magic Number,MPTagThat.InternetLookup,ArtistAlbumDialog,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\ArtistAlbumDialog.cs,InitializeComponent,The following statement contains a magic number: this.mptLabel1.Size = new System.Drawing.Size(33' 13);
Magic Number,MPTagThat.InternetLookup,ArtistAlbumDialog,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\ArtistAlbumDialog.cs,InitializeComponent,The following statement contains a magic number: this.mptLabel1.Size = new System.Drawing.Size(33' 13);
Magic Number,MPTagThat.InternetLookup,ArtistAlbumDialog,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\ArtistAlbumDialog.cs,InitializeComponent,The following statement contains a magic number: this.mptLabel2.Location = new System.Drawing.Point(22' 91);
Magic Number,MPTagThat.InternetLookup,ArtistAlbumDialog,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\ArtistAlbumDialog.cs,InitializeComponent,The following statement contains a magic number: this.mptLabel2.Location = new System.Drawing.Point(22' 91);
Magic Number,MPTagThat.InternetLookup,ArtistAlbumDialog,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\ArtistAlbumDialog.cs,InitializeComponent,The following statement contains a magic number: this.mptLabel2.Size = new System.Drawing.Size(39' 13);
Magic Number,MPTagThat.InternetLookup,ArtistAlbumDialog,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\ArtistAlbumDialog.cs,InitializeComponent,The following statement contains a magic number: this.mptLabel2.Size = new System.Drawing.Size(39' 13);
Magic Number,MPTagThat.InternetLookup,ArtistAlbumDialog,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\ArtistAlbumDialog.cs,InitializeComponent,The following statement contains a magic number: this.textBoxArtist.Location = new System.Drawing.Point(81' 52);
Magic Number,MPTagThat.InternetLookup,ArtistAlbumDialog,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\ArtistAlbumDialog.cs,InitializeComponent,The following statement contains a magic number: this.textBoxArtist.Location = new System.Drawing.Point(81' 52);
Magic Number,MPTagThat.InternetLookup,ArtistAlbumDialog,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\ArtistAlbumDialog.cs,InitializeComponent,The following statement contains a magic number: this.textBoxArtist.Size = new System.Drawing.Size(328' 20);
Magic Number,MPTagThat.InternetLookup,ArtistAlbumDialog,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\ArtistAlbumDialog.cs,InitializeComponent,The following statement contains a magic number: this.textBoxArtist.Size = new System.Drawing.Size(328' 20);
Magic Number,MPTagThat.InternetLookup,ArtistAlbumDialog,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\ArtistAlbumDialog.cs,InitializeComponent,The following statement contains a magic number: this.textBoxArtist.TabIndex = 2;
Magic Number,MPTagThat.InternetLookup,ArtistAlbumDialog,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\ArtistAlbumDialog.cs,InitializeComponent,The following statement contains a magic number: this.textBoxAlbum.Location = new System.Drawing.Point(81' 88);
Magic Number,MPTagThat.InternetLookup,ArtistAlbumDialog,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\ArtistAlbumDialog.cs,InitializeComponent,The following statement contains a magic number: this.textBoxAlbum.Location = new System.Drawing.Point(81' 88);
Magic Number,MPTagThat.InternetLookup,ArtistAlbumDialog,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\ArtistAlbumDialog.cs,InitializeComponent,The following statement contains a magic number: this.textBoxAlbum.Size = new System.Drawing.Size(328' 20);
Magic Number,MPTagThat.InternetLookup,ArtistAlbumDialog,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\ArtistAlbumDialog.cs,InitializeComponent,The following statement contains a magic number: this.textBoxAlbum.Size = new System.Drawing.Size(328' 20);
Magic Number,MPTagThat.InternetLookup,ArtistAlbumDialog,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\ArtistAlbumDialog.cs,InitializeComponent,The following statement contains a magic number: this.textBoxAlbum.TabIndex = 3;
Magic Number,MPTagThat.InternetLookup,ArtistAlbumDialog,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\ArtistAlbumDialog.cs,InitializeComponent,The following statement contains a magic number: this.btContinue.Location = new System.Drawing.Point(203' 123);
Magic Number,MPTagThat.InternetLookup,ArtistAlbumDialog,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\ArtistAlbumDialog.cs,InitializeComponent,The following statement contains a magic number: this.btContinue.Location = new System.Drawing.Point(203' 123);
Magic Number,MPTagThat.InternetLookup,ArtistAlbumDialog,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\ArtistAlbumDialog.cs,InitializeComponent,The following statement contains a magic number: this.btContinue.Size = new System.Drawing.Size(100' 23);
Magic Number,MPTagThat.InternetLookup,ArtistAlbumDialog,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\ArtistAlbumDialog.cs,InitializeComponent,The following statement contains a magic number: this.btContinue.Size = new System.Drawing.Size(100' 23);
Magic Number,MPTagThat.InternetLookup,ArtistAlbumDialog,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\ArtistAlbumDialog.cs,InitializeComponent,The following statement contains a magic number: this.btContinue.TabIndex = 4;
Magic Number,MPTagThat.InternetLookup,ArtistAlbumDialog,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\ArtistAlbumDialog.cs,InitializeComponent,The following statement contains a magic number: this.btCancel.Location = new System.Drawing.Point(309' 123);
Magic Number,MPTagThat.InternetLookup,ArtistAlbumDialog,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\ArtistAlbumDialog.cs,InitializeComponent,The following statement contains a magic number: this.btCancel.Location = new System.Drawing.Point(309' 123);
Magic Number,MPTagThat.InternetLookup,ArtistAlbumDialog,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\ArtistAlbumDialog.cs,InitializeComponent,The following statement contains a magic number: this.btCancel.Size = new System.Drawing.Size(100' 23);
Magic Number,MPTagThat.InternetLookup,ArtistAlbumDialog,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\ArtistAlbumDialog.cs,InitializeComponent,The following statement contains a magic number: this.btCancel.Size = new System.Drawing.Size(100' 23);
Magic Number,MPTagThat.InternetLookup,ArtistAlbumDialog,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\ArtistAlbumDialog.cs,InitializeComponent,The following statement contains a magic number: this.btCancel.TabIndex = 5;
Magic Number,MPTagThat.InternetLookup,ArtistAlbumDialog,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\ArtistAlbumDialog.cs,InitializeComponent,The following statement contains a magic number: this.labelHeader.Location = new System.Drawing.Point(18' 22);
Magic Number,MPTagThat.InternetLookup,ArtistAlbumDialog,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\ArtistAlbumDialog.cs,InitializeComponent,The following statement contains a magic number: this.labelHeader.Location = new System.Drawing.Point(18' 22);
Magic Number,MPTagThat.InternetLookup,ArtistAlbumDialog,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\ArtistAlbumDialog.cs,InitializeComponent,The following statement contains a magic number: this.labelHeader.Size = new System.Drawing.Size(62' 20);
Magic Number,MPTagThat.InternetLookup,ArtistAlbumDialog,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\ArtistAlbumDialog.cs,InitializeComponent,The following statement contains a magic number: this.labelHeader.Size = new System.Drawing.Size(62' 20);
Magic Number,MPTagThat.InternetLookup,ArtistAlbumDialog,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\ArtistAlbumDialog.cs,InitializeComponent,The following statement contains a magic number: this.labelHeader.TabIndex = 23;
Magic Number,MPTagThat.InternetLookup,ArtistAlbumDialog,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\ArtistAlbumDialog.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(430' 163);
Magic Number,MPTagThat.InternetLookup,ArtistAlbumDialog,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\ArtistAlbumDialog.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(430' 163);
Magic Number,MPTagThat.InternetLookup,InternetLookup,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\InternetLookup.cs,ShowAlbumDetails,The following statement contains a magic number: if (_dlgAlbumDetails.DiscTracks.Items.Count < _dlgAlbumDetails.AlbumTracks.Items.Count)        {          for (int i = _dlgAlbumDetails.DiscTracks.Items.Count - 1; i < _dlgAlbumDetails.AlbumTracks.Items.Count - 1; i++)          {            ListViewItem unassignedItem = new ListViewItem((i + 2).ToString());            unassignedItem.SubItems.Add(ServiceScope.Get<ILocalisation>().ToString("Lookup"' "Unassigned"));            unassignedItem.Tag = -1;            unassignedItem.Checked = false;            _dlgAlbumDetails.DiscTracks.Items.Add(unassignedItem);          }        }
Magic Number,MPTagThat.InternetLookup,InternetLookup,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\InternetLookup.cs,ShowAlbumDetails,The following statement contains a magic number: foreach (ListViewItem lvAlbumItem in _dlgAlbumDetails.AlbumTracks.Items)        {          int discTrackPos = 0;          foreach (ListViewItem lvDiscItem in _dlgAlbumDetails.DiscTracks.Items)          {            if (Util.LongestCommonSubstring(lvAlbumItem.SubItems[1].Text' lvDiscItem.SubItems[1].Text) > 0.75)            {              lvDiscItem.Checked = true;              _dlgAlbumDetails.DiscTracks.Items.RemoveAt(discTrackPos);              _dlgAlbumDetails.DiscTracks.Items.Insert(albumTrackPos' lvDiscItem);              break;            }            discTrackPos++;          }          albumTrackPos++;        }
Magic Number,MPTagThat.InternetLookup,InternetLookup,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\InternetLookup.cs,ShowAlbumDetails,The following statement contains a magic number: if (main.ShowModalDialog(_dlgAlbumDetails) == DialogResult.OK)        {          int i = -1;          foreach (ListViewItem lvItem in _dlgAlbumDetails.DiscTracks.Items)          {            i++;            int index = (int)lvItem.Tag;            if (index == -1 || lvItem.Checked == false)              continue;              TrackData track = Options.Songlist[index];            track.Artist = _dlgAlbumDetails.Artist;            track.Album = _dlgAlbumDetails.Album;            string strYear = _dlgAlbumDetails.Year;            if (strYear.Length > 4)              strYear = strYear.Substring(0' 4);              int year = 0;            try            {              year = Convert.ToInt32(strYear);            }            catch (Exception) {}            if (year > 0 && track.Year == 0)              track.Year = year;              // Add the picture            ByteVector vector = album.AlbumImage;            if (vector != null)            {              MPTagThat.Core.Common.Picture pic = new MPTagThat.Core.Common.Picture();              pic.MimeType = "image/jpg";              pic.Description = "";              pic.Type = PictureType.FrontCover;              pic.Data = vector.Data;              track.Pictures.Add(pic);            }              ListViewItem trackItem = _dlgAlbumDetails.AlbumTracks.Items[i];            track.Track = trackItem.SubItems[0].Text;            track.Title = trackItem.SubItems[1].Text;              main.TracksGridView.SetBackgroundColorChanged(index);            track.Changed = true;            Options.Songlist[index] = track;            main.TracksGridView.Changed = true;          }        }
Magic Number,MPTagThat.InternetLookup,InternetLookup,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\InternetLookup\InternetLookup.cs,ShowAlbumDetails,The following statement contains a magic number: if (main.ShowModalDialog(_dlgAlbumDetails) == DialogResult.OK)        {          int i = -1;          foreach (ListViewItem lvItem in _dlgAlbumDetails.DiscTracks.Items)          {            i++;            int index = (int)lvItem.Tag;            if (index == -1 || lvItem.Checked == false)              continue;              TrackData track = Options.Songlist[index];            track.Artist = _dlgAlbumDetails.Artist;            track.Album = _dlgAlbumDetails.Album;            string strYear = _dlgAlbumDetails.Year;            if (strYear.Length > 4)              strYear = strYear.Substring(0' 4);              int year = 0;            try            {              year = Convert.ToInt32(strYear);            }            catch (Exception) {}            if (year > 0 && track.Year == 0)              track.Year = year;              // Add the picture            ByteVector vector = album.AlbumImage;            if (vector != null)            {              MPTagThat.Core.Common.Picture pic = new MPTagThat.Core.Common.Picture();              pic.MimeType = "image/jpg";              pic.Description = "";              pic.Type = PictureType.FrontCover;              pic.Data = vector.Data;              track.Pictures.Add(pic);            }              ListViewItem trackItem = _dlgAlbumDetails.AlbumTracks.Items[i];            track.Track = trackItem.SubItems[0].Text;            track.Title = trackItem.SubItems[1].Text;              main.TracksGridView.SetBackgroundColorChanged(index);            track.Changed = true;            Options.Songlist[index] = track;            main.TracksGridView.Changed = true;          }        }
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,OnLoad,The following statement contains a magic number: if (_musicBrainzDatabaseActive)        {          _artistsTimer = new Timer();          _artistsTimer.Interval = 1500;          _artistsTimer.Tick += _artistsTimer_Tick;          _albumArtistsTimer = new Timer();          _albumArtistsTimer.Interval = 1500;          _albumArtistsTimer.Tick += _albumArtistsTimer_Tick;        }
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,OnLoad,The following statement contains a magic number: if (_musicBrainzDatabaseActive)        {          _artistsTimer = new Timer();          _artistsTimer.Interval = 1500;          _artistsTimer.Tick += _artistsTimer_Tick;          _albumArtistsTimer = new Timer();          _albumArtistsTimer.Interval = 1500;          _albumArtistsTimer.Tick += _albumArtistsTimer_Tick;        }
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,FillForm,The following statement contains a magic number: foreach (DataGridViewRow row in main.TracksGridView.View.SelectedRows)        {            TrackData track = Options.Songlist[row.Index];            lbEditedFile.Text = !_isMultiTagEdit ? track.FileName : "";            #region Main Tags            if (_isMultiTagEdit)          {            if (cbArtist.Text.Trim() != track.Artist.Trim())            {              cbArtist.Text = i == 0 ? track.Artist : "";            }              if (cbAlbumArtist.Text.Trim() != track.AlbumArtist.Trim())            {              cbAlbumArtist.Text = i == 0 ? track.AlbumArtist : "";            }              if (cbAlbum.Text.Trim() != track.Album.Trim())            {              cbAlbum.Text = i == 0 ? track.Album : "";            }          }          else          {            cbArtist.Text = track.Artist;            cbAlbumArtist.Text = track.AlbumArtist;            tbAlbum.Text = track.Album;          }            if (_isMultiTagEdit)          {            if (checkBoxCompilation.Checked != track.Compilation)            {              checkBoxCompilation.Checked = i == 0 && track.Compilation;            }          }          else          {            checkBoxCompilation.Checked = track.Compilation;          }            if (tbTitle.Text.Trim() != track.Title.Trim())          {            tbTitle.Text = i == 0 ? track.Title : "";          }            if (tbYear.Text.Trim() != track.Year.ToString())            if (i == 0 && track.Year > 0)              tbYear.Text = track.Year.ToString();            else              tbYear.Text = "";            if (tbBPM.Text.Trim() != track.BPM.ToString())            if (i == 0 && track.BPM > 0)              tbBPM.Text = track.BPM.ToString();            else              tbBPM.Text = "";            if (tbDisc.Text.Trim() != track.DiscNumber.ToString())          {            if (i == 0 && track.DiscNumber != 0)            {              tbDisc.Text = track.DiscNumber.ToString();            }            else            {              tbDisc.Text = "";            }          }            if (tbNumDiscs.Text.Trim() != track.DiscCount.ToString())          {            if (i == 0 && track.DiscCount != 0)            {              tbNumDiscs.Text = track.DiscCount.ToString();            }            else            {              tbNumDiscs.Text = "";            }          }            // Don't handle single track for Multitag Edit          if (!_isMultiTagEdit)          {            if (track.TrackNumber != 0)            {              tbTrack.Text = track.TrackNumber.ToString();            }          }            if (tbNumTracks.Text.Trim() != track.TrackCount.ToString())          {            if (i == 0 && track.TrackCount != 0)              tbNumTracks.Text = track.TrackCount.ToString();            else              tbNumTracks.Text = "";          }            if (strGenreTemp != track.Genre)          {            if (i == 0)            {              listBoxGenre.Items.AddRange(track.Genre.Split(';'));              strGenreTemp = track.Genre;            }            else              listBoxGenre.Items.Clear();          }            // Get Comment          string sComment = "";          if (track.IsMp3)          {            sComment += track.Comment;            foreach (Comment commentsframe in track.ID3Comments)            {              sComment += commentsframe.Text;            }          }          else            sComment = track.Comment;            if (strCommentTemp != sComment)          {            if (i == 0)            {              strCommentTemp = sComment;              if (track.IsMp3)              {                AddComment(""' ""' track.Comment);                foreach (Comment commentsframe in track.ID3Comments)                {                  AddComment(commentsframe.Description' commentsframe.Language' commentsframe.Text);                }              }              else                AddComment(""' ""' track.Comment);            }            else              dataGridViewComment.Rows.Clear();          }            #endregion            #region Picture            // Pictures are only filled for Single Tagedit          if (!_isMultiTagEdit)          {            tbPicDesc.Text = "";            dataGridViewPicture.Rows.Clear();            _pictures.Clear();            foreach (Picture picture in track.Pictures)            {              dataGridViewPicture.Rows.Add(new object[] { picture.Description' Enum.Format(typeof(PictureType)' picture.Type' "G") });              _pictures.Add(picture);            }              // Display first Picture            if (dataGridViewPicture.Rows.Count > 0)            {              DataGridViewCellEventArgs evt = new DataGridViewCellEventArgs(0' 0);              dataGridViewPicture_CellClick(dataGridViewPicture' evt);            }          }                    #endregion            #region Detailed Information            if (tbConductor.Text.Trim() != track.Conductor.Trim())          {            if (i == 0)            {              tbConductor.Text = track.Conductor;            }            else            {              tbConductor.Text = "";            }          }            if (tbComposer.Text.Trim() != track.Composer.Trim())          {            if (i == 0)            {              tbComposer.Text = track.Composer;            }            else            {              tbComposer.Text = "";            }          }            if (tbCopyright.Text.Trim() != track.Copyright.Trim())          {            if (i == 0)            {              tbCopyright.Text = track.Copyright;            }            else            {              tbCopyright.Text = "";            }          }            if (tbContentGroup.Text.Trim() != track.Grouping.Trim())          {            if (i == 0)            {              tbContentGroup.Text = track.Grouping;            }            else            {              tbContentGroup.Text = "";            }          }            if (tbTrackLength.Text.Trim() != track.TrackLength.Trim())          {            if (i == 0)            {              tbTrackLength.Text = track.TrackLength;            }            else            {              tbTrackLength.Text = "";            }          }            if (tbArtistSort.Text.Trim() != track.ArtistSortName.Trim())          {            if (i == 0)            {              tbArtistSort.Text = track.ArtistSortName;            }            else            {              tbArtistSort.Text = "";            }          }            if (tbAlbumArtistSort.Text.Trim() != track.AlbumArtistSortName.Trim())          {            if (i == 0)            {              tbAlbumArtistSort.Text = track.AlbumArtistSortName;            }            else            {              tbAlbumArtistSort.Text = "";            }          }            if (tbAlbumSort.Text.Trim() != track.AlbumSortName.Trim())          {            if (i == 0)            {              tbAlbumSort.Text = track.AlbumSortName;            }            else            {              tbAlbumSort.Text = "";            }          }            if (tbTitleSort.Text.Trim() != track.TitleSortName.Trim())          {            if (i == 0)            {              tbTitleSort.Text = track.TitleSortName;            }            else            {              tbTitleSort.Text = "";            }          }            // The following values are only ID3 V2 specific          if (track.IsMp3)          {            if (tbInterpretedBy.Text.Trim() != track.Interpreter.Trim())            {              if (i == 0)              {                tbInterpretedBy.Text = track.Interpreter;              }              else              {                tbInterpretedBy.Text = "";              }            }              if (tbTextWriter.Text.Trim() != track.TextWriter.Trim())            {              if (i == 0)              {                tbTextWriter.Text = track.TextWriter;              }              else              {                tbTextWriter.Text = "";              }            }              if (tbPublisher.Text.Trim() != track.Publisher.Trim())            {              if (i == 0)              {                tbPublisher.Text = track.Publisher;              }              else              {                tbPublisher.Text = "";              }            }              if (tbEncodedBy.Text.Trim() != track.EncodedBy.Trim())            {              if (i == 0)              {                tbEncodedBy.Text = track.EncodedBy;              }              else              {                tbEncodedBy.Text = "";              }            }              if (tbSubTitle.Text.Trim() != track.SubTitle.Trim())            {              if (i == 0)              {                tbSubTitle.Text = track.SubTitle;              }              else              {                tbSubTitle.Text = "";              }            }          }            #endregion            #region Original Information            // The following values are only ID3 V2 specific          if (track.IsMp3)          {            if (tbOriginalAlbum.Text.Trim() != track.OriginalAlbum.Trim())            {              if (i == 0)              {                tbOriginalAlbum.Text = track.OriginalAlbum;              }              else              {                tbOriginalAlbum.Text = "";              }            }              if (tbOriginalFileName.Text.Trim() != track.OriginalFileName.Trim())            {              if (i == 0)              {                tbOriginalFileName.Text = track.OriginalFileName;              }              else              {                tbOriginalFileName.Text = "";              }            }              if (tbOriginalLyricsWriter.Text.Trim() != track.OriginalLyricsWriter.Trim())            {              if (i == 0)              {                tbOriginalLyricsWriter.Text = track.OriginalLyricsWriter;              }              else              {                tbOriginalLyricsWriter.Text = "";              }            }              if (tbOriginalArtist.Text.Trim() != track.OriginalArtist.Trim())            {              if (i == 0)              {                tbOriginalArtist.Text = track.OriginalArtist;              }              else              {                tbOriginalArtist.Text = "";              }            }              if (tbOriginalOwner.Text.Trim() != track.OriginalOwner.Trim())            {              if (i == 0)              {                tbOriginalOwner.Text = track.OriginalOwner;              }              else              {                tbOriginalOwner.Text = "";              }            }              if (tbOriginalRelease.Text.Trim() != track.OriginalRelease.Trim())            {              if (i == 0)              {                tbOriginalRelease.Text = track.OriginalRelease;              }              else              {                tbOriginalRelease.Text = "";              }            }          }            #endregion            #region Involved People            // The following values are only ID3 V2 specific          if (track.IsMp3)          {            if (strInvoledPeopleTemp != track.InvolvedPeople)            {              if (i == 0)              {                // A IPLS is delimited with "\0"                // A TIPL is delimited with ";"                string[] ipls = track.InvolvedPeople.Split(new[] { '\0'' ';' });                for (int j = 0; j < ipls.Length - 1; j += 2)                {                  dataGridViewInvolvedPeople.Rows.Add(new object[] { ipls[j].Trim()' ipls[j + 1].Trim() });                }                strInvoledPeopleTemp = track.InvolvedPeople;              }              else                dataGridViewInvolvedPeople.Rows.Clear();            }              // TMCL is only available in 2.4            if (Options.MainSettings.ID3V2Version == 4)            {              groupBoxMusician.Enabled = true;              if (strMusicianCreditList != track.MusicCreditList)              {                if (i == 0)                {                  string[] mcl = track.MusicCreditList.Split(new[] {'\0'' ';'});                  for (int j = 0; j < mcl.Length - 1; j += 2)                  {                    dataGridViewMusician.Rows.Add(new object[] {mcl[j].Trim()' mcl[j + 1].Trim()});                  }                  strMusicianCreditList = track.MusicCreditList;                }                else                  dataGridViewMusician.Rows.Clear();              }            }            else            {              groupBoxMusician.Enabled = false;            }          }            #endregion            #region Web Information            // The following values are only ID3 V2 specific          if (track.IsMp3)          {            if (tbCopyrightUrl.Text.Trim() != track.CopyrightInformation.Trim())            {              tbCopyrightUrl.Text = i == 0 ? track.CopyrightInformation : "";            }              if (tbOfficialAudioFileUrl.Text.Trim() != track.OfficialAudioFileInformation.Trim())            {              tbOfficialAudioFileUrl.Text = i == 0 ? track.OfficialAudioFileInformation : "";            }              if (tbOfficialArtistUrl.Text.Trim() != track.OfficialArtistInformation.Trim())            {              tbOfficialArtistUrl.Text = i == 0 ? track.OfficialArtistInformation : "";            }              if (tbOfficialAudioSourceUrl.Text.Trim() != track.OfficialAudioSourceInformation.Trim())            {              tbOfficialAudioSourceUrl.Text = i == 0 ? track.OfficialAudioSourceInformation : "";            }              if (tbOfficialInternetRadioUrl.Text.Trim() != track.OfficialInternetRadioInformation.Trim())            {              tbOfficialInternetRadioUrl.Text = i == 0 ? track.OfficialInternetRadioInformation : "";            }              if (tbOfficialPaymentUrl.Text.Trim() != track.OfficialPaymentInformation.Trim())            {              tbOfficialPaymentUrl.Text = i == 0 ? track.OfficialPaymentInformation : "";            }              if (tbOfficialPublisherUrl.Text.Trim() != track.OfficialPublisherInformation.Trim())            {              tbOfficialPublisherUrl.Text = i == 0 ? track.OfficialPublisherInformation : "";            }              if (tbCommercialInformationUrl.Text.Trim() != track.CommercialInformation.Trim())            {              tbCommercialInformationUrl.Text = i == 0 ? track.CommercialInformation : "";            }          }            #endregion            #region User Defined Frames            // Build tem string for comparison          string sFrames = "";          foreach (Frame frame in track.UserFrames)          {            sFrames += frame.Id + frame.Description + frame.Value;          }            if (strUserFramesTemp != sFrames)          {            if (i == 0)            {              strUserFramesTemp = sFrames;              foreach (Frame frame in track.UserFrames)              {                dataGridViewUserFrames.Rows.Add(new object[] { frame.Id' frame.Description' frame.Value });              }              }            else              dataGridViewUserFrames.Rows.Clear();          }            if (track.UserFrames.Count > 0)          {            tabPageUserDefined.DefaultSmallImage = Properties.Resources.Warning;          }            #endregion            if (!_isMultiTagEdit)          {            #region Lyrics              dataGridViewLyrics.Rows.Clear();            if (track.IsMp3)            {              foreach (Lyric lyricsframe in track.LyricsFrames)              {                AddLyrics(lyricsframe.Description' lyricsframe.Language' lyricsframe.Text);              }            }            else            {              if (track.Lyrics != "")              {                AddLyrics(""' ""' track.Lyrics);              }            }              #endregion              #region Rating              dataGridViewRating.Rows.Clear();            if (track.IsMp3)            {              foreach (PopmFrame popmframe in track.Ratings)              {                AddRating(popmframe.User' Convert.ToString(popmframe.Rating)' Convert.ToString(popmframe.PlayCount));              }            }            if (track.IsMp3)              groupBoxRating.Enabled = true;            else              groupBoxRating.Enabled = false;              #endregion          }            i++;        }
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,FillForm,The following statement contains a magic number: foreach (DataGridViewRow row in main.TracksGridView.View.SelectedRows)        {            TrackData track = Options.Songlist[row.Index];            lbEditedFile.Text = !_isMultiTagEdit ? track.FileName : "";            #region Main Tags            if (_isMultiTagEdit)          {            if (cbArtist.Text.Trim() != track.Artist.Trim())            {              cbArtist.Text = i == 0 ? track.Artist : "";            }              if (cbAlbumArtist.Text.Trim() != track.AlbumArtist.Trim())            {              cbAlbumArtist.Text = i == 0 ? track.AlbumArtist : "";            }              if (cbAlbum.Text.Trim() != track.Album.Trim())            {              cbAlbum.Text = i == 0 ? track.Album : "";            }          }          else          {            cbArtist.Text = track.Artist;            cbAlbumArtist.Text = track.AlbumArtist;            tbAlbum.Text = track.Album;          }            if (_isMultiTagEdit)          {            if (checkBoxCompilation.Checked != track.Compilation)            {              checkBoxCompilation.Checked = i == 0 && track.Compilation;            }          }          else          {            checkBoxCompilation.Checked = track.Compilation;          }            if (tbTitle.Text.Trim() != track.Title.Trim())          {            tbTitle.Text = i == 0 ? track.Title : "";          }            if (tbYear.Text.Trim() != track.Year.ToString())            if (i == 0 && track.Year > 0)              tbYear.Text = track.Year.ToString();            else              tbYear.Text = "";            if (tbBPM.Text.Trim() != track.BPM.ToString())            if (i == 0 && track.BPM > 0)              tbBPM.Text = track.BPM.ToString();            else              tbBPM.Text = "";            if (tbDisc.Text.Trim() != track.DiscNumber.ToString())          {            if (i == 0 && track.DiscNumber != 0)            {              tbDisc.Text = track.DiscNumber.ToString();            }            else            {              tbDisc.Text = "";            }          }            if (tbNumDiscs.Text.Trim() != track.DiscCount.ToString())          {            if (i == 0 && track.DiscCount != 0)            {              tbNumDiscs.Text = track.DiscCount.ToString();            }            else            {              tbNumDiscs.Text = "";            }          }            // Don't handle single track for Multitag Edit          if (!_isMultiTagEdit)          {            if (track.TrackNumber != 0)            {              tbTrack.Text = track.TrackNumber.ToString();            }          }            if (tbNumTracks.Text.Trim() != track.TrackCount.ToString())          {            if (i == 0 && track.TrackCount != 0)              tbNumTracks.Text = track.TrackCount.ToString();            else              tbNumTracks.Text = "";          }            if (strGenreTemp != track.Genre)          {            if (i == 0)            {              listBoxGenre.Items.AddRange(track.Genre.Split(';'));              strGenreTemp = track.Genre;            }            else              listBoxGenre.Items.Clear();          }            // Get Comment          string sComment = "";          if (track.IsMp3)          {            sComment += track.Comment;            foreach (Comment commentsframe in track.ID3Comments)            {              sComment += commentsframe.Text;            }          }          else            sComment = track.Comment;            if (strCommentTemp != sComment)          {            if (i == 0)            {              strCommentTemp = sComment;              if (track.IsMp3)              {                AddComment(""' ""' track.Comment);                foreach (Comment commentsframe in track.ID3Comments)                {                  AddComment(commentsframe.Description' commentsframe.Language' commentsframe.Text);                }              }              else                AddComment(""' ""' track.Comment);            }            else              dataGridViewComment.Rows.Clear();          }            #endregion            #region Picture            // Pictures are only filled for Single Tagedit          if (!_isMultiTagEdit)          {            tbPicDesc.Text = "";            dataGridViewPicture.Rows.Clear();            _pictures.Clear();            foreach (Picture picture in track.Pictures)            {              dataGridViewPicture.Rows.Add(new object[] { picture.Description' Enum.Format(typeof(PictureType)' picture.Type' "G") });              _pictures.Add(picture);            }              // Display first Picture            if (dataGridViewPicture.Rows.Count > 0)            {              DataGridViewCellEventArgs evt = new DataGridViewCellEventArgs(0' 0);              dataGridViewPicture_CellClick(dataGridViewPicture' evt);            }          }                    #endregion            #region Detailed Information            if (tbConductor.Text.Trim() != track.Conductor.Trim())          {            if (i == 0)            {              tbConductor.Text = track.Conductor;            }            else            {              tbConductor.Text = "";            }          }            if (tbComposer.Text.Trim() != track.Composer.Trim())          {            if (i == 0)            {              tbComposer.Text = track.Composer;            }            else            {              tbComposer.Text = "";            }          }            if (tbCopyright.Text.Trim() != track.Copyright.Trim())          {            if (i == 0)            {              tbCopyright.Text = track.Copyright;            }            else            {              tbCopyright.Text = "";            }          }            if (tbContentGroup.Text.Trim() != track.Grouping.Trim())          {            if (i == 0)            {              tbContentGroup.Text = track.Grouping;            }            else            {              tbContentGroup.Text = "";            }          }            if (tbTrackLength.Text.Trim() != track.TrackLength.Trim())          {            if (i == 0)            {              tbTrackLength.Text = track.TrackLength;            }            else            {              tbTrackLength.Text = "";            }          }            if (tbArtistSort.Text.Trim() != track.ArtistSortName.Trim())          {            if (i == 0)            {              tbArtistSort.Text = track.ArtistSortName;            }            else            {              tbArtistSort.Text = "";            }          }            if (tbAlbumArtistSort.Text.Trim() != track.AlbumArtistSortName.Trim())          {            if (i == 0)            {              tbAlbumArtistSort.Text = track.AlbumArtistSortName;            }            else            {              tbAlbumArtistSort.Text = "";            }          }            if (tbAlbumSort.Text.Trim() != track.AlbumSortName.Trim())          {            if (i == 0)            {              tbAlbumSort.Text = track.AlbumSortName;            }            else            {              tbAlbumSort.Text = "";            }          }            if (tbTitleSort.Text.Trim() != track.TitleSortName.Trim())          {            if (i == 0)            {              tbTitleSort.Text = track.TitleSortName;            }            else            {              tbTitleSort.Text = "";            }          }            // The following values are only ID3 V2 specific          if (track.IsMp3)          {            if (tbInterpretedBy.Text.Trim() != track.Interpreter.Trim())            {              if (i == 0)              {                tbInterpretedBy.Text = track.Interpreter;              }              else              {                tbInterpretedBy.Text = "";              }            }              if (tbTextWriter.Text.Trim() != track.TextWriter.Trim())            {              if (i == 0)              {                tbTextWriter.Text = track.TextWriter;              }              else              {                tbTextWriter.Text = "";              }            }              if (tbPublisher.Text.Trim() != track.Publisher.Trim())            {              if (i == 0)              {                tbPublisher.Text = track.Publisher;              }              else              {                tbPublisher.Text = "";              }            }              if (tbEncodedBy.Text.Trim() != track.EncodedBy.Trim())            {              if (i == 0)              {                tbEncodedBy.Text = track.EncodedBy;              }              else              {                tbEncodedBy.Text = "";              }            }              if (tbSubTitle.Text.Trim() != track.SubTitle.Trim())            {              if (i == 0)              {                tbSubTitle.Text = track.SubTitle;              }              else              {                tbSubTitle.Text = "";              }            }          }            #endregion            #region Original Information            // The following values are only ID3 V2 specific          if (track.IsMp3)          {            if (tbOriginalAlbum.Text.Trim() != track.OriginalAlbum.Trim())            {              if (i == 0)              {                tbOriginalAlbum.Text = track.OriginalAlbum;              }              else              {                tbOriginalAlbum.Text = "";              }            }              if (tbOriginalFileName.Text.Trim() != track.OriginalFileName.Trim())            {              if (i == 0)              {                tbOriginalFileName.Text = track.OriginalFileName;              }              else              {                tbOriginalFileName.Text = "";              }            }              if (tbOriginalLyricsWriter.Text.Trim() != track.OriginalLyricsWriter.Trim())            {              if (i == 0)              {                tbOriginalLyricsWriter.Text = track.OriginalLyricsWriter;              }              else              {                tbOriginalLyricsWriter.Text = "";              }            }              if (tbOriginalArtist.Text.Trim() != track.OriginalArtist.Trim())            {              if (i == 0)              {                tbOriginalArtist.Text = track.OriginalArtist;              }              else              {                tbOriginalArtist.Text = "";              }            }              if (tbOriginalOwner.Text.Trim() != track.OriginalOwner.Trim())            {              if (i == 0)              {                tbOriginalOwner.Text = track.OriginalOwner;              }              else              {                tbOriginalOwner.Text = "";              }            }              if (tbOriginalRelease.Text.Trim() != track.OriginalRelease.Trim())            {              if (i == 0)              {                tbOriginalRelease.Text = track.OriginalRelease;              }              else              {                tbOriginalRelease.Text = "";              }            }          }            #endregion            #region Involved People            // The following values are only ID3 V2 specific          if (track.IsMp3)          {            if (strInvoledPeopleTemp != track.InvolvedPeople)            {              if (i == 0)              {                // A IPLS is delimited with "\0"                // A TIPL is delimited with ";"                string[] ipls = track.InvolvedPeople.Split(new[] { '\0'' ';' });                for (int j = 0; j < ipls.Length - 1; j += 2)                {                  dataGridViewInvolvedPeople.Rows.Add(new object[] { ipls[j].Trim()' ipls[j + 1].Trim() });                }                strInvoledPeopleTemp = track.InvolvedPeople;              }              else                dataGridViewInvolvedPeople.Rows.Clear();            }              // TMCL is only available in 2.4            if (Options.MainSettings.ID3V2Version == 4)            {              groupBoxMusician.Enabled = true;              if (strMusicianCreditList != track.MusicCreditList)              {                if (i == 0)                {                  string[] mcl = track.MusicCreditList.Split(new[] {'\0'' ';'});                  for (int j = 0; j < mcl.Length - 1; j += 2)                  {                    dataGridViewMusician.Rows.Add(new object[] {mcl[j].Trim()' mcl[j + 1].Trim()});                  }                  strMusicianCreditList = track.MusicCreditList;                }                else                  dataGridViewMusician.Rows.Clear();              }            }            else            {              groupBoxMusician.Enabled = false;            }          }            #endregion            #region Web Information            // The following values are only ID3 V2 specific          if (track.IsMp3)          {            if (tbCopyrightUrl.Text.Trim() != track.CopyrightInformation.Trim())            {              tbCopyrightUrl.Text = i == 0 ? track.CopyrightInformation : "";            }              if (tbOfficialAudioFileUrl.Text.Trim() != track.OfficialAudioFileInformation.Trim())            {              tbOfficialAudioFileUrl.Text = i == 0 ? track.OfficialAudioFileInformation : "";            }              if (tbOfficialArtistUrl.Text.Trim() != track.OfficialArtistInformation.Trim())            {              tbOfficialArtistUrl.Text = i == 0 ? track.OfficialArtistInformation : "";            }              if (tbOfficialAudioSourceUrl.Text.Trim() != track.OfficialAudioSourceInformation.Trim())            {              tbOfficialAudioSourceUrl.Text = i == 0 ? track.OfficialAudioSourceInformation : "";            }              if (tbOfficialInternetRadioUrl.Text.Trim() != track.OfficialInternetRadioInformation.Trim())            {              tbOfficialInternetRadioUrl.Text = i == 0 ? track.OfficialInternetRadioInformation : "";            }              if (tbOfficialPaymentUrl.Text.Trim() != track.OfficialPaymentInformation.Trim())            {              tbOfficialPaymentUrl.Text = i == 0 ? track.OfficialPaymentInformation : "";            }              if (tbOfficialPublisherUrl.Text.Trim() != track.OfficialPublisherInformation.Trim())            {              tbOfficialPublisherUrl.Text = i == 0 ? track.OfficialPublisherInformation : "";            }              if (tbCommercialInformationUrl.Text.Trim() != track.CommercialInformation.Trim())            {              tbCommercialInformationUrl.Text = i == 0 ? track.CommercialInformation : "";            }          }            #endregion            #region User Defined Frames            // Build tem string for comparison          string sFrames = "";          foreach (Frame frame in track.UserFrames)          {            sFrames += frame.Id + frame.Description + frame.Value;          }            if (strUserFramesTemp != sFrames)          {            if (i == 0)            {              strUserFramesTemp = sFrames;              foreach (Frame frame in track.UserFrames)              {                dataGridViewUserFrames.Rows.Add(new object[] { frame.Id' frame.Description' frame.Value });              }              }            else              dataGridViewUserFrames.Rows.Clear();          }            if (track.UserFrames.Count > 0)          {            tabPageUserDefined.DefaultSmallImage = Properties.Resources.Warning;          }            #endregion            if (!_isMultiTagEdit)          {            #region Lyrics              dataGridViewLyrics.Rows.Clear();            if (track.IsMp3)            {              foreach (Lyric lyricsframe in track.LyricsFrames)              {                AddLyrics(lyricsframe.Description' lyricsframe.Language' lyricsframe.Text);              }            }            else            {              if (track.Lyrics != "")              {                AddLyrics(""' ""' track.Lyrics);              }            }              #endregion              #region Rating              dataGridViewRating.Rows.Clear();            if (track.IsMp3)            {              foreach (PopmFrame popmframe in track.Ratings)              {                AddRating(popmframe.User' Convert.ToString(popmframe.Rating)' Convert.ToString(popmframe.PlayCount));              }            }            if (track.IsMp3)              groupBoxRating.Enabled = true;            else              groupBoxRating.Enabled = false;              #endregion          }            i++;        }
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,FillForm,The following statement contains a magic number: foreach (DataGridViewRow row in main.TracksGridView.View.SelectedRows)        {            TrackData track = Options.Songlist[row.Index];            lbEditedFile.Text = !_isMultiTagEdit ? track.FileName : "";            #region Main Tags            if (_isMultiTagEdit)          {            if (cbArtist.Text.Trim() != track.Artist.Trim())            {              cbArtist.Text = i == 0 ? track.Artist : "";            }              if (cbAlbumArtist.Text.Trim() != track.AlbumArtist.Trim())            {              cbAlbumArtist.Text = i == 0 ? track.AlbumArtist : "";            }              if (cbAlbum.Text.Trim() != track.Album.Trim())            {              cbAlbum.Text = i == 0 ? track.Album : "";            }          }          else          {            cbArtist.Text = track.Artist;            cbAlbumArtist.Text = track.AlbumArtist;            tbAlbum.Text = track.Album;          }            if (_isMultiTagEdit)          {            if (checkBoxCompilation.Checked != track.Compilation)            {              checkBoxCompilation.Checked = i == 0 && track.Compilation;            }          }          else          {            checkBoxCompilation.Checked = track.Compilation;          }            if (tbTitle.Text.Trim() != track.Title.Trim())          {            tbTitle.Text = i == 0 ? track.Title : "";          }            if (tbYear.Text.Trim() != track.Year.ToString())            if (i == 0 && track.Year > 0)              tbYear.Text = track.Year.ToString();            else              tbYear.Text = "";            if (tbBPM.Text.Trim() != track.BPM.ToString())            if (i == 0 && track.BPM > 0)              tbBPM.Text = track.BPM.ToString();            else              tbBPM.Text = "";            if (tbDisc.Text.Trim() != track.DiscNumber.ToString())          {            if (i == 0 && track.DiscNumber != 0)            {              tbDisc.Text = track.DiscNumber.ToString();            }            else            {              tbDisc.Text = "";            }          }            if (tbNumDiscs.Text.Trim() != track.DiscCount.ToString())          {            if (i == 0 && track.DiscCount != 0)            {              tbNumDiscs.Text = track.DiscCount.ToString();            }            else            {              tbNumDiscs.Text = "";            }          }            // Don't handle single track for Multitag Edit          if (!_isMultiTagEdit)          {            if (track.TrackNumber != 0)            {              tbTrack.Text = track.TrackNumber.ToString();            }          }            if (tbNumTracks.Text.Trim() != track.TrackCount.ToString())          {            if (i == 0 && track.TrackCount != 0)              tbNumTracks.Text = track.TrackCount.ToString();            else              tbNumTracks.Text = "";          }            if (strGenreTemp != track.Genre)          {            if (i == 0)            {              listBoxGenre.Items.AddRange(track.Genre.Split(';'));              strGenreTemp = track.Genre;            }            else              listBoxGenre.Items.Clear();          }            // Get Comment          string sComment = "";          if (track.IsMp3)          {            sComment += track.Comment;            foreach (Comment commentsframe in track.ID3Comments)            {              sComment += commentsframe.Text;            }          }          else            sComment = track.Comment;            if (strCommentTemp != sComment)          {            if (i == 0)            {              strCommentTemp = sComment;              if (track.IsMp3)              {                AddComment(""' ""' track.Comment);                foreach (Comment commentsframe in track.ID3Comments)                {                  AddComment(commentsframe.Description' commentsframe.Language' commentsframe.Text);                }              }              else                AddComment(""' ""' track.Comment);            }            else              dataGridViewComment.Rows.Clear();          }            #endregion            #region Picture            // Pictures are only filled for Single Tagedit          if (!_isMultiTagEdit)          {            tbPicDesc.Text = "";            dataGridViewPicture.Rows.Clear();            _pictures.Clear();            foreach (Picture picture in track.Pictures)            {              dataGridViewPicture.Rows.Add(new object[] { picture.Description' Enum.Format(typeof(PictureType)' picture.Type' "G") });              _pictures.Add(picture);            }              // Display first Picture            if (dataGridViewPicture.Rows.Count > 0)            {              DataGridViewCellEventArgs evt = new DataGridViewCellEventArgs(0' 0);              dataGridViewPicture_CellClick(dataGridViewPicture' evt);            }          }                    #endregion            #region Detailed Information            if (tbConductor.Text.Trim() != track.Conductor.Trim())          {            if (i == 0)            {              tbConductor.Text = track.Conductor;            }            else            {              tbConductor.Text = "";            }          }            if (tbComposer.Text.Trim() != track.Composer.Trim())          {            if (i == 0)            {              tbComposer.Text = track.Composer;            }            else            {              tbComposer.Text = "";            }          }            if (tbCopyright.Text.Trim() != track.Copyright.Trim())          {            if (i == 0)            {              tbCopyright.Text = track.Copyright;            }            else            {              tbCopyright.Text = "";            }          }            if (tbContentGroup.Text.Trim() != track.Grouping.Trim())          {            if (i == 0)            {              tbContentGroup.Text = track.Grouping;            }            else            {              tbContentGroup.Text = "";            }          }            if (tbTrackLength.Text.Trim() != track.TrackLength.Trim())          {            if (i == 0)            {              tbTrackLength.Text = track.TrackLength;            }            else            {              tbTrackLength.Text = "";            }          }            if (tbArtistSort.Text.Trim() != track.ArtistSortName.Trim())          {            if (i == 0)            {              tbArtistSort.Text = track.ArtistSortName;            }            else            {              tbArtistSort.Text = "";            }          }            if (tbAlbumArtistSort.Text.Trim() != track.AlbumArtistSortName.Trim())          {            if (i == 0)            {              tbAlbumArtistSort.Text = track.AlbumArtistSortName;            }            else            {              tbAlbumArtistSort.Text = "";            }          }            if (tbAlbumSort.Text.Trim() != track.AlbumSortName.Trim())          {            if (i == 0)            {              tbAlbumSort.Text = track.AlbumSortName;            }            else            {              tbAlbumSort.Text = "";            }          }            if (tbTitleSort.Text.Trim() != track.TitleSortName.Trim())          {            if (i == 0)            {              tbTitleSort.Text = track.TitleSortName;            }            else            {              tbTitleSort.Text = "";            }          }            // The following values are only ID3 V2 specific          if (track.IsMp3)          {            if (tbInterpretedBy.Text.Trim() != track.Interpreter.Trim())            {              if (i == 0)              {                tbInterpretedBy.Text = track.Interpreter;              }              else              {                tbInterpretedBy.Text = "";              }            }              if (tbTextWriter.Text.Trim() != track.TextWriter.Trim())            {              if (i == 0)              {                tbTextWriter.Text = track.TextWriter;              }              else              {                tbTextWriter.Text = "";              }            }              if (tbPublisher.Text.Trim() != track.Publisher.Trim())            {              if (i == 0)              {                tbPublisher.Text = track.Publisher;              }              else              {                tbPublisher.Text = "";              }            }              if (tbEncodedBy.Text.Trim() != track.EncodedBy.Trim())            {              if (i == 0)              {                tbEncodedBy.Text = track.EncodedBy;              }              else              {                tbEncodedBy.Text = "";              }            }              if (tbSubTitle.Text.Trim() != track.SubTitle.Trim())            {              if (i == 0)              {                tbSubTitle.Text = track.SubTitle;              }              else              {                tbSubTitle.Text = "";              }            }          }            #endregion            #region Original Information            // The following values are only ID3 V2 specific          if (track.IsMp3)          {            if (tbOriginalAlbum.Text.Trim() != track.OriginalAlbum.Trim())            {              if (i == 0)              {                tbOriginalAlbum.Text = track.OriginalAlbum;              }              else              {                tbOriginalAlbum.Text = "";              }            }              if (tbOriginalFileName.Text.Trim() != track.OriginalFileName.Trim())            {              if (i == 0)              {                tbOriginalFileName.Text = track.OriginalFileName;              }              else              {                tbOriginalFileName.Text = "";              }            }              if (tbOriginalLyricsWriter.Text.Trim() != track.OriginalLyricsWriter.Trim())            {              if (i == 0)              {                tbOriginalLyricsWriter.Text = track.OriginalLyricsWriter;              }              else              {                tbOriginalLyricsWriter.Text = "";              }            }              if (tbOriginalArtist.Text.Trim() != track.OriginalArtist.Trim())            {              if (i == 0)              {                tbOriginalArtist.Text = track.OriginalArtist;              }              else              {                tbOriginalArtist.Text = "";              }            }              if (tbOriginalOwner.Text.Trim() != track.OriginalOwner.Trim())            {              if (i == 0)              {                tbOriginalOwner.Text = track.OriginalOwner;              }              else              {                tbOriginalOwner.Text = "";              }            }              if (tbOriginalRelease.Text.Trim() != track.OriginalRelease.Trim())            {              if (i == 0)              {                tbOriginalRelease.Text = track.OriginalRelease;              }              else              {                tbOriginalRelease.Text = "";              }            }          }            #endregion            #region Involved People            // The following values are only ID3 V2 specific          if (track.IsMp3)          {            if (strInvoledPeopleTemp != track.InvolvedPeople)            {              if (i == 0)              {                // A IPLS is delimited with "\0"                // A TIPL is delimited with ";"                string[] ipls = track.InvolvedPeople.Split(new[] { '\0'' ';' });                for (int j = 0; j < ipls.Length - 1; j += 2)                {                  dataGridViewInvolvedPeople.Rows.Add(new object[] { ipls[j].Trim()' ipls[j + 1].Trim() });                }                strInvoledPeopleTemp = track.InvolvedPeople;              }              else                dataGridViewInvolvedPeople.Rows.Clear();            }              // TMCL is only available in 2.4            if (Options.MainSettings.ID3V2Version == 4)            {              groupBoxMusician.Enabled = true;              if (strMusicianCreditList != track.MusicCreditList)              {                if (i == 0)                {                  string[] mcl = track.MusicCreditList.Split(new[] {'\0'' ';'});                  for (int j = 0; j < mcl.Length - 1; j += 2)                  {                    dataGridViewMusician.Rows.Add(new object[] {mcl[j].Trim()' mcl[j + 1].Trim()});                  }                  strMusicianCreditList = track.MusicCreditList;                }                else                  dataGridViewMusician.Rows.Clear();              }            }            else            {              groupBoxMusician.Enabled = false;            }          }            #endregion            #region Web Information            // The following values are only ID3 V2 specific          if (track.IsMp3)          {            if (tbCopyrightUrl.Text.Trim() != track.CopyrightInformation.Trim())            {              tbCopyrightUrl.Text = i == 0 ? track.CopyrightInformation : "";            }              if (tbOfficialAudioFileUrl.Text.Trim() != track.OfficialAudioFileInformation.Trim())            {              tbOfficialAudioFileUrl.Text = i == 0 ? track.OfficialAudioFileInformation : "";            }              if (tbOfficialArtistUrl.Text.Trim() != track.OfficialArtistInformation.Trim())            {              tbOfficialArtistUrl.Text = i == 0 ? track.OfficialArtistInformation : "";            }              if (tbOfficialAudioSourceUrl.Text.Trim() != track.OfficialAudioSourceInformation.Trim())            {              tbOfficialAudioSourceUrl.Text = i == 0 ? track.OfficialAudioSourceInformation : "";            }              if (tbOfficialInternetRadioUrl.Text.Trim() != track.OfficialInternetRadioInformation.Trim())            {              tbOfficialInternetRadioUrl.Text = i == 0 ? track.OfficialInternetRadioInformation : "";            }              if (tbOfficialPaymentUrl.Text.Trim() != track.OfficialPaymentInformation.Trim())            {              tbOfficialPaymentUrl.Text = i == 0 ? track.OfficialPaymentInformation : "";            }              if (tbOfficialPublisherUrl.Text.Trim() != track.OfficialPublisherInformation.Trim())            {              tbOfficialPublisherUrl.Text = i == 0 ? track.OfficialPublisherInformation : "";            }              if (tbCommercialInformationUrl.Text.Trim() != track.CommercialInformation.Trim())            {              tbCommercialInformationUrl.Text = i == 0 ? track.CommercialInformation : "";            }          }            #endregion            #region User Defined Frames            // Build tem string for comparison          string sFrames = "";          foreach (Frame frame in track.UserFrames)          {            sFrames += frame.Id + frame.Description + frame.Value;          }            if (strUserFramesTemp != sFrames)          {            if (i == 0)            {              strUserFramesTemp = sFrames;              foreach (Frame frame in track.UserFrames)              {                dataGridViewUserFrames.Rows.Add(new object[] { frame.Id' frame.Description' frame.Value });              }              }            else              dataGridViewUserFrames.Rows.Clear();          }            if (track.UserFrames.Count > 0)          {            tabPageUserDefined.DefaultSmallImage = Properties.Resources.Warning;          }            #endregion            if (!_isMultiTagEdit)          {            #region Lyrics              dataGridViewLyrics.Rows.Clear();            if (track.IsMp3)            {              foreach (Lyric lyricsframe in track.LyricsFrames)              {                AddLyrics(lyricsframe.Description' lyricsframe.Language' lyricsframe.Text);              }            }            else            {              if (track.Lyrics != "")              {                AddLyrics(""' ""' track.Lyrics);              }            }              #endregion              #region Rating              dataGridViewRating.Rows.Clear();            if (track.IsMp3)            {              foreach (PopmFrame popmframe in track.Ratings)              {                AddRating(popmframe.User' Convert.ToString(popmframe.Rating)' Convert.ToString(popmframe.PlayCount));              }            }            if (track.IsMp3)              groupBoxRating.Enabled = true;            else              groupBoxRating.Enabled = false;              #endregion          }            i++;        }
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,FillForm,The following statement contains a magic number: if (_isMultiTagEdit)        {          // Auto fill the Number of Tracks field          if (tbNumTracks.Text == "")          {            tbNumTracks.Text = main.TracksGridView.View.SelectedRows.Count.ToString().PadLeft(2' '0');            if (Options.MainSettings.AutoFillNumberOfTracks)            {              ckTrack.Checked = true;            }          }            cbArtist.Items.Clear();          cbAlbumArtist.Items.Clear();          cbAlbum.Items.Clear();            // Now see' if we have different values in the Artist and AlbumArtist fields and fill the combo          List<string> itemsArtist = new List<string>();          List<string> itemsAlbumArtist = new List<string>();          List<string> itemsAlbum = new List<string>();          foreach (DataGridViewRow row in main.TracksGridView.View.SelectedRows)          {            TrackData track = Options.Songlist[row.Index];              bool found = false;            foreach (string item in itemsArtist)            {              if (item == track.Artist)              {                found = true;                break;              }            }              if (!found)            {              itemsArtist.Add(track.Artist);            }              found = false;            foreach (string item in itemsAlbumArtist)            {              if (item == track.AlbumArtist)              {                found = true;                break;              }            }              if (!found)            {              itemsAlbumArtist.Add(track.AlbumArtist);            }              found = false;            foreach (string item in itemsAlbum)            {              if (item == track.Album)              {                found = true;                break;              }            }              if (!found)            {              itemsAlbum.Add(track.Album);            }          }            if (itemsArtist.Count > 0)          {            cbArtist.Items.AddRange(itemsArtist.ToArray());          }            if (itemsAlbumArtist.Count > 0)          {            cbAlbumArtist.Items.AddRange(itemsAlbumArtist.ToArray());          }            if (itemsAlbum.Count > 0)          {            cbAlbum.Items.AddRange(itemsAlbum.ToArray());          }            EnableTextBoxEvents(true);        }
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,AddComment,The following statement contains a magic number: if (lang.Length > 3)          lang = lang.Substring(0' 3);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,AddComment,The following statement contains a magic number: if (lang.Length > 3)          lang = lang.Substring(0' 3);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,AddComment,The following statement contains a magic number: for (int i = 0; i < dataGridViewComment.Rows.Count; i++)        {          if (desc == dataGridViewComment.Rows[i].Cells[0].Value.ToString() &&              lang == dataGridViewComment.Rows[i].Cells[1].Value.ToString())          {            dataGridViewComment.Rows[i].Cells[2].Value = text;            found = true;            break;          }        }
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,AddRating,The following statement contains a magic number: for (int i = 0; i < dataGridViewRating.Rows.Count; i++)        {          if (user == dataGridViewRating.Rows[i].Cells[0].Value.ToString())          {            dataGridViewRating.Rows[i].Cells[1].Value = rating;            dataGridViewRating.Rows[i].Cells[2].Value = playcount;            found = true;            break;          }        }
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,AddLyrics,The following statement contains a magic number: if (lang.Length > 3)          lang = lang.Substring(0' 3);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,AddLyrics,The following statement contains a magic number: if (lang.Length > 3)          lang = lang.Substring(0' 3);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,AddLyrics,The following statement contains a magic number: for (int i = 0; i < dataGridViewLyrics.Rows.Count; i++)        {          if (desc == dataGridViewLyrics.Rows[i].Cells[0].Value.ToString() &&              lang == dataGridViewLyrics.Rows[i].Cells[1].Value.ToString())          {            dataGridViewLyrics.Rows[i].Cells[2].Value = text;            found = true;            break;          }        }
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,btApply_Click,The following statement contains a magic number: foreach (DataGridViewRow row in tracksGrid.SelectedRows)        {          bool trackChanged = false;          TrackData track = Options.Songlist[row.Index];            main.TracksGridView.ClearStatusColumn(row.Index);            try          {            #region Main Tags              if (_isMultiTagEdit)            {              if (ckArtist.Checked)              {                track.Artist = cbArtist.Text.Trim();                trackChanged = true;              }                if (ckAlbumArtist.Checked)              {                track.AlbumArtist = cbAlbumArtist.Text.Trim();                trackChanged = true;              }                if (ckAlbum.Checked)              {                track.Album = cbAlbum.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.Artist != cbArtist.Text.Trim())              {                track.Artist = cbArtist.Text.Trim();                trackChanged = true;              }                if (track.AlbumArtist != cbAlbumArtist.Text.Trim())              {                track.AlbumArtist = cbAlbumArtist.Text.Trim();                trackChanged = true;              }                if (track.Album != tbAlbum.Text.Trim())              {                track.Album = tbAlbum.Text.Trim();                trackChanged = true;              }            }              if (track.Compilation != checkBoxCompilation.Checked)            {              track.Compilation = checkBoxCompilation.Checked;              trackChanged = true;            }              if (_isMultiTagEdit)            {              if (ckTitle.Checked)              {                track.Title = tbTitle.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.Title != tbTitle.Text.Trim())              {                track.Title = tbTitle.Text.Trim();                trackChanged = true;              }            }              int parsedYear = 0;            try            {              parsedYear = tbYear.Text.Trim() == "" ? 0 : Int32.Parse(tbYear.Text.Trim());            }            catch (Exception)            { }              if (_isMultiTagEdit)            {              if (ckYear.Checked)              {                track.Year = parsedYear;                trackChanged = true;              }            }            else            {              if (parsedYear != track.Year)              {                track.Year = parsedYear;                trackChanged = true;              }            }              int parsedBPM = 0;            try            {              parsedBPM = tbBPM.Text.Trim() == "" ? 0 : Int32.Parse(tbBPM.Text.Trim());            }            catch (Exception)            { }              if (_isMultiTagEdit)            {              if (ckBPM.Checked)              {                track.BPM = parsedBPM;                trackChanged = true;              }            }            else            {              if (parsedBPM != track.BPM)              {                track.BPM = parsedBPM;                trackChanged = true;              }            }              int tracknumber = 0;            int trackcount = 0;              try            {              tracknumber = tbTrack.Text.Trim() == "" ? 0 : Int32.Parse(tbTrack.Text.Trim());            }            catch (Exception) { }            try            {              trackcount = tbNumTracks.Text.Trim() == "" ? 0 : Int32.Parse(tbNumTracks.Text.Trim());            }            catch (Exception) { }              if (!_isMultiTagEdit && tracknumber != track.TrackNumber)            {              track.TrackNumber = (uint)tracknumber;              trackChanged = true;            }              if (_isMultiTagEdit)            {              if (ckTrack.Checked)              {                track.TrackCount = (uint)trackcount;                trackChanged = true;              }            }            else            {              if (trackcount != track.TrackCount)              {                track.TrackCount = (uint)trackcount;                trackChanged = true;              }            }              int discnumber = 0;            int disccount = 0;              try            {              discnumber = tbDisc.Text.Trim() == "" ? 0 : Int32.Parse(tbDisc.Text.Trim());            }            catch (Exception) { }            try            {              disccount = tbNumDiscs.Text.Trim() == "" ? 0 : Int32.Parse(tbNumDiscs.Text.Trim());            }            catch (Exception) { }              if (discnumber != track.DiscNumber)            {              if (_isMultiTagEdit)              {                if (ckDisk.Checked)                {                  track.DiscNumber = (uint)discnumber;                  trackChanged = true;                }              }              else              {                track.DiscNumber = (uint)discnumber;                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckDisk.Checked)              {                track.DiscCount = (uint)disccount;                trackChanged = true;              }            }            else            {              if (disccount != track.DiscCount)              {                track.DiscCount = (uint)disccount;                trackChanged = true;              }            }              string genre = "";            int i = 0;            if (cbGenre.Text.Trim() != "")            {              genre += cbGenre.Text.Trim();              i = 1;            }            foreach (string item in listBoxGenre.Items)            {              if (i == 0)                genre += item;              else                genre += ";" + item;              i++;            }              if (_isMultiTagEdit)            {              if (ckGenre.Checked)              {                track.Genre = genre;                trackChanged = true;              }            }            else            {              if (track.Genre != genre)              {                track.Genre = genre;                trackChanged = true;              }            }              if (checkBoxRemoveComments.Checked)            {              if (track.ID3Comments.Count > 0)              {                trackChanged = true;              }              track.ID3Comments.Clear();            }              List<Comment> comments = new List<Comment>();            foreach (DataGridViewRow commentRow in dataGridViewComment.Rows)            {              Comment comment = new Comment(commentRow.Cells[0].Value.ToString()' commentRow.Cells[1].Value.ToString()'                                            commentRow.Cells[2].Value.ToString());              comments.Add(comment);            }              if (_isMultiTagEdit && (comments.Count > 0 || _commentIsChanged))            {              track.ID3Comments.Clear();              track.ID3Comments.AddRange(comments);              trackChanged = true;            }            else            {              if (_commentIsChanged)              {                track.ID3Comments.Clear();                track.ID3Comments.AddRange(comments);                trackChanged = true;              }            }              #endregion              #region Picture              if (checkBoxRemoveExistingPictures.Checked)            {              track.Pictures.Clear();              trackChanged = true;            }              if (_pictureIsChanged)            {              track.Pictures.Clear();              track.Pictures.AddRange(_pictures);              trackChanged = true;            }              #endregion              #region Detailed Information              if (_isMultiTagEdit)            {              if (ckConductor.Checked)              {                track.Conductor = tbConductor.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.Conductor != tbConductor.Text.Trim())              {                track.Conductor = tbConductor.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckComposer.Checked)              {                track.Composer = tbComposer.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.Composer != tbComposer.Text.Trim())              {                track.Composer = tbComposer.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckCopyright.Checked)              {                track.Copyright = tbCopyright.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.Copyright != tbCopyright.Text.Trim())              {                track.Copyright = tbCopyright.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckContentGroup.Checked)              {                track.Grouping = tbContentGroup.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.Grouping != tbContentGroup.Text.Trim())              {                track.Grouping = tbContentGroup.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckInterpretedBy.Checked)              {                track.Interpreter = tbInterpretedBy.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.Interpreter != tbInterpretedBy.Text.Trim())              {                track.Interpreter = tbInterpretedBy.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckTextWriter.Checked)              {                track.TextWriter = tbTextWriter.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.TextWriter != tbTextWriter.Text.Trim())              {                track.TextWriter = tbTextWriter.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckPublisher.Checked)              {                track.Publisher = tbPublisher.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.Publisher != tbPublisher.Text.Trim())              {                track.Publisher = tbPublisher.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckEncodedBy.Checked)              {                track.EncodedBy = tbEncodedBy.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.EncodedBy != tbEncodedBy.Text.Trim())              {                track.EncodedBy = tbEncodedBy.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckSubTitle.Checked)              {                track.SubTitle = tbSubTitle.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.SubTitle != tbSubTitle.Text.Trim())              {                track.SubTitle = tbSubTitle.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckMediaType.Checked)              {                track.MediaType = cbMediaType.SelectedText;                trackChanged = true;              }            }            else            {              if (track.MediaType != cbMediaType.SelectedText)              {                track.MediaType = cbMediaType.SelectedText;                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckTrackLength.Checked)              {                track.TrackLength = track.DurationTimespan.TotalMilliseconds.ToString();                trackChanged = true;              }            }            else            {              if (track.TrackLength != tbTrackLength.Text)              {                track.TrackLength = tbTrackLength.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckArtistSort.Checked)              {                track.ArtistSortName = tbArtistSort.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.ArtistSortName != tbArtistSort.Text)              {                track.ArtistSortName = tbArtistSort.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckAlbumArtistSort.Checked)              {                track.AlbumArtistSortName = tbAlbumArtistSort.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.AlbumArtistSortName != tbAlbumArtistSort.Text)              {                track.AlbumArtistSortName = tbAlbumArtistSort.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckAlbumSort.Checked)              {                track.AlbumSortName = tbAlbumSort.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.AlbumSortName != tbAlbumSort.Text)              {                track.AlbumSortName = tbAlbumSort.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckTitleSort.Checked)              {                track.TitleSortName = tbTitleSort.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.TitleSortName != tbTitleSort.Text)              {                track.TitleSortName = tbTitleSort.Text.Trim();                trackChanged = true;              }            }              #endregion              #region Original Information              if (_isMultiTagEdit)            {              if (ckOriginalArtist.Checked)              {                track.OriginalArtist = tbOriginalArtist.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OriginalArtist != tbOriginalArtist.Text)              {                track.OriginalArtist = tbOriginalArtist.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOriginalAlbum.Checked)              {                track.OriginalAlbum = tbOriginalAlbum.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OriginalAlbum != tbOriginalAlbum.Text)              {                track.OriginalAlbum = tbOriginalAlbum.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOriginalFileName.Checked)              {                track.OriginalFileName = tbOriginalFileName.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OriginalFileName != tbOriginalFileName.Text)              {                track.OriginalFileName = tbOriginalFileName.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOriginalLyricsWriter.Checked)              {                track.OriginalLyricsWriter = tbOriginalLyricsWriter.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OriginalLyricsWriter != tbOriginalLyricsWriter.Text)              {                track.OriginalLyricsWriter = tbOriginalLyricsWriter.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOriginalOwner.Checked)              {                track.OriginalOwner = tbOriginalOwner.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OriginalOwner != tbOriginalOwner.Text)              {                track.OriginalOwner = tbOriginalOwner.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOriginalRelease.Checked)              {                track.OriginalRelease = tbOriginalRelease.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OriginalRelease != tbOriginalRelease.Text)              {                track.OriginalRelease = tbOriginalRelease.Text.Trim();                trackChanged = true;              }            }              #endregion              #region Web Information              if (_isMultiTagEdit)            {              if (ckCopyrightUrl.Checked)              {                track.CopyrightInformation = tbCopyrightUrl.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.CopyrightInformation != tbCopyrightUrl.Text)              {                track.CopyrightInformation = tbCopyrightUrl.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOfficialAudioFileUrl.Checked)              {                track.OfficialAudioFileInformation = tbOfficialAudioFileUrl.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OfficialAudioFileInformation != tbOfficialAudioFileUrl.Text)              {                track.OfficialAudioFileInformation = tbOfficialAudioFileUrl.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOfficialArtistUrl.Checked)              {                track.OfficialArtistInformation = tbOfficialArtistUrl.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OfficialArtistInformation != tbOfficialArtistUrl.Text)              {                track.OfficialArtistInformation = tbOfficialArtistUrl.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOfficialAudioSourceUrl.Checked)              {                track.OfficialAudioSourceInformation = tbOfficialAudioSourceUrl.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OfficialAudioSourceInformation != tbOfficialAudioSourceUrl.Text)              {                track.OfficialAudioSourceInformation = tbOfficialAudioSourceUrl.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOfficialInternetRadioUrl.Checked)              {                track.OfficialInternetRadioInformation = tbOfficialInternetRadioUrl.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OfficialInternetRadioInformation != tbOfficialInternetRadioUrl.Text)              {                track.OfficialInternetRadioInformation = tbOfficialInternetRadioUrl.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOfficialPaymentUrl.Checked)              {                track.OfficialPaymentInformation = tbOfficialPaymentUrl.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OfficialPaymentInformation != tbOfficialPaymentUrl.Text)              {                track.OfficialPaymentInformation = tbOfficialPaymentUrl.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOfficialPublisherUrl.Checked)              {                track.OfficialPublisherInformation = tbOfficialPublisherUrl.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OfficialPublisherInformation != tbOfficialPublisherUrl.Text)              {                track.OfficialPublisherInformation = tbOfficialPublisherUrl.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckCommercialInformationUrl.Checked)              {                track.CommercialInformation = tbCommercialInformationUrl.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.CommercialInformation != tbCommercialInformationUrl.Text)              {                track.CommercialInformation = tbCommercialInformationUrl.Text.Trim();                trackChanged = true;              }            }              #endregion              #region Involved People              if (_involvedPeopleIsChanged)            {              char[] d = new char[1] { '\0' };              string delim = new string(d);              string tmp = "";                foreach (DataGridViewRow pplrow in dataGridViewInvolvedPeople.Rows)              {                tmp += string.Format(@"{0}{1}{2}{3}"' pplrow.Cells[0].Value' delim' pplrow.Cells[1].Value' delim);              }                if (tmp != "")                tmp.Trim(new[] { '\0' });                track.InvolvedPeople = tmp;              trackChanged = true;            }              if (_musicianIsChanged)            {              char[] d = new char[1] { '\0' };              string delim = new string(d);              string tmp = "";                foreach (DataGridViewRow musicianrow in dataGridViewMusician.Rows)              {                tmp += string.Format(@"{0}{1}{2}{3}"' musicianrow.Cells[0].Value' delim' musicianrow.Cells[1].Value' delim);              }                if (tmp != null)                tmp.Trim(new[] { '\0' });                track.MusicCreditList = tmp;              trackChanged = true;            }              #endregion              #region Lyrics              if (ckRemoveLyrics.Checked)            {              track.LyricsFrames.Clear();              trackChanged = true;            }              if (_lyricsIsChanged)            {              List<Lyric> lyrics = new List<Lyric>();              foreach (DataGridViewRow lyricsrow in dataGridViewLyrics.Rows)              {                Lyric lyric = new Lyric(lyricsrow.Cells[0].Value.ToString()' lyricsrow.Cells[1].Value.ToString()'                                        lyricsrow.Cells[2].Value.ToString());                lyrics.Add(lyric);              }                if (lyrics.Count > 0)              {                track.LyricsFrames.Clear();                track.LyricsFrames.AddRange(lyrics);              }              else              {                track.LyricsFrames.Clear();              }                trackChanged = true;            }              #endregion              #region Rating              if (ckRemoveExistingRatings.Checked)            {              track.Ratings.Clear();              trackChanged = true;            }              if (_ratingIsChanged)            {              List<PopmFrame> ratings = new List<PopmFrame>();              foreach (DataGridViewRow ratingRow in dataGridViewRating.Rows)              {                PopmFrame rating = new PopmFrame(ratingRow.Cells[0].Value.ToString()' Convert.ToInt32(ratingRow.Cells[1].Value.ToString())'                                           Convert.ToInt32(ratingRow.Cells[2].Value.ToString()));                ratings.Add(rating);              }                if (ratings.Count > 0)              {                track.Ratings.Clear();                track.Ratings.AddRange(ratings);              }              else              {                track.Ratings.Clear();              }              trackChanged = true;            }              #endregion              #region User Defined Frames              if (_userFrameIsChanged)            {              List<Frame> userFrames = new List<Frame>();              foreach (DataGridViewRow userFrameRow in dataGridViewUserFrames.Rows)              {                Frame frame = new Frame(userFrameRow.Cells[0].Value.ToString()' userFrameRow.Cells[1].Value.ToString()'                                        userFrameRow.Cells[2].Value.ToString());                userFrames.Add(frame);              }                // Let's save the Current User frames first' so that on Save we are able to delete them to avoid duplicates              track.SavedUserFrames = new List<Frame>(track.UserFrames);                if (userFrames.Count > 0)              {                track.UserFrames.Clear();                track.UserFrames.AddRange(userFrames);              }              else              {                track.UserFrames.Clear();              }              trackChanged = true;            }              #endregion              if (trackChanged)            {              main.TracksGridView.Changed = true;              main.TracksGridView.SetBackgroundColorChanged(row.Index);              track.Changed = true;              Options.Songlist[row.Index] = track;            }          }          catch (Exception ex)          {            log.Error("Error applying changes from Tagedit: {0} stack: {1}"' ex.Message' ex.StackTrace);            Options.Songlist[row.Index].Status = 2;            main.TracksGridView.AddErrorMessage(row' ex.Message);            bErrors = true;          }        }
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,btApply_Click,The following statement contains a magic number: foreach (DataGridViewRow row in tracksGrid.SelectedRows)        {          bool trackChanged = false;          TrackData track = Options.Songlist[row.Index];            main.TracksGridView.ClearStatusColumn(row.Index);            try          {            #region Main Tags              if (_isMultiTagEdit)            {              if (ckArtist.Checked)              {                track.Artist = cbArtist.Text.Trim();                trackChanged = true;              }                if (ckAlbumArtist.Checked)              {                track.AlbumArtist = cbAlbumArtist.Text.Trim();                trackChanged = true;              }                if (ckAlbum.Checked)              {                track.Album = cbAlbum.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.Artist != cbArtist.Text.Trim())              {                track.Artist = cbArtist.Text.Trim();                trackChanged = true;              }                if (track.AlbumArtist != cbAlbumArtist.Text.Trim())              {                track.AlbumArtist = cbAlbumArtist.Text.Trim();                trackChanged = true;              }                if (track.Album != tbAlbum.Text.Trim())              {                track.Album = tbAlbum.Text.Trim();                trackChanged = true;              }            }              if (track.Compilation != checkBoxCompilation.Checked)            {              track.Compilation = checkBoxCompilation.Checked;              trackChanged = true;            }              if (_isMultiTagEdit)            {              if (ckTitle.Checked)              {                track.Title = tbTitle.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.Title != tbTitle.Text.Trim())              {                track.Title = tbTitle.Text.Trim();                trackChanged = true;              }            }              int parsedYear = 0;            try            {              parsedYear = tbYear.Text.Trim() == "" ? 0 : Int32.Parse(tbYear.Text.Trim());            }            catch (Exception)            { }              if (_isMultiTagEdit)            {              if (ckYear.Checked)              {                track.Year = parsedYear;                trackChanged = true;              }            }            else            {              if (parsedYear != track.Year)              {                track.Year = parsedYear;                trackChanged = true;              }            }              int parsedBPM = 0;            try            {              parsedBPM = tbBPM.Text.Trim() == "" ? 0 : Int32.Parse(tbBPM.Text.Trim());            }            catch (Exception)            { }              if (_isMultiTagEdit)            {              if (ckBPM.Checked)              {                track.BPM = parsedBPM;                trackChanged = true;              }            }            else            {              if (parsedBPM != track.BPM)              {                track.BPM = parsedBPM;                trackChanged = true;              }            }              int tracknumber = 0;            int trackcount = 0;              try            {              tracknumber = tbTrack.Text.Trim() == "" ? 0 : Int32.Parse(tbTrack.Text.Trim());            }            catch (Exception) { }            try            {              trackcount = tbNumTracks.Text.Trim() == "" ? 0 : Int32.Parse(tbNumTracks.Text.Trim());            }            catch (Exception) { }              if (!_isMultiTagEdit && tracknumber != track.TrackNumber)            {              track.TrackNumber = (uint)tracknumber;              trackChanged = true;            }              if (_isMultiTagEdit)            {              if (ckTrack.Checked)              {                track.TrackCount = (uint)trackcount;                trackChanged = true;              }            }            else            {              if (trackcount != track.TrackCount)              {                track.TrackCount = (uint)trackcount;                trackChanged = true;              }            }              int discnumber = 0;            int disccount = 0;              try            {              discnumber = tbDisc.Text.Trim() == "" ? 0 : Int32.Parse(tbDisc.Text.Trim());            }            catch (Exception) { }            try            {              disccount = tbNumDiscs.Text.Trim() == "" ? 0 : Int32.Parse(tbNumDiscs.Text.Trim());            }            catch (Exception) { }              if (discnumber != track.DiscNumber)            {              if (_isMultiTagEdit)              {                if (ckDisk.Checked)                {                  track.DiscNumber = (uint)discnumber;                  trackChanged = true;                }              }              else              {                track.DiscNumber = (uint)discnumber;                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckDisk.Checked)              {                track.DiscCount = (uint)disccount;                trackChanged = true;              }            }            else            {              if (disccount != track.DiscCount)              {                track.DiscCount = (uint)disccount;                trackChanged = true;              }            }              string genre = "";            int i = 0;            if (cbGenre.Text.Trim() != "")            {              genre += cbGenre.Text.Trim();              i = 1;            }            foreach (string item in listBoxGenre.Items)            {              if (i == 0)                genre += item;              else                genre += ";" + item;              i++;            }              if (_isMultiTagEdit)            {              if (ckGenre.Checked)              {                track.Genre = genre;                trackChanged = true;              }            }            else            {              if (track.Genre != genre)              {                track.Genre = genre;                trackChanged = true;              }            }              if (checkBoxRemoveComments.Checked)            {              if (track.ID3Comments.Count > 0)              {                trackChanged = true;              }              track.ID3Comments.Clear();            }              List<Comment> comments = new List<Comment>();            foreach (DataGridViewRow commentRow in dataGridViewComment.Rows)            {              Comment comment = new Comment(commentRow.Cells[0].Value.ToString()' commentRow.Cells[1].Value.ToString()'                                            commentRow.Cells[2].Value.ToString());              comments.Add(comment);            }              if (_isMultiTagEdit && (comments.Count > 0 || _commentIsChanged))            {              track.ID3Comments.Clear();              track.ID3Comments.AddRange(comments);              trackChanged = true;            }            else            {              if (_commentIsChanged)              {                track.ID3Comments.Clear();                track.ID3Comments.AddRange(comments);                trackChanged = true;              }            }              #endregion              #region Picture              if (checkBoxRemoveExistingPictures.Checked)            {              track.Pictures.Clear();              trackChanged = true;            }              if (_pictureIsChanged)            {              track.Pictures.Clear();              track.Pictures.AddRange(_pictures);              trackChanged = true;            }              #endregion              #region Detailed Information              if (_isMultiTagEdit)            {              if (ckConductor.Checked)              {                track.Conductor = tbConductor.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.Conductor != tbConductor.Text.Trim())              {                track.Conductor = tbConductor.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckComposer.Checked)              {                track.Composer = tbComposer.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.Composer != tbComposer.Text.Trim())              {                track.Composer = tbComposer.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckCopyright.Checked)              {                track.Copyright = tbCopyright.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.Copyright != tbCopyright.Text.Trim())              {                track.Copyright = tbCopyright.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckContentGroup.Checked)              {                track.Grouping = tbContentGroup.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.Grouping != tbContentGroup.Text.Trim())              {                track.Grouping = tbContentGroup.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckInterpretedBy.Checked)              {                track.Interpreter = tbInterpretedBy.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.Interpreter != tbInterpretedBy.Text.Trim())              {                track.Interpreter = tbInterpretedBy.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckTextWriter.Checked)              {                track.TextWriter = tbTextWriter.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.TextWriter != tbTextWriter.Text.Trim())              {                track.TextWriter = tbTextWriter.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckPublisher.Checked)              {                track.Publisher = tbPublisher.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.Publisher != tbPublisher.Text.Trim())              {                track.Publisher = tbPublisher.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckEncodedBy.Checked)              {                track.EncodedBy = tbEncodedBy.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.EncodedBy != tbEncodedBy.Text.Trim())              {                track.EncodedBy = tbEncodedBy.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckSubTitle.Checked)              {                track.SubTitle = tbSubTitle.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.SubTitle != tbSubTitle.Text.Trim())              {                track.SubTitle = tbSubTitle.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckMediaType.Checked)              {                track.MediaType = cbMediaType.SelectedText;                trackChanged = true;              }            }            else            {              if (track.MediaType != cbMediaType.SelectedText)              {                track.MediaType = cbMediaType.SelectedText;                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckTrackLength.Checked)              {                track.TrackLength = track.DurationTimespan.TotalMilliseconds.ToString();                trackChanged = true;              }            }            else            {              if (track.TrackLength != tbTrackLength.Text)              {                track.TrackLength = tbTrackLength.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckArtistSort.Checked)              {                track.ArtistSortName = tbArtistSort.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.ArtistSortName != tbArtistSort.Text)              {                track.ArtistSortName = tbArtistSort.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckAlbumArtistSort.Checked)              {                track.AlbumArtistSortName = tbAlbumArtistSort.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.AlbumArtistSortName != tbAlbumArtistSort.Text)              {                track.AlbumArtistSortName = tbAlbumArtistSort.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckAlbumSort.Checked)              {                track.AlbumSortName = tbAlbumSort.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.AlbumSortName != tbAlbumSort.Text)              {                track.AlbumSortName = tbAlbumSort.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckTitleSort.Checked)              {                track.TitleSortName = tbTitleSort.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.TitleSortName != tbTitleSort.Text)              {                track.TitleSortName = tbTitleSort.Text.Trim();                trackChanged = true;              }            }              #endregion              #region Original Information              if (_isMultiTagEdit)            {              if (ckOriginalArtist.Checked)              {                track.OriginalArtist = tbOriginalArtist.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OriginalArtist != tbOriginalArtist.Text)              {                track.OriginalArtist = tbOriginalArtist.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOriginalAlbum.Checked)              {                track.OriginalAlbum = tbOriginalAlbum.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OriginalAlbum != tbOriginalAlbum.Text)              {                track.OriginalAlbum = tbOriginalAlbum.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOriginalFileName.Checked)              {                track.OriginalFileName = tbOriginalFileName.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OriginalFileName != tbOriginalFileName.Text)              {                track.OriginalFileName = tbOriginalFileName.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOriginalLyricsWriter.Checked)              {                track.OriginalLyricsWriter = tbOriginalLyricsWriter.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OriginalLyricsWriter != tbOriginalLyricsWriter.Text)              {                track.OriginalLyricsWriter = tbOriginalLyricsWriter.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOriginalOwner.Checked)              {                track.OriginalOwner = tbOriginalOwner.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OriginalOwner != tbOriginalOwner.Text)              {                track.OriginalOwner = tbOriginalOwner.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOriginalRelease.Checked)              {                track.OriginalRelease = tbOriginalRelease.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OriginalRelease != tbOriginalRelease.Text)              {                track.OriginalRelease = tbOriginalRelease.Text.Trim();                trackChanged = true;              }            }              #endregion              #region Web Information              if (_isMultiTagEdit)            {              if (ckCopyrightUrl.Checked)              {                track.CopyrightInformation = tbCopyrightUrl.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.CopyrightInformation != tbCopyrightUrl.Text)              {                track.CopyrightInformation = tbCopyrightUrl.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOfficialAudioFileUrl.Checked)              {                track.OfficialAudioFileInformation = tbOfficialAudioFileUrl.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OfficialAudioFileInformation != tbOfficialAudioFileUrl.Text)              {                track.OfficialAudioFileInformation = tbOfficialAudioFileUrl.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOfficialArtistUrl.Checked)              {                track.OfficialArtistInformation = tbOfficialArtistUrl.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OfficialArtistInformation != tbOfficialArtistUrl.Text)              {                track.OfficialArtistInformation = tbOfficialArtistUrl.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOfficialAudioSourceUrl.Checked)              {                track.OfficialAudioSourceInformation = tbOfficialAudioSourceUrl.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OfficialAudioSourceInformation != tbOfficialAudioSourceUrl.Text)              {                track.OfficialAudioSourceInformation = tbOfficialAudioSourceUrl.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOfficialInternetRadioUrl.Checked)              {                track.OfficialInternetRadioInformation = tbOfficialInternetRadioUrl.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OfficialInternetRadioInformation != tbOfficialInternetRadioUrl.Text)              {                track.OfficialInternetRadioInformation = tbOfficialInternetRadioUrl.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOfficialPaymentUrl.Checked)              {                track.OfficialPaymentInformation = tbOfficialPaymentUrl.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OfficialPaymentInformation != tbOfficialPaymentUrl.Text)              {                track.OfficialPaymentInformation = tbOfficialPaymentUrl.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOfficialPublisherUrl.Checked)              {                track.OfficialPublisherInformation = tbOfficialPublisherUrl.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OfficialPublisherInformation != tbOfficialPublisherUrl.Text)              {                track.OfficialPublisherInformation = tbOfficialPublisherUrl.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckCommercialInformationUrl.Checked)              {                track.CommercialInformation = tbCommercialInformationUrl.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.CommercialInformation != tbCommercialInformationUrl.Text)              {                track.CommercialInformation = tbCommercialInformationUrl.Text.Trim();                trackChanged = true;              }            }              #endregion              #region Involved People              if (_involvedPeopleIsChanged)            {              char[] d = new char[1] { '\0' };              string delim = new string(d);              string tmp = "";                foreach (DataGridViewRow pplrow in dataGridViewInvolvedPeople.Rows)              {                tmp += string.Format(@"{0}{1}{2}{3}"' pplrow.Cells[0].Value' delim' pplrow.Cells[1].Value' delim);              }                if (tmp != "")                tmp.Trim(new[] { '\0' });                track.InvolvedPeople = tmp;              trackChanged = true;            }              if (_musicianIsChanged)            {              char[] d = new char[1] { '\0' };              string delim = new string(d);              string tmp = "";                foreach (DataGridViewRow musicianrow in dataGridViewMusician.Rows)              {                tmp += string.Format(@"{0}{1}{2}{3}"' musicianrow.Cells[0].Value' delim' musicianrow.Cells[1].Value' delim);              }                if (tmp != null)                tmp.Trim(new[] { '\0' });                track.MusicCreditList = tmp;              trackChanged = true;            }              #endregion              #region Lyrics              if (ckRemoveLyrics.Checked)            {              track.LyricsFrames.Clear();              trackChanged = true;            }              if (_lyricsIsChanged)            {              List<Lyric> lyrics = new List<Lyric>();              foreach (DataGridViewRow lyricsrow in dataGridViewLyrics.Rows)              {                Lyric lyric = new Lyric(lyricsrow.Cells[0].Value.ToString()' lyricsrow.Cells[1].Value.ToString()'                                        lyricsrow.Cells[2].Value.ToString());                lyrics.Add(lyric);              }                if (lyrics.Count > 0)              {                track.LyricsFrames.Clear();                track.LyricsFrames.AddRange(lyrics);              }              else              {                track.LyricsFrames.Clear();              }                trackChanged = true;            }              #endregion              #region Rating              if (ckRemoveExistingRatings.Checked)            {              track.Ratings.Clear();              trackChanged = true;            }              if (_ratingIsChanged)            {              List<PopmFrame> ratings = new List<PopmFrame>();              foreach (DataGridViewRow ratingRow in dataGridViewRating.Rows)              {                PopmFrame rating = new PopmFrame(ratingRow.Cells[0].Value.ToString()' Convert.ToInt32(ratingRow.Cells[1].Value.ToString())'                                           Convert.ToInt32(ratingRow.Cells[2].Value.ToString()));                ratings.Add(rating);              }                if (ratings.Count > 0)              {                track.Ratings.Clear();                track.Ratings.AddRange(ratings);              }              else              {                track.Ratings.Clear();              }              trackChanged = true;            }              #endregion              #region User Defined Frames              if (_userFrameIsChanged)            {              List<Frame> userFrames = new List<Frame>();              foreach (DataGridViewRow userFrameRow in dataGridViewUserFrames.Rows)              {                Frame frame = new Frame(userFrameRow.Cells[0].Value.ToString()' userFrameRow.Cells[1].Value.ToString()'                                        userFrameRow.Cells[2].Value.ToString());                userFrames.Add(frame);              }                // Let's save the Current User frames first' so that on Save we are able to delete them to avoid duplicates              track.SavedUserFrames = new List<Frame>(track.UserFrames);                if (userFrames.Count > 0)              {                track.UserFrames.Clear();                track.UserFrames.AddRange(userFrames);              }              else              {                track.UserFrames.Clear();              }              trackChanged = true;            }              #endregion              if (trackChanged)            {              main.TracksGridView.Changed = true;              main.TracksGridView.SetBackgroundColorChanged(row.Index);              track.Changed = true;              Options.Songlist[row.Index] = track;            }          }          catch (Exception ex)          {            log.Error("Error applying changes from Tagedit: {0} stack: {1}"' ex.Message' ex.StackTrace);            Options.Songlist[row.Index].Status = 2;            main.TracksGridView.AddErrorMessage(row' ex.Message);            bErrors = true;          }        }
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,btApply_Click,The following statement contains a magic number: foreach (DataGridViewRow row in tracksGrid.SelectedRows)        {          bool trackChanged = false;          TrackData track = Options.Songlist[row.Index];            main.TracksGridView.ClearStatusColumn(row.Index);            try          {            #region Main Tags              if (_isMultiTagEdit)            {              if (ckArtist.Checked)              {                track.Artist = cbArtist.Text.Trim();                trackChanged = true;              }                if (ckAlbumArtist.Checked)              {                track.AlbumArtist = cbAlbumArtist.Text.Trim();                trackChanged = true;              }                if (ckAlbum.Checked)              {                track.Album = cbAlbum.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.Artist != cbArtist.Text.Trim())              {                track.Artist = cbArtist.Text.Trim();                trackChanged = true;              }                if (track.AlbumArtist != cbAlbumArtist.Text.Trim())              {                track.AlbumArtist = cbAlbumArtist.Text.Trim();                trackChanged = true;              }                if (track.Album != tbAlbum.Text.Trim())              {                track.Album = tbAlbum.Text.Trim();                trackChanged = true;              }            }              if (track.Compilation != checkBoxCompilation.Checked)            {              track.Compilation = checkBoxCompilation.Checked;              trackChanged = true;            }              if (_isMultiTagEdit)            {              if (ckTitle.Checked)              {                track.Title = tbTitle.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.Title != tbTitle.Text.Trim())              {                track.Title = tbTitle.Text.Trim();                trackChanged = true;              }            }              int parsedYear = 0;            try            {              parsedYear = tbYear.Text.Trim() == "" ? 0 : Int32.Parse(tbYear.Text.Trim());            }            catch (Exception)            { }              if (_isMultiTagEdit)            {              if (ckYear.Checked)              {                track.Year = parsedYear;                trackChanged = true;              }            }            else            {              if (parsedYear != track.Year)              {                track.Year = parsedYear;                trackChanged = true;              }            }              int parsedBPM = 0;            try            {              parsedBPM = tbBPM.Text.Trim() == "" ? 0 : Int32.Parse(tbBPM.Text.Trim());            }            catch (Exception)            { }              if (_isMultiTagEdit)            {              if (ckBPM.Checked)              {                track.BPM = parsedBPM;                trackChanged = true;              }            }            else            {              if (parsedBPM != track.BPM)              {                track.BPM = parsedBPM;                trackChanged = true;              }            }              int tracknumber = 0;            int trackcount = 0;              try            {              tracknumber = tbTrack.Text.Trim() == "" ? 0 : Int32.Parse(tbTrack.Text.Trim());            }            catch (Exception) { }            try            {              trackcount = tbNumTracks.Text.Trim() == "" ? 0 : Int32.Parse(tbNumTracks.Text.Trim());            }            catch (Exception) { }              if (!_isMultiTagEdit && tracknumber != track.TrackNumber)            {              track.TrackNumber = (uint)tracknumber;              trackChanged = true;            }              if (_isMultiTagEdit)            {              if (ckTrack.Checked)              {                track.TrackCount = (uint)trackcount;                trackChanged = true;              }            }            else            {              if (trackcount != track.TrackCount)              {                track.TrackCount = (uint)trackcount;                trackChanged = true;              }            }              int discnumber = 0;            int disccount = 0;              try            {              discnumber = tbDisc.Text.Trim() == "" ? 0 : Int32.Parse(tbDisc.Text.Trim());            }            catch (Exception) { }            try            {              disccount = tbNumDiscs.Text.Trim() == "" ? 0 : Int32.Parse(tbNumDiscs.Text.Trim());            }            catch (Exception) { }              if (discnumber != track.DiscNumber)            {              if (_isMultiTagEdit)              {                if (ckDisk.Checked)                {                  track.DiscNumber = (uint)discnumber;                  trackChanged = true;                }              }              else              {                track.DiscNumber = (uint)discnumber;                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckDisk.Checked)              {                track.DiscCount = (uint)disccount;                trackChanged = true;              }            }            else            {              if (disccount != track.DiscCount)              {                track.DiscCount = (uint)disccount;                trackChanged = true;              }            }              string genre = "";            int i = 0;            if (cbGenre.Text.Trim() != "")            {              genre += cbGenre.Text.Trim();              i = 1;            }            foreach (string item in listBoxGenre.Items)            {              if (i == 0)                genre += item;              else                genre += ";" + item;              i++;            }              if (_isMultiTagEdit)            {              if (ckGenre.Checked)              {                track.Genre = genre;                trackChanged = true;              }            }            else            {              if (track.Genre != genre)              {                track.Genre = genre;                trackChanged = true;              }            }              if (checkBoxRemoveComments.Checked)            {              if (track.ID3Comments.Count > 0)              {                trackChanged = true;              }              track.ID3Comments.Clear();            }              List<Comment> comments = new List<Comment>();            foreach (DataGridViewRow commentRow in dataGridViewComment.Rows)            {              Comment comment = new Comment(commentRow.Cells[0].Value.ToString()' commentRow.Cells[1].Value.ToString()'                                            commentRow.Cells[2].Value.ToString());              comments.Add(comment);            }              if (_isMultiTagEdit && (comments.Count > 0 || _commentIsChanged))            {              track.ID3Comments.Clear();              track.ID3Comments.AddRange(comments);              trackChanged = true;            }            else            {              if (_commentIsChanged)              {                track.ID3Comments.Clear();                track.ID3Comments.AddRange(comments);                trackChanged = true;              }            }              #endregion              #region Picture              if (checkBoxRemoveExistingPictures.Checked)            {              track.Pictures.Clear();              trackChanged = true;            }              if (_pictureIsChanged)            {              track.Pictures.Clear();              track.Pictures.AddRange(_pictures);              trackChanged = true;            }              #endregion              #region Detailed Information              if (_isMultiTagEdit)            {              if (ckConductor.Checked)              {                track.Conductor = tbConductor.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.Conductor != tbConductor.Text.Trim())              {                track.Conductor = tbConductor.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckComposer.Checked)              {                track.Composer = tbComposer.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.Composer != tbComposer.Text.Trim())              {                track.Composer = tbComposer.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckCopyright.Checked)              {                track.Copyright = tbCopyright.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.Copyright != tbCopyright.Text.Trim())              {                track.Copyright = tbCopyright.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckContentGroup.Checked)              {                track.Grouping = tbContentGroup.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.Grouping != tbContentGroup.Text.Trim())              {                track.Grouping = tbContentGroup.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckInterpretedBy.Checked)              {                track.Interpreter = tbInterpretedBy.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.Interpreter != tbInterpretedBy.Text.Trim())              {                track.Interpreter = tbInterpretedBy.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckTextWriter.Checked)              {                track.TextWriter = tbTextWriter.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.TextWriter != tbTextWriter.Text.Trim())              {                track.TextWriter = tbTextWriter.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckPublisher.Checked)              {                track.Publisher = tbPublisher.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.Publisher != tbPublisher.Text.Trim())              {                track.Publisher = tbPublisher.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckEncodedBy.Checked)              {                track.EncodedBy = tbEncodedBy.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.EncodedBy != tbEncodedBy.Text.Trim())              {                track.EncodedBy = tbEncodedBy.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckSubTitle.Checked)              {                track.SubTitle = tbSubTitle.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.SubTitle != tbSubTitle.Text.Trim())              {                track.SubTitle = tbSubTitle.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckMediaType.Checked)              {                track.MediaType = cbMediaType.SelectedText;                trackChanged = true;              }            }            else            {              if (track.MediaType != cbMediaType.SelectedText)              {                track.MediaType = cbMediaType.SelectedText;                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckTrackLength.Checked)              {                track.TrackLength = track.DurationTimespan.TotalMilliseconds.ToString();                trackChanged = true;              }            }            else            {              if (track.TrackLength != tbTrackLength.Text)              {                track.TrackLength = tbTrackLength.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckArtistSort.Checked)              {                track.ArtistSortName = tbArtistSort.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.ArtistSortName != tbArtistSort.Text)              {                track.ArtistSortName = tbArtistSort.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckAlbumArtistSort.Checked)              {                track.AlbumArtistSortName = tbAlbumArtistSort.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.AlbumArtistSortName != tbAlbumArtistSort.Text)              {                track.AlbumArtistSortName = tbAlbumArtistSort.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckAlbumSort.Checked)              {                track.AlbumSortName = tbAlbumSort.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.AlbumSortName != tbAlbumSort.Text)              {                track.AlbumSortName = tbAlbumSort.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckTitleSort.Checked)              {                track.TitleSortName = tbTitleSort.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.TitleSortName != tbTitleSort.Text)              {                track.TitleSortName = tbTitleSort.Text.Trim();                trackChanged = true;              }            }              #endregion              #region Original Information              if (_isMultiTagEdit)            {              if (ckOriginalArtist.Checked)              {                track.OriginalArtist = tbOriginalArtist.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OriginalArtist != tbOriginalArtist.Text)              {                track.OriginalArtist = tbOriginalArtist.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOriginalAlbum.Checked)              {                track.OriginalAlbum = tbOriginalAlbum.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OriginalAlbum != tbOriginalAlbum.Text)              {                track.OriginalAlbum = tbOriginalAlbum.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOriginalFileName.Checked)              {                track.OriginalFileName = tbOriginalFileName.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OriginalFileName != tbOriginalFileName.Text)              {                track.OriginalFileName = tbOriginalFileName.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOriginalLyricsWriter.Checked)              {                track.OriginalLyricsWriter = tbOriginalLyricsWriter.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OriginalLyricsWriter != tbOriginalLyricsWriter.Text)              {                track.OriginalLyricsWriter = tbOriginalLyricsWriter.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOriginalOwner.Checked)              {                track.OriginalOwner = tbOriginalOwner.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OriginalOwner != tbOriginalOwner.Text)              {                track.OriginalOwner = tbOriginalOwner.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOriginalRelease.Checked)              {                track.OriginalRelease = tbOriginalRelease.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OriginalRelease != tbOriginalRelease.Text)              {                track.OriginalRelease = tbOriginalRelease.Text.Trim();                trackChanged = true;              }            }              #endregion              #region Web Information              if (_isMultiTagEdit)            {              if (ckCopyrightUrl.Checked)              {                track.CopyrightInformation = tbCopyrightUrl.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.CopyrightInformation != tbCopyrightUrl.Text)              {                track.CopyrightInformation = tbCopyrightUrl.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOfficialAudioFileUrl.Checked)              {                track.OfficialAudioFileInformation = tbOfficialAudioFileUrl.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OfficialAudioFileInformation != tbOfficialAudioFileUrl.Text)              {                track.OfficialAudioFileInformation = tbOfficialAudioFileUrl.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOfficialArtistUrl.Checked)              {                track.OfficialArtistInformation = tbOfficialArtistUrl.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OfficialArtistInformation != tbOfficialArtistUrl.Text)              {                track.OfficialArtistInformation = tbOfficialArtistUrl.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOfficialAudioSourceUrl.Checked)              {                track.OfficialAudioSourceInformation = tbOfficialAudioSourceUrl.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OfficialAudioSourceInformation != tbOfficialAudioSourceUrl.Text)              {                track.OfficialAudioSourceInformation = tbOfficialAudioSourceUrl.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOfficialInternetRadioUrl.Checked)              {                track.OfficialInternetRadioInformation = tbOfficialInternetRadioUrl.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OfficialInternetRadioInformation != tbOfficialInternetRadioUrl.Text)              {                track.OfficialInternetRadioInformation = tbOfficialInternetRadioUrl.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOfficialPaymentUrl.Checked)              {                track.OfficialPaymentInformation = tbOfficialPaymentUrl.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OfficialPaymentInformation != tbOfficialPaymentUrl.Text)              {                track.OfficialPaymentInformation = tbOfficialPaymentUrl.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOfficialPublisherUrl.Checked)              {                track.OfficialPublisherInformation = tbOfficialPublisherUrl.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OfficialPublisherInformation != tbOfficialPublisherUrl.Text)              {                track.OfficialPublisherInformation = tbOfficialPublisherUrl.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckCommercialInformationUrl.Checked)              {                track.CommercialInformation = tbCommercialInformationUrl.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.CommercialInformation != tbCommercialInformationUrl.Text)              {                track.CommercialInformation = tbCommercialInformationUrl.Text.Trim();                trackChanged = true;              }            }              #endregion              #region Involved People              if (_involvedPeopleIsChanged)            {              char[] d = new char[1] { '\0' };              string delim = new string(d);              string tmp = "";                foreach (DataGridViewRow pplrow in dataGridViewInvolvedPeople.Rows)              {                tmp += string.Format(@"{0}{1}{2}{3}"' pplrow.Cells[0].Value' delim' pplrow.Cells[1].Value' delim);              }                if (tmp != "")                tmp.Trim(new[] { '\0' });                track.InvolvedPeople = tmp;              trackChanged = true;            }              if (_musicianIsChanged)            {              char[] d = new char[1] { '\0' };              string delim = new string(d);              string tmp = "";                foreach (DataGridViewRow musicianrow in dataGridViewMusician.Rows)              {                tmp += string.Format(@"{0}{1}{2}{3}"' musicianrow.Cells[0].Value' delim' musicianrow.Cells[1].Value' delim);              }                if (tmp != null)                tmp.Trim(new[] { '\0' });                track.MusicCreditList = tmp;              trackChanged = true;            }              #endregion              #region Lyrics              if (ckRemoveLyrics.Checked)            {              track.LyricsFrames.Clear();              trackChanged = true;            }              if (_lyricsIsChanged)            {              List<Lyric> lyrics = new List<Lyric>();              foreach (DataGridViewRow lyricsrow in dataGridViewLyrics.Rows)              {                Lyric lyric = new Lyric(lyricsrow.Cells[0].Value.ToString()' lyricsrow.Cells[1].Value.ToString()'                                        lyricsrow.Cells[2].Value.ToString());                lyrics.Add(lyric);              }                if (lyrics.Count > 0)              {                track.LyricsFrames.Clear();                track.LyricsFrames.AddRange(lyrics);              }              else              {                track.LyricsFrames.Clear();              }                trackChanged = true;            }              #endregion              #region Rating              if (ckRemoveExistingRatings.Checked)            {              track.Ratings.Clear();              trackChanged = true;            }              if (_ratingIsChanged)            {              List<PopmFrame> ratings = new List<PopmFrame>();              foreach (DataGridViewRow ratingRow in dataGridViewRating.Rows)              {                PopmFrame rating = new PopmFrame(ratingRow.Cells[0].Value.ToString()' Convert.ToInt32(ratingRow.Cells[1].Value.ToString())'                                           Convert.ToInt32(ratingRow.Cells[2].Value.ToString()));                ratings.Add(rating);              }                if (ratings.Count > 0)              {                track.Ratings.Clear();                track.Ratings.AddRange(ratings);              }              else              {                track.Ratings.Clear();              }              trackChanged = true;            }              #endregion              #region User Defined Frames              if (_userFrameIsChanged)            {              List<Frame> userFrames = new List<Frame>();              foreach (DataGridViewRow userFrameRow in dataGridViewUserFrames.Rows)              {                Frame frame = new Frame(userFrameRow.Cells[0].Value.ToString()' userFrameRow.Cells[1].Value.ToString()'                                        userFrameRow.Cells[2].Value.ToString());                userFrames.Add(frame);              }                // Let's save the Current User frames first' so that on Save we are able to delete them to avoid duplicates              track.SavedUserFrames = new List<Frame>(track.UserFrames);                if (userFrames.Count > 0)              {                track.UserFrames.Clear();                track.UserFrames.AddRange(userFrames);              }              else              {                track.UserFrames.Clear();              }              trackChanged = true;            }              #endregion              if (trackChanged)            {              main.TracksGridView.Changed = true;              main.TracksGridView.SetBackgroundColorChanged(row.Index);              track.Changed = true;              Options.Songlist[row.Index] = track;            }          }          catch (Exception ex)          {            log.Error("Error applying changes from Tagedit: {0} stack: {1}"' ex.Message' ex.StackTrace);            Options.Songlist[row.Index].Status = 2;            main.TracksGridView.AddErrorMessage(row' ex.Message);            bErrors = true;          }        }
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,btApply_Click,The following statement contains a magic number: foreach (DataGridViewRow row in tracksGrid.SelectedRows)        {          bool trackChanged = false;          TrackData track = Options.Songlist[row.Index];            main.TracksGridView.ClearStatusColumn(row.Index);            try          {            #region Main Tags              if (_isMultiTagEdit)            {              if (ckArtist.Checked)              {                track.Artist = cbArtist.Text.Trim();                trackChanged = true;              }                if (ckAlbumArtist.Checked)              {                track.AlbumArtist = cbAlbumArtist.Text.Trim();                trackChanged = true;              }                if (ckAlbum.Checked)              {                track.Album = cbAlbum.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.Artist != cbArtist.Text.Trim())              {                track.Artist = cbArtist.Text.Trim();                trackChanged = true;              }                if (track.AlbumArtist != cbAlbumArtist.Text.Trim())              {                track.AlbumArtist = cbAlbumArtist.Text.Trim();                trackChanged = true;              }                if (track.Album != tbAlbum.Text.Trim())              {                track.Album = tbAlbum.Text.Trim();                trackChanged = true;              }            }              if (track.Compilation != checkBoxCompilation.Checked)            {              track.Compilation = checkBoxCompilation.Checked;              trackChanged = true;            }              if (_isMultiTagEdit)            {              if (ckTitle.Checked)              {                track.Title = tbTitle.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.Title != tbTitle.Text.Trim())              {                track.Title = tbTitle.Text.Trim();                trackChanged = true;              }            }              int parsedYear = 0;            try            {              parsedYear = tbYear.Text.Trim() == "" ? 0 : Int32.Parse(tbYear.Text.Trim());            }            catch (Exception)            { }              if (_isMultiTagEdit)            {              if (ckYear.Checked)              {                track.Year = parsedYear;                trackChanged = true;              }            }            else            {              if (parsedYear != track.Year)              {                track.Year = parsedYear;                trackChanged = true;              }            }              int parsedBPM = 0;            try            {              parsedBPM = tbBPM.Text.Trim() == "" ? 0 : Int32.Parse(tbBPM.Text.Trim());            }            catch (Exception)            { }              if (_isMultiTagEdit)            {              if (ckBPM.Checked)              {                track.BPM = parsedBPM;                trackChanged = true;              }            }            else            {              if (parsedBPM != track.BPM)              {                track.BPM = parsedBPM;                trackChanged = true;              }            }              int tracknumber = 0;            int trackcount = 0;              try            {              tracknumber = tbTrack.Text.Trim() == "" ? 0 : Int32.Parse(tbTrack.Text.Trim());            }            catch (Exception) { }            try            {              trackcount = tbNumTracks.Text.Trim() == "" ? 0 : Int32.Parse(tbNumTracks.Text.Trim());            }            catch (Exception) { }              if (!_isMultiTagEdit && tracknumber != track.TrackNumber)            {              track.TrackNumber = (uint)tracknumber;              trackChanged = true;            }              if (_isMultiTagEdit)            {              if (ckTrack.Checked)              {                track.TrackCount = (uint)trackcount;                trackChanged = true;              }            }            else            {              if (trackcount != track.TrackCount)              {                track.TrackCount = (uint)trackcount;                trackChanged = true;              }            }              int discnumber = 0;            int disccount = 0;              try            {              discnumber = tbDisc.Text.Trim() == "" ? 0 : Int32.Parse(tbDisc.Text.Trim());            }            catch (Exception) { }            try            {              disccount = tbNumDiscs.Text.Trim() == "" ? 0 : Int32.Parse(tbNumDiscs.Text.Trim());            }            catch (Exception) { }              if (discnumber != track.DiscNumber)            {              if (_isMultiTagEdit)              {                if (ckDisk.Checked)                {                  track.DiscNumber = (uint)discnumber;                  trackChanged = true;                }              }              else              {                track.DiscNumber = (uint)discnumber;                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckDisk.Checked)              {                track.DiscCount = (uint)disccount;                trackChanged = true;              }            }            else            {              if (disccount != track.DiscCount)              {                track.DiscCount = (uint)disccount;                trackChanged = true;              }            }              string genre = "";            int i = 0;            if (cbGenre.Text.Trim() != "")            {              genre += cbGenre.Text.Trim();              i = 1;            }            foreach (string item in listBoxGenre.Items)            {              if (i == 0)                genre += item;              else                genre += ";" + item;              i++;            }              if (_isMultiTagEdit)            {              if (ckGenre.Checked)              {                track.Genre = genre;                trackChanged = true;              }            }            else            {              if (track.Genre != genre)              {                track.Genre = genre;                trackChanged = true;              }            }              if (checkBoxRemoveComments.Checked)            {              if (track.ID3Comments.Count > 0)              {                trackChanged = true;              }              track.ID3Comments.Clear();            }              List<Comment> comments = new List<Comment>();            foreach (DataGridViewRow commentRow in dataGridViewComment.Rows)            {              Comment comment = new Comment(commentRow.Cells[0].Value.ToString()' commentRow.Cells[1].Value.ToString()'                                            commentRow.Cells[2].Value.ToString());              comments.Add(comment);            }              if (_isMultiTagEdit && (comments.Count > 0 || _commentIsChanged))            {              track.ID3Comments.Clear();              track.ID3Comments.AddRange(comments);              trackChanged = true;            }            else            {              if (_commentIsChanged)              {                track.ID3Comments.Clear();                track.ID3Comments.AddRange(comments);                trackChanged = true;              }            }              #endregion              #region Picture              if (checkBoxRemoveExistingPictures.Checked)            {              track.Pictures.Clear();              trackChanged = true;            }              if (_pictureIsChanged)            {              track.Pictures.Clear();              track.Pictures.AddRange(_pictures);              trackChanged = true;            }              #endregion              #region Detailed Information              if (_isMultiTagEdit)            {              if (ckConductor.Checked)              {                track.Conductor = tbConductor.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.Conductor != tbConductor.Text.Trim())              {                track.Conductor = tbConductor.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckComposer.Checked)              {                track.Composer = tbComposer.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.Composer != tbComposer.Text.Trim())              {                track.Composer = tbComposer.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckCopyright.Checked)              {                track.Copyright = tbCopyright.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.Copyright != tbCopyright.Text.Trim())              {                track.Copyright = tbCopyright.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckContentGroup.Checked)              {                track.Grouping = tbContentGroup.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.Grouping != tbContentGroup.Text.Trim())              {                track.Grouping = tbContentGroup.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckInterpretedBy.Checked)              {                track.Interpreter = tbInterpretedBy.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.Interpreter != tbInterpretedBy.Text.Trim())              {                track.Interpreter = tbInterpretedBy.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckTextWriter.Checked)              {                track.TextWriter = tbTextWriter.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.TextWriter != tbTextWriter.Text.Trim())              {                track.TextWriter = tbTextWriter.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckPublisher.Checked)              {                track.Publisher = tbPublisher.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.Publisher != tbPublisher.Text.Trim())              {                track.Publisher = tbPublisher.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckEncodedBy.Checked)              {                track.EncodedBy = tbEncodedBy.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.EncodedBy != tbEncodedBy.Text.Trim())              {                track.EncodedBy = tbEncodedBy.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckSubTitle.Checked)              {                track.SubTitle = tbSubTitle.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.SubTitle != tbSubTitle.Text.Trim())              {                track.SubTitle = tbSubTitle.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckMediaType.Checked)              {                track.MediaType = cbMediaType.SelectedText;                trackChanged = true;              }            }            else            {              if (track.MediaType != cbMediaType.SelectedText)              {                track.MediaType = cbMediaType.SelectedText;                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckTrackLength.Checked)              {                track.TrackLength = track.DurationTimespan.TotalMilliseconds.ToString();                trackChanged = true;              }            }            else            {              if (track.TrackLength != tbTrackLength.Text)              {                track.TrackLength = tbTrackLength.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckArtistSort.Checked)              {                track.ArtistSortName = tbArtistSort.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.ArtistSortName != tbArtistSort.Text)              {                track.ArtistSortName = tbArtistSort.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckAlbumArtistSort.Checked)              {                track.AlbumArtistSortName = tbAlbumArtistSort.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.AlbumArtistSortName != tbAlbumArtistSort.Text)              {                track.AlbumArtistSortName = tbAlbumArtistSort.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckAlbumSort.Checked)              {                track.AlbumSortName = tbAlbumSort.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.AlbumSortName != tbAlbumSort.Text)              {                track.AlbumSortName = tbAlbumSort.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckTitleSort.Checked)              {                track.TitleSortName = tbTitleSort.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.TitleSortName != tbTitleSort.Text)              {                track.TitleSortName = tbTitleSort.Text.Trim();                trackChanged = true;              }            }              #endregion              #region Original Information              if (_isMultiTagEdit)            {              if (ckOriginalArtist.Checked)              {                track.OriginalArtist = tbOriginalArtist.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OriginalArtist != tbOriginalArtist.Text)              {                track.OriginalArtist = tbOriginalArtist.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOriginalAlbum.Checked)              {                track.OriginalAlbum = tbOriginalAlbum.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OriginalAlbum != tbOriginalAlbum.Text)              {                track.OriginalAlbum = tbOriginalAlbum.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOriginalFileName.Checked)              {                track.OriginalFileName = tbOriginalFileName.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OriginalFileName != tbOriginalFileName.Text)              {                track.OriginalFileName = tbOriginalFileName.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOriginalLyricsWriter.Checked)              {                track.OriginalLyricsWriter = tbOriginalLyricsWriter.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OriginalLyricsWriter != tbOriginalLyricsWriter.Text)              {                track.OriginalLyricsWriter = tbOriginalLyricsWriter.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOriginalOwner.Checked)              {                track.OriginalOwner = tbOriginalOwner.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OriginalOwner != tbOriginalOwner.Text)              {                track.OriginalOwner = tbOriginalOwner.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOriginalRelease.Checked)              {                track.OriginalRelease = tbOriginalRelease.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OriginalRelease != tbOriginalRelease.Text)              {                track.OriginalRelease = tbOriginalRelease.Text.Trim();                trackChanged = true;              }            }              #endregion              #region Web Information              if (_isMultiTagEdit)            {              if (ckCopyrightUrl.Checked)              {                track.CopyrightInformation = tbCopyrightUrl.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.CopyrightInformation != tbCopyrightUrl.Text)              {                track.CopyrightInformation = tbCopyrightUrl.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOfficialAudioFileUrl.Checked)              {                track.OfficialAudioFileInformation = tbOfficialAudioFileUrl.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OfficialAudioFileInformation != tbOfficialAudioFileUrl.Text)              {                track.OfficialAudioFileInformation = tbOfficialAudioFileUrl.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOfficialArtistUrl.Checked)              {                track.OfficialArtistInformation = tbOfficialArtistUrl.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OfficialArtistInformation != tbOfficialArtistUrl.Text)              {                track.OfficialArtistInformation = tbOfficialArtistUrl.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOfficialAudioSourceUrl.Checked)              {                track.OfficialAudioSourceInformation = tbOfficialAudioSourceUrl.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OfficialAudioSourceInformation != tbOfficialAudioSourceUrl.Text)              {                track.OfficialAudioSourceInformation = tbOfficialAudioSourceUrl.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOfficialInternetRadioUrl.Checked)              {                track.OfficialInternetRadioInformation = tbOfficialInternetRadioUrl.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OfficialInternetRadioInformation != tbOfficialInternetRadioUrl.Text)              {                track.OfficialInternetRadioInformation = tbOfficialInternetRadioUrl.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOfficialPaymentUrl.Checked)              {                track.OfficialPaymentInformation = tbOfficialPaymentUrl.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OfficialPaymentInformation != tbOfficialPaymentUrl.Text)              {                track.OfficialPaymentInformation = tbOfficialPaymentUrl.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOfficialPublisherUrl.Checked)              {                track.OfficialPublisherInformation = tbOfficialPublisherUrl.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OfficialPublisherInformation != tbOfficialPublisherUrl.Text)              {                track.OfficialPublisherInformation = tbOfficialPublisherUrl.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckCommercialInformationUrl.Checked)              {                track.CommercialInformation = tbCommercialInformationUrl.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.CommercialInformation != tbCommercialInformationUrl.Text)              {                track.CommercialInformation = tbCommercialInformationUrl.Text.Trim();                trackChanged = true;              }            }              #endregion              #region Involved People              if (_involvedPeopleIsChanged)            {              char[] d = new char[1] { '\0' };              string delim = new string(d);              string tmp = "";                foreach (DataGridViewRow pplrow in dataGridViewInvolvedPeople.Rows)              {                tmp += string.Format(@"{0}{1}{2}{3}"' pplrow.Cells[0].Value' delim' pplrow.Cells[1].Value' delim);              }                if (tmp != "")                tmp.Trim(new[] { '\0' });                track.InvolvedPeople = tmp;              trackChanged = true;            }              if (_musicianIsChanged)            {              char[] d = new char[1] { '\0' };              string delim = new string(d);              string tmp = "";                foreach (DataGridViewRow musicianrow in dataGridViewMusician.Rows)              {                tmp += string.Format(@"{0}{1}{2}{3}"' musicianrow.Cells[0].Value' delim' musicianrow.Cells[1].Value' delim);              }                if (tmp != null)                tmp.Trim(new[] { '\0' });                track.MusicCreditList = tmp;              trackChanged = true;            }              #endregion              #region Lyrics              if (ckRemoveLyrics.Checked)            {              track.LyricsFrames.Clear();              trackChanged = true;            }              if (_lyricsIsChanged)            {              List<Lyric> lyrics = new List<Lyric>();              foreach (DataGridViewRow lyricsrow in dataGridViewLyrics.Rows)              {                Lyric lyric = new Lyric(lyricsrow.Cells[0].Value.ToString()' lyricsrow.Cells[1].Value.ToString()'                                        lyricsrow.Cells[2].Value.ToString());                lyrics.Add(lyric);              }                if (lyrics.Count > 0)              {                track.LyricsFrames.Clear();                track.LyricsFrames.AddRange(lyrics);              }              else              {                track.LyricsFrames.Clear();              }                trackChanged = true;            }              #endregion              #region Rating              if (ckRemoveExistingRatings.Checked)            {              track.Ratings.Clear();              trackChanged = true;            }              if (_ratingIsChanged)            {              List<PopmFrame> ratings = new List<PopmFrame>();              foreach (DataGridViewRow ratingRow in dataGridViewRating.Rows)              {                PopmFrame rating = new PopmFrame(ratingRow.Cells[0].Value.ToString()' Convert.ToInt32(ratingRow.Cells[1].Value.ToString())'                                           Convert.ToInt32(ratingRow.Cells[2].Value.ToString()));                ratings.Add(rating);              }                if (ratings.Count > 0)              {                track.Ratings.Clear();                track.Ratings.AddRange(ratings);              }              else              {                track.Ratings.Clear();              }              trackChanged = true;            }              #endregion              #region User Defined Frames              if (_userFrameIsChanged)            {              List<Frame> userFrames = new List<Frame>();              foreach (DataGridViewRow userFrameRow in dataGridViewUserFrames.Rows)              {                Frame frame = new Frame(userFrameRow.Cells[0].Value.ToString()' userFrameRow.Cells[1].Value.ToString()'                                        userFrameRow.Cells[2].Value.ToString());                userFrames.Add(frame);              }                // Let's save the Current User frames first' so that on Save we are able to delete them to avoid duplicates              track.SavedUserFrames = new List<Frame>(track.UserFrames);                if (userFrames.Count > 0)              {                track.UserFrames.Clear();                track.UserFrames.AddRange(userFrames);              }              else              {                track.UserFrames.Clear();              }              trackChanged = true;            }              #endregion              if (trackChanged)            {              main.TracksGridView.Changed = true;              main.TracksGridView.SetBackgroundColorChanged(row.Index);              track.Changed = true;              Options.Songlist[row.Index] = track;            }          }          catch (Exception ex)          {            log.Error("Error applying changes from Tagedit: {0} stack: {1}"' ex.Message' ex.StackTrace);            Options.Songlist[row.Index].Status = 2;            main.TracksGridView.AddErrorMessage(row' ex.Message);            bErrors = true;          }        }
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,btApply_Click,The following statement contains a magic number: foreach (DataGridViewRow row in tracksGrid.SelectedRows)        {          bool trackChanged = false;          TrackData track = Options.Songlist[row.Index];            main.TracksGridView.ClearStatusColumn(row.Index);            try          {            #region Main Tags              if (_isMultiTagEdit)            {              if (ckArtist.Checked)              {                track.Artist = cbArtist.Text.Trim();                trackChanged = true;              }                if (ckAlbumArtist.Checked)              {                track.AlbumArtist = cbAlbumArtist.Text.Trim();                trackChanged = true;              }                if (ckAlbum.Checked)              {                track.Album = cbAlbum.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.Artist != cbArtist.Text.Trim())              {                track.Artist = cbArtist.Text.Trim();                trackChanged = true;              }                if (track.AlbumArtist != cbAlbumArtist.Text.Trim())              {                track.AlbumArtist = cbAlbumArtist.Text.Trim();                trackChanged = true;              }                if (track.Album != tbAlbum.Text.Trim())              {                track.Album = tbAlbum.Text.Trim();                trackChanged = true;              }            }              if (track.Compilation != checkBoxCompilation.Checked)            {              track.Compilation = checkBoxCompilation.Checked;              trackChanged = true;            }              if (_isMultiTagEdit)            {              if (ckTitle.Checked)              {                track.Title = tbTitle.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.Title != tbTitle.Text.Trim())              {                track.Title = tbTitle.Text.Trim();                trackChanged = true;              }            }              int parsedYear = 0;            try            {              parsedYear = tbYear.Text.Trim() == "" ? 0 : Int32.Parse(tbYear.Text.Trim());            }            catch (Exception)            { }              if (_isMultiTagEdit)            {              if (ckYear.Checked)              {                track.Year = parsedYear;                trackChanged = true;              }            }            else            {              if (parsedYear != track.Year)              {                track.Year = parsedYear;                trackChanged = true;              }            }              int parsedBPM = 0;            try            {              parsedBPM = tbBPM.Text.Trim() == "" ? 0 : Int32.Parse(tbBPM.Text.Trim());            }            catch (Exception)            { }              if (_isMultiTagEdit)            {              if (ckBPM.Checked)              {                track.BPM = parsedBPM;                trackChanged = true;              }            }            else            {              if (parsedBPM != track.BPM)              {                track.BPM = parsedBPM;                trackChanged = true;              }            }              int tracknumber = 0;            int trackcount = 0;              try            {              tracknumber = tbTrack.Text.Trim() == "" ? 0 : Int32.Parse(tbTrack.Text.Trim());            }            catch (Exception) { }            try            {              trackcount = tbNumTracks.Text.Trim() == "" ? 0 : Int32.Parse(tbNumTracks.Text.Trim());            }            catch (Exception) { }              if (!_isMultiTagEdit && tracknumber != track.TrackNumber)            {              track.TrackNumber = (uint)tracknumber;              trackChanged = true;            }              if (_isMultiTagEdit)            {              if (ckTrack.Checked)              {                track.TrackCount = (uint)trackcount;                trackChanged = true;              }            }            else            {              if (trackcount != track.TrackCount)              {                track.TrackCount = (uint)trackcount;                trackChanged = true;              }            }              int discnumber = 0;            int disccount = 0;              try            {              discnumber = tbDisc.Text.Trim() == "" ? 0 : Int32.Parse(tbDisc.Text.Trim());            }            catch (Exception) { }            try            {              disccount = tbNumDiscs.Text.Trim() == "" ? 0 : Int32.Parse(tbNumDiscs.Text.Trim());            }            catch (Exception) { }              if (discnumber != track.DiscNumber)            {              if (_isMultiTagEdit)              {                if (ckDisk.Checked)                {                  track.DiscNumber = (uint)discnumber;                  trackChanged = true;                }              }              else              {                track.DiscNumber = (uint)discnumber;                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckDisk.Checked)              {                track.DiscCount = (uint)disccount;                trackChanged = true;              }            }            else            {              if (disccount != track.DiscCount)              {                track.DiscCount = (uint)disccount;                trackChanged = true;              }            }              string genre = "";            int i = 0;            if (cbGenre.Text.Trim() != "")            {              genre += cbGenre.Text.Trim();              i = 1;            }            foreach (string item in listBoxGenre.Items)            {              if (i == 0)                genre += item;              else                genre += ";" + item;              i++;            }              if (_isMultiTagEdit)            {              if (ckGenre.Checked)              {                track.Genre = genre;                trackChanged = true;              }            }            else            {              if (track.Genre != genre)              {                track.Genre = genre;                trackChanged = true;              }            }              if (checkBoxRemoveComments.Checked)            {              if (track.ID3Comments.Count > 0)              {                trackChanged = true;              }              track.ID3Comments.Clear();            }              List<Comment> comments = new List<Comment>();            foreach (DataGridViewRow commentRow in dataGridViewComment.Rows)            {              Comment comment = new Comment(commentRow.Cells[0].Value.ToString()' commentRow.Cells[1].Value.ToString()'                                            commentRow.Cells[2].Value.ToString());              comments.Add(comment);            }              if (_isMultiTagEdit && (comments.Count > 0 || _commentIsChanged))            {              track.ID3Comments.Clear();              track.ID3Comments.AddRange(comments);              trackChanged = true;            }            else            {              if (_commentIsChanged)              {                track.ID3Comments.Clear();                track.ID3Comments.AddRange(comments);                trackChanged = true;              }            }              #endregion              #region Picture              if (checkBoxRemoveExistingPictures.Checked)            {              track.Pictures.Clear();              trackChanged = true;            }              if (_pictureIsChanged)            {              track.Pictures.Clear();              track.Pictures.AddRange(_pictures);              trackChanged = true;            }              #endregion              #region Detailed Information              if (_isMultiTagEdit)            {              if (ckConductor.Checked)              {                track.Conductor = tbConductor.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.Conductor != tbConductor.Text.Trim())              {                track.Conductor = tbConductor.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckComposer.Checked)              {                track.Composer = tbComposer.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.Composer != tbComposer.Text.Trim())              {                track.Composer = tbComposer.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckCopyright.Checked)              {                track.Copyright = tbCopyright.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.Copyright != tbCopyright.Text.Trim())              {                track.Copyright = tbCopyright.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckContentGroup.Checked)              {                track.Grouping = tbContentGroup.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.Grouping != tbContentGroup.Text.Trim())              {                track.Grouping = tbContentGroup.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckInterpretedBy.Checked)              {                track.Interpreter = tbInterpretedBy.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.Interpreter != tbInterpretedBy.Text.Trim())              {                track.Interpreter = tbInterpretedBy.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckTextWriter.Checked)              {                track.TextWriter = tbTextWriter.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.TextWriter != tbTextWriter.Text.Trim())              {                track.TextWriter = tbTextWriter.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckPublisher.Checked)              {                track.Publisher = tbPublisher.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.Publisher != tbPublisher.Text.Trim())              {                track.Publisher = tbPublisher.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckEncodedBy.Checked)              {                track.EncodedBy = tbEncodedBy.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.EncodedBy != tbEncodedBy.Text.Trim())              {                track.EncodedBy = tbEncodedBy.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckSubTitle.Checked)              {                track.SubTitle = tbSubTitle.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.SubTitle != tbSubTitle.Text.Trim())              {                track.SubTitle = tbSubTitle.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckMediaType.Checked)              {                track.MediaType = cbMediaType.SelectedText;                trackChanged = true;              }            }            else            {              if (track.MediaType != cbMediaType.SelectedText)              {                track.MediaType = cbMediaType.SelectedText;                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckTrackLength.Checked)              {                track.TrackLength = track.DurationTimespan.TotalMilliseconds.ToString();                trackChanged = true;              }            }            else            {              if (track.TrackLength != tbTrackLength.Text)              {                track.TrackLength = tbTrackLength.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckArtistSort.Checked)              {                track.ArtistSortName = tbArtistSort.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.ArtistSortName != tbArtistSort.Text)              {                track.ArtistSortName = tbArtistSort.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckAlbumArtistSort.Checked)              {                track.AlbumArtistSortName = tbAlbumArtistSort.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.AlbumArtistSortName != tbAlbumArtistSort.Text)              {                track.AlbumArtistSortName = tbAlbumArtistSort.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckAlbumSort.Checked)              {                track.AlbumSortName = tbAlbumSort.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.AlbumSortName != tbAlbumSort.Text)              {                track.AlbumSortName = tbAlbumSort.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckTitleSort.Checked)              {                track.TitleSortName = tbTitleSort.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.TitleSortName != tbTitleSort.Text)              {                track.TitleSortName = tbTitleSort.Text.Trim();                trackChanged = true;              }            }              #endregion              #region Original Information              if (_isMultiTagEdit)            {              if (ckOriginalArtist.Checked)              {                track.OriginalArtist = tbOriginalArtist.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OriginalArtist != tbOriginalArtist.Text)              {                track.OriginalArtist = tbOriginalArtist.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOriginalAlbum.Checked)              {                track.OriginalAlbum = tbOriginalAlbum.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OriginalAlbum != tbOriginalAlbum.Text)              {                track.OriginalAlbum = tbOriginalAlbum.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOriginalFileName.Checked)              {                track.OriginalFileName = tbOriginalFileName.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OriginalFileName != tbOriginalFileName.Text)              {                track.OriginalFileName = tbOriginalFileName.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOriginalLyricsWriter.Checked)              {                track.OriginalLyricsWriter = tbOriginalLyricsWriter.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OriginalLyricsWriter != tbOriginalLyricsWriter.Text)              {                track.OriginalLyricsWriter = tbOriginalLyricsWriter.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOriginalOwner.Checked)              {                track.OriginalOwner = tbOriginalOwner.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OriginalOwner != tbOriginalOwner.Text)              {                track.OriginalOwner = tbOriginalOwner.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOriginalRelease.Checked)              {                track.OriginalRelease = tbOriginalRelease.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OriginalRelease != tbOriginalRelease.Text)              {                track.OriginalRelease = tbOriginalRelease.Text.Trim();                trackChanged = true;              }            }              #endregion              #region Web Information              if (_isMultiTagEdit)            {              if (ckCopyrightUrl.Checked)              {                track.CopyrightInformation = tbCopyrightUrl.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.CopyrightInformation != tbCopyrightUrl.Text)              {                track.CopyrightInformation = tbCopyrightUrl.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOfficialAudioFileUrl.Checked)              {                track.OfficialAudioFileInformation = tbOfficialAudioFileUrl.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OfficialAudioFileInformation != tbOfficialAudioFileUrl.Text)              {                track.OfficialAudioFileInformation = tbOfficialAudioFileUrl.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOfficialArtistUrl.Checked)              {                track.OfficialArtistInformation = tbOfficialArtistUrl.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OfficialArtistInformation != tbOfficialArtistUrl.Text)              {                track.OfficialArtistInformation = tbOfficialArtistUrl.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOfficialAudioSourceUrl.Checked)              {                track.OfficialAudioSourceInformation = tbOfficialAudioSourceUrl.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OfficialAudioSourceInformation != tbOfficialAudioSourceUrl.Text)              {                track.OfficialAudioSourceInformation = tbOfficialAudioSourceUrl.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOfficialInternetRadioUrl.Checked)              {                track.OfficialInternetRadioInformation = tbOfficialInternetRadioUrl.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OfficialInternetRadioInformation != tbOfficialInternetRadioUrl.Text)              {                track.OfficialInternetRadioInformation = tbOfficialInternetRadioUrl.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOfficialPaymentUrl.Checked)              {                track.OfficialPaymentInformation = tbOfficialPaymentUrl.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OfficialPaymentInformation != tbOfficialPaymentUrl.Text)              {                track.OfficialPaymentInformation = tbOfficialPaymentUrl.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckOfficialPublisherUrl.Checked)              {                track.OfficialPublisherInformation = tbOfficialPublisherUrl.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.OfficialPublisherInformation != tbOfficialPublisherUrl.Text)              {                track.OfficialPublisherInformation = tbOfficialPublisherUrl.Text.Trim();                trackChanged = true;              }            }              if (_isMultiTagEdit)            {              if (ckCommercialInformationUrl.Checked)              {                track.CommercialInformation = tbCommercialInformationUrl.Text.Trim();                trackChanged = true;              }            }            else            {              if (track.CommercialInformation != tbCommercialInformationUrl.Text)              {                track.CommercialInformation = tbCommercialInformationUrl.Text.Trim();                trackChanged = true;              }            }              #endregion              #region Involved People              if (_involvedPeopleIsChanged)            {              char[] d = new char[1] { '\0' };              string delim = new string(d);              string tmp = "";                foreach (DataGridViewRow pplrow in dataGridViewInvolvedPeople.Rows)              {                tmp += string.Format(@"{0}{1}{2}{3}"' pplrow.Cells[0].Value' delim' pplrow.Cells[1].Value' delim);              }                if (tmp != "")                tmp.Trim(new[] { '\0' });                track.InvolvedPeople = tmp;              trackChanged = true;            }              if (_musicianIsChanged)            {              char[] d = new char[1] { '\0' };              string delim = new string(d);              string tmp = "";                foreach (DataGridViewRow musicianrow in dataGridViewMusician.Rows)              {                tmp += string.Format(@"{0}{1}{2}{3}"' musicianrow.Cells[0].Value' delim' musicianrow.Cells[1].Value' delim);              }                if (tmp != null)                tmp.Trim(new[] { '\0' });                track.MusicCreditList = tmp;              trackChanged = true;            }              #endregion              #region Lyrics              if (ckRemoveLyrics.Checked)            {              track.LyricsFrames.Clear();              trackChanged = true;            }              if (_lyricsIsChanged)            {              List<Lyric> lyrics = new List<Lyric>();              foreach (DataGridViewRow lyricsrow in dataGridViewLyrics.Rows)              {                Lyric lyric = new Lyric(lyricsrow.Cells[0].Value.ToString()' lyricsrow.Cells[1].Value.ToString()'                                        lyricsrow.Cells[2].Value.ToString());                lyrics.Add(lyric);              }                if (lyrics.Count > 0)              {                track.LyricsFrames.Clear();                track.LyricsFrames.AddRange(lyrics);              }              else              {                track.LyricsFrames.Clear();              }                trackChanged = true;            }              #endregion              #region Rating              if (ckRemoveExistingRatings.Checked)            {              track.Ratings.Clear();              trackChanged = true;            }              if (_ratingIsChanged)            {              List<PopmFrame> ratings = new List<PopmFrame>();              foreach (DataGridViewRow ratingRow in dataGridViewRating.Rows)              {                PopmFrame rating = new PopmFrame(ratingRow.Cells[0].Value.ToString()' Convert.ToInt32(ratingRow.Cells[1].Value.ToString())'                                           Convert.ToInt32(ratingRow.Cells[2].Value.ToString()));                ratings.Add(rating);              }                if (ratings.Count > 0)              {                track.Ratings.Clear();                track.Ratings.AddRange(ratings);              }              else              {                track.Ratings.Clear();              }              trackChanged = true;            }              #endregion              #region User Defined Frames              if (_userFrameIsChanged)            {              List<Frame> userFrames = new List<Frame>();              foreach (DataGridViewRow userFrameRow in dataGridViewUserFrames.Rows)              {                Frame frame = new Frame(userFrameRow.Cells[0].Value.ToString()' userFrameRow.Cells[1].Value.ToString()'                                        userFrameRow.Cells[2].Value.ToString());                userFrames.Add(frame);              }                // Let's save the Current User frames first' so that on Save we are able to delete them to avoid duplicates              track.SavedUserFrames = new List<Frame>(track.UserFrames);                if (userFrames.Count > 0)              {                track.UserFrames.Clear();                track.UserFrames.AddRange(userFrames);              }              else              {                track.UserFrames.Clear();              }              trackChanged = true;            }              #endregion              if (trackChanged)            {              main.TracksGridView.Changed = true;              main.TracksGridView.SetBackgroundColorChanged(row.Index);              track.Changed = true;              Options.Songlist[row.Index] = track;            }          }          catch (Exception ex)          {            log.Error("Error applying changes from Tagedit: {0} stack: {1}"' ex.Message' ex.StackTrace);            Options.Songlist[row.Index].Status = 2;            main.TracksGridView.AddErrorMessage(row' ex.Message);            bErrors = true;          }        }
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,SearchAutocompleteArtists,The following statement contains a magic number: if (cbArtist.Text.Length < 3)        {          return;        }
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,SearchAutocompleteAlbumArtists,The following statement contains a magic number: if (cbAlbumArtist.Text.Length < 3)        {          return;        }
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,dataGridViewComment_CellClick,The following statement contains a magic number: textBoxComment.Text = dataGridViewComment.Rows[e.RowIndex].Cells[2].Value.ToString();
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,dataGridViewLyrics_CellClick,The following statement contains a magic number: tbLyrics.Text = dataGridViewLyrics.Rows[e.RowIndex].Cells[2].Value.ToString();
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,dataGridViewRating_CellClick,The following statement contains a magic number: numericUpDownPlayCounter.Value = Convert.ToDecimal(dataGridViewRating.Rows[e.RowIndex].Cells[2].Value);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabControlTagEdit.Location = new System.Drawing.Point(0' 46);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabControlTagEdit.Size = new System.Drawing.Size(908' 608);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabControlTagEdit.Size = new System.Drawing.Size(908' 608);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabControlTagEdit.TabIndex = 27;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageMain.Padding = new System.Windows.Forms.Padding(3);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageMain.Size = new System.Drawing.Size(906' 584);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageMain.Size = new System.Drawing.Size(906' 584);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageMainPanel.Location = new System.Drawing.Point(3' 3);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageMainPanel.Location = new System.Drawing.Point(3' 3);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageMainPanel.Size = new System.Drawing.Size(900' 578);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageMainPanel.Size = new System.Drawing.Size(900' 578);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageMainPanel.TabIndex = 3;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxComment.Location = new System.Drawing.Point(3' 286);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxComment.Location = new System.Drawing.Point(3' 286);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxComment.Size = new System.Drawing.Size(885' 240);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxComment.Size = new System.Drawing.Size(885' 240);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxComment.TabIndex = 2;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxRemoveComments.Location = new System.Drawing.Point(608' 91);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxRemoveComments.Location = new System.Drawing.Point(608' 91);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxRemoveComments.Size = new System.Drawing.Size(229' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxRemoveComments.Size = new System.Drawing.Size(229' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxRemoveComments.TabIndex = 4;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonMoveTop.Location = new System.Drawing.Point(608' 65);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonMoveTop.Location = new System.Drawing.Point(608' 65);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonMoveTop.Size = new System.Drawing.Size(227' 23);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonMoveTop.Size = new System.Drawing.Size(227' 23);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonMoveTop.TabIndex = 3;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonRemoveComment.Location = new System.Drawing.Point(608' 39);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonRemoveComment.Location = new System.Drawing.Point(608' 39);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonRemoveComment.Size = new System.Drawing.Size(224' 23);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonRemoveComment.Size = new System.Drawing.Size(224' 23);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonRemoveComment.TabIndex = 2;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonAddComment.Location = new System.Drawing.Point(608' 12);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonAddComment.Location = new System.Drawing.Point(608' 12);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonAddComment.Size = new System.Drawing.Size(224' 23);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonAddComment.Size = new System.Drawing.Size(224' 23);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewComment.Location = new System.Drawing.Point(150' 120);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewComment.Location = new System.Drawing.Point(150' 120);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewComment.Size = new System.Drawing.Size(682' 109);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewComment.Size = new System.Drawing.Size(682' 109);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewComment.TabIndex = 6;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.Descriptor.Width = 150;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.Language.Width = 50;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.Comment.Width = 470;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lbComment.Location = new System.Drawing.Point(9' 78);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lbComment.Location = new System.Drawing.Point(9' 78);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lbComment.Size = new System.Drawing.Size(68' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lbComment.Size = new System.Drawing.Size(68' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lbComment.TabIndex = 5;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.textBoxComment.Location = new System.Drawing.Point(150' 75);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.textBoxComment.Location = new System.Drawing.Point(150' 75);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.textBoxComment.Size = new System.Drawing.Size(423' 39);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.textBoxComment.Size = new System.Drawing.Size(423' 39);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lbCommentLanguage.Location = new System.Drawing.Point(7' 51);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lbCommentLanguage.Location = new System.Drawing.Point(7' 51);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lbCommentLanguage.Size = new System.Drawing.Size(131' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lbCommentLanguage.Size = new System.Drawing.Size(131' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lbCommentLanguage.TabIndex = 3;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lbCommentDescriptor.Location = new System.Drawing.Point(6' 20);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lbCommentDescriptor.Location = new System.Drawing.Point(6' 20);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lbCommentDescriptor.Size = new System.Drawing.Size(132' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lbCommentDescriptor.Size = new System.Drawing.Size(132' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lbCommentDescriptor.TabIndex = 2;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.cbCommentLanguage.Location = new System.Drawing.Point(150' 46);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.cbCommentLanguage.Location = new System.Drawing.Point(150' 46);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.cbCommentLanguage.Size = new System.Drawing.Size(423' 24);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.cbCommentLanguage.Size = new System.Drawing.Size(423' 24);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.cbCommentLanguage.TextEditorWidth = 404;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.cbCommentDescriptor.Location = new System.Drawing.Point(150' 15);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.cbCommentDescriptor.Location = new System.Drawing.Point(150' 15);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.cbCommentDescriptor.Size = new System.Drawing.Size(423' 24);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.cbCommentDescriptor.Size = new System.Drawing.Size(423' 24);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.cbCommentDescriptor.TextEditorWidth = 404;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxGenre.Location = new System.Drawing.Point(3' 168);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxGenre.Location = new System.Drawing.Point(3' 168);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxGenre.Size = new System.Drawing.Size(885' 118);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxGenre.Size = new System.Drawing.Size(885' 118);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btGenreToTop.Location = new System.Drawing.Point(610' 72);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btGenreToTop.Location = new System.Drawing.Point(610' 72);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btGenreToTop.Size = new System.Drawing.Size(222' 23);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btGenreToTop.Size = new System.Drawing.Size(222' 23);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btGenreToTop.TabIndex = 4;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btRemoveGenre.Location = new System.Drawing.Point(610' 44);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btRemoveGenre.Location = new System.Drawing.Point(610' 44);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btRemoveGenre.Size = new System.Drawing.Size(222' 23);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btRemoveGenre.Size = new System.Drawing.Size(222' 23);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btRemoveGenre.TabIndex = 3;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btAddGenre.Location = new System.Drawing.Point(610' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btAddGenre.Location = new System.Drawing.Point(610' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btAddGenre.Size = new System.Drawing.Size(222' 23);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btAddGenre.Size = new System.Drawing.Size(222' 23);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btAddGenre.TabIndex = 2;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.listBoxGenre.ItemHeight = 16;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.listBoxGenre.Location = new System.Drawing.Point(150' 44);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.listBoxGenre.Location = new System.Drawing.Point(150' 44);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.listBoxGenre.Size = new System.Drawing.Size(401' 68);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.listBoxGenre.Size = new System.Drawing.Size(401' 68);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblGenre.Location = new System.Drawing.Point(6' 18);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblGenre.Location = new System.Drawing.Point(6' 18);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblGenre.Size = new System.Drawing.Size(48' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblGenre.Size = new System.Drawing.Size(48' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblGenre.TabIndex = 5;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.cbGenre.Location = new System.Drawing.Point(150' 13);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.cbGenre.Location = new System.Drawing.Point(150' 13);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.cbGenre.Size = new System.Drawing.Size(423' 24);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.cbGenre.Size = new System.Drawing.Size(423' 24);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.cbGenre.TextEditorWidth = 404;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckGenre.Location = new System.Drawing.Point(558' 46);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckGenre.Location = new System.Drawing.Point(558' 46);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckGenre.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckGenre.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckGenre.TabIndex = 16;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxArtist.Location = new System.Drawing.Point(3' 3);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxArtist.Location = new System.Drawing.Point(3' 3);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxArtist.Size = new System.Drawing.Size(885' 165);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxArtist.Size = new System.Drawing.Size(885' 165);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btCopyArtistToAlbumArtist.Location = new System.Drawing.Point(395' 15);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btCopyArtistToAlbumArtist.Location = new System.Drawing.Point(395' 15);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btCopyArtistToAlbumArtist.Size = new System.Drawing.Size(54' 23);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btCopyArtistToAlbumArtist.Size = new System.Drawing.Size(54' 23);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btCopyArtistToAlbumArtist.TabIndex = 3;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxCompilation.Location = new System.Drawing.Point(608' 46);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxCompilation.Location = new System.Drawing.Point(608' 46);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxCompilation.Size = new System.Drawing.Size(150' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxCompilation.Size = new System.Drawing.Size(150' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxCompilation.TabIndex = 3;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.cbAlbum.Location = new System.Drawing.Point(150' 44);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.cbAlbum.Location = new System.Drawing.Point(150' 44);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.cbAlbum.Size = new System.Drawing.Size(201' 24);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.cbAlbum.Size = new System.Drawing.Size(201' 24);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.cbAlbum.TabIndex = 2;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.cbAlbumArtist.Location = new System.Drawing.Point(610' 14);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.cbAlbumArtist.Location = new System.Drawing.Point(610' 14);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.cbAlbumArtist.Size = new System.Drawing.Size(201' 24);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.cbAlbumArtist.Size = new System.Drawing.Size(201' 24);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.cbArtist.Location = new System.Drawing.Point(150' 15);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.cbArtist.Location = new System.Drawing.Point(150' 15);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.cbArtist.Size = new System.Drawing.Size(201' 24);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.cbArtist.Size = new System.Drawing.Size(201' 24);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbNumDiscs.Location = new System.Drawing.Point(764' 136);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbNumDiscs.Location = new System.Drawing.Point(764' 136);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbNumDiscs.Size = new System.Drawing.Size(45' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbNumDiscs.Size = new System.Drawing.Size(45' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbNumDiscs.TabIndex = 9;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(736' 139);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(736' 139);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(12' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(12' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.label2.TabIndex = 8;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckDisk.Location = new System.Drawing.Point(817' 133);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckDisk.Location = new System.Drawing.Point(817' 133);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckDisk.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckDisk.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckDisk.TabIndex = 10;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblDisc.Location = new System.Drawing.Point(566' 142);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblDisc.Location = new System.Drawing.Point(566' 142);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblDisc.Size = new System.Drawing.Size(94' 17);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblDisc.Size = new System.Drawing.Size(94' 17);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblDisc.TabIndex = 30;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbDisc.Location = new System.Drawing.Point(676' 136);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbDisc.Location = new System.Drawing.Point(676' 136);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbDisc.Size = new System.Drawing.Size(45' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbDisc.Size = new System.Drawing.Size(45' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbDisc.TabIndex = 8;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckBPM.Location = new System.Drawing.Point(817' 105);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckBPM.Location = new System.Drawing.Point(817' 105);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckBPM.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckBPM.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckBPM.TabIndex = 10;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblBPM.Location = new System.Drawing.Point(632' 110);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblBPM.Location = new System.Drawing.Point(632' 110);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblBPM.Size = new System.Drawing.Size(40' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblBPM.Size = new System.Drawing.Size(40' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblBPM.TabIndex = 27;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbBPM.Location = new System.Drawing.Point(676' 107);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbBPM.Location = new System.Drawing.Point(676' 107);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbBPM.Size = new System.Drawing.Size(133' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbBPM.Size = new System.Drawing.Size(133' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbBPM.TabIndex = 5;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbNumTracks.Location = new System.Drawing.Point(233' 133);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbNumTracks.Location = new System.Drawing.Point(233' 133);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbNumTracks.Size = new System.Drawing.Size(45' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbNumTracks.Size = new System.Drawing.Size(45' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbNumTracks.TabIndex = 7;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(208' 136);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(208' 136);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(12' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(12' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckYear.Location = new System.Drawing.Point(289' 102);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckYear.Location = new System.Drawing.Point(289' 102);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckYear.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckYear.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckYear.TabIndex = 10;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckTrack.Location = new System.Drawing.Point(289' 131);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckTrack.Location = new System.Drawing.Point(289' 131);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckTrack.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckTrack.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckTrack.TabIndex = 10;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblAlbumArtist.Location = new System.Drawing.Point(486' 18);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblAlbumArtist.Location = new System.Drawing.Point(486' 18);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblAlbumArtist.Size = new System.Drawing.Size(78' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblAlbumArtist.Size = new System.Drawing.Size(78' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblAlbumArtist.TabIndex = 22;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckArtist.Location = new System.Drawing.Point(357' 13);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckArtist.Location = new System.Drawing.Point(357' 13);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckArtist.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckArtist.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckArtist.TabIndex = 10;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblTrack.Location = new System.Drawing.Point(8' 134);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblTrack.Location = new System.Drawing.Point(8' 134);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblTrack.Size = new System.Drawing.Size(46' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblTrack.Size = new System.Drawing.Size(46' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbTrack.Location = new System.Drawing.Point(151' 133);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbTrack.Location = new System.Drawing.Point(151' 133);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbTrack.Size = new System.Drawing.Size(45' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbTrack.Size = new System.Drawing.Size(45' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbTrack.TabIndex = 6;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckAlbumArtist.Location = new System.Drawing.Point(820' 14);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckAlbumArtist.Location = new System.Drawing.Point(820' 14);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckAlbumArtist.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckAlbumArtist.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckAlbumArtist.TabIndex = 10;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblArtist.Location = new System.Drawing.Point(9' 18);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblArtist.Location = new System.Drawing.Point(9' 18);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblArtist.Size = new System.Drawing.Size(40' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblArtist.Size = new System.Drawing.Size(40' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbAlbum.Location = new System.Drawing.Point(150' 46);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbAlbum.Location = new System.Drawing.Point(150' 46);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbAlbum.Size = new System.Drawing.Size(201' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbAlbum.Size = new System.Drawing.Size(201' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbAlbum.TabIndex = 2;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckAlbum.Location = new System.Drawing.Point(357' 42);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckAlbum.Location = new System.Drawing.Point(357' 42);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckAlbum.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckAlbum.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckAlbum.TabIndex = 10;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblYear.Location = new System.Drawing.Point(8' 109);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblYear.Location = new System.Drawing.Point(8' 109);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblYear.Size = new System.Drawing.Size(40' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblYear.Size = new System.Drawing.Size(40' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblYear.TabIndex = 4;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbYear.Location = new System.Drawing.Point(151' 104);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbYear.Location = new System.Drawing.Point(151' 104);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbYear.Size = new System.Drawing.Size(132' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbYear.Size = new System.Drawing.Size(132' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbYear.TabIndex = 4;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblTitle.Location = new System.Drawing.Point(8' 80);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblTitle.Location = new System.Drawing.Point(8' 80);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblTitle.Size = new System.Drawing.Size(37' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblTitle.Size = new System.Drawing.Size(37' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblTitle.TabIndex = 3;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblAlbum.Location = new System.Drawing.Point(8' 50);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblAlbum.Location = new System.Drawing.Point(8' 50);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblAlbum.Size = new System.Drawing.Size(49' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblAlbum.Size = new System.Drawing.Size(49' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblAlbum.TabIndex = 2;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckTitle.Location = new System.Drawing.Point(817' 75);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckTitle.Location = new System.Drawing.Point(817' 75);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckTitle.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckTitle.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckTitle.TabIndex = 10;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbTitle.Location = new System.Drawing.Point(150' 75);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbTitle.Location = new System.Drawing.Point(150' 75);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbTitle.Size = new System.Drawing.Size(659' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbTitle.Size = new System.Drawing.Size(659' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbTitle.TabIndex = 3;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPagePictures.Padding = new System.Windows.Forms.Padding(3);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPagePictures.Size = new System.Drawing.Size(906' 584);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPagePictures.Size = new System.Drawing.Size(906' 584);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPagePicturePanel.Location = new System.Drawing.Point(3' 3);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPagePicturePanel.Location = new System.Drawing.Point(3' 3);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPagePicturePanel.Size = new System.Drawing.Size(900' 578);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPagePicturePanel.Size = new System.Drawing.Size(900' 578);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxPicture.Location = new System.Drawing.Point(7' 6);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxPicture.Location = new System.Drawing.Point(7' 6);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxPicture.Size = new System.Drawing.Size(857' 372);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxPicture.Size = new System.Drawing.Size(857' 372);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonGetPictureInternet.Location = new System.Drawing.Point(9' 133);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonGetPictureInternet.Location = new System.Drawing.Point(9' 133);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonGetPictureInternet.Size = new System.Drawing.Size(197' 45);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonGetPictureInternet.Size = new System.Drawing.Size(197' 45);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonGetPictureInternet.TabIndex = 2;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxRemoveExistingPictures.Location = new System.Drawing.Point(251' 325);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxRemoveExistingPictures.Location = new System.Drawing.Point(251' 325);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxRemoveExistingPictures.Size = new System.Drawing.Size(329' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxRemoveExistingPictures.Size = new System.Drawing.Size(329' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxRemoveExistingPictures.TabIndex = 5;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewPicture.Location = new System.Drawing.Point(250' 86);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewPicture.Location = new System.Drawing.Point(250' 86);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewPicture.Size = new System.Drawing.Size(330' 223);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewPicture.Size = new System.Drawing.Size(330' 223);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewPicture.TabIndex = 24;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.Description.Width = 200;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.PictureType.Width = 126;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonExportPicture.Location = new System.Drawing.Point(9' 239);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonExportPicture.Location = new System.Drawing.Point(9' 239);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonExportPicture.Size = new System.Drawing.Size(197' 45);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonExportPicture.Size = new System.Drawing.Size(197' 45);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonExportPicture.TabIndex = 4;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonRemovePicture.Location = new System.Drawing.Point(9' 186);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonRemovePicture.Location = new System.Drawing.Point(9' 186);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonRemovePicture.Size = new System.Drawing.Size(197' 45);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonRemovePicture.Size = new System.Drawing.Size(197' 45);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonRemovePicture.TabIndex = 3;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonGetPicture.Location = new System.Drawing.Point(9' 80);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonGetPicture.Location = new System.Drawing.Point(9' 80);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonGetPicture.Size = new System.Drawing.Size(197' 45);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonGetPicture.Size = new System.Drawing.Size(197' 45);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblPicType.Location = new System.Drawing.Point(6' 49);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblPicType.Location = new System.Drawing.Point(6' 49);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblPicType.Size = new System.Drawing.Size(87' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblPicType.Size = new System.Drawing.Size(87' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblPicType.TabIndex = 18;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.cbPicType.Location = new System.Drawing.Point(250' 51);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.cbPicType.Location = new System.Drawing.Point(250' 51);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.cbPicType.Size = new System.Drawing.Size(330' 24);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.cbPicType.Size = new System.Drawing.Size(330' 24);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.cbPicType.TabIndex = 7;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.pictureBoxCover.Location = new System.Drawing.Point(642' 21);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.pictureBoxCover.Location = new System.Drawing.Point(642' 21);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.pictureBoxCover.Size = new System.Drawing.Size(160' 172);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.pictureBoxCover.Size = new System.Drawing.Size(160' 172);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.pictureBoxCover.TabIndex = 12;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbPicDesc.Location = new System.Drawing.Point(250' 24);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbPicDesc.Location = new System.Drawing.Point(250' 24);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbPicDesc.Size = new System.Drawing.Size(330' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbPicDesc.Size = new System.Drawing.Size(330' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbPicDesc.TabIndex = 6;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblPicDesc.Location = new System.Drawing.Point(6' 21);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblPicDesc.Location = new System.Drawing.Point(6' 21);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblPicDesc.Size = new System.Drawing.Size(73' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblPicDesc.Size = new System.Drawing.Size(73' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblPicDesc.TabIndex = 10;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageDetails.Size = new System.Drawing.Size(906' 584);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageDetails.Size = new System.Drawing.Size(906' 584);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageDetails.TabIndex = 2;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageDetailsPanel.Size = new System.Drawing.Size(906' 584);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageDetailsPanel.Size = new System.Drawing.Size(906' 584);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageDetailsPanel.TabIndex = 4;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxMedia.Location = new System.Drawing.Point(7' 471);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxMedia.Location = new System.Drawing.Point(7' 471);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxMedia.Size = new System.Drawing.Size(693' 89);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxMedia.Size = new System.Drawing.Size(693' 89);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxMedia.TabIndex = 3;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btGetTrackLength.Location = new System.Drawing.Point(392' 54);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btGetTrackLength.Location = new System.Drawing.Point(392' 54);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btGetTrackLength.Size = new System.Drawing.Size(116' 23);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btGetTrackLength.Size = new System.Drawing.Size(116' 23);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btGetTrackLength.TabIndex = 4;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbTrackLength.Location = new System.Drawing.Point(205' 55);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbTrackLength.Location = new System.Drawing.Point(205' 55);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbTrackLength.Size = new System.Drawing.Size(173' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbTrackLength.Size = new System.Drawing.Size(173' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbTrackLength.TabIndex = 30;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblTRackLength.Location = new System.Drawing.Point(6' 156);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblTRackLength.Location = new System.Drawing.Point(6' 156);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblTRackLength.Size = new System.Drawing.Size(118' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblTRackLength.Size = new System.Drawing.Size(118' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblTRackLength.TabIndex = 46;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckMediaType.Location = new System.Drawing.Point(521' 14);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckMediaType.Location = new System.Drawing.Point(521' 14);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckMediaType.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckMediaType.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckMediaType.TabIndex = 45;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.cbMediaType.Location = new System.Drawing.Point(205' 15);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.cbMediaType.Location = new System.Drawing.Point(205' 15);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.cbMediaType.Size = new System.Drawing.Size(303' 24);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.cbMediaType.Size = new System.Drawing.Size(303' 24);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblMediaType.Location = new System.Drawing.Point(6' 118);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblMediaType.Location = new System.Drawing.Point(6' 118);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblMediaType.Size = new System.Drawing.Size(84' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblMediaType.Size = new System.Drawing.Size(84' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblMediaType.TabIndex = 32;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckTrackLength.Location = new System.Drawing.Point(205' 53);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckTrackLength.Location = new System.Drawing.Point(205' 53);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckTrackLength.Size = new System.Drawing.Size(183' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckTrackLength.Size = new System.Drawing.Size(183' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckTrackLength.TabIndex = 4;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxSort.Location = new System.Drawing.Point(7' 325);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxSort.Location = new System.Drawing.Point(7' 325);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxSort.Size = new System.Drawing.Size(693' 135);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxSort.Size = new System.Drawing.Size(693' 135);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxSort.TabIndex = 2;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbAlbumArtistSort.Location = new System.Drawing.Point(204' 42);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbAlbumArtistSort.Location = new System.Drawing.Point(204' 42);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbAlbumArtistSort.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbAlbumArtistSort.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckAlbumArtistSort.Location = new System.Drawing.Point(670' 42);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckAlbumArtistSort.Location = new System.Drawing.Point(670' 42);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckAlbumArtistSort.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckAlbumArtistSort.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckAlbumArtistSort.TabIndex = 39;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblAlbumArtistSort.Location = new System.Drawing.Point(5' 45);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblAlbumArtistSort.Location = new System.Drawing.Point(5' 45);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblAlbumArtistSort.Size = new System.Drawing.Size(118' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblAlbumArtistSort.Size = new System.Drawing.Size(118' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblAlbumArtistSort.TabIndex = 46;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbTitleSort.Location = new System.Drawing.Point(205' 98);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbTitleSort.Location = new System.Drawing.Point(205' 98);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbTitleSort.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbTitleSort.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbTitleSort.TabIndex = 2;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckTitleSort.Location = new System.Drawing.Point(671' 96);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckTitleSort.Location = new System.Drawing.Point(671' 96);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckTitleSort.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckTitleSort.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckTitleSort.TabIndex = 44;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblTitleSort.Location = new System.Drawing.Point(6' 101);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblTitleSort.Location = new System.Drawing.Point(6' 101);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblTitleSort.Size = new System.Drawing.Size(115' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblTitleSort.Size = new System.Drawing.Size(115' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblTitleSort.TabIndex = 43;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbAlbumSort.Location = new System.Drawing.Point(205' 70);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbAlbumSort.Location = new System.Drawing.Point(205' 70);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbAlbumSort.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbAlbumSort.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckAlbumSort.Location = new System.Drawing.Point(671' 69);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckAlbumSort.Location = new System.Drawing.Point(671' 69);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckAlbumSort.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckAlbumSort.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckAlbumSort.TabIndex = 41;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblAlbumSort.Location = new System.Drawing.Point(6' 74);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblAlbumSort.Location = new System.Drawing.Point(6' 74);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblAlbumSort.Size = new System.Drawing.Size(127' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblAlbumSort.Size = new System.Drawing.Size(127' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblAlbumSort.TabIndex = 40;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbArtistSort.Location = new System.Drawing.Point(205' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbArtistSort.Location = new System.Drawing.Point(205' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbArtistSort.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbArtistSort.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckArtistSort.Location = new System.Drawing.Point(671' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckArtistSort.Location = new System.Drawing.Point(671' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckArtistSort.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckArtistSort.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckArtistSort.TabIndex = 38;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblArtistSort.Location = new System.Drawing.Point(6' 19);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblArtistSort.Location = new System.Drawing.Point(6' 19);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblArtistSort.Size = new System.Drawing.Size(118' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblArtistSort.Size = new System.Drawing.Size(118' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblArtistSort.TabIndex = 37;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxContent.Location = new System.Drawing.Point(7' 231);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxContent.Location = new System.Drawing.Point(7' 231);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxContent.Size = new System.Drawing.Size(693' 89);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxContent.Size = new System.Drawing.Size(693' 89);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbSubTitle.Location = new System.Drawing.Point(205' 48);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbSubTitle.Location = new System.Drawing.Point(205' 48);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbSubTitle.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbSubTitle.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckSubTitle.Location = new System.Drawing.Point(671' 47);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckSubTitle.Location = new System.Drawing.Point(671' 47);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckSubTitle.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckSubTitle.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckSubTitle.TabIndex = 35;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblSubTitle.Location = new System.Drawing.Point(6' 52);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblSubTitle.Location = new System.Drawing.Point(6' 52);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblSubTitle.Size = new System.Drawing.Size(55' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblSubTitle.Size = new System.Drawing.Size(55' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblSubTitle.TabIndex = 34;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbContentGroup.Location = new System.Drawing.Point(205' 20);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbContentGroup.Location = new System.Drawing.Point(205' 20);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbContentGroup.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbContentGroup.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckContentGroup.Location = new System.Drawing.Point(671' 19);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckContentGroup.Location = new System.Drawing.Point(671' 19);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckContentGroup.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckContentGroup.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckContentGroup.TabIndex = 32;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblContentGroup.Location = new System.Drawing.Point(6' 24);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblContentGroup.Location = new System.Drawing.Point(6' 24);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblContentGroup.Size = new System.Drawing.Size(94' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblContentGroup.Size = new System.Drawing.Size(94' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblContentGroup.TabIndex = 31;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxPeople.Location = new System.Drawing.Point(7' 0);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxPeople.Size = new System.Drawing.Size(693' 224);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxPeople.Size = new System.Drawing.Size(693' 224);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbCopyright.Location = new System.Drawing.Point(205' 192);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbCopyright.Location = new System.Drawing.Point(205' 192);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbCopyright.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbCopyright.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbCopyright.TabIndex = 6;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckCopyright.Location = new System.Drawing.Point(671' 193);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckCopyright.Location = new System.Drawing.Point(671' 193);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckCopyright.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckCopyright.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckCopyright.TabIndex = 29;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblCopyright.Location = new System.Drawing.Point(6' 192);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblCopyright.Location = new System.Drawing.Point(6' 192);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblCopyright.Size = new System.Drawing.Size(68' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblCopyright.Size = new System.Drawing.Size(68' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblCopyright.TabIndex = 28;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbEncodedBy.Location = new System.Drawing.Point(205' 164);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbEncodedBy.Location = new System.Drawing.Point(205' 164);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbEncodedBy.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbEncodedBy.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbEncodedBy.TabIndex = 5;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckEncodedBy.Location = new System.Drawing.Point(671' 165);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckEncodedBy.Location = new System.Drawing.Point(671' 165);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckEncodedBy.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckEncodedBy.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckEncodedBy.TabIndex = 26;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblEncodedBy.Location = new System.Drawing.Point(6' 164);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblEncodedBy.Location = new System.Drawing.Point(6' 164);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblEncodedBy.Size = new System.Drawing.Size(84' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblEncodedBy.Size = new System.Drawing.Size(84' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblEncodedBy.TabIndex = 25;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbPublisher.Location = new System.Drawing.Point(205' 136);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbPublisher.Location = new System.Drawing.Point(205' 136);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbPublisher.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbPublisher.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbPublisher.TabIndex = 4;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckPublisher.Location = new System.Drawing.Point(671' 137);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckPublisher.Location = new System.Drawing.Point(671' 137);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckPublisher.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckPublisher.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckPublisher.TabIndex = 23;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblPublisher.Location = new System.Drawing.Point(6' 136);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblPublisher.Location = new System.Drawing.Point(6' 136);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblPublisher.Size = new System.Drawing.Size(67' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblPublisher.Size = new System.Drawing.Size(67' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblPublisher.TabIndex = 22;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbTextWriter.Location = new System.Drawing.Point(205' 108);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbTextWriter.Location = new System.Drawing.Point(205' 108);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbTextWriter.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbTextWriter.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbTextWriter.TabIndex = 3;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckTextWriter.Location = new System.Drawing.Point(671' 109);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckTextWriter.Location = new System.Drawing.Point(671' 109);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckTextWriter.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckTextWriter.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckTextWriter.TabIndex = 20;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblTextWriter.Location = new System.Drawing.Point(6' 108);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblTextWriter.Location = new System.Drawing.Point(6' 108);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblTextWriter.Size = new System.Drawing.Size(120' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblTextWriter.Size = new System.Drawing.Size(120' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblTextWriter.TabIndex = 19;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbInterpretedBy.Location = new System.Drawing.Point(205' 80);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbInterpretedBy.Location = new System.Drawing.Point(205' 80);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbInterpretedBy.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbInterpretedBy.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbInterpretedBy.TabIndex = 2;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckInterpretedBy.Location = new System.Drawing.Point(671' 81);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckInterpretedBy.Location = new System.Drawing.Point(671' 81);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckInterpretedBy.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckInterpretedBy.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckInterpretedBy.TabIndex = 17;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblInterpretedBy.Location = new System.Drawing.Point(6' 80);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblInterpretedBy.Location = new System.Drawing.Point(6' 80);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblInterpretedBy.Size = new System.Drawing.Size(93' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblInterpretedBy.Size = new System.Drawing.Size(93' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblInterpretedBy.TabIndex = 16;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbComposer.Location = new System.Drawing.Point(205' 52);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbComposer.Location = new System.Drawing.Point(205' 52);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbComposer.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbComposer.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckComposer.Location = new System.Drawing.Point(671' 53);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckComposer.Location = new System.Drawing.Point(671' 53);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckComposer.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckComposer.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckComposer.TabIndex = 14;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblComposer.Location = new System.Drawing.Point(6' 52);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblComposer.Location = new System.Drawing.Point(6' 52);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblComposer.Size = new System.Drawing.Size(74' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblComposer.Size = new System.Drawing.Size(74' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblComposer.TabIndex = 13;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbConductor.Location = new System.Drawing.Point(205' 24);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbConductor.Location = new System.Drawing.Point(205' 24);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbConductor.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbConductor.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckConductor.Location = new System.Drawing.Point(671' 25);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckConductor.Location = new System.Drawing.Point(671' 25);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckConductor.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckConductor.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckConductor.TabIndex = 11;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblConductor.Location = new System.Drawing.Point(6' 24);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblConductor.Location = new System.Drawing.Point(6' 24);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblConductor.Size = new System.Drawing.Size(72' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblConductor.Size = new System.Drawing.Size(72' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblConductor.TabIndex = 10;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageOriginal.Size = new System.Drawing.Size(906' 584);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageOriginal.Size = new System.Drawing.Size(906' 584);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageOriginal.TabIndex = 3;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageOriginalPanel.Size = new System.Drawing.Size(906' 584);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageOriginalPanel.Size = new System.Drawing.Size(906' 584);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageOriginalPanel.TabIndex = 2;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxOriginalInformation.Location = new System.Drawing.Point(7' 0);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxOriginalInformation.Size = new System.Drawing.Size(693' 197);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxOriginalInformation.Size = new System.Drawing.Size(693' 197);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOriginalRelease.Location = new System.Drawing.Point(205' 164);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOriginalRelease.Location = new System.Drawing.Point(205' 164);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOriginalRelease.Size = new System.Drawing.Size(94' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOriginalRelease.Size = new System.Drawing.Size(94' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOriginalRelease.TabIndex = 5;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOriginalRelease.Location = new System.Drawing.Point(305' 163);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOriginalRelease.Location = new System.Drawing.Point(305' 163);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOriginalRelease.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOriginalRelease.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOriginalRelease.TabIndex = 26;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOriginalRelease.Location = new System.Drawing.Point(6' 164);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOriginalRelease.Location = new System.Drawing.Point(6' 164);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOriginalRelease.Size = new System.Drawing.Size(144' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOriginalRelease.Size = new System.Drawing.Size(144' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOriginalRelease.TabIndex = 25;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOriginalOwner.Location = new System.Drawing.Point(205' 133);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOriginalOwner.Location = new System.Drawing.Point(205' 133);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOriginalOwner.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOriginalOwner.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOriginalOwner.TabIndex = 4;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOriginalOwner.Location = new System.Drawing.Point(671' 131);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOriginalOwner.Location = new System.Drawing.Point(671' 131);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOriginalOwner.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOriginalOwner.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOriginalOwner.TabIndex = 23;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOriginalOwner.Location = new System.Drawing.Point(6' 136);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOriginalOwner.Location = new System.Drawing.Point(6' 136);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOriginalOwner.Size = new System.Drawing.Size(98' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOriginalOwner.Size = new System.Drawing.Size(98' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOriginalOwner.TabIndex = 22;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOriginalArtist.Location = new System.Drawing.Point(205' 105);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOriginalArtist.Location = new System.Drawing.Point(205' 105);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOriginalArtist.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOriginalArtist.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOriginalArtist.TabIndex = 3;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOriginalArtist.Location = new System.Drawing.Point(671' 103);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOriginalArtist.Location = new System.Drawing.Point(671' 103);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOriginalArtist.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOriginalArtist.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOriginalArtist.TabIndex = 20;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOriginalArtist.Location = new System.Drawing.Point(6' 108);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOriginalArtist.Location = new System.Drawing.Point(6' 108);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOriginalArtist.Size = new System.Drawing.Size(89' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOriginalArtist.Size = new System.Drawing.Size(89' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOriginalArtist.TabIndex = 19;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOriginalLyricsWriter.Location = new System.Drawing.Point(205' 77);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOriginalLyricsWriter.Location = new System.Drawing.Point(205' 77);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOriginalLyricsWriter.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOriginalLyricsWriter.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOriginalLyricsWriter.TabIndex = 2;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOriginalLyricsWriter.Location = new System.Drawing.Point(671' 74);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOriginalLyricsWriter.Location = new System.Drawing.Point(671' 74);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOriginalLyricsWriter.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOriginalLyricsWriter.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOriginalLyricsWriter.TabIndex = 17;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOriginalLyricsWriter.Location = new System.Drawing.Point(6' 80);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOriginalLyricsWriter.Location = new System.Drawing.Point(6' 80);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOriginalLyricsWriter.Size = new System.Drawing.Size(133' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOriginalLyricsWriter.Size = new System.Drawing.Size(133' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOriginalLyricsWriter.TabIndex = 16;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOriginalFileName.Location = new System.Drawing.Point(205' 49);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOriginalFileName.Location = new System.Drawing.Point(205' 49);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOriginalFileName.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOriginalFileName.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOriginalFileName.Location = new System.Drawing.Point(671' 48);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOriginalFileName.Location = new System.Drawing.Point(671' 48);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOriginalFileName.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOriginalFileName.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOriginalFileName.TabIndex = 14;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOriginalFileName.Location = new System.Drawing.Point(6' 52);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOriginalFileName.Location = new System.Drawing.Point(6' 52);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOriginalFileName.Size = new System.Drawing.Size(116' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOriginalFileName.Size = new System.Drawing.Size(116' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOriginalFileName.TabIndex = 13;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOriginalAlbum.Location = new System.Drawing.Point(205' 21);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOriginalAlbum.Location = new System.Drawing.Point(205' 21);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOriginalAlbum.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOriginalAlbum.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOriginalAlbum.Location = new System.Drawing.Point(671' 20);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOriginalAlbum.Location = new System.Drawing.Point(671' 20);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOriginalAlbum.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOriginalAlbum.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOriginalAlbum.TabIndex = 11;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOriginalAlbum.Location = new System.Drawing.Point(6' 24);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOriginalAlbum.Location = new System.Drawing.Point(6' 24);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOriginalAlbum.Size = new System.Drawing.Size(127' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOriginalAlbum.Size = new System.Drawing.Size(127' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOriginalAlbum.TabIndex = 10;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageInvolvedPeople.Size = new System.Drawing.Size(906' 584);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageInvolvedPeople.Size = new System.Drawing.Size(906' 584);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageInvolvedPeople.TabIndex = 4;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageInvolvedPeoplePanel.Size = new System.Drawing.Size(906' 584);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageInvolvedPeoplePanel.Size = new System.Drawing.Size(906' 584);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageInvolvedPeoplePanel.TabIndex = 26;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxMusician.Location = new System.Drawing.Point(10' 270);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxMusician.Location = new System.Drawing.Point(10' 270);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxMusician.Size = new System.Drawing.Size(693' 248);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxMusician.Size = new System.Drawing.Size(693' 248);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxMusician.TabIndex = 25;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblID3V24only.Location = new System.Drawing.Point(8' 91);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblID3V24only.Location = new System.Drawing.Point(8' 91);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblID3V24only.Size = new System.Drawing.Size(85' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblID3V24only.Size = new System.Drawing.Size(85' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblID3V24only.TabIndex = 25;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckInvolvedMusician.Location = new System.Drawing.Point(666' 98);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckInvolvedMusician.Location = new System.Drawing.Point(666' 98);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckInvolvedMusician.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckInvolvedMusician.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckInvolvedMusician.TabIndex = 24;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonRemoveMusician.Location = new System.Drawing.Point(497' 50);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonRemoveMusician.Location = new System.Drawing.Point(497' 50);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonRemoveMusician.Size = new System.Drawing.Size(184' 25);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonRemoveMusician.Size = new System.Drawing.Size(184' 25);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonRemoveMusician.TabIndex = 3;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonAddMusician.Location = new System.Drawing.Point(498' 19);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonAddMusician.Location = new System.Drawing.Point(498' 19);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonAddMusician.Size = new System.Drawing.Size(183' 25);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonAddMusician.Size = new System.Drawing.Size(183' 25);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonAddMusician.TabIndex = 2;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewMusician.Location = new System.Drawing.Point(187' 91);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewMusician.Location = new System.Drawing.Point(187' 91);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewMusician.Size = new System.Drawing.Size(470' 151);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewMusician.Size = new System.Drawing.Size(470' 151);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewMusician.TabIndex = 15;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewTextBoxColumn4.Width = 235;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewTextBoxColumn6.Width = 235;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbMusicianName.Location = new System.Drawing.Point(187' 51);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbMusicianName.Location = new System.Drawing.Point(187' 51);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbMusicianName.Size = new System.Drawing.Size(304' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbMusicianName.Size = new System.Drawing.Size(304' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblMusicianName.Location = new System.Drawing.Point(8' 54);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblMusicianName.Location = new System.Drawing.Point(8' 54);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblMusicianName.Size = new System.Drawing.Size(104' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblMusicianName.Size = new System.Drawing.Size(104' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblMusicianName.TabIndex = 14;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbMusicianInstrument.Location = new System.Drawing.Point(187' 21);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbMusicianInstrument.Location = new System.Drawing.Point(187' 21);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbMusicianInstrument.Size = new System.Drawing.Size(304' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbMusicianInstrument.Size = new System.Drawing.Size(304' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblMusicianInstrument.Location = new System.Drawing.Point(8' 24);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblMusicianInstrument.Location = new System.Drawing.Point(8' 24);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblMusicianInstrument.Size = new System.Drawing.Size(127' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblMusicianInstrument.Size = new System.Drawing.Size(127' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblMusicianInstrument.TabIndex = 12;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxInvolvedPeople.Location = new System.Drawing.Point(10' 0);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxInvolvedPeople.Size = new System.Drawing.Size(693' 264);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxInvolvedPeople.Size = new System.Drawing.Size(693' 264);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckInvolvedPerson.Location = new System.Drawing.Point(666' 98);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckInvolvedPerson.Location = new System.Drawing.Point(666' 98);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckInvolvedPerson.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckInvolvedPerson.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckInvolvedPerson.TabIndex = 24;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonRemovePerson.Location = new System.Drawing.Point(497' 50);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonRemovePerson.Location = new System.Drawing.Point(497' 50);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonRemovePerson.Size = new System.Drawing.Size(184' 25);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonRemovePerson.Size = new System.Drawing.Size(184' 25);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonRemovePerson.TabIndex = 3;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonAddInvolvedPerson.Location = new System.Drawing.Point(498' 19);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonAddInvolvedPerson.Location = new System.Drawing.Point(498' 19);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonAddInvolvedPerson.Size = new System.Drawing.Size(183' 25);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonAddInvolvedPerson.Size = new System.Drawing.Size(183' 25);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonAddInvolvedPerson.TabIndex = 2;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewInvolvedPeople.Location = new System.Drawing.Point(187' 91);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewInvolvedPeople.Location = new System.Drawing.Point(187' 91);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewInvolvedPeople.Size = new System.Drawing.Size(470' 167);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewInvolvedPeople.Size = new System.Drawing.Size(470' 167);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewInvolvedPeople.TabIndex = 15;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewTextBoxColumn3.Width = 235;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewTextBoxColumn5.Width = 235;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbInvolvedPersonName.Location = new System.Drawing.Point(187' 51);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbInvolvedPersonName.Location = new System.Drawing.Point(187' 51);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbInvolvedPersonName.Size = new System.Drawing.Size(304' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbInvolvedPersonName.Size = new System.Drawing.Size(304' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblInvolvedPersonName.Location = new System.Drawing.Point(8' 54);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblInvolvedPersonName.Location = new System.Drawing.Point(8' 54);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblInvolvedPersonName.Size = new System.Drawing.Size(148' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblInvolvedPersonName.Size = new System.Drawing.Size(148' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblInvolvedPersonName.TabIndex = 14;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbInvolvedPersonFunction.Location = new System.Drawing.Point(187' 21);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbInvolvedPersonFunction.Location = new System.Drawing.Point(187' 21);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbInvolvedPersonFunction.Size = new System.Drawing.Size(304' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbInvolvedPersonFunction.Size = new System.Drawing.Size(304' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblInvolvedPersonFunction.Location = new System.Drawing.Point(8' 24);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblInvolvedPersonFunction.Location = new System.Drawing.Point(8' 24);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblInvolvedPersonFunction.Size = new System.Drawing.Size(161' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblInvolvedPersonFunction.Size = new System.Drawing.Size(161' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblInvolvedPersonFunction.TabIndex = 12;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageWebInformation.Size = new System.Drawing.Size(906' 584);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageWebInformation.Size = new System.Drawing.Size(906' 584);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageWebInformation.TabIndex = 5;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageWebInformationPanel.Size = new System.Drawing.Size(906' 584);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageWebInformationPanel.Size = new System.Drawing.Size(906' 584);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageWebInformationPanel.TabIndex = 4;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxWebInformation.Location = new System.Drawing.Point(7' 0);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxWebInformation.Size = new System.Drawing.Size(693' 264);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxWebInformation.Size = new System.Drawing.Size(693' 264);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxWebInformation.TabIndex = 3;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbCommercialInformationUrl.Location = new System.Drawing.Point(205' 220);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbCommercialInformationUrl.Location = new System.Drawing.Point(205' 220);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbCommercialInformationUrl.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbCommercialInformationUrl.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbCommercialInformationUrl.TabIndex = 7;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckCommercialInformationUrl.Location = new System.Drawing.Point(671' 218);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckCommercialInformationUrl.Location = new System.Drawing.Point(671' 218);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckCommercialInformationUrl.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckCommercialInformationUrl.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckCommercialInformationUrl.TabIndex = 32;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblCommercialInformationUrl.Location = new System.Drawing.Point(6' 220);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblCommercialInformationUrl.Location = new System.Drawing.Point(6' 220);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblCommercialInformationUrl.Size = new System.Drawing.Size(181' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblCommercialInformationUrl.Size = new System.Drawing.Size(181' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblCommercialInformationUrl.TabIndex = 31;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOfficialPublisherUrl.Location = new System.Drawing.Point(205' 192);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOfficialPublisherUrl.Location = new System.Drawing.Point(205' 192);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOfficialPublisherUrl.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOfficialPublisherUrl.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOfficialPublisherUrl.TabIndex = 6;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOfficialPublisherUrl.Location = new System.Drawing.Point(671' 190);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOfficialPublisherUrl.Location = new System.Drawing.Point(671' 190);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOfficialPublisherUrl.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOfficialPublisherUrl.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOfficialPublisherUrl.TabIndex = 29;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOfficialPublisherUrl.Location = new System.Drawing.Point(6' 192);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOfficialPublisherUrl.Location = new System.Drawing.Point(6' 192);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOfficialPublisherUrl.Size = new System.Drawing.Size(140' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOfficialPublisherUrl.Size = new System.Drawing.Size(140' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOfficialPublisherUrl.TabIndex = 28;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOfficialPaymentUrl.Location = new System.Drawing.Point(205' 163);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOfficialPaymentUrl.Location = new System.Drawing.Point(205' 163);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOfficialPaymentUrl.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOfficialPaymentUrl.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOfficialPaymentUrl.TabIndex = 5;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOfficialPaymentUrl.Location = new System.Drawing.Point(671' 162);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOfficialPaymentUrl.Location = new System.Drawing.Point(671' 162);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOfficialPaymentUrl.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOfficialPaymentUrl.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOfficialPaymentUrl.TabIndex = 26;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOfficialPaymentUrl.Location = new System.Drawing.Point(6' 164);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOfficialPaymentUrl.Location = new System.Drawing.Point(6' 164);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOfficialPaymentUrl.Size = new System.Drawing.Size(137' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOfficialPaymentUrl.Size = new System.Drawing.Size(137' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOfficialPaymentUrl.TabIndex = 25;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOfficialInternetRadioUrl.Location = new System.Drawing.Point(205' 133);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOfficialInternetRadioUrl.Location = new System.Drawing.Point(205' 133);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOfficialInternetRadioUrl.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOfficialInternetRadioUrl.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOfficialInternetRadioUrl.TabIndex = 4;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOfficialInternetRadioUrl.Location = new System.Drawing.Point(671' 133);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOfficialInternetRadioUrl.Location = new System.Drawing.Point(671' 133);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOfficialInternetRadioUrl.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOfficialInternetRadioUrl.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOfficialInternetRadioUrl.TabIndex = 23;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOfficialInternetRadioUrl.Location = new System.Drawing.Point(6' 136);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOfficialInternetRadioUrl.Location = new System.Drawing.Point(6' 136);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOfficialInternetRadioUrl.Size = new System.Drawing.Size(196' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOfficialInternetRadioUrl.Size = new System.Drawing.Size(196' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOfficialInternetRadioUrl.TabIndex = 22;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOfficialAudioSourceUrl.Location = new System.Drawing.Point(205' 105);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOfficialAudioSourceUrl.Location = new System.Drawing.Point(205' 105);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOfficialAudioSourceUrl.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOfficialAudioSourceUrl.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOfficialAudioSourceUrl.TabIndex = 3;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOfficialAudioSourceUrl.Location = new System.Drawing.Point(671' 103);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOfficialAudioSourceUrl.Location = new System.Drawing.Point(671' 103);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOfficialAudioSourceUrl.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOfficialAudioSourceUrl.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOfficialAudioSourceUrl.TabIndex = 20;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOfficialAudioSourceUrl.Location = new System.Drawing.Point(6' 108);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOfficialAudioSourceUrl.Location = new System.Drawing.Point(6' 108);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOfficialAudioSourceUrl.Size = new System.Drawing.Size(160' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOfficialAudioSourceUrl.Size = new System.Drawing.Size(160' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOfficialAudioSourceUrl.TabIndex = 19;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOfficialArtistUrl.Location = new System.Drawing.Point(205' 77);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOfficialArtistUrl.Location = new System.Drawing.Point(205' 77);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOfficialArtistUrl.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOfficialArtistUrl.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOfficialArtistUrl.TabIndex = 2;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOfficialArtistUrl.Location = new System.Drawing.Point(671' 76);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOfficialArtistUrl.Location = new System.Drawing.Point(671' 76);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOfficialArtistUrl.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOfficialArtistUrl.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOfficialArtistUrl.TabIndex = 17;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOfficialArtistUrl.Location = new System.Drawing.Point(6' 80);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOfficialArtistUrl.Location = new System.Drawing.Point(6' 80);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOfficialArtistUrl.Size = new System.Drawing.Size(113' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOfficialArtistUrl.Size = new System.Drawing.Size(113' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblOfficialArtistUrl.TabIndex = 16;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOfficialAudioFileUrl.Location = new System.Drawing.Point(205' 49);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOfficialAudioFileUrl.Location = new System.Drawing.Point(205' 49);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOfficialAudioFileUrl.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbOfficialAudioFileUrl.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOfficialAudioFileUrl.Location = new System.Drawing.Point(671' 48);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOfficialAudioFileUrl.Location = new System.Drawing.Point(671' 48);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOfficialAudioFileUrl.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOfficialAudioFileUrl.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckOfficialAudioFileUrl.TabIndex = 14;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lbOfficialAudioFileUrl.Location = new System.Drawing.Point(6' 52);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lbOfficialAudioFileUrl.Location = new System.Drawing.Point(6' 52);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lbOfficialAudioFileUrl.Size = new System.Drawing.Size(136' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lbOfficialAudioFileUrl.Size = new System.Drawing.Size(136' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lbOfficialAudioFileUrl.TabIndex = 13;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbCopyrightUrl.Location = new System.Drawing.Point(205' 21);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbCopyrightUrl.Location = new System.Drawing.Point(205' 21);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbCopyrightUrl.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbCopyrightUrl.Size = new System.Drawing.Size(460' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckCopyrightUrl.Location = new System.Drawing.Point(671' 20);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckCopyrightUrl.Location = new System.Drawing.Point(671' 20);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckCopyrightUrl.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckCopyrightUrl.Size = new System.Drawing.Size(17' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckCopyrightUrl.TabIndex = 11;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblCopyrightUrl.Location = new System.Drawing.Point(6' 24);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblCopyrightUrl.Location = new System.Drawing.Point(6' 24);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblCopyrightUrl.Size = new System.Drawing.Size(166' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblCopyrightUrl.Size = new System.Drawing.Size(166' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblCopyrightUrl.TabIndex = 10;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageLyrics.Size = new System.Drawing.Size(906' 584);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageLyrics.Size = new System.Drawing.Size(906' 584);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageLyrics.TabIndex = 6;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageLyricsPanel.Size = new System.Drawing.Size(906' 584);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageLyricsPanel.Size = new System.Drawing.Size(906' 584);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageLyricsPanel.TabIndex = 4;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxLyrics.Location = new System.Drawing.Point(7' 0);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxLyrics.Size = new System.Drawing.Size(693' 515);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxLyrics.Size = new System.Drawing.Size(693' 515);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxLyrics.TabIndex = 3;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btGetLyricsFromInternet.Location = new System.Drawing.Point(358' 246);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btGetLyricsFromInternet.Location = new System.Drawing.Point(358' 246);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btGetLyricsFromInternet.Size = new System.Drawing.Size(307' 23);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btGetLyricsFromInternet.Size = new System.Drawing.Size(307' 23);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btGetLyricsFromInternet.TabIndex = 8;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btGetLyricsFromText.Location = new System.Drawing.Point(26' 246);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btGetLyricsFromText.Location = new System.Drawing.Point(26' 246);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btGetLyricsFromText.Size = new System.Drawing.Size(307' 23);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btGetLyricsFromText.Size = new System.Drawing.Size(307' 23);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckRemoveLyrics.Location = new System.Drawing.Point(10' 307);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckRemoveLyrics.Location = new System.Drawing.Point(10' 307);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckRemoveLyrics.Size = new System.Drawing.Size(654' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckRemoveLyrics.Size = new System.Drawing.Size(654' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckRemoveLyrics.TabIndex = 5;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblLyricsMoveTop.Location = new System.Drawing.Point(477' 275);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblLyricsMoveTop.Location = new System.Drawing.Point(477' 275);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblLyricsMoveTop.Size = new System.Drawing.Size(189' 23);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblLyricsMoveTop.Size = new System.Drawing.Size(189' 23);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblLyricsMoveTop.TabIndex = 4;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btRemoveLyrics.Location = new System.Drawing.Point(252' 275);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btRemoveLyrics.Location = new System.Drawing.Point(252' 275);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btRemoveLyrics.Size = new System.Drawing.Size(189' 23);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btRemoveLyrics.Size = new System.Drawing.Size(189' 23);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btRemoveLyrics.TabIndex = 3;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btAddLyrics.Location = new System.Drawing.Point(26' 275);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btAddLyrics.Location = new System.Drawing.Point(26' 275);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btAddLyrics.Size = new System.Drawing.Size(189' 23);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btAddLyrics.Size = new System.Drawing.Size(189' 23);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btAddLyrics.TabIndex = 2;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewLyrics.Location = new System.Drawing.Point(9' 339);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewLyrics.Location = new System.Drawing.Point(9' 339);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewLyrics.Size = new System.Drawing.Size(670' 170);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewLyrics.Size = new System.Drawing.Size(670' 170);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewLyrics.TabIndex = 6;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewTextBoxColumn8.Width = 50;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewTextBoxColumn9.Width = 520;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbLyrics.Location = new System.Drawing.Point(9' 83);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbLyrics.Location = new System.Drawing.Point(9' 83);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbLyrics.Size = new System.Drawing.Size(667' 153);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbLyrics.Size = new System.Drawing.Size(667' 153);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblLyricsLanguage.Location = new System.Drawing.Point(14' 140);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblLyricsLanguage.Location = new System.Drawing.Point(14' 140);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblLyricsLanguage.Size = new System.Drawing.Size(131' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblLyricsLanguage.Size = new System.Drawing.Size(131' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblLyricsLanguage.TabIndex = 3;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblLyricsDescriptor.Location = new System.Drawing.Point(13' 109);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblLyricsDescriptor.Location = new System.Drawing.Point(13' 109);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblLyricsDescriptor.Size = new System.Drawing.Size(132' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblLyricsDescriptor.Size = new System.Drawing.Size(132' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblLyricsDescriptor.TabIndex = 2;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.cbLyricsLanguage.Location = new System.Drawing.Point(200' 46);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.cbLyricsLanguage.Location = new System.Drawing.Point(200' 46);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.cbLyricsLanguage.Size = new System.Drawing.Size(280' 24);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.cbLyricsLanguage.Size = new System.Drawing.Size(280' 24);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.cbLyricsLanguage.TabIndex = 7;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.cbLyricsDescriptor.Location = new System.Drawing.Point(200' 15);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.cbLyricsDescriptor.Location = new System.Drawing.Point(200' 15);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.cbLyricsDescriptor.Size = new System.Drawing.Size(280' 24);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.cbLyricsDescriptor.Size = new System.Drawing.Size(280' 24);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.cbLyricsDescriptor.TabIndex = 6;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageRating.Size = new System.Drawing.Size(906' 584);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageRating.Size = new System.Drawing.Size(906' 584);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageRating.TabIndex = 7;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageRatingPanel.Size = new System.Drawing.Size(906' 584);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageRatingPanel.Size = new System.Drawing.Size(906' 584);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageRatingPanel.TabIndex = 5;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxRating.Location = new System.Drawing.Point(7' 7);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxRating.Location = new System.Drawing.Point(7' 7);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxRating.Size = new System.Drawing.Size(693' 501);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxRating.Size = new System.Drawing.Size(693' 501);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxRating.TabIndex = 4;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckRemoveExistingRatings.Location = new System.Drawing.Point(200' 153);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckRemoveExistingRatings.Location = new System.Drawing.Point(200' 153);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckRemoveExistingRatings.Size = new System.Drawing.Size(479' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckRemoveExistingRatings.Size = new System.Drawing.Size(479' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.ckRemoveExistingRatings.TabIndex = 6;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblRatingNote.Location = new System.Drawing.Point(200' 377);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblRatingNote.Location = new System.Drawing.Point(200' 377);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblRatingNote.MaximumSize = new System.Drawing.Size(500' 100);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblRatingNote.MaximumSize = new System.Drawing.Size(500' 100);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblRatingNote.MinimumSize = new System.Drawing.Size(200' 100);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblRatingNote.MinimumSize = new System.Drawing.Size(200' 100);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblRatingNote.Size = new System.Drawing.Size(480' 100);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblRatingNote.Size = new System.Drawing.Size(480' 100);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblRatingNote.TabIndex = 14;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownPlayCounter.Location = new System.Drawing.Point(200' 94);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownPlayCounter.Location = new System.Drawing.Point(200' 94);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownPlayCounter.Maximum = new decimal(new int[] {              255'              0'              0'              0});
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownPlayCounter.Size = new System.Drawing.Size(49' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownPlayCounter.Size = new System.Drawing.Size(49' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownPlayCounter.TabIndex = 2;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownRating.Location = new System.Drawing.Point(200' 57);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownRating.Location = new System.Drawing.Point(200' 57);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownRating.Maximum = new decimal(new int[] {              255'              0'              0'              0});
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownRating.Size = new System.Drawing.Size(49' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownRating.Size = new System.Drawing.Size(49' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbRatingUser.Location = new System.Drawing.Point(200' 26);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbRatingUser.Location = new System.Drawing.Point(200' 26);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbRatingUser.Size = new System.Drawing.Size(280' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tbRatingUser.Size = new System.Drawing.Size(280' 22);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblRatingPlayCounter.Location = new System.Drawing.Point(7' 96);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblRatingPlayCounter.Location = new System.Drawing.Point(7' 96);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblRatingPlayCounter.Size = new System.Drawing.Size(87' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblRatingPlayCounter.Size = new System.Drawing.Size(87' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblRatingPlayCounter.TabIndex = 10;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btRatingMoveTop.Location = new System.Drawing.Point(528' 125);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btRatingMoveTop.Location = new System.Drawing.Point(528' 125);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btRatingMoveTop.Size = new System.Drawing.Size(152' 23);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btRatingMoveTop.Size = new System.Drawing.Size(152' 23);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btRatingMoveTop.TabIndex = 5;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btRemoveRating.Location = new System.Drawing.Point(350' 125);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btRemoveRating.Location = new System.Drawing.Point(350' 125);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btRemoveRating.Size = new System.Drawing.Size(158' 23);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btRemoveRating.Size = new System.Drawing.Size(158' 23);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btRemoveRating.TabIndex = 4;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btAddRating.Location = new System.Drawing.Point(200' 125);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btAddRating.Location = new System.Drawing.Point(200' 125);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btAddRating.Size = new System.Drawing.Size(135' 23);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btAddRating.Size = new System.Drawing.Size(135' 23);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btAddRating.TabIndex = 3;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewRating.Location = new System.Drawing.Point(200' 188);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewRating.Location = new System.Drawing.Point(200' 188);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewRating.Size = new System.Drawing.Size(480' 170);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewRating.Size = new System.Drawing.Size(480' 170);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewRating.TabIndex = 6;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewTextBoxColumn10.Width = 280;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblRating.Location = new System.Drawing.Point(7' 62);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblRating.Location = new System.Drawing.Point(7' 62);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblRating.Size = new System.Drawing.Size(50' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblRating.Size = new System.Drawing.Size(50' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblRating.TabIndex = 3;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblRatingUser.Location = new System.Drawing.Point(6' 31);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblRatingUser.Location = new System.Drawing.Point(6' 31);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblRatingUser.Size = new System.Drawing.Size(84' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblRatingUser.Size = new System.Drawing.Size(84' 16);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lblRatingUser.TabIndex = 2;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageUserDefined.Size = new System.Drawing.Size(906' 584);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageUserDefined.Size = new System.Drawing.Size(906' 584);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageUserDefined.TabIndex = 8;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageUserDefinedPanel.Size = new System.Drawing.Size(906' 584);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageUserDefinedPanel.Size = new System.Drawing.Size(906' 584);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageUserDefinedPanel.TabIndex = 3;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btDeleteAllFrames.Location = new System.Drawing.Point(512' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btDeleteAllFrames.Location = new System.Drawing.Point(512' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btDeleteAllFrames.Size = new System.Drawing.Size(212' 23);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btDeleteAllFrames.Size = new System.Drawing.Size(212' 23);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btDeleteAllFrames.TabIndex = 2;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btDeleteFrame.Location = new System.Drawing.Point(263' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btDeleteFrame.Location = new System.Drawing.Point(263' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btDeleteFrame.Size = new System.Drawing.Size(212' 23);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btDeleteFrame.Size = new System.Drawing.Size(212' 23);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btDeleteFrame.TabIndex = 2;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btAddUserFrame.Location = new System.Drawing.Point(21' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btAddUserFrame.Location = new System.Drawing.Point(21' 29);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btAddUserFrame.Size = new System.Drawing.Size(212' 23);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btAddUserFrame.Size = new System.Drawing.Size(212' 23);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: dataGridViewCellStyle1.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(215))))' ((int)(((byte)(225))))' ((int)(((byte)(245)))));
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: dataGridViewCellStyle1.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(215))))' ((int)(((byte)(225))))' ((int)(((byte)(245)))));
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: dataGridViewCellStyle1.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(215))))' ((int)(((byte)(225))))' ((int)(((byte)(245)))));
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewUserFrames.Location = new System.Drawing.Point(21' 68);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewUserFrames.Location = new System.Drawing.Point(21' 68);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewUserFrames.Size = new System.Drawing.Size(846' 296);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewUserFrames.Size = new System.Drawing.Size(846' 296);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.FrameDesc.Width = 250;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.panelTop.Size = new System.Drawing.Size(908' 46);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.panelTop.Size = new System.Drawing.Size(908' 46);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.panelTop.TabIndex = 28;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btNext.Location = new System.Drawing.Point(326' 10);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btNext.Location = new System.Drawing.Point(326' 10);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btNext.Size = new System.Drawing.Size(143' 23);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btNext.Size = new System.Drawing.Size(143' 23);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btNext.TabIndex = 3;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btPrevious.Location = new System.Drawing.Point(168' 10);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btPrevious.Location = new System.Drawing.Point(168' 10);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btPrevious.Size = new System.Drawing.Size(143' 23);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btPrevious.Size = new System.Drawing.Size(143' 23);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btPrevious.TabIndex = 2;
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lbEditedFile.Location = new System.Drawing.Point(480' 10);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lbEditedFile.Location = new System.Drawing.Point(480' 10);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lbEditedFile.Size = new System.Drawing.Size(380' 23);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.lbEditedFile.Size = new System.Drawing.Size(380' 23);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btApply.Location = new System.Drawing.Point(13' 10);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btApply.Location = new System.Drawing.Point(13' 10);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btApply.Size = new System.Drawing.Size(143' 23);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.btApply.Size = new System.Drawing.Size(143' 23);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(908' 654);
Magic Number,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(908' 654);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,GetStrippedPrefixArtist,The following statement contains a magic number: foreach (string s in strippedPrefixStringArray)        {          int index = artist.IndexOf(s);          if (index != -1)          {            string prefix = artist.Substring(index + 2);            artist = prefix + " " + artist.Replace(s' "");            break;          }        }
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,lvSearchResults_SelectedIndexChanged,The following statement contains a magic number: if (lvSearchResults.SelectedItems.Count > 0)        {          tbLyrics.Text = LyricUtil.ReturnEnvironmentNewLine(lvSearchResults.SelectedItems[0].SubItems[2].Text);          if (tbLyrics.Text.Length != 0)          {            btUpdate.Enabled = true;          }          else          {            btUpdate.Enabled = false;          }        }        else        {          btUpdate.Enabled = false;        }
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,btSwitchArtist_Click,The following statement contains a magic number: if (iPos > 0)        {          tbArtist.Text = String.Format("{0} {1}"' artist.Substring(iPos + 2)' artist.Substring(0' iPos));        }
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,UpdateSong,The following statement contains a magic number: if (lvSearchResults.SelectedItems.Count > 0)        {          if (parent.GetType() == typeof (TagEditControl))          {            (parent as TagEditControl).LyricsText =              LyricUtil.ReturnEnvironmentNewLine(lvSearchResults.SelectedItems[0].SubItems[2].Text);          }        }
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.btCancel.Location = new System.Drawing.Point(489' 109);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.btCancel.Location = new System.Drawing.Point(489' 109);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.btCancel.Size = new System.Drawing.Size(100' 23);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.btCancel.Size = new System.Drawing.Size(100' 23);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.btCancel.TabIndex = 42;
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.tbTitle.Location = new System.Drawing.Point(73' 53);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.tbTitle.Location = new System.Drawing.Point(73' 53);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.tbTitle.Size = new System.Drawing.Size(498' 20);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.tbTitle.Size = new System.Drawing.Size(498' 20);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.tbTitle.TabIndex = 2;
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.lvSearchResults.Location = new System.Drawing.Point(17' 21);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.lvSearchResults.Location = new System.Drawing.Point(17' 21);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.lvSearchResults.Size = new System.Drawing.Size(554' 152);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.lvSearchResults.Size = new System.Drawing.Size(554' 152);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.lvSearchResults.TabIndex = 10;
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.chSite.Width = 113;
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.chResult.Width = 58;
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.chLyric.Width = 375;
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Location = new System.Drawing.Point(18' 148);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Location = new System.Drawing.Point(18' 148);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Size = new System.Drawing.Size(591' 191);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Size = new System.Drawing.Size(591' 191);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.TabIndex = 39;
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.lbTitle.Location = new System.Drawing.Point(15' 56);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.lbTitle.Location = new System.Drawing.Point(15' 56);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.lbTitle.Size = new System.Drawing.Size(30' 13);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.lbTitle.Size = new System.Drawing.Size(30' 13);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.lbTitle.TabIndex = 2;
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.btUpdate.Location = new System.Drawing.Point(403' 599);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.btUpdate.Location = new System.Drawing.Point(403' 599);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.btUpdate.Size = new System.Drawing.Size(100' 23);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.btUpdate.Size = new System.Drawing.Size(100' 23);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.btUpdate.TabIndex = 43;
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.tbArtist.Location = new System.Drawing.Point(73' 26);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.tbArtist.Location = new System.Drawing.Point(73' 26);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.tbArtist.Size = new System.Drawing.Size(498' 20);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.tbArtist.Size = new System.Drawing.Size(498' 20);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.btFind.Location = new System.Drawing.Point(383' 109);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.btFind.Location = new System.Drawing.Point(383' 109);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.btFind.Size = new System.Drawing.Size(100' 23);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.btFind.Size = new System.Drawing.Size(100' 23);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.btFind.TabIndex = 41;
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.btClose.Location = new System.Drawing.Point(509' 599);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.btClose.Location = new System.Drawing.Point(509' 599);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.btClose.Size = new System.Drawing.Size(100' 23);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.btClose.Size = new System.Drawing.Size(100' 23);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.btClose.TabIndex = 44;
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.tbLyrics.Location = new System.Drawing.Point(17' 19);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.tbLyrics.Location = new System.Drawing.Point(17' 19);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.tbLyrics.Size = new System.Drawing.Size(554' 193);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.tbLyrics.Size = new System.Drawing.Size(554' 193);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.groupBox2.Location = new System.Drawing.Point(18' 356);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.groupBox2.Location = new System.Drawing.Point(18' 356);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.groupBox2.Size = new System.Drawing.Size(591' 230);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.groupBox2.Size = new System.Drawing.Size(591' 230);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.groupBox2.TabIndex = 40;
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.lbArtist.Location = new System.Drawing.Point(15' 29);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.lbArtist.Location = new System.Drawing.Point(15' 29);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.lbArtist.Size = new System.Drawing.Size(33' 13);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.lbArtist.Size = new System.Drawing.Size(33' 13);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.gbSearchInfo.Location = new System.Drawing.Point(18' 18);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.gbSearchInfo.Location = new System.Drawing.Point(18' 18);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.gbSearchInfo.Size = new System.Drawing.Size(591' 85);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.gbSearchInfo.Size = new System.Drawing.Size(591' 85);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.gbSearchInfo.TabIndex = 38;
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.btSwitchArtist.Location = new System.Drawing.Point(18' 109);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.btSwitchArtist.Location = new System.Drawing.Point(18' 109);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.btSwitchArtist.Size = new System.Drawing.Size(192' 23);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.btSwitchArtist.Size = new System.Drawing.Size(192' 23);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.btSwitchArtist.TabIndex = 45;
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(631' 634);
Magic Number,MPTagThat.TagEdit,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(631' 634);
Magic Number,MPTagThat.GridView,GridViewColumnsLyrics,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumnsLyrics.cs,GridViewColumnsLyrics,The following statement contains a magic number: _check = new GridViewColumn(" "' "check"' 40' true' false' false' true);
Magic Number,MPTagThat.GridView,GridViewColumnsLyrics,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumnsLyrics.cs,GridViewColumnsLyrics,The following statement contains a magic number: _status = new GridViewColumn("Status"' "text"' 40' true' true' false' true);
Magic Number,MPTagThat.GridView,GridViewColumnsLyrics,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumnsLyrics.cs,GridViewColumnsLyrics,The following statement contains a magic number: _track = new GridViewColumn("Track"' "text"' 40' true' true' true' true);
Magic Number,MPTagThat.GridView,GridViewColumnsLyrics,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumnsLyrics.cs,GridViewColumnsLyrics,The following statement contains a magic number: _artist = new GridViewColumn("Artist"' "text"' 150' true' true' true' true);
Magic Number,MPTagThat.GridView,GridViewColumnsLyrics,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumnsLyrics.cs,GridViewColumnsLyrics,The following statement contains a magic number: _title = new GridViewColumn("Title"' "text"' 150' true' true' true' true);
Magic Number,MPTagThat.GridView,GridViewColumnsLyrics,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumnsLyrics.cs,GridViewColumnsLyrics,The following statement contains a magic number: _lyrics = new GridViewColumn("Lyrics"' "text"' 330' true' true' false' true);
Magic Number,MPTagThat.GridView,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\LyricsSearch.cs,bgWorkerLyrics_DoWork,The following statement contains a magic number: if (_lyricsQueue.Count > 0)        {          // start running the lyricController          _lc = new LyricsController(this' _eventStopThread' _sitesToSearch.ToArray()' false' false' ""' "")          {            NoOfLyricsToSearch = _lyricsQueue.Count          };            ThreadStart runLyricController = delegate { _lc.Run(); };          _lyricControllerThread = new Thread(runLyricController);          _lyricControllerThread.Start();            _lc.StopSearches = false;              int row = 0;          while (_lyricsQueue.Count != 0)          {            if (_lc == null)              return;              if (_lc.NoOfCurrentSearches < NoOfCurrentSearchesAllowed && _lc.StopSearches == false)            {              string[] lyricId = (string[])_lyricsQueue.Dequeue();                if (Options.MainSettings.SwitchArtist)                lyricId[0] = SwitchArtist(lyricId[0]);                _lc.AddNewLyricSearch(lyricId[0]' TrimTitle(lyricId[1])' GetStrippedPrefixArtist(lyricId[0]' _strippedPrefixStrings)'                                   row);              row++;            }              Thread.Sleep(100);          }        }        else        {          ThreadFinished = new object[] {""' ""' localisation.ToString("lyricssearch"' "NothingToSearch")' ""};        }
Magic Number,MPTagThat.GridView,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\LyricsSearch.cs,SwitchArtist,The following statement contains a magic number: if (iPos > 0)        {          artist = $"{artist.Substring(iPos + 2)} {artist.Substring(0' iPos)}";        }
Magic Number,MPTagThat.GridView,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\LyricsSearch.cs,lyricFound,The following statement contains a magic number: dataGridViewLyrics.Rows[row].Cells[5].Value = lyricStrings;
Magic Number,MPTagThat.GridView,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: dataGridViewCellStyle1.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(215))))' ((int)(((byte)(225))))' ((int)(((byte)(245)))));
Magic Number,MPTagThat.GridView,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: dataGridViewCellStyle1.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(215))))' ((int)(((byte)(225))))' ((int)(((byte)(245)))));
Magic Number,MPTagThat.GridView,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: dataGridViewCellStyle1.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(215))))' ((int)(((byte)(225))))' ((int)(((byte)(245)))));
Magic Number,MPTagThat.GridView,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewLyrics.Location = new System.Drawing.Point(15' 34);
Magic Number,MPTagThat.GridView,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewLyrics.Location = new System.Drawing.Point(15' 34);
Magic Number,MPTagThat.GridView,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewLyrics.Size = new System.Drawing.Size(858' 448);
Magic Number,MPTagThat.GridView,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewLyrics.Size = new System.Drawing.Size(858' 448);
Magic Number,MPTagThat.GridView,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.btUpdate.Location = new System.Drawing.Point(667' 494);
Magic Number,MPTagThat.GridView,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.btUpdate.Location = new System.Drawing.Point(667' 494);
Magic Number,MPTagThat.GridView,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.btUpdate.Size = new System.Drawing.Size(100' 23);
Magic Number,MPTagThat.GridView,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.btUpdate.Size = new System.Drawing.Size(100' 23);
Magic Number,MPTagThat.GridView,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.btCancel.Location = new System.Drawing.Point(773' 494);
Magic Number,MPTagThat.GridView,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.btCancel.Location = new System.Drawing.Point(773' 494);
Magic Number,MPTagThat.GridView,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.btCancel.Size = new System.Drawing.Size(100' 23);
Magic Number,MPTagThat.GridView,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.btCancel.Size = new System.Drawing.Size(100' 23);
Magic Number,MPTagThat.GridView,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.btCancel.TabIndex = 2;
Magic Number,MPTagThat.GridView,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.lbStatus.Location = new System.Drawing.Point(14' 11);
Magic Number,MPTagThat.GridView,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.lbStatus.Location = new System.Drawing.Point(14' 11);
Magic Number,MPTagThat.GridView,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.lbStatus.Size = new System.Drawing.Size(171' 13);
Magic Number,MPTagThat.GridView,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.lbStatus.Size = new System.Drawing.Size(171' 13);
Magic Number,MPTagThat.GridView,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.lbStatus.TabIndex = 3;
Magic Number,MPTagThat.GridView,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.lbFinished.Location = new System.Drawing.Point(12' 494);
Magic Number,MPTagThat.GridView,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.lbFinished.Location = new System.Drawing.Point(12' 494);
Magic Number,MPTagThat.GridView,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.lbFinished.Size = new System.Drawing.Size(295' 13);
Magic Number,MPTagThat.GridView,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.lbFinished.Size = new System.Drawing.Size(295' 13);
Magic Number,MPTagThat.GridView,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.lbFinished.TabIndex = 4;
Magic Number,MPTagThat.GridView,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(894' 528);
Magic Number,MPTagThat.GridView,LyricsSearch,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\LyricsSearch.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(894' 528);
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,BurningThread,The following statement contains a magic number: foreach (DataGridViewRow row in dataGridViewBurn.Rows)        {          TrackData track = bindingList[row.Index];          string outFile = String.Format(@"{0}\{1}.wav"' tmpBurnDirectory'                                         Path.GetFileNameWithoutExtension(track.FullFileName));            int stream = Bass.BASS_StreamCreateFile(track.FullFileName' 0' 0' BASSFlag.BASS_STREAM_DECODE);          if (stream == 0)          {            bError = true;            log.Error("Error creating stream for {0}."' track.FullFileName);            continue;          }            // In order to burn a file to CD' it must be stereo and 44kz          // To make sure that we have that' we create a mixer channel and add our stream to it          // The mixer will do the resampling          int mixer = BassMix.BASS_Mixer_StreamCreate(44100' 2' BASSFlag.BASS_STREAM_DECODE);          if (mixer == 0)          {            bError = true;            log.Error("Error creating mixer for {0}."' track.FullFileName);            continue;          }            // Now add the stream to the mixer          BassMix.BASS_Mixer_StreamAddChannel(mixer' stream' 0);            log.Info("Decoding to WAV: {0}"' track.FullFileName);          BassEnc.BASS_Encode_Start(mixer' outFile' BASSEncode.BASS_ENCODE_PCM' null' IntPtr.Zero);            long pos = 0;          long chanLength = Bass.BASS_ChannelGetLength(stream);            byte[] encBuffer = new byte[20000]; // our encoding buffer          while (Bass.BASS_ChannelIsActive(stream) == BASSActive.BASS_ACTIVE_PLAYING)          {            // getting sample data will automatically feed the encoder            int len = Bass.BASS_ChannelGetData(mixer' encBuffer' encBuffer.Length);            pos = Bass.BASS_ChannelGetPosition(mixer);            double percentComplete = pos / (double)chanLength * 100.0;            dataGridViewBurn.Rows[row.Index].Cells[0].Value = (int)percentComplete;          }          outFiles.Add(outFile);          dataGridViewBurn.Rows[row.Index].Cells[0].Value = 100;          BassEnc.BASS_Encode_Stop(mixer);          Bass.BASS_StreamFree(stream);          Bass.BASS_StreamFree(mixer);        }
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,BurningThread,The following statement contains a magic number: foreach (DataGridViewRow row in dataGridViewBurn.Rows)        {          TrackData track = bindingList[row.Index];          string outFile = String.Format(@"{0}\{1}.wav"' tmpBurnDirectory'                                         Path.GetFileNameWithoutExtension(track.FullFileName));            int stream = Bass.BASS_StreamCreateFile(track.FullFileName' 0' 0' BASSFlag.BASS_STREAM_DECODE);          if (stream == 0)          {            bError = true;            log.Error("Error creating stream for {0}."' track.FullFileName);            continue;          }            // In order to burn a file to CD' it must be stereo and 44kz          // To make sure that we have that' we create a mixer channel and add our stream to it          // The mixer will do the resampling          int mixer = BassMix.BASS_Mixer_StreamCreate(44100' 2' BASSFlag.BASS_STREAM_DECODE);          if (mixer == 0)          {            bError = true;            log.Error("Error creating mixer for {0}."' track.FullFileName);            continue;          }            // Now add the stream to the mixer          BassMix.BASS_Mixer_StreamAddChannel(mixer' stream' 0);            log.Info("Decoding to WAV: {0}"' track.FullFileName);          BassEnc.BASS_Encode_Start(mixer' outFile' BASSEncode.BASS_ENCODE_PCM' null' IntPtr.Zero);            long pos = 0;          long chanLength = Bass.BASS_ChannelGetLength(stream);            byte[] encBuffer = new byte[20000]; // our encoding buffer          while (Bass.BASS_ChannelIsActive(stream) == BASSActive.BASS_ACTIVE_PLAYING)          {            // getting sample data will automatically feed the encoder            int len = Bass.BASS_ChannelGetData(mixer' encBuffer' encBuffer.Length);            pos = Bass.BASS_ChannelGetPosition(mixer);            double percentComplete = pos / (double)chanLength * 100.0;            dataGridViewBurn.Rows[row.Index].Cells[0].Value = (int)percentComplete;          }          outFiles.Add(outFile);          dataGridViewBurn.Rows[row.Index].Cells[0].Value = 100;          BassEnc.BASS_Encode_Stop(mixer);          Bass.BASS_StreamFree(stream);          Bass.BASS_StreamFree(mixer);        }
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,BurningThread,The following statement contains a magic number: foreach (DataGridViewRow row in dataGridViewBurn.Rows)        {          TrackData track = bindingList[row.Index];          string outFile = String.Format(@"{0}\{1}.wav"' tmpBurnDirectory'                                         Path.GetFileNameWithoutExtension(track.FullFileName));            int stream = Bass.BASS_StreamCreateFile(track.FullFileName' 0' 0' BASSFlag.BASS_STREAM_DECODE);          if (stream == 0)          {            bError = true;            log.Error("Error creating stream for {0}."' track.FullFileName);            continue;          }            // In order to burn a file to CD' it must be stereo and 44kz          // To make sure that we have that' we create a mixer channel and add our stream to it          // The mixer will do the resampling          int mixer = BassMix.BASS_Mixer_StreamCreate(44100' 2' BASSFlag.BASS_STREAM_DECODE);          if (mixer == 0)          {            bError = true;            log.Error("Error creating mixer for {0}."' track.FullFileName);            continue;          }            // Now add the stream to the mixer          BassMix.BASS_Mixer_StreamAddChannel(mixer' stream' 0);            log.Info("Decoding to WAV: {0}"' track.FullFileName);          BassEnc.BASS_Encode_Start(mixer' outFile' BASSEncode.BASS_ENCODE_PCM' null' IntPtr.Zero);            long pos = 0;          long chanLength = Bass.BASS_ChannelGetLength(stream);            byte[] encBuffer = new byte[20000]; // our encoding buffer          while (Bass.BASS_ChannelIsActive(stream) == BASSActive.BASS_ACTIVE_PLAYING)          {            // getting sample data will automatically feed the encoder            int len = Bass.BASS_ChannelGetData(mixer' encBuffer' encBuffer.Length);            pos = Bass.BASS_ChannelGetPosition(mixer);            double percentComplete = pos / (double)chanLength * 100.0;            dataGridViewBurn.Rows[row.Index].Cells[0].Value = (int)percentComplete;          }          outFiles.Add(outFile);          dataGridViewBurn.Rows[row.Index].Cells[0].Value = 100;          BassEnc.BASS_Encode_Stop(mixer);          Bass.BASS_StreamFree(stream);          Bass.BASS_StreamFree(mixer);        }
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,BurningThread,The following statement contains a magic number: foreach (DataGridViewRow row in dataGridViewBurn.Rows)        {          TrackData track = bindingList[row.Index];          string outFile = String.Format(@"{0}\{1}.wav"' tmpBurnDirectory'                                         Path.GetFileNameWithoutExtension(track.FullFileName));            int stream = Bass.BASS_StreamCreateFile(track.FullFileName' 0' 0' BASSFlag.BASS_STREAM_DECODE);          if (stream == 0)          {            bError = true;            log.Error("Error creating stream for {0}."' track.FullFileName);            continue;          }            // In order to burn a file to CD' it must be stereo and 44kz          // To make sure that we have that' we create a mixer channel and add our stream to it          // The mixer will do the resampling          int mixer = BassMix.BASS_Mixer_StreamCreate(44100' 2' BASSFlag.BASS_STREAM_DECODE);          if (mixer == 0)          {            bError = true;            log.Error("Error creating mixer for {0}."' track.FullFileName);            continue;          }            // Now add the stream to the mixer          BassMix.BASS_Mixer_StreamAddChannel(mixer' stream' 0);            log.Info("Decoding to WAV: {0}"' track.FullFileName);          BassEnc.BASS_Encode_Start(mixer' outFile' BASSEncode.BASS_ENCODE_PCM' null' IntPtr.Zero);            long pos = 0;          long chanLength = Bass.BASS_ChannelGetLength(stream);            byte[] encBuffer = new byte[20000]; // our encoding buffer          while (Bass.BASS_ChannelIsActive(stream) == BASSActive.BASS_ACTIVE_PLAYING)          {            // getting sample data will automatically feed the encoder            int len = Bass.BASS_ChannelGetData(mixer' encBuffer' encBuffer.Length);            pos = Bass.BASS_ChannelGetPosition(mixer);            double percentComplete = pos / (double)chanLength * 100.0;            dataGridViewBurn.Rows[row.Index].Cells[0].Value = (int)percentComplete;          }          outFiles.Add(outFile);          dataGridViewBurn.Rows[row.Index].Cells[0].Value = 100;          BassEnc.BASS_Encode_Stop(mixer);          Bass.BASS_StreamFree(stream);          Bass.BASS_StreamFree(mixer);        }
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,BurningThread,The following statement contains a magic number: foreach (DataGridViewRow row in dataGridViewBurn.Rows)        {          TrackData track = bindingList[row.Index];          string outFile = String.Format(@"{0}\{1}.wav"' tmpBurnDirectory'                                         Path.GetFileNameWithoutExtension(track.FullFileName));            int stream = Bass.BASS_StreamCreateFile(track.FullFileName' 0' 0' BASSFlag.BASS_STREAM_DECODE);          if (stream == 0)          {            bError = true;            log.Error("Error creating stream for {0}."' track.FullFileName);            continue;          }            // In order to burn a file to CD' it must be stereo and 44kz          // To make sure that we have that' we create a mixer channel and add our stream to it          // The mixer will do the resampling          int mixer = BassMix.BASS_Mixer_StreamCreate(44100' 2' BASSFlag.BASS_STREAM_DECODE);          if (mixer == 0)          {            bError = true;            log.Error("Error creating mixer for {0}."' track.FullFileName);            continue;          }            // Now add the stream to the mixer          BassMix.BASS_Mixer_StreamAddChannel(mixer' stream' 0);            log.Info("Decoding to WAV: {0}"' track.FullFileName);          BassEnc.BASS_Encode_Start(mixer' outFile' BASSEncode.BASS_ENCODE_PCM' null' IntPtr.Zero);            long pos = 0;          long chanLength = Bass.BASS_ChannelGetLength(stream);            byte[] encBuffer = new byte[20000]; // our encoding buffer          while (Bass.BASS_ChannelIsActive(stream) == BASSActive.BASS_ACTIVE_PLAYING)          {            // getting sample data will automatically feed the encoder            int len = Bass.BASS_ChannelGetData(mixer' encBuffer' encBuffer.Length);            pos = Bass.BASS_ChannelGetPosition(mixer);            double percentComplete = pos / (double)chanLength * 100.0;            dataGridViewBurn.Rows[row.Index].Cells[0].Value = (int)percentComplete;          }          outFiles.Add(outFile);          dataGridViewBurn.Rows[row.Index].Cells[0].Value = 100;          BassEnc.BASS_Encode_Stop(mixer);          Bass.BASS_StreamFree(stream);          Bass.BASS_StreamFree(mixer);        }
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,burnManager_BurnProgressUpdate,The following statement contains a magic number: if (eTrack > 1)          dataGridViewBurn.Rows[eTrack - 2].Cells[0].Value = 100;
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,burnManager_BurnProgressUpdate,The following statement contains a magic number: if (eTrack > 1)          dataGridViewBurn.Rows[eTrack - 2].Cells[0].Value = 100;
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,burnManager_BurnProgressUpdate,The following statement contains a magic number: if (eTrack > -1)          dataGridViewBurn.Rows[eTrack - 1].Cells[0].Value = ePercentage <= 100 ? ePercentage : 100;        else        {          switch (eBurnStatus)          {            case BurnStatus.Checking:              lbBurningStatus.Text = localisation.ToString("Burning"' "Checking");              break;              case BurnStatus.Blanking:              lbBurningStatus.Text = localisation.ToString("Burning"' "Erasing");              break;              case BurnStatus.LeadIn:              lbBurningStatus.Text = localisation.ToString("Burning"' "Leaadin");              break;              case BurnStatus.LeadOut:              dataGridViewBurn.Rows[dataGridViewBurn.Rows.Count - 1].Cells[0].Value = 100;              lbBurningStatus.Text = localisation.ToString("Burning"' "Leadout");              break;              case BurnStatus.Burning:              lbBurningStatus.Text = localisation.ToString("Burning"' "Burning");              break;              case BurnStatus.Finished:              lbBurningStatus.Text = localisation.ToString("Burning"' "Finished");              break;          }        }
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,burnManager_BurnProgressUpdate,The following statement contains a magic number: if (eTrack > -1)          dataGridViewBurn.Rows[eTrack - 1].Cells[0].Value = ePercentage <= 100 ? ePercentage : 100;        else        {          switch (eBurnStatus)          {            case BurnStatus.Checking:              lbBurningStatus.Text = localisation.ToString("Burning"' "Checking");              break;              case BurnStatus.Blanking:              lbBurningStatus.Text = localisation.ToString("Burning"' "Erasing");              break;              case BurnStatus.LeadIn:              lbBurningStatus.Text = localisation.ToString("Burning"' "Leaadin");              break;              case BurnStatus.LeadOut:              dataGridViewBurn.Rows[dataGridViewBurn.Rows.Count - 1].Cells[0].Value = 100;              lbBurningStatus.Text = localisation.ToString("Burning"' "Leadout");              break;              case BurnStatus.Burning:              lbBurningStatus.Text = localisation.ToString("Burning"' "Burning");              break;              case BurnStatus.Finished:              lbBurningStatus.Text = localisation.ToString("Burning"' "Finished");              break;          }        }
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,burnManager_BurnProgressUpdate,The following statement contains a magic number: if (eTrack > -1)          dataGridViewBurn.Rows[eTrack - 1].Cells[0].Value = ePercentage <= 100 ? ePercentage : 100;        else        {          switch (eBurnStatus)          {            case BurnStatus.Checking:              lbBurningStatus.Text = localisation.ToString("Burning"' "Checking");              break;              case BurnStatus.Blanking:              lbBurningStatus.Text = localisation.ToString("Burning"' "Erasing");              break;              case BurnStatus.LeadIn:              lbBurningStatus.Text = localisation.ToString("Burning"' "Leaadin");              break;              case BurnStatus.LeadOut:              dataGridViewBurn.Rows[dataGridViewBurn.Rows.Count - 1].Cells[0].Value = 100;              lbBurningStatus.Text = localisation.ToString("Burning"' "Leadout");              break;              case BurnStatus.Burning:              lbBurningStatus.Text = localisation.ToString("Burning"' "Burning");              break;              case BurnStatus.Finished:              lbBurningStatus.Text = localisation.ToString("Burning"' "Finished");              break;          }        }
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,MediaAllowsBurning,The following statement contains a magic number: while (diskChangeNeeded)        {          if (mediainfo == null)            SetBurningStatus(localisation.ToString("Burning"' "NoMedia"));          else if (mediainfo.DiskStatus == BlankStatus.complete)            SetBurningStatus(localisation.ToString("Burning"' "FinishedMedia"));          else if (mediainfo.DiskStatus == BlankStatus.empty)            return true;            Thread.Sleep(2000);        }
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,CreateColumns,The following statement contains a magic number: col.Width = 5;
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,CalculateTotalTime,The following statement contains a magic number: int minutes = dt.Hour * 60 + dt.Minute;
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,CalculateTotalTime,The following statement contains a magic number: lbUsed.Text = String.Format(localisation.ToString("Burning"' "Used")' minutes.ToString().PadLeft(2' '0')'                                    dt.Second.ToString().PadLeft(2' '0')' bindingList.Count);
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,CalculateTotalTime,The following statement contains a magic number: lbUsed.Text = String.Format(localisation.ToString("Burning"' "Used")' minutes.ToString().PadLeft(2' '0')'                                    dt.Second.ToString().PadLeft(2' '0')' bindingList.Count);
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,ConvertSizeToMinute,The following statement contains a magic number: return (int)Math.Round(size / 75.0 / 60.0);
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,ConvertSizeToMinute,The following statement contains a magic number: return (int)Math.Round(size / 75.0 / 60.0);
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,GetDrives,The following statement contains a magic number: while (burners.Count == 0 && i < 10)        {          Thread.Sleep(1000);          burners = burnManager.GetDrives();          i++;        }
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,GetDrives,The following statement contains a magic number: while (burners.Count == 0 && i < 10)        {          Thread.Sleep(1000);          burners = burnManager.GetDrives();          i++;        }
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,OnMouseDown,The following statement contains a magic number: if (dataGridViewBurn.AllowDrop)        {          int selectedRow = dataGridViewBurn.HitTest(e.X' e.Y).RowIndex;          if (selectedRow > -1)          {            Size DragSize = SystemInformation.DragSize;            DragDropRectangle = new Rectangle(new Point(e.X - (DragSize.Width / 2)' e.Y - (DragSize.Height / 2))' DragSize);            DragDropSourceIndex = selectedRow;          }        }        else        {          DragDropRectangle = Rectangle.Empty;        }
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,OnMouseDown,The following statement contains a magic number: if (dataGridViewBurn.AllowDrop)        {          int selectedRow = dataGridViewBurn.HitTest(e.X' e.Y).RowIndex;          if (selectedRow > -1)          {            Size DragSize = SystemInformation.DragSize;            DragDropRectangle = new Rectangle(new Point(e.X - (DragSize.Width / 2)' e.Y - (DragSize.Height / 2))' DragSize);            DragDropSourceIndex = selectedRow;          }        }        else        {          DragDropRectangle = Rectangle.Empty;        }
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,OnCellPainting,The following statement contains a magic number: if (DragDropCurrentIndex > -1)        {          if (e.RowIndex == DragDropCurrentIndex && DragDropCurrentIndex < dataGridViewBurn.RowCount - 1)          {            //if this cell is in the same row as the mouse cursor            Pen p = new Pen(Color.Red' 3);            e.Graphics.DrawLine(p' e.CellBounds.Left' e.CellBounds.Top - 1' e.CellBounds.Right' e.CellBounds.Top - 1);          }        }
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,InitializeComponent,The following statement contains a magic number: this.panelTop.Size = new System.Drawing.Size(527' 81);
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,InitializeComponent,The following statement contains a magic number: this.panelTop.Size = new System.Drawing.Size(527' 81);
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,InitializeComponent,The following statement contains a magic number: this.panelTop.TabIndex = 2;
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,InitializeComponent,The following statement contains a magic number: this.lbMediaInfo.Location = new System.Drawing.Point(10' 6);
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,InitializeComponent,The following statement contains a magic number: this.lbMediaInfo.Location = new System.Drawing.Point(10' 6);
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,InitializeComponent,The following statement contains a magic number: this.lbMediaInfo.Size = new System.Drawing.Size(137' 20);
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,InitializeComponent,The following statement contains a magic number: this.lbMediaInfo.Size = new System.Drawing.Size(137' 20);
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,InitializeComponent,The following statement contains a magic number: this.lbMediaInfo.TabIndex = 2;
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,InitializeComponent,The following statement contains a magic number: this.lbUsed.Location = new System.Drawing.Point(10' 31);
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,InitializeComponent,The following statement contains a magic number: this.lbUsed.Location = new System.Drawing.Point(10' 31);
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,InitializeComponent,The following statement contains a magic number: this.lbUsed.Size = new System.Drawing.Size(155' 20);
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,InitializeComponent,The following statement contains a magic number: this.lbUsed.Size = new System.Drawing.Size(155' 20);
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,InitializeComponent,The following statement contains a magic number: this.lbBurningStatus.Location = new System.Drawing.Point(10' 55);
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,InitializeComponent,The following statement contains a magic number: this.lbBurningStatus.Location = new System.Drawing.Point(10' 55);
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,InitializeComponent,The following statement contains a magic number: this.lbBurningStatus.Size = new System.Drawing.Size(80' 20);
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,InitializeComponent,The following statement contains a magic number: this.lbBurningStatus.Size = new System.Drawing.Size(80' 20);
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,InitializeComponent,The following statement contains a magic number: this.panelMiddle.Location = new System.Drawing.Point(0' 81);
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,InitializeComponent,The following statement contains a magic number: this.panelMiddle.Size = new System.Drawing.Size(527' 355);
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,InitializeComponent,The following statement contains a magic number: this.panelMiddle.Size = new System.Drawing.Size(527' 355);
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,InitializeComponent,The following statement contains a magic number: this.panelMiddle.TabIndex = 3;
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,InitializeComponent,The following statement contains a magic number: dataGridViewCellStyle1.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(215))))' ((int)(((byte)(225))))' ((int)(((byte)(245)))));
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,InitializeComponent,The following statement contains a magic number: dataGridViewCellStyle1.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(215))))' ((int)(((byte)(225))))' ((int)(((byte)(245)))));
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,InitializeComponent,The following statement contains a magic number: dataGridViewCellStyle1.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(215))))' ((int)(((byte)(225))))' ((int)(((byte)(245)))));
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewBurn.Location = new System.Drawing.Point(10' 0);
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewBurn.Size = new System.Drawing.Size(517' 355);
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewBurn.Size = new System.Drawing.Size(517' 355);
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,InitializeComponent,The following statement contains a magic number: this.leftAdjustmentPanel.Size = new System.Drawing.Size(10' 355);
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,InitializeComponent,The following statement contains a magic number: this.leftAdjustmentPanel.Size = new System.Drawing.Size(10' 355);
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,InitializeComponent,The following statement contains a magic number: this.leftAdjustmentPanel.TabIndex = 2;
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(527' 436);
Magic Number,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(527' 436);
Magic Number,MPTagThat.GridView,GridViewColumnsBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewColumnsBurn.cs,GridViewColumnsBurn,The following statement contains a magic number: _status = new GridViewColumn("Status"' "process"' 100' true' true' false' true);
Magic Number,MPTagThat.GridView,GridViewColumnsBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewColumnsBurn.cs,GridViewColumnsBurn,The following statement contains a magic number: _track = new GridViewColumn("Track"' "text"' 40' true' false' true' false);
Magic Number,MPTagThat.GridView,GridViewColumnsBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewColumnsBurn.cs,GridViewColumnsBurn,The following statement contains a magic number: _artist = new GridViewColumn("Artist"' "text"' 150' true' false' true' false);
Magic Number,MPTagThat.GridView,GridViewColumnsBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewColumnsBurn.cs,GridViewColumnsBurn,The following statement contains a magic number: _title = new GridViewColumn("Title"' "text"' 250' true' false' true' false);
Magic Number,MPTagThat.GridView,GridViewColumnsBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewColumnsBurn.cs,GridViewColumnsBurn,The following statement contains a magic number: _duration = new GridViewColumn("Duration"' "text"' 100' true' true' true' false);
Magic Number,MPTagThat.GridView,GridViewColumnsBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewColumnsBurn.cs,GridViewColumnsBurn,The following statement contains a magic number: _filename = new GridViewColumn("FullFileName"' "text"' 350' true' false' true' false);
Magic Number,MPTagThat.GridView,GridViewColumnsConvert,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Conversion\GridViewColumnsConvert.cs,GridViewColumnsConvert,The following statement contains a magic number: _status = new GridViewColumn("Status"' "process"' 100' true' true' false' true);
Magic Number,MPTagThat.GridView,GridViewColumnsConvert,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Conversion\GridViewColumnsConvert.cs,GridViewColumnsConvert,The following statement contains a magic number: _filename = new GridViewColumn("FileName"' "text"' 350' true' true' true' true);
Magic Number,MPTagThat.GridView,GridViewColumnsConvert,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Conversion\GridViewColumnsConvert.cs,GridViewColumnsConvert,The following statement contains a magic number: _newfilename = new GridViewColumn("NewFileName"' "text"' 350' true' true' true' true);
Magic Number,MPTagThat.GridView,GridViewConvert,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Conversion\GridViewConvert.cs,CreateColumns,The following statement contains a magic number: col.Width = 5;
Magic Number,MPTagThat.GridView,GridViewConvert,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Conversion\GridViewConvert.cs,InitializeComponent,The following statement contains a magic number: dataGridViewCellStyle1.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(215))))' ((int)(((byte)(225))))' ((int)(((byte)(245)))));
Magic Number,MPTagThat.GridView,GridViewConvert,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Conversion\GridViewConvert.cs,InitializeComponent,The following statement contains a magic number: dataGridViewCellStyle1.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(215))))' ((int)(((byte)(225))))' ((int)(((byte)(245)))));
Magic Number,MPTagThat.GridView,GridViewConvert,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Conversion\GridViewConvert.cs,InitializeComponent,The following statement contains a magic number: dataGridViewCellStyle1.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(215))))' ((int)(((byte)(225))))' ((int)(((byte)(245)))));
Magic Number,MPTagThat.GridView,GridViewConvert,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Conversion\GridViewConvert.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewConvert.Size = new System.Drawing.Size(540' 447);
Magic Number,MPTagThat.GridView,GridViewConvert,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Conversion\GridViewConvert.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewConvert.Size = new System.Drawing.Size(540' 447);
Magic Number,MPTagThat.GridView,GridViewConvert,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Conversion\GridViewConvert.cs,InitializeComponent,The following statement contains a magic number: this.leftAdjustmentPanel.Size = new System.Drawing.Size(10' 447);
Magic Number,MPTagThat.GridView,GridViewConvert,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Conversion\GridViewConvert.cs,InitializeComponent,The following statement contains a magic number: this.leftAdjustmentPanel.Size = new System.Drawing.Size(10' 447);
Magic Number,MPTagThat.GridView,GridViewConvert,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Conversion\GridViewConvert.cs,InitializeComponent,The following statement contains a magic number: this.leftAdjustmentPanel.TabIndex = 2;
Magic Number,MPTagThat.GridView,GridViewConvert,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Conversion\GridViewConvert.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(540' 447);
Magic Number,MPTagThat.GridView,GridViewConvert,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Conversion\GridViewConvert.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(540' 447);
Magic Number,MPTagThat.GridView,FreeDBMultiCDSelect,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\FreeDBMultiCDSelect.cs,InitializeComponent,The following statement contains a magic number: this.lbMultipleMatches.Location = new System.Drawing.Point(23' 18);
Magic Number,MPTagThat.GridView,FreeDBMultiCDSelect,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\FreeDBMultiCDSelect.cs,InitializeComponent,The following statement contains a magic number: this.lbMultipleMatches.Location = new System.Drawing.Point(23' 18);
Magic Number,MPTagThat.GridView,FreeDBMultiCDSelect,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\FreeDBMultiCDSelect.cs,InitializeComponent,The following statement contains a magic number: this.lbMultipleMatches.Size = new System.Drawing.Size(297' 13);
Magic Number,MPTagThat.GridView,FreeDBMultiCDSelect,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\FreeDBMultiCDSelect.cs,InitializeComponent,The following statement contains a magic number: this.lbMultipleMatches.Size = new System.Drawing.Size(297' 13);
Magic Number,MPTagThat.GridView,FreeDBMultiCDSelect,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\FreeDBMultiCDSelect.cs,InitializeComponent,The following statement contains a magic number: this.listBoxCDMatches.Location = new System.Drawing.Point(26' 43);
Magic Number,MPTagThat.GridView,FreeDBMultiCDSelect,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\FreeDBMultiCDSelect.cs,InitializeComponent,The following statement contains a magic number: this.listBoxCDMatches.Location = new System.Drawing.Point(26' 43);
Magic Number,MPTagThat.GridView,FreeDBMultiCDSelect,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\FreeDBMultiCDSelect.cs,InitializeComponent,The following statement contains a magic number: this.listBoxCDMatches.Size = new System.Drawing.Size(519' 251);
Magic Number,MPTagThat.GridView,FreeDBMultiCDSelect,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\FreeDBMultiCDSelect.cs,InitializeComponent,The following statement contains a magic number: this.listBoxCDMatches.Size = new System.Drawing.Size(519' 251);
Magic Number,MPTagThat.GridView,FreeDBMultiCDSelect,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\FreeDBMultiCDSelect.cs,InitializeComponent,The following statement contains a magic number: this.buttonOK.Location = new System.Drawing.Point(389' 309);
Magic Number,MPTagThat.GridView,FreeDBMultiCDSelect,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\FreeDBMultiCDSelect.cs,InitializeComponent,The following statement contains a magic number: this.buttonOK.Location = new System.Drawing.Point(389' 309);
Magic Number,MPTagThat.GridView,FreeDBMultiCDSelect,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\FreeDBMultiCDSelect.cs,InitializeComponent,The following statement contains a magic number: this.buttonOK.Size = new System.Drawing.Size(75' 23);
Magic Number,MPTagThat.GridView,FreeDBMultiCDSelect,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\FreeDBMultiCDSelect.cs,InitializeComponent,The following statement contains a magic number: this.buttonOK.Size = new System.Drawing.Size(75' 23);
Magic Number,MPTagThat.GridView,FreeDBMultiCDSelect,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\FreeDBMultiCDSelect.cs,InitializeComponent,The following statement contains a magic number: this.buttonOK.TabIndex = 2;
Magic Number,MPTagThat.GridView,FreeDBMultiCDSelect,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\FreeDBMultiCDSelect.cs,InitializeComponent,The following statement contains a magic number: this.buttonCancel.Location = new System.Drawing.Point(470' 309);
Magic Number,MPTagThat.GridView,FreeDBMultiCDSelect,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\FreeDBMultiCDSelect.cs,InitializeComponent,The following statement contains a magic number: this.buttonCancel.Location = new System.Drawing.Point(470' 309);
Magic Number,MPTagThat.GridView,FreeDBMultiCDSelect,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\FreeDBMultiCDSelect.cs,InitializeComponent,The following statement contains a magic number: this.buttonCancel.Size = new System.Drawing.Size(75' 23);
Magic Number,MPTagThat.GridView,FreeDBMultiCDSelect,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\FreeDBMultiCDSelect.cs,InitializeComponent,The following statement contains a magic number: this.buttonCancel.Size = new System.Drawing.Size(75' 23);
Magic Number,MPTagThat.GridView,FreeDBMultiCDSelect,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\FreeDBMultiCDSelect.cs,InitializeComponent,The following statement contains a magic number: this.buttonCancel.TabIndex = 3;
Magic Number,MPTagThat.GridView,FreeDBMultiCDSelect,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\FreeDBMultiCDSelect.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(568' 347);
Magic Number,MPTagThat.GridView,FreeDBMultiCDSelect,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\FreeDBMultiCDSelect.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(568' 347);
Magic Number,MPTagThat.GridView,GridViewColumnsRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewColumnsRip.cs,GridViewColumnsRip,The following statement contains a magic number: _check = new GridViewColumn(" "' "check"' 40' true' false' false' true);
Magic Number,MPTagThat.GridView,GridViewColumnsRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewColumnsRip.cs,GridViewColumnsRip,The following statement contains a magic number: _status = new GridViewColumn("Status"' "process"' 100' true' true' false' true);
Magic Number,MPTagThat.GridView,GridViewColumnsRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewColumnsRip.cs,GridViewColumnsRip,The following statement contains a magic number: _track = new GridViewColumn("Track"' "text"' 40' true' true' true' false);
Magic Number,MPTagThat.GridView,GridViewColumnsRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewColumnsRip.cs,GridViewColumnsRip,The following statement contains a magic number: _artist = new GridViewColumn("Artist"' "text"' 150' true' true' true' false);
Magic Number,MPTagThat.GridView,GridViewColumnsRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewColumnsRip.cs,GridViewColumnsRip,The following statement contains a magic number: _title = new GridViewColumn("Title"' "text"' 250' true' true' true' false);
Magic Number,MPTagThat.GridView,GridViewColumnsRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewColumnsRip.cs,GridViewColumnsRip,The following statement contains a magic number: _duration = new GridViewColumn("Duration"' "text"' 100' true' true' true' false);
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,RippingThread,The following statement contains a magic number: try        {          _musicDir = _main.RipOutputDirectory;            if (_main.RipEncoderCombo.SelectedItem != null)          {            encoder = (string)(_main.RipEncoderCombo.SelectedItem as Item).Value;            Options.MainSettings.RipEncoder = encoder;          }          else          {            encoder = Options.MainSettings.RipEncoder;          }            if (encoder == null)            return;            log.Debug("Rip: Using Encoder: {0}"' encoder);            try          {            if (!Directory.Exists(_musicDir) && !string.IsNullOrEmpty(_musicDir))              Directory.CreateDirectory(_musicDir);          }          catch (Exception ex)          {            SetStatusLabel(localisation.ToString("Conversion"' "ErrorDirectory"));            log.Error("Error creating Ripping directory: {0}. {1}"' _musicDir' ex.Message);            return;          }            // Build the Target Directory          string artistDir = tbAlbumArtist.Text == string.Empty ? "Artist" : tbAlbumArtist.Text;          string albumDir = tbAlbum.Text == string.Empty ? "Album" : tbAlbum.Text;            string outFileFormat = Options.MainSettings.RipFileNameFormat;          int index = outFileFormat.LastIndexOf('\\');          if (index > -1)          {            targetDir = outFileFormat.Substring(0' index);            targetDir = targetDir.Replace("<A>"' artistDir);            targetDir = targetDir.Replace("<O>"' artistDir);            targetDir = targetDir.Replace("<B>"' albumDir);            targetDir = targetDir.Replace("<G>"' tbGenre.Text);            targetDir = targetDir.Replace("<Y>"' tbYear.Text);            outFileFormat = outFileFormat.Substring(index + 1);          }          else          {            targetDir = string.Format(@"{0}\{1}"' artistDir' albumDir);          }            targetDir = Util.MakeValidFolderName(targetDir);            targetDir = string.Format(@"{0}\{1}"' _musicDir' targetDir);            log.Debug("Rip: Using Target Folder: {0}"' targetDir);            try          {            if (!Directory.Exists(targetDir))              Directory.CreateDirectory(targetDir);          }          catch (Exception ex)          {            SetStatusLabel(localisation.ToString("Conversion"' "ErrorDirectory"));            log.Error("Error creating Ripping directory: {0}. {1}"' targetDir' ex.Message);            return;          }            log.Debug("Rip: Selected CD Drive: {0}"' _selectedCDRomDrive);            int selectedDriveID = 0;          try          {            // User may change to a different drive while ripping             selectedDriveID = CurrentDriveID;            log.Debug("Rip: Selected drive id: {0}"' selectedDriveID);          }          catch (Exception)          {            log.Debug("Rip: Error setting the drive id. Fallback to drive #0");            selectedDriveID = 0;          }            // Lock the Door          BassCd.BASS_CD_Door(CurrentDriveID' BASSCDDoor.BASS_CD_DOOR_LOCK);            foreach (DataGridViewRow row in dataGridViewRip.Rows)          {            // Reset the Status field to 0            row.Cells[1].Value = 0;          }            _currentRow = -1;          foreach (DataGridViewRow row in dataGridViewRip.Rows)          {            // when checking and unchecking a row' we have the DBNull value            if (row.Cells[0].Value == null || row.Cells[0].Value == DBNull.Value)              continue;              if ((int)row.Cells[0].Value == 0)              continue;              SetStatusLabel(localisation.ToString("Conversion"' "Ripping"));              _currentRow = row.Index;              CDTrackDetail track = bindingList[selectedDriveID][_currentRow];              int stream = BassCd.BASS_CD_StreamCreate(selectedDriveID' row.Index' BASSFlag.BASS_STREAM_DECODE);            if (stream == 0)            {              log.Error("Error creating stream for Audio Track {0}. Error: {1}"' _currentRow'                        Enum.GetName(typeof(BASSError)' Bass.BASS_ErrorGetCode()));              continue;            }              log.Info("Ripping Audio CD Track{0} - {1}"' row.Index + 1' track.Title);            _outFile = outFileFormat;            _outFile = _outFile.Replace("<O>"' artistDir);            _outFile = _outFile.Replace("<B>"' albumDir);            _outFile = _outFile.Replace("<G>"' tbGenre.Text);            _outFile = _outFile.Replace("<Y>"' tbYear.Text);            _outFile = _outFile.Replace("<A>"' track.Artist);            _outFile = _outFile.Replace("<K>"' track.Track.ToString().PadLeft(Options.MainSettings.NumberTrackDigits' '0'));            _outFile = _outFile.Replace("<T>"' track.Title);            _outFile = Util.MakeValidFileName(_outFile);              _outFile = string.Format(@"{0}\{1}"' targetDir' _outFile);              _outFile = audioEncoder.SetEncoder(encoder' _outFile);              if (audioEncoder.StartEncoding(stream' row.Index) != BASSError.BASS_OK)            {              log.Error("Error starting Encoder for Audio Track {0}. Error: {1}"' _currentRow'                        Enum.GetName(typeof(BASSError)' Bass.BASS_ErrorGetCode()));            }              dataGridViewRip.Rows[_currentRow].Cells[1].Value = 100;              Bass.BASS_StreamFree(stream);            log.Info("Finished Ripping Audio CD Track{0}"' _currentRow + 1);              try            {              // Now Tag the encoded File              File file = File.Create(_outFile);              file.Tag.AlbumArtists = new[] { tbAlbumArtist.Text };              file.Tag.Album = tbAlbum.Text;              file.Tag.Genres = new[] { tbGenre.Text };              file.Tag.Year = tbYear.Text == string.Empty ? 0 : Convert.ToUInt32(tbYear.Text);              file.Tag.Performers = new[] { track.Artist };              file.Tag.Track = (uint)track.Track;              file.Tag.Title = track.Title;              file = Util.FormatID3Tag(file);              file.Save();            }            catch (Exception ex)            {              log.Error("Error tagging encoded file {0}. Error: {1}"' _outFile' ex.Message);            }          }        }        catch (Exception ex)        {          log.Error("Rip: Exception: {0} {1}"' ex.Message' ex.StackTrace);        }
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,QueryFreeDB,The following statement contains a magic number: if (MusicCD != null)        {          tbAlbumArtist.Text = MusicCD.Artist;          tbAlbum.Text = MusicCD.Title;          tbGenre.Text = MusicCD.Genre;          tbYear.Text = MusicCD.Year.ToString();            foreach (CDTrackDetail trackDetail in MusicCD.Tracks)          {            if (trackDetail.Artist == null)              trackDetail.Artist = MusicCD.Artist;              bindingList[driveID].Add(trackDetail);          }        }        else        {          int numTracks = BassCd.BASS_CD_GetTracks(driveID);          for (int i = 0; i < numTracks; i++)          {            CDTrackDetail trackDetail = new CDTrackDetail();            trackDetail.Track = i + 1;            trackDetail.Title = string.Format("Track{0}"' (i + 1).ToString().PadLeft(2' '0'));            bindingList[driveID].Add(trackDetail);          }        }
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,CreateColumns,The following statement contains a magic number: col.Width = 5;
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.panelTop.Size = new System.Drawing.Size(800' 81);
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.panelTop.Size = new System.Drawing.Size(800' 81);
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.lbRippingStatus.Location = new System.Drawing.Point(6' 58);
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.lbRippingStatus.Location = new System.Drawing.Point(6' 58);
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.lbRippingStatus.Size = new System.Drawing.Size(79' 20);
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.lbRippingStatus.Size = new System.Drawing.Size(79' 20);
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.lbRippingStatus.TabIndex = 8;
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.tbYear.Location = new System.Drawing.Point(494' 28);
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.tbYear.Location = new System.Drawing.Point(494' 28);
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.tbYear.Size = new System.Drawing.Size(92' 20);
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.tbYear.Size = new System.Drawing.Size(92' 20);
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.tbYear.TabIndex = 7;
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.tbGenre.Location = new System.Drawing.Point(494' 4);
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.tbGenre.Location = new System.Drawing.Point(494' 4);
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.tbGenre.Size = new System.Drawing.Size(201' 20);
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.tbGenre.Size = new System.Drawing.Size(201' 20);
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.tbGenre.TabIndex = 6;
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.lbYear.Location = new System.Drawing.Point(386' 29);
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.lbYear.Location = new System.Drawing.Point(386' 29);
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.lbYear.Size = new System.Drawing.Size(47' 20);
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.lbYear.Size = new System.Drawing.Size(47' 20);
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.lbYear.TabIndex = 5;
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.lbGenre.Location = new System.Drawing.Point(386' 4);
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.lbGenre.Location = new System.Drawing.Point(386' 4);
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.lbGenre.Size = new System.Drawing.Size(58' 20);
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.lbGenre.Size = new System.Drawing.Size(58' 20);
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.lbGenre.TabIndex = 4;
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.tbAlbum.Location = new System.Drawing.Point(116' 28);
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.tbAlbum.Location = new System.Drawing.Point(116' 28);
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.tbAlbum.Size = new System.Drawing.Size(201' 20);
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.tbAlbum.Size = new System.Drawing.Size(201' 20);
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.tbAlbum.TabIndex = 3;
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.tbAlbumArtist.Location = new System.Drawing.Point(116' 4);
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.tbAlbumArtist.Location = new System.Drawing.Point(116' 4);
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.tbAlbumArtist.Size = new System.Drawing.Size(201' 20);
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.tbAlbumArtist.Size = new System.Drawing.Size(201' 20);
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.tbAlbumArtist.TabIndex = 2;
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.lbAlbum.Location = new System.Drawing.Point(8' 29);
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.lbAlbum.Location = new System.Drawing.Point(8' 29);
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.lbAlbum.Size = new System.Drawing.Size(58' 20);
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.lbAlbum.Size = new System.Drawing.Size(58' 20);
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.lbAlbumArtist.Location = new System.Drawing.Point(8' 4);
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.lbAlbumArtist.Location = new System.Drawing.Point(8' 4);
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.lbAlbumArtist.Size = new System.Drawing.Size(99' 20);
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.lbAlbumArtist.Size = new System.Drawing.Size(99' 20);
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.panelMiddle.Location = new System.Drawing.Point(0' 81);
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.panelMiddle.Size = new System.Drawing.Size(800' 300);
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.panelMiddle.Size = new System.Drawing.Size(800' 300);
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.panelMiddle.TabIndex = 2;
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: dataGridViewCellStyle1.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(215))))' ((int)(((byte)(225))))' ((int)(((byte)(245)))));
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: dataGridViewCellStyle1.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(215))))' ((int)(((byte)(225))))' ((int)(((byte)(245)))));
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: dataGridViewCellStyle1.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(215))))' ((int)(((byte)(225))))' ((int)(((byte)(245)))));
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewRip.Location = new System.Drawing.Point(10' 0);
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewRip.Size = new System.Drawing.Size(790' 300);
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewRip.Size = new System.Drawing.Size(790' 300);
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.leftAdjustmentPanel.Size = new System.Drawing.Size(10' 300);
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.leftAdjustmentPanel.Size = new System.Drawing.Size(10' 300);
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(800' 381);
Magic Number,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(800' 381);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _status = new GridViewColumn("Status"' "image"' 45' true' true' false' true);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _filename = new GridViewColumn("FileName"' "text"' 200' true' false' true' true);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _filepath = new GridViewColumn("FilePath"' "text"' 200' false' true' true' true);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _track = new GridViewColumn("Track"' "text"' 40' true' false' true' false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _artist = new GridViewColumn("Artist"' "text"' 150' true' false' true' false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _albumartist = new GridViewColumn("AlbumArtist"' "text"' 150' true' false' true' false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _album = new GridViewColumn("Album"' "text"' 150' true' false' true' false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _title = new GridViewColumn("Title"' "text"' 250' true' false' true' false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _year = new GridViewColumn("Year"' "number"' 40' true' false' true' false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _genre = new GridViewColumn("Genre"' "text"' 100' true' false' true' false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _creationtime = new GridViewColumn("CreationTime"' "text"' 100' true' true' true' false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _lastwritetime = new GridViewColumn("LastWriteTime"' "text"' 100' true' true' true' false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _tagtype = new GridViewColumn("TagType"' "text"' 100' true' true' true' false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _disc = new GridViewColumn("Disc"' "^text"' 45' true' false' true' false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _bpm = new GridViewColumn("BPM"' "number"' 40' true' false' true' false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _rating = new GridViewColumn("Rating"' "rating"' 90' true' false' true' false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _replayGainTrack = new GridViewColumn("ReplayGainTrack"' "text"' 100' true' true' true' false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _replayGainTrackPeak = new GridViewColumn("ReplayGainTrackPeak"' "text"' 100' true' true' true' false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _replayGainAlbum = new GridViewColumn("ReplayGainAlbum"' "text"' 100' true' true' true' false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _replayGainAlbumPeak = new GridViewColumn("ReplayGainAlbumPeak"' "text"' 100' true' true' true' false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _comment = new GridViewColumn("Comment"' "text"' 200' true' false' true' false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _composer = new GridViewColumn("Composer"' "text"' 150' true' false' true' false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _conductor = new GridViewColumn("Conductor"' "text"' 150' true' false' true' false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _numpics = new GridViewColumn("NumPics"' "number"' 40' true' false' true' false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _duration = new GridViewColumn("Duration"' "text"' 100' true' true' true' false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _filesize = new GridViewColumn("FileSize"' "text"' 80' true' true' true' false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _bitrate = new GridViewColumn("BitRate"' "text"' 50' true' true' true' false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _samplerate = new GridViewColumn("SampleRate"' "text"' 70' true' true' true' false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _channels = new GridViewColumn("Channels"' "text"' 40' true' true' true' false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _version = new GridViewColumn("Version"' "text"' 100' true' true' true' false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _artistSortName = new GridViewColumn("ArtistSortName"' "text"' 100' false' false' true' false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _albumSortName = new GridViewColumn("AlbumSortName"' "text"' 100' false' false' true' false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _commercialInformation = new GridViewColumn("CommercialInformation"' "text"' 100' false' false' true' false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _copyright = new GridViewColumn("Copyright"' "text"' 100' false' false' true' false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _copyrightInformation = new GridViewColumn("CopyrightInformation"' "text"' 100' false' false' true' false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _encodedBy = new GridViewColumn("EncodedBy"' "text"' 100' false' false' true' false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _interpreter = new GridViewColumn("Interpreter"' "text"' 100' false' false' true' false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _grouping = new GridViewColumn("Grouping"' "text"' 100' false' false' true' false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _lyrics = new GridViewColumn("Lyrics"' "text"' 100' false' false' true' false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _mediaType = new GridViewColumn("MediaType"' "text"' 100' false' false' true' false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _officialAudioFileInformation = new GridViewColumn("OfficialAudioFileInformation"' "text"' 100' false' false' true'                                                           false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _officialArtistInformation = new GridViewColumn("OfficialArtistInformation"' "text"' 100' false' false' true'                                                        false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _officialAudioSourceInformation = new GridViewColumn("OfficialAudioSourceInformation"' "text"' 100' false' false'                                                             true' false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _officialInternetRadioInformation = new GridViewColumn("OfficialInternetRadioInformation"' "text"' 100' false'                                                               false' true' false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _officialPaymentInformation = new GridViewColumn("OfficialPaymentInformation"' "text"' 100' false' false' true'                                                         false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _officialPublisherInformation = new GridViewColumn("OfficialPublisherInformation"' "text"' 100' false' false' true'                                                           false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _OriginalAlbum = new GridViewColumn("OriginalAlbum"' "text"' 100' false' false' true' false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _originalFileName = new GridViewColumn("OriginalFileName"' "text"' 100' false' false' true' false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _originalLyricsWriter = new GridViewColumn("OriginalLyricsWriter"' "text"' 100' false' false' true' false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _originalArtist = new GridViewColumn("OriginalArtist"' "text"' 100' false' false' true' false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _originalOwner = new GridViewColumn("OriginalOwner"' "text"' 100' false' false' true' false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _originalRelease = new GridViewColumn("OriginalRelease"' "text"' 100' false' false' true' false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _publisher = new GridViewColumn("Publisher"' "text"' 100' false' false' true' false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _subTitle = new GridViewColumn("SubTitle"' "text"' 100' false' false' true' false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _textWriter = new GridViewColumn("TextWriter"' "text"' 100' false' false' true' false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,GridViewColumns,The following statement contains a magic number: _titleSortName = new GridViewColumn("TitleSortName"' "text"' 100' false' false' true' false);
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,LoadSettings,The following statement contains a magic number: if (_settings.Columns.Count == 0)        {          // Setup the Default Columns to display on first use of the program          List<GridViewColumn> columnList = new List<GridViewColumn>();          columnList = SetDefaultColumns();          _settings.Columns.Clear();          foreach (GridViewColumn column in columnList)          {            _settings.Columns.Add(column);          }          ServiceScope.Get<ISettingsManager>().Save(_settings);        }        else        {          // Add / Reorder Columns that have been added after Release' so that the settings don't need to be deleted            // Reorder the Status field          if (_settings.Columns[0].Name != "Status")          {            // We still have an old setting with Status at position 1            _settings.Columns.RemoveAt(1);            _settings.Columns.Insert(0' _status);          }            if (_settings.Columns[0].Name == "Status" && _settings.Columns[0].Type != "image")          {            _settings.Columns[0].Type = "image";          }            // FilePath should be column index #2          if (_settings.Columns[2].Name != "FilePath")          {            _settings.Columns.Insert(2' _filepath);          }            // Replaygain Columns          if (_settings.Columns[17].Name != "ReplayGainTrack")          {            _settings.Columns.Insert(17' _replayGainTrack);            _settings.Columns.Insert(18' _replayGainTrackPeak);            _settings.Columns.Insert(19' _replayGainAlbum);            _settings.Columns.Insert(20' _replayGainAlbumPeak);          }          }
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,LoadSettings,The following statement contains a magic number: if (_settings.Columns.Count == 0)        {          // Setup the Default Columns to display on first use of the program          List<GridViewColumn> columnList = new List<GridViewColumn>();          columnList = SetDefaultColumns();          _settings.Columns.Clear();          foreach (GridViewColumn column in columnList)          {            _settings.Columns.Add(column);          }          ServiceScope.Get<ISettingsManager>().Save(_settings);        }        else        {          // Add / Reorder Columns that have been added after Release' so that the settings don't need to be deleted            // Reorder the Status field          if (_settings.Columns[0].Name != "Status")          {            // We still have an old setting with Status at position 1            _settings.Columns.RemoveAt(1);            _settings.Columns.Insert(0' _status);          }            if (_settings.Columns[0].Name == "Status" && _settings.Columns[0].Type != "image")          {            _settings.Columns[0].Type = "image";          }            // FilePath should be column index #2          if (_settings.Columns[2].Name != "FilePath")          {            _settings.Columns.Insert(2' _filepath);          }            // Replaygain Columns          if (_settings.Columns[17].Name != "ReplayGainTrack")          {            _settings.Columns.Insert(17' _replayGainTrack);            _settings.Columns.Insert(18' _replayGainTrackPeak);            _settings.Columns.Insert(19' _replayGainAlbum);            _settings.Columns.Insert(20' _replayGainAlbumPeak);          }          }
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,LoadSettings,The following statement contains a magic number: if (_settings.Columns.Count == 0)        {          // Setup the Default Columns to display on first use of the program          List<GridViewColumn> columnList = new List<GridViewColumn>();          columnList = SetDefaultColumns();          _settings.Columns.Clear();          foreach (GridViewColumn column in columnList)          {            _settings.Columns.Add(column);          }          ServiceScope.Get<ISettingsManager>().Save(_settings);        }        else        {          // Add / Reorder Columns that have been added after Release' so that the settings don't need to be deleted            // Reorder the Status field          if (_settings.Columns[0].Name != "Status")          {            // We still have an old setting with Status at position 1            _settings.Columns.RemoveAt(1);            _settings.Columns.Insert(0' _status);          }            if (_settings.Columns[0].Name == "Status" && _settings.Columns[0].Type != "image")          {            _settings.Columns[0].Type = "image";          }            // FilePath should be column index #2          if (_settings.Columns[2].Name != "FilePath")          {            _settings.Columns.Insert(2' _filepath);          }            // Replaygain Columns          if (_settings.Columns[17].Name != "ReplayGainTrack")          {            _settings.Columns.Insert(17' _replayGainTrack);            _settings.Columns.Insert(18' _replayGainTrackPeak);            _settings.Columns.Insert(19' _replayGainAlbum);            _settings.Columns.Insert(20' _replayGainAlbumPeak);          }          }
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,LoadSettings,The following statement contains a magic number: if (_settings.Columns.Count == 0)        {          // Setup the Default Columns to display on first use of the program          List<GridViewColumn> columnList = new List<GridViewColumn>();          columnList = SetDefaultColumns();          _settings.Columns.Clear();          foreach (GridViewColumn column in columnList)          {            _settings.Columns.Add(column);          }          ServiceScope.Get<ISettingsManager>().Save(_settings);        }        else        {          // Add / Reorder Columns that have been added after Release' so that the settings don't need to be deleted            // Reorder the Status field          if (_settings.Columns[0].Name != "Status")          {            // We still have an old setting with Status at position 1            _settings.Columns.RemoveAt(1);            _settings.Columns.Insert(0' _status);          }            if (_settings.Columns[0].Name == "Status" && _settings.Columns[0].Type != "image")          {            _settings.Columns[0].Type = "image";          }            // FilePath should be column index #2          if (_settings.Columns[2].Name != "FilePath")          {            _settings.Columns.Insert(2' _filepath);          }            // Replaygain Columns          if (_settings.Columns[17].Name != "ReplayGainTrack")          {            _settings.Columns.Insert(17' _replayGainTrack);            _settings.Columns.Insert(18' _replayGainTrackPeak);            _settings.Columns.Insert(19' _replayGainAlbum);            _settings.Columns.Insert(20' _replayGainAlbumPeak);          }          }
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,LoadSettings,The following statement contains a magic number: if (_settings.Columns.Count == 0)        {          // Setup the Default Columns to display on first use of the program          List<GridViewColumn> columnList = new List<GridViewColumn>();          columnList = SetDefaultColumns();          _settings.Columns.Clear();          foreach (GridViewColumn column in columnList)          {            _settings.Columns.Add(column);          }          ServiceScope.Get<ISettingsManager>().Save(_settings);        }        else        {          // Add / Reorder Columns that have been added after Release' so that the settings don't need to be deleted            // Reorder the Status field          if (_settings.Columns[0].Name != "Status")          {            // We still have an old setting with Status at position 1            _settings.Columns.RemoveAt(1);            _settings.Columns.Insert(0' _status);          }            if (_settings.Columns[0].Name == "Status" && _settings.Columns[0].Type != "image")          {            _settings.Columns[0].Type = "image";          }            // FilePath should be column index #2          if (_settings.Columns[2].Name != "FilePath")          {            _settings.Columns.Insert(2' _filepath);          }            // Replaygain Columns          if (_settings.Columns[17].Name != "ReplayGainTrack")          {            _settings.Columns.Insert(17' _replayGainTrack);            _settings.Columns.Insert(18' _replayGainTrackPeak);            _settings.Columns.Insert(19' _replayGainAlbum);            _settings.Columns.Insert(20' _replayGainAlbumPeak);          }          }
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,LoadSettings,The following statement contains a magic number: if (_settings.Columns.Count == 0)        {          // Setup the Default Columns to display on first use of the program          List<GridViewColumn> columnList = new List<GridViewColumn>();          columnList = SetDefaultColumns();          _settings.Columns.Clear();          foreach (GridViewColumn column in columnList)          {            _settings.Columns.Add(column);          }          ServiceScope.Get<ISettingsManager>().Save(_settings);        }        else        {          // Add / Reorder Columns that have been added after Release' so that the settings don't need to be deleted            // Reorder the Status field          if (_settings.Columns[0].Name != "Status")          {            // We still have an old setting with Status at position 1            _settings.Columns.RemoveAt(1);            _settings.Columns.Insert(0' _status);          }            if (_settings.Columns[0].Name == "Status" && _settings.Columns[0].Type != "image")          {            _settings.Columns[0].Type = "image";          }            // FilePath should be column index #2          if (_settings.Columns[2].Name != "FilePath")          {            _settings.Columns.Insert(2' _filepath);          }            // Replaygain Columns          if (_settings.Columns[17].Name != "ReplayGainTrack")          {            _settings.Columns.Insert(17' _replayGainTrack);            _settings.Columns.Insert(18' _replayGainTrackPeak);            _settings.Columns.Insert(19' _replayGainAlbum);            _settings.Columns.Insert(20' _replayGainAlbumPeak);          }          }
Magic Number,MPTagThat.GridView,GridViewColumns,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewColumns.cs,LoadSettings,The following statement contains a magic number: if (_settings.Columns.Count == 0)        {          // Setup the Default Columns to display on first use of the program          List<GridViewColumn> columnList = new List<GridViewColumn>();          columnList = SetDefaultColumns();          _settings.Columns.Clear();          foreach (GridViewColumn column in columnList)          {            _settings.Columns.Add(column);          }          ServiceScope.Get<ISettingsManager>().Save(_settings);        }        else        {          // Add / Reorder Columns that have been added after Release' so that the settings don't need to be deleted            // Reorder the Status field          if (_settings.Columns[0].Name != "Status")          {            // We still have an old setting with Status at position 1            _settings.Columns.RemoveAt(1);            _settings.Columns.Insert(0' _status);          }            if (_settings.Columns[0].Name == "Status" && _settings.Columns[0].Type != "image")          {            _settings.Columns[0].Type = "image";          }            // FilePath should be column index #2          if (_settings.Columns[2].Name != "FilePath")          {            _settings.Columns.Insert(2' _filepath);          }            // Replaygain Columns          if (_settings.Columns[17].Name != "ReplayGainTrack")          {            _settings.Columns.Insert(17' _replayGainTrack);            _settings.Columns.Insert(18' _replayGainTrackPeak);            _settings.Columns.Insert(19' _replayGainAlbum);            _settings.Columns.Insert(20' _replayGainAlbumPeak);          }          }
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,ExecuteCommandThread,The following statement contains a magic number: foreach (DataGridViewRow row in tracksGrid.Rows)        {          ClearStatusColumn(row.Index);            if (!row.Selected && command != "SaveAll")          {            continue;          }            count++;          try          {            Application.DoEvents();              if (command != "SaveAll" || commandParm == "true")            {              _main.progressBar1.Value += 1;              if (_progressCancelled)              {                commandObj.ProgressCancelled = true;                ResetProgressBar();                return;              }            }              TrackData track = Options.Songlist[row.Index];            if (command == "SaveAll")            {              track.Status = -1;            }              if (commandObj.Execute(ref track' row.Index))            {              SetBackgroundColorChanged(row.Index);              track.Changed = true;              Options.Songlist[row.Index] = track;              _itemsChanged = true;            }            if (commandObj.ProgressCancelled)            {              break;            }          }          catch (Exception ex)          {            Options.Songlist[row.Index].Status = 2;            AddErrorMessage(row' ex.Message);          }        }
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,DeleteTracks,The following statement contains a magic number: for (int i = tracksGrid.Rows.Count - 1; i >= 0; i--)        {          DataGridViewRow row = tracksGrid.Rows[i];          if (!row.Selected)          {            continue;          }            TrackData track = Options.Songlist[row.Index];          try          {            FileSystem.DeleteFile(track.FullFileName' UIOption.OnlyErrorDialogs' RecycleOption.SendToRecycleBin'                                  UICancelOption.ThrowException);              // Remove the file from the binding list            Options.Songlist.RemoveAt(row.Index);          }          catch (OperationCanceledException) // User pressed No on delete. Do nothing          { }          catch (Exception ex)          {            log.Error("Error deleting file: {0} Exception: {1}"' track.FullFileName' ex.Message);            Options.Songlist[row.Index].Status = 2;            AddErrorMessage(row' ex.Message);          }        }
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,SetGridRowColors,The following statement contains a magic number: if (index % 2 == 0)        {          tracksGrid.Rows[index].DefaultCellStyle.BackColor =            ServiceScope.Get<IThemeManager>().CurrentTheme.DefaultBackColor;       }        else        {          tracksGrid.Rows[index].DefaultCellStyle.BackColor =            ServiceScope.Get<IThemeManager>().CurrentTheme.AlternatingRowBackColor;        }
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,SetColorMP3Errors,The following statement contains a magic number: if (error == Util.MP3Error.Fixed)        {          Options.Songlist[index].Status = 4;        }
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,FolderScan,The following statement contains a magic number: _main.progressBar1.MarqueeAnimationSpeed = 10;
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,FolderScan,The following statement contains a magic number: try        {          foreach (FileInfo fi in GetFiles(new DirectoryInfo(selectedFolder)' _main.TreeView.ScanFolderRecursive))          {            Application.DoEvents();              if (_progressCancelled)            {              break;            }            try            {              if (Util.IsAudio(fi.FullName))              {                Util.SendProgress(string.Format("Reading file {0}"' fi.FullName));                log.Trace("Retrieving file: {0}"' fi.FullName);                // Read the Tag                TrackData track = Track.Create(fi.FullName);                if (track != null)                {                  if (ApplyTagFilter(track))                  {                    AddTrack(track);                    tracksGrid.Rows.Add(); // Add a row to the grid. Virtualmode will handle the filling of cells                    count++;                  }                }              }              else              {                _nonMusicFiles.Add(fi);                nonMusicCount++;              }            }            catch (PathTooLongException)            {              log.Warn("FolderScan: Ignoring track {0} - path too long!"' fi.FullName);              continue;            }            catch (System.UnauthorizedAccessException exUna)            {              log.Warn("Could not access file or folder: {0}. {1}"' exUna.Message' fi.FullName);            }            catch (Exception ex)            {              log.Error("Caugth error processing files: {0} {1}"' ex.Message' fi.FullName);            }              if (count > 20)            {              tracksGrid.Show();              tracksGrid.ResumeLayout();            }              _main.ToolStripStatusScan.Text = string.Format(localisation.ToString("main"' "toolStripLabelScan")' count);          }        }        catch (OutOfMemoryException)        {          GC.Collect();          MessageBox.Show(localisation.ToString("message"' "OutOfMemory")' localisation.ToString("message"' "Error_Title")'                          MessageBoxButtons.OK);          log.Error("Folderscan: Running out of memory. Scanning aborted.");        }        finally        {          tracksGrid.Show();          tracksGrid.ResumeLayout();        }
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,CreateQuery,The following statement contains a magic number: switch (searchString[0])        {          case "artist":            query = FormatMultipleEntries(searchString[1]' "Artist");            orderBy = "Album'Track";            if (searchString.GetLength(0) > 2)            {              query += $" AND Album:\"{Util.EscapeDatabaseQuery(searchString[2])}\"";              orderBy = "Track";            }            break;            case "albumartist":            query = FormatMultipleEntries(searchString[1]' "AlbumArtist");            orderBy = "Album'Track";            if (searchString.GetLength(0) > 2)            {              query += $" AND Album:\"{Util.EscapeDatabaseQuery(searchString[2])}\"";              orderBy = "Track";            }            break;            case "genre":            query = FormatMultipleEntries(searchString[1]' "Genre");            //orderByClause = "strArtist' strAlbum' iTrack";            orderBy = "Artist'Album'Track";            if (searchString.GetLength(0) > 2)            {              query += " AND ";              query += FormatMultipleEntries(searchString[2]' "Artist");              orderBy = "Album'Track";            }            if (searchString.GetLength(0) > 3)            {              query += $" AND Album:\"{Util.EscapeDatabaseQuery(searchString[3])}\"";              orderBy = "Album'Track";            }            break;        }
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,CreateQuery,The following statement contains a magic number: switch (searchString[0])        {          case "artist":            query = FormatMultipleEntries(searchString[1]' "Artist");            orderBy = "Album'Track";            if (searchString.GetLength(0) > 2)            {              query += $" AND Album:\"{Util.EscapeDatabaseQuery(searchString[2])}\"";              orderBy = "Track";            }            break;            case "albumartist":            query = FormatMultipleEntries(searchString[1]' "AlbumArtist");            orderBy = "Album'Track";            if (searchString.GetLength(0) > 2)            {              query += $" AND Album:\"{Util.EscapeDatabaseQuery(searchString[2])}\"";              orderBy = "Track";            }            break;            case "genre":            query = FormatMultipleEntries(searchString[1]' "Genre");            //orderByClause = "strArtist' strAlbum' iTrack";            orderBy = "Artist'Album'Track";            if (searchString.GetLength(0) > 2)            {              query += " AND ";              query += FormatMultipleEntries(searchString[2]' "Artist");              orderBy = "Album'Track";            }            if (searchString.GetLength(0) > 3)            {              query += $" AND Album:\"{Util.EscapeDatabaseQuery(searchString[3])}\"";              orderBy = "Album'Track";            }            break;        }
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,CreateQuery,The following statement contains a magic number: switch (searchString[0])        {          case "artist":            query = FormatMultipleEntries(searchString[1]' "Artist");            orderBy = "Album'Track";            if (searchString.GetLength(0) > 2)            {              query += $" AND Album:\"{Util.EscapeDatabaseQuery(searchString[2])}\"";              orderBy = "Track";            }            break;            case "albumartist":            query = FormatMultipleEntries(searchString[1]' "AlbumArtist");            orderBy = "Album'Track";            if (searchString.GetLength(0) > 2)            {              query += $" AND Album:\"{Util.EscapeDatabaseQuery(searchString[2])}\"";              orderBy = "Track";            }            break;            case "genre":            query = FormatMultipleEntries(searchString[1]' "Genre");            //orderByClause = "strArtist' strAlbum' iTrack";            orderBy = "Artist'Album'Track";            if (searchString.GetLength(0) > 2)            {              query += " AND ";              query += FormatMultipleEntries(searchString[2]' "Artist");              orderBy = "Album'Track";            }            if (searchString.GetLength(0) > 3)            {              query += $" AND Album:\"{Util.EscapeDatabaseQuery(searchString[3])}\"";              orderBy = "Album'Track";            }            break;        }
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,CreateQuery,The following statement contains a magic number: switch (searchString[0])        {          case "artist":            query = FormatMultipleEntries(searchString[1]' "Artist");            orderBy = "Album'Track";            if (searchString.GetLength(0) > 2)            {              query += $" AND Album:\"{Util.EscapeDatabaseQuery(searchString[2])}\"";              orderBy = "Track";            }            break;            case "albumartist":            query = FormatMultipleEntries(searchString[1]' "AlbumArtist");            orderBy = "Album'Track";            if (searchString.GetLength(0) > 2)            {              query += $" AND Album:\"{Util.EscapeDatabaseQuery(searchString[2])}\"";              orderBy = "Track";            }            break;            case "genre":            query = FormatMultipleEntries(searchString[1]' "Genre");            //orderByClause = "strArtist' strAlbum' iTrack";            orderBy = "Artist'Album'Track";            if (searchString.GetLength(0) > 2)            {              query += " AND ";              query += FormatMultipleEntries(searchString[2]' "Artist");              orderBy = "Album'Track";            }            if (searchString.GetLength(0) > 3)            {              query += $" AND Album:\"{Util.EscapeDatabaseQuery(searchString[3])}\"";              orderBy = "Album'Track";            }            break;        }
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,CreateQuery,The following statement contains a magic number: switch (searchString[0])        {          case "artist":            query = FormatMultipleEntries(searchString[1]' "Artist");            orderBy = "Album'Track";            if (searchString.GetLength(0) > 2)            {              query += $" AND Album:\"{Util.EscapeDatabaseQuery(searchString[2])}\"";              orderBy = "Track";            }            break;            case "albumartist":            query = FormatMultipleEntries(searchString[1]' "AlbumArtist");            orderBy = "Album'Track";            if (searchString.GetLength(0) > 2)            {              query += $" AND Album:\"{Util.EscapeDatabaseQuery(searchString[2])}\"";              orderBy = "Track";            }            break;            case "genre":            query = FormatMultipleEntries(searchString[1]' "Genre");            //orderByClause = "strArtist' strAlbum' iTrack";            orderBy = "Artist'Album'Track";            if (searchString.GetLength(0) > 2)            {              query += " AND ";              query += FormatMultipleEntries(searchString[2]' "Artist");              orderBy = "Album'Track";            }            if (searchString.GetLength(0) > 3)            {              query += $" AND Album:\"{Util.EscapeDatabaseQuery(searchString[3])}\"";              orderBy = "Album'Track";            }            break;        }
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,CreateQuery,The following statement contains a magic number: switch (searchString[0])        {          case "artist":            query = FormatMultipleEntries(searchString[1]' "Artist");            orderBy = "Album'Track";            if (searchString.GetLength(0) > 2)            {              query += $" AND Album:\"{Util.EscapeDatabaseQuery(searchString[2])}\"";              orderBy = "Track";            }            break;            case "albumartist":            query = FormatMultipleEntries(searchString[1]' "AlbumArtist");            orderBy = "Album'Track";            if (searchString.GetLength(0) > 2)            {              query += $" AND Album:\"{Util.EscapeDatabaseQuery(searchString[2])}\"";              orderBy = "Track";            }            break;            case "genre":            query = FormatMultipleEntries(searchString[1]' "Genre");            //orderByClause = "strArtist' strAlbum' iTrack";            orderBy = "Artist'Album'Track";            if (searchString.GetLength(0) > 2)            {              query += " AND ";              query += FormatMultipleEntries(searchString[2]' "Artist");              orderBy = "Album'Track";            }            if (searchString.GetLength(0) > 3)            {              query += $" AND Album:\"{Util.EscapeDatabaseQuery(searchString[3])}\"";              orderBy = "Album'Track";            }            break;        }
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,CreateQuery,The following statement contains a magic number: switch (searchString[0])        {          case "artist":            query = FormatMultipleEntries(searchString[1]' "Artist");            orderBy = "Album'Track";            if (searchString.GetLength(0) > 2)            {              query += $" AND Album:\"{Util.EscapeDatabaseQuery(searchString[2])}\"";              orderBy = "Track";            }            break;            case "albumartist":            query = FormatMultipleEntries(searchString[1]' "AlbumArtist");            orderBy = "Album'Track";            if (searchString.GetLength(0) > 2)            {              query += $" AND Album:\"{Util.EscapeDatabaseQuery(searchString[2])}\"";              orderBy = "Track";            }            break;            case "genre":            query = FormatMultipleEntries(searchString[1]' "Genre");            //orderByClause = "strArtist' strAlbum' iTrack";            orderBy = "Artist'Album'Track";            if (searchString.GetLength(0) > 2)            {              query += " AND ";              query += FormatMultipleEntries(searchString[2]' "Artist");              orderBy = "Album'Track";            }            if (searchString.GetLength(0) > 3)            {              query += $" AND Album:\"{Util.EscapeDatabaseQuery(searchString[3])}\"";              orderBy = "Album'Track";            }            break;        }
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,CreateQuery,The following statement contains a magic number: switch (searchString[0])        {          case "artist":            query = FormatMultipleEntries(searchString[1]' "Artist");            orderBy = "Album'Track";            if (searchString.GetLength(0) > 2)            {              query += $" AND Album:\"{Util.EscapeDatabaseQuery(searchString[2])}\"";              orderBy = "Track";            }            break;            case "albumartist":            query = FormatMultipleEntries(searchString[1]' "AlbumArtist");            orderBy = "Album'Track";            if (searchString.GetLength(0) > 2)            {              query += $" AND Album:\"{Util.EscapeDatabaseQuery(searchString[2])}\"";              orderBy = "Track";            }            break;            case "genre":            query = FormatMultipleEntries(searchString[1]' "Genre");            //orderByClause = "strArtist' strAlbum' iTrack";            orderBy = "Artist'Album'Track";            if (searchString.GetLength(0) > 2)            {              query += " AND ";              query += FormatMultipleEntries(searchString[2]' "Artist");              orderBy = "Album'Track";            }            if (searchString.GetLength(0) > 3)            {              query += $" AND Album:\"{Util.EscapeDatabaseQuery(searchString[3])}\"";              orderBy = "Album'Track";            }            break;        }
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,LocaliseScreen,The following statement contains a magic number: contextMenu.Items[2].Text = localisation.ToString("contextmenu"' "Paste");
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,LocaliseScreen,The following statement contains a magic number: contextMenu.Items[3].Text = localisation.ToString("contextmenu"' "Delete");
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,LocaliseScreen,The following statement contains a magic number: contextMenu.Items[5].Text = localisation.ToString("contextmenu"' "SelectAll");
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,LocaliseScreen,The following statement contains a magic number: contextMenu.Items[7].Text = localisation.ToString("contextmenu"' "CoverLookup");
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,LocaliseScreen,The following statement contains a magic number: contextMenu.Items[8].Text = localisation.ToString("contextmenu"' "AddBurner");
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,LocaliseScreen,The following statement contains a magic number: contextMenu.Items[9].Text = localisation.ToString("contextmenu"' "AddConverter");
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,LocaliseScreen,The following statement contains a magic number: contextMenu.Items[10].Text = localisation.ToString("contextmenu"' "AddPlaylist");
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,LocaliseScreen,The following statement contains a magic number: contextMenu.Items[12].Text = localisation.ToString("contextmenu"' "SavePlaylist");
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,LocaliseScreen,The following statement contains a magic number: contextMenu.Items[13].Text = localisation.ToString("contextmenu"' "CreateFolderThumb");
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,CreateColumns,The following statement contains a magic number: col.Width = 5;
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,ShowForm,The following statement contains a magic number: int x = _main.ClientSize.Width / 2 - f.Width / 2;
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,ShowForm,The following statement contains a magic number: int x = _main.ClientSize.Width / 2 - f.Width / 2;
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,ShowForm,The following statement contains a magic number: int y = _main.ClientSize.Height / 2 - f.Height / 2;
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,ShowForm,The following statement contains a magic number: int y = _main.ClientSize.Height / 2 - f.Height / 2;
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,ChangeErrorRowColor,The following statement contains a magic number: foreach (DataGridViewRow row in tracksGrid.Rows)        {          TrackData track = Options.Songlist[row.Index];            if (track.MP3ValidationError == Util.MP3Error.NoError)          {            continue;          }            SetColorMP3Errors(row.Index' track.MP3ValidationError);          tracksGrid.Rows[row.Index].Cells[0].ToolTipText = track.MP3ValidationErrorText;          track.Status = 3;        }
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,SetProgressBar,The following statement contains a magic number: _main.progressBar1.Maximum = maxCount == 0 ? 100 : maxCount;
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,ApplyTagFilter,The following statement contains a magic number: foreach (TreeViewTagFilter tagfilter in filter)        {          switch (tagfilter.Field)          {            case "artist":              searchstring = track.Artist;              break;              case "albumartist":              searchstring = track.AlbumArtist;              break;              case "album":              searchstring = track.Album;              break;              case "title":              searchstring = track.Title;              break;              case "genre":              searchstring = track.Genre;              break;              case "comment":              searchstring = track.Comment;              break;              case "composer":              searchstring = track.Composer;              break;              case "conductor":              searchstring = track.Conductor;              break;              // Tags with are checked for existence or non-existence            case "picture":              searchstring = track.Pictures.Count > 0 ? "True" : "False";              break;              case "lyrics":              searchstring = track.Lyrics != null ? "True" : "False";              break;              // Numeric Tags            case "track":              numericCompare = true;              searchNumber = (int)track.TrackNumber;              break;              case "numtracks":              numericCompare = true;              searchNumber = (int)track.TrackCount;              break;              case "disc":              numericCompare = true;              searchNumber = (int)track.DiscNumber;              break;              case "numdiscs":              numericCompare = true;              searchNumber = (int)track.DiscCount;              break;              case "year":              numericCompare = true;              searchNumber = track.Year;              break;              case "rating":              numericCompare = true;              searchNumber = track.Rating;              break;              case "bpm":              numericCompare = true;              searchNumber = track.BPM;              break;              case "bitrate":              numericCompare = true;              searchNumber = Convert.ToInt16(track.BitRate);              break;              case "samplerate":              numericCompare = true;              searchNumber = Convert.ToInt16(track.SampleRate);              break;              case "channels":              numericCompare = true;              searchNumber = Convert.ToInt16(track.Channels);              break;          }            // Now check the filter value' if we have a negation          string searchValue = tagfilter.FilterValue;          bool negation = false;          if (searchValue.Length > 0 && searchValue[0] == '!')          {            searchValue = searchValue.Substring(1);            negation = true;          }            bool match = false;          if (numericCompare)          {            try            {              searchValue = searchValue.Trim();              if (searchValue == "")                searchValue = "0";                if (searchValue.StartsWith("<="))              {                searchValue = searchValue.Substring(2);                match = searchNumber <= Int32.Parse(searchValue);              }              else if (searchValue.StartsWith(">="))              {                searchValue = searchValue.Substring(2);                match = searchNumber >= Int32.Parse(searchValue);              }              else if (searchValue.StartsWith("<"))              {                searchValue = searchValue.Substring(1);                match = searchNumber < Int32.Parse(searchValue);              }              else if (searchValue.StartsWith(">"))              {                searchValue = searchValue.Substring(1);                match = searchNumber > Int32.Parse(searchValue);              }              else if (searchValue.StartsWith("="))              {                searchValue = searchValue.Substring(1);                match = searchNumber == Int32.Parse(searchValue);              }              else              {                match = searchNumber == Int32.Parse(searchValue);              }            }            catch (FormatException)            {              match = false;            }          }          else          {            match = Regex.IsMatch(searchstring' MakeRegexp(searchValue));          }            if (negation)          {            match = !match;          }            results.Insert(index' match);          index++;        }
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,ApplyTagFilter,The following statement contains a magic number: foreach (TreeViewTagFilter tagfilter in filter)        {          switch (tagfilter.Field)          {            case "artist":              searchstring = track.Artist;              break;              case "albumartist":              searchstring = track.AlbumArtist;              break;              case "album":              searchstring = track.Album;              break;              case "title":              searchstring = track.Title;              break;              case "genre":              searchstring = track.Genre;              break;              case "comment":              searchstring = track.Comment;              break;              case "composer":              searchstring = track.Composer;              break;              case "conductor":              searchstring = track.Conductor;              break;              // Tags with are checked for existence or non-existence            case "picture":              searchstring = track.Pictures.Count > 0 ? "True" : "False";              break;              case "lyrics":              searchstring = track.Lyrics != null ? "True" : "False";              break;              // Numeric Tags            case "track":              numericCompare = true;              searchNumber = (int)track.TrackNumber;              break;              case "numtracks":              numericCompare = true;              searchNumber = (int)track.TrackCount;              break;              case "disc":              numericCompare = true;              searchNumber = (int)track.DiscNumber;              break;              case "numdiscs":              numericCompare = true;              searchNumber = (int)track.DiscCount;              break;              case "year":              numericCompare = true;              searchNumber = track.Year;              break;              case "rating":              numericCompare = true;              searchNumber = track.Rating;              break;              case "bpm":              numericCompare = true;              searchNumber = track.BPM;              break;              case "bitrate":              numericCompare = true;              searchNumber = Convert.ToInt16(track.BitRate);              break;              case "samplerate":              numericCompare = true;              searchNumber = Convert.ToInt16(track.SampleRate);              break;              case "channels":              numericCompare = true;              searchNumber = Convert.ToInt16(track.Channels);              break;          }            // Now check the filter value' if we have a negation          string searchValue = tagfilter.FilterValue;          bool negation = false;          if (searchValue.Length > 0 && searchValue[0] == '!')          {            searchValue = searchValue.Substring(1);            negation = true;          }            bool match = false;          if (numericCompare)          {            try            {              searchValue = searchValue.Trim();              if (searchValue == "")                searchValue = "0";                if (searchValue.StartsWith("<="))              {                searchValue = searchValue.Substring(2);                match = searchNumber <= Int32.Parse(searchValue);              }              else if (searchValue.StartsWith(">="))              {                searchValue = searchValue.Substring(2);                match = searchNumber >= Int32.Parse(searchValue);              }              else if (searchValue.StartsWith("<"))              {                searchValue = searchValue.Substring(1);                match = searchNumber < Int32.Parse(searchValue);              }              else if (searchValue.StartsWith(">"))              {                searchValue = searchValue.Substring(1);                match = searchNumber > Int32.Parse(searchValue);              }              else if (searchValue.StartsWith("="))              {                searchValue = searchValue.Substring(1);                match = searchNumber == Int32.Parse(searchValue);              }              else              {                match = searchNumber == Int32.Parse(searchValue);              }            }            catch (FormatException)            {              match = false;            }          }          else          {            match = Regex.IsMatch(searchstring' MakeRegexp(searchValue));          }            if (negation)          {            match = !match;          }            results.Insert(index' match);          index++;        }
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,MakeRegexp,The following statement contains a magic number: if (searchValue.Substring(0' 2) == @"\*")        {          searchValue = ".*" + searchValue.Substring(2);        }        else        {          searchValue = "^" + searchValue;        }
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,MakeRegexp,The following statement contains a magic number: if (searchValue.Substring(0' 2) == @"\*")        {          searchValue = ".*" + searchValue.Substring(2);        }        else        {          searchValue = "^" + searchValue;        }
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,MakeRegexp,The following statement contains a magic number: if (searchValue.Substring(searchValue.Length - 2) == @"\*")        {          searchValue = searchValue.Substring(0' searchValue.Length - 2) + ".*";        }
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,MakeRegexp,The following statement contains a magic number: if (searchValue.Substring(searchValue.Length - 2) == @"\*")        {          searchValue = searchValue.Substring(0' searchValue.Length - 2) + ".*";        }
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,txtbox_KeyPress,The following statement contains a magic number: if (!Char.IsDigit(keyChar) // 0 - 9            &&            keyChar != 8 // backspace            &&            keyChar != 13 // enter            &&            keyChar != '/'          )        {          //  Do not display the keystroke          e.Handled = true;        }
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,txtbox_KeyPress,The following statement contains a magic number: if (!Char.IsDigit(keyChar) // 0 - 9            &&            keyChar != 8 // backspace            &&            keyChar != 13 // enter            &&            keyChar != '/'          )        {          //  Do not display the keystroke          e.Handled = true;        }
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,tracksGrid_CellPainting,The following statement contains a magic number: if ((e.ColumnIndex == _findResult.Column) && (e.RowIndex == _findResult.Row))        {          // Draw Merged Cell          Graphics g = e.Graphics;          bool selected = ((e.State & DataGridViewElementStates.Selected) == DataGridViewElementStates.Selected);          Color fcolor = (selected ? e.CellStyle.SelectionForeColor : e.CellStyle.ForeColor);          Color bcolor = (selected ? e.CellStyle.SelectionBackColor : e.CellStyle.BackColor);          Font font = e.CellStyle.Font;            // Split up the cell content into 3 pieces          string cellContent = e.Value == null ? "" : e.Value.ToString();            if (_findResult.StartPos + _findResult.Length > cellContent.Length)          {            return;          }            string[] results = new string[3];          results[0] = cellContent.Substring(0' _findResult.StartPos);          results[1] = cellContent.Substring(_findResult.StartPos' _findResult.Length);          results[2] = cellContent.Substring(_findResult.StartPos + _findResult.Length);            int x = e.CellBounds.Left + e.CellStyle.Padding.Left;          int y = e.CellBounds.Top + e.CellStyle.Padding.Top + 4;            for (int i = 0; i < 3; i++)          {            Size proposedSize = new Size(int.MaxValue' int.MaxValue);              int width;            Size size;            Color color;            Color backColor;            TextFormatFlags textFlags;            if (i == 0)            {              size = TextRenderer.MeasureText(e.Graphics' results[i]' font' proposedSize);              width = size.Width - e.CellStyle.Padding.Left;              color = fcolor;              backColor = bcolor;              textFlags = TextFormatFlags.PreserveGraphicsClipping | TextFormatFlags.EndEllipsis;            }            else if (i == 1)            {              size = TextRenderer.MeasureText(e.Graphics' results[i]' font' proposedSize' TextFormatFlags.NoPadding);              width = size.Width;              color = theme.CurrentTheme.FindReplaceForeColor;              backColor = theme.CurrentTheme.FindReplaceBackColor;              textFlags = TextFormatFlags.PreserveGraphicsClipping | TextFormatFlags.NoPadding;            }            else            {              size = TextRenderer.MeasureText(e.Graphics' results[i]' font' proposedSize);              width = size.Width - e.CellStyle.Padding.Right;              color = fcolor;              backColor = bcolor;              textFlags = TextFormatFlags.PreserveGraphicsClipping | TextFormatFlags.EndEllipsis;            }              int height = size.Height + (e.CellStyle.Padding.Top + e.CellStyle.Padding.Bottom);            Rectangle rect = new Rectangle(x' y - 4' width' e.CellBounds.Height - 2);            g.FillRectangle(new SolidBrush(backColor)' rect);            TextRenderer.DrawText(e.Graphics' results[i]' font' new Rectangle(x' y' width' height)' color'                                  textFlags);            x += width;          }            e.Handled = true;          return;        }
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,tracksGrid_CellPainting,The following statement contains a magic number: if ((e.ColumnIndex == _findResult.Column) && (e.RowIndex == _findResult.Row))        {          // Draw Merged Cell          Graphics g = e.Graphics;          bool selected = ((e.State & DataGridViewElementStates.Selected) == DataGridViewElementStates.Selected);          Color fcolor = (selected ? e.CellStyle.SelectionForeColor : e.CellStyle.ForeColor);          Color bcolor = (selected ? e.CellStyle.SelectionBackColor : e.CellStyle.BackColor);          Font font = e.CellStyle.Font;            // Split up the cell content into 3 pieces          string cellContent = e.Value == null ? "" : e.Value.ToString();            if (_findResult.StartPos + _findResult.Length > cellContent.Length)          {            return;          }            string[] results = new string[3];          results[0] = cellContent.Substring(0' _findResult.StartPos);          results[1] = cellContent.Substring(_findResult.StartPos' _findResult.Length);          results[2] = cellContent.Substring(_findResult.StartPos + _findResult.Length);            int x = e.CellBounds.Left + e.CellStyle.Padding.Left;          int y = e.CellBounds.Top + e.CellStyle.Padding.Top + 4;            for (int i = 0; i < 3; i++)          {            Size proposedSize = new Size(int.MaxValue' int.MaxValue);              int width;            Size size;            Color color;            Color backColor;            TextFormatFlags textFlags;            if (i == 0)            {              size = TextRenderer.MeasureText(e.Graphics' results[i]' font' proposedSize);              width = size.Width - e.CellStyle.Padding.Left;              color = fcolor;              backColor = bcolor;              textFlags = TextFormatFlags.PreserveGraphicsClipping | TextFormatFlags.EndEllipsis;            }            else if (i == 1)            {              size = TextRenderer.MeasureText(e.Graphics' results[i]' font' proposedSize' TextFormatFlags.NoPadding);              width = size.Width;              color = theme.CurrentTheme.FindReplaceForeColor;              backColor = theme.CurrentTheme.FindReplaceBackColor;              textFlags = TextFormatFlags.PreserveGraphicsClipping | TextFormatFlags.NoPadding;            }            else            {              size = TextRenderer.MeasureText(e.Graphics' results[i]' font' proposedSize);              width = size.Width - e.CellStyle.Padding.Right;              color = fcolor;              backColor = bcolor;              textFlags = TextFormatFlags.PreserveGraphicsClipping | TextFormatFlags.EndEllipsis;            }              int height = size.Height + (e.CellStyle.Padding.Top + e.CellStyle.Padding.Bottom);            Rectangle rect = new Rectangle(x' y - 4' width' e.CellBounds.Height - 2);            g.FillRectangle(new SolidBrush(backColor)' rect);            TextRenderer.DrawText(e.Graphics' results[i]' font' new Rectangle(x' y' width' height)' color'                                  textFlags);            x += width;          }            e.Handled = true;          return;        }
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,tracksGrid_CellPainting,The following statement contains a magic number: if ((e.ColumnIndex == _findResult.Column) && (e.RowIndex == _findResult.Row))        {          // Draw Merged Cell          Graphics g = e.Graphics;          bool selected = ((e.State & DataGridViewElementStates.Selected) == DataGridViewElementStates.Selected);          Color fcolor = (selected ? e.CellStyle.SelectionForeColor : e.CellStyle.ForeColor);          Color bcolor = (selected ? e.CellStyle.SelectionBackColor : e.CellStyle.BackColor);          Font font = e.CellStyle.Font;            // Split up the cell content into 3 pieces          string cellContent = e.Value == null ? "" : e.Value.ToString();            if (_findResult.StartPos + _findResult.Length > cellContent.Length)          {            return;          }            string[] results = new string[3];          results[0] = cellContent.Substring(0' _findResult.StartPos);          results[1] = cellContent.Substring(_findResult.StartPos' _findResult.Length);          results[2] = cellContent.Substring(_findResult.StartPos + _findResult.Length);            int x = e.CellBounds.Left + e.CellStyle.Padding.Left;          int y = e.CellBounds.Top + e.CellStyle.Padding.Top + 4;            for (int i = 0; i < 3; i++)          {            Size proposedSize = new Size(int.MaxValue' int.MaxValue);              int width;            Size size;            Color color;            Color backColor;            TextFormatFlags textFlags;            if (i == 0)            {              size = TextRenderer.MeasureText(e.Graphics' results[i]' font' proposedSize);              width = size.Width - e.CellStyle.Padding.Left;              color = fcolor;              backColor = bcolor;              textFlags = TextFormatFlags.PreserveGraphicsClipping | TextFormatFlags.EndEllipsis;            }            else if (i == 1)            {              size = TextRenderer.MeasureText(e.Graphics' results[i]' font' proposedSize' TextFormatFlags.NoPadding);              width = size.Width;              color = theme.CurrentTheme.FindReplaceForeColor;              backColor = theme.CurrentTheme.FindReplaceBackColor;              textFlags = TextFormatFlags.PreserveGraphicsClipping | TextFormatFlags.NoPadding;            }            else            {              size = TextRenderer.MeasureText(e.Graphics' results[i]' font' proposedSize);              width = size.Width - e.CellStyle.Padding.Right;              color = fcolor;              backColor = bcolor;              textFlags = TextFormatFlags.PreserveGraphicsClipping | TextFormatFlags.EndEllipsis;            }              int height = size.Height + (e.CellStyle.Padding.Top + e.CellStyle.Padding.Bottom);            Rectangle rect = new Rectangle(x' y - 4' width' e.CellBounds.Height - 2);            g.FillRectangle(new SolidBrush(backColor)' rect);            TextRenderer.DrawText(e.Graphics' results[i]' font' new Rectangle(x' y' width' height)' color'                                  textFlags);            x += width;          }            e.Handled = true;          return;        }
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,tracksGrid_CellPainting,The following statement contains a magic number: if ((e.ColumnIndex == _findResult.Column) && (e.RowIndex == _findResult.Row))        {          // Draw Merged Cell          Graphics g = e.Graphics;          bool selected = ((e.State & DataGridViewElementStates.Selected) == DataGridViewElementStates.Selected);          Color fcolor = (selected ? e.CellStyle.SelectionForeColor : e.CellStyle.ForeColor);          Color bcolor = (selected ? e.CellStyle.SelectionBackColor : e.CellStyle.BackColor);          Font font = e.CellStyle.Font;            // Split up the cell content into 3 pieces          string cellContent = e.Value == null ? "" : e.Value.ToString();            if (_findResult.StartPos + _findResult.Length > cellContent.Length)          {            return;          }            string[] results = new string[3];          results[0] = cellContent.Substring(0' _findResult.StartPos);          results[1] = cellContent.Substring(_findResult.StartPos' _findResult.Length);          results[2] = cellContent.Substring(_findResult.StartPos + _findResult.Length);            int x = e.CellBounds.Left + e.CellStyle.Padding.Left;          int y = e.CellBounds.Top + e.CellStyle.Padding.Top + 4;            for (int i = 0; i < 3; i++)          {            Size proposedSize = new Size(int.MaxValue' int.MaxValue);              int width;            Size size;            Color color;            Color backColor;            TextFormatFlags textFlags;            if (i == 0)            {              size = TextRenderer.MeasureText(e.Graphics' results[i]' font' proposedSize);              width = size.Width - e.CellStyle.Padding.Left;              color = fcolor;              backColor = bcolor;              textFlags = TextFormatFlags.PreserveGraphicsClipping | TextFormatFlags.EndEllipsis;            }            else if (i == 1)            {              size = TextRenderer.MeasureText(e.Graphics' results[i]' font' proposedSize' TextFormatFlags.NoPadding);              width = size.Width;              color = theme.CurrentTheme.FindReplaceForeColor;              backColor = theme.CurrentTheme.FindReplaceBackColor;              textFlags = TextFormatFlags.PreserveGraphicsClipping | TextFormatFlags.NoPadding;            }            else            {              size = TextRenderer.MeasureText(e.Graphics' results[i]' font' proposedSize);              width = size.Width - e.CellStyle.Padding.Right;              color = fcolor;              backColor = bcolor;              textFlags = TextFormatFlags.PreserveGraphicsClipping | TextFormatFlags.EndEllipsis;            }              int height = size.Height + (e.CellStyle.Padding.Top + e.CellStyle.Padding.Bottom);            Rectangle rect = new Rectangle(x' y - 4' width' e.CellBounds.Height - 2);            g.FillRectangle(new SolidBrush(backColor)' rect);            TextRenderer.DrawText(e.Graphics' results[i]' font' new Rectangle(x' y' width' height)' color'                                  textFlags);            x += width;          }            e.Handled = true;          return;        }
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,tracksGrid_CellPainting,The following statement contains a magic number: if ((e.ColumnIndex == _findResult.Column) && (e.RowIndex == _findResult.Row))        {          // Draw Merged Cell          Graphics g = e.Graphics;          bool selected = ((e.State & DataGridViewElementStates.Selected) == DataGridViewElementStates.Selected);          Color fcolor = (selected ? e.CellStyle.SelectionForeColor : e.CellStyle.ForeColor);          Color bcolor = (selected ? e.CellStyle.SelectionBackColor : e.CellStyle.BackColor);          Font font = e.CellStyle.Font;            // Split up the cell content into 3 pieces          string cellContent = e.Value == null ? "" : e.Value.ToString();            if (_findResult.StartPos + _findResult.Length > cellContent.Length)          {            return;          }            string[] results = new string[3];          results[0] = cellContent.Substring(0' _findResult.StartPos);          results[1] = cellContent.Substring(_findResult.StartPos' _findResult.Length);          results[2] = cellContent.Substring(_findResult.StartPos + _findResult.Length);            int x = e.CellBounds.Left + e.CellStyle.Padding.Left;          int y = e.CellBounds.Top + e.CellStyle.Padding.Top + 4;            for (int i = 0; i < 3; i++)          {            Size proposedSize = new Size(int.MaxValue' int.MaxValue);              int width;            Size size;            Color color;            Color backColor;            TextFormatFlags textFlags;            if (i == 0)            {              size = TextRenderer.MeasureText(e.Graphics' results[i]' font' proposedSize);              width = size.Width - e.CellStyle.Padding.Left;              color = fcolor;              backColor = bcolor;              textFlags = TextFormatFlags.PreserveGraphicsClipping | TextFormatFlags.EndEllipsis;            }            else if (i == 1)            {              size = TextRenderer.MeasureText(e.Graphics' results[i]' font' proposedSize' TextFormatFlags.NoPadding);              width = size.Width;              color = theme.CurrentTheme.FindReplaceForeColor;              backColor = theme.CurrentTheme.FindReplaceBackColor;              textFlags = TextFormatFlags.PreserveGraphicsClipping | TextFormatFlags.NoPadding;            }            else            {              size = TextRenderer.MeasureText(e.Graphics' results[i]' font' proposedSize);              width = size.Width - e.CellStyle.Padding.Right;              color = fcolor;              backColor = bcolor;              textFlags = TextFormatFlags.PreserveGraphicsClipping | TextFormatFlags.EndEllipsis;            }              int height = size.Height + (e.CellStyle.Padding.Top + e.CellStyle.Padding.Bottom);            Rectangle rect = new Rectangle(x' y - 4' width' e.CellBounds.Height - 2);            g.FillRectangle(new SolidBrush(backColor)' rect);            TextRenderer.DrawText(e.Graphics' results[i]' font' new Rectangle(x' y' width' height)' color'                                  textFlags);            x += width;          }            e.Handled = true;          return;        }
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,tracksGrid_CellPainting,The following statement contains a magic number: if ((e.ColumnIndex == _findResult.Column) && (e.RowIndex == _findResult.Row))        {          // Draw Merged Cell          Graphics g = e.Graphics;          bool selected = ((e.State & DataGridViewElementStates.Selected) == DataGridViewElementStates.Selected);          Color fcolor = (selected ? e.CellStyle.SelectionForeColor : e.CellStyle.ForeColor);          Color bcolor = (selected ? e.CellStyle.SelectionBackColor : e.CellStyle.BackColor);          Font font = e.CellStyle.Font;            // Split up the cell content into 3 pieces          string cellContent = e.Value == null ? "" : e.Value.ToString();            if (_findResult.StartPos + _findResult.Length > cellContent.Length)          {            return;          }            string[] results = new string[3];          results[0] = cellContent.Substring(0' _findResult.StartPos);          results[1] = cellContent.Substring(_findResult.StartPos' _findResult.Length);          results[2] = cellContent.Substring(_findResult.StartPos + _findResult.Length);            int x = e.CellBounds.Left + e.CellStyle.Padding.Left;          int y = e.CellBounds.Top + e.CellStyle.Padding.Top + 4;            for (int i = 0; i < 3; i++)          {            Size proposedSize = new Size(int.MaxValue' int.MaxValue);              int width;            Size size;            Color color;            Color backColor;            TextFormatFlags textFlags;            if (i == 0)            {              size = TextRenderer.MeasureText(e.Graphics' results[i]' font' proposedSize);              width = size.Width - e.CellStyle.Padding.Left;              color = fcolor;              backColor = bcolor;              textFlags = TextFormatFlags.PreserveGraphicsClipping | TextFormatFlags.EndEllipsis;            }            else if (i == 1)            {              size = TextRenderer.MeasureText(e.Graphics' results[i]' font' proposedSize' TextFormatFlags.NoPadding);              width = size.Width;              color = theme.CurrentTheme.FindReplaceForeColor;              backColor = theme.CurrentTheme.FindReplaceBackColor;              textFlags = TextFormatFlags.PreserveGraphicsClipping | TextFormatFlags.NoPadding;            }            else            {              size = TextRenderer.MeasureText(e.Graphics' results[i]' font' proposedSize);              width = size.Width - e.CellStyle.Padding.Right;              color = fcolor;              backColor = bcolor;              textFlags = TextFormatFlags.PreserveGraphicsClipping | TextFormatFlags.EndEllipsis;            }              int height = size.Height + (e.CellStyle.Padding.Top + e.CellStyle.Padding.Bottom);            Rectangle rect = new Rectangle(x' y - 4' width' e.CellBounds.Height - 2);            g.FillRectangle(new SolidBrush(backColor)' rect);            TextRenderer.DrawText(e.Graphics' results[i]' font' new Rectangle(x' y' width' height)' color'                                  textFlags);            x += width;          }            e.Handled = true;          return;        }
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,tracksGrid_CellValueNeeded,The following statement contains a magic number: if (e.ColumnIndex == 0)        {          if (track.Changed)          {            e.Value = Properties.Resources.Changed;            return;          }            switch (track.Status)          {            case -1:              return;              case 0:              e.Value = Properties.Resources.Complete_OK;              break;              case 1:              e.Value = Properties.Resources.Warning;              break;              case 2:              e.Value = Properties.Resources.CriticalError;              break;              case 3:              e.Value = Properties.Resources.ribbon_BrokenSong_16x;              break;              case 4:              e.Value = Properties.Resources.ribbon_FixedSong_16x;              break;          }            return;        }
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,tracksGrid_CellValueNeeded,The following statement contains a magic number: if (e.ColumnIndex == 0)        {          if (track.Changed)          {            e.Value = Properties.Resources.Changed;            return;          }            switch (track.Status)          {            case -1:              return;              case 0:              e.Value = Properties.Resources.Complete_OK;              break;              case 1:              e.Value = Properties.Resources.Warning;              break;              case 2:              e.Value = Properties.Resources.CriticalError;              break;              case 3:              e.Value = Properties.Resources.ribbon_BrokenSong_16x;              break;              case 4:              e.Value = Properties.Resources.ribbon_FixedSong_16x;              break;          }            return;        }
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,tracksGrid_CellValueNeeded,The following statement contains a magic number: if (e.ColumnIndex == 0)        {          if (track.Changed)          {            e.Value = Properties.Resources.Changed;            return;          }            switch (track.Status)          {            case -1:              return;              case 0:              e.Value = Properties.Resources.Complete_OK;              break;              case 1:              e.Value = Properties.Resources.Warning;              break;              case 2:              e.Value = Properties.Resources.CriticalError;              break;              case 3:              e.Value = Properties.Resources.ribbon_BrokenSong_16x;              break;              case 4:              e.Value = Properties.Resources.ribbon_FixedSong_16x;              break;          }            return;        }
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,tracksGrid_MouseDown,The following statement contains a magic number: if (e.Button == MouseButtons.Left && tracksGrid.SelectedRows.Count > 0)        {          // Remember the point where the mouse down occurred. The DragSize indicates          // the size that the mouse can move before a drag event should be started.                          Size dragSize = SystemInformation.DragSize;            // Create a rectangle using the DragSize' with the mouse position being          // at the center of the rectangle.          _dragBoxFromMouseDown = new Rectangle(new Point(e.X - (dragSize.Width / 2)' e.Y - (dragSize.Height / 2))'                                                dragSize);        }        else          _dragBoxFromMouseDown = Rectangle.Empty;
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,tracksGrid_MouseDown,The following statement contains a magic number: if (e.Button == MouseButtons.Left && tracksGrid.SelectedRows.Count > 0)        {          // Remember the point where the mouse down occurred. The DragSize indicates          // the size that the mouse can move before a drag event should be started.                          Size dragSize = SystemInformation.DragSize;            // Create a rectangle using the DragSize' with the mouse position being          // at the center of the rectangle.          _dragBoxFromMouseDown = new Rectangle(new Point(e.X - (dragSize.Width / 2)' e.Y - (dragSize.Height / 2))'                                                dragSize);        }        else          _dragBoxFromMouseDown = Rectangle.Empty;
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,tracksGrid_AddToPlayList,The following statement contains a magic number: foreach (DataGridViewRow row in tracksGrid.Rows)        {          if (!row.Selected)            continue;            TrackData track = Options.Songlist[row.Index];          PlayListData playListItem = new PlayListData();          playListItem.FileName = track.FullFileName;          playListItem.Title = track.Title;          playListItem.Artist = track.Artist;          playListItem.Album = track.Album;          playListItem.Duration = track.Duration.Substring(3' 5); // Just get Minutes and seconds          _main.Player.PlayList.Add(playListItem);        }
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,tracksGrid_AddToPlayList,The following statement contains a magic number: foreach (DataGridViewRow row in tracksGrid.Rows)        {          if (!row.Selected)            continue;            TrackData track = Options.Songlist[row.Index];          PlayListData playListItem = new PlayListData();          playListItem.FileName = track.FullFileName;          playListItem.Title = track.Title;          playListItem.Artist = track.Artist;          playListItem.Album = track.Album;          playListItem.Duration = track.Duration.Substring(3' 5); // Just get Minutes and seconds          _main.Player.PlayList.Add(playListItem);        }
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,tracksGrid_SaveAsPlayList,The following statement contains a magic number: foreach (DataGridViewRow row in tracksGrid.Rows)        {          if (!row.Selected)            continue;            TrackData track = Options.Songlist[row.Index];          PlayListData playListItem = new PlayListData();          playListItem.FileName = track.FullFileName;          playListItem.Title = track.Title;          playListItem.Artist = track.Artist;          playListItem.Album = track.Album;          playListItem.Duration = track.Duration.Substring(3' 5); // Just get Minutes and seconds          playList.Add(playListItem);        }
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,tracksGrid_SaveAsPlayList,The following statement contains a magic number: foreach (DataGridViewRow row in tracksGrid.Rows)        {          if (!row.Selected)            continue;            TrackData track = Options.Songlist[row.Index];          PlayListData playListItem = new PlayListData();          playListItem.FileName = track.FullFileName;          playListItem.Title = track.Title;          playListItem.Artist = track.Artist;          playListItem.Album = track.Album;          playListItem.Duration = track.Duration.Substring(3' 5); // Just get Minutes and seconds          playList.Add(playListItem);        }
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,tracksGrid_Copy,The following statement contains a magic number: contextMenu.Items[2].Enabled = true;
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,tracksGrid_Cut,The following statement contains a magic number: contextMenu.Items[2].Enabled = true;
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,tracksGrid_Paste,The following statement contains a magic number: contextMenu.Items[2].Enabled = false;
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,InitializeComponent,The following statement contains a magic number: dataGridViewCellStyle1.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(215))))' ((int)(((byte)(225))))' ((int)(((byte)(245)))));
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,InitializeComponent,The following statement contains a magic number: dataGridViewCellStyle1.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(215))))' ((int)(((byte)(225))))' ((int)(((byte)(245)))));
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,InitializeComponent,The following statement contains a magic number: dataGridViewCellStyle1.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(215))))' ((int)(((byte)(225))))' ((int)(((byte)(245)))));
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,InitializeComponent,The following statement contains a magic number: this.tracksGrid.Size = new System.Drawing.Size(569' 524);
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,InitializeComponent,The following statement contains a magic number: this.tracksGrid.Size = new System.Drawing.Size(569' 524);
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,InitializeComponent,The following statement contains a magic number: this.contextMenu.Size = new System.Drawing.Size(236' 286);
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,InitializeComponent,The following statement contains a magic number: this.contextMenu.Size = new System.Drawing.Size(236' 286);
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,InitializeComponent,The following statement contains a magic number: this.toolStripMenuItem1.Size = new System.Drawing.Size(235' 22);
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,InitializeComponent,The following statement contains a magic number: this.toolStripMenuItem1.Size = new System.Drawing.Size(235' 22);
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,InitializeComponent,The following statement contains a magic number: this.toolStripMenuItem2.Size = new System.Drawing.Size(235' 22);
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,InitializeComponent,The following statement contains a magic number: this.toolStripMenuItem2.Size = new System.Drawing.Size(235' 22);
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,InitializeComponent,The following statement contains a magic number: this.toolStripMenuItem3.Size = new System.Drawing.Size(235' 22);
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,InitializeComponent,The following statement contains a magic number: this.toolStripMenuItem3.Size = new System.Drawing.Size(235' 22);
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,InitializeComponent,The following statement contains a magic number: this.toolStripMenuItem8.Size = new System.Drawing.Size(235' 22);
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,InitializeComponent,The following statement contains a magic number: this.toolStripMenuItem8.Size = new System.Drawing.Size(235' 22);
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator3.Size = new System.Drawing.Size(232' 6);
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator3.Size = new System.Drawing.Size(232' 6);
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,InitializeComponent,The following statement contains a magic number: this.toolStripMenuItem9.Size = new System.Drawing.Size(235' 22);
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,InitializeComponent,The following statement contains a magic number: this.toolStripMenuItem9.Size = new System.Drawing.Size(235' 22);
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator1.Size = new System.Drawing.Size(232' 6);
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator1.Size = new System.Drawing.Size(232' 6);
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,InitializeComponent,The following statement contains a magic number: this.lookupTitlleOnGoogleImagesToolStripMenuItem.Size = new System.Drawing.Size(235' 22);
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,InitializeComponent,The following statement contains a magic number: this.lookupTitlleOnGoogleImagesToolStripMenuItem.Size = new System.Drawing.Size(235' 22);
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,InitializeComponent,The following statement contains a magic number: this.toolStripMenuItem4.Size = new System.Drawing.Size(235' 22);
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,InitializeComponent,The following statement contains a magic number: this.toolStripMenuItem4.Size = new System.Drawing.Size(235' 22);
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,InitializeComponent,The following statement contains a magic number: this.toolStripMenuItem5.Size = new System.Drawing.Size(235' 22);
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,InitializeComponent,The following statement contains a magic number: this.toolStripMenuItem5.Size = new System.Drawing.Size(235' 22);
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,InitializeComponent,The following statement contains a magic number: this.toolStripMenuItem6.Size = new System.Drawing.Size(235' 22);
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,InitializeComponent,The following statement contains a magic number: this.toolStripMenuItem6.Size = new System.Drawing.Size(235' 22);
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,InitializeComponent,The following statement contains a magic number: this.menuSavePlaylist.Size = new System.Drawing.Size(235' 22);
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,InitializeComponent,The following statement contains a magic number: this.menuSavePlaylist.Size = new System.Drawing.Size(235' 22);
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator4.Size = new System.Drawing.Size(232' 6);
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator4.Size = new System.Drawing.Size(232' 6);
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,InitializeComponent,The following statement contains a magic number: this.toolStripMenuItem7.Size = new System.Drawing.Size(235' 22);
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,InitializeComponent,The following statement contains a magic number: this.toolStripMenuItem7.Size = new System.Drawing.Size(235' 22);
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(569' 524);
Magic Number,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(569' 524);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,LoadSettings,The following statement contains a magic number: foreach (string[] script in scripts)        {          cbScripts.Items.Add(new Item(script[1]' script[0]' script[2]));        }
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,Organise,The following statement contains a magic number: foreach (DataGridViewRow row in tracksGrid.Rows)        {          if (!row.Selected)            continue;            Application.DoEvents();          _main.progressBar1.Value += 1;          if (_progressCancelled)          {            ResetProgressBar();            return;          }            track = Options.Songlist[row.Index];            // Replace the Parameter Value with the Values from the track          string resolvedParmString = Util.ReplaceParametersWithTrackValues(parameter' track);                    if (_scriptAssembly != null) // Do we have a script selected          {            try            {              IScript script = (IScript)_scriptAssembly.CreateInstance("Script");              targetFolder = script.Invoke(track);              if (targetFolder == "")              {                // Fall back to standard folder' if something happened in the script                targetFolder = cbRootDir.Text;              }            }            catch (Exception ex)            {              log.Error("Script Execution failed: {0}"' ex.Message);            }          }            string directoryName = "";          if (resolvedParmString.Contains(@"\"))          {            directoryName = Path.GetDirectoryName(resolvedParmString);          }            directoryName = Path.Combine(targetFolder' directoryName);            try          {            // Now check the validity of the directory            if (!Directory.Exists(directoryName))            {              try              {                Directory.CreateDirectory(directoryName);              }              catch (Exception e1)              {                bError = true;                log.Debug("Error creating folder: {0} {1]"' directoryName' e1.Message);                Options.Songlist[row.Index].Status = 2;                _main.TracksGridView.AddErrorMessage(row'                                                     String.Format("{0}: {1} {2}"'                                                                   localisation.ToString("message"' "Error")'                                                                   directoryName' e1.Message));                continue; // Process next row              }            }              // Store the directory of the current file in the dictionary' so that we may copy later all non-music files            string dir = Path.GetDirectoryName(track.FullFileName);            if (!_directories.ContainsKey(dir))            {              _directories.Add(dir' directoryName);            }              // Now construct the new File Name            string newFilename = resolvedParmString;            int lastBackSlash = resolvedParmString.LastIndexOf(@"\");            if (lastBackSlash > -1)            {              newFilename = resolvedParmString.Substring(lastBackSlash + 1);            }              newFilename += track.FileExt;            newFilename = Path.Combine(directoryName' newFilename);            try            {              if (!ckOverwriteFiles.Checked)              {                if (File.Exists(newFilename))                {                  bError = true;                  log.Debug("File exists: {0}"' newFilename);                  Options.Songlist[row.Index].Status = 2;                  _main.TracksGridView.AddErrorMessage(row' string.Format("{0}: {1}"' newFilename' localisation.ToString("organise"' "FileExists")));                  continue;                }              }                // If new file name validates to be the same as the old file' i.e. it goes into the source folder              // then continue' as this would lead in the source file to be deleted first and then there's nothing' which could be copied              if (newFilename.ToLowerInvariant() == track.FullFileName.ToLowerInvariant())              {                bError = true;                log.Debug("Old File and New File same: {0}"' newFilename);                Options.Songlist[row.Index].Status = 2;                _main.TracksGridView.AddErrorMessage(row' string.Format("{0}: {1}"' newFilename' localisation.ToString("organise"' "SameFile")));                continue;              }                if (ckCopyFiles.Checked)              {                FileSystem.CopyFile(track.FullFileName' newFilename' ckOverwriteFiles.Checked);                Options.Songlist[row.Index].Status = 0;              }              else              {                FileSystem.MoveFile(track.FullFileName' newFilename' ckOverwriteFiles.Checked);                Options.Songlist[row.Index].Status = 0;              }                // Update the Music Database              var originalFileName = track.FullFileName;              track.FullFileName = newFilename;              ServiceScope.Get<IMusicDatabase>().UpdateTrack(track' originalFileName);            }            catch (Exception e2)            {              bError = true;              log.Error("Error Copy/Move File: {0} {1}"' track.FullFileName' e2.Message);              Options.Songlist[row.Index].Status = 2;              _main.TracksGridView.AddErrorMessage(row'                                                   String.Format("{0}: {1}"' localisation.ToString("message"' "Error")'                                                                 e2.Message));            }          }          catch (Exception ex)          {            bError = true;            log.Error("Error Organising Files: {0} stack: {1}"' ex.Message' ex.StackTrace);            Options.Songlist[row.Index].Status = 2;            _main.TracksGridView.AddErrorMessage(row'                                                 String.Format("{0}: {1} {2}"' localisation.ToString("message"' "Error")'                                                               directoryName' ex.Message));          }        }
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,Organise,The following statement contains a magic number: foreach (DataGridViewRow row in tracksGrid.Rows)        {          if (!row.Selected)            continue;            Application.DoEvents();          _main.progressBar1.Value += 1;          if (_progressCancelled)          {            ResetProgressBar();            return;          }            track = Options.Songlist[row.Index];            // Replace the Parameter Value with the Values from the track          string resolvedParmString = Util.ReplaceParametersWithTrackValues(parameter' track);                    if (_scriptAssembly != null) // Do we have a script selected          {            try            {              IScript script = (IScript)_scriptAssembly.CreateInstance("Script");              targetFolder = script.Invoke(track);              if (targetFolder == "")              {                // Fall back to standard folder' if something happened in the script                targetFolder = cbRootDir.Text;              }            }            catch (Exception ex)            {              log.Error("Script Execution failed: {0}"' ex.Message);            }          }            string directoryName = "";          if (resolvedParmString.Contains(@"\"))          {            directoryName = Path.GetDirectoryName(resolvedParmString);          }            directoryName = Path.Combine(targetFolder' directoryName);            try          {            // Now check the validity of the directory            if (!Directory.Exists(directoryName))            {              try              {                Directory.CreateDirectory(directoryName);              }              catch (Exception e1)              {                bError = true;                log.Debug("Error creating folder: {0} {1]"' directoryName' e1.Message);                Options.Songlist[row.Index].Status = 2;                _main.TracksGridView.AddErrorMessage(row'                                                     String.Format("{0}: {1} {2}"'                                                                   localisation.ToString("message"' "Error")'                                                                   directoryName' e1.Message));                continue; // Process next row              }            }              // Store the directory of the current file in the dictionary' so that we may copy later all non-music files            string dir = Path.GetDirectoryName(track.FullFileName);            if (!_directories.ContainsKey(dir))            {              _directories.Add(dir' directoryName);            }              // Now construct the new File Name            string newFilename = resolvedParmString;            int lastBackSlash = resolvedParmString.LastIndexOf(@"\");            if (lastBackSlash > -1)            {              newFilename = resolvedParmString.Substring(lastBackSlash + 1);            }              newFilename += track.FileExt;            newFilename = Path.Combine(directoryName' newFilename);            try            {              if (!ckOverwriteFiles.Checked)              {                if (File.Exists(newFilename))                {                  bError = true;                  log.Debug("File exists: {0}"' newFilename);                  Options.Songlist[row.Index].Status = 2;                  _main.TracksGridView.AddErrorMessage(row' string.Format("{0}: {1}"' newFilename' localisation.ToString("organise"' "FileExists")));                  continue;                }              }                // If new file name validates to be the same as the old file' i.e. it goes into the source folder              // then continue' as this would lead in the source file to be deleted first and then there's nothing' which could be copied              if (newFilename.ToLowerInvariant() == track.FullFileName.ToLowerInvariant())              {                bError = true;                log.Debug("Old File and New File same: {0}"' newFilename);                Options.Songlist[row.Index].Status = 2;                _main.TracksGridView.AddErrorMessage(row' string.Format("{0}: {1}"' newFilename' localisation.ToString("organise"' "SameFile")));                continue;              }                if (ckCopyFiles.Checked)              {                FileSystem.CopyFile(track.FullFileName' newFilename' ckOverwriteFiles.Checked);                Options.Songlist[row.Index].Status = 0;              }              else              {                FileSystem.MoveFile(track.FullFileName' newFilename' ckOverwriteFiles.Checked);                Options.Songlist[row.Index].Status = 0;              }                // Update the Music Database              var originalFileName = track.FullFileName;              track.FullFileName = newFilename;              ServiceScope.Get<IMusicDatabase>().UpdateTrack(track' originalFileName);            }            catch (Exception e2)            {              bError = true;              log.Error("Error Copy/Move File: {0} {1}"' track.FullFileName' e2.Message);              Options.Songlist[row.Index].Status = 2;              _main.TracksGridView.AddErrorMessage(row'                                                   String.Format("{0}: {1}"' localisation.ToString("message"' "Error")'                                                                 e2.Message));            }          }          catch (Exception ex)          {            bError = true;            log.Error("Error Organising Files: {0} stack: {1}"' ex.Message' ex.StackTrace);            Options.Songlist[row.Index].Status = 2;            _main.TracksGridView.AddErrorMessage(row'                                                 String.Format("{0}: {1} {2}"' localisation.ToString("message"' "Error")'                                                               directoryName' ex.Message));          }        }
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,Organise,The following statement contains a magic number: foreach (DataGridViewRow row in tracksGrid.Rows)        {          if (!row.Selected)            continue;            Application.DoEvents();          _main.progressBar1.Value += 1;          if (_progressCancelled)          {            ResetProgressBar();            return;          }            track = Options.Songlist[row.Index];            // Replace the Parameter Value with the Values from the track          string resolvedParmString = Util.ReplaceParametersWithTrackValues(parameter' track);                    if (_scriptAssembly != null) // Do we have a script selected          {            try            {              IScript script = (IScript)_scriptAssembly.CreateInstance("Script");              targetFolder = script.Invoke(track);              if (targetFolder == "")              {                // Fall back to standard folder' if something happened in the script                targetFolder = cbRootDir.Text;              }            }            catch (Exception ex)            {              log.Error("Script Execution failed: {0}"' ex.Message);            }          }            string directoryName = "";          if (resolvedParmString.Contains(@"\"))          {            directoryName = Path.GetDirectoryName(resolvedParmString);          }            directoryName = Path.Combine(targetFolder' directoryName);            try          {            // Now check the validity of the directory            if (!Directory.Exists(directoryName))            {              try              {                Directory.CreateDirectory(directoryName);              }              catch (Exception e1)              {                bError = true;                log.Debug("Error creating folder: {0} {1]"' directoryName' e1.Message);                Options.Songlist[row.Index].Status = 2;                _main.TracksGridView.AddErrorMessage(row'                                                     String.Format("{0}: {1} {2}"'                                                                   localisation.ToString("message"' "Error")'                                                                   directoryName' e1.Message));                continue; // Process next row              }            }              // Store the directory of the current file in the dictionary' so that we may copy later all non-music files            string dir = Path.GetDirectoryName(track.FullFileName);            if (!_directories.ContainsKey(dir))            {              _directories.Add(dir' directoryName);            }              // Now construct the new File Name            string newFilename = resolvedParmString;            int lastBackSlash = resolvedParmString.LastIndexOf(@"\");            if (lastBackSlash > -1)            {              newFilename = resolvedParmString.Substring(lastBackSlash + 1);            }              newFilename += track.FileExt;            newFilename = Path.Combine(directoryName' newFilename);            try            {              if (!ckOverwriteFiles.Checked)              {                if (File.Exists(newFilename))                {                  bError = true;                  log.Debug("File exists: {0}"' newFilename);                  Options.Songlist[row.Index].Status = 2;                  _main.TracksGridView.AddErrorMessage(row' string.Format("{0}: {1}"' newFilename' localisation.ToString("organise"' "FileExists")));                  continue;                }              }                // If new file name validates to be the same as the old file' i.e. it goes into the source folder              // then continue' as this would lead in the source file to be deleted first and then there's nothing' which could be copied              if (newFilename.ToLowerInvariant() == track.FullFileName.ToLowerInvariant())              {                bError = true;                log.Debug("Old File and New File same: {0}"' newFilename);                Options.Songlist[row.Index].Status = 2;                _main.TracksGridView.AddErrorMessage(row' string.Format("{0}: {1}"' newFilename' localisation.ToString("organise"' "SameFile")));                continue;              }                if (ckCopyFiles.Checked)              {                FileSystem.CopyFile(track.FullFileName' newFilename' ckOverwriteFiles.Checked);                Options.Songlist[row.Index].Status = 0;              }              else              {                FileSystem.MoveFile(track.FullFileName' newFilename' ckOverwriteFiles.Checked);                Options.Songlist[row.Index].Status = 0;              }                // Update the Music Database              var originalFileName = track.FullFileName;              track.FullFileName = newFilename;              ServiceScope.Get<IMusicDatabase>().UpdateTrack(track' originalFileName);            }            catch (Exception e2)            {              bError = true;              log.Error("Error Copy/Move File: {0} {1}"' track.FullFileName' e2.Message);              Options.Songlist[row.Index].Status = 2;              _main.TracksGridView.AddErrorMessage(row'                                                   String.Format("{0}: {1}"' localisation.ToString("message"' "Error")'                                                                 e2.Message));            }          }          catch (Exception ex)          {            bError = true;            log.Error("Error Organising Files: {0} stack: {1}"' ex.Message' ex.StackTrace);            Options.Songlist[row.Index].Status = 2;            _main.TracksGridView.AddErrorMessage(row'                                                 String.Format("{0}: {1} {2}"' localisation.ToString("message"' "Error")'                                                               directoryName' ex.Message));          }        }
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,Organise,The following statement contains a magic number: foreach (DataGridViewRow row in tracksGrid.Rows)        {          if (!row.Selected)            continue;            Application.DoEvents();          _main.progressBar1.Value += 1;          if (_progressCancelled)          {            ResetProgressBar();            return;          }            track = Options.Songlist[row.Index];            // Replace the Parameter Value with the Values from the track          string resolvedParmString = Util.ReplaceParametersWithTrackValues(parameter' track);                    if (_scriptAssembly != null) // Do we have a script selected          {            try            {              IScript script = (IScript)_scriptAssembly.CreateInstance("Script");              targetFolder = script.Invoke(track);              if (targetFolder == "")              {                // Fall back to standard folder' if something happened in the script                targetFolder = cbRootDir.Text;              }            }            catch (Exception ex)            {              log.Error("Script Execution failed: {0}"' ex.Message);            }          }            string directoryName = "";          if (resolvedParmString.Contains(@"\"))          {            directoryName = Path.GetDirectoryName(resolvedParmString);          }            directoryName = Path.Combine(targetFolder' directoryName);            try          {            // Now check the validity of the directory            if (!Directory.Exists(directoryName))            {              try              {                Directory.CreateDirectory(directoryName);              }              catch (Exception e1)              {                bError = true;                log.Debug("Error creating folder: {0} {1]"' directoryName' e1.Message);                Options.Songlist[row.Index].Status = 2;                _main.TracksGridView.AddErrorMessage(row'                                                     String.Format("{0}: {1} {2}"'                                                                   localisation.ToString("message"' "Error")'                                                                   directoryName' e1.Message));                continue; // Process next row              }            }              // Store the directory of the current file in the dictionary' so that we may copy later all non-music files            string dir = Path.GetDirectoryName(track.FullFileName);            if (!_directories.ContainsKey(dir))            {              _directories.Add(dir' directoryName);            }              // Now construct the new File Name            string newFilename = resolvedParmString;            int lastBackSlash = resolvedParmString.LastIndexOf(@"\");            if (lastBackSlash > -1)            {              newFilename = resolvedParmString.Substring(lastBackSlash + 1);            }              newFilename += track.FileExt;            newFilename = Path.Combine(directoryName' newFilename);            try            {              if (!ckOverwriteFiles.Checked)              {                if (File.Exists(newFilename))                {                  bError = true;                  log.Debug("File exists: {0}"' newFilename);                  Options.Songlist[row.Index].Status = 2;                  _main.TracksGridView.AddErrorMessage(row' string.Format("{0}: {1}"' newFilename' localisation.ToString("organise"' "FileExists")));                  continue;                }              }                // If new file name validates to be the same as the old file' i.e. it goes into the source folder              // then continue' as this would lead in the source file to be deleted first and then there's nothing' which could be copied              if (newFilename.ToLowerInvariant() == track.FullFileName.ToLowerInvariant())              {                bError = true;                log.Debug("Old File and New File same: {0}"' newFilename);                Options.Songlist[row.Index].Status = 2;                _main.TracksGridView.AddErrorMessage(row' string.Format("{0}: {1}"' newFilename' localisation.ToString("organise"' "SameFile")));                continue;              }                if (ckCopyFiles.Checked)              {                FileSystem.CopyFile(track.FullFileName' newFilename' ckOverwriteFiles.Checked);                Options.Songlist[row.Index].Status = 0;              }              else              {                FileSystem.MoveFile(track.FullFileName' newFilename' ckOverwriteFiles.Checked);                Options.Songlist[row.Index].Status = 0;              }                // Update the Music Database              var originalFileName = track.FullFileName;              track.FullFileName = newFilename;              ServiceScope.Get<IMusicDatabase>().UpdateTrack(track' originalFileName);            }            catch (Exception e2)            {              bError = true;              log.Error("Error Copy/Move File: {0} {1}"' track.FullFileName' e2.Message);              Options.Songlist[row.Index].Status = 2;              _main.TracksGridView.AddErrorMessage(row'                                                   String.Format("{0}: {1}"' localisation.ToString("message"' "Error")'                                                                 e2.Message));            }          }          catch (Exception ex)          {            bError = true;            log.Error("Error Organising Files: {0} stack: {1}"' ex.Message' ex.StackTrace);            Options.Songlist[row.Index].Status = 2;            _main.TracksGridView.AddErrorMessage(row'                                                 String.Format("{0}: {1} {2}"' localisation.ToString("message"' "Error")'                                                               directoryName' ex.Message));          }        }
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,Organise,The following statement contains a magic number: foreach (DataGridViewRow row in tracksGrid.Rows)        {          if (!row.Selected)            continue;            Application.DoEvents();          _main.progressBar1.Value += 1;          if (_progressCancelled)          {            ResetProgressBar();            return;          }            track = Options.Songlist[row.Index];            // Replace the Parameter Value with the Values from the track          string resolvedParmString = Util.ReplaceParametersWithTrackValues(parameter' track);                    if (_scriptAssembly != null) // Do we have a script selected          {            try            {              IScript script = (IScript)_scriptAssembly.CreateInstance("Script");              targetFolder = script.Invoke(track);              if (targetFolder == "")              {                // Fall back to standard folder' if something happened in the script                targetFolder = cbRootDir.Text;              }            }            catch (Exception ex)            {              log.Error("Script Execution failed: {0}"' ex.Message);            }          }            string directoryName = "";          if (resolvedParmString.Contains(@"\"))          {            directoryName = Path.GetDirectoryName(resolvedParmString);          }            directoryName = Path.Combine(targetFolder' directoryName);            try          {            // Now check the validity of the directory            if (!Directory.Exists(directoryName))            {              try              {                Directory.CreateDirectory(directoryName);              }              catch (Exception e1)              {                bError = true;                log.Debug("Error creating folder: {0} {1]"' directoryName' e1.Message);                Options.Songlist[row.Index].Status = 2;                _main.TracksGridView.AddErrorMessage(row'                                                     String.Format("{0}: {1} {2}"'                                                                   localisation.ToString("message"' "Error")'                                                                   directoryName' e1.Message));                continue; // Process next row              }            }              // Store the directory of the current file in the dictionary' so that we may copy later all non-music files            string dir = Path.GetDirectoryName(track.FullFileName);            if (!_directories.ContainsKey(dir))            {              _directories.Add(dir' directoryName);            }              // Now construct the new File Name            string newFilename = resolvedParmString;            int lastBackSlash = resolvedParmString.LastIndexOf(@"\");            if (lastBackSlash > -1)            {              newFilename = resolvedParmString.Substring(lastBackSlash + 1);            }              newFilename += track.FileExt;            newFilename = Path.Combine(directoryName' newFilename);            try            {              if (!ckOverwriteFiles.Checked)              {                if (File.Exists(newFilename))                {                  bError = true;                  log.Debug("File exists: {0}"' newFilename);                  Options.Songlist[row.Index].Status = 2;                  _main.TracksGridView.AddErrorMessage(row' string.Format("{0}: {1}"' newFilename' localisation.ToString("organise"' "FileExists")));                  continue;                }              }                // If new file name validates to be the same as the old file' i.e. it goes into the source folder              // then continue' as this would lead in the source file to be deleted first and then there's nothing' which could be copied              if (newFilename.ToLowerInvariant() == track.FullFileName.ToLowerInvariant())              {                bError = true;                log.Debug("Old File and New File same: {0}"' newFilename);                Options.Songlist[row.Index].Status = 2;                _main.TracksGridView.AddErrorMessage(row' string.Format("{0}: {1}"' newFilename' localisation.ToString("organise"' "SameFile")));                continue;              }                if (ckCopyFiles.Checked)              {                FileSystem.CopyFile(track.FullFileName' newFilename' ckOverwriteFiles.Checked);                Options.Songlist[row.Index].Status = 0;              }              else              {                FileSystem.MoveFile(track.FullFileName' newFilename' ckOverwriteFiles.Checked);                Options.Songlist[row.Index].Status = 0;              }                // Update the Music Database              var originalFileName = track.FullFileName;              track.FullFileName = newFilename;              ServiceScope.Get<IMusicDatabase>().UpdateTrack(track' originalFileName);            }            catch (Exception e2)            {              bError = true;              log.Error("Error Copy/Move File: {0} {1}"' track.FullFileName' e2.Message);              Options.Songlist[row.Index].Status = 2;              _main.TracksGridView.AddErrorMessage(row'                                                   String.Format("{0}: {1}"' localisation.ToString("message"' "Error")'                                                                 e2.Message));            }          }          catch (Exception ex)          {            bError = true;            log.Error("Error Organising Files: {0} stack: {1}"' ex.Message' ex.StackTrace);            Options.Songlist[row.Index].Status = 2;            _main.TracksGridView.AddErrorMessage(row'                                                 String.Format("{0}: {1} {2}"' localisation.ToString("message"' "Error")'                                                               directoryName' ex.Message));          }        }
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,Organise,The following statement contains a magic number: if (!ckCopyFiles.Checked && !bError)        {          foreach (string dir in _directories.Keys)          {            DeleteSubFolders(dir);            DeleteParentFolders(dir);          }            string currentSelectedFolder = _main.CurrentDirectory;          // Go up 1 level in the directory structure to find an existing folder          int i = 0;          while (i < 10)          {            if (Directory.Exists(currentSelectedFolder))              break;              currentSelectedFolder = currentSelectedFolder.Substring(0' currentSelectedFolder.LastIndexOf("\\"));            i++; // Max of 10 levels' to avoid possible infinity loop          }  				_main.TracksGridView.Changed = false;          _main.CurrentDirectory = currentSelectedFolder;          _main.TreeView.RefreshFolders();          _main.RefreshTrackList();        }
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,FillPreview,The following statement contains a magic number: _previewForm.AddGridColumn(1' "NewFullFileName"' localisation.ToString("column_header"' "NewFileName")' 250);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,SetProgressBar,The following statement contains a magic number: _main.progressBar1.Maximum = maxCount == 0 ? 100 : maxCount;
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,ProcessCmdKey,The following statement contains a magic number: if ((int)keyData == 13)   // Handle Enter key as default Apply Button        {          btApply_Click(null' new EventArgs());          return true;        }        else if ((int)keyData == 27)  // Handle Escape to Close the form        {          btCancel_Click(null' new EventArgs());          return true;        }
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,ProcessCmdKey,The following statement contains a magic number: if ((int)keyData == 13)   // Handle Enter key as default Apply Button        {          btApply_Click(null' new EventArgs());          return true;        }        else if ((int)keyData == 27)  // Handle Escape to Close the form        {          btCancel_Click(null' new EventArgs());          return true;        }
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.btApply.Location = new System.Drawing.Point(667' 10);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.btApply.Location = new System.Drawing.Point(667' 10);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.btApply.Size = new System.Drawing.Size(100' 23);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.btApply.Size = new System.Drawing.Size(100' 23);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.btApply.TabIndex = 3;
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.btCancel.Location = new System.Drawing.Point(774' 10);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.btCancel.Location = new System.Drawing.Point(774' 10);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.btCancel.Size = new System.Drawing.Size(100' 23);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.btCancel.Size = new System.Drawing.Size(100' 23);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.btCancel.TabIndex = 4;
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxParm.Location = new System.Drawing.Point(14' 16);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxParm.Location = new System.Drawing.Point(14' 16);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxParm.Size = new System.Drawing.Size(824' 182);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxParm.Size = new System.Drawing.Size(824' 182);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxParm.TabIndex = 22;
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmFolder.Location = new System.Drawing.Point(11' 160);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmFolder.Location = new System.Drawing.Point(11' 160);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmFolder.Size = new System.Drawing.Size(391' 13);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmFolder.Size = new System.Drawing.Size(391' 13);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmFolder.TabIndex = 21;
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmFirstAlbumArtist.Location = new System.Drawing.Point(318' 137);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmFirstAlbumArtist.Location = new System.Drawing.Point(318' 137);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmFirstAlbumArtist.Size = new System.Drawing.Size(206' 13);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmFirstAlbumArtist.Size = new System.Drawing.Size(206' 13);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmFirstAlbumArtist.TabIndex = 20;
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmFirstArtist.Location = new System.Drawing.Point(6' 137);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmFirstArtist.Location = new System.Drawing.Point(6' 137);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmFirstArtist.Size = new System.Drawing.Size(176' 13);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmFirstArtist.Size = new System.Drawing.Size(176' 13);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmFirstArtist.TabIndex = 19;
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblModifiedBy.Location = new System.Drawing.Point(6' 117);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblModifiedBy.Location = new System.Drawing.Point(6' 117);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblModifiedBy.Size = new System.Drawing.Size(141' 13);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblModifiedBy.Size = new System.Drawing.Size(141' 13);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblModifiedBy.TabIndex = 18;
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblBPM.Location = new System.Drawing.Point(318' 117);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblBPM.Location = new System.Drawing.Point(318' 117);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblBPM.Size = new System.Drawing.Size(61' 13);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblBPM.Size = new System.Drawing.Size(61' 13);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblBPM.TabIndex = 17;
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblSubTitle.Location = new System.Drawing.Point(629' 97);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblSubTitle.Location = new System.Drawing.Point(629' 97);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblSubTitle.Size = new System.Drawing.Size(77' 13);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblSubTitle.Size = new System.Drawing.Size(77' 13);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblSubTitle.TabIndex = 16;
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblContentGroup.Location = new System.Drawing.Point(629' 77);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblContentGroup.Location = new System.Drawing.Point(629' 77);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblContentGroup.Size = new System.Drawing.Size(108' 13);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblContentGroup.Size = new System.Drawing.Size(108' 13);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblContentGroup.TabIndex = 15;
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblComposer.Location = new System.Drawing.Point(629' 57);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblComposer.Location = new System.Drawing.Point(629' 57);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblComposer.Size = new System.Drawing.Size(86' 13);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblComposer.Size = new System.Drawing.Size(86' 13);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblComposer.TabIndex = 14;
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblConductor.Location = new System.Drawing.Point(318' 57);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblConductor.Location = new System.Drawing.Point(318' 57);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblConductor.Size = new System.Drawing.Size(88' 13);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblConductor.Size = new System.Drawing.Size(88' 13);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblConductor.TabIndex = 13;
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmBitRate.Location = new System.Drawing.Point(629' 117);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmBitRate.Location = new System.Drawing.Point(629' 117);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmBitRate.Size = new System.Drawing.Size(64' 13);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmBitRate.Size = new System.Drawing.Size(64' 13);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmBitRate.TabIndex = 11;
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmComment.Location = new System.Drawing.Point(629' 37);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmComment.Location = new System.Drawing.Point(629' 37);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmComment.Size = new System.Drawing.Size(82' 13);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmComment.Size = new System.Drawing.Size(82' 13);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmComment.TabIndex = 10;
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblAlbumArtist.Location = new System.Drawing.Point(6' 57);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblAlbumArtist.Location = new System.Drawing.Point(6' 57);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblAlbumArtist.Size = new System.Drawing.Size(151' 13);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblAlbumArtist.Size = new System.Drawing.Size(151' 13);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblAlbumArtist.TabIndex = 9;
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmGenre.Location = new System.Drawing.Point(318' 37);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmGenre.Location = new System.Drawing.Point(318' 37);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmGenre.Size = new System.Drawing.Size(68' 13);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmGenre.Size = new System.Drawing.Size(68' 13);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmGenre.TabIndex = 8;
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmDiscTotal.Location = new System.Drawing.Point(318' 97);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmDiscTotal.Location = new System.Drawing.Point(318' 97);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmDiscTotal.Size = new System.Drawing.Size(110' 13);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmDiscTotal.Size = new System.Drawing.Size(110' 13);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmDiscTotal.TabIndex = 7;
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmDisc.Location = new System.Drawing.Point(6' 97);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmDisc.Location = new System.Drawing.Point(6' 97);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmDisc.Size = new System.Drawing.Size(100' 13);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmDisc.Size = new System.Drawing.Size(100' 13);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmDisc.TabIndex = 6;
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTrackTotal.Location = new System.Drawing.Point(318' 77);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTrackTotal.Location = new System.Drawing.Point(318' 77);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTrackTotal.Size = new System.Drawing.Size(115' 13);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTrackTotal.Size = new System.Drawing.Size(115' 13);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTrackTotal.TabIndex = 5;
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTrack.Location = new System.Drawing.Point(6' 77);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTrack.Location = new System.Drawing.Point(6' 77);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTrack.Size = new System.Drawing.Size(106' 13);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTrack.Size = new System.Drawing.Size(106' 13);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTrack.TabIndex = 4;
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmYear.Location = new System.Drawing.Point(6' 37);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmYear.Location = new System.Drawing.Point(6' 37);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmYear.Size = new System.Drawing.Size(60' 13);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmYear.Size = new System.Drawing.Size(60' 13);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmYear.TabIndex = 3;
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmAlbum.Location = new System.Drawing.Point(629' 17);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmAlbum.Location = new System.Drawing.Point(629' 17);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmAlbum.Size = new System.Drawing.Size(67' 13);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmAlbum.Size = new System.Drawing.Size(67' 13);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmAlbum.TabIndex = 2;
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTitle.Location = new System.Drawing.Point(318' 16);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTitle.Location = new System.Drawing.Point(318' 16);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTitle.Size = new System.Drawing.Size(58' 13);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTitle.Size = new System.Drawing.Size(58' 13);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmArtist.Location = new System.Drawing.Point(6' 17);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmArtist.Location = new System.Drawing.Point(6' 17);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmArtist.Size = new System.Drawing.Size(61' 13);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblParmArtist.Size = new System.Drawing.Size(61' 13);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.ckOverwriteFiles.Location = new System.Drawing.Point(9' 28);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.ckOverwriteFiles.Location = new System.Drawing.Point(9' 28);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.ckOverwriteFiles.Size = new System.Drawing.Size(130' 17);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.ckOverwriteFiles.Size = new System.Drawing.Size(130' 17);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.ckOverwriteFiles.TabIndex = 26;
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.ckCopyFiles.Location = new System.Drawing.Point(9' 65);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.ckCopyFiles.Location = new System.Drawing.Point(9' 65);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.ckCopyFiles.Size = new System.Drawing.Size(183' 17);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.ckCopyFiles.Size = new System.Drawing.Size(183' 17);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.ckCopyFiles.TabIndex = 27;
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.ckCopyNonMusicFiles.Location = new System.Drawing.Point(321' 65);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.ckCopyNonMusicFiles.Location = new System.Drawing.Point(321' 65);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.ckCopyNonMusicFiles.Size = new System.Drawing.Size(208' 17);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.ckCopyNonMusicFiles.Size = new System.Drawing.Size(208' 17);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.ckCopyNonMusicFiles.TabIndex = 28;
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxOptions.Location = new System.Drawing.Point(14' 214);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxOptions.Location = new System.Drawing.Point(14' 214);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxOptions.Size = new System.Drawing.Size(824' 113);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxOptions.Size = new System.Drawing.Size(824' 113);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxOptions.TabIndex = 29;
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.cbScripts.Location = new System.Drawing.Point(610' 26);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.cbScripts.Location = new System.Drawing.Point(610' 26);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.cbScripts.Size = new System.Drawing.Size(157' 21);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.cbScripts.Size = new System.Drawing.Size(157' 21);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.cbScripts.TabIndex = 36;
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblOverrideTargetRootDir.Location = new System.Drawing.Point(318' 32);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblOverrideTargetRootDir.Location = new System.Drawing.Point(318' 32);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblOverrideTargetRootDir.Size = new System.Drawing.Size(213' 13);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblOverrideTargetRootDir.Size = new System.Drawing.Size(213' 13);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblOverrideTargetRootDir.TabIndex = 35;
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.labelHeader.Location = new System.Drawing.Point(12' 13);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.labelHeader.Location = new System.Drawing.Point(12' 13);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.labelHeader.Size = new System.Drawing.Size(62' 20);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.labelHeader.Size = new System.Drawing.Size(62' 20);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.labelHeader.TabIndex = 30;
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxSelection.Location = new System.Drawing.Point(16' 45);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxSelection.Location = new System.Drawing.Point(16' 45);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxSelection.Size = new System.Drawing.Size(858' 115);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxSelection.Size = new System.Drawing.Size(858' 115);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxSelection.TabIndex = 31;
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.btReview.Location = new System.Drawing.Point(551' 81);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.btReview.Location = new System.Drawing.Point(551' 81);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.btReview.Size = new System.Drawing.Size(200' 23);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.btReview.Size = new System.Drawing.Size(200' 23);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.btReview.TabIndex = 34;
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.cbRootDir.Location = new System.Drawing.Point(133' 22);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.cbRootDir.Location = new System.Drawing.Point(133' 22);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.cbRootDir.Size = new System.Drawing.Size(544' 21);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.cbRootDir.Size = new System.Drawing.Size(544' 21);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.cbRootDir.TabIndex = 33;
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.buttonBrowseRootDir.Location = new System.Drawing.Point(683' 22);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.buttonBrowseRootDir.Location = new System.Drawing.Point(683' 22);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.buttonBrowseRootDir.Size = new System.Drawing.Size(68' 23);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.buttonBrowseRootDir.Size = new System.Drawing.Size(68' 23);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.buttonBrowseRootDir.TabIndex = 32;
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblTargetRootDrectory.Location = new System.Drawing.Point(15' 22);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblTargetRootDrectory.Location = new System.Drawing.Point(15' 22);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblTargetRootDrectory.Size = new System.Drawing.Size(112' 13);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblTargetRootDrectory.Size = new System.Drawing.Size(112' 13);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblTargetRootDrectory.TabIndex = 30;
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.btRemoveFormat.Location = new System.Drawing.Point(343' 81);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.btRemoveFormat.Location = new System.Drawing.Point(343' 81);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.btRemoveFormat.Size = new System.Drawing.Size(200' 23);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.btRemoveFormat.Size = new System.Drawing.Size(200' 23);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.btRemoveFormat.TabIndex = 28;
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.btAddFormat.Location = new System.Drawing.Point(133' 81);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.btAddFormat.Location = new System.Drawing.Point(133' 81);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.btAddFormat.Size = new System.Drawing.Size(200' 23);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.btAddFormat.Size = new System.Drawing.Size(200' 23);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.btAddFormat.TabIndex = 27;
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.cbFormat.Location = new System.Drawing.Point(133' 54);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.cbFormat.Location = new System.Drawing.Point(133' 54);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.cbFormat.Size = new System.Drawing.Size(544' 21);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.cbFormat.Size = new System.Drawing.Size(544' 21);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.cbFormat.TabIndex = 26;
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblFormat.Location = new System.Drawing.Point(15' 57);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblFormat.Location = new System.Drawing.Point(15' 57);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblFormat.Size = new System.Drawing.Size(42' 13);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblFormat.Size = new System.Drawing.Size(42' 13);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.lblFormat.TabIndex = 29;
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.tabControl1.Location = new System.Drawing.Point(16' 173);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.tabControl1.Location = new System.Drawing.Point(16' 173);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.tabControl1.Size = new System.Drawing.Size(858' 361);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.tabControl1.Size = new System.Drawing.Size(858' 361);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.tabControl1.TabIndex = 22;
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.tabPageParameter.Size = new System.Drawing.Size(856' 340);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.tabPageParameter.Size = new System.Drawing.Size(856' 340);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.tabPagePreview.Size = new System.Drawing.Size(742' 225);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.tabPagePreview.Size = new System.Drawing.Size(742' 225);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.mptPanel1.Size = new System.Drawing.Size(894' 554);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.mptPanel1.Size = new System.Drawing.Size(894' 554);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.mptPanel1.TabIndex = 25;
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(894' 554);
Magic Number,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(894' 554);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,Tag2FileName,The following statement contains a magic number: foreach (DataGridViewRow row in tracksGrid.Rows)        {          if (!row.Selected)            continue;            string fileName = parameter;          track = Options.Songlist[row.Index];            try          {            fileName = ReplaceParametersWithValues(parameter);              // Now check the length of the filename            if (fileName.Length > 255)            {              log.Debug("Filename too long: {0}"' fileName);              Options.Songlist[row.Index].Status = 2;              _main.TracksGridView.AddErrorMessage(row'                                                   String.Format("{0}: {1}"'                                                                 localisation.ToString("tag2filename"' "NameTooLong")'                                                                 fileName));              continue; // Process next row            }              // Check' if we would generate duplicate file names            foreach (DataGridViewRow file in tracksGrid.Rows)            {              TrackData filedata = Options.Songlist[file.Index];              if (filedata.FileName.ToLowerInvariant() == fileName.ToLowerInvariant())              {                log.Debug("New Filename already exists: {0}"' fileName);                Options.Songlist[row.Index].Status = 2;                _main.TracksGridView.AddErrorMessage(row'                                                     String.Format("{0}: {1}"'                                                                   localisation.ToString("tag2filename"' "FileExists")'                                                                   fileName));                bErrors = true;                break;              }            }              if (bErrors)            {              bErrors = false;              continue;            }              string ext = Path.GetExtension(track.FileName);              // Now that we have a correct Filename and no duplicates accept the changes            track.FileName = string.Format("{0}{1}"' fileName' ext);            track.Changed = true;              _main.TracksGridView.Changed = true;            _main.TracksGridView.SetBackgroundColorChanged(row.Index);            Options.Songlist[row.Index] = track;          }          catch (Exception ex)          {            log.Error("Error Renaming File: {0} stack: {1}"' ex.Message' ex.StackTrace);            Options.Songlist[row.Index].Status = 2;            _main.TracksGridView.AddErrorMessage(row'                                                 String.Format("{0}: {1}"' localisation.ToString("tag2filename"' "Rename")'                                                               fileName));            bErrors = true;          }        }
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,Tag2FileName,The following statement contains a magic number: foreach (DataGridViewRow row in tracksGrid.Rows)        {          if (!row.Selected)            continue;            string fileName = parameter;          track = Options.Songlist[row.Index];            try          {            fileName = ReplaceParametersWithValues(parameter);              // Now check the length of the filename            if (fileName.Length > 255)            {              log.Debug("Filename too long: {0}"' fileName);              Options.Songlist[row.Index].Status = 2;              _main.TracksGridView.AddErrorMessage(row'                                                   String.Format("{0}: {1}"'                                                                 localisation.ToString("tag2filename"' "NameTooLong")'                                                                 fileName));              continue; // Process next row            }              // Check' if we would generate duplicate file names            foreach (DataGridViewRow file in tracksGrid.Rows)            {              TrackData filedata = Options.Songlist[file.Index];              if (filedata.FileName.ToLowerInvariant() == fileName.ToLowerInvariant())              {                log.Debug("New Filename already exists: {0}"' fileName);                Options.Songlist[row.Index].Status = 2;                _main.TracksGridView.AddErrorMessage(row'                                                     String.Format("{0}: {1}"'                                                                   localisation.ToString("tag2filename"' "FileExists")'                                                                   fileName));                bErrors = true;                break;              }            }              if (bErrors)            {              bErrors = false;              continue;            }              string ext = Path.GetExtension(track.FileName);              // Now that we have a correct Filename and no duplicates accept the changes            track.FileName = string.Format("{0}{1}"' fileName' ext);            track.Changed = true;              _main.TracksGridView.Changed = true;            _main.TracksGridView.SetBackgroundColorChanged(row.Index);            Options.Songlist[row.Index] = track;          }          catch (Exception ex)          {            log.Error("Error Renaming File: {0} stack: {1}"' ex.Message' ex.StackTrace);            Options.Songlist[row.Index].Status = 2;            _main.TracksGridView.AddErrorMessage(row'                                                 String.Format("{0}: {1}"' localisation.ToString("tag2filename"' "Rename")'                                                               fileName));            bErrors = true;          }        }
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,Tag2FileName,The following statement contains a magic number: foreach (DataGridViewRow row in tracksGrid.Rows)        {          if (!row.Selected)            continue;            string fileName = parameter;          track = Options.Songlist[row.Index];            try          {            fileName = ReplaceParametersWithValues(parameter);              // Now check the length of the filename            if (fileName.Length > 255)            {              log.Debug("Filename too long: {0}"' fileName);              Options.Songlist[row.Index].Status = 2;              _main.TracksGridView.AddErrorMessage(row'                                                   String.Format("{0}: {1}"'                                                                 localisation.ToString("tag2filename"' "NameTooLong")'                                                                 fileName));              continue; // Process next row            }              // Check' if we would generate duplicate file names            foreach (DataGridViewRow file in tracksGrid.Rows)            {              TrackData filedata = Options.Songlist[file.Index];              if (filedata.FileName.ToLowerInvariant() == fileName.ToLowerInvariant())              {                log.Debug("New Filename already exists: {0}"' fileName);                Options.Songlist[row.Index].Status = 2;                _main.TracksGridView.AddErrorMessage(row'                                                     String.Format("{0}: {1}"'                                                                   localisation.ToString("tag2filename"' "FileExists")'                                                                   fileName));                bErrors = true;                break;              }            }              if (bErrors)            {              bErrors = false;              continue;            }              string ext = Path.GetExtension(track.FileName);              // Now that we have a correct Filename and no duplicates accept the changes            track.FileName = string.Format("{0}{1}"' fileName' ext);            track.Changed = true;              _main.TracksGridView.Changed = true;            _main.TracksGridView.SetBackgroundColorChanged(row.Index);            Options.Songlist[row.Index] = track;          }          catch (Exception ex)          {            log.Error("Error Renaming File: {0} stack: {1}"' ex.Message' ex.StackTrace);            Options.Songlist[row.Index].Status = 2;            _main.TracksGridView.AddErrorMessage(row'                                                 String.Format("{0}: {1}"' localisation.ToString("tag2filename"' "Rename")'                                                               fileName));            bErrors = true;          }        }
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,Tag2FileName,The following statement contains a magic number: foreach (DataGridViewRow row in tracksGrid.Rows)        {          if (!row.Selected)            continue;            string fileName = parameter;          track = Options.Songlist[row.Index];            try          {            fileName = ReplaceParametersWithValues(parameter);              // Now check the length of the filename            if (fileName.Length > 255)            {              log.Debug("Filename too long: {0}"' fileName);              Options.Songlist[row.Index].Status = 2;              _main.TracksGridView.AddErrorMessage(row'                                                   String.Format("{0}: {1}"'                                                                 localisation.ToString("tag2filename"' "NameTooLong")'                                                                 fileName));              continue; // Process next row            }              // Check' if we would generate duplicate file names            foreach (DataGridViewRow file in tracksGrid.Rows)            {              TrackData filedata = Options.Songlist[file.Index];              if (filedata.FileName.ToLowerInvariant() == fileName.ToLowerInvariant())              {                log.Debug("New Filename already exists: {0}"' fileName);                Options.Songlist[row.Index].Status = 2;                _main.TracksGridView.AddErrorMessage(row'                                                     String.Format("{0}: {1}"'                                                                   localisation.ToString("tag2filename"' "FileExists")'                                                                   fileName));                bErrors = true;                break;              }            }              if (bErrors)            {              bErrors = false;              continue;            }              string ext = Path.GetExtension(track.FileName);              // Now that we have a correct Filename and no duplicates accept the changes            track.FileName = string.Format("{0}{1}"' fileName' ext);            track.Changed = true;              _main.TracksGridView.Changed = true;            _main.TracksGridView.SetBackgroundColorChanged(row.Index);            Options.Songlist[row.Index] = track;          }          catch (Exception ex)          {            log.Error("Error Renaming File: {0} stack: {1}"' ex.Message' ex.StackTrace);            Options.Songlist[row.Index].Status = 2;            _main.TracksGridView.AddErrorMessage(row'                                                 String.Format("{0}: {1}"' localisation.ToString("tag2filename"' "Rename")'                                                               fileName));            bErrors = true;          }        }
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,FillPreview,The following statement contains a magic number: _previewForm.AddGridColumn(1' "NewFileName"' localisation.ToString("column_header"' "NewFileName")' 250);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,lblParm_Click,The following statement contains a magic number: if (parameter != String.Empty)        {          text = text.Insert(cursorPos' parameter);          cbFormat.Text = text;          cbFormat.SelectionStart = cursorPos + 3;        }
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,ProcessCmdKey,The following statement contains a magic number: if ((int)keyData == 13)   // Handle Enter key as default Apply Button        {          btApply_Click(null' new EventArgs());          return true;        }        else if ((int)keyData == 27)  // Handle Escape to Close the form        {          btCancel_Click(null' new EventArgs());          return true;        }
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,ProcessCmdKey,The following statement contains a magic number: if ((int)keyData == 13)   // Handle Enter key as default Apply Button        {          btApply_Click(null' new EventArgs());          return true;        }        else if ((int)keyData == 27)  // Handle Escape to Close the form        {          btCancel_Click(null' new EventArgs());          return true;        }
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.btApply.Location = new System.Drawing.Point(530' 18);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.btApply.Location = new System.Drawing.Point(530' 18);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.btApply.Size = new System.Drawing.Size(99' 23);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.btApply.Size = new System.Drawing.Size(99' 23);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.btApply.TabIndex = 3;
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.btCancel.Location = new System.Drawing.Point(635' 18);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.btCancel.Location = new System.Drawing.Point(635' 18);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.btCancel.Size = new System.Drawing.Size(99' 23);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.btCancel.Size = new System.Drawing.Size(99' 23);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.btCancel.TabIndex = 4;
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxParm.Location = new System.Drawing.Point(6' 14);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxParm.Location = new System.Drawing.Point(6' 14);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxParm.Size = new System.Drawing.Size(744' 197);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxParm.Size = new System.Drawing.Size(744' 197);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxParm.TabIndex = 22;
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownNumberDigits.Location = new System.Drawing.Point(274' 168);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownNumberDigits.Location = new System.Drawing.Point(274' 168);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownNumberDigits.Maximum = new decimal(new int[] {              10'              0'              0'              0});
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownNumberDigits.Size = new System.Drawing.Size(62' 20);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownNumberDigits.Size = new System.Drawing.Size(62' 20);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownNumberDigits.TabIndex = 23;
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownNumberDigits.Value = new decimal(new int[] {              2'              0'              0'              0});
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblNumberDigits.Location = new System.Drawing.Point(342' 170);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblNumberDigits.Location = new System.Drawing.Point(342' 170);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblNumberDigits.Size = new System.Drawing.Size(85' 13);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblNumberDigits.Size = new System.Drawing.Size(85' 13);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblNumberDigits.TabIndex = 22;
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownStartAt.Location = new System.Drawing.Point(274' 142);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownStartAt.Location = new System.Drawing.Point(274' 142);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownStartAt.Maximum = new decimal(new int[] {              9999'              0'              0'              0});
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownStartAt.Size = new System.Drawing.Size(62' 20);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownStartAt.Size = new System.Drawing.Size(62' 20);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownStartAt.TabIndex = 21;
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblStartAt.Location = new System.Drawing.Point(342' 144);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblStartAt.Location = new System.Drawing.Point(342' 144);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblStartAt.Size = new System.Drawing.Size(41' 13);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblStartAt.Size = new System.Drawing.Size(41' 13);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblStartAt.TabIndex = 20;
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmEnumerate.Location = new System.Drawing.Point(6' 159);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmEnumerate.Location = new System.Drawing.Point(6' 159);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmEnumerate.Size = new System.Drawing.Size(113' 13);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmEnumerate.Size = new System.Drawing.Size(113' 13);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmEnumerate.TabIndex = 19;
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblModifiedBy.Location = new System.Drawing.Point(6' 118);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblModifiedBy.Location = new System.Drawing.Point(6' 118);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblModifiedBy.Size = new System.Drawing.Size(141' 13);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblModifiedBy.Size = new System.Drawing.Size(141' 13);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblModifiedBy.TabIndex = 18;
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblBPM.Location = new System.Drawing.Point(271' 118);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblBPM.Location = new System.Drawing.Point(271' 118);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblBPM.Size = new System.Drawing.Size(61' 13);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblBPM.Size = new System.Drawing.Size(61' 13);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblBPM.TabIndex = 17;
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblSubTitle.Location = new System.Drawing.Point(533' 98);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblSubTitle.Location = new System.Drawing.Point(533' 98);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblSubTitle.Size = new System.Drawing.Size(77' 13);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblSubTitle.Size = new System.Drawing.Size(77' 13);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblSubTitle.TabIndex = 16;
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblContentGroup.Location = new System.Drawing.Point(533' 78);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblContentGroup.Location = new System.Drawing.Point(533' 78);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblContentGroup.Size = new System.Drawing.Size(108' 13);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblContentGroup.Size = new System.Drawing.Size(108' 13);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblContentGroup.TabIndex = 15;
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblComposer.Location = new System.Drawing.Point(533' 58);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblComposer.Location = new System.Drawing.Point(533' 58);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblComposer.Size = new System.Drawing.Size(86' 13);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblComposer.Size = new System.Drawing.Size(86' 13);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblComposer.TabIndex = 14;
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblConductor.Location = new System.Drawing.Point(271' 58);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblConductor.Location = new System.Drawing.Point(271' 58);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblConductor.Size = new System.Drawing.Size(88' 13);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblConductor.Size = new System.Drawing.Size(88' 13);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblConductor.TabIndex = 13;
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmFileName.Location = new System.Drawing.Point(533' 118);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmFileName.Location = new System.Drawing.Point(533' 118);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmFileName.Size = new System.Drawing.Size(116' 13);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmFileName.Size = new System.Drawing.Size(116' 13);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmFileName.TabIndex = 11;
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmComment.Location = new System.Drawing.Point(533' 38);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmComment.Location = new System.Drawing.Point(533' 38);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmComment.Size = new System.Drawing.Size(82' 13);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmComment.Size = new System.Drawing.Size(82' 13);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmComment.TabIndex = 10;
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblAlbumArtist.Location = new System.Drawing.Point(6' 58);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblAlbumArtist.Location = new System.Drawing.Point(6' 58);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblAlbumArtist.Size = new System.Drawing.Size(151' 13);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblAlbumArtist.Size = new System.Drawing.Size(151' 13);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblAlbumArtist.TabIndex = 9;
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmGenre.Location = new System.Drawing.Point(271' 38);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmGenre.Location = new System.Drawing.Point(271' 38);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmGenre.Size = new System.Drawing.Size(68' 13);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmGenre.Size = new System.Drawing.Size(68' 13);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmGenre.TabIndex = 8;
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmDiscTotal.Location = new System.Drawing.Point(271' 98);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmDiscTotal.Location = new System.Drawing.Point(271' 98);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmDiscTotal.Size = new System.Drawing.Size(110' 13);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmDiscTotal.Size = new System.Drawing.Size(110' 13);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmDiscTotal.TabIndex = 7;
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmDisc.Location = new System.Drawing.Point(6' 98);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmDisc.Location = new System.Drawing.Point(6' 98);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmDisc.Size = new System.Drawing.Size(100' 13);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmDisc.Size = new System.Drawing.Size(100' 13);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmDisc.TabIndex = 6;
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTrackTotal.Location = new System.Drawing.Point(271' 78);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTrackTotal.Location = new System.Drawing.Point(271' 78);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTrackTotal.Size = new System.Drawing.Size(115' 13);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTrackTotal.Size = new System.Drawing.Size(115' 13);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTrackTotal.TabIndex = 5;
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTrack.Location = new System.Drawing.Point(6' 78);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTrack.Location = new System.Drawing.Point(6' 78);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTrack.Size = new System.Drawing.Size(106' 13);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTrack.Size = new System.Drawing.Size(106' 13);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTrack.TabIndex = 4;
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmYear.Location = new System.Drawing.Point(6' 38);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmYear.Location = new System.Drawing.Point(6' 38);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmYear.Size = new System.Drawing.Size(60' 13);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmYear.Size = new System.Drawing.Size(60' 13);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmYear.TabIndex = 3;
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmAlbum.Location = new System.Drawing.Point(533' 17);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmAlbum.Location = new System.Drawing.Point(533' 17);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmAlbum.Size = new System.Drawing.Size(67' 13);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmAlbum.Size = new System.Drawing.Size(67' 13);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmAlbum.TabIndex = 2;
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTitle.Location = new System.Drawing.Point(271' 16);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTitle.Location = new System.Drawing.Point(271' 16);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTitle.Size = new System.Drawing.Size(58' 13);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmTitle.Size = new System.Drawing.Size(58' 13);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmArtist.Location = new System.Drawing.Point(6' 17);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmArtist.Location = new System.Drawing.Point(6' 17);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmArtist.Size = new System.Drawing.Size(61' 13);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.lblParmArtist.Size = new System.Drawing.Size(61' 13);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.labelHeader.Location = new System.Drawing.Point(18' 18);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.labelHeader.Location = new System.Drawing.Point(18' 18);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.labelHeader.Size = new System.Drawing.Size(62' 20);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.labelHeader.Size = new System.Drawing.Size(62' 20);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.labelHeader.TabIndex = 23;
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.GroupBoxFormat.Location = new System.Drawing.Point(16' 54);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.GroupBoxFormat.Location = new System.Drawing.Point(16' 54);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.GroupBoxFormat.Size = new System.Drawing.Size(744' 82);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.GroupBoxFormat.Size = new System.Drawing.Size(744' 82);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.GroupBoxFormat.TabIndex = 24;
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.btReview.Location = new System.Drawing.Point(422' 48);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.btReview.Location = new System.Drawing.Point(422' 48);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.btReview.Size = new System.Drawing.Size(200' 23);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.btReview.Size = new System.Drawing.Size(200' 23);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.btReview.TabIndex = 18;
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.btRemoveFormat.Location = new System.Drawing.Point(216' 48);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.btRemoveFormat.Location = new System.Drawing.Point(216' 48);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.btRemoveFormat.Size = new System.Drawing.Size(200' 23);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.btRemoveFormat.Size = new System.Drawing.Size(200' 23);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.btRemoveFormat.TabIndex = 5;
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.btAddFormat.Location = new System.Drawing.Point(10' 48);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.btAddFormat.Location = new System.Drawing.Point(10' 48);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.btAddFormat.Size = new System.Drawing.Size(200' 23);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.btAddFormat.Size = new System.Drawing.Size(200' 23);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.btAddFormat.TabIndex = 4;
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.cbFormat.Location = new System.Drawing.Point(10' 21);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.cbFormat.Location = new System.Drawing.Point(10' 21);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.cbFormat.Size = new System.Drawing.Size(708' 21);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.cbFormat.Size = new System.Drawing.Size(708' 21);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.cbFormat.TabIndex = 3;
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.tabControl1.Location = new System.Drawing.Point(19' 154);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.tabControl1.Location = new System.Drawing.Point(19' 154);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.tabControl1.Size = new System.Drawing.Size(744' 246);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.tabControl1.Size = new System.Drawing.Size(744' 246);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.tabControl1.TabIndex = 22;
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.tabPageParameter.Size = new System.Drawing.Size(742' 225);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.tabPageParameter.Size = new System.Drawing.Size(742' 225);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.tabPagePreview.Size = new System.Drawing.Size(742' 225);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.tabPagePreview.Size = new System.Drawing.Size(742' 225);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.mptPanel1.Size = new System.Drawing.Size(780' 410);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.mptPanel1.Size = new System.Drawing.Size(780' 410);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.mptPanel1.TabIndex = 25;
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.MaximumSize = new System.Drawing.Size(780' 410);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.MaximumSize = new System.Drawing.Size(780' 410);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size(780' 410);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size(780' 410);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(780' 410);
Magic Number,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(780' 410);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,timerUpdate_Tick,The following statement contains a magic number: if (_tickCounter == 5)        {          // display the position every 250ms (since timer is 50ms)          _tickCounter = 0;          double elapsedtime = Bass.BASS_ChannelBytes2Seconds(_stream' Bass.BASS_ChannelGetPosition(_stream));            // the elapsed time length          string timeFormatted = String.Format("{0:#0:00}"' Utils.FixTimespan(elapsedtime' "MMSS"));            // Move the PlaybackSlider          playBackSlider.Value = (int)(Math.Round((elapsedtime / _songLength)' 2) * 100.0);            // Now Paint the time to the Picturebox          Graphics g = Graphics.FromHwnd(pictureBoxTime.Handle);          g.SmoothingMode = SmoothingMode.AntiAlias;          g.Clear(Color.Black);          g.DrawString(timeFormatted' new Font("Verdana"' 18)' new SolidBrush(Color.CornflowerBlue)' 0' 0);          g.Dispose();        }
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,timerUpdate_Tick,The following statement contains a magic number: if (_tickCounter == 5)        {          // display the position every 250ms (since timer is 50ms)          _tickCounter = 0;          double elapsedtime = Bass.BASS_ChannelBytes2Seconds(_stream' Bass.BASS_ChannelGetPosition(_stream));            // the elapsed time length          string timeFormatted = String.Format("{0:#0:00}"' Utils.FixTimespan(elapsedtime' "MMSS"));            // Move the PlaybackSlider          playBackSlider.Value = (int)(Math.Round((elapsedtime / _songLength)' 2) * 100.0);            // Now Paint the time to the Picturebox          Graphics g = Graphics.FromHwnd(pictureBoxTime.Handle);          g.SmoothingMode = SmoothingMode.AntiAlias;          g.Clear(Color.Black);          g.DrawString(timeFormatted' new Font("Verdana"' 18)' new SolidBrush(Color.CornflowerBlue)' 0' 0);          g.Dispose();        }
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,timerUpdate_Tick,The following statement contains a magic number: if (_tickCounter == 5)        {          // display the position every 250ms (since timer is 50ms)          _tickCounter = 0;          double elapsedtime = Bass.BASS_ChannelBytes2Seconds(_stream' Bass.BASS_ChannelGetPosition(_stream));            // the elapsed time length          string timeFormatted = String.Format("{0:#0:00}"' Utils.FixTimespan(elapsedtime' "MMSS"));            // Move the PlaybackSlider          playBackSlider.Value = (int)(Math.Round((elapsedtime / _songLength)' 2) * 100.0);            // Now Paint the time to the Picturebox          Graphics g = Graphics.FromHwnd(pictureBoxTime.Handle);          g.SmoothingMode = SmoothingMode.AntiAlias;          g.Clear(Color.Black);          g.DrawString(timeFormatted' new Font("Verdana"' 18)' new SolidBrush(Color.CornflowerBlue)' 0' 0);          g.Dispose();        }
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,timerUpdate_Tick,The following statement contains a magic number: if (_tickCounter == 5)        {          // display the position every 250ms (since timer is 50ms)          _tickCounter = 0;          double elapsedtime = Bass.BASS_ChannelBytes2Seconds(_stream' Bass.BASS_ChannelGetPosition(_stream));            // the elapsed time length          string timeFormatted = String.Format("{0:#0:00}"' Utils.FixTimespan(elapsedtime' "MMSS"));            // Move the PlaybackSlider          playBackSlider.Value = (int)(Math.Round((elapsedtime / _songLength)' 2) * 100.0);            // Now Paint the time to the Picturebox          Graphics g = Graphics.FromHwnd(pictureBoxTime.Handle);          g.SmoothingMode = SmoothingMode.AntiAlias;          g.Clear(Color.Black);          g.DrawString(timeFormatted' new Font("Verdana"' 18)' new SolidBrush(Color.CornflowerBlue)' 0' 0);          g.Dispose();        }
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,buttonPlay_Click,The following statement contains a magic number: if (Bass.BASS_GetDevice() == 0)        {          // Using the play function for the first time          log.Info("Player: Bass not Initialised. Doing Initialisation");          Bass.BASS_Free();          if (!Bass.BASS_Init(_defaultSoundDevice' 44100' BASSInit.BASS_DEVICE_DEFAULT' IntPtr.Zero))          {            int error = (int)Bass.BASS_ErrorGetCode();            log.Error("Player: Error Init Bass: {0}"' Enum.GetName(typeof (BASSError)' error));            return;          }        }
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,playBackSlider_Scroll,The following statement contains a magic number: double newPos = _songLength * playBackSlider.Value / 100.00;
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,pictureBoxSpectrum_MouseDown,The following statement contains a magic number: if (_specIdx > 15)          _specIdx = 0;
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,pictureBoxSpectrum_MouseDown,The following statement contains a magic number: if (_specIdx < 0)          _specIdx = 15;
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,DrawSpectrum,The following statement contains a magic number: switch (_specIdx)        {            // normal spectrum (width = resolution)          case 0:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Lime' Color.Red' Color.Black' false' false' false);            break;            // normal spectrum (full resolution)          case 1:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.SteelBlue' Color.Pink' Color.Black' false' true' true);            break;            // line spectrum (width = resolution)          case 2:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                               Color.Black' 2' 2' false' false' false);            break;            // line spectrum (full resolution)          case 3:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                               Color.Black' 16' 4' false' true' true);            break;            // ellipse spectrum (width = resolution)          case 4:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                                  Color.Black' 1' 2' false' false' false);            break;            // ellipse spectrum (full resolution)          case 5:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                                  Color.Black' 2' 4' false' true' true);            break;            // dot spectrum (width = resolution)          case 6:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.Lime' Color.Red' Color.Black' 1' 0' false' false'                                                              false);            break;            // dot spectrum (full resolution)          case 7:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.SteelBlue' Color.Pink' Color.Black' 2' 1' false' false'                                                              true);            break;            // peak spectrum (width = resolution)          case 8:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.SeaGreen'                                                                   Color.LightGreen' Color.Orange' Color.Black' 2' 1' 2'                                                                   10' false' false' false);            break;            // peak spectrum (full resolution)          case 9:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.GreenYellow'                                                                   Color.RoyalBlue' Color.DarkOrange' Color.Black' 23' 5'                                                                   3' 5' false' true' true);            break;            // wave spectrum (width = resolution)          case 10:            pictureBoxSpectrum.Image = _vis.CreateSpectrumWave(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Yellow' Color.Orange'                                                               Color.Black' 1' false' false' false);            break;            // dancing beans spectrum (width = resolution)          case 11:            pictureBoxSpectrum.Image = _vis.CreateSpectrumBean(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Chocolate'                                                               Color.DarkGoldenrod' Color.Black' 4' false' false' true);            break;            // dancing text spectrum (width = resolution)          case 12:            pictureBoxSpectrum.Image = _vis.CreateSpectrumText(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.White' Color.Tomato'                                                               Color.Black' "MPTagThat is Great"' false' false' true);            break;            // frequency detection          case 13:            float amp = _vis.DetectFrequency(_stream' 10' 500' true);            if (amp > 0.3)              pictureBoxSpectrum.BackColor = Color.Red;            else              pictureBoxSpectrum.BackColor = Color.Black;            break;            // 3D voice print          case 14:            // we need to draw directly directly on the picture box...            // normally you would encapsulate this in your own custom control            Graphics g = Graphics.FromHwnd(pictureBoxSpectrum.Handle);            g.SmoothingMode = SmoothingMode.AntiAlias;            _vis.CreateSpectrum3DVoicePrint(_stream' g'                                            new Rectangle(0' 0' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height)'                                            Color.Black' Color.White' _voicePrintIdx' false' false);            g.Dispose();            // next call will be at the next pos            _voicePrintIdx++;            if (_voicePrintIdx > pictureBoxSpectrum.Width - 1)              _voicePrintIdx = 0;            break;            // WaveForm          case 15:            pictureBoxSpectrum.Image = _vis.CreateWaveForm(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Green' Color.Red' Color.Gray' Color.Black' 1' true' false'                                                           true);            break;        }
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,DrawSpectrum,The following statement contains a magic number: switch (_specIdx)        {            // normal spectrum (width = resolution)          case 0:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Lime' Color.Red' Color.Black' false' false' false);            break;            // normal spectrum (full resolution)          case 1:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.SteelBlue' Color.Pink' Color.Black' false' true' true);            break;            // line spectrum (width = resolution)          case 2:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                               Color.Black' 2' 2' false' false' false);            break;            // line spectrum (full resolution)          case 3:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                               Color.Black' 16' 4' false' true' true);            break;            // ellipse spectrum (width = resolution)          case 4:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                                  Color.Black' 1' 2' false' false' false);            break;            // ellipse spectrum (full resolution)          case 5:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                                  Color.Black' 2' 4' false' true' true);            break;            // dot spectrum (width = resolution)          case 6:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.Lime' Color.Red' Color.Black' 1' 0' false' false'                                                              false);            break;            // dot spectrum (full resolution)          case 7:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.SteelBlue' Color.Pink' Color.Black' 2' 1' false' false'                                                              true);            break;            // peak spectrum (width = resolution)          case 8:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.SeaGreen'                                                                   Color.LightGreen' Color.Orange' Color.Black' 2' 1' 2'                                                                   10' false' false' false);            break;            // peak spectrum (full resolution)          case 9:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.GreenYellow'                                                                   Color.RoyalBlue' Color.DarkOrange' Color.Black' 23' 5'                                                                   3' 5' false' true' true);            break;            // wave spectrum (width = resolution)          case 10:            pictureBoxSpectrum.Image = _vis.CreateSpectrumWave(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Yellow' Color.Orange'                                                               Color.Black' 1' false' false' false);            break;            // dancing beans spectrum (width = resolution)          case 11:            pictureBoxSpectrum.Image = _vis.CreateSpectrumBean(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Chocolate'                                                               Color.DarkGoldenrod' Color.Black' 4' false' false' true);            break;            // dancing text spectrum (width = resolution)          case 12:            pictureBoxSpectrum.Image = _vis.CreateSpectrumText(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.White' Color.Tomato'                                                               Color.Black' "MPTagThat is Great"' false' false' true);            break;            // frequency detection          case 13:            float amp = _vis.DetectFrequency(_stream' 10' 500' true);            if (amp > 0.3)              pictureBoxSpectrum.BackColor = Color.Red;            else              pictureBoxSpectrum.BackColor = Color.Black;            break;            // 3D voice print          case 14:            // we need to draw directly directly on the picture box...            // normally you would encapsulate this in your own custom control            Graphics g = Graphics.FromHwnd(pictureBoxSpectrum.Handle);            g.SmoothingMode = SmoothingMode.AntiAlias;            _vis.CreateSpectrum3DVoicePrint(_stream' g'                                            new Rectangle(0' 0' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height)'                                            Color.Black' Color.White' _voicePrintIdx' false' false);            g.Dispose();            // next call will be at the next pos            _voicePrintIdx++;            if (_voicePrintIdx > pictureBoxSpectrum.Width - 1)              _voicePrintIdx = 0;            break;            // WaveForm          case 15:            pictureBoxSpectrum.Image = _vis.CreateWaveForm(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Green' Color.Red' Color.Gray' Color.Black' 1' true' false'                                                           true);            break;        }
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,DrawSpectrum,The following statement contains a magic number: switch (_specIdx)        {            // normal spectrum (width = resolution)          case 0:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Lime' Color.Red' Color.Black' false' false' false);            break;            // normal spectrum (full resolution)          case 1:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.SteelBlue' Color.Pink' Color.Black' false' true' true);            break;            // line spectrum (width = resolution)          case 2:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                               Color.Black' 2' 2' false' false' false);            break;            // line spectrum (full resolution)          case 3:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                               Color.Black' 16' 4' false' true' true);            break;            // ellipse spectrum (width = resolution)          case 4:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                                  Color.Black' 1' 2' false' false' false);            break;            // ellipse spectrum (full resolution)          case 5:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                                  Color.Black' 2' 4' false' true' true);            break;            // dot spectrum (width = resolution)          case 6:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.Lime' Color.Red' Color.Black' 1' 0' false' false'                                                              false);            break;            // dot spectrum (full resolution)          case 7:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.SteelBlue' Color.Pink' Color.Black' 2' 1' false' false'                                                              true);            break;            // peak spectrum (width = resolution)          case 8:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.SeaGreen'                                                                   Color.LightGreen' Color.Orange' Color.Black' 2' 1' 2'                                                                   10' false' false' false);            break;            // peak spectrum (full resolution)          case 9:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.GreenYellow'                                                                   Color.RoyalBlue' Color.DarkOrange' Color.Black' 23' 5'                                                                   3' 5' false' true' true);            break;            // wave spectrum (width = resolution)          case 10:            pictureBoxSpectrum.Image = _vis.CreateSpectrumWave(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Yellow' Color.Orange'                                                               Color.Black' 1' false' false' false);            break;            // dancing beans spectrum (width = resolution)          case 11:            pictureBoxSpectrum.Image = _vis.CreateSpectrumBean(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Chocolate'                                                               Color.DarkGoldenrod' Color.Black' 4' false' false' true);            break;            // dancing text spectrum (width = resolution)          case 12:            pictureBoxSpectrum.Image = _vis.CreateSpectrumText(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.White' Color.Tomato'                                                               Color.Black' "MPTagThat is Great"' false' false' true);            break;            // frequency detection          case 13:            float amp = _vis.DetectFrequency(_stream' 10' 500' true);            if (amp > 0.3)              pictureBoxSpectrum.BackColor = Color.Red;            else              pictureBoxSpectrum.BackColor = Color.Black;            break;            // 3D voice print          case 14:            // we need to draw directly directly on the picture box...            // normally you would encapsulate this in your own custom control            Graphics g = Graphics.FromHwnd(pictureBoxSpectrum.Handle);            g.SmoothingMode = SmoothingMode.AntiAlias;            _vis.CreateSpectrum3DVoicePrint(_stream' g'                                            new Rectangle(0' 0' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height)'                                            Color.Black' Color.White' _voicePrintIdx' false' false);            g.Dispose();            // next call will be at the next pos            _voicePrintIdx++;            if (_voicePrintIdx > pictureBoxSpectrum.Width - 1)              _voicePrintIdx = 0;            break;            // WaveForm          case 15:            pictureBoxSpectrum.Image = _vis.CreateWaveForm(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Green' Color.Red' Color.Gray' Color.Black' 1' true' false'                                                           true);            break;        }
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,DrawSpectrum,The following statement contains a magic number: switch (_specIdx)        {            // normal spectrum (width = resolution)          case 0:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Lime' Color.Red' Color.Black' false' false' false);            break;            // normal spectrum (full resolution)          case 1:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.SteelBlue' Color.Pink' Color.Black' false' true' true);            break;            // line spectrum (width = resolution)          case 2:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                               Color.Black' 2' 2' false' false' false);            break;            // line spectrum (full resolution)          case 3:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                               Color.Black' 16' 4' false' true' true);            break;            // ellipse spectrum (width = resolution)          case 4:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                                  Color.Black' 1' 2' false' false' false);            break;            // ellipse spectrum (full resolution)          case 5:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                                  Color.Black' 2' 4' false' true' true);            break;            // dot spectrum (width = resolution)          case 6:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.Lime' Color.Red' Color.Black' 1' 0' false' false'                                                              false);            break;            // dot spectrum (full resolution)          case 7:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.SteelBlue' Color.Pink' Color.Black' 2' 1' false' false'                                                              true);            break;            // peak spectrum (width = resolution)          case 8:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.SeaGreen'                                                                   Color.LightGreen' Color.Orange' Color.Black' 2' 1' 2'                                                                   10' false' false' false);            break;            // peak spectrum (full resolution)          case 9:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.GreenYellow'                                                                   Color.RoyalBlue' Color.DarkOrange' Color.Black' 23' 5'                                                                   3' 5' false' true' true);            break;            // wave spectrum (width = resolution)          case 10:            pictureBoxSpectrum.Image = _vis.CreateSpectrumWave(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Yellow' Color.Orange'                                                               Color.Black' 1' false' false' false);            break;            // dancing beans spectrum (width = resolution)          case 11:            pictureBoxSpectrum.Image = _vis.CreateSpectrumBean(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Chocolate'                                                               Color.DarkGoldenrod' Color.Black' 4' false' false' true);            break;            // dancing text spectrum (width = resolution)          case 12:            pictureBoxSpectrum.Image = _vis.CreateSpectrumText(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.White' Color.Tomato'                                                               Color.Black' "MPTagThat is Great"' false' false' true);            break;            // frequency detection          case 13:            float amp = _vis.DetectFrequency(_stream' 10' 500' true);            if (amp > 0.3)              pictureBoxSpectrum.BackColor = Color.Red;            else              pictureBoxSpectrum.BackColor = Color.Black;            break;            // 3D voice print          case 14:            // we need to draw directly directly on the picture box...            // normally you would encapsulate this in your own custom control            Graphics g = Graphics.FromHwnd(pictureBoxSpectrum.Handle);            g.SmoothingMode = SmoothingMode.AntiAlias;            _vis.CreateSpectrum3DVoicePrint(_stream' g'                                            new Rectangle(0' 0' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height)'                                            Color.Black' Color.White' _voicePrintIdx' false' false);            g.Dispose();            // next call will be at the next pos            _voicePrintIdx++;            if (_voicePrintIdx > pictureBoxSpectrum.Width - 1)              _voicePrintIdx = 0;            break;            // WaveForm          case 15:            pictureBoxSpectrum.Image = _vis.CreateWaveForm(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Green' Color.Red' Color.Gray' Color.Black' 1' true' false'                                                           true);            break;        }
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,DrawSpectrum,The following statement contains a magic number: switch (_specIdx)        {            // normal spectrum (width = resolution)          case 0:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Lime' Color.Red' Color.Black' false' false' false);            break;            // normal spectrum (full resolution)          case 1:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.SteelBlue' Color.Pink' Color.Black' false' true' true);            break;            // line spectrum (width = resolution)          case 2:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                               Color.Black' 2' 2' false' false' false);            break;            // line spectrum (full resolution)          case 3:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                               Color.Black' 16' 4' false' true' true);            break;            // ellipse spectrum (width = resolution)          case 4:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                                  Color.Black' 1' 2' false' false' false);            break;            // ellipse spectrum (full resolution)          case 5:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                                  Color.Black' 2' 4' false' true' true);            break;            // dot spectrum (width = resolution)          case 6:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.Lime' Color.Red' Color.Black' 1' 0' false' false'                                                              false);            break;            // dot spectrum (full resolution)          case 7:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.SteelBlue' Color.Pink' Color.Black' 2' 1' false' false'                                                              true);            break;            // peak spectrum (width = resolution)          case 8:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.SeaGreen'                                                                   Color.LightGreen' Color.Orange' Color.Black' 2' 1' 2'                                                                   10' false' false' false);            break;            // peak spectrum (full resolution)          case 9:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.GreenYellow'                                                                   Color.RoyalBlue' Color.DarkOrange' Color.Black' 23' 5'                                                                   3' 5' false' true' true);            break;            // wave spectrum (width = resolution)          case 10:            pictureBoxSpectrum.Image = _vis.CreateSpectrumWave(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Yellow' Color.Orange'                                                               Color.Black' 1' false' false' false);            break;            // dancing beans spectrum (width = resolution)          case 11:            pictureBoxSpectrum.Image = _vis.CreateSpectrumBean(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Chocolate'                                                               Color.DarkGoldenrod' Color.Black' 4' false' false' true);            break;            // dancing text spectrum (width = resolution)          case 12:            pictureBoxSpectrum.Image = _vis.CreateSpectrumText(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.White' Color.Tomato'                                                               Color.Black' "MPTagThat is Great"' false' false' true);            break;            // frequency detection          case 13:            float amp = _vis.DetectFrequency(_stream' 10' 500' true);            if (amp > 0.3)              pictureBoxSpectrum.BackColor = Color.Red;            else              pictureBoxSpectrum.BackColor = Color.Black;            break;            // 3D voice print          case 14:            // we need to draw directly directly on the picture box...            // normally you would encapsulate this in your own custom control            Graphics g = Graphics.FromHwnd(pictureBoxSpectrum.Handle);            g.SmoothingMode = SmoothingMode.AntiAlias;            _vis.CreateSpectrum3DVoicePrint(_stream' g'                                            new Rectangle(0' 0' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height)'                                            Color.Black' Color.White' _voicePrintIdx' false' false);            g.Dispose();            // next call will be at the next pos            _voicePrintIdx++;            if (_voicePrintIdx > pictureBoxSpectrum.Width - 1)              _voicePrintIdx = 0;            break;            // WaveForm          case 15:            pictureBoxSpectrum.Image = _vis.CreateWaveForm(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Green' Color.Red' Color.Gray' Color.Black' 1' true' false'                                                           true);            break;        }
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,DrawSpectrum,The following statement contains a magic number: switch (_specIdx)        {            // normal spectrum (width = resolution)          case 0:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Lime' Color.Red' Color.Black' false' false' false);            break;            // normal spectrum (full resolution)          case 1:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.SteelBlue' Color.Pink' Color.Black' false' true' true);            break;            // line spectrum (width = resolution)          case 2:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                               Color.Black' 2' 2' false' false' false);            break;            // line spectrum (full resolution)          case 3:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                               Color.Black' 16' 4' false' true' true);            break;            // ellipse spectrum (width = resolution)          case 4:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                                  Color.Black' 1' 2' false' false' false);            break;            // ellipse spectrum (full resolution)          case 5:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                                  Color.Black' 2' 4' false' true' true);            break;            // dot spectrum (width = resolution)          case 6:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.Lime' Color.Red' Color.Black' 1' 0' false' false'                                                              false);            break;            // dot spectrum (full resolution)          case 7:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.SteelBlue' Color.Pink' Color.Black' 2' 1' false' false'                                                              true);            break;            // peak spectrum (width = resolution)          case 8:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.SeaGreen'                                                                   Color.LightGreen' Color.Orange' Color.Black' 2' 1' 2'                                                                   10' false' false' false);            break;            // peak spectrum (full resolution)          case 9:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.GreenYellow'                                                                   Color.RoyalBlue' Color.DarkOrange' Color.Black' 23' 5'                                                                   3' 5' false' true' true);            break;            // wave spectrum (width = resolution)          case 10:            pictureBoxSpectrum.Image = _vis.CreateSpectrumWave(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Yellow' Color.Orange'                                                               Color.Black' 1' false' false' false);            break;            // dancing beans spectrum (width = resolution)          case 11:            pictureBoxSpectrum.Image = _vis.CreateSpectrumBean(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Chocolate'                                                               Color.DarkGoldenrod' Color.Black' 4' false' false' true);            break;            // dancing text spectrum (width = resolution)          case 12:            pictureBoxSpectrum.Image = _vis.CreateSpectrumText(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.White' Color.Tomato'                                                               Color.Black' "MPTagThat is Great"' false' false' true);            break;            // frequency detection          case 13:            float amp = _vis.DetectFrequency(_stream' 10' 500' true);            if (amp > 0.3)              pictureBoxSpectrum.BackColor = Color.Red;            else              pictureBoxSpectrum.BackColor = Color.Black;            break;            // 3D voice print          case 14:            // we need to draw directly directly on the picture box...            // normally you would encapsulate this in your own custom control            Graphics g = Graphics.FromHwnd(pictureBoxSpectrum.Handle);            g.SmoothingMode = SmoothingMode.AntiAlias;            _vis.CreateSpectrum3DVoicePrint(_stream' g'                                            new Rectangle(0' 0' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height)'                                            Color.Black' Color.White' _voicePrintIdx' false' false);            g.Dispose();            // next call will be at the next pos            _voicePrintIdx++;            if (_voicePrintIdx > pictureBoxSpectrum.Width - 1)              _voicePrintIdx = 0;            break;            // WaveForm          case 15:            pictureBoxSpectrum.Image = _vis.CreateWaveForm(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Green' Color.Red' Color.Gray' Color.Black' 1' true' false'                                                           true);            break;        }
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,DrawSpectrum,The following statement contains a magic number: switch (_specIdx)        {            // normal spectrum (width = resolution)          case 0:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Lime' Color.Red' Color.Black' false' false' false);            break;            // normal spectrum (full resolution)          case 1:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.SteelBlue' Color.Pink' Color.Black' false' true' true);            break;            // line spectrum (width = resolution)          case 2:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                               Color.Black' 2' 2' false' false' false);            break;            // line spectrum (full resolution)          case 3:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                               Color.Black' 16' 4' false' true' true);            break;            // ellipse spectrum (width = resolution)          case 4:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                                  Color.Black' 1' 2' false' false' false);            break;            // ellipse spectrum (full resolution)          case 5:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                                  Color.Black' 2' 4' false' true' true);            break;            // dot spectrum (width = resolution)          case 6:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.Lime' Color.Red' Color.Black' 1' 0' false' false'                                                              false);            break;            // dot spectrum (full resolution)          case 7:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.SteelBlue' Color.Pink' Color.Black' 2' 1' false' false'                                                              true);            break;            // peak spectrum (width = resolution)          case 8:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.SeaGreen'                                                                   Color.LightGreen' Color.Orange' Color.Black' 2' 1' 2'                                                                   10' false' false' false);            break;            // peak spectrum (full resolution)          case 9:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.GreenYellow'                                                                   Color.RoyalBlue' Color.DarkOrange' Color.Black' 23' 5'                                                                   3' 5' false' true' true);            break;            // wave spectrum (width = resolution)          case 10:            pictureBoxSpectrum.Image = _vis.CreateSpectrumWave(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Yellow' Color.Orange'                                                               Color.Black' 1' false' false' false);            break;            // dancing beans spectrum (width = resolution)          case 11:            pictureBoxSpectrum.Image = _vis.CreateSpectrumBean(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Chocolate'                                                               Color.DarkGoldenrod' Color.Black' 4' false' false' true);            break;            // dancing text spectrum (width = resolution)          case 12:            pictureBoxSpectrum.Image = _vis.CreateSpectrumText(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.White' Color.Tomato'                                                               Color.Black' "MPTagThat is Great"' false' false' true);            break;            // frequency detection          case 13:            float amp = _vis.DetectFrequency(_stream' 10' 500' true);            if (amp > 0.3)              pictureBoxSpectrum.BackColor = Color.Red;            else              pictureBoxSpectrum.BackColor = Color.Black;            break;            // 3D voice print          case 14:            // we need to draw directly directly on the picture box...            // normally you would encapsulate this in your own custom control            Graphics g = Graphics.FromHwnd(pictureBoxSpectrum.Handle);            g.SmoothingMode = SmoothingMode.AntiAlias;            _vis.CreateSpectrum3DVoicePrint(_stream' g'                                            new Rectangle(0' 0' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height)'                                            Color.Black' Color.White' _voicePrintIdx' false' false);            g.Dispose();            // next call will be at the next pos            _voicePrintIdx++;            if (_voicePrintIdx > pictureBoxSpectrum.Width - 1)              _voicePrintIdx = 0;            break;            // WaveForm          case 15:            pictureBoxSpectrum.Image = _vis.CreateWaveForm(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Green' Color.Red' Color.Gray' Color.Black' 1' true' false'                                                           true);            break;        }
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,DrawSpectrum,The following statement contains a magic number: switch (_specIdx)        {            // normal spectrum (width = resolution)          case 0:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Lime' Color.Red' Color.Black' false' false' false);            break;            // normal spectrum (full resolution)          case 1:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.SteelBlue' Color.Pink' Color.Black' false' true' true);            break;            // line spectrum (width = resolution)          case 2:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                               Color.Black' 2' 2' false' false' false);            break;            // line spectrum (full resolution)          case 3:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                               Color.Black' 16' 4' false' true' true);            break;            // ellipse spectrum (width = resolution)          case 4:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                                  Color.Black' 1' 2' false' false' false);            break;            // ellipse spectrum (full resolution)          case 5:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                                  Color.Black' 2' 4' false' true' true);            break;            // dot spectrum (width = resolution)          case 6:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.Lime' Color.Red' Color.Black' 1' 0' false' false'                                                              false);            break;            // dot spectrum (full resolution)          case 7:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.SteelBlue' Color.Pink' Color.Black' 2' 1' false' false'                                                              true);            break;            // peak spectrum (width = resolution)          case 8:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.SeaGreen'                                                                   Color.LightGreen' Color.Orange' Color.Black' 2' 1' 2'                                                                   10' false' false' false);            break;            // peak spectrum (full resolution)          case 9:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.GreenYellow'                                                                   Color.RoyalBlue' Color.DarkOrange' Color.Black' 23' 5'                                                                   3' 5' false' true' true);            break;            // wave spectrum (width = resolution)          case 10:            pictureBoxSpectrum.Image = _vis.CreateSpectrumWave(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Yellow' Color.Orange'                                                               Color.Black' 1' false' false' false);            break;            // dancing beans spectrum (width = resolution)          case 11:            pictureBoxSpectrum.Image = _vis.CreateSpectrumBean(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Chocolate'                                                               Color.DarkGoldenrod' Color.Black' 4' false' false' true);            break;            // dancing text spectrum (width = resolution)          case 12:            pictureBoxSpectrum.Image = _vis.CreateSpectrumText(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.White' Color.Tomato'                                                               Color.Black' "MPTagThat is Great"' false' false' true);            break;            // frequency detection          case 13:            float amp = _vis.DetectFrequency(_stream' 10' 500' true);            if (amp > 0.3)              pictureBoxSpectrum.BackColor = Color.Red;            else              pictureBoxSpectrum.BackColor = Color.Black;            break;            // 3D voice print          case 14:            // we need to draw directly directly on the picture box...            // normally you would encapsulate this in your own custom control            Graphics g = Graphics.FromHwnd(pictureBoxSpectrum.Handle);            g.SmoothingMode = SmoothingMode.AntiAlias;            _vis.CreateSpectrum3DVoicePrint(_stream' g'                                            new Rectangle(0' 0' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height)'                                            Color.Black' Color.White' _voicePrintIdx' false' false);            g.Dispose();            // next call will be at the next pos            _voicePrintIdx++;            if (_voicePrintIdx > pictureBoxSpectrum.Width - 1)              _voicePrintIdx = 0;            break;            // WaveForm          case 15:            pictureBoxSpectrum.Image = _vis.CreateWaveForm(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Green' Color.Red' Color.Gray' Color.Black' 1' true' false'                                                           true);            break;        }
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,DrawSpectrum,The following statement contains a magic number: switch (_specIdx)        {            // normal spectrum (width = resolution)          case 0:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Lime' Color.Red' Color.Black' false' false' false);            break;            // normal spectrum (full resolution)          case 1:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.SteelBlue' Color.Pink' Color.Black' false' true' true);            break;            // line spectrum (width = resolution)          case 2:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                               Color.Black' 2' 2' false' false' false);            break;            // line spectrum (full resolution)          case 3:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                               Color.Black' 16' 4' false' true' true);            break;            // ellipse spectrum (width = resolution)          case 4:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                                  Color.Black' 1' 2' false' false' false);            break;            // ellipse spectrum (full resolution)          case 5:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                                  Color.Black' 2' 4' false' true' true);            break;            // dot spectrum (width = resolution)          case 6:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.Lime' Color.Red' Color.Black' 1' 0' false' false'                                                              false);            break;            // dot spectrum (full resolution)          case 7:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.SteelBlue' Color.Pink' Color.Black' 2' 1' false' false'                                                              true);            break;            // peak spectrum (width = resolution)          case 8:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.SeaGreen'                                                                   Color.LightGreen' Color.Orange' Color.Black' 2' 1' 2'                                                                   10' false' false' false);            break;            // peak spectrum (full resolution)          case 9:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.GreenYellow'                                                                   Color.RoyalBlue' Color.DarkOrange' Color.Black' 23' 5'                                                                   3' 5' false' true' true);            break;            // wave spectrum (width = resolution)          case 10:            pictureBoxSpectrum.Image = _vis.CreateSpectrumWave(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Yellow' Color.Orange'                                                               Color.Black' 1' false' false' false);            break;            // dancing beans spectrum (width = resolution)          case 11:            pictureBoxSpectrum.Image = _vis.CreateSpectrumBean(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Chocolate'                                                               Color.DarkGoldenrod' Color.Black' 4' false' false' true);            break;            // dancing text spectrum (width = resolution)          case 12:            pictureBoxSpectrum.Image = _vis.CreateSpectrumText(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.White' Color.Tomato'                                                               Color.Black' "MPTagThat is Great"' false' false' true);            break;            // frequency detection          case 13:            float amp = _vis.DetectFrequency(_stream' 10' 500' true);            if (amp > 0.3)              pictureBoxSpectrum.BackColor = Color.Red;            else              pictureBoxSpectrum.BackColor = Color.Black;            break;            // 3D voice print          case 14:            // we need to draw directly directly on the picture box...            // normally you would encapsulate this in your own custom control            Graphics g = Graphics.FromHwnd(pictureBoxSpectrum.Handle);            g.SmoothingMode = SmoothingMode.AntiAlias;            _vis.CreateSpectrum3DVoicePrint(_stream' g'                                            new Rectangle(0' 0' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height)'                                            Color.Black' Color.White' _voicePrintIdx' false' false);            g.Dispose();            // next call will be at the next pos            _voicePrintIdx++;            if (_voicePrintIdx > pictureBoxSpectrum.Width - 1)              _voicePrintIdx = 0;            break;            // WaveForm          case 15:            pictureBoxSpectrum.Image = _vis.CreateWaveForm(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Green' Color.Red' Color.Gray' Color.Black' 1' true' false'                                                           true);            break;        }
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,DrawSpectrum,The following statement contains a magic number: switch (_specIdx)        {            // normal spectrum (width = resolution)          case 0:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Lime' Color.Red' Color.Black' false' false' false);            break;            // normal spectrum (full resolution)          case 1:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.SteelBlue' Color.Pink' Color.Black' false' true' true);            break;            // line spectrum (width = resolution)          case 2:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                               Color.Black' 2' 2' false' false' false);            break;            // line spectrum (full resolution)          case 3:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                               Color.Black' 16' 4' false' true' true);            break;            // ellipse spectrum (width = resolution)          case 4:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                                  Color.Black' 1' 2' false' false' false);            break;            // ellipse spectrum (full resolution)          case 5:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                                  Color.Black' 2' 4' false' true' true);            break;            // dot spectrum (width = resolution)          case 6:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.Lime' Color.Red' Color.Black' 1' 0' false' false'                                                              false);            break;            // dot spectrum (full resolution)          case 7:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.SteelBlue' Color.Pink' Color.Black' 2' 1' false' false'                                                              true);            break;            // peak spectrum (width = resolution)          case 8:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.SeaGreen'                                                                   Color.LightGreen' Color.Orange' Color.Black' 2' 1' 2'                                                                   10' false' false' false);            break;            // peak spectrum (full resolution)          case 9:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.GreenYellow'                                                                   Color.RoyalBlue' Color.DarkOrange' Color.Black' 23' 5'                                                                   3' 5' false' true' true);            break;            // wave spectrum (width = resolution)          case 10:            pictureBoxSpectrum.Image = _vis.CreateSpectrumWave(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Yellow' Color.Orange'                                                               Color.Black' 1' false' false' false);            break;            // dancing beans spectrum (width = resolution)          case 11:            pictureBoxSpectrum.Image = _vis.CreateSpectrumBean(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Chocolate'                                                               Color.DarkGoldenrod' Color.Black' 4' false' false' true);            break;            // dancing text spectrum (width = resolution)          case 12:            pictureBoxSpectrum.Image = _vis.CreateSpectrumText(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.White' Color.Tomato'                                                               Color.Black' "MPTagThat is Great"' false' false' true);            break;            // frequency detection          case 13:            float amp = _vis.DetectFrequency(_stream' 10' 500' true);            if (amp > 0.3)              pictureBoxSpectrum.BackColor = Color.Red;            else              pictureBoxSpectrum.BackColor = Color.Black;            break;            // 3D voice print          case 14:            // we need to draw directly directly on the picture box...            // normally you would encapsulate this in your own custom control            Graphics g = Graphics.FromHwnd(pictureBoxSpectrum.Handle);            g.SmoothingMode = SmoothingMode.AntiAlias;            _vis.CreateSpectrum3DVoicePrint(_stream' g'                                            new Rectangle(0' 0' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height)'                                            Color.Black' Color.White' _voicePrintIdx' false' false);            g.Dispose();            // next call will be at the next pos            _voicePrintIdx++;            if (_voicePrintIdx > pictureBoxSpectrum.Width - 1)              _voicePrintIdx = 0;            break;            // WaveForm          case 15:            pictureBoxSpectrum.Image = _vis.CreateWaveForm(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Green' Color.Red' Color.Gray' Color.Black' 1' true' false'                                                           true);            break;        }
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,DrawSpectrum,The following statement contains a magic number: switch (_specIdx)        {            // normal spectrum (width = resolution)          case 0:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Lime' Color.Red' Color.Black' false' false' false);            break;            // normal spectrum (full resolution)          case 1:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.SteelBlue' Color.Pink' Color.Black' false' true' true);            break;            // line spectrum (width = resolution)          case 2:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                               Color.Black' 2' 2' false' false' false);            break;            // line spectrum (full resolution)          case 3:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                               Color.Black' 16' 4' false' true' true);            break;            // ellipse spectrum (width = resolution)          case 4:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                                  Color.Black' 1' 2' false' false' false);            break;            // ellipse spectrum (full resolution)          case 5:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                                  Color.Black' 2' 4' false' true' true);            break;            // dot spectrum (width = resolution)          case 6:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.Lime' Color.Red' Color.Black' 1' 0' false' false'                                                              false);            break;            // dot spectrum (full resolution)          case 7:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.SteelBlue' Color.Pink' Color.Black' 2' 1' false' false'                                                              true);            break;            // peak spectrum (width = resolution)          case 8:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.SeaGreen'                                                                   Color.LightGreen' Color.Orange' Color.Black' 2' 1' 2'                                                                   10' false' false' false);            break;            // peak spectrum (full resolution)          case 9:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.GreenYellow'                                                                   Color.RoyalBlue' Color.DarkOrange' Color.Black' 23' 5'                                                                   3' 5' false' true' true);            break;            // wave spectrum (width = resolution)          case 10:            pictureBoxSpectrum.Image = _vis.CreateSpectrumWave(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Yellow' Color.Orange'                                                               Color.Black' 1' false' false' false);            break;            // dancing beans spectrum (width = resolution)          case 11:            pictureBoxSpectrum.Image = _vis.CreateSpectrumBean(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Chocolate'                                                               Color.DarkGoldenrod' Color.Black' 4' false' false' true);            break;            // dancing text spectrum (width = resolution)          case 12:            pictureBoxSpectrum.Image = _vis.CreateSpectrumText(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.White' Color.Tomato'                                                               Color.Black' "MPTagThat is Great"' false' false' true);            break;            // frequency detection          case 13:            float amp = _vis.DetectFrequency(_stream' 10' 500' true);            if (amp > 0.3)              pictureBoxSpectrum.BackColor = Color.Red;            else              pictureBoxSpectrum.BackColor = Color.Black;            break;            // 3D voice print          case 14:            // we need to draw directly directly on the picture box...            // normally you would encapsulate this in your own custom control            Graphics g = Graphics.FromHwnd(pictureBoxSpectrum.Handle);            g.SmoothingMode = SmoothingMode.AntiAlias;            _vis.CreateSpectrum3DVoicePrint(_stream' g'                                            new Rectangle(0' 0' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height)'                                            Color.Black' Color.White' _voicePrintIdx' false' false);            g.Dispose();            // next call will be at the next pos            _voicePrintIdx++;            if (_voicePrintIdx > pictureBoxSpectrum.Width - 1)              _voicePrintIdx = 0;            break;            // WaveForm          case 15:            pictureBoxSpectrum.Image = _vis.CreateWaveForm(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Green' Color.Red' Color.Gray' Color.Black' 1' true' false'                                                           true);            break;        }
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,DrawSpectrum,The following statement contains a magic number: switch (_specIdx)        {            // normal spectrum (width = resolution)          case 0:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Lime' Color.Red' Color.Black' false' false' false);            break;            // normal spectrum (full resolution)          case 1:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.SteelBlue' Color.Pink' Color.Black' false' true' true);            break;            // line spectrum (width = resolution)          case 2:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                               Color.Black' 2' 2' false' false' false);            break;            // line spectrum (full resolution)          case 3:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                               Color.Black' 16' 4' false' true' true);            break;            // ellipse spectrum (width = resolution)          case 4:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                                  Color.Black' 1' 2' false' false' false);            break;            // ellipse spectrum (full resolution)          case 5:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                                  Color.Black' 2' 4' false' true' true);            break;            // dot spectrum (width = resolution)          case 6:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.Lime' Color.Red' Color.Black' 1' 0' false' false'                                                              false);            break;            // dot spectrum (full resolution)          case 7:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.SteelBlue' Color.Pink' Color.Black' 2' 1' false' false'                                                              true);            break;            // peak spectrum (width = resolution)          case 8:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.SeaGreen'                                                                   Color.LightGreen' Color.Orange' Color.Black' 2' 1' 2'                                                                   10' false' false' false);            break;            // peak spectrum (full resolution)          case 9:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.GreenYellow'                                                                   Color.RoyalBlue' Color.DarkOrange' Color.Black' 23' 5'                                                                   3' 5' false' true' true);            break;            // wave spectrum (width = resolution)          case 10:            pictureBoxSpectrum.Image = _vis.CreateSpectrumWave(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Yellow' Color.Orange'                                                               Color.Black' 1' false' false' false);            break;            // dancing beans spectrum (width = resolution)          case 11:            pictureBoxSpectrum.Image = _vis.CreateSpectrumBean(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Chocolate'                                                               Color.DarkGoldenrod' Color.Black' 4' false' false' true);            break;            // dancing text spectrum (width = resolution)          case 12:            pictureBoxSpectrum.Image = _vis.CreateSpectrumText(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.White' Color.Tomato'                                                               Color.Black' "MPTagThat is Great"' false' false' true);            break;            // frequency detection          case 13:            float amp = _vis.DetectFrequency(_stream' 10' 500' true);            if (amp > 0.3)              pictureBoxSpectrum.BackColor = Color.Red;            else              pictureBoxSpectrum.BackColor = Color.Black;            break;            // 3D voice print          case 14:            // we need to draw directly directly on the picture box...            // normally you would encapsulate this in your own custom control            Graphics g = Graphics.FromHwnd(pictureBoxSpectrum.Handle);            g.SmoothingMode = SmoothingMode.AntiAlias;            _vis.CreateSpectrum3DVoicePrint(_stream' g'                                            new Rectangle(0' 0' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height)'                                            Color.Black' Color.White' _voicePrintIdx' false' false);            g.Dispose();            // next call will be at the next pos            _voicePrintIdx++;            if (_voicePrintIdx > pictureBoxSpectrum.Width - 1)              _voicePrintIdx = 0;            break;            // WaveForm          case 15:            pictureBoxSpectrum.Image = _vis.CreateWaveForm(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Green' Color.Red' Color.Gray' Color.Black' 1' true' false'                                                           true);            break;        }
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,DrawSpectrum,The following statement contains a magic number: switch (_specIdx)        {            // normal spectrum (width = resolution)          case 0:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Lime' Color.Red' Color.Black' false' false' false);            break;            // normal spectrum (full resolution)          case 1:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.SteelBlue' Color.Pink' Color.Black' false' true' true);            break;            // line spectrum (width = resolution)          case 2:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                               Color.Black' 2' 2' false' false' false);            break;            // line spectrum (full resolution)          case 3:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                               Color.Black' 16' 4' false' true' true);            break;            // ellipse spectrum (width = resolution)          case 4:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                                  Color.Black' 1' 2' false' false' false);            break;            // ellipse spectrum (full resolution)          case 5:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                                  Color.Black' 2' 4' false' true' true);            break;            // dot spectrum (width = resolution)          case 6:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.Lime' Color.Red' Color.Black' 1' 0' false' false'                                                              false);            break;            // dot spectrum (full resolution)          case 7:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.SteelBlue' Color.Pink' Color.Black' 2' 1' false' false'                                                              true);            break;            // peak spectrum (width = resolution)          case 8:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.SeaGreen'                                                                   Color.LightGreen' Color.Orange' Color.Black' 2' 1' 2'                                                                   10' false' false' false);            break;            // peak spectrum (full resolution)          case 9:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.GreenYellow'                                                                   Color.RoyalBlue' Color.DarkOrange' Color.Black' 23' 5'                                                                   3' 5' false' true' true);            break;            // wave spectrum (width = resolution)          case 10:            pictureBoxSpectrum.Image = _vis.CreateSpectrumWave(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Yellow' Color.Orange'                                                               Color.Black' 1' false' false' false);            break;            // dancing beans spectrum (width = resolution)          case 11:            pictureBoxSpectrum.Image = _vis.CreateSpectrumBean(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Chocolate'                                                               Color.DarkGoldenrod' Color.Black' 4' false' false' true);            break;            // dancing text spectrum (width = resolution)          case 12:            pictureBoxSpectrum.Image = _vis.CreateSpectrumText(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.White' Color.Tomato'                                                               Color.Black' "MPTagThat is Great"' false' false' true);            break;            // frequency detection          case 13:            float amp = _vis.DetectFrequency(_stream' 10' 500' true);            if (amp > 0.3)              pictureBoxSpectrum.BackColor = Color.Red;            else              pictureBoxSpectrum.BackColor = Color.Black;            break;            // 3D voice print          case 14:            // we need to draw directly directly on the picture box...            // normally you would encapsulate this in your own custom control            Graphics g = Graphics.FromHwnd(pictureBoxSpectrum.Handle);            g.SmoothingMode = SmoothingMode.AntiAlias;            _vis.CreateSpectrum3DVoicePrint(_stream' g'                                            new Rectangle(0' 0' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height)'                                            Color.Black' Color.White' _voicePrintIdx' false' false);            g.Dispose();            // next call will be at the next pos            _voicePrintIdx++;            if (_voicePrintIdx > pictureBoxSpectrum.Width - 1)              _voicePrintIdx = 0;            break;            // WaveForm          case 15:            pictureBoxSpectrum.Image = _vis.CreateWaveForm(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Green' Color.Red' Color.Gray' Color.Black' 1' true' false'                                                           true);            break;        }
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,DrawSpectrum,The following statement contains a magic number: switch (_specIdx)        {            // normal spectrum (width = resolution)          case 0:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Lime' Color.Red' Color.Black' false' false' false);            break;            // normal spectrum (full resolution)          case 1:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.SteelBlue' Color.Pink' Color.Black' false' true' true);            break;            // line spectrum (width = resolution)          case 2:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                               Color.Black' 2' 2' false' false' false);            break;            // line spectrum (full resolution)          case 3:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                               Color.Black' 16' 4' false' true' true);            break;            // ellipse spectrum (width = resolution)          case 4:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                                  Color.Black' 1' 2' false' false' false);            break;            // ellipse spectrum (full resolution)          case 5:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                                  Color.Black' 2' 4' false' true' true);            break;            // dot spectrum (width = resolution)          case 6:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.Lime' Color.Red' Color.Black' 1' 0' false' false'                                                              false);            break;            // dot spectrum (full resolution)          case 7:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.SteelBlue' Color.Pink' Color.Black' 2' 1' false' false'                                                              true);            break;            // peak spectrum (width = resolution)          case 8:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.SeaGreen'                                                                   Color.LightGreen' Color.Orange' Color.Black' 2' 1' 2'                                                                   10' false' false' false);            break;            // peak spectrum (full resolution)          case 9:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.GreenYellow'                                                                   Color.RoyalBlue' Color.DarkOrange' Color.Black' 23' 5'                                                                   3' 5' false' true' true);            break;            // wave spectrum (width = resolution)          case 10:            pictureBoxSpectrum.Image = _vis.CreateSpectrumWave(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Yellow' Color.Orange'                                                               Color.Black' 1' false' false' false);            break;            // dancing beans spectrum (width = resolution)          case 11:            pictureBoxSpectrum.Image = _vis.CreateSpectrumBean(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Chocolate'                                                               Color.DarkGoldenrod' Color.Black' 4' false' false' true);            break;            // dancing text spectrum (width = resolution)          case 12:            pictureBoxSpectrum.Image = _vis.CreateSpectrumText(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.White' Color.Tomato'                                                               Color.Black' "MPTagThat is Great"' false' false' true);            break;            // frequency detection          case 13:            float amp = _vis.DetectFrequency(_stream' 10' 500' true);            if (amp > 0.3)              pictureBoxSpectrum.BackColor = Color.Red;            else              pictureBoxSpectrum.BackColor = Color.Black;            break;            // 3D voice print          case 14:            // we need to draw directly directly on the picture box...            // normally you would encapsulate this in your own custom control            Graphics g = Graphics.FromHwnd(pictureBoxSpectrum.Handle);            g.SmoothingMode = SmoothingMode.AntiAlias;            _vis.CreateSpectrum3DVoicePrint(_stream' g'                                            new Rectangle(0' 0' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height)'                                            Color.Black' Color.White' _voicePrintIdx' false' false);            g.Dispose();            // next call will be at the next pos            _voicePrintIdx++;            if (_voicePrintIdx > pictureBoxSpectrum.Width - 1)              _voicePrintIdx = 0;            break;            // WaveForm          case 15:            pictureBoxSpectrum.Image = _vis.CreateWaveForm(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Green' Color.Red' Color.Gray' Color.Black' 1' true' false'                                                           true);            break;        }
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,DrawSpectrum,The following statement contains a magic number: switch (_specIdx)        {            // normal spectrum (width = resolution)          case 0:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Lime' Color.Red' Color.Black' false' false' false);            break;            // normal spectrum (full resolution)          case 1:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.SteelBlue' Color.Pink' Color.Black' false' true' true);            break;            // line spectrum (width = resolution)          case 2:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                               Color.Black' 2' 2' false' false' false);            break;            // line spectrum (full resolution)          case 3:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                               Color.Black' 16' 4' false' true' true);            break;            // ellipse spectrum (width = resolution)          case 4:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                                  Color.Black' 1' 2' false' false' false);            break;            // ellipse spectrum (full resolution)          case 5:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                                  Color.Black' 2' 4' false' true' true);            break;            // dot spectrum (width = resolution)          case 6:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.Lime' Color.Red' Color.Black' 1' 0' false' false'                                                              false);            break;            // dot spectrum (full resolution)          case 7:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.SteelBlue' Color.Pink' Color.Black' 2' 1' false' false'                                                              true);            break;            // peak spectrum (width = resolution)          case 8:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.SeaGreen'                                                                   Color.LightGreen' Color.Orange' Color.Black' 2' 1' 2'                                                                   10' false' false' false);            break;            // peak spectrum (full resolution)          case 9:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.GreenYellow'                                                                   Color.RoyalBlue' Color.DarkOrange' Color.Black' 23' 5'                                                                   3' 5' false' true' true);            break;            // wave spectrum (width = resolution)          case 10:            pictureBoxSpectrum.Image = _vis.CreateSpectrumWave(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Yellow' Color.Orange'                                                               Color.Black' 1' false' false' false);            break;            // dancing beans spectrum (width = resolution)          case 11:            pictureBoxSpectrum.Image = _vis.CreateSpectrumBean(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Chocolate'                                                               Color.DarkGoldenrod' Color.Black' 4' false' false' true);            break;            // dancing text spectrum (width = resolution)          case 12:            pictureBoxSpectrum.Image = _vis.CreateSpectrumText(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.White' Color.Tomato'                                                               Color.Black' "MPTagThat is Great"' false' false' true);            break;            // frequency detection          case 13:            float amp = _vis.DetectFrequency(_stream' 10' 500' true);            if (amp > 0.3)              pictureBoxSpectrum.BackColor = Color.Red;            else              pictureBoxSpectrum.BackColor = Color.Black;            break;            // 3D voice print          case 14:            // we need to draw directly directly on the picture box...            // normally you would encapsulate this in your own custom control            Graphics g = Graphics.FromHwnd(pictureBoxSpectrum.Handle);            g.SmoothingMode = SmoothingMode.AntiAlias;            _vis.CreateSpectrum3DVoicePrint(_stream' g'                                            new Rectangle(0' 0' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height)'                                            Color.Black' Color.White' _voicePrintIdx' false' false);            g.Dispose();            // next call will be at the next pos            _voicePrintIdx++;            if (_voicePrintIdx > pictureBoxSpectrum.Width - 1)              _voicePrintIdx = 0;            break;            // WaveForm          case 15:            pictureBoxSpectrum.Image = _vis.CreateWaveForm(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Green' Color.Red' Color.Gray' Color.Black' 1' true' false'                                                           true);            break;        }
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,DrawSpectrum,The following statement contains a magic number: switch (_specIdx)        {            // normal spectrum (width = resolution)          case 0:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Lime' Color.Red' Color.Black' false' false' false);            break;            // normal spectrum (full resolution)          case 1:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.SteelBlue' Color.Pink' Color.Black' false' true' true);            break;            // line spectrum (width = resolution)          case 2:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                               Color.Black' 2' 2' false' false' false);            break;            // line spectrum (full resolution)          case 3:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                               Color.Black' 16' 4' false' true' true);            break;            // ellipse spectrum (width = resolution)          case 4:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                                  Color.Black' 1' 2' false' false' false);            break;            // ellipse spectrum (full resolution)          case 5:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                                  Color.Black' 2' 4' false' true' true);            break;            // dot spectrum (width = resolution)          case 6:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.Lime' Color.Red' Color.Black' 1' 0' false' false'                                                              false);            break;            // dot spectrum (full resolution)          case 7:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.SteelBlue' Color.Pink' Color.Black' 2' 1' false' false'                                                              true);            break;            // peak spectrum (width = resolution)          case 8:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.SeaGreen'                                                                   Color.LightGreen' Color.Orange' Color.Black' 2' 1' 2'                                                                   10' false' false' false);            break;            // peak spectrum (full resolution)          case 9:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.GreenYellow'                                                                   Color.RoyalBlue' Color.DarkOrange' Color.Black' 23' 5'                                                                   3' 5' false' true' true);            break;            // wave spectrum (width = resolution)          case 10:            pictureBoxSpectrum.Image = _vis.CreateSpectrumWave(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Yellow' Color.Orange'                                                               Color.Black' 1' false' false' false);            break;            // dancing beans spectrum (width = resolution)          case 11:            pictureBoxSpectrum.Image = _vis.CreateSpectrumBean(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Chocolate'                                                               Color.DarkGoldenrod' Color.Black' 4' false' false' true);            break;            // dancing text spectrum (width = resolution)          case 12:            pictureBoxSpectrum.Image = _vis.CreateSpectrumText(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.White' Color.Tomato'                                                               Color.Black' "MPTagThat is Great"' false' false' true);            break;            // frequency detection          case 13:            float amp = _vis.DetectFrequency(_stream' 10' 500' true);            if (amp > 0.3)              pictureBoxSpectrum.BackColor = Color.Red;            else              pictureBoxSpectrum.BackColor = Color.Black;            break;            // 3D voice print          case 14:            // we need to draw directly directly on the picture box...            // normally you would encapsulate this in your own custom control            Graphics g = Graphics.FromHwnd(pictureBoxSpectrum.Handle);            g.SmoothingMode = SmoothingMode.AntiAlias;            _vis.CreateSpectrum3DVoicePrint(_stream' g'                                            new Rectangle(0' 0' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height)'                                            Color.Black' Color.White' _voicePrintIdx' false' false);            g.Dispose();            // next call will be at the next pos            _voicePrintIdx++;            if (_voicePrintIdx > pictureBoxSpectrum.Width - 1)              _voicePrintIdx = 0;            break;            // WaveForm          case 15:            pictureBoxSpectrum.Image = _vis.CreateWaveForm(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Green' Color.Red' Color.Gray' Color.Black' 1' true' false'                                                           true);            break;        }
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,DrawSpectrum,The following statement contains a magic number: switch (_specIdx)        {            // normal spectrum (width = resolution)          case 0:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Lime' Color.Red' Color.Black' false' false' false);            break;            // normal spectrum (full resolution)          case 1:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.SteelBlue' Color.Pink' Color.Black' false' true' true);            break;            // line spectrum (width = resolution)          case 2:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                               Color.Black' 2' 2' false' false' false);            break;            // line spectrum (full resolution)          case 3:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                               Color.Black' 16' 4' false' true' true);            break;            // ellipse spectrum (width = resolution)          case 4:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                                  Color.Black' 1' 2' false' false' false);            break;            // ellipse spectrum (full resolution)          case 5:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                                  Color.Black' 2' 4' false' true' true);            break;            // dot spectrum (width = resolution)          case 6:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.Lime' Color.Red' Color.Black' 1' 0' false' false'                                                              false);            break;            // dot spectrum (full resolution)          case 7:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.SteelBlue' Color.Pink' Color.Black' 2' 1' false' false'                                                              true);            break;            // peak spectrum (width = resolution)          case 8:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.SeaGreen'                                                                   Color.LightGreen' Color.Orange' Color.Black' 2' 1' 2'                                                                   10' false' false' false);            break;            // peak spectrum (full resolution)          case 9:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.GreenYellow'                                                                   Color.RoyalBlue' Color.DarkOrange' Color.Black' 23' 5'                                                                   3' 5' false' true' true);            break;            // wave spectrum (width = resolution)          case 10:            pictureBoxSpectrum.Image = _vis.CreateSpectrumWave(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Yellow' Color.Orange'                                                               Color.Black' 1' false' false' false);            break;            // dancing beans spectrum (width = resolution)          case 11:            pictureBoxSpectrum.Image = _vis.CreateSpectrumBean(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Chocolate'                                                               Color.DarkGoldenrod' Color.Black' 4' false' false' true);            break;            // dancing text spectrum (width = resolution)          case 12:            pictureBoxSpectrum.Image = _vis.CreateSpectrumText(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.White' Color.Tomato'                                                               Color.Black' "MPTagThat is Great"' false' false' true);            break;            // frequency detection          case 13:            float amp = _vis.DetectFrequency(_stream' 10' 500' true);            if (amp > 0.3)              pictureBoxSpectrum.BackColor = Color.Red;            else              pictureBoxSpectrum.BackColor = Color.Black;            break;            // 3D voice print          case 14:            // we need to draw directly directly on the picture box...            // normally you would encapsulate this in your own custom control            Graphics g = Graphics.FromHwnd(pictureBoxSpectrum.Handle);            g.SmoothingMode = SmoothingMode.AntiAlias;            _vis.CreateSpectrum3DVoicePrint(_stream' g'                                            new Rectangle(0' 0' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height)'                                            Color.Black' Color.White' _voicePrintIdx' false' false);            g.Dispose();            // next call will be at the next pos            _voicePrintIdx++;            if (_voicePrintIdx > pictureBoxSpectrum.Width - 1)              _voicePrintIdx = 0;            break;            // WaveForm          case 15:            pictureBoxSpectrum.Image = _vis.CreateWaveForm(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Green' Color.Red' Color.Gray' Color.Black' 1' true' false'                                                           true);            break;        }
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,DrawSpectrum,The following statement contains a magic number: switch (_specIdx)        {            // normal spectrum (width = resolution)          case 0:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Lime' Color.Red' Color.Black' false' false' false);            break;            // normal spectrum (full resolution)          case 1:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.SteelBlue' Color.Pink' Color.Black' false' true' true);            break;            // line spectrum (width = resolution)          case 2:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                               Color.Black' 2' 2' false' false' false);            break;            // line spectrum (full resolution)          case 3:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                               Color.Black' 16' 4' false' true' true);            break;            // ellipse spectrum (width = resolution)          case 4:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                                  Color.Black' 1' 2' false' false' false);            break;            // ellipse spectrum (full resolution)          case 5:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                                  Color.Black' 2' 4' false' true' true);            break;            // dot spectrum (width = resolution)          case 6:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.Lime' Color.Red' Color.Black' 1' 0' false' false'                                                              false);            break;            // dot spectrum (full resolution)          case 7:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.SteelBlue' Color.Pink' Color.Black' 2' 1' false' false'                                                              true);            break;            // peak spectrum (width = resolution)          case 8:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.SeaGreen'                                                                   Color.LightGreen' Color.Orange' Color.Black' 2' 1' 2'                                                                   10' false' false' false);            break;            // peak spectrum (full resolution)          case 9:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.GreenYellow'                                                                   Color.RoyalBlue' Color.DarkOrange' Color.Black' 23' 5'                                                                   3' 5' false' true' true);            break;            // wave spectrum (width = resolution)          case 10:            pictureBoxSpectrum.Image = _vis.CreateSpectrumWave(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Yellow' Color.Orange'                                                               Color.Black' 1' false' false' false);            break;            // dancing beans spectrum (width = resolution)          case 11:            pictureBoxSpectrum.Image = _vis.CreateSpectrumBean(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Chocolate'                                                               Color.DarkGoldenrod' Color.Black' 4' false' false' true);            break;            // dancing text spectrum (width = resolution)          case 12:            pictureBoxSpectrum.Image = _vis.CreateSpectrumText(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.White' Color.Tomato'                                                               Color.Black' "MPTagThat is Great"' false' false' true);            break;            // frequency detection          case 13:            float amp = _vis.DetectFrequency(_stream' 10' 500' true);            if (amp > 0.3)              pictureBoxSpectrum.BackColor = Color.Red;            else              pictureBoxSpectrum.BackColor = Color.Black;            break;            // 3D voice print          case 14:            // we need to draw directly directly on the picture box...            // normally you would encapsulate this in your own custom control            Graphics g = Graphics.FromHwnd(pictureBoxSpectrum.Handle);            g.SmoothingMode = SmoothingMode.AntiAlias;            _vis.CreateSpectrum3DVoicePrint(_stream' g'                                            new Rectangle(0' 0' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height)'                                            Color.Black' Color.White' _voicePrintIdx' false' false);            g.Dispose();            // next call will be at the next pos            _voicePrintIdx++;            if (_voicePrintIdx > pictureBoxSpectrum.Width - 1)              _voicePrintIdx = 0;            break;            // WaveForm          case 15:            pictureBoxSpectrum.Image = _vis.CreateWaveForm(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Green' Color.Red' Color.Gray' Color.Black' 1' true' false'                                                           true);            break;        }
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,DrawSpectrum,The following statement contains a magic number: switch (_specIdx)        {            // normal spectrum (width = resolution)          case 0:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Lime' Color.Red' Color.Black' false' false' false);            break;            // normal spectrum (full resolution)          case 1:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.SteelBlue' Color.Pink' Color.Black' false' true' true);            break;            // line spectrum (width = resolution)          case 2:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                               Color.Black' 2' 2' false' false' false);            break;            // line spectrum (full resolution)          case 3:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                               Color.Black' 16' 4' false' true' true);            break;            // ellipse spectrum (width = resolution)          case 4:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                                  Color.Black' 1' 2' false' false' false);            break;            // ellipse spectrum (full resolution)          case 5:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                                  Color.Black' 2' 4' false' true' true);            break;            // dot spectrum (width = resolution)          case 6:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.Lime' Color.Red' Color.Black' 1' 0' false' false'                                                              false);            break;            // dot spectrum (full resolution)          case 7:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.SteelBlue' Color.Pink' Color.Black' 2' 1' false' false'                                                              true);            break;            // peak spectrum (width = resolution)          case 8:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.SeaGreen'                                                                   Color.LightGreen' Color.Orange' Color.Black' 2' 1' 2'                                                                   10' false' false' false);            break;            // peak spectrum (full resolution)          case 9:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.GreenYellow'                                                                   Color.RoyalBlue' Color.DarkOrange' Color.Black' 23' 5'                                                                   3' 5' false' true' true);            break;            // wave spectrum (width = resolution)          case 10:            pictureBoxSpectrum.Image = _vis.CreateSpectrumWave(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Yellow' Color.Orange'                                                               Color.Black' 1' false' false' false);            break;            // dancing beans spectrum (width = resolution)          case 11:            pictureBoxSpectrum.Image = _vis.CreateSpectrumBean(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Chocolate'                                                               Color.DarkGoldenrod' Color.Black' 4' false' false' true);            break;            // dancing text spectrum (width = resolution)          case 12:            pictureBoxSpectrum.Image = _vis.CreateSpectrumText(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.White' Color.Tomato'                                                               Color.Black' "MPTagThat is Great"' false' false' true);            break;            // frequency detection          case 13:            float amp = _vis.DetectFrequency(_stream' 10' 500' true);            if (amp > 0.3)              pictureBoxSpectrum.BackColor = Color.Red;            else              pictureBoxSpectrum.BackColor = Color.Black;            break;            // 3D voice print          case 14:            // we need to draw directly directly on the picture box...            // normally you would encapsulate this in your own custom control            Graphics g = Graphics.FromHwnd(pictureBoxSpectrum.Handle);            g.SmoothingMode = SmoothingMode.AntiAlias;            _vis.CreateSpectrum3DVoicePrint(_stream' g'                                            new Rectangle(0' 0' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height)'                                            Color.Black' Color.White' _voicePrintIdx' false' false);            g.Dispose();            // next call will be at the next pos            _voicePrintIdx++;            if (_voicePrintIdx > pictureBoxSpectrum.Width - 1)              _voicePrintIdx = 0;            break;            // WaveForm          case 15:            pictureBoxSpectrum.Image = _vis.CreateWaveForm(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Green' Color.Red' Color.Gray' Color.Black' 1' true' false'                                                           true);            break;        }
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,DrawSpectrum,The following statement contains a magic number: switch (_specIdx)        {            // normal spectrum (width = resolution)          case 0:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Lime' Color.Red' Color.Black' false' false' false);            break;            // normal spectrum (full resolution)          case 1:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.SteelBlue' Color.Pink' Color.Black' false' true' true);            break;            // line spectrum (width = resolution)          case 2:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                               Color.Black' 2' 2' false' false' false);            break;            // line spectrum (full resolution)          case 3:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                               Color.Black' 16' 4' false' true' true);            break;            // ellipse spectrum (width = resolution)          case 4:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                                  Color.Black' 1' 2' false' false' false);            break;            // ellipse spectrum (full resolution)          case 5:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                                  Color.Black' 2' 4' false' true' true);            break;            // dot spectrum (width = resolution)          case 6:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.Lime' Color.Red' Color.Black' 1' 0' false' false'                                                              false);            break;            // dot spectrum (full resolution)          case 7:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.SteelBlue' Color.Pink' Color.Black' 2' 1' false' false'                                                              true);            break;            // peak spectrum (width = resolution)          case 8:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.SeaGreen'                                                                   Color.LightGreen' Color.Orange' Color.Black' 2' 1' 2'                                                                   10' false' false' false);            break;            // peak spectrum (full resolution)          case 9:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.GreenYellow'                                                                   Color.RoyalBlue' Color.DarkOrange' Color.Black' 23' 5'                                                                   3' 5' false' true' true);            break;            // wave spectrum (width = resolution)          case 10:            pictureBoxSpectrum.Image = _vis.CreateSpectrumWave(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Yellow' Color.Orange'                                                               Color.Black' 1' false' false' false);            break;            // dancing beans spectrum (width = resolution)          case 11:            pictureBoxSpectrum.Image = _vis.CreateSpectrumBean(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Chocolate'                                                               Color.DarkGoldenrod' Color.Black' 4' false' false' true);            break;            // dancing text spectrum (width = resolution)          case 12:            pictureBoxSpectrum.Image = _vis.CreateSpectrumText(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.White' Color.Tomato'                                                               Color.Black' "MPTagThat is Great"' false' false' true);            break;            // frequency detection          case 13:            float amp = _vis.DetectFrequency(_stream' 10' 500' true);            if (amp > 0.3)              pictureBoxSpectrum.BackColor = Color.Red;            else              pictureBoxSpectrum.BackColor = Color.Black;            break;            // 3D voice print          case 14:            // we need to draw directly directly on the picture box...            // normally you would encapsulate this in your own custom control            Graphics g = Graphics.FromHwnd(pictureBoxSpectrum.Handle);            g.SmoothingMode = SmoothingMode.AntiAlias;            _vis.CreateSpectrum3DVoicePrint(_stream' g'                                            new Rectangle(0' 0' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height)'                                            Color.Black' Color.White' _voicePrintIdx' false' false);            g.Dispose();            // next call will be at the next pos            _voicePrintIdx++;            if (_voicePrintIdx > pictureBoxSpectrum.Width - 1)              _voicePrintIdx = 0;            break;            // WaveForm          case 15:            pictureBoxSpectrum.Image = _vis.CreateWaveForm(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Green' Color.Red' Color.Gray' Color.Black' 1' true' false'                                                           true);            break;        }
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,DrawSpectrum,The following statement contains a magic number: switch (_specIdx)        {            // normal spectrum (width = resolution)          case 0:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Lime' Color.Red' Color.Black' false' false' false);            break;            // normal spectrum (full resolution)          case 1:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.SteelBlue' Color.Pink' Color.Black' false' true' true);            break;            // line spectrum (width = resolution)          case 2:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                               Color.Black' 2' 2' false' false' false);            break;            // line spectrum (full resolution)          case 3:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                               Color.Black' 16' 4' false' true' true);            break;            // ellipse spectrum (width = resolution)          case 4:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                                  Color.Black' 1' 2' false' false' false);            break;            // ellipse spectrum (full resolution)          case 5:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                                  Color.Black' 2' 4' false' true' true);            break;            // dot spectrum (width = resolution)          case 6:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.Lime' Color.Red' Color.Black' 1' 0' false' false'                                                              false);            break;            // dot spectrum (full resolution)          case 7:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.SteelBlue' Color.Pink' Color.Black' 2' 1' false' false'                                                              true);            break;            // peak spectrum (width = resolution)          case 8:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.SeaGreen'                                                                   Color.LightGreen' Color.Orange' Color.Black' 2' 1' 2'                                                                   10' false' false' false);            break;            // peak spectrum (full resolution)          case 9:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.GreenYellow'                                                                   Color.RoyalBlue' Color.DarkOrange' Color.Black' 23' 5'                                                                   3' 5' false' true' true);            break;            // wave spectrum (width = resolution)          case 10:            pictureBoxSpectrum.Image = _vis.CreateSpectrumWave(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Yellow' Color.Orange'                                                               Color.Black' 1' false' false' false);            break;            // dancing beans spectrum (width = resolution)          case 11:            pictureBoxSpectrum.Image = _vis.CreateSpectrumBean(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Chocolate'                                                               Color.DarkGoldenrod' Color.Black' 4' false' false' true);            break;            // dancing text spectrum (width = resolution)          case 12:            pictureBoxSpectrum.Image = _vis.CreateSpectrumText(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.White' Color.Tomato'                                                               Color.Black' "MPTagThat is Great"' false' false' true);            break;            // frequency detection          case 13:            float amp = _vis.DetectFrequency(_stream' 10' 500' true);            if (amp > 0.3)              pictureBoxSpectrum.BackColor = Color.Red;            else              pictureBoxSpectrum.BackColor = Color.Black;            break;            // 3D voice print          case 14:            // we need to draw directly directly on the picture box...            // normally you would encapsulate this in your own custom control            Graphics g = Graphics.FromHwnd(pictureBoxSpectrum.Handle);            g.SmoothingMode = SmoothingMode.AntiAlias;            _vis.CreateSpectrum3DVoicePrint(_stream' g'                                            new Rectangle(0' 0' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height)'                                            Color.Black' Color.White' _voicePrintIdx' false' false);            g.Dispose();            // next call will be at the next pos            _voicePrintIdx++;            if (_voicePrintIdx > pictureBoxSpectrum.Width - 1)              _voicePrintIdx = 0;            break;            // WaveForm          case 15:            pictureBoxSpectrum.Image = _vis.CreateWaveForm(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Green' Color.Red' Color.Gray' Color.Black' 1' true' false'                                                           true);            break;        }
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,DrawSpectrum,The following statement contains a magic number: switch (_specIdx)        {            // normal spectrum (width = resolution)          case 0:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Lime' Color.Red' Color.Black' false' false' false);            break;            // normal spectrum (full resolution)          case 1:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.SteelBlue' Color.Pink' Color.Black' false' true' true);            break;            // line spectrum (width = resolution)          case 2:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                               Color.Black' 2' 2' false' false' false);            break;            // line spectrum (full resolution)          case 3:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                               Color.Black' 16' 4' false' true' true);            break;            // ellipse spectrum (width = resolution)          case 4:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                                  Color.Black' 1' 2' false' false' false);            break;            // ellipse spectrum (full resolution)          case 5:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                                  Color.Black' 2' 4' false' true' true);            break;            // dot spectrum (width = resolution)          case 6:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.Lime' Color.Red' Color.Black' 1' 0' false' false'                                                              false);            break;            // dot spectrum (full resolution)          case 7:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.SteelBlue' Color.Pink' Color.Black' 2' 1' false' false'                                                              true);            break;            // peak spectrum (width = resolution)          case 8:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.SeaGreen'                                                                   Color.LightGreen' Color.Orange' Color.Black' 2' 1' 2'                                                                   10' false' false' false);            break;            // peak spectrum (full resolution)          case 9:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.GreenYellow'                                                                   Color.RoyalBlue' Color.DarkOrange' Color.Black' 23' 5'                                                                   3' 5' false' true' true);            break;            // wave spectrum (width = resolution)          case 10:            pictureBoxSpectrum.Image = _vis.CreateSpectrumWave(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Yellow' Color.Orange'                                                               Color.Black' 1' false' false' false);            break;            // dancing beans spectrum (width = resolution)          case 11:            pictureBoxSpectrum.Image = _vis.CreateSpectrumBean(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Chocolate'                                                               Color.DarkGoldenrod' Color.Black' 4' false' false' true);            break;            // dancing text spectrum (width = resolution)          case 12:            pictureBoxSpectrum.Image = _vis.CreateSpectrumText(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.White' Color.Tomato'                                                               Color.Black' "MPTagThat is Great"' false' false' true);            break;            // frequency detection          case 13:            float amp = _vis.DetectFrequency(_stream' 10' 500' true);            if (amp > 0.3)              pictureBoxSpectrum.BackColor = Color.Red;            else              pictureBoxSpectrum.BackColor = Color.Black;            break;            // 3D voice print          case 14:            // we need to draw directly directly on the picture box...            // normally you would encapsulate this in your own custom control            Graphics g = Graphics.FromHwnd(pictureBoxSpectrum.Handle);            g.SmoothingMode = SmoothingMode.AntiAlias;            _vis.CreateSpectrum3DVoicePrint(_stream' g'                                            new Rectangle(0' 0' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height)'                                            Color.Black' Color.White' _voicePrintIdx' false' false);            g.Dispose();            // next call will be at the next pos            _voicePrintIdx++;            if (_voicePrintIdx > pictureBoxSpectrum.Width - 1)              _voicePrintIdx = 0;            break;            // WaveForm          case 15:            pictureBoxSpectrum.Image = _vis.CreateWaveForm(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Green' Color.Red' Color.Gray' Color.Black' 1' true' false'                                                           true);            break;        }
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,DrawSpectrum,The following statement contains a magic number: switch (_specIdx)        {            // normal spectrum (width = resolution)          case 0:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Lime' Color.Red' Color.Black' false' false' false);            break;            // normal spectrum (full resolution)          case 1:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.SteelBlue' Color.Pink' Color.Black' false' true' true);            break;            // line spectrum (width = resolution)          case 2:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                               Color.Black' 2' 2' false' false' false);            break;            // line spectrum (full resolution)          case 3:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                               Color.Black' 16' 4' false' true' true);            break;            // ellipse spectrum (width = resolution)          case 4:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                                  Color.Black' 1' 2' false' false' false);            break;            // ellipse spectrum (full resolution)          case 5:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                                  Color.Black' 2' 4' false' true' true);            break;            // dot spectrum (width = resolution)          case 6:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.Lime' Color.Red' Color.Black' 1' 0' false' false'                                                              false);            break;            // dot spectrum (full resolution)          case 7:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.SteelBlue' Color.Pink' Color.Black' 2' 1' false' false'                                                              true);            break;            // peak spectrum (width = resolution)          case 8:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.SeaGreen'                                                                   Color.LightGreen' Color.Orange' Color.Black' 2' 1' 2'                                                                   10' false' false' false);            break;            // peak spectrum (full resolution)          case 9:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.GreenYellow'                                                                   Color.RoyalBlue' Color.DarkOrange' Color.Black' 23' 5'                                                                   3' 5' false' true' true);            break;            // wave spectrum (width = resolution)          case 10:            pictureBoxSpectrum.Image = _vis.CreateSpectrumWave(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Yellow' Color.Orange'                                                               Color.Black' 1' false' false' false);            break;            // dancing beans spectrum (width = resolution)          case 11:            pictureBoxSpectrum.Image = _vis.CreateSpectrumBean(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Chocolate'                                                               Color.DarkGoldenrod' Color.Black' 4' false' false' true);            break;            // dancing text spectrum (width = resolution)          case 12:            pictureBoxSpectrum.Image = _vis.CreateSpectrumText(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.White' Color.Tomato'                                                               Color.Black' "MPTagThat is Great"' false' false' true);            break;            // frequency detection          case 13:            float amp = _vis.DetectFrequency(_stream' 10' 500' true);            if (amp > 0.3)              pictureBoxSpectrum.BackColor = Color.Red;            else              pictureBoxSpectrum.BackColor = Color.Black;            break;            // 3D voice print          case 14:            // we need to draw directly directly on the picture box...            // normally you would encapsulate this in your own custom control            Graphics g = Graphics.FromHwnd(pictureBoxSpectrum.Handle);            g.SmoothingMode = SmoothingMode.AntiAlias;            _vis.CreateSpectrum3DVoicePrint(_stream' g'                                            new Rectangle(0' 0' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height)'                                            Color.Black' Color.White' _voicePrintIdx' false' false);            g.Dispose();            // next call will be at the next pos            _voicePrintIdx++;            if (_voicePrintIdx > pictureBoxSpectrum.Width - 1)              _voicePrintIdx = 0;            break;            // WaveForm          case 15:            pictureBoxSpectrum.Image = _vis.CreateWaveForm(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Green' Color.Red' Color.Gray' Color.Black' 1' true' false'                                                           true);            break;        }
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,DrawSpectrum,The following statement contains a magic number: switch (_specIdx)        {            // normal spectrum (width = resolution)          case 0:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Lime' Color.Red' Color.Black' false' false' false);            break;            // normal spectrum (full resolution)          case 1:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.SteelBlue' Color.Pink' Color.Black' false' true' true);            break;            // line spectrum (width = resolution)          case 2:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                               Color.Black' 2' 2' false' false' false);            break;            // line spectrum (full resolution)          case 3:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                               Color.Black' 16' 4' false' true' true);            break;            // ellipse spectrum (width = resolution)          case 4:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                                  Color.Black' 1' 2' false' false' false);            break;            // ellipse spectrum (full resolution)          case 5:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                                  Color.Black' 2' 4' false' true' true);            break;            // dot spectrum (width = resolution)          case 6:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.Lime' Color.Red' Color.Black' 1' 0' false' false'                                                              false);            break;            // dot spectrum (full resolution)          case 7:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.SteelBlue' Color.Pink' Color.Black' 2' 1' false' false'                                                              true);            break;            // peak spectrum (width = resolution)          case 8:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.SeaGreen'                                                                   Color.LightGreen' Color.Orange' Color.Black' 2' 1' 2'                                                                   10' false' false' false);            break;            // peak spectrum (full resolution)          case 9:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.GreenYellow'                                                                   Color.RoyalBlue' Color.DarkOrange' Color.Black' 23' 5'                                                                   3' 5' false' true' true);            break;            // wave spectrum (width = resolution)          case 10:            pictureBoxSpectrum.Image = _vis.CreateSpectrumWave(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Yellow' Color.Orange'                                                               Color.Black' 1' false' false' false);            break;            // dancing beans spectrum (width = resolution)          case 11:            pictureBoxSpectrum.Image = _vis.CreateSpectrumBean(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Chocolate'                                                               Color.DarkGoldenrod' Color.Black' 4' false' false' true);            break;            // dancing text spectrum (width = resolution)          case 12:            pictureBoxSpectrum.Image = _vis.CreateSpectrumText(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.White' Color.Tomato'                                                               Color.Black' "MPTagThat is Great"' false' false' true);            break;            // frequency detection          case 13:            float amp = _vis.DetectFrequency(_stream' 10' 500' true);            if (amp > 0.3)              pictureBoxSpectrum.BackColor = Color.Red;            else              pictureBoxSpectrum.BackColor = Color.Black;            break;            // 3D voice print          case 14:            // we need to draw directly directly on the picture box...            // normally you would encapsulate this in your own custom control            Graphics g = Graphics.FromHwnd(pictureBoxSpectrum.Handle);            g.SmoothingMode = SmoothingMode.AntiAlias;            _vis.CreateSpectrum3DVoicePrint(_stream' g'                                            new Rectangle(0' 0' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height)'                                            Color.Black' Color.White' _voicePrintIdx' false' false);            g.Dispose();            // next call will be at the next pos            _voicePrintIdx++;            if (_voicePrintIdx > pictureBoxSpectrum.Width - 1)              _voicePrintIdx = 0;            break;            // WaveForm          case 15:            pictureBoxSpectrum.Image = _vis.CreateWaveForm(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Green' Color.Red' Color.Gray' Color.Black' 1' true' false'                                                           true);            break;        }
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,DrawSpectrum,The following statement contains a magic number: switch (_specIdx)        {            // normal spectrum (width = resolution)          case 0:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Lime' Color.Red' Color.Black' false' false' false);            break;            // normal spectrum (full resolution)          case 1:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.SteelBlue' Color.Pink' Color.Black' false' true' true);            break;            // line spectrum (width = resolution)          case 2:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                               Color.Black' 2' 2' false' false' false);            break;            // line spectrum (full resolution)          case 3:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                               Color.Black' 16' 4' false' true' true);            break;            // ellipse spectrum (width = resolution)          case 4:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                                  Color.Black' 1' 2' false' false' false);            break;            // ellipse spectrum (full resolution)          case 5:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                                  Color.Black' 2' 4' false' true' true);            break;            // dot spectrum (width = resolution)          case 6:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.Lime' Color.Red' Color.Black' 1' 0' false' false'                                                              false);            break;            // dot spectrum (full resolution)          case 7:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.SteelBlue' Color.Pink' Color.Black' 2' 1' false' false'                                                              true);            break;            // peak spectrum (width = resolution)          case 8:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.SeaGreen'                                                                   Color.LightGreen' Color.Orange' Color.Black' 2' 1' 2'                                                                   10' false' false' false);            break;            // peak spectrum (full resolution)          case 9:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.GreenYellow'                                                                   Color.RoyalBlue' Color.DarkOrange' Color.Black' 23' 5'                                                                   3' 5' false' true' true);            break;            // wave spectrum (width = resolution)          case 10:            pictureBoxSpectrum.Image = _vis.CreateSpectrumWave(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Yellow' Color.Orange'                                                               Color.Black' 1' false' false' false);            break;            // dancing beans spectrum (width = resolution)          case 11:            pictureBoxSpectrum.Image = _vis.CreateSpectrumBean(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Chocolate'                                                               Color.DarkGoldenrod' Color.Black' 4' false' false' true);            break;            // dancing text spectrum (width = resolution)          case 12:            pictureBoxSpectrum.Image = _vis.CreateSpectrumText(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.White' Color.Tomato'                                                               Color.Black' "MPTagThat is Great"' false' false' true);            break;            // frequency detection          case 13:            float amp = _vis.DetectFrequency(_stream' 10' 500' true);            if (amp > 0.3)              pictureBoxSpectrum.BackColor = Color.Red;            else              pictureBoxSpectrum.BackColor = Color.Black;            break;            // 3D voice print          case 14:            // we need to draw directly directly on the picture box...            // normally you would encapsulate this in your own custom control            Graphics g = Graphics.FromHwnd(pictureBoxSpectrum.Handle);            g.SmoothingMode = SmoothingMode.AntiAlias;            _vis.CreateSpectrum3DVoicePrint(_stream' g'                                            new Rectangle(0' 0' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height)'                                            Color.Black' Color.White' _voicePrintIdx' false' false);            g.Dispose();            // next call will be at the next pos            _voicePrintIdx++;            if (_voicePrintIdx > pictureBoxSpectrum.Width - 1)              _voicePrintIdx = 0;            break;            // WaveForm          case 15:            pictureBoxSpectrum.Image = _vis.CreateWaveForm(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Green' Color.Red' Color.Gray' Color.Black' 1' true' false'                                                           true);            break;        }
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,DrawSpectrum,The following statement contains a magic number: switch (_specIdx)        {            // normal spectrum (width = resolution)          case 0:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Lime' Color.Red' Color.Black' false' false' false);            break;            // normal spectrum (full resolution)          case 1:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.SteelBlue' Color.Pink' Color.Black' false' true' true);            break;            // line spectrum (width = resolution)          case 2:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                               Color.Black' 2' 2' false' false' false);            break;            // line spectrum (full resolution)          case 3:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                               Color.Black' 16' 4' false' true' true);            break;            // ellipse spectrum (width = resolution)          case 4:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                                  Color.Black' 1' 2' false' false' false);            break;            // ellipse spectrum (full resolution)          case 5:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                                  Color.Black' 2' 4' false' true' true);            break;            // dot spectrum (width = resolution)          case 6:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.Lime' Color.Red' Color.Black' 1' 0' false' false'                                                              false);            break;            // dot spectrum (full resolution)          case 7:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.SteelBlue' Color.Pink' Color.Black' 2' 1' false' false'                                                              true);            break;            // peak spectrum (width = resolution)          case 8:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.SeaGreen'                                                                   Color.LightGreen' Color.Orange' Color.Black' 2' 1' 2'                                                                   10' false' false' false);            break;            // peak spectrum (full resolution)          case 9:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.GreenYellow'                                                                   Color.RoyalBlue' Color.DarkOrange' Color.Black' 23' 5'                                                                   3' 5' false' true' true);            break;            // wave spectrum (width = resolution)          case 10:            pictureBoxSpectrum.Image = _vis.CreateSpectrumWave(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Yellow' Color.Orange'                                                               Color.Black' 1' false' false' false);            break;            // dancing beans spectrum (width = resolution)          case 11:            pictureBoxSpectrum.Image = _vis.CreateSpectrumBean(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Chocolate'                                                               Color.DarkGoldenrod' Color.Black' 4' false' false' true);            break;            // dancing text spectrum (width = resolution)          case 12:            pictureBoxSpectrum.Image = _vis.CreateSpectrumText(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.White' Color.Tomato'                                                               Color.Black' "MPTagThat is Great"' false' false' true);            break;            // frequency detection          case 13:            float amp = _vis.DetectFrequency(_stream' 10' 500' true);            if (amp > 0.3)              pictureBoxSpectrum.BackColor = Color.Red;            else              pictureBoxSpectrum.BackColor = Color.Black;            break;            // 3D voice print          case 14:            // we need to draw directly directly on the picture box...            // normally you would encapsulate this in your own custom control            Graphics g = Graphics.FromHwnd(pictureBoxSpectrum.Handle);            g.SmoothingMode = SmoothingMode.AntiAlias;            _vis.CreateSpectrum3DVoicePrint(_stream' g'                                            new Rectangle(0' 0' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height)'                                            Color.Black' Color.White' _voicePrintIdx' false' false);            g.Dispose();            // next call will be at the next pos            _voicePrintIdx++;            if (_voicePrintIdx > pictureBoxSpectrum.Width - 1)              _voicePrintIdx = 0;            break;            // WaveForm          case 15:            pictureBoxSpectrum.Image = _vis.CreateWaveForm(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Green' Color.Red' Color.Gray' Color.Black' 1' true' false'                                                           true);            break;        }
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,DrawSpectrum,The following statement contains a magic number: switch (_specIdx)        {            // normal spectrum (width = resolution)          case 0:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Lime' Color.Red' Color.Black' false' false' false);            break;            // normal spectrum (full resolution)          case 1:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.SteelBlue' Color.Pink' Color.Black' false' true' true);            break;            // line spectrum (width = resolution)          case 2:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                               Color.Black' 2' 2' false' false' false);            break;            // line spectrum (full resolution)          case 3:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                               Color.Black' 16' 4' false' true' true);            break;            // ellipse spectrum (width = resolution)          case 4:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                                  Color.Black' 1' 2' false' false' false);            break;            // ellipse spectrum (full resolution)          case 5:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                                  Color.Black' 2' 4' false' true' true);            break;            // dot spectrum (width = resolution)          case 6:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.Lime' Color.Red' Color.Black' 1' 0' false' false'                                                              false);            break;            // dot spectrum (full resolution)          case 7:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.SteelBlue' Color.Pink' Color.Black' 2' 1' false' false'                                                              true);            break;            // peak spectrum (width = resolution)          case 8:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.SeaGreen'                                                                   Color.LightGreen' Color.Orange' Color.Black' 2' 1' 2'                                                                   10' false' false' false);            break;            // peak spectrum (full resolution)          case 9:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.GreenYellow'                                                                   Color.RoyalBlue' Color.DarkOrange' Color.Black' 23' 5'                                                                   3' 5' false' true' true);            break;            // wave spectrum (width = resolution)          case 10:            pictureBoxSpectrum.Image = _vis.CreateSpectrumWave(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Yellow' Color.Orange'                                                               Color.Black' 1' false' false' false);            break;            // dancing beans spectrum (width = resolution)          case 11:            pictureBoxSpectrum.Image = _vis.CreateSpectrumBean(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Chocolate'                                                               Color.DarkGoldenrod' Color.Black' 4' false' false' true);            break;            // dancing text spectrum (width = resolution)          case 12:            pictureBoxSpectrum.Image = _vis.CreateSpectrumText(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.White' Color.Tomato'                                                               Color.Black' "MPTagThat is Great"' false' false' true);            break;            // frequency detection          case 13:            float amp = _vis.DetectFrequency(_stream' 10' 500' true);            if (amp > 0.3)              pictureBoxSpectrum.BackColor = Color.Red;            else              pictureBoxSpectrum.BackColor = Color.Black;            break;            // 3D voice print          case 14:            // we need to draw directly directly on the picture box...            // normally you would encapsulate this in your own custom control            Graphics g = Graphics.FromHwnd(pictureBoxSpectrum.Handle);            g.SmoothingMode = SmoothingMode.AntiAlias;            _vis.CreateSpectrum3DVoicePrint(_stream' g'                                            new Rectangle(0' 0' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height)'                                            Color.Black' Color.White' _voicePrintIdx' false' false);            g.Dispose();            // next call will be at the next pos            _voicePrintIdx++;            if (_voicePrintIdx > pictureBoxSpectrum.Width - 1)              _voicePrintIdx = 0;            break;            // WaveForm          case 15:            pictureBoxSpectrum.Image = _vis.CreateWaveForm(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Green' Color.Red' Color.Gray' Color.Black' 1' true' false'                                                           true);            break;        }
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,DrawSpectrum,The following statement contains a magic number: switch (_specIdx)        {            // normal spectrum (width = resolution)          case 0:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Lime' Color.Red' Color.Black' false' false' false);            break;            // normal spectrum (full resolution)          case 1:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.SteelBlue' Color.Pink' Color.Black' false' true' true);            break;            // line spectrum (width = resolution)          case 2:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                               Color.Black' 2' 2' false' false' false);            break;            // line spectrum (full resolution)          case 3:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                               Color.Black' 16' 4' false' true' true);            break;            // ellipse spectrum (width = resolution)          case 4:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                                  Color.Black' 1' 2' false' false' false);            break;            // ellipse spectrum (full resolution)          case 5:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                                  Color.Black' 2' 4' false' true' true);            break;            // dot spectrum (width = resolution)          case 6:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.Lime' Color.Red' Color.Black' 1' 0' false' false'                                                              false);            break;            // dot spectrum (full resolution)          case 7:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.SteelBlue' Color.Pink' Color.Black' 2' 1' false' false'                                                              true);            break;            // peak spectrum (width = resolution)          case 8:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.SeaGreen'                                                                   Color.LightGreen' Color.Orange' Color.Black' 2' 1' 2'                                                                   10' false' false' false);            break;            // peak spectrum (full resolution)          case 9:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.GreenYellow'                                                                   Color.RoyalBlue' Color.DarkOrange' Color.Black' 23' 5'                                                                   3' 5' false' true' true);            break;            // wave spectrum (width = resolution)          case 10:            pictureBoxSpectrum.Image = _vis.CreateSpectrumWave(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Yellow' Color.Orange'                                                               Color.Black' 1' false' false' false);            break;            // dancing beans spectrum (width = resolution)          case 11:            pictureBoxSpectrum.Image = _vis.CreateSpectrumBean(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Chocolate'                                                               Color.DarkGoldenrod' Color.Black' 4' false' false' true);            break;            // dancing text spectrum (width = resolution)          case 12:            pictureBoxSpectrum.Image = _vis.CreateSpectrumText(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.White' Color.Tomato'                                                               Color.Black' "MPTagThat is Great"' false' false' true);            break;            // frequency detection          case 13:            float amp = _vis.DetectFrequency(_stream' 10' 500' true);            if (amp > 0.3)              pictureBoxSpectrum.BackColor = Color.Red;            else              pictureBoxSpectrum.BackColor = Color.Black;            break;            // 3D voice print          case 14:            // we need to draw directly directly on the picture box...            // normally you would encapsulate this in your own custom control            Graphics g = Graphics.FromHwnd(pictureBoxSpectrum.Handle);            g.SmoothingMode = SmoothingMode.AntiAlias;            _vis.CreateSpectrum3DVoicePrint(_stream' g'                                            new Rectangle(0' 0' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height)'                                            Color.Black' Color.White' _voicePrintIdx' false' false);            g.Dispose();            // next call will be at the next pos            _voicePrintIdx++;            if (_voicePrintIdx > pictureBoxSpectrum.Width - 1)              _voicePrintIdx = 0;            break;            // WaveForm          case 15:            pictureBoxSpectrum.Image = _vis.CreateWaveForm(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Green' Color.Red' Color.Gray' Color.Black' 1' true' false'                                                           true);            break;        }
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,DrawSpectrum,The following statement contains a magic number: switch (_specIdx)        {            // normal spectrum (width = resolution)          case 0:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Lime' Color.Red' Color.Black' false' false' false);            break;            // normal spectrum (full resolution)          case 1:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.SteelBlue' Color.Pink' Color.Black' false' true' true);            break;            // line spectrum (width = resolution)          case 2:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                               Color.Black' 2' 2' false' false' false);            break;            // line spectrum (full resolution)          case 3:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                               Color.Black' 16' 4' false' true' true);            break;            // ellipse spectrum (width = resolution)          case 4:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                                  Color.Black' 1' 2' false' false' false);            break;            // ellipse spectrum (full resolution)          case 5:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                                  Color.Black' 2' 4' false' true' true);            break;            // dot spectrum (width = resolution)          case 6:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.Lime' Color.Red' Color.Black' 1' 0' false' false'                                                              false);            break;            // dot spectrum (full resolution)          case 7:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.SteelBlue' Color.Pink' Color.Black' 2' 1' false' false'                                                              true);            break;            // peak spectrum (width = resolution)          case 8:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.SeaGreen'                                                                   Color.LightGreen' Color.Orange' Color.Black' 2' 1' 2'                                                                   10' false' false' false);            break;            // peak spectrum (full resolution)          case 9:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.GreenYellow'                                                                   Color.RoyalBlue' Color.DarkOrange' Color.Black' 23' 5'                                                                   3' 5' false' true' true);            break;            // wave spectrum (width = resolution)          case 10:            pictureBoxSpectrum.Image = _vis.CreateSpectrumWave(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Yellow' Color.Orange'                                                               Color.Black' 1' false' false' false);            break;            // dancing beans spectrum (width = resolution)          case 11:            pictureBoxSpectrum.Image = _vis.CreateSpectrumBean(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Chocolate'                                                               Color.DarkGoldenrod' Color.Black' 4' false' false' true);            break;            // dancing text spectrum (width = resolution)          case 12:            pictureBoxSpectrum.Image = _vis.CreateSpectrumText(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.White' Color.Tomato'                                                               Color.Black' "MPTagThat is Great"' false' false' true);            break;            // frequency detection          case 13:            float amp = _vis.DetectFrequency(_stream' 10' 500' true);            if (amp > 0.3)              pictureBoxSpectrum.BackColor = Color.Red;            else              pictureBoxSpectrum.BackColor = Color.Black;            break;            // 3D voice print          case 14:            // we need to draw directly directly on the picture box...            // normally you would encapsulate this in your own custom control            Graphics g = Graphics.FromHwnd(pictureBoxSpectrum.Handle);            g.SmoothingMode = SmoothingMode.AntiAlias;            _vis.CreateSpectrum3DVoicePrint(_stream' g'                                            new Rectangle(0' 0' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height)'                                            Color.Black' Color.White' _voicePrintIdx' false' false);            g.Dispose();            // next call will be at the next pos            _voicePrintIdx++;            if (_voicePrintIdx > pictureBoxSpectrum.Width - 1)              _voicePrintIdx = 0;            break;            // WaveForm          case 15:            pictureBoxSpectrum.Image = _vis.CreateWaveForm(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Green' Color.Red' Color.Gray' Color.Black' 1' true' false'                                                           true);            break;        }
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,DrawSpectrum,The following statement contains a magic number: switch (_specIdx)        {            // normal spectrum (width = resolution)          case 0:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Lime' Color.Red' Color.Black' false' false' false);            break;            // normal spectrum (full resolution)          case 1:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.SteelBlue' Color.Pink' Color.Black' false' true' true);            break;            // line spectrum (width = resolution)          case 2:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                               Color.Black' 2' 2' false' false' false);            break;            // line spectrum (full resolution)          case 3:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                               Color.Black' 16' 4' false' true' true);            break;            // ellipse spectrum (width = resolution)          case 4:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                                  Color.Black' 1' 2' false' false' false);            break;            // ellipse spectrum (full resolution)          case 5:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                                  Color.Black' 2' 4' false' true' true);            break;            // dot spectrum (width = resolution)          case 6:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.Lime' Color.Red' Color.Black' 1' 0' false' false'                                                              false);            break;            // dot spectrum (full resolution)          case 7:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.SteelBlue' Color.Pink' Color.Black' 2' 1' false' false'                                                              true);            break;            // peak spectrum (width = resolution)          case 8:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.SeaGreen'                                                                   Color.LightGreen' Color.Orange' Color.Black' 2' 1' 2'                                                                   10' false' false' false);            break;            // peak spectrum (full resolution)          case 9:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.GreenYellow'                                                                   Color.RoyalBlue' Color.DarkOrange' Color.Black' 23' 5'                                                                   3' 5' false' true' true);            break;            // wave spectrum (width = resolution)          case 10:            pictureBoxSpectrum.Image = _vis.CreateSpectrumWave(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Yellow' Color.Orange'                                                               Color.Black' 1' false' false' false);            break;            // dancing beans spectrum (width = resolution)          case 11:            pictureBoxSpectrum.Image = _vis.CreateSpectrumBean(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Chocolate'                                                               Color.DarkGoldenrod' Color.Black' 4' false' false' true);            break;            // dancing text spectrum (width = resolution)          case 12:            pictureBoxSpectrum.Image = _vis.CreateSpectrumText(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.White' Color.Tomato'                                                               Color.Black' "MPTagThat is Great"' false' false' true);            break;            // frequency detection          case 13:            float amp = _vis.DetectFrequency(_stream' 10' 500' true);            if (amp > 0.3)              pictureBoxSpectrum.BackColor = Color.Red;            else              pictureBoxSpectrum.BackColor = Color.Black;            break;            // 3D voice print          case 14:            // we need to draw directly directly on the picture box...            // normally you would encapsulate this in your own custom control            Graphics g = Graphics.FromHwnd(pictureBoxSpectrum.Handle);            g.SmoothingMode = SmoothingMode.AntiAlias;            _vis.CreateSpectrum3DVoicePrint(_stream' g'                                            new Rectangle(0' 0' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height)'                                            Color.Black' Color.White' _voicePrintIdx' false' false);            g.Dispose();            // next call will be at the next pos            _voicePrintIdx++;            if (_voicePrintIdx > pictureBoxSpectrum.Width - 1)              _voicePrintIdx = 0;            break;            // WaveForm          case 15:            pictureBoxSpectrum.Image = _vis.CreateWaveForm(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Green' Color.Red' Color.Gray' Color.Black' 1' true' false'                                                           true);            break;        }
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,DrawSpectrum,The following statement contains a magic number: switch (_specIdx)        {            // normal spectrum (width = resolution)          case 0:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Lime' Color.Red' Color.Black' false' false' false);            break;            // normal spectrum (full resolution)          case 1:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.SteelBlue' Color.Pink' Color.Black' false' true' true);            break;            // line spectrum (width = resolution)          case 2:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                               Color.Black' 2' 2' false' false' false);            break;            // line spectrum (full resolution)          case 3:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                               Color.Black' 16' 4' false' true' true);            break;            // ellipse spectrum (width = resolution)          case 4:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                                  Color.Black' 1' 2' false' false' false);            break;            // ellipse spectrum (full resolution)          case 5:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                                  Color.Black' 2' 4' false' true' true);            break;            // dot spectrum (width = resolution)          case 6:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.Lime' Color.Red' Color.Black' 1' 0' false' false'                                                              false);            break;            // dot spectrum (full resolution)          case 7:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.SteelBlue' Color.Pink' Color.Black' 2' 1' false' false'                                                              true);            break;            // peak spectrum (width = resolution)          case 8:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.SeaGreen'                                                                   Color.LightGreen' Color.Orange' Color.Black' 2' 1' 2'                                                                   10' false' false' false);            break;            // peak spectrum (full resolution)          case 9:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.GreenYellow'                                                                   Color.RoyalBlue' Color.DarkOrange' Color.Black' 23' 5'                                                                   3' 5' false' true' true);            break;            // wave spectrum (width = resolution)          case 10:            pictureBoxSpectrum.Image = _vis.CreateSpectrumWave(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Yellow' Color.Orange'                                                               Color.Black' 1' false' false' false);            break;            // dancing beans spectrum (width = resolution)          case 11:            pictureBoxSpectrum.Image = _vis.CreateSpectrumBean(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Chocolate'                                                               Color.DarkGoldenrod' Color.Black' 4' false' false' true);            break;            // dancing text spectrum (width = resolution)          case 12:            pictureBoxSpectrum.Image = _vis.CreateSpectrumText(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.White' Color.Tomato'                                                               Color.Black' "MPTagThat is Great"' false' false' true);            break;            // frequency detection          case 13:            float amp = _vis.DetectFrequency(_stream' 10' 500' true);            if (amp > 0.3)              pictureBoxSpectrum.BackColor = Color.Red;            else              pictureBoxSpectrum.BackColor = Color.Black;            break;            // 3D voice print          case 14:            // we need to draw directly directly on the picture box...            // normally you would encapsulate this in your own custom control            Graphics g = Graphics.FromHwnd(pictureBoxSpectrum.Handle);            g.SmoothingMode = SmoothingMode.AntiAlias;            _vis.CreateSpectrum3DVoicePrint(_stream' g'                                            new Rectangle(0' 0' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height)'                                            Color.Black' Color.White' _voicePrintIdx' false' false);            g.Dispose();            // next call will be at the next pos            _voicePrintIdx++;            if (_voicePrintIdx > pictureBoxSpectrum.Width - 1)              _voicePrintIdx = 0;            break;            // WaveForm          case 15:            pictureBoxSpectrum.Image = _vis.CreateWaveForm(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Green' Color.Red' Color.Gray' Color.Black' 1' true' false'                                                           true);            break;        }
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,DrawSpectrum,The following statement contains a magic number: switch (_specIdx)        {            // normal spectrum (width = resolution)          case 0:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Lime' Color.Red' Color.Black' false' false' false);            break;            // normal spectrum (full resolution)          case 1:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.SteelBlue' Color.Pink' Color.Black' false' true' true);            break;            // line spectrum (width = resolution)          case 2:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                               Color.Black' 2' 2' false' false' false);            break;            // line spectrum (full resolution)          case 3:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                               Color.Black' 16' 4' false' true' true);            break;            // ellipse spectrum (width = resolution)          case 4:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                                  Color.Black' 1' 2' false' false' false);            break;            // ellipse spectrum (full resolution)          case 5:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                                  Color.Black' 2' 4' false' true' true);            break;            // dot spectrum (width = resolution)          case 6:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.Lime' Color.Red' Color.Black' 1' 0' false' false'                                                              false);            break;            // dot spectrum (full resolution)          case 7:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.SteelBlue' Color.Pink' Color.Black' 2' 1' false' false'                                                              true);            break;            // peak spectrum (width = resolution)          case 8:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.SeaGreen'                                                                   Color.LightGreen' Color.Orange' Color.Black' 2' 1' 2'                                                                   10' false' false' false);            break;            // peak spectrum (full resolution)          case 9:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.GreenYellow'                                                                   Color.RoyalBlue' Color.DarkOrange' Color.Black' 23' 5'                                                                   3' 5' false' true' true);            break;            // wave spectrum (width = resolution)          case 10:            pictureBoxSpectrum.Image = _vis.CreateSpectrumWave(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Yellow' Color.Orange'                                                               Color.Black' 1' false' false' false);            break;            // dancing beans spectrum (width = resolution)          case 11:            pictureBoxSpectrum.Image = _vis.CreateSpectrumBean(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Chocolate'                                                               Color.DarkGoldenrod' Color.Black' 4' false' false' true);            break;            // dancing text spectrum (width = resolution)          case 12:            pictureBoxSpectrum.Image = _vis.CreateSpectrumText(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.White' Color.Tomato'                                                               Color.Black' "MPTagThat is Great"' false' false' true);            break;            // frequency detection          case 13:            float amp = _vis.DetectFrequency(_stream' 10' 500' true);            if (amp > 0.3)              pictureBoxSpectrum.BackColor = Color.Red;            else              pictureBoxSpectrum.BackColor = Color.Black;            break;            // 3D voice print          case 14:            // we need to draw directly directly on the picture box...            // normally you would encapsulate this in your own custom control            Graphics g = Graphics.FromHwnd(pictureBoxSpectrum.Handle);            g.SmoothingMode = SmoothingMode.AntiAlias;            _vis.CreateSpectrum3DVoicePrint(_stream' g'                                            new Rectangle(0' 0' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height)'                                            Color.Black' Color.White' _voicePrintIdx' false' false);            g.Dispose();            // next call will be at the next pos            _voicePrintIdx++;            if (_voicePrintIdx > pictureBoxSpectrum.Width - 1)              _voicePrintIdx = 0;            break;            // WaveForm          case 15:            pictureBoxSpectrum.Image = _vis.CreateWaveForm(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Green' Color.Red' Color.Gray' Color.Black' 1' true' false'                                                           true);            break;        }
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,DrawSpectrum,The following statement contains a magic number: switch (_specIdx)        {            // normal spectrum (width = resolution)          case 0:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Lime' Color.Red' Color.Black' false' false' false);            break;            // normal spectrum (full resolution)          case 1:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.SteelBlue' Color.Pink' Color.Black' false' true' true);            break;            // line spectrum (width = resolution)          case 2:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                               Color.Black' 2' 2' false' false' false);            break;            // line spectrum (full resolution)          case 3:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                               Color.Black' 16' 4' false' true' true);            break;            // ellipse spectrum (width = resolution)          case 4:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                                  Color.Black' 1' 2' false' false' false);            break;            // ellipse spectrum (full resolution)          case 5:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                                  Color.Black' 2' 4' false' true' true);            break;            // dot spectrum (width = resolution)          case 6:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.Lime' Color.Red' Color.Black' 1' 0' false' false'                                                              false);            break;            // dot spectrum (full resolution)          case 7:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.SteelBlue' Color.Pink' Color.Black' 2' 1' false' false'                                                              true);            break;            // peak spectrum (width = resolution)          case 8:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.SeaGreen'                                                                   Color.LightGreen' Color.Orange' Color.Black' 2' 1' 2'                                                                   10' false' false' false);            break;            // peak spectrum (full resolution)          case 9:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.GreenYellow'                                                                   Color.RoyalBlue' Color.DarkOrange' Color.Black' 23' 5'                                                                   3' 5' false' true' true);            break;            // wave spectrum (width = resolution)          case 10:            pictureBoxSpectrum.Image = _vis.CreateSpectrumWave(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Yellow' Color.Orange'                                                               Color.Black' 1' false' false' false);            break;            // dancing beans spectrum (width = resolution)          case 11:            pictureBoxSpectrum.Image = _vis.CreateSpectrumBean(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Chocolate'                                                               Color.DarkGoldenrod' Color.Black' 4' false' false' true);            break;            // dancing text spectrum (width = resolution)          case 12:            pictureBoxSpectrum.Image = _vis.CreateSpectrumText(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.White' Color.Tomato'                                                               Color.Black' "MPTagThat is Great"' false' false' true);            break;            // frequency detection          case 13:            float amp = _vis.DetectFrequency(_stream' 10' 500' true);            if (amp > 0.3)              pictureBoxSpectrum.BackColor = Color.Red;            else              pictureBoxSpectrum.BackColor = Color.Black;            break;            // 3D voice print          case 14:            // we need to draw directly directly on the picture box...            // normally you would encapsulate this in your own custom control            Graphics g = Graphics.FromHwnd(pictureBoxSpectrum.Handle);            g.SmoothingMode = SmoothingMode.AntiAlias;            _vis.CreateSpectrum3DVoicePrint(_stream' g'                                            new Rectangle(0' 0' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height)'                                            Color.Black' Color.White' _voicePrintIdx' false' false);            g.Dispose();            // next call will be at the next pos            _voicePrintIdx++;            if (_voicePrintIdx > pictureBoxSpectrum.Width - 1)              _voicePrintIdx = 0;            break;            // WaveForm          case 15:            pictureBoxSpectrum.Image = _vis.CreateWaveForm(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Green' Color.Red' Color.Gray' Color.Black' 1' true' false'                                                           true);            break;        }
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.panelMiddle.Location = new System.Drawing.Point(170' 0);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.panelMiddle.Size = new System.Drawing.Size(477' 60);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.panelMiddle.Size = new System.Drawing.Size(477' 60);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.panelMiddle.TabIndex = 11;
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.lbAlbumText.Location = new System.Drawing.Point(186' 42);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.lbAlbumText.Location = new System.Drawing.Point(186' 42);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.lbAlbumText.Size = new System.Drawing.Size(36' 13);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.lbAlbumText.Size = new System.Drawing.Size(36' 13);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.lbAlbumText.TabIndex = 14;
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.lbArtistText.Location = new System.Drawing.Point(186' 24);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.lbArtistText.Location = new System.Drawing.Point(186' 24);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.lbArtistText.Size = new System.Drawing.Size(30' 13);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.lbArtistText.Size = new System.Drawing.Size(30' 13);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.lbArtistText.TabIndex = 13;
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.lbTitleText.Location = new System.Drawing.Point(186' 8);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.lbTitleText.Location = new System.Drawing.Point(186' 8);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.lbTitleText.Size = new System.Drawing.Size(27' 13);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.lbTitleText.Size = new System.Drawing.Size(27' 13);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.lbTitleText.TabIndex = 12;
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.lbAlbum.Location = new System.Drawing.Point(99' 42);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.lbAlbum.Location = new System.Drawing.Point(99' 42);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.lbAlbum.MinimumSize = new System.Drawing.Size(80' 0);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.lbAlbum.Size = new System.Drawing.Size(80' 13);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.lbAlbum.Size = new System.Drawing.Size(80' 13);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.lbAlbum.TabIndex = 11;
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.lbArtist.Location = new System.Drawing.Point(99' 24);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.lbArtist.Location = new System.Drawing.Point(99' 24);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.lbArtist.MinimumSize = new System.Drawing.Size(80' 0);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.lbArtist.Size = new System.Drawing.Size(80' 13);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.lbArtist.Size = new System.Drawing.Size(80' 13);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.lbArtist.TabIndex = 10;
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.lbTitle.Location = new System.Drawing.Point(98' 8);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.lbTitle.Location = new System.Drawing.Point(98' 8);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.lbTitle.MinimumSize = new System.Drawing.Size(80' 0);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.lbTitle.Size = new System.Drawing.Size(80' 13);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.lbTitle.Size = new System.Drawing.Size(80' 13);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.lbTitle.TabIndex = 9;
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.pictureBoxSpectrum.Location = new System.Drawing.Point(5' 28);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.pictureBoxSpectrum.Location = new System.Drawing.Point(5' 28);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.pictureBoxSpectrum.Size = new System.Drawing.Size(87' 26);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.pictureBoxSpectrum.Size = new System.Drawing.Size(87' 26);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.pictureBoxTime.Location = new System.Drawing.Point(5' 2);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.pictureBoxTime.Location = new System.Drawing.Point(5' 2);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.pictureBoxTime.Size = new System.Drawing.Size(87' 26);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.pictureBoxTime.Size = new System.Drawing.Size(87' 26);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.panelRight.Location = new System.Drawing.Point(647' 0);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.panelRight.Size = new System.Drawing.Size(121' 60);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.panelRight.Size = new System.Drawing.Size(121' 60);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.panelRight.TabIndex = 10;
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.btnPlayList.Location = new System.Drawing.Point(7' 8);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.btnPlayList.Location = new System.Drawing.Point(7' 8);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.btnPlayList.Size = new System.Drawing.Size(30' 23);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.btnPlayList.Size = new System.Drawing.Size(30' 23);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.btnPlayList.TabIndex = 8;
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.panelLeft.Size = new System.Drawing.Size(170' 60);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.panelLeft.Size = new System.Drawing.Size(170' 60);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.panelLeft.TabIndex = 9;
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.pictureBoxPlayPause.Location = new System.Drawing.Point(56' 4);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.pictureBoxPlayPause.Location = new System.Drawing.Point(56' 4);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.pictureBoxPlayPause.Size = new System.Drawing.Size(49' 52);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.pictureBoxPlayPause.Size = new System.Drawing.Size(49' 52);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.pictureBoxPlayPause.TabIndex = 7;
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonPrev.Location = new System.Drawing.Point(15' 28);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonPrev.Location = new System.Drawing.Point(15' 28);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonPrev.Size = new System.Drawing.Size(25' 17);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonPrev.Size = new System.Drawing.Size(25' 17);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonPrev.TabIndex = 2;
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonNext.Location = new System.Drawing.Point(120' 28);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonNext.Location = new System.Drawing.Point(120' 28);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonNext.Size = new System.Drawing.Size(25' 17);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonNext.Size = new System.Drawing.Size(25' 17);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonNext.TabIndex = 6;
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.panelTop.Size = new System.Drawing.Size(768' 10);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.panelTop.Size = new System.Drawing.Size(768' 10);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.panelTop.TabIndex = 12;
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.playBackSlider.BorderRoundRectSize = new System.Drawing.Size(8' 8);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.playBackSlider.BorderRoundRectSize = new System.Drawing.Size(8' 8);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.playBackSlider.Size = new System.Drawing.Size(768' 10);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.playBackSlider.Size = new System.Drawing.Size(768' 10);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.playBackSlider.ThumbRoundRectSize = new System.Drawing.Size(8' 8);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.playBackSlider.ThumbRoundRectSize = new System.Drawing.Size(8' 8);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.playBackSlider.ThumbSize = 20;
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.panelBottom.Location = new System.Drawing.Point(0' 10);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.panelBottom.Size = new System.Drawing.Size(768' 60);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.panelBottom.Size = new System.Drawing.Size(768' 60);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.panelBottom.TabIndex = 13;
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(768' 70);
Magic Number,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(768' 70);
Magic Number,MPTagThat.Player,PlayList,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayList.cs,PlayList_Load,The following statement contains a magic number: col.Width = 140;
Magic Number,MPTagThat.Player,PlayList,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayList.cs,PlayList_Load,The following statement contains a magic number: col.Width = 70;
Magic Number,MPTagThat.Player,PlayList,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayList.cs,Localisation,The following statement contains a magic number: contextMenu.Items[2].Text = localisation.ToString("player"' "LoadPlayList");
Magic Number,MPTagThat.Player,PlayList,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayList.cs,Localisation,The following statement contains a magic number: contextMenu.Items[3].Text = localisation.ToString("player"' "SavePlayList");
Magic Number,MPTagThat.Player,PlayList,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayList.cs,playListGrid_DragDrop,The following statement contains a magic number: foreach (TrackData track in selectedRows)        {          PlayListData playListItem = new PlayListData();          playListItem.FileName = track.FullFileName;          playListItem.Artist = track.Artist;          playListItem.Album = track.Album;          playListItem.Title = track.Title;          playListItem.Duration = track.Duration.Substring(3' 5); // Just get Minutes and seconds            _player.PlayList.Add(playListItem);        }
Magic Number,MPTagThat.Player,PlayList,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayList.cs,playListGrid_DragDrop,The following statement contains a magic number: foreach (TrackData track in selectedRows)        {          PlayListData playListItem = new PlayListData();          playListItem.FileName = track.FullFileName;          playListItem.Artist = track.Artist;          playListItem.Album = track.Album;          playListItem.Title = track.Title;          playListItem.Duration = track.Duration.Substring(3' 5); // Just get Minutes and seconds            _player.PlayList.Add(playListItem);        }
Magic Number,MPTagThat.Player,PlayList,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayList.cs,InitializeComponent,The following statement contains a magic number: this.PanelBottom.Location = new System.Drawing.Point(0' 507);
Magic Number,MPTagThat.Player,PlayList,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayList.cs,InitializeComponent,The following statement contains a magic number: this.PanelBottom.Size = new System.Drawing.Size(178' 61);
Magic Number,MPTagThat.Player,PlayList,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayList.cs,InitializeComponent,The following statement contains a magic number: this.PanelBottom.Size = new System.Drawing.Size(178' 61);
Magic Number,MPTagThat.Player,PlayList,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayList.cs,InitializeComponent,The following statement contains a magic number: this.PanelBottom.TabIndex = 10;
Magic Number,MPTagThat.Player,PlayList,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayList.cs,InitializeComponent,The following statement contains a magic number: this.ckUseRelativePath.Location = new System.Drawing.Point(5' 41);
Magic Number,MPTagThat.Player,PlayList,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayList.cs,InitializeComponent,The following statement contains a magic number: this.ckUseRelativePath.Location = new System.Drawing.Point(5' 41);
Magic Number,MPTagThat.Player,PlayList,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayList.cs,InitializeComponent,The following statement contains a magic number: this.ckUseRelativePath.Size = new System.Drawing.Size(106' 17);
Magic Number,MPTagThat.Player,PlayList,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayList.cs,InitializeComponent,The following statement contains a magic number: this.ckUseRelativePath.Size = new System.Drawing.Size(106' 17);
Magic Number,MPTagThat.Player,PlayList,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayList.cs,InitializeComponent,The following statement contains a magic number: this.ckUseRelativePath.TabIndex = 2;
Magic Number,MPTagThat.Player,PlayList,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayList.cs,InitializeComponent,The following statement contains a magic number: this.btPlayListSave.Location = new System.Drawing.Point(93' 12);
Magic Number,MPTagThat.Player,PlayList,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayList.cs,InitializeComponent,The following statement contains a magic number: this.btPlayListSave.Location = new System.Drawing.Point(93' 12);
Magic Number,MPTagThat.Player,PlayList,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayList.cs,InitializeComponent,The following statement contains a magic number: this.btPlayListSave.Size = new System.Drawing.Size(90' 23);
Magic Number,MPTagThat.Player,PlayList,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayList.cs,InitializeComponent,The following statement contains a magic number: this.btPlayListSave.Size = new System.Drawing.Size(90' 23);
Magic Number,MPTagThat.Player,PlayList,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayList.cs,InitializeComponent,The following statement contains a magic number: this.btPlaylistLoad.Location = new System.Drawing.Point(2' 12);
Magic Number,MPTagThat.Player,PlayList,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayList.cs,InitializeComponent,The following statement contains a magic number: this.btPlaylistLoad.Location = new System.Drawing.Point(2' 12);
Magic Number,MPTagThat.Player,PlayList,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayList.cs,InitializeComponent,The following statement contains a magic number: this.btPlaylistLoad.Size = new System.Drawing.Size(90' 23);
Magic Number,MPTagThat.Player,PlayList,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayList.cs,InitializeComponent,The following statement contains a magic number: this.btPlaylistLoad.Size = new System.Drawing.Size(90' 23);
Magic Number,MPTagThat.Player,PlayList,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayList.cs,InitializeComponent,The following statement contains a magic number: this.panelTop.Size = new System.Drawing.Size(178' 568);
Magic Number,MPTagThat.Player,PlayList,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayList.cs,InitializeComponent,The following statement contains a magic number: this.panelTop.Size = new System.Drawing.Size(178' 568);
Magic Number,MPTagThat.Player,PlayList,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayList.cs,InitializeComponent,The following statement contains a magic number: this.panelTop.TabIndex = 9;
Magic Number,MPTagThat.Player,PlayList,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayList.cs,InitializeComponent,The following statement contains a magic number: this.playListGrid.Size = new System.Drawing.Size(178' 568);
Magic Number,MPTagThat.Player,PlayList,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayList.cs,InitializeComponent,The following statement contains a magic number: this.playListGrid.Size = new System.Drawing.Size(178' 568);
Magic Number,MPTagThat.Player,PlayList,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayList.cs,InitializeComponent,The following statement contains a magic number: this.playListGrid.TabIndex = 8;
Magic Number,MPTagThat.Player,PlayList,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayList.cs,InitializeComponent,The following statement contains a magic number: this.contextMenu.Size = new System.Drawing.Size(142' 76);
Magic Number,MPTagThat.Player,PlayList,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayList.cs,InitializeComponent,The following statement contains a magic number: this.contextMenu.Size = new System.Drawing.Size(142' 76);
Magic Number,MPTagThat.Player,PlayList,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayList.cs,InitializeComponent,The following statement contains a magic number: this.menuClear.Size = new System.Drawing.Size(141' 22);
Magic Number,MPTagThat.Player,PlayList,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayList.cs,InitializeComponent,The following statement contains a magic number: this.menuClear.Size = new System.Drawing.Size(141' 22);
Magic Number,MPTagThat.Player,PlayList,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayList.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator1.Size = new System.Drawing.Size(138' 6);
Magic Number,MPTagThat.Player,PlayList,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayList.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator1.Size = new System.Drawing.Size(138' 6);
Magic Number,MPTagThat.Player,PlayList,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayList.cs,InitializeComponent,The following statement contains a magic number: this.menuLoad.Size = new System.Drawing.Size(141' 22);
Magic Number,MPTagThat.Player,PlayList,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayList.cs,InitializeComponent,The following statement contains a magic number: this.menuLoad.Size = new System.Drawing.Size(141' 22);
Magic Number,MPTagThat.Player,PlayList,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayList.cs,InitializeComponent,The following statement contains a magic number: this.menuSave.Size = new System.Drawing.Size(141' 22);
Magic Number,MPTagThat.Player,PlayList,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayList.cs,InitializeComponent,The following statement contains a magic number: this.menuSave.Size = new System.Drawing.Size(141' 22);
Magic Number,MPTagThat.Player,PlayList,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayList.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(178' 568);
Magic Number,MPTagThat.Player,PlayList,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayList.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(178' 568);
Missing Default,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitPreferences,The following switch statement is missing a default case: switch (Options.MainSettings.ID3V2Version)        {          case 0: // APE Tags embedded in mp3            radioButtonUseApe.Checked = true;            break;            case 3:            radioButtonUseV3.Checked = true;            break;            case 4:            radioButtonUseV4.Checked = true;            break;        }
Missing Default,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,InitPreferences,The following switch statement is missing a default case: switch (Options.MainSettings.ID3Version)        {          case 1:            radioButtonID3V1.Checked = true;            break;            case 2:            radioButtonID3V2.Checked = true;            break;            case 3:            radioButtonID3Both.Checked = true;            break;        }
Missing Default,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,comboBoxPreset_SelectedIndexChanged,The following switch statement is missing a default case: switch (comboBoxLamePresets.SelectedIndex)        {          case 0:            textBoxPresetDesc.Text = localisation.ToString("settings"' "DescPrefMedium");            break;            case 1:            textBoxPresetDesc.Text = localisation.ToString("settings"' "DescPrefStandard");            break;            case 2:            textBoxPresetDesc.Text = localisation.ToString("settings"' "DescPrefExtreme");            break;            case 3:            textBoxPresetDesc.Text = localisation.ToString("settings"' "DescPrefInsane");            break;            case 4:            textBoxPresetDesc.Text = localisation.ToString("settings"' "DescPrefABR");            textBoxABRBitrate.Enabled = true;            break;        }
Missing Default,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,comboBoxWMAEncoderFormat_SelectedIndexChanged,The following switch statement is missing a default case: switch (comboBoxWMAEncoderFormat.SelectedIndex)        {          case 0: // WMA Standard            comboBoxWMACbrVbr.Items.AddRange(new[]                                               {                                                 new Item(localisation.ToString("settings"' "Cbr")' "Cbr"' "")'                                                 new Item(localisation.ToString("settings"' "Vbr")' "Vbr"' "")                                               });            SetWMACbrVbr();            break;            case 1: // WMA Pro            comboBoxWMACbrVbr.Items.AddRange(new[]                                               {                                                 new Item(localisation.ToString("settings"' "Cbr")' "Cbr"' "")'                                                 new Item(localisation.ToString("settings"' "Vbr")' "Vbr"' "")                                               });            SetWMACbrVbr();            break;            case 2: // WMA LossLess            comboBoxWMACbrVbr.Items.AddRange(new[] { new Item(localisation.ToString("settings"' "Vbr")' "Vbr"' "") });            comboBoxWMACbrVbr.SelectedIndex = 0;            break;        }
Missing Default,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,OnAction,The following switch statement is missing a default case: switch (action.ID)        {          case Action.ActionType.ACTION_HELP:            Process.Start(Options.HelpLocation);            break;            case Action.ActionType.ACTION_EXIT:            Application.Exit();            break;            case Action.ActionType.ACTION_FILENAME2TAG:            if (!_gridViewControl.CheckSelections(true))              break;              dialog = new FileNameToTag.FileNameToTag(this);            ShowDialogInDetailPanel(dialog);            _showForm = false;            break;            case Action.ActionType.ACTION_TAG2FILENAME:            if (!_gridViewControl.CheckSelections(true))              break;              dialog = new TagToFileName.TagToFileName(this);            ShowDialogInDetailPanel(dialog);            _showForm = false;            break;            case Action.ActionType.ACTION_TAGFROMINTERNET:            if (!_gridViewControl.CheckSelections(true))              break;              InternetLookup.InternetLookup lookup = new InternetLookup.InternetLookup(this);            lookup.SearchForAlbumInformation();            _tagEditControl.FillForm();            SetGalleryItem();            break;            case Action.ActionType.ACTION_ORGANISE:            if (!_gridViewControl.CheckSelections(true))              break;              dialog = new OrganiseFiles(this);            ShowDialogInDetailPanel(dialog);            _showForm = false;            break;            case Action.ActionType.ACTION_OPTIONS:            this.backstageView.Visible = true;            this.backstageView.CurrentPage = backstageViewPageOptions;            break;            case Action.ActionType.ACTION_SELECTALL:            TreeNodePath node = _treeViewControl.TreeView.SelectedNode as TreeNodePath;            if (node != null)              _gridViewControl.View.SelectAll();            break;            case Action.ActionType.ACTION_COPY:            if (_gridViewControl.View.CurrentCell != null)            {              Clipboard.SetDataObject(_gridViewControl.View.CurrentCell.Value);            }            break;            case Action.ActionType.ACTION_SCRIPTEXECUTE:            ApplicationCommands.ScriptExecute.Execute();            //ribbon.ribbonButtonScriptExecute_Click(this' new EventArgs());            break;            case Action.ActionType.ACTION_TREEREFRESH:            _treeViewControl.RefreshFolders();            break;            case Action.ActionType.ACTION_FOLDERDELETE:            if (!_treeViewSelected)              break;              _treeViewControl.DeleteFolder();            break;            case Action.ActionType.ACTION_CASECONVERSION:            if (!_gridViewControl.CheckSelections(true))              break;              dialog = new CaseConversion.CaseConversion(this);            ShowDialogInDetailPanel(dialog);            break;            case Action.ActionType.ACTION_REFRESH:            RefreshTrackList();            break;            case Action.ActionType.ACTION_DELETE:            // Don't handle the Delete key' if the user edits directly the cell            // let the grid control handle it            if (_gridViewControl.View.IsCurrentCellInEditMode)            {              handled = false;              break;            }              if (_treeViewFolderSelected)            {              MessageBox.Show(localisation.ToString("message"' "DeleteFolders")' ""' MessageBoxButtons.OK'                              MessageBoxIcon.Exclamation);              break;            }              // Don't handle the delete key' if the view is not focused            // So that delete may be used on other controls as well            if (!_gridViewControl.View.Focused)            {              handled = false;              break;            }              _gridViewControl.DeleteTracks();            break;            case Action.ActionType.ACTION_TOGGLESTREEVIEWSPLITTER:            splitterLeft.ToggleState();            break;            case Action.ActionType.ACTION_TOGGLEQUICKEDIT:            splitterBottom.ToggleState();            break;            case Action.ActionType.ACTION_TOGGLEMISCFILES:            splitterRight.ToggleState();            break;            case Action.ActionType.ACTION_FIND:            _dialog = new FindReplace(this);            (_dialog as FindReplace).Replace = false;            ShowCenteredForm(_dialog);            _showForm = false; // Don't show the dialog in the Keypress event            break;            case Action.ActionType.ACTION_REPLACE:            _dialog = new FindReplace(this);            (_dialog as FindReplace).Replace = true;            ShowCenteredForm(_dialog);            _showForm = false; // Don't show the dialog in the Keypress event            break;        }
Missing Default,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,OnMessageReceive,The following switch statement is missing a default case: switch (action.ToLower())        {          // Message sent' when a Theme is changing          case "themechanged":            {              SetRibbonColorBase();              textBoxPresetDesc.BackColor = ServiceScope.Get<IThemeManager>().CurrentTheme.BackColor;              textBoxPresetDesc.ForeColor = ServiceScope.Get<IThemeManager>().CurrentTheme.LabelForeColor;              treeViewKeys.BackColor = ServiceScope.Get<IThemeManager>().CurrentTheme.BackColor;              treeViewKeys.ForeColor = ServiceScope.Get<IThemeManager>().CurrentTheme.LabelForeColor;              break;            }            case "languagechanged":            {              LanguageChanged();              Refresh();              break;            }            case "statusprogress":            toolStripStatusLabelProgress.Text = message.MessageData["data"] as string;            break;        }
Missing Default,MPTagThat,Main,C:\repos\MediaPortal_MPTagThat\MPTagThat\Main.cs,TagsTabButton_Executed,The following switch statement is missing a default case: switch (e.Command.Name)        {          case "IdentifyFiles":          case "GetCoverArt":          case "GetLyrics":          case "RemoveComment":          case "RemoveCoverArt":          case "ValidateMP3File":          case "FixMP3File":          case "ReplayGain":          case "Bpm":            TracksGridView.ExecuteCommand(e.Command.Name);            break;                    case "FileNameToTag":            FileNameToTag.FileNameToTag dlgFileNameToTag = new FileNameToTag.FileNameToTag(this);            ShowDialogInDetailPanel(dlgFileNameToTag);            break;            case "TagFromInternet":            InternetLookup.InternetLookup lookup = new InternetLookup.InternetLookup(this);            lookup.SearchForAlbumInformation();            _tagEditControl.FillForm();            SetGalleryItem();            break;            case "AutoNumber":            TracksGridView.AutoNumber();            break;            case "OrganiseFiles":            OrganiseFiles dlgOrganise = new OrganiseFiles(this);            ShowDialogInDetailPanel(dlgOrganise);            break;            case "RenameFiles":            TagToFileName.TagToFileName dlgTagToFile = new TagToFileName.TagToFileName(this' true);            break;            case "RenameFileOptions":            TagToFileName.TagToFileName dlgTagToFileOptions = new TagToFileName.TagToFileName(this' false);            ShowDialogInDetailPanel(dlgTagToFileOptions);            break;            case "CaseConversion":            CaseConversion.CaseConversion dlgCaseConversion = new CaseConversion.CaseConversion(this' true);            dlgCaseConversion.CaseConvertSelectedTracks();            break;            case "CaseConversionOptions":            CaseConversion.CaseConversion dlgCaseConversionOptions = new CaseConversion.CaseConversion(this);            ShowDialogInDetailPanel(dlgCaseConversionOptions);            break;            case "DeleteAllTags":            TracksGridView.DeleteTags(TagTypes.AllTags);            break;            case "DeleteID3v1":            TracksGridView.DeleteTags(TagTypes.Id3v1);            break;            case "DeleteID3v2":            TracksGridView.DeleteTags(TagTypes.Id3v2);            break;            case "ScriptExecute":            if (comboBoxScripts.SelectedIndex < 0)              return;              Item tag = (Item)comboBoxScripts.SelectedItem;            TracksGridView.ExecuteScript((string)tag.Value);            break;            case "AddToBurner":            TracksGridView.tracksGrid_AddToBurner(sender' new EventArgs());            break;            case "AddToConversion":            TracksGridView.tracksGrid_AddToConvert(sender' new EventArgs());            break;            case "AddToPlaylist":            TracksGridView.tracksGrid_AddToPlayList(sender' new EventArgs());            break;            case "Find":            FindReplace findDlg = new FindReplace(this);            findDlg.Replace = false;            ShowCenteredForm(findDlg);            break;            case "Replace":            FindReplace replaceDlg = new FindReplace(this);            replaceDlg.Replace = true;            ShowCenteredForm(replaceDlg);            break;        }
Missing Default,MPTagThat,MiscInfoControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\MiscInfoControl.cs,OnMessageReceive,The following switch statement is missing a default case: switch (action.ToLower())        {          case "themechanged":            {              SetColorBase();              break;            }            case "languagechanged":            {              Refresh();              break;            }        }
Missing Default,MPTagThat,TreeViewControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\TreeViewControl.cs,OnMessageReceive,The following switch statement is missing a default case: switch (action.ToLower())        {          case "languagechanged":            {              LocaliseScreen();              Refresh();              break;            }            case "themechanged":            {              dataGridViewTagFilter.BackgroundColor = ServiceScope.Get<IThemeManager>().CurrentTheme.BackColor;              treeViewFolderBrowser.BackColor = ServiceScope.Get<IThemeManager>().CurrentTheme.BackColor;              treeViewFolderBrowser.ForeColor = ServiceScope.Get<IThemeManager>().CurrentTheme.LabelForeColor;              break;            }        }
Missing Default,MPTagThat.Dialogues,Preview,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\Preview.cs,AddRemoveColumn,The following switch statement is missing a default case: switch (parm)        {          case "<A>":            if (column.Name != "Artist")            {              RemoveGridColumn(position);              AddGridColumn(position' "Artist"' localisation.ToString("column_header"' "Artist")' 150);            }            break;            case "<T>":            if (column.Name != "Title")            {              RemoveGridColumn(position);              AddGridColumn(position' "Title"' localisation.ToString("column_header"' "Title")' 150);            }            break;            case "<B>":            if (column.Name != "Album")            {              RemoveGridColumn(position);              AddGridColumn(position' "Album"' localisation.ToString("column_header"' "Album")' 150);            }            break;            case "<Y>":            if (column.Name != "Track")            {              RemoveGridColumn(position);              AddGridColumn(position' "Year"' localisation.ToString("column_header"' "Year")' 40);            }            break;            case "<K>":            if (column.Name != "Track")            {              RemoveGridColumn(position);              AddGridColumn(position' "Track"' localisation.ToString("column_header"' "Track")' 40);            }            break;            case "<k>":            if (column.Name != "NumTrack")            {              RemoveGridColumn(position);              AddGridColumn(position' "NumTrack"' localisation.ToString("column_header"' "NumTracks")' 80);            }            break;            case "<D>":            if (column.Name != "Disc")            {              RemoveGridColumn(position);              AddGridColumn(position' "Disc"' localisation.ToString("column_header"' "Disc")' 40);            }            break;            case "<d>":            if (column.Name != "NumDisc")            {              RemoveGridColumn(position);              AddGridColumn(position' "NumDisc"' localisation.ToString("column_header"' "NumDiscs")' 80);            }            break;            case "<G>":            if (column.Name != "Genre")            {              RemoveGridColumn(position);              AddGridColumn(position' "Genre"' localisation.ToString("column_header"' "Genre")' 100);            }            break;            case "<O>":            if (column.Name != "AlbumArtist")            {              RemoveGridColumn(position);              AddGridColumn(position' "AlbumArtist"' localisation.ToString("column_header"' "AlbumArtist")' 150);            }            break;            case "<C>":            if (column.Name != "Comment")            {              RemoveGridColumn(position);              AddGridColumn(position' "Comment"' localisation.ToString("column_header"' "Comment")' 150);            }            break;            case "<N>":            if (column.Name != "Conductor")            {              RemoveGridColumn(position);              AddGridColumn(position' "Conductor"' localisation.ToString("column_header"' "Conductor")' 150);            }            break;            case "<R>":            if (column.Name != "Composer")            {              RemoveGridColumn(position);              AddGridColumn(position' "Composer"' localisation.ToString("column_header"' "Composer")' 150);            }            break;            case "<U>":            if (column.Name != "Grouping")            {              RemoveGridColumn(position);              AddGridColumn(position' "Grouping"' localisation.ToString("column_header"' "Grouping")' 150);            }            break;            case "<S>":            if (column.Name != "Subtitle")            {              RemoveGridColumn(position);              AddGridColumn(position' "Subtitle"' localisation.ToString("column_header"' "Subtitle")' 150);            }            break;            case "<M>":            if (column.Name != "Interpreter")            {              RemoveGridColumn(position);              AddGridColumn(position' "Interpreter"' localisation.ToString("column_header"' "Interpreter")' 150);            }            break;            case "<E>":            if (column.Name != "BPM")            {              RemoveGridColumn(position);              AddGridColumn(position' "BPM"' localisation.ToString("column_header"' "BPM")' 50);            }            break;            case "<X>":            // ignore it            break;        }
Missing Default,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,ReplaceParametersWithValues,The following switch statement is missing a default case: switch (parm)            {              case "<A>":                if (preview)                  trackPreview.Artist = splittedFileValues[index];                else                  track.Artist = splittedFileValues[index];                break;                case "<T>":                if (preview)                  trackPreview.Title = splittedFileValues[index];                else                  track.Title = splittedFileValues[index];                break;                case "<B>":                if (preview)                  trackPreview.Album = splittedFileValues[index];                else                  track.Album = splittedFileValues[index];                break;                case "<Y>":                if (preview)                  trackPreview.Year = splittedFileValues[index];                else                  track.Year = Convert.ToInt32(splittedFileValues[index]);                break;                case "<K>":                if (preview)                  trackPreview.Track = splittedFileValues[index];                else                  track.TrackNumber = Convert.ToUInt32(splittedFileValues[index]);                break;                case "<k>":                if (preview)                  trackPreview.NumTrack = splittedFileValues[index];                else                  track.TrackCount = Convert.ToUInt32(splittedFileValues[index]);                break;                case "<D>":                if (preview)                  trackPreview.Disc = splittedFileValues[index];                else                  track.DiscNumber = Convert.ToUInt32(splittedFileValues[index]);                break;                case "<d>":                if (preview)                  trackPreview.NumDisc = splittedFileValues[index];                else                  track.DiscCount = Convert.ToUInt32(splittedFileValues[index]);                break;                case "<G>":                if (preview)                  trackPreview.Genre = splittedFileValues[index];                else                  track.Genre = splittedFileValues[index];                break;                case "<O>":                if (preview)                  trackPreview.AlbumArtist = splittedFileValues[index];                else                  track.AlbumArtist = splittedFileValues[index];                break;                case "<C>":                if (preview)                  trackPreview.Comment = splittedFileValues[index];                else                  track.Comment = splittedFileValues[index];                break;                case "<N>":                if (preview)                  trackPreview.Conductor = splittedFileValues[index];                else                  track.Conductor = splittedFileValues[index];                break;                case "<R>":                if (preview)                  trackPreview.Composer = splittedFileValues[index];                else                  track.Composer = splittedFileValues[index];                break;                case "<U>":                if (preview)                  trackPreview.Grouping = splittedFileValues[index];                else                  track.Grouping = splittedFileValues[index];                break;                case "<S>":                if (preview)                  trackPreview.SubTitle = splittedFileValues[index];                else                  track.SubTitle = splittedFileValues[index];                break;                case "<M>":                if (preview)                  trackPreview.Interpreter = splittedFileValues[index];                else                  track.Interpreter = splittedFileValues[index];                break;                case "<E>":                if (preview)                  trackPreview.BPM = splittedFileValues[index];                else                  track.BPM = Convert.ToInt32(splittedFileValues[index]);                break;                case "<X>":                // ignore it                break;            }
Missing Default,MPTagThat.FileNameToTag,FileNameToTag,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\FileNameToTag\FileNameToTag.cs,cbFormat_Keypress,The following switch statement is missing a default case: switch (e.KeyChar)        {          case '|':          case '"':          case '/':          case '*':          case '?':          case ':':            e.Handled = true;            break;        }
Missing Default,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,OnTextChanged,The following switch statement is missing a default case: switch (tb.Name)        {          case "tbTrack":          case "tbNumTracks":            ckTrack.Checked = true;            break;            case "tbDisc":          case "tbNumDiscs":            ckDisk.Checked = true;            break;            case "tbTitle":            ckTitle.Checked = true;            break;            case "tbYear":            ckYear.Checked = true;            break;            case "tbBPM":            ckBPM.Checked = true;            break;            case "tbConductor":            ckConductor.Checked = true;            break;            case "tbComposer":            ckComposer.Checked = true;            break;            case "tbInterpretedBy":            ckInterpretedBy.Checked = true;            break;            case "tbTextWriter":            ckTextWriter.Checked = true;            break;            case "tbPublisher":            ckPublisher.Checked = true;            break;            case "tbEncodedBy":            ckEncodedBy.Checked = true;            break;            case "tbCopyright":            ckCopyright.Checked = true;            break;            case "tbContentGroup":            ckContentGroup.Checked = true;            break;            case "tbSubTitle":            ckSubTitle.Checked = true;            break;            case "tbArtistSort":            ckArtistSort.Checked = true;            break;            case "tbAlbumArtistSort":            ckAlbumArtistSort.Checked = true;            break;            case "tbAlbumSort":            ckAlbumSort.Checked = true;            break;            case "tbTitleSort":            ckTitleSort.Checked = true;            break;            case "tbOriginalAlbum":            ckOriginalAlbum.Checked = true;            break;            case "tbOriginalArtist":            ckOriginalArtist.Checked = true;            break;            case "tbOriginalFileName":            ckOriginalFileName.Checked = true;            break;            case "tbOriginalLyricsWriter":            ckOriginalLyricsWriter.Checked = true;            break;            case "tbOriginalOwner":            ckOriginalOwner.Checked = true;            break;            case "tbOriginalRelease":            ckOriginalRelease.Checked = true;            break;            case "tbCopyrightUrl":            ckCopyrightUrl.Checked = true;            break;            case "tbOfficialAudioFileUrl":            ckOfficialAudioFileUrl.Checked = true;            break;            case "tbOfficialArtistUrl":            ckOfficialArtistUrl.Checked = true;            break;            case "tbOfficialAudioSourceUrl":            ckOfficialAudioSourceUrl.Checked = true;            break;            case "tbOfficialInternetRadioUrl":            ckOfficialInternetRadioUrl.Checked = true;            break;            case "tbOfficialPaymentUrl":            ckOfficialPaymentUrl.Checked = true;            break;            case "tbOfficialPublisherUrl":            ckOfficialPublisherUrl.Checked = true;            break;            case "tbCommercialInformationUrl":            ckCommercialInformationUrl.Checked = true;            break;        }
Missing Default,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,OnComboChanged,The following switch statement is missing a default case: switch (cb.Name)          {            case "cbMediaType":              ckMediaType.Checked = true;              break;              case "cbArtist":              if (_needUpdateArtists && _musicBrainzDatabaseActive)              {                if (_canUpdateArtists)                {                  _canUpdateArtists = false;                  SearchAutocompleteArtists();                }                else                {                  RestartArtistTimer();                }              }              break;              case "cbAlbumArtist":              if (_needUpdateAlbumArtists && _musicBrainzDatabaseActive)              {                if (_canUpdateAlbumArtists)                {                  _canUpdateAlbumArtists = false;                  SearchAutocompleteAlbumArtists();                }                else                {                  RestartAlbumArtistTimer();                }              }              break;              case "cbAlbum":              ckAlbum.Checked = true;              break;              case "cbGenre":              ckGenre.Checked = true;              break;          }
Missing Default,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,OnAction,The following switch statement is missing a default case: switch (action.ID)        {          case Action.ActionType.ACTION_PAGEDOWN:            // Scrolls the Tab Pages forward            if (tabControlTagEdit.SelectedTabPage == tabControlTagEdit.TabPages[tabControlTagEdit.TabPages.Count - 1])            {              tabControlTagEdit.SelectFirstTab();            }            else            {              tabControlTagEdit.SelectNextTab();            }            break;            case Action.ActionType.ACTION_PAGEUP:            // Scrolls the Tab Pages backwards            if (tabControlTagEdit.SelectedTabPage == tabControlTagEdit.TabPages[0])            {              tabControlTagEdit.SelectLastTab();            }            else            {              tabControlTagEdit.SelectPreviousTab();            }            break;            case Action.ActionType.ACTION_NEXTFILE:            if (main.TracksGridView.View.SelectedRows.Count == 1)            {              curRow = main.TracksGridView.View.SelectedRows[0].Index;              _selectedRowIndex = main.TracksGridView.View.SelectedRows[0].Index;              if ((curRow + 1) < main.TracksGridView.View.RowCount)              {                btApply_Click(null' new EventArgs());                main.TracksGridView.View.Rows[curRow].Selected = false;                main.TracksGridView.View.Rows[curRow + 1].Selected = true;              }            }            break;            case Action.ActionType.ACTION_PREVFILE:            if (main.TracksGridView.View.SelectedRows.Count == 1)            {              curRow = main.TracksGridView.View.SelectedRows[0].Index;              _selectedRowIndex = main.TracksGridView.View.SelectedRows[0].Index;              if ((curRow - 1) >= 0)              {                btApply_Click(null' new EventArgs());                main.TracksGridView.View.Rows[curRow].Selected = false;                main.TracksGridView.View.Rows[curRow - 1].Selected = true;              }            }            break;        }
Missing Default,MPTagThat.TagEdit,TagEditControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagEdit\TagEditControl.cs,OnMessageReceive,The following switch statement is missing a default case: switch (action.ToLower())        {          case "customgenresrefreshed":            cbGenre.Items.Clear();            cbGenre.Items.AddRange(Genres.Audio);            foreach (string customGenre in Options.MainSettings.CustomGenres)            {              cbGenre.Items.Add(customGenre);            }            break;        }
Missing Default,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,burnManager_BurnProgressUpdate,The following switch statement is missing a default case: switch (eBurnStatus)          {            case BurnStatus.Checking:              lbBurningStatus.Text = localisation.ToString("Burning"' "Checking");              break;              case BurnStatus.Blanking:              lbBurningStatus.Text = localisation.ToString("Burning"' "Erasing");              break;              case BurnStatus.LeadIn:              lbBurningStatus.Text = localisation.ToString("Burning"' "Leaadin");              break;              case BurnStatus.LeadOut:              dataGridViewBurn.Rows[dataGridViewBurn.Rows.Count - 1].Cells[0].Value = 100;              lbBurningStatus.Text = localisation.ToString("Burning"' "Leadout");              break;              case BurnStatus.Burning:              lbBurningStatus.Text = localisation.ToString("Burning"' "Burning");              break;              case BurnStatus.Finished:              lbBurningStatus.Text = localisation.ToString("Burning"' "Finished");              break;          }
Missing Default,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,OnMessageReceive,The following switch statement is missing a default case: switch (action.ToLower())        {          case "languagechanged":            LanguageChanged();            Refresh();            break;            case "themechanged":            {              dataGridViewBurn.BackgroundColor = ServiceScope.Get<IThemeManager>().CurrentTheme.BackColor;              break;            }        }
Missing Default,MPTagThat.GridView,GridViewBurn,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Burning\GridViewBurn.cs,ProcessCmdKey,The following switch statement is missing a default case: switch (keyData)        {          case Keys.Delete:            for (int i = dataGridViewBurn.Rows.Count - 1; i > -1; i--)            {              if (!dataGridViewBurn.Rows[i].Selected)                continue;                bindingList.RemoveAt(i);            }            return true;        }
Missing Default,MPTagThat.GridView,GridViewConvert,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Conversion\GridViewConvert.cs,OnMessageReceiveEncoding,The following switch statement is missing a default case: switch (action.ToLower())          {            case "progress":              double percentComplete = (double)message.MessageData["percent"];              dataGridViewConvert.Rows[rowIndex].Cells[0].Value = (int)percentComplete;              break;              case "newfilename":              _bindingList[rowIndex].NewFileName = (string)message.MessageData["filename"];              dataGridViewConvert.Refresh();              break;              case "error":            {              dataGridViewConvert.Rows[rowIndex].Cells[0].Value = (string)message.MessageData["error"];              dataGridViewConvert.Rows[rowIndex].Cells[0].ToolTipText = (string)message.MessageData["tooltip"];              break;            }          }
Missing Default,MPTagThat.GridView,GridViewConvert,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Conversion\GridViewConvert.cs,OnMessageReceive,The following switch statement is missing a default case: switch (action.ToLower())          {            case "languagechanged":              LanguageChanged();              Refresh();              break;              case "themechanged":            {              dataGridViewConvert.BackgroundColor = ServiceScope.Get<IThemeManager>().CurrentTheme.BackColor;              break;            }          }
Missing Default,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,ProcessCmdKey,The following switch statement is missing a default case: switch (keyData)        {          case Keys.Control | Keys.A:            dataGridViewRip.SelectAll();            return true;        }
Missing Default,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,OnMessageReceiveEncoding,The following switch statement is missing a default case: switch (action.ToLower())  				{  					case "progress":  						double percentComplete = (double)message.MessageData["percent"];  						dataGridViewRip.Rows[_currentRow].Cells[1].Value = (int)percentComplete;  						break;  				}
Missing Default,MPTagThat.GridView,GridViewRip,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Ripping\GridViewRip.cs,OnMessageReceive,The following switch statement is missing a default case: switch (action.ToLower())        {          case "languagechanged":            LanguageChanged();            Refresh();            break;            case "themechanged":            {              dataGridViewRip.BackgroundColor = ServiceScope.Get<IThemeManager>().CurrentTheme.BackColor;              break;            }        }
Missing Default,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,CreateQuery,The following switch statement is missing a default case: switch (searchString[0])        {          case "artist":            query = FormatMultipleEntries(searchString[1]' "Artist");            orderBy = "Album'Track";            if (searchString.GetLength(0) > 2)            {              query += $" AND Album:\"{Util.EscapeDatabaseQuery(searchString[2])}\"";              orderBy = "Track";            }            break;            case "albumartist":            query = FormatMultipleEntries(searchString[1]' "AlbumArtist");            orderBy = "Album'Track";            if (searchString.GetLength(0) > 2)            {              query += $" AND Album:\"{Util.EscapeDatabaseQuery(searchString[2])}\"";              orderBy = "Track";            }            break;            case "genre":            query = FormatMultipleEntries(searchString[1]' "Genre");            //orderByClause = "strArtist' strAlbum' iTrack";            orderBy = "Artist'Album'Track";            if (searchString.GetLength(0) > 2)            {              query += " AND ";              query += FormatMultipleEntries(searchString[2]' "Artist");              orderBy = "Album'Track";            }            if (searchString.GetLength(0) > 3)            {              query += $" AND Album:\"{Util.EscapeDatabaseQuery(searchString[3])}\"";              orderBy = "Album'Track";            }            break;        }
Missing Default,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,ApplyTagFilter,The following switch statement is missing a default case: switch (tagfilter.Field)          {            case "artist":              searchstring = track.Artist;              break;              case "albumartist":              searchstring = track.AlbumArtist;              break;              case "album":              searchstring = track.Album;              break;              case "title":              searchstring = track.Title;              break;              case "genre":              searchstring = track.Genre;              break;              case "comment":              searchstring = track.Comment;              break;              case "composer":              searchstring = track.Composer;              break;              case "conductor":              searchstring = track.Conductor;              break;              // Tags with are checked for existence or non-existence            case "picture":              searchstring = track.Pictures.Count > 0 ? "True" : "False";              break;              case "lyrics":              searchstring = track.Lyrics != null ? "True" : "False";              break;              // Numeric Tags            case "track":              numericCompare = true;              searchNumber = (int)track.TrackNumber;              break;              case "numtracks":              numericCompare = true;              searchNumber = (int)track.TrackCount;              break;              case "disc":              numericCompare = true;              searchNumber = (int)track.DiscNumber;              break;              case "numdiscs":              numericCompare = true;              searchNumber = (int)track.DiscCount;              break;              case "year":              numericCompare = true;              searchNumber = track.Year;              break;              case "rating":              numericCompare = true;              searchNumber = track.Rating;              break;              case "bpm":              numericCompare = true;              searchNumber = track.BPM;              break;              case "bitrate":              numericCompare = true;              searchNumber = Convert.ToInt16(track.BitRate);              break;              case "samplerate":              numericCompare = true;              searchNumber = Convert.ToInt16(track.SampleRate);              break;              case "channels":              numericCompare = true;              searchNumber = Convert.ToInt16(track.Channels);              break;          }
Missing Default,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,OnMessageReceive,The following switch statement is missing a default case: switch (action.ToLower())        {          case "languagechanged":            LanguageChanged();            Refresh();            break;            case "themechanged":            {              tracksGrid.BackgroundColor = ServiceScope.Get<IThemeManager>().CurrentTheme.BackColor;              break;            }            case "setwaitcursor":          {            SetWaitCursor();            break;          }            case "resetwaitcursor":          {            ResetWaitCursor();            break;          }        }
Missing Default,MPTagThat.GridView,GridViewTracks,C:\repos\MediaPortal_MPTagThat\MPTagThat\Grids\Tracks\GridViewTracks.cs,tracksGrid_CellValueNeeded,The following switch statement is missing a default case: switch (track.Status)          {            case -1:              return;              case 0:              e.Value = Properties.Resources.Complete_OK;              break;              case 1:              e.Value = Properties.Resources.Warning;              break;              case 2:              e.Value = Properties.Resources.CriticalError;              break;              case 3:              e.Value = Properties.Resources.ribbon_BrokenSong_16x;              break;              case 4:              e.Value = Properties.Resources.ribbon_FixedSong_16x;              break;          }
Missing Default,MPTagThat.Organise,OrganiseFiles,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\OrganiseFiles.cs,cbFormat_Keypress,The following switch statement is missing a default case: switch (e.KeyChar)        {          case '|':          case '"':          case '/':          case '*':          case '?':          case ':':            e.Handled = true;            break;        }
Missing Default,MPTagThat.TagToFileName,TagToFileName,C:\repos\MediaPortal_MPTagThat\MPTagThat\Dialogues\TagToFileName\TagToFileName.cs,cbFormat_Keypress,The following switch statement is missing a default case: switch (e.KeyChar)        {          case '\\':          case '|':          case '"':          case '/':          case '*':          case '?':          case ':':            e.Handled = true;            break;        }
Missing Default,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,DrawSpectrum,The following switch statement is missing a default case: switch (_specIdx)        {            // normal spectrum (width = resolution)          case 0:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Lime' Color.Red' Color.Black' false' false' false);            break;            // normal spectrum (full resolution)          case 1:            pictureBoxSpectrum.Image = _vis.CreateSpectrum(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.SteelBlue' Color.Pink' Color.Black' false' true' true);            break;            // line spectrum (width = resolution)          case 2:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                               Color.Black' 2' 2' false' false' false);            break;            // line spectrum (full resolution)          case 3:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLine(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                               Color.Black' 16' 4' false' true' true);            break;            // ellipse spectrum (width = resolution)          case 4:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.Lime' Color.Red'                                                                  Color.Black' 1' 2' false' false' false);            break;            // ellipse spectrum (full resolution)          case 5:            pictureBoxSpectrum.Image = _vis.CreateSpectrumEllipse(_stream' pictureBoxSpectrum.Width'                                                                  pictureBoxSpectrum.Height' Color.SteelBlue' Color.Pink'                                                                  Color.Black' 2' 4' false' true' true);            break;            // dot spectrum (width = resolution)          case 6:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.Lime' Color.Red' Color.Black' 1' 0' false' false'                                                              false);            break;            // dot spectrum (full resolution)          case 7:            pictureBoxSpectrum.Image = _vis.CreateSpectrumDot(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                              Color.SteelBlue' Color.Pink' Color.Black' 2' 1' false' false'                                                              true);            break;            // peak spectrum (width = resolution)          case 8:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.SeaGreen'                                                                   Color.LightGreen' Color.Orange' Color.Black' 2' 1' 2'                                                                   10' false' false' false);            break;            // peak spectrum (full resolution)          case 9:            pictureBoxSpectrum.Image = _vis.CreateSpectrumLinePeak(_stream' pictureBoxSpectrum.Width'                                                                   pictureBoxSpectrum.Height' Color.GreenYellow'                                                                   Color.RoyalBlue' Color.DarkOrange' Color.Black' 23' 5'                                                                   3' 5' false' true' true);            break;            // wave spectrum (width = resolution)          case 10:            pictureBoxSpectrum.Image = _vis.CreateSpectrumWave(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Yellow' Color.Orange'                                                               Color.Black' 1' false' false' false);            break;            // dancing beans spectrum (width = resolution)          case 11:            pictureBoxSpectrum.Image = _vis.CreateSpectrumBean(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.Chocolate'                                                               Color.DarkGoldenrod' Color.Black' 4' false' false' true);            break;            // dancing text spectrum (width = resolution)          case 12:            pictureBoxSpectrum.Image = _vis.CreateSpectrumText(_stream' pictureBoxSpectrum.Width'                                                               pictureBoxSpectrum.Height' Color.White' Color.Tomato'                                                               Color.Black' "MPTagThat is Great"' false' false' true);            break;            // frequency detection          case 13:            float amp = _vis.DetectFrequency(_stream' 10' 500' true);            if (amp > 0.3)              pictureBoxSpectrum.BackColor = Color.Red;            else              pictureBoxSpectrum.BackColor = Color.Black;            break;            // 3D voice print          case 14:            // we need to draw directly directly on the picture box...            // normally you would encapsulate this in your own custom control            Graphics g = Graphics.FromHwnd(pictureBoxSpectrum.Handle);            g.SmoothingMode = SmoothingMode.AntiAlias;            _vis.CreateSpectrum3DVoicePrint(_stream' g'                                            new Rectangle(0' 0' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height)'                                            Color.Black' Color.White' _voicePrintIdx' false' false);            g.Dispose();            // next call will be at the next pos            _voicePrintIdx++;            if (_voicePrintIdx > pictureBoxSpectrum.Width - 1)              _voicePrintIdx = 0;            break;            // WaveForm          case 15:            pictureBoxSpectrum.Image = _vis.CreateWaveForm(_stream' pictureBoxSpectrum.Width' pictureBoxSpectrum.Height'                                                           Color.Green' Color.Red' Color.Gray' Color.Black' 1' true' false'                                                           true);            break;        }
Missing Default,MPTagThat.Player,PlayerControl,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayerControl.cs,OnMessageReceive,The following switch statement is missing a default case: switch (action.ToLower())        {            // Message sent' when a Theme is changing          case "themechanged":            {              if (ServiceScope.Get<IThemeManager>().CurrentTheme.ThemeName == _currentTheme)              {                return;              }                _currentTheme = ServiceScope.Get<IThemeManager>().CurrentTheme.ThemeName;              string imageDir = Path.Combine(Application.StartupPath' "Themes\\" + _currentTheme);              _imgPlay = Image.FromFile(Path.Combine(imageDir' "Play_btn.png"));              _imgPause = Image.FromFile(Path.Combine(imageDir' "Pause_btn.png"));              break;            }        }
Missing Default,MPTagThat.Player,PlayList,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayList.cs,ProcessCmdKey,The following switch statement is missing a default case: switch (keyData)        {          case Keys.Delete:            for (int i = playListGrid.Rows.Count - 1; i > -1; i--)            {              if (!playListGrid.Rows[i].Selected)                continue;                _player.PlayList.RemoveAt(i);            }            return true;        }
Missing Default,MPTagThat.Player,PlayList,C:\repos\MediaPortal_MPTagThat\MPTagThat\Player\PlayList.cs,OnMessageReceive,The following switch statement is missing a default case: switch (action.ToLower())        {            // Message sent' when a Theme is changing          case "themechanged":            {              BackColor = ServiceScope.Get<IThemeManager>().CurrentTheme.BackColor;              playListGrid.BackgroundColor = ServiceScope.Get<IThemeManager>().CurrentTheme.BackColor;              playListGrid.DefaultCellStyle.BackColor = ServiceScope.Get<IThemeManager>().CurrentTheme.BackColor;              playListGrid.DefaultCellStyle.ForeColor = ServiceScope.Get<IThemeManager>().CurrentTheme.LabelForeColor;              playListGrid.DefaultCellStyle.SelectionForeColor = Color.OrangeRed;              playListGrid.DefaultCellStyle.SelectionBackColor = ServiceScope.Get<IThemeManager>().CurrentTheme.BackColor;              playListGrid.GridColor = ServiceScope.Get<IThemeManager>().CurrentTheme.BackColor;              break;            }            case "languagechanged":            {              Localisation();              break;            }        }
