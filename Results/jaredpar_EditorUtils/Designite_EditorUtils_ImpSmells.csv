Implementation smell,Namespace,Class,File,Method,Description
Long Method,EditorUtils.Implementation.Tagging,AsyncTagger<TData;TTag>,D:\research\architectureSmells\repos\jaredpar_EditorUtils\Src\EditorUtils\Implementation\Tagging\AsyncTagger.cs,GetTagsInBackgroundCore,The method has 108 lines of code.
Long Parameter List,EditorUtils.Implementation.Tagging,AsyncTagger<TData;TTag>,D:\research\architectureSmells\repos\jaredpar_EditorUtils\Src\EditorUtils\Implementation\Tagging\AsyncTagger.cs,GetTagsInBackgroundCore,The method has 8 parameters. Parameters: asyncTaggerSource' data' chunkCount' channel' visited' cancellationToken' onComplete' onProgress
Long Identifier,EditorUtils,EditorHost,D:\research\architectureSmells\repos\jaredpar_EditorUtils\Src\EditorUtils\EditorHost.cs,,The length of the parameter _projectionBufferFactoryService is 31.
Long Identifier,EditorUtils,EditorHost,D:\research\architectureSmells\repos\jaredpar_EditorUtils\Src\EditorUtils\EditorHost.cs,,The length of the parameter _editorOperationsFactoryService is 31.
Long Identifier,EditorUtils,EditorHost,D:\research\architectureSmells\repos\jaredpar_EditorUtils\Src\EditorUtils\EditorHost.cs,,The length of the parameter _textBufferUndoManagerProvider is 30.
Long Identifier,EditorUtils,EditorHost,D:\research\architectureSmells\repos\jaredpar_EditorUtils\Src\EditorUtils\EditorHost.cs,,The length of the parameter _classificationTypeRegistryService is 34.
Long Identifier,EditorUtils,UndoExportProvider,D:\research\architectureSmells\repos\jaredpar_EditorUtils\Src\EditorUtils\EditorHostFactory.UndoExportProvider.cs,,The length of the parameter _textUndoHistoryRegistryContractName is 36.
Long Identifier,EditorUtils,UndoExportProvider,D:\research\architectureSmells\repos\jaredpar_EditorUtils\Src\EditorUtils\EditorHostFactory.UndoExportProvider.cs,,The length of the parameter _basicUndoHistoryRegistryContractName is 37.
Long Statement,EditorUtils,EditorHostFactory,D:\research\architectureSmells\repos\jaredpar_EditorUtils\Src\EditorUtils\EditorHostFactory.cs,AppendEditorCatalog,The length of the statement  "            var versionInfo = string.Format("' Version={0}' Culture=neutral' PublicKeyToken=b03f5f7f11d50a3a' processorArchitecture=MSIL"' version); " is 136.
Long Statement,EditorUtils,EditorUtilsFactory,D:\research\architectureSmells\repos\jaredpar_EditorUtils\Src\EditorUtils\EditorUtilsFactory.cs,GetOrCreateOutlinerCore,The length of the statement  "            return textBuffer.Properties.GetOrCreateSingletonProperty(AdhocOutliner.OutlinerKey' () => new AdhocOutliner(textBuffer)); " is 122.
Long Statement,EditorUtils.Implementation.Tagging,AsyncTagger<TData;TTag>,D:\research\architectureSmells\repos\jaredpar_EditorUtils\Src\EditorUtils\Implementation\Tagging\AsyncTagger.cs,GetTagsInBackground,The length of the statement  "                    EditorUtilsTrace.TraceInfo("AsyncTagger Background Existing {0} - {1}"' lineRange.StartLineNumber' lineRange.LastLineNumber); " is 125.
Long Statement,EditorUtils.Implementation.Tagging,AsyncTagger<TData;TTag>,D:\research\architectureSmells\repos\jaredpar_EditorUtils\Src\EditorUtils\Implementation\Tagging\AsyncTagger.cs,GetTagsInBackground,The length of the statement  "            EditorUtilsTrace.TraceInfo("AsyncTagger Background New {0} - {1}"' lineRange.StartLineNumber' lineRange.LastLineNumber); " is 120.
Long Statement,EditorUtils.Implementation.Tagging,AsyncTagger<TData;TTag>,D:\research\architectureSmells\repos\jaredpar_EditorUtils\Src\EditorUtils\Implementation\Tagging\AsyncTagger.cs,GetTagsInBackground,The length of the statement  "                (completeReason) => synchronizationContext.Post(_ => OnGetTagsInBackgroundComplete(completeReason' channel' cancellationTokenSource)' null)' " is 140.
Long Statement,EditorUtils.Implementation.Tagging,AsyncTagger<TData;TTag>,D:\research\architectureSmells\repos\jaredpar_EditorUtils\Src\EditorUtils\Implementation\Tagging\AsyncTagger.cs,GetTagsInBackground,The length of the statement  "                (processedLineRange' tagList) => synchronizationContext.Post(_ => OnGetTagsInBackgroundProgress(cancellationTokenSource' processedLineRange' tagList)' null)); " is 158.
Long Statement,EditorUtils.Implementation.Tagging,AsyncTagger<TData;TTag>,D:\research\architectureSmells\repos\jaredpar_EditorUtils\Src\EditorUtils\Implementation\Tagging\AsyncTagger.cs,GetTagsInBackgroundCore,The length of the statement  "                                tagLineRange = SnapshotLineRange.CreateForLineNumberRange(tagLineRange.Snapshot' unvisited.Value.StartLineNumber' unvisited.Value.LastLineNumber).Value; " is 152.
Long Statement,EditorUtils.Implementation.Tagging,AsyncTagger<TData;TTag>,D:\research\architectureSmells\repos\jaredpar_EditorUtils\Src\EditorUtils\Implementation\Tagging\AsyncTagger.cs,RaiseTagsChanged,The length of the statement  "            EditorUtilsTrace.TraceInfo("AsyncTagger::RaiseTagsChanged {0} - {1}"' lineRange.StartLineNumber' lineRange.LastLineNumber); " is 123.
Long Statement,EditorUtils.Implementation.Tagging,AsyncTagger<TData;TTag>,D:\research\architectureSmells\repos\jaredpar_EditorUtils\Src\EditorUtils\Implementation\Tagging\AsyncTagger.cs,IsActiveBackgroundRequest,The length of the statement  "            return _asyncBackgroundRequest.HasValue && _asyncBackgroundRequest.Value.CancellationTokenSource == cancellationTokenSource; " is 124.
Long Statement,EditorUtils.Implementation.Utilities,AdhocOutliner,D:\research\architectureSmells\repos\jaredpar_EditorUtils\Src\EditorUtils\Implementation\Utilities\AdhocOutliner.cs,EnsureTagger,The length of the statement  "                var msg = "In order to use IAdhocOutliner you must also export an ITagger implementation for the buffer which return CreateOutliningTagger"; " is 140.
Empty Catch Block,EditorUtils,EditorHostFactory,D:\research\architectureSmells\repos\jaredpar_EditorUtils\Src\EditorUtils\EditorHostFactory.cs,TryGetInstallDirectory,The method has an empty catch block.
Empty Catch Block,EditorUtils.Implementation.Tagging,AsyncTagger<TData;TTag>,D:\research\architectureSmells\repos\jaredpar_EditorUtils\Src\EditorUtils\Implementation\Tagging\AsyncTagger.cs,CancelAsyncBackgroundRequest,The method has an empty catch block.
Magic Number,EditorUtils,EditorHostFactory,D:\research\architectureSmells\repos\jaredpar_EditorUtils\Src\EditorUtils\EditorHostFactory.cs,AppendEditorCatalog,The following statement contains a magic number: var simpleName = name.Substring(0' name.Length - 4);
Magic Number,EditorUtils,EditorHostFactory,D:\research\architectureSmells\repos\jaredpar_EditorUtils\Src\EditorUtils\EditorHostFactory.cs,GetVersionNumber,The following statement contains a magic number: switch (version)              {                  case EditorVersion.Vs2010: return 10;                  case EditorVersion.Vs2012: return 11;                  case EditorVersion.Vs2013: return 12;                  case EditorVersion.Vs2015: return 14;                  default:                      throw new Exception(string.Format("Unexpected enum value {0}"' version));              }
Magic Number,EditorUtils,EditorHostFactory,D:\research\architectureSmells\repos\jaredpar_EditorUtils\Src\EditorUtils\EditorHostFactory.cs,GetVersionNumber,The following statement contains a magic number: switch (version)              {                  case EditorVersion.Vs2010: return 10;                  case EditorVersion.Vs2012: return 11;                  case EditorVersion.Vs2013: return 12;                  case EditorVersion.Vs2015: return 14;                  default:                      throw new Exception(string.Format("Unexpected enum value {0}"' version));              }
Magic Number,EditorUtils,EditorHostFactory,D:\research\architectureSmells\repos\jaredpar_EditorUtils\Src\EditorUtils\EditorHostFactory.cs,GetVersionNumber,The following statement contains a magic number: switch (version)              {                  case EditorVersion.Vs2010: return 10;                  case EditorVersion.Vs2012: return 11;                  case EditorVersion.Vs2013: return 12;                  case EditorVersion.Vs2015: return 14;                  default:                      throw new Exception(string.Format("Unexpected enum value {0}"' version));              }
Magic Number,EditorUtils,EditorHostFactory,D:\research\architectureSmells\repos\jaredpar_EditorUtils\Src\EditorUtils\EditorHostFactory.cs,GetVersionNumber,The following statement contains a magic number: switch (version)              {                  case EditorVersion.Vs2010: return 10;                  case EditorVersion.Vs2012: return 11;                  case EditorVersion.Vs2013: return 12;                  case EditorVersion.Vs2015: return 14;                  default:                      throw new Exception(string.Format("Unexpected enum value {0}"' version));              }
