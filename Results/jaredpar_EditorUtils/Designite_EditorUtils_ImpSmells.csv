Implementation smell,Namespace,Class,File,Method,Description
Long Method,EditorUtils.Implementation.Tagging,AsyncTagger,D:\newReposJune17\jaredpar_EditorUtils\Src\EditorUtils\Implementation\Tagging\AsyncTagger.cs,GetTagsInBackground,The method has 73 lines of code.
Long Method,EditorUtils.Implementation.Tagging,AsyncTagger,D:\newReposJune17\jaredpar_EditorUtils\Src\EditorUtils\Implementation\Tagging\AsyncTagger.cs,GetTagsInBackgroundCore,The method has 86 lines of code.
Complex Method,EditorUtils.Implementation.Tagging,AsyncTagger,D:\newReposJune17\jaredpar_EditorUtils\Src\EditorUtils\Implementation\Tagging\AsyncTagger.cs,TryGetTagsFromBackgroundDataCache,Cyclomatic complexity of the method is 8
Complex Method,EditorUtils.Implementation.Tagging,AsyncTagger,D:\newReposJune17\jaredpar_EditorUtils\Src\EditorUtils\Implementation\Tagging\AsyncTagger.cs,GetTagsInBackground,Cyclomatic complexity of the method is 7
Complex Method,EditorUtils.Implementation.Tagging,AsyncTagger,D:\newReposJune17\jaredpar_EditorUtils\Src\EditorUtils\Implementation\Tagging\AsyncTagger.cs,GetTagsInBackgroundCore,Cyclomatic complexity of the method is 7
Long Parameter List,EditorUtils,IAdhocOutliner,D:\newReposJune17\jaredpar_EditorUtils\Src\EditorUtils\IAdhocOutliner.cs,CreateOutliningRegion,The method has 4 parameters.
Long Parameter List,EditorUtils.Implementation.Tagging,AsyncTagger,D:\newReposJune17\jaredpar_EditorUtils\Src\EditorUtils\Implementation\Tagging\AsyncTagger.cs,GetTagsInBackgroundCore,The method has 8 parameters.
Long Parameter List,EditorUtils.Implementation.Utilities,AdhocOutliner,D:\newReposJune17\jaredpar_EditorUtils\Src\EditorUtils\Implementation\Utilities\AdhocOutliner.cs,CreateOutliningRegion,The method has 4 parameters.
Long Parameter List,EditorUtils.Implementation.Utilities,AdhocOutliner,D:\newReposJune17\jaredpar_EditorUtils\Src\EditorUtils\Implementation\Utilities\AdhocOutliner.cs,CreateOutliningRegion,The method has 4 parameters.
Long Statement,EditorUtils,EditorHostFactory,D:\newReposJune17\jaredpar_EditorUtils\Src\EditorUtils\EditorHostFactory.cs,AppendEditorCatalog,The length of the statement  "	var versionInfo = string.Format ("' Version={0}' Culture=neutral' PublicKeyToken=b03f5f7f11d50a3a' processorArchitecture=MSIL"' version); " is 137.
Long Statement,EditorUtils,Extensions,D:\newReposJune17\jaredpar_EditorUtils\Src\EditorUtils\Extensions.cs,CreateTextBuffer,The length of the statement  "	var textBuffer = contentType != null ? textBufferFactoryService.CreateTextBuffer (contentType) : textBufferFactoryService.CreateTextBuffer (); " is 142.
Long Statement,EditorUtils,EditorUtilsFactory,D:\newReposJune17\jaredpar_EditorUtils\Src\EditorUtils\EditorUtilsFactory.cs,CreateOutlinerTagger,The length of the statement  "	return CreateTagger (textBuffer.Properties' AdhocOutliner.OutlinerTaggerKey' () => GetOrCreateOutlinerCore (textBuffer)); " is 121.
Long Statement,EditorUtils,EditorUtilsFactory,D:\newReposJune17\jaredpar_EditorUtils\Src\EditorUtils\EditorUtilsFactory.cs,GetOrCreateOutlinerCore,The length of the statement  "	return textBuffer.Properties.GetOrCreateSingletonProperty (AdhocOutliner.OutlinerKey' () => new AdhocOutliner (textBuffer)); " is 124.
Long Statement,EditorUtils,LineRange,D:\newReposJune17\jaredpar_EditorUtils\Src\EditorUtils\LineRange.cs,Intersects,The length of the statement  "	return ContainsLineNumber (lineRange.StartLineNumber) || ContainsLineNumber (lineRange.LastLineNumber) || LastLineNumber + 1 == lineRange.StartLineNumber || StartLineNumber == lineRange.LastLineNumber + 1; " is 205.
Long Statement,EditorUtils.Implementation.Tagging,Classifier,D:\newReposJune17\jaredpar_EditorUtils\Src\EditorUtils\Implementation\Tagging\Classifier.cs,GetClassificationSpans,The length of the statement  "	return _tagger.GetTags (new NormalizedSnapshotSpanCollection (span)).Select (x => new ClassificationSpan (x.Span' x.Tag.ClassificationType)).ToList (); " is 151.
Long Statement,EditorUtils.Implementation.Tagging,AsyncTagger,D:\newReposJune17\jaredpar_EditorUtils\Src\EditorUtils\Implementation\Tagging\AsyncTagger.cs,GetTagsInBackground,The length of the statement  "			EditorUtilsTrace.TraceInfo ("AsyncTagger Background Existing {0} - {1}"' lineRange.StartLineNumber' lineRange.LastLineNumber); " is 126.
Long Statement,EditorUtils.Implementation.Tagging,AsyncTagger,D:\newReposJune17\jaredpar_EditorUtils\Src\EditorUtils\Implementation\Tagging\AsyncTagger.cs,GetTagsInBackground,The length of the statement  "	EditorUtilsTrace.TraceInfo ("AsyncTagger Background New {0} - {1}"' lineRange.StartLineNumber' lineRange.LastLineNumber); " is 121.
Long Statement,EditorUtils.Implementation.Tagging,AsyncTagger,D:\newReposJune17\jaredpar_EditorUtils\Src\EditorUtils\Implementation\Tagging\AsyncTagger.cs,GetTagsInBackground,The length of the statement  "	Action getTags = () => GetTagsInBackgroundCore (localAsyncTaggerSource' data' localChunkCount' channel' localVisited' cancellationToken' completeReason => synchronizationContext.Post (_ => OnGetTagsInBackgroundComplete (completeReason' channel' cancellationTokenSource)' null)' (processedLineRange' tagList) => synchronizationContext.Post (_ => OnGetTagsInBackgroundProgress (cancellationTokenSource' processedLineRange' tagList)' null)); " is 438.
Long Statement,EditorUtils.Implementation.Tagging,AsyncTagger,D:\newReposJune17\jaredpar_EditorUtils\Src\EditorUtils\Implementation\Tagging\AsyncTagger.cs,GetTagsInBackgroundCore,The length of the statement  "					tagLineRange = SnapshotLineRange.CreateForLineNumberRange (tagLineRange.Snapshot' unvisited.Value.StartLineNumber' unvisited.Value.LastLineNumber).Value; " is 153.
Long Statement,EditorUtils.Implementation.Tagging,AsyncTagger,D:\newReposJune17\jaredpar_EditorUtils\Src\EditorUtils\Implementation\Tagging\AsyncTagger.cs,RaiseTagsChanged,The length of the statement  "	EditorUtilsTrace.TraceInfo ("AsyncTagger::RaiseTagsChanged {0} - {1}"' lineRange.StartLineNumber' lineRange.LastLineNumber); " is 124.
Long Statement,EditorUtils.Implementation.Tagging,AsyncTagger,D:\newReposJune17\jaredpar_EditorUtils\Src\EditorUtils\Implementation\Tagging\AsyncTagger.cs,IsActiveBackgroundRequest,The length of the statement  "	return _asyncBackgroundRequest.HasValue && _asyncBackgroundRequest.Value.CancellationTokenSource == cancellationTokenSource; " is 124.
Long Statement,EditorUtils.Implementation.Utilities,AdhocOutliner,D:\newReposJune17\jaredpar_EditorUtils\Src\EditorUtils\Implementation\Utilities\AdhocOutliner.cs,EnsureTagger,The length of the statement  "		var msg = "In order to use IAdhocOutliner you must also export an ITagger implementation for the buffer which return CreateOutliningTagger"; " is 140.
Long Statement,EditorUtils.Implementation.Utilities,AdhocOutliner,D:\newReposJune17\jaredpar_EditorUtils\Src\EditorUtils\Implementation\Utilities\AdhocOutliner.cs,GetTags,The length of the statement  "	return GetOutliningRegions (span).Select (x => (ITagSpan<OutliningRegionTag>)(new TagSpan<OutliningRegionTag> (x.Span' x.Tag))).ToReadOnlyCollection (); " is 152.
Empty Catch Block,EditorUtils,EditorHostFactory,D:\newReposJune17\jaredpar_EditorUtils\Src\EditorUtils\EditorHostFactory.cs,TryGetInstallDirectory,The method has an empty catch block.
Empty Catch Block,EditorUtils.Implementation.Tagging,AsyncTagger,D:\newReposJune17\jaredpar_EditorUtils\Src\EditorUtils\Implementation\Tagging\AsyncTagger.cs,CancelAsyncBackgroundRequest,The method has an empty catch block.
Magic Number,EditorUtils,EditorHostFactory,D:\newReposJune17\jaredpar_EditorUtils\Src\EditorUtils\EditorHostFactory.cs,AppendEditorCatalog,The following statement contains a magic number: foreach (var name in EditorComponents) {  	var simpleName = name.Substring (0' name.Length - 4);  	var qualifiedName = simpleName + versionInfo;  	Assembly assembly;  	try {  		assembly = Assembly.Load (qualifiedName);  	} catch (Exception e) {  		var msg = string.Format ("Unable to load editor dependency {0}"' name);  		throw new Exception (msg' e);  	}  	list.Add (new AssemblyCatalog (assembly));  }  
Magic Number,EditorUtils,EditorHostFactory,D:\newReposJune17\jaredpar_EditorUtils\Src\EditorUtils\EditorHostFactory.cs,GetVersionNumber,The following statement contains a magic number: switch (version) {  case EditorVersion.Vs2010:  	return 10;  case EditorVersion.Vs2012:  	return 11;  case EditorVersion.Vs2013:  	return 12;  case EditorVersion.Vs2015:  	return 14;  default:  	throw new Exception (string.Format ("Unexpected enum value {0}"' version));  }  
Magic Number,EditorUtils,EditorHostFactory,D:\newReposJune17\jaredpar_EditorUtils\Src\EditorUtils\EditorHostFactory.cs,GetVersionNumber,The following statement contains a magic number: switch (version) {  case EditorVersion.Vs2010:  	return 10;  case EditorVersion.Vs2012:  	return 11;  case EditorVersion.Vs2013:  	return 12;  case EditorVersion.Vs2015:  	return 14;  default:  	throw new Exception (string.Format ("Unexpected enum value {0}"' version));  }  
Magic Number,EditorUtils,EditorHostFactory,D:\newReposJune17\jaredpar_EditorUtils\Src\EditorUtils\EditorHostFactory.cs,GetVersionNumber,The following statement contains a magic number: switch (version) {  case EditorVersion.Vs2010:  	return 10;  case EditorVersion.Vs2012:  	return 11;  case EditorVersion.Vs2013:  	return 12;  case EditorVersion.Vs2015:  	return 14;  default:  	throw new Exception (string.Format ("Unexpected enum value {0}"' version));  }  
Magic Number,EditorUtils,EditorHostFactory,D:\newReposJune17\jaredpar_EditorUtils\Src\EditorUtils\EditorHostFactory.cs,GetVersionNumber,The following statement contains a magic number: switch (version) {  case EditorVersion.Vs2010:  	return 10;  case EditorVersion.Vs2012:  	return 11;  case EditorVersion.Vs2013:  	return 12;  case EditorVersion.Vs2015:  	return 14;  default:  	throw new Exception (string.Format ("Unexpected enum value {0}"' version));  }  
Magic Number,EditorUtils,EditorHostFactory,D:\newReposJune17\jaredpar_EditorUtils\Src\EditorUtils\EditorHostFactory.cs,GetVersionNumber,The following statement contains a magic number: return 10;  
Magic Number,EditorUtils,EditorHostFactory,D:\newReposJune17\jaredpar_EditorUtils\Src\EditorUtils\EditorHostFactory.cs,GetVersionNumber,The following statement contains a magic number: return 11;  
Magic Number,EditorUtils,EditorHostFactory,D:\newReposJune17\jaredpar_EditorUtils\Src\EditorUtils\EditorHostFactory.cs,GetVersionNumber,The following statement contains a magic number: return 12;  
Magic Number,EditorUtils,EditorHostFactory,D:\newReposJune17\jaredpar_EditorUtils\Src\EditorUtils\EditorHostFactory.cs,GetVersionNumber,The following statement contains a magic number: return 14;  
