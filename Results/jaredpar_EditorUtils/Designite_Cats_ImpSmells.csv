Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,Cats,DogClassifierProvider,D:\newReposJune17\jaredpar_EditorUtils\Test\Cats\DogClassifierProvider.cs,DogClassifierProvider,The length of the parameter classificationTypeRegistryService is 33.
Long Statement,Cats,CatTaggerProvider,D:\newReposJune17\jaredpar_EditorUtils\Test\Cats\CatTaggerProvider.cs,CreateTagger,The length of the statement  "	var tagger = EditorUtilsFactory.CreateTagger<string' TextMarkerTag> (textView.Properties' _key' () => new CatTagger (textView)); " is 128.
Long Statement,Cats,DogClassifier,D:\newReposJune17\jaredpar_EditorUtils\Test\Cats\DogClassifier.cs,IsDog,The length of the statement  "	if (point.Position + 2 < snapshot.Length && snapshot [point.Position] == 'd' && snapshot [point.Position + 1] == 'o' && snapshot [point.Position + 2] == 'g') { " is 159.
Long Statement,Cats,DogClassifierProvider,D:\newReposJune17\jaredpar_EditorUtils\Test\Cats\DogClassifierProvider.cs,GetClassifier,The length of the statement  "	var classificationType = _classificationTypeRegistryService.GetClassificationType (DogClassificationFormatDefinition.Name); " is 123.
Complex Conditional,Cats,DogClassifier,D:\newReposJune17\jaredpar_EditorUtils\Test\Cats\DogClassifier.cs,IsDog,The conditional expression  "point.Position + 2 < snapshot.Length && snapshot [point.Position] == 'd' && snapshot [point.Position + 1] == 'o' && snapshot [point.Position + 2] == 'g'"  is complex.
Magic Number,Cats,DogClassifier,D:\newReposJune17\jaredpar_EditorUtils\Test\Cats\DogClassifier.cs,GetTags,The following statement contains a magic number: while (position < span.End.Position) {  	var point = new SnapshotPoint (span.Snapshot' position);  	if (IsDog (point)) {  		var dogSpan = new SnapshotSpan (point' 3);  		var tagSpan = new TagSpan<IClassificationTag> (dogSpan' new ClassificationTag (_classificationType));  		list.Add (tagSpan);  		position += 3;  	} else {  		position += 1;  	}  }  
Magic Number,Cats,DogClassifier,D:\newReposJune17\jaredpar_EditorUtils\Test\Cats\DogClassifier.cs,GetTags,The following statement contains a magic number: while (position < span.End.Position) {  	var point = new SnapshotPoint (span.Snapshot' position);  	if (IsDog (point)) {  		var dogSpan = new SnapshotSpan (point' 3);  		var tagSpan = new TagSpan<IClassificationTag> (dogSpan' new ClassificationTag (_classificationType));  		list.Add (tagSpan);  		position += 3;  	} else {  		position += 1;  	}  }  
Magic Number,Cats,DogClassifier,D:\newReposJune17\jaredpar_EditorUtils\Test\Cats\DogClassifier.cs,GetTags,The following statement contains a magic number: if (IsDog (point)) {  	var dogSpan = new SnapshotSpan (point' 3);  	var tagSpan = new TagSpan<IClassificationTag> (dogSpan' new ClassificationTag (_classificationType));  	list.Add (tagSpan);  	position += 3;  } else {  	position += 1;  }  
Magic Number,Cats,DogClassifier,D:\newReposJune17\jaredpar_EditorUtils\Test\Cats\DogClassifier.cs,GetTags,The following statement contains a magic number: if (IsDog (point)) {  	var dogSpan = new SnapshotSpan (point' 3);  	var tagSpan = new TagSpan<IClassificationTag> (dogSpan' new ClassificationTag (_classificationType));  	list.Add (tagSpan);  	position += 3;  } else {  	position += 1;  }  
Magic Number,Cats,DogClassifier,D:\newReposJune17\jaredpar_EditorUtils\Test\Cats\DogClassifier.cs,GetTags,The following statement contains a magic number: position += 3;  
Magic Number,Cats,DogClassifier,D:\newReposJune17\jaredpar_EditorUtils\Test\Cats\DogClassifier.cs,IsDog,The following statement contains a magic number: if (point.Position + 2 < snapshot.Length && snapshot [point.Position] == 'd' && snapshot [point.Position + 1] == 'o' && snapshot [point.Position + 2] == 'g') {  	return true;  }  
Magic Number,Cats,DogClassifier,D:\newReposJune17\jaredpar_EditorUtils\Test\Cats\DogClassifier.cs,IsDog,The following statement contains a magic number: if (point.Position + 2 < snapshot.Length && snapshot [point.Position] == 'd' && snapshot [point.Position + 1] == 'o' && snapshot [point.Position + 2] == 'g') {  	return true;  }  
