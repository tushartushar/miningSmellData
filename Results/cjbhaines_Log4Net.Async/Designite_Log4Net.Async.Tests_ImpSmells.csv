Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Log4Net.Async.Tests,AsyncForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\AsyncForwarderTest.cs,WillTryToFlushBufferOnShutdown,The length of the statement  "            Assert.That(numberLoggedBeforeClose' Is.GreaterThan(0)' "Some number of Logging events should be logged prior to appender close."); " is 131.
Long Statement,Log4Net.Async.Tests,AsyncForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\AsyncForwarderTest.cs,WillTryToFlushBufferOnShutdown,The length of the statement  "            //On some systems' we may not be able to flush all events prior to close' but it is reasonable to assume in this test case " is 122.
Long Statement,Log4Net.Async.Tests,AsyncForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\AsyncForwarderTest.cs,WillTryToFlushBufferOnShutdown,The length of the statement  "            Assert.That(numberLoggedAfterClose' Is.GreaterThan(numberLoggedBeforeClose)' "Some number of LoggingEvents should be logged after close."); " is 139.
Long Statement,Log4Net.Async.Tests,AsyncForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\AsyncForwarderTest.cs,WillShutdownIfBufferCannotBeFlushedFastEnough,The length of the statement  "            Console.WriteLine("Flushed {0} events during shutdown which lasted {1}ms"' numberLoggedAfterClose - numberLoggedBeforeClose' watch.ElapsedMilliseconds); " is 152.
Long Statement,Log4Net.Async.Tests,AsyncForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\AsyncForwarderTest.cs,ThreadContextPropertiesArePreserved,The length of the statement  "            Assert.That(asyncForwardingAppender.Fix & FixFlags.Properties' Is.EqualTo(FixFlags.Properties)' "Properties must be fixed if they are to be preserved"); " is 152.
Long Statement,Log4Net.Async.Tests,AsyncForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\AsyncForwarderTest.cs,HelperCanGenerateLoggingEventWithAllProperties,The length of the statement  "            //Background information here:http://www.neovolve.com/post/2010/10/21/Unit-testing-a-workflow-that-relies-on-ThreadCurrentPrincipalIdentityName.aspx " is 148.
Long Statement,Log4Net.Async.Tests,AsyncForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\AsyncForwarderTest.cs,HelperCanGenerateLoggingEventWithAllProperties,The length of the statement  "            Assert.That(loggingEvent.LocationInformation.MethodName' Is.EqualTo(stackFrame.GetMethod().Name)' "LocationInformation"); " is 121.
Long Statement,Log4Net.Async.Tests,ParallelForwarderFromConfigTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\ParallelForwarderFromConfigTest.cs,BufferSizeIsCorrectlyApplied,The length of the statement  "            var parallelForwardingAppender = appenders.FirstOrDefault(x => x is ParallelForwardingAppender) as ParallelForwardingAppender; " is 126.
Long Statement,Log4Net.Async.Tests,ParallelForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\ParallelForwarderTest.cs,WillTryToFlushBufferOnShutdown,The length of the statement  "            Assert.That(numberLoggedBeforeClose' Is.GreaterThan(0)' "Some number of Logging events should be logged prior to appender close."); " is 131.
Long Statement,Log4Net.Async.Tests,ParallelForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\ParallelForwarderTest.cs,WillTryToFlushBufferOnShutdown,The length of the statement  "            //On some systems' we may not be able to flush all events prior to close' but it is reasonable to assume in this test case " is 122.
Long Statement,Log4Net.Async.Tests,ParallelForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\ParallelForwarderTest.cs,WillTryToFlushBufferOnShutdown,The length of the statement  "            Assert.That(numberLoggedAfterClose' Is.GreaterThan(numberLoggedBeforeClose)'"Some number of LoggingEvents should be logged after close."); " is 138.
Long Statement,Log4Net.Async.Tests,ParallelForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\ParallelForwarderTest.cs,WillResumeShutdownOnceBufferIsFlushed,The length of the statement  "            Assert.That(watch.ElapsedMilliseconds' Is.LessThan(asyncForwardingAppender.ShutdownFlushTimeout * 1000.00)' "Shutdown should resume immediately after appender close"); " is 167.
Long Statement,Log4Net.Async.Tests,ParallelForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\ParallelForwarderTest.cs,WillWaitConfiguredTimeForShutdown,The length of the statement  "            Assert.That(watch.ElapsedMilliseconds' Is.GreaterThanOrEqualTo(asyncForwardingAppender.ShutdownFlushTimeout * 1000.00)); " is 120.
Long Statement,Log4Net.Async.Tests,ParallelForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\ParallelForwarderTest.cs,PrintShutDownTimings,The length of the statement  "            Console.WriteLine("Amount of work for the debug appender: {0}ms' configured flush timeout is {1}s' actual shutdown took {2}ms"' " is 127.
Long Statement,Log4Net.Async.Tests,ParallelForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\ParallelForwarderTest.cs,PrintShutDownTimings,The length of the statement  "                testSize * debugAppender.AppendDelay.TotalMilliseconds' asyncForwardingAppender.ShutdownFlushTimeout' watch.ElapsedMilliseconds); " is 129.
Long Statement,Log4Net.Async.Tests,ParallelForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\ParallelForwarderTest.cs,WillShutdownIfBufferCannotBeFlushedFastEnough,The length of the statement  "            Console.WriteLine("Flushed {0} events during shutdown which lasted {1}ms"' numberLoggedAfterClose - numberLoggedBeforeClose' watch.ElapsedMilliseconds); " is 152.
Long Statement,Log4Net.Async.Tests,ParallelForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\ParallelForwarderTest.cs,ThreadContextPropertiesArePreserved,The length of the statement  "            Assert.That(asyncForwardingAppender.Fix & FixFlags.Properties' Is.EqualTo(FixFlags.Properties)' "Properties must be fixed if they are to be preserved"); " is 152.
Long Statement,Log4Net.Async.Tests,ParallelForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\ParallelForwarderTest.cs,HelperCanGenerateLoggingEventWithAllProperties,The length of the statement  "            //Background information here:http://www.neovolve.com/post/2010/10/21/Unit-testing-a-workflow-that-relies-on-ThreadCurrentPrincipalIdentityName.aspx " is 148.
Long Statement,Log4Net.Async.Tests,ParallelForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\ParallelForwarderTest.cs,HelperCanGenerateLoggingEventWithAllProperties,The length of the statement  "            //Raised time to within 10 ms.   However' this may not be a valid test.  The time is going to vary from system to system.  The " is 126.
Long Statement,Log4Net.Async.Tests,ParallelForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\ParallelForwarderTest.cs,HelperCanGenerateLoggingEventWithAllProperties,The length of the statement  "            Assert.That(loggingEvent.LocationInformation.MethodName' Is.EqualTo(stackFrame.GetMethod().Name)' "LocationInformation"); " is 121.
Empty Catch Block,Log4Net.Async.Tests,RingBufferTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\RingBufferTest.cs,PerfTestThreads,The method has an empty catch block.
Empty Catch Block,Log4Net.Async.Tests,RingBufferTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\RingBufferTest.cs,PerfTestThreadsWithDequeues,The method has an empty catch block.
Magic Number,Log4Net.Async.Tests,AsyncForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\AsyncForwarderTest.cs,CanHandleAppenderThrowing,The following statement contains a magic number: Assert.That(debugAppender.LoggedEventCount' Is.EqualTo(2));
Magic Number,Log4Net.Async.Tests,AsyncForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\AsyncForwarderTest.cs,WillLogFastWhenThereIsASlowAppender,The following statement contains a magic number: const int testSize = 1000;
Magic Number,Log4Net.Async.Tests,AsyncForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\AsyncForwarderTest.cs,WillLogFastWhenThereIsASlowAppender,The following statement contains a magic number: debugAppender.AppendDelay = TimeSpan.FromSeconds(30);
Magic Number,Log4Net.Async.Tests,AsyncForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\AsyncForwarderTest.cs,WillLogBufferOverflowWhenItHappens,The following statement contains a magic number: const int testSize = 1000;
Magic Number,Log4Net.Async.Tests,AsyncForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\AsyncForwarderTest.cs,WillLogBufferOverflowWhenItHappens,The following statement contains a magic number: asyncForwardingAppender.BufferSize = 100;
Magic Number,Log4Net.Async.Tests,AsyncForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\AsyncForwarderTest.cs,WillLogBufferOverflowWhenItHappens,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,Log4Net.Async.Tests,AsyncForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\AsyncForwarderTest.cs,WillTryToFlushBufferOnShutdown,The following statement contains a magic number: const int testSize = 250;
Magic Number,Log4Net.Async.Tests,AsyncForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\AsyncForwarderTest.cs,WillTryToFlushBufferOnShutdown,The following statement contains a magic number: Thread.Sleep(50);
Magic Number,Log4Net.Async.Tests,AsyncForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\AsyncForwarderTest.cs,WillShutdownIfBufferCannotBeFlushedFastEnough,The following statement contains a magic number: const int testSize = 250;
Magic Number,Log4Net.Async.Tests,AsyncForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\AsyncForwarderTest.cs,WillShutdownIfBufferCannotBeFlushedFastEnough,The following statement contains a magic number: Thread.Sleep(TimeSpan.FromSeconds(2));
Magic Number,Log4Net.Async.Tests,AsyncForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\AsyncForwarderTest.cs,WillShutdownIfBufferCannotBeFlushedFastEnough,The following statement contains a magic number: Assert.That(watch.ElapsedMilliseconds' Is.LessThan(10000)' "should be around 5s + the duration of the last append");
Magic Number,Log4Net.Async.Tests,AsyncForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\AsyncForwarderTest.cs,MessagesExcludedByFilterShouldNotBeAppended,The following statement contains a magic number: Assert.That(debugAppender.LoggedEventCount' Is.EqualTo(2));
Magic Number,Log4Net.Async.Tests,AsyncForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\AsyncForwarderTest.cs,HelperCanGenerateLoggingEventWithAllProperties,The following statement contains a magic number: Thread.Sleep(50);
Magic Number,Log4Net.Async.Tests,AsyncForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\AsyncForwarderTest.cs,HelperCanGenerateLoggingEventWithAllProperties,The following statement contains a magic number: Assert.That(loggingEvent.TimeStamp' Is.EqualTo(loggingTime).Within(TimeSpan.FromMilliseconds(5))' "TimeStamp");
Magic Number,Log4Net.Async.Tests,AsyncForwarderFromConfigTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\AsyncForwarderFromConfigTest.cs,BufferSizeIsCorrectlyApplied,The following statement contains a magic number: const int bufferSizeInConfigFile = 2000;
Magic Number,Log4Net.Async.Tests,ParallelForwarderFromConfigTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\ParallelForwarderFromConfigTest.cs,BufferSizeIsCorrectlyApplied,The following statement contains a magic number: const int bufferSizeInConfigFile = 2000;
Magic Number,Log4Net.Async.Tests,ParallelForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\ParallelForwarderTest.cs,CanHandleAppenderThrowing,The following statement contains a magic number: Assert.That(debugAppender.LoggedEventCount' Is.EqualTo(2));
Magic Number,Log4Net.Async.Tests,ParallelForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\ParallelForwarderTest.cs,WillLogFastWhenThereIsASlowAppender,The following statement contains a magic number: const int testSize = 1000;
Magic Number,Log4Net.Async.Tests,ParallelForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\ParallelForwarderTest.cs,WillLogFastWhenThereIsASlowAppender,The following statement contains a magic number: debugAppender.AppendDelay = TimeSpan.FromSeconds(30);
Magic Number,Log4Net.Async.Tests,ParallelForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\ParallelForwarderTest.cs,WillNotOverflow,The following statement contains a magic number: const int testSize = 1000;
Magic Number,Log4Net.Async.Tests,ParallelForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\ParallelForwarderTest.cs,WillNotOverflow,The following statement contains a magic number: asyncForwardingAppender.BufferSize = 100;
Magic Number,Log4Net.Async.Tests,ParallelForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\ParallelForwarderTest.cs,WillTryToFlushBufferOnShutdown,The following statement contains a magic number: const int testSize = 250;
Magic Number,Log4Net.Async.Tests,ParallelForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\ParallelForwarderTest.cs,WillTryToFlushBufferOnShutdown,The following statement contains a magic number: Thread.Sleep(50);
Magic Number,Log4Net.Async.Tests,ParallelForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\ParallelForwarderTest.cs,WillResumeShutdownOnceBufferIsFlushed,The following statement contains a magic number: const int testSize = 10;
Magic Number,Log4Net.Async.Tests,ParallelForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\ParallelForwarderTest.cs,WillResumeShutdownOnceBufferIsFlushed,The following statement contains a magic number: const int appenderDelayMs = 100;
Magic Number,Log4Net.Async.Tests,ParallelForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\ParallelForwarderTest.cs,WillResumeShutdownOnceBufferIsFlushed,The following statement contains a magic number: asyncForwardingAppender.ShutdownFlushTimeout = (testSize * appenderDelayMs / 1000.00) * 10;
Magic Number,Log4Net.Async.Tests,ParallelForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\ParallelForwarderTest.cs,WillResumeShutdownOnceBufferIsFlushed,The following statement contains a magic number: asyncForwardingAppender.ShutdownFlushTimeout = (testSize * appenderDelayMs / 1000.00) * 10;
Magic Number,Log4Net.Async.Tests,ParallelForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\ParallelForwarderTest.cs,WillResumeShutdownOnceBufferIsFlushed,The following statement contains a magic number: Thread.Sleep(50);
Magic Number,Log4Net.Async.Tests,ParallelForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\ParallelForwarderTest.cs,WillResumeShutdownOnceBufferIsFlushed,The following statement contains a magic number: Assert.That(watch.ElapsedMilliseconds' Is.LessThan(asyncForwardingAppender.ShutdownFlushTimeout * 1000.00)' "Shutdown should resume immediately after appender close");
Magic Number,Log4Net.Async.Tests,ParallelForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\ParallelForwarderTest.cs,WillWaitConfiguredTimeForShutdown,The following statement contains a magic number: const int testSize = 50;
Magic Number,Log4Net.Async.Tests,ParallelForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\ParallelForwarderTest.cs,WillWaitConfiguredTimeForShutdown,The following statement contains a magic number: const int timeoutSeconds = 2;
Magic Number,Log4Net.Async.Tests,ParallelForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\ParallelForwarderTest.cs,WillWaitConfiguredTimeForShutdown,The following statement contains a magic number: debugAppender.AppendDelay = TimeSpan.FromMilliseconds(100);
Magic Number,Log4Net.Async.Tests,ParallelForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\ParallelForwarderTest.cs,WillWaitConfiguredTimeForShutdown,The following statement contains a magic number: Thread.Sleep(50);
Magic Number,Log4Net.Async.Tests,ParallelForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\ParallelForwarderTest.cs,WillWaitConfiguredTimeForShutdown,The following statement contains a magic number: Assert.That(watch.ElapsedMilliseconds' Is.GreaterThanOrEqualTo(asyncForwardingAppender.ShutdownFlushTimeout * 1000.00));
Magic Number,Log4Net.Async.Tests,ParallelForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\ParallelForwarderTest.cs,WillShutdownIfBufferCannotBeFlushedFastEnough,The following statement contains a magic number: const int testSize = 250;
Magic Number,Log4Net.Async.Tests,ParallelForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\ParallelForwarderTest.cs,WillShutdownIfBufferCannotBeFlushedFastEnough,The following statement contains a magic number: Thread.Sleep(TimeSpan.FromSeconds(2));
Magic Number,Log4Net.Async.Tests,ParallelForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\ParallelForwarderTest.cs,MessagesExcludedByFilterShouldNotBeAppended,The following statement contains a magic number: Assert.That(debugAppender.LoggedEventCount' Is.EqualTo(2));
Magic Number,Log4Net.Async.Tests,ParallelForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\ParallelForwarderTest.cs,HelperCanGenerateLoggingEventWithAllProperties,The following statement contains a magic number: Thread.Sleep(50);
Magic Number,Log4Net.Async.Tests,ParallelForwarderTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\ParallelForwarderTest.cs,HelperCanGenerateLoggingEventWithAllProperties,The following statement contains a magic number: Assert.That(loggingEvent.TimeStamp' Is.EqualTo(loggingTime).Within(TimeSpan.FromMilliseconds(10))' "TimeStamp");
Magic Number,Log4Net.Async.Tests,RingBufferTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\RingBufferTest.cs,PerfTest,The following statement contains a magic number: RingBuffer<string> ringBuffer = new RingBuffer<string>(1000);
Magic Number,Log4Net.Async.Tests,RingBufferTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\RingBufferTest.cs,PerfTest,The following statement contains a magic number: i < 1000000
Magic Number,Log4Net.Async.Tests,RingBufferTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\RingBufferTest.cs,PerfTest,The following statement contains a magic number: Assert.That(ringWatch.ElapsedMilliseconds' Is.LessThan(150));
Magic Number,Log4Net.Async.Tests,RingBufferTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\RingBufferTest.cs,PerfTestThreads,The following statement contains a magic number: RingBuffer<string> ringBuffer = new RingBuffer<string>(1000);
Magic Number,Log4Net.Async.Tests,RingBufferTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\RingBufferTest.cs,PerfTestThreads,The following statement contains a magic number: ringTasks.Add(new Task(() =>                  {                      for (int i = 0; i < 1000000; i++)                      {                          ringBuffer.Enqueue("StringOfFun");                      }                  }' cancelationToken));
Magic Number,Log4Net.Async.Tests,RingBufferTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\RingBufferTest.cs,PerfTestThreads,The following statement contains a magic number: t < 10
Magic Number,Log4Net.Async.Tests,RingBufferTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\RingBufferTest.cs,PerfTestThreads,The following statement contains a magic number: Assert.That(ringWatch.ElapsedMilliseconds' Is.LessThan(1000));
Magic Number,Log4Net.Async.Tests,RingBufferTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\RingBufferTest.cs,PerfTestThreadsWithDequeues,The following statement contains a magic number: RingBuffer<string> ringBuffer = new RingBuffer<string>(1000);
Magic Number,Log4Net.Async.Tests,RingBufferTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\RingBufferTest.cs,PerfTestThreadsWithDequeues,The following statement contains a magic number: ringTasks.Add(new Task(() =>                  {                      for (int i = 0; i < 1000000; i++)                      {                          ringBuffer.Enqueue("StringOfFun");                      }                  }' cancelationToken));
Magic Number,Log4Net.Async.Tests,RingBufferTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\RingBufferTest.cs,PerfTestThreadsWithDequeues,The following statement contains a magic number: t < 10
Magic Number,Log4Net.Async.Tests,RingBufferTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\RingBufferTest.cs,PerfTestThreadsWithDequeues,The following statement contains a magic number: ringTasks.Add(new Task(() =>                  {                      for (int i = 0; i < 1000000; i++)                      {                          string foo;                          ringBuffer.TryDequeue(out foo);                      }                  }));
Magic Number,Log4Net.Async.Tests,RingBufferTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\RingBufferTest.cs,PerfTestThreadsWithDequeues,The following statement contains a magic number: t < 10
Magic Number,Log4Net.Async.Tests,RingBufferTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\RingBufferTest.cs,PerfTestThreadsWithDequeues,The following statement contains a magic number: Assert.That(ringWatch.ElapsedMilliseconds' Is.LessThan(800));
Magic Number,Log4Net.Async.Tests,RingBufferTest,D:\research\architectureSmells\repos\cjbhaines_Log4Net.Async\src\Log4Net.Async.Tests\RingBufferTest.cs,WhenRingSizeLimitIsHit_ItemsAreDequeued,The following statement contains a magic number: const int limit = 2;
