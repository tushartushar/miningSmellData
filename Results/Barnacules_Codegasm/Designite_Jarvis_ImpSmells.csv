Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Jarvis,Program,C:\repos\Barnacules_Codegasm\Test App 3 - Jarvis\Program.cs,Main,The length of the statement  "                    string memAvailableVocalMessage = String.Format("You currently have {0} megabytes of memory available"' currentAvailableMemory); " is 128.
Magic Number,Jarvis,Program,C:\repos\Barnacules_Codegasm\Test App 3 - Jarvis\Program.cs,Main,The following statement contains a magic number: JerrySpeak(systemUptimeMessage' VoiceGender.Male' 2);
Magic Number,Jarvis,Program,C:\repos\Barnacules_Codegasm\Test App 3 - Jarvis\Program.cs,Main,The following statement contains a magic number: while(true)              {                  // Get the current performance counter values                  int currentCpuPercentage = (int)perfCpuCount.NextValue();                  int currentAvailableMemory = (int)perfMemCount.NextValue();                    // Every 1 second print the CPU load in percentage to the screen                  Console.WriteLine("CPU Load        : {0}%"' currentCpuPercentage);                  Console.WriteLine("Available Memory: {0}"' currentAvailableMemory);                    // Only tell us when the CPU is above 80% usage                  #region Logic                  if ( currentCpuPercentage > 80 )                  {                      if (currentCpuPercentage == 100)                      {                          // This is designed to prevent the speech speed from exceeding 5x normal                          string cpuLoadVocalMessage = cpuMaxedOutMessages[rand.Next(5)];                            if (isChromeOpenedAlready == false)                          {                              OpenWebsite("https://www.youtube.com/watch?v=dQw4w9WgXcQ&list=RDdQw4w9WgXcQ#t=0");                              isChromeOpenedAlready = true;                          }                          JerrySpeak(cpuLoadVocalMessage' VoiceGender.Male' speechSpeed);                      }                      else                      {                          string cpuLoadVocalMessage = String.Format("The current CPU load is {0} percent"' currentCpuPercentage);                          JerrySpeak(cpuLoadVocalMessage' VoiceGender.Female' 5);                      }                  }                  #endregion                    // Only tell us when memory is below one gigabyte                  if (currentAvailableMemory < 1024)                  {                      // Speak to the user with text to speech to tell them what the current values are                      string memAvailableVocalMessage = String.Format("You currently have {0} megabytes of memory available"' currentAvailableMemory);                      JerrySpeak(memAvailableVocalMessage' VoiceGender.Male' 10);                  }                    Thread.Sleep(1000);              }
Magic Number,Jarvis,Program,C:\repos\Barnacules_Codegasm\Test App 3 - Jarvis\Program.cs,Main,The following statement contains a magic number: while(true)              {                  // Get the current performance counter values                  int currentCpuPercentage = (int)perfCpuCount.NextValue();                  int currentAvailableMemory = (int)perfMemCount.NextValue();                    // Every 1 second print the CPU load in percentage to the screen                  Console.WriteLine("CPU Load        : {0}%"' currentCpuPercentage);                  Console.WriteLine("Available Memory: {0}"' currentAvailableMemory);                    // Only tell us when the CPU is above 80% usage                  #region Logic                  if ( currentCpuPercentage > 80 )                  {                      if (currentCpuPercentage == 100)                      {                          // This is designed to prevent the speech speed from exceeding 5x normal                          string cpuLoadVocalMessage = cpuMaxedOutMessages[rand.Next(5)];                            if (isChromeOpenedAlready == false)                          {                              OpenWebsite("https://www.youtube.com/watch?v=dQw4w9WgXcQ&list=RDdQw4w9WgXcQ#t=0");                              isChromeOpenedAlready = true;                          }                          JerrySpeak(cpuLoadVocalMessage' VoiceGender.Male' speechSpeed);                      }                      else                      {                          string cpuLoadVocalMessage = String.Format("The current CPU load is {0} percent"' currentCpuPercentage);                          JerrySpeak(cpuLoadVocalMessage' VoiceGender.Female' 5);                      }                  }                  #endregion                    // Only tell us when memory is below one gigabyte                  if (currentAvailableMemory < 1024)                  {                      // Speak to the user with text to speech to tell them what the current values are                      string memAvailableVocalMessage = String.Format("You currently have {0} megabytes of memory available"' currentAvailableMemory);                      JerrySpeak(memAvailableVocalMessage' VoiceGender.Male' 10);                  }                    Thread.Sleep(1000);              }
Magic Number,Jarvis,Program,C:\repos\Barnacules_Codegasm\Test App 3 - Jarvis\Program.cs,Main,The following statement contains a magic number: while(true)              {                  // Get the current performance counter values                  int currentCpuPercentage = (int)perfCpuCount.NextValue();                  int currentAvailableMemory = (int)perfMemCount.NextValue();                    // Every 1 second print the CPU load in percentage to the screen                  Console.WriteLine("CPU Load        : {0}%"' currentCpuPercentage);                  Console.WriteLine("Available Memory: {0}"' currentAvailableMemory);                    // Only tell us when the CPU is above 80% usage                  #region Logic                  if ( currentCpuPercentage > 80 )                  {                      if (currentCpuPercentage == 100)                      {                          // This is designed to prevent the speech speed from exceeding 5x normal                          string cpuLoadVocalMessage = cpuMaxedOutMessages[rand.Next(5)];                            if (isChromeOpenedAlready == false)                          {                              OpenWebsite("https://www.youtube.com/watch?v=dQw4w9WgXcQ&list=RDdQw4w9WgXcQ#t=0");                              isChromeOpenedAlready = true;                          }                          JerrySpeak(cpuLoadVocalMessage' VoiceGender.Male' speechSpeed);                      }                      else                      {                          string cpuLoadVocalMessage = String.Format("The current CPU load is {0} percent"' currentCpuPercentage);                          JerrySpeak(cpuLoadVocalMessage' VoiceGender.Female' 5);                      }                  }                  #endregion                    // Only tell us when memory is below one gigabyte                  if (currentAvailableMemory < 1024)                  {                      // Speak to the user with text to speech to tell them what the current values are                      string memAvailableVocalMessage = String.Format("You currently have {0} megabytes of memory available"' currentAvailableMemory);                      JerrySpeak(memAvailableVocalMessage' VoiceGender.Male' 10);                  }                    Thread.Sleep(1000);              }
Magic Number,Jarvis,Program,C:\repos\Barnacules_Codegasm\Test App 3 - Jarvis\Program.cs,Main,The following statement contains a magic number: while(true)              {                  // Get the current performance counter values                  int currentCpuPercentage = (int)perfCpuCount.NextValue();                  int currentAvailableMemory = (int)perfMemCount.NextValue();                    // Every 1 second print the CPU load in percentage to the screen                  Console.WriteLine("CPU Load        : {0}%"' currentCpuPercentage);                  Console.WriteLine("Available Memory: {0}"' currentAvailableMemory);                    // Only tell us when the CPU is above 80% usage                  #region Logic                  if ( currentCpuPercentage > 80 )                  {                      if (currentCpuPercentage == 100)                      {                          // This is designed to prevent the speech speed from exceeding 5x normal                          string cpuLoadVocalMessage = cpuMaxedOutMessages[rand.Next(5)];                            if (isChromeOpenedAlready == false)                          {                              OpenWebsite("https://www.youtube.com/watch?v=dQw4w9WgXcQ&list=RDdQw4w9WgXcQ#t=0");                              isChromeOpenedAlready = true;                          }                          JerrySpeak(cpuLoadVocalMessage' VoiceGender.Male' speechSpeed);                      }                      else                      {                          string cpuLoadVocalMessage = String.Format("The current CPU load is {0} percent"' currentCpuPercentage);                          JerrySpeak(cpuLoadVocalMessage' VoiceGender.Female' 5);                      }                  }                  #endregion                    // Only tell us when memory is below one gigabyte                  if (currentAvailableMemory < 1024)                  {                      // Speak to the user with text to speech to tell them what the current values are                      string memAvailableVocalMessage = String.Format("You currently have {0} megabytes of memory available"' currentAvailableMemory);                      JerrySpeak(memAvailableVocalMessage' VoiceGender.Male' 10);                  }                    Thread.Sleep(1000);              }
Magic Number,Jarvis,Program,C:\repos\Barnacules_Codegasm\Test App 3 - Jarvis\Program.cs,Main,The following statement contains a magic number: while(true)              {                  // Get the current performance counter values                  int currentCpuPercentage = (int)perfCpuCount.NextValue();                  int currentAvailableMemory = (int)perfMemCount.NextValue();                    // Every 1 second print the CPU load in percentage to the screen                  Console.WriteLine("CPU Load        : {0}%"' currentCpuPercentage);                  Console.WriteLine("Available Memory: {0}"' currentAvailableMemory);                    // Only tell us when the CPU is above 80% usage                  #region Logic                  if ( currentCpuPercentage > 80 )                  {                      if (currentCpuPercentage == 100)                      {                          // This is designed to prevent the speech speed from exceeding 5x normal                          string cpuLoadVocalMessage = cpuMaxedOutMessages[rand.Next(5)];                            if (isChromeOpenedAlready == false)                          {                              OpenWebsite("https://www.youtube.com/watch?v=dQw4w9WgXcQ&list=RDdQw4w9WgXcQ#t=0");                              isChromeOpenedAlready = true;                          }                          JerrySpeak(cpuLoadVocalMessage' VoiceGender.Male' speechSpeed);                      }                      else                      {                          string cpuLoadVocalMessage = String.Format("The current CPU load is {0} percent"' currentCpuPercentage);                          JerrySpeak(cpuLoadVocalMessage' VoiceGender.Female' 5);                      }                  }                  #endregion                    // Only tell us when memory is below one gigabyte                  if (currentAvailableMemory < 1024)                  {                      // Speak to the user with text to speech to tell them what the current values are                      string memAvailableVocalMessage = String.Format("You currently have {0} megabytes of memory available"' currentAvailableMemory);                      JerrySpeak(memAvailableVocalMessage' VoiceGender.Male' 10);                  }                    Thread.Sleep(1000);              }
Magic Number,Jarvis,Program,C:\repos\Barnacules_Codegasm\Test App 3 - Jarvis\Program.cs,Main,The following statement contains a magic number: while(true)              {                  // Get the current performance counter values                  int currentCpuPercentage = (int)perfCpuCount.NextValue();                  int currentAvailableMemory = (int)perfMemCount.NextValue();                    // Every 1 second print the CPU load in percentage to the screen                  Console.WriteLine("CPU Load        : {0}%"' currentCpuPercentage);                  Console.WriteLine("Available Memory: {0}"' currentAvailableMemory);                    // Only tell us when the CPU is above 80% usage                  #region Logic                  if ( currentCpuPercentage > 80 )                  {                      if (currentCpuPercentage == 100)                      {                          // This is designed to prevent the speech speed from exceeding 5x normal                          string cpuLoadVocalMessage = cpuMaxedOutMessages[rand.Next(5)];                            if (isChromeOpenedAlready == false)                          {                              OpenWebsite("https://www.youtube.com/watch?v=dQw4w9WgXcQ&list=RDdQw4w9WgXcQ#t=0");                              isChromeOpenedAlready = true;                          }                          JerrySpeak(cpuLoadVocalMessage' VoiceGender.Male' speechSpeed);                      }                      else                      {                          string cpuLoadVocalMessage = String.Format("The current CPU load is {0} percent"' currentCpuPercentage);                          JerrySpeak(cpuLoadVocalMessage' VoiceGender.Female' 5);                      }                  }                  #endregion                    // Only tell us when memory is below one gigabyte                  if (currentAvailableMemory < 1024)                  {                      // Speak to the user with text to speech to tell them what the current values are                      string memAvailableVocalMessage = String.Format("You currently have {0} megabytes of memory available"' currentAvailableMemory);                      JerrySpeak(memAvailableVocalMessage' VoiceGender.Male' 10);                  }                    Thread.Sleep(1000);              }
Magic Number,Jarvis,Program,C:\repos\Barnacules_Codegasm\Test App 3 - Jarvis\Program.cs,Main,The following statement contains a magic number: while(true)              {                  // Get the current performance counter values                  int currentCpuPercentage = (int)perfCpuCount.NextValue();                  int currentAvailableMemory = (int)perfMemCount.NextValue();                    // Every 1 second print the CPU load in percentage to the screen                  Console.WriteLine("CPU Load        : {0}%"' currentCpuPercentage);                  Console.WriteLine("Available Memory: {0}"' currentAvailableMemory);                    // Only tell us when the CPU is above 80% usage                  #region Logic                  if ( currentCpuPercentage > 80 )                  {                      if (currentCpuPercentage == 100)                      {                          // This is designed to prevent the speech speed from exceeding 5x normal                          string cpuLoadVocalMessage = cpuMaxedOutMessages[rand.Next(5)];                            if (isChromeOpenedAlready == false)                          {                              OpenWebsite("https://www.youtube.com/watch?v=dQw4w9WgXcQ&list=RDdQw4w9WgXcQ#t=0");                              isChromeOpenedAlready = true;                          }                          JerrySpeak(cpuLoadVocalMessage' VoiceGender.Male' speechSpeed);                      }                      else                      {                          string cpuLoadVocalMessage = String.Format("The current CPU load is {0} percent"' currentCpuPercentage);                          JerrySpeak(cpuLoadVocalMessage' VoiceGender.Female' 5);                      }                  }                  #endregion                    // Only tell us when memory is below one gigabyte                  if (currentAvailableMemory < 1024)                  {                      // Speak to the user with text to speech to tell them what the current values are                      string memAvailableVocalMessage = String.Format("You currently have {0} megabytes of memory available"' currentAvailableMemory);                      JerrySpeak(memAvailableVocalMessage' VoiceGender.Male' 10);                  }                    Thread.Sleep(1000);              }
