Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,MultipartDataMediaFormatter,FormMultipartEncodedMediaTypeFormatter,C:\repos\iLexDev_ASP.NET-WebApi-MultipartDataMediaFormatter\src\MultipartDataMediaFormatter\FormMultipartEncodedMediaTypeFormatter.cs,WriteToStreamAsync,The method has 5 parameters. Parameters: type' value' writeStream' content' transportContext
Long Identifier,MultipartDataMediaFormatter,FormMultipartEncodedMediaTypeFormatter,C:\repos\iLexDev_ASP.NET-WebApi-MultipartDataMediaFormatter\src\MultipartDataMediaFormatter\FormMultipartEncodedMediaTypeFormatter.cs,ReadFromStreamAsync,The length of the parameter httpContentToFormDataConverter is 30.
Long Identifier,MultipartDataMediaFormatter,FormMultipartEncodedMediaTypeFormatter,C:\repos\iLexDev_ASP.NET-WebApi-MultipartDataMediaFormatter\src\MultipartDataMediaFormatter\FormMultipartEncodedMediaTypeFormatter.cs,WriteToStreamAsync,The length of the parameter objectToMultipartDataByteArrayConverter is 39.
Long Statement,MultipartDataMediaFormatter.Converters,HttpContentToFormDataConverter,C:\repos\iLexDev_ASP.NET-WebApi-MultipartDataMediaFormatter\src\MultipartDataMediaFormatter\Converters\HttpContentToFormDataConverter.cs,UnquoteToken,The length of the statement  "            if (token.StartsWith("\""' StringComparison.Ordinal) && token.EndsWith("\""' StringComparison.Ordinal) && token.Length > 1) " is 123.
Long Statement,MultipartDataMediaFormatter.Infrastructure.Logger,FormDataConverterLogger,C:\repos\iLexDev_ASP.NET-WebApi-MultipartDataMediaFormatter\src\MultipartDataMediaFormatter\Infrastructure\Logger\FormDataConverterLogger.cs,EnsureNoErrors,The length of the statement  "                    .Select(m => String.Format("{0}: {1}"' m.Key' String.Join(". "' m.Value.Select(x => (x.ErrorMessage ?? (x.Exception != null ? x.Exception.Message : "")))))) " is 156.
Long Statement,MultipartDataMediaFormatter,FormMultipartEncodedMediaTypeFormatter,C:\repos\iLexDev_ASP.NET-WebApi-MultipartDataMediaFormatter\src\MultipartDataMediaFormatter\FormMultipartEncodedMediaTypeFormatter.cs,SetDefaultContentHeaders,The length of the statement  "            //(if add when fill SupportedMediaTypes collection in class constructor then receive post with another boundary will not work - Unsupported Media Type exception will thrown) " is 173.
Long Statement,MultipartDataMediaFormatter,FormMultipartEncodedMediaTypeFormatter,C:\repos\iLexDev_ASP.NET-WebApi-MultipartDataMediaFormatter\src\MultipartDataMediaFormatter\FormMultipartEncodedMediaTypeFormatter.cs,WriteToStreamAsync,The length of the statement  "            var boudaryParameter = content.Headers.ContentType.Parameters.FirstOrDefault(m => m.Name == "boundary" && !String.IsNullOrWhiteSpace(m.Value)); " is 143.
Complex Conditional,MultipartDataMediaFormatter.Converters,FormDataToObjectConverter,C:\repos\iLexDev_ASP.NET-WebApi-MultipartDataMediaFormatter\src\MultipartDataMediaFormatter\Converters\FormDataToObjectConverter.cs,CreateObject,The conditional expression  "TryGetAsNotIndexedListOrArray(destinationType' propertyName' out buf)                  || TryGetFromFormData(destinationType' propertyName' out buf)                  || TryGetAsGenericDictionary(destinationType' propertyName' out buf)                  || TryGetAsIndexedGenericListOrArray(destinationType' propertyName' out buf)                  || TryGetAsCustomType(destinationType' propertyName' out buf)"  is complex.
Magic Number,MultipartDataMediaFormatter.Converters,HttpContentToFormDataConverter,C:\repos\iLexDev_ASP.NET-WebApi-MultipartDataMediaFormatter\src\MultipartDataMediaFormatter\Converters\HttpContentToFormDataConverter.cs,UnquoteToken,The following statement contains a magic number: if (token.StartsWith("\""' StringComparison.Ordinal) && token.EndsWith("\""' StringComparison.Ordinal) && token.Length > 1)              {                  return token.Substring(1' token.Length - 2);              }
Magic Number,MultipartDataMediaFormatter.Converters,FormDataToObjectConverter,C:\repos\iLexDev_ASP.NET-WebApi-MultipartDataMediaFormatter\src\MultipartDataMediaFormatter\Converters\FormDataToObjectConverter.cs,IsGenericDictionary,The following statement contains a magic number: if (iDictType != null)              {                  var types = iDictType.GetGenericArguments();                  if (types.Length == 2)                  {                      keyType = types[0];                      valueType = types[1];                      return true;                  }              }
