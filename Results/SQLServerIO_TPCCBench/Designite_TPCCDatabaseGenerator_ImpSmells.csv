Implementation smell,Namespace,Class,File,Method,Description
Complex Method,TpccGen,Program,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\Program.cs,Main,Cyclomatic complexity of the method is 39
Long Statement,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,Next,The length of the statement  "		return lowerBound + (int)((REAL_UNIT_UINT * (double)(_w = (_w ^ (_w >> 19)) ^ (t ^ (t >> 8)))) * (double)((long)upperBound - (long)lowerBound)); " is 144.
Long Statement,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,Next,The length of the statement  "	return lowerBound + (int)((REAL_UNIT_INT * (double)(int)(0x7FFFFFFF & (_w = (_w ^ (_w >> 19)) ^ (t ^ (t >> 8))))) * (double)range); " is 131.
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,Next,The following statement contains a magic number: _w = (_w ^ (_w >> 19)) ^ (t ^ (t >> 8));  
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,Next,The following statement contains a magic number: _w = (_w ^ (_w >> 19)) ^ (t ^ (t >> 8));  
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,Next,The following statement contains a magic number: return (int)((REAL_UNIT_INT * (int)(0x7FFFFFFF & (_w = (_w ^ (_w >> 19)) ^ (t ^ (t >> 8))))) * upperBound);  
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,Next,The following statement contains a magic number: return (int)((REAL_UNIT_INT * (int)(0x7FFFFFFF & (_w = (_w ^ (_w >> 19)) ^ (t ^ (t >> 8))))) * upperBound);  
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,Next,The following statement contains a magic number: if (range < 0) {  	// If range is <0 then an overflow has occured and must resort to using long integer arithmetic instead (slower).  	// We also must use all 32 bits of precision' instead of the normal 31' which again is slower.    	return lowerBound + (int)((REAL_UNIT_UINT * (double)(_w = (_w ^ (_w >> 19)) ^ (t ^ (t >> 8)))) * (double)((long)upperBound - (long)lowerBound));  }  
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,Next,The following statement contains a magic number: if (range < 0) {  	// If range is <0 then an overflow has occured and must resort to using long integer arithmetic instead (slower).  	// We also must use all 32 bits of precision' instead of the normal 31' which again is slower.    	return lowerBound + (int)((REAL_UNIT_UINT * (double)(_w = (_w ^ (_w >> 19)) ^ (t ^ (t >> 8)))) * (double)((long)upperBound - (long)lowerBound));  }  
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,Next,The following statement contains a magic number: return lowerBound + (int)((REAL_UNIT_UINT * (double)(_w = (_w ^ (_w >> 19)) ^ (t ^ (t >> 8)))) * (double)((long)upperBound - (long)lowerBound));  
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,Next,The following statement contains a magic number: return lowerBound + (int)((REAL_UNIT_UINT * (double)(_w = (_w ^ (_w >> 19)) ^ (t ^ (t >> 8)))) * (double)((long)upperBound - (long)lowerBound));  
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,Next,The following statement contains a magic number: return lowerBound + (int)((REAL_UNIT_INT * (double)(int)(0x7FFFFFFF & (_w = (_w ^ (_w >> 19)) ^ (t ^ (t >> 8))))) * (double)range);  
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,Next,The following statement contains a magic number: return lowerBound + (int)((REAL_UNIT_INT * (double)(int)(0x7FFFFFFF & (_w = (_w ^ (_w >> 19)) ^ (t ^ (t >> 8))))) * (double)range);  
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,NextDouble,The following statement contains a magic number: return REAL_UNIT_INT * (int)(0x7FFFFFFF & (_w = (_w ^ (_w >> 19)) ^ (t ^ (t >> 8))));  
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,NextDouble,The following statement contains a magic number: return REAL_UNIT_INT * (int)(0x7FFFFFFF & (_w = (_w ^ (_w >> 19)) ^ (t ^ (t >> 8))));  
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,NextBytes,The following statement contains a magic number: for (int bound = buffer.Length - 3; i < bound;) {  	// Generate 4 bytes.   	// Increased performance is achieved by generating 4 random bytes per loop.  	// Also note that no mask needs to be applied to zero out the higher order bytes before  	// casting because the cast ignores thos bytes. Thanks to Stefan Trosch�tz for pointing this out.  	t = x ^ (x << 11);  	x = y;  	y = z;  	z = w;  	w = (w ^ (w >> 19)) ^ (t ^ (t >> 8));  	buffer [i++] = (byte)w;  	buffer [i++] = (byte)(w >> 8);  	buffer [i++] = (byte)(w >> 16);  	buffer [i++] = (byte)(w >> 24);  }  
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,NextBytes,The following statement contains a magic number: for (int bound = buffer.Length - 3; i < bound;) {  	// Generate 4 bytes.   	// Increased performance is achieved by generating 4 random bytes per loop.  	// Also note that no mask needs to be applied to zero out the higher order bytes before  	// casting because the cast ignores thos bytes. Thanks to Stefan Trosch�tz for pointing this out.  	t = x ^ (x << 11);  	x = y;  	y = z;  	z = w;  	w = (w ^ (w >> 19)) ^ (t ^ (t >> 8));  	buffer [i++] = (byte)w;  	buffer [i++] = (byte)(w >> 8);  	buffer [i++] = (byte)(w >> 16);  	buffer [i++] = (byte)(w >> 24);  }  
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,NextBytes,The following statement contains a magic number: for (int bound = buffer.Length - 3; i < bound;) {  	// Generate 4 bytes.   	// Increased performance is achieved by generating 4 random bytes per loop.  	// Also note that no mask needs to be applied to zero out the higher order bytes before  	// casting because the cast ignores thos bytes. Thanks to Stefan Trosch�tz for pointing this out.  	t = x ^ (x << 11);  	x = y;  	y = z;  	z = w;  	w = (w ^ (w >> 19)) ^ (t ^ (t >> 8));  	buffer [i++] = (byte)w;  	buffer [i++] = (byte)(w >> 8);  	buffer [i++] = (byte)(w >> 16);  	buffer [i++] = (byte)(w >> 24);  }  
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,NextBytes,The following statement contains a magic number: for (int bound = buffer.Length - 3; i < bound;) {  	// Generate 4 bytes.   	// Increased performance is achieved by generating 4 random bytes per loop.  	// Also note that no mask needs to be applied to zero out the higher order bytes before  	// casting because the cast ignores thos bytes. Thanks to Stefan Trosch�tz for pointing this out.  	t = x ^ (x << 11);  	x = y;  	y = z;  	z = w;  	w = (w ^ (w >> 19)) ^ (t ^ (t >> 8));  	buffer [i++] = (byte)w;  	buffer [i++] = (byte)(w >> 8);  	buffer [i++] = (byte)(w >> 16);  	buffer [i++] = (byte)(w >> 24);  }  
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,NextBytes,The following statement contains a magic number: for (int bound = buffer.Length - 3; i < bound;) {  	// Generate 4 bytes.   	// Increased performance is achieved by generating 4 random bytes per loop.  	// Also note that no mask needs to be applied to zero out the higher order bytes before  	// casting because the cast ignores thos bytes. Thanks to Stefan Trosch�tz for pointing this out.  	t = x ^ (x << 11);  	x = y;  	y = z;  	z = w;  	w = (w ^ (w >> 19)) ^ (t ^ (t >> 8));  	buffer [i++] = (byte)w;  	buffer [i++] = (byte)(w >> 8);  	buffer [i++] = (byte)(w >> 16);  	buffer [i++] = (byte)(w >> 24);  }  
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,NextBytes,The following statement contains a magic number: for (int bound = buffer.Length - 3; i < bound;) {  	// Generate 4 bytes.   	// Increased performance is achieved by generating 4 random bytes per loop.  	// Also note that no mask needs to be applied to zero out the higher order bytes before  	// casting because the cast ignores thos bytes. Thanks to Stefan Trosch�tz for pointing this out.  	t = x ^ (x << 11);  	x = y;  	y = z;  	z = w;  	w = (w ^ (w >> 19)) ^ (t ^ (t >> 8));  	buffer [i++] = (byte)w;  	buffer [i++] = (byte)(w >> 8);  	buffer [i++] = (byte)(w >> 16);  	buffer [i++] = (byte)(w >> 24);  }  
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,NextBytes,The following statement contains a magic number: for (int bound = buffer.Length - 3; i < bound;) {  	// Generate 4 bytes.   	// Increased performance is achieved by generating 4 random bytes per loop.  	// Also note that no mask needs to be applied to zero out the higher order bytes before  	// casting because the cast ignores thos bytes. Thanks to Stefan Trosch�tz for pointing this out.  	t = x ^ (x << 11);  	x = y;  	y = z;  	z = w;  	w = (w ^ (w >> 19)) ^ (t ^ (t >> 8));  	buffer [i++] = (byte)w;  	buffer [i++] = (byte)(w >> 8);  	buffer [i++] = (byte)(w >> 16);  	buffer [i++] = (byte)(w >> 24);  }  
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,NextBytes,The following statement contains a magic number: t = x ^ (x << 11);  
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,NextBytes,The following statement contains a magic number: w = (w ^ (w >> 19)) ^ (t ^ (t >> 8));  
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,NextBytes,The following statement contains a magic number: w = (w ^ (w >> 19)) ^ (t ^ (t >> 8));  
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,NextBytes,The following statement contains a magic number: buffer [i++] = (byte)(w >> 8);  
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,NextBytes,The following statement contains a magic number: buffer [i++] = (byte)(w >> 16);  
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,NextBytes,The following statement contains a magic number: buffer [i++] = (byte)(w >> 24);  
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,NextBytes,The following statement contains a magic number: if (i < buffer.Length) {  	// Generate 4 bytes.  	t = x ^ (x << 11);  	x = y;  	y = z;  	z = w;  	w = (w ^ (w >> 19)) ^ (t ^ (t >> 8));  	buffer [i++] = (byte)w;  	if (i < buffer.Length) {  		buffer [i++] = (byte)(w >> 8);  		if (i < buffer.Length) {  			buffer [i++] = (byte)(w >> 16);  			if (i < buffer.Length) {  				buffer [i] = (byte)(w >> 24);  			}  		}  	}  }  
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,NextBytes,The following statement contains a magic number: if (i < buffer.Length) {  	// Generate 4 bytes.  	t = x ^ (x << 11);  	x = y;  	y = z;  	z = w;  	w = (w ^ (w >> 19)) ^ (t ^ (t >> 8));  	buffer [i++] = (byte)w;  	if (i < buffer.Length) {  		buffer [i++] = (byte)(w >> 8);  		if (i < buffer.Length) {  			buffer [i++] = (byte)(w >> 16);  			if (i < buffer.Length) {  				buffer [i] = (byte)(w >> 24);  			}  		}  	}  }  
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,NextBytes,The following statement contains a magic number: if (i < buffer.Length) {  	// Generate 4 bytes.  	t = x ^ (x << 11);  	x = y;  	y = z;  	z = w;  	w = (w ^ (w >> 19)) ^ (t ^ (t >> 8));  	buffer [i++] = (byte)w;  	if (i < buffer.Length) {  		buffer [i++] = (byte)(w >> 8);  		if (i < buffer.Length) {  			buffer [i++] = (byte)(w >> 16);  			if (i < buffer.Length) {  				buffer [i] = (byte)(w >> 24);  			}  		}  	}  }  
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,NextBytes,The following statement contains a magic number: if (i < buffer.Length) {  	// Generate 4 bytes.  	t = x ^ (x << 11);  	x = y;  	y = z;  	z = w;  	w = (w ^ (w >> 19)) ^ (t ^ (t >> 8));  	buffer [i++] = (byte)w;  	if (i < buffer.Length) {  		buffer [i++] = (byte)(w >> 8);  		if (i < buffer.Length) {  			buffer [i++] = (byte)(w >> 16);  			if (i < buffer.Length) {  				buffer [i] = (byte)(w >> 24);  			}  		}  	}  }  
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,NextBytes,The following statement contains a magic number: if (i < buffer.Length) {  	// Generate 4 bytes.  	t = x ^ (x << 11);  	x = y;  	y = z;  	z = w;  	w = (w ^ (w >> 19)) ^ (t ^ (t >> 8));  	buffer [i++] = (byte)w;  	if (i < buffer.Length) {  		buffer [i++] = (byte)(w >> 8);  		if (i < buffer.Length) {  			buffer [i++] = (byte)(w >> 16);  			if (i < buffer.Length) {  				buffer [i] = (byte)(w >> 24);  			}  		}  	}  }  
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,NextBytes,The following statement contains a magic number: if (i < buffer.Length) {  	// Generate 4 bytes.  	t = x ^ (x << 11);  	x = y;  	y = z;  	z = w;  	w = (w ^ (w >> 19)) ^ (t ^ (t >> 8));  	buffer [i++] = (byte)w;  	if (i < buffer.Length) {  		buffer [i++] = (byte)(w >> 8);  		if (i < buffer.Length) {  			buffer [i++] = (byte)(w >> 16);  			if (i < buffer.Length) {  				buffer [i] = (byte)(w >> 24);  			}  		}  	}  }  
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,NextBytes,The following statement contains a magic number: t = x ^ (x << 11);  
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,NextBytes,The following statement contains a magic number: w = (w ^ (w >> 19)) ^ (t ^ (t >> 8));  
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,NextBytes,The following statement contains a magic number: w = (w ^ (w >> 19)) ^ (t ^ (t >> 8));  
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,NextBytes,The following statement contains a magic number: if (i < buffer.Length) {  	buffer [i++] = (byte)(w >> 8);  	if (i < buffer.Length) {  		buffer [i++] = (byte)(w >> 16);  		if (i < buffer.Length) {  			buffer [i] = (byte)(w >> 24);  		}  	}  }  
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,NextBytes,The following statement contains a magic number: if (i < buffer.Length) {  	buffer [i++] = (byte)(w >> 8);  	if (i < buffer.Length) {  		buffer [i++] = (byte)(w >> 16);  		if (i < buffer.Length) {  			buffer [i] = (byte)(w >> 24);  		}  	}  }  
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,NextBytes,The following statement contains a magic number: if (i < buffer.Length) {  	buffer [i++] = (byte)(w >> 8);  	if (i < buffer.Length) {  		buffer [i++] = (byte)(w >> 16);  		if (i < buffer.Length) {  			buffer [i] = (byte)(w >> 24);  		}  	}  }  
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,NextBytes,The following statement contains a magic number: buffer [i++] = (byte)(w >> 8);  
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,NextBytes,The following statement contains a magic number: if (i < buffer.Length) {  	buffer [i++] = (byte)(w >> 16);  	if (i < buffer.Length) {  		buffer [i] = (byte)(w >> 24);  	}  }  
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,NextBytes,The following statement contains a magic number: if (i < buffer.Length) {  	buffer [i++] = (byte)(w >> 16);  	if (i < buffer.Length) {  		buffer [i] = (byte)(w >> 24);  	}  }  
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,NextBytes,The following statement contains a magic number: buffer [i++] = (byte)(w >> 16);  
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,NextBytes,The following statement contains a magic number: if (i < buffer.Length) {  	buffer [i] = (byte)(w >> 24);  }  
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,NextBytes,The following statement contains a magic number: buffer [i] = (byte)(w >> 24);  
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,NextUInt,The following statement contains a magic number: return _w = (_w ^ (_w >> 19)) ^ (t ^ (t >> 8));  
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,NextUInt,The following statement contains a magic number: return _w = (_w ^ (_w >> 19)) ^ (t ^ (t >> 8));  
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,NextInt,The following statement contains a magic number: return (int)(0x7FFFFFFF & (_w = (_w ^ (_w >> 19)) ^ (t ^ (t >> 8))));  
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,NextInt,The following statement contains a magic number: return (int)(0x7FFFFFFF & (_w = (_w ^ (_w >> 19)) ^ (t ^ (t >> 8))));  
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,NextBool,The following statement contains a magic number: if (_bitMask == 0) {  	// Generate 32 more bits.  	uint t = _x ^ (_x << 11);  	_x = _y;  	_y = _z;  	_z = _w;  	_bitBuffer = _w = (_w ^ (_w >> 19)) ^ (t ^ (t >> 8));  	// Reset the bitMask that tells us which bit to read next.  	_bitMask = 0x80000000;  	return (_bitBuffer & _bitMask) == 0;  }  
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,NextBool,The following statement contains a magic number: if (_bitMask == 0) {  	// Generate 32 more bits.  	uint t = _x ^ (_x << 11);  	_x = _y;  	_y = _z;  	_z = _w;  	_bitBuffer = _w = (_w ^ (_w >> 19)) ^ (t ^ (t >> 8));  	// Reset the bitMask that tells us which bit to read next.  	_bitMask = 0x80000000;  	return (_bitBuffer & _bitMask) == 0;  }  
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,NextBool,The following statement contains a magic number: if (_bitMask == 0) {  	// Generate 32 more bits.  	uint t = _x ^ (_x << 11);  	_x = _y;  	_y = _z;  	_z = _w;  	_bitBuffer = _w = (_w ^ (_w >> 19)) ^ (t ^ (t >> 8));  	// Reset the bitMask that tells us which bit to read next.  	_bitMask = 0x80000000;  	return (_bitBuffer & _bitMask) == 0;  }  
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,NextBool,The following statement contains a magic number: _bitBuffer = _w = (_w ^ (_w >> 19)) ^ (t ^ (t >> 8));  
Magic Number,SharpNeat.Utility,FastRandom,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\FastRandom.cs,NextBool,The following statement contains a magic number: _bitBuffer = _w = (_w ^ (_w >> 19)) ^ (t ^ (t >> 8));  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++) {  		for (int cid = 1; cid < 3001; cid++) {  			DataRow dr = dt.NewRow ();  			dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  			dr ["C_D_ID"] = "D_W" + i + "_" + id;  			dr ["C_W_ID"] = "W_" + i;  			dr ["C_FIRST"] = RandomString (5' 16);  			dr ["C_MIDDLE"] = "oe";  			dr ["C_LAST"] = RandomString (8' 16);  			dr ["C_STREET_1"] = RandomString (10' 20);  			dr ["C_STREET_2"] = RandomString (10' 20);  			dr ["C_CITY"] = RandomString (10' 20);  			dr ["C_STATE"] = RandomString (2' 2);  			dr ["C_ZIP"] = RandZip ();  			dr ["C_PHONE"] = RandomString (12' 12);  			dr ["C_SINCE"] = currdate.ToLongTimeString ();  			dr ["C_CREDIT"] = "GC";  			dr ["C_CREDIT_LIM"] = 5000;  			dr ["C_DISCOUNT"] = .5;  			dr ["C_BALANCE"] = -10.00;  			dr ["C_YTD_PAYMENT"] = 10.00;  			dr ["C_PAYMENT_CNT"] = 1;  			dr ["C_DELIVERY_CNT"] = 0;  			dr ["C_DATA"] = RandomString (300' 500);  			dr ["SEQ_ID"] = tid;  			dt.Rows.Add (dr);  		}  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++) {  		for (int cid = 1; cid < 3001; cid++) {  			DataRow dr = dt.NewRow ();  			dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  			dr ["C_D_ID"] = "D_W" + i + "_" + id;  			dr ["C_W_ID"] = "W_" + i;  			dr ["C_FIRST"] = RandomString (5' 16);  			dr ["C_MIDDLE"] = "oe";  			dr ["C_LAST"] = RandomString (8' 16);  			dr ["C_STREET_1"] = RandomString (10' 20);  			dr ["C_STREET_2"] = RandomString (10' 20);  			dr ["C_CITY"] = RandomString (10' 20);  			dr ["C_STATE"] = RandomString (2' 2);  			dr ["C_ZIP"] = RandZip ();  			dr ["C_PHONE"] = RandomString (12' 12);  			dr ["C_SINCE"] = currdate.ToLongTimeString ();  			dr ["C_CREDIT"] = "GC";  			dr ["C_CREDIT_LIM"] = 5000;  			dr ["C_DISCOUNT"] = .5;  			dr ["C_BALANCE"] = -10.00;  			dr ["C_YTD_PAYMENT"] = 10.00;  			dr ["C_PAYMENT_CNT"] = 1;  			dr ["C_DELIVERY_CNT"] = 0;  			dr ["C_DATA"] = RandomString (300' 500);  			dr ["SEQ_ID"] = tid;  			dt.Rows.Add (dr);  		}  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++) {  		for (int cid = 1; cid < 3001; cid++) {  			DataRow dr = dt.NewRow ();  			dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  			dr ["C_D_ID"] = "D_W" + i + "_" + id;  			dr ["C_W_ID"] = "W_" + i;  			dr ["C_FIRST"] = RandomString (5' 16);  			dr ["C_MIDDLE"] = "oe";  			dr ["C_LAST"] = RandomString (8' 16);  			dr ["C_STREET_1"] = RandomString (10' 20);  			dr ["C_STREET_2"] = RandomString (10' 20);  			dr ["C_CITY"] = RandomString (10' 20);  			dr ["C_STATE"] = RandomString (2' 2);  			dr ["C_ZIP"] = RandZip ();  			dr ["C_PHONE"] = RandomString (12' 12);  			dr ["C_SINCE"] = currdate.ToLongTimeString ();  			dr ["C_CREDIT"] = "GC";  			dr ["C_CREDIT_LIM"] = 5000;  			dr ["C_DISCOUNT"] = .5;  			dr ["C_BALANCE"] = -10.00;  			dr ["C_YTD_PAYMENT"] = 10.00;  			dr ["C_PAYMENT_CNT"] = 1;  			dr ["C_DELIVERY_CNT"] = 0;  			dr ["C_DATA"] = RandomString (300' 500);  			dr ["SEQ_ID"] = tid;  			dt.Rows.Add (dr);  		}  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++) {  		for (int cid = 1; cid < 3001; cid++) {  			DataRow dr = dt.NewRow ();  			dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  			dr ["C_D_ID"] = "D_W" + i + "_" + id;  			dr ["C_W_ID"] = "W_" + i;  			dr ["C_FIRST"] = RandomString (5' 16);  			dr ["C_MIDDLE"] = "oe";  			dr ["C_LAST"] = RandomString (8' 16);  			dr ["C_STREET_1"] = RandomString (10' 20);  			dr ["C_STREET_2"] = RandomString (10' 20);  			dr ["C_CITY"] = RandomString (10' 20);  			dr ["C_STATE"] = RandomString (2' 2);  			dr ["C_ZIP"] = RandZip ();  			dr ["C_PHONE"] = RandomString (12' 12);  			dr ["C_SINCE"] = currdate.ToLongTimeString ();  			dr ["C_CREDIT"] = "GC";  			dr ["C_CREDIT_LIM"] = 5000;  			dr ["C_DISCOUNT"] = .5;  			dr ["C_BALANCE"] = -10.00;  			dr ["C_YTD_PAYMENT"] = 10.00;  			dr ["C_PAYMENT_CNT"] = 1;  			dr ["C_DELIVERY_CNT"] = 0;  			dr ["C_DATA"] = RandomString (300' 500);  			dr ["SEQ_ID"] = tid;  			dt.Rows.Add (dr);  		}  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++) {  		for (int cid = 1; cid < 3001; cid++) {  			DataRow dr = dt.NewRow ();  			dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  			dr ["C_D_ID"] = "D_W" + i + "_" + id;  			dr ["C_W_ID"] = "W_" + i;  			dr ["C_FIRST"] = RandomString (5' 16);  			dr ["C_MIDDLE"] = "oe";  			dr ["C_LAST"] = RandomString (8' 16);  			dr ["C_STREET_1"] = RandomString (10' 20);  			dr ["C_STREET_2"] = RandomString (10' 20);  			dr ["C_CITY"] = RandomString (10' 20);  			dr ["C_STATE"] = RandomString (2' 2);  			dr ["C_ZIP"] = RandZip ();  			dr ["C_PHONE"] = RandomString (12' 12);  			dr ["C_SINCE"] = currdate.ToLongTimeString ();  			dr ["C_CREDIT"] = "GC";  			dr ["C_CREDIT_LIM"] = 5000;  			dr ["C_DISCOUNT"] = .5;  			dr ["C_BALANCE"] = -10.00;  			dr ["C_YTD_PAYMENT"] = 10.00;  			dr ["C_PAYMENT_CNT"] = 1;  			dr ["C_DELIVERY_CNT"] = 0;  			dr ["C_DATA"] = RandomString (300' 500);  			dr ["SEQ_ID"] = tid;  			dt.Rows.Add (dr);  		}  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++) {  		for (int cid = 1; cid < 3001; cid++) {  			DataRow dr = dt.NewRow ();  			dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  			dr ["C_D_ID"] = "D_W" + i + "_" + id;  			dr ["C_W_ID"] = "W_" + i;  			dr ["C_FIRST"] = RandomString (5' 16);  			dr ["C_MIDDLE"] = "oe";  			dr ["C_LAST"] = RandomString (8' 16);  			dr ["C_STREET_1"] = RandomString (10' 20);  			dr ["C_STREET_2"] = RandomString (10' 20);  			dr ["C_CITY"] = RandomString (10' 20);  			dr ["C_STATE"] = RandomString (2' 2);  			dr ["C_ZIP"] = RandZip ();  			dr ["C_PHONE"] = RandomString (12' 12);  			dr ["C_SINCE"] = currdate.ToLongTimeString ();  			dr ["C_CREDIT"] = "GC";  			dr ["C_CREDIT_LIM"] = 5000;  			dr ["C_DISCOUNT"] = .5;  			dr ["C_BALANCE"] = -10.00;  			dr ["C_YTD_PAYMENT"] = 10.00;  			dr ["C_PAYMENT_CNT"] = 1;  			dr ["C_DELIVERY_CNT"] = 0;  			dr ["C_DATA"] = RandomString (300' 500);  			dr ["SEQ_ID"] = tid;  			dt.Rows.Add (dr);  		}  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++) {  		for (int cid = 1; cid < 3001; cid++) {  			DataRow dr = dt.NewRow ();  			dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  			dr ["C_D_ID"] = "D_W" + i + "_" + id;  			dr ["C_W_ID"] = "W_" + i;  			dr ["C_FIRST"] = RandomString (5' 16);  			dr ["C_MIDDLE"] = "oe";  			dr ["C_LAST"] = RandomString (8' 16);  			dr ["C_STREET_1"] = RandomString (10' 20);  			dr ["C_STREET_2"] = RandomString (10' 20);  			dr ["C_CITY"] = RandomString (10' 20);  			dr ["C_STATE"] = RandomString (2' 2);  			dr ["C_ZIP"] = RandZip ();  			dr ["C_PHONE"] = RandomString (12' 12);  			dr ["C_SINCE"] = currdate.ToLongTimeString ();  			dr ["C_CREDIT"] = "GC";  			dr ["C_CREDIT_LIM"] = 5000;  			dr ["C_DISCOUNT"] = .5;  			dr ["C_BALANCE"] = -10.00;  			dr ["C_YTD_PAYMENT"] = 10.00;  			dr ["C_PAYMENT_CNT"] = 1;  			dr ["C_DELIVERY_CNT"] = 0;  			dr ["C_DATA"] = RandomString (300' 500);  			dr ["SEQ_ID"] = tid;  			dt.Rows.Add (dr);  		}  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++) {  		for (int cid = 1; cid < 3001; cid++) {  			DataRow dr = dt.NewRow ();  			dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  			dr ["C_D_ID"] = "D_W" + i + "_" + id;  			dr ["C_W_ID"] = "W_" + i;  			dr ["C_FIRST"] = RandomString (5' 16);  			dr ["C_MIDDLE"] = "oe";  			dr ["C_LAST"] = RandomString (8' 16);  			dr ["C_STREET_1"] = RandomString (10' 20);  			dr ["C_STREET_2"] = RandomString (10' 20);  			dr ["C_CITY"] = RandomString (10' 20);  			dr ["C_STATE"] = RandomString (2' 2);  			dr ["C_ZIP"] = RandZip ();  			dr ["C_PHONE"] = RandomString (12' 12);  			dr ["C_SINCE"] = currdate.ToLongTimeString ();  			dr ["C_CREDIT"] = "GC";  			dr ["C_CREDIT_LIM"] = 5000;  			dr ["C_DISCOUNT"] = .5;  			dr ["C_BALANCE"] = -10.00;  			dr ["C_YTD_PAYMENT"] = 10.00;  			dr ["C_PAYMENT_CNT"] = 1;  			dr ["C_DELIVERY_CNT"] = 0;  			dr ["C_DATA"] = RandomString (300' 500);  			dr ["SEQ_ID"] = tid;  			dt.Rows.Add (dr);  		}  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++) {  		for (int cid = 1; cid < 3001; cid++) {  			DataRow dr = dt.NewRow ();  			dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  			dr ["C_D_ID"] = "D_W" + i + "_" + id;  			dr ["C_W_ID"] = "W_" + i;  			dr ["C_FIRST"] = RandomString (5' 16);  			dr ["C_MIDDLE"] = "oe";  			dr ["C_LAST"] = RandomString (8' 16);  			dr ["C_STREET_1"] = RandomString (10' 20);  			dr ["C_STREET_2"] = RandomString (10' 20);  			dr ["C_CITY"] = RandomString (10' 20);  			dr ["C_STATE"] = RandomString (2' 2);  			dr ["C_ZIP"] = RandZip ();  			dr ["C_PHONE"] = RandomString (12' 12);  			dr ["C_SINCE"] = currdate.ToLongTimeString ();  			dr ["C_CREDIT"] = "GC";  			dr ["C_CREDIT_LIM"] = 5000;  			dr ["C_DISCOUNT"] = .5;  			dr ["C_BALANCE"] = -10.00;  			dr ["C_YTD_PAYMENT"] = 10.00;  			dr ["C_PAYMENT_CNT"] = 1;  			dr ["C_DELIVERY_CNT"] = 0;  			dr ["C_DATA"] = RandomString (300' 500);  			dr ["SEQ_ID"] = tid;  			dt.Rows.Add (dr);  		}  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++) {  		for (int cid = 1; cid < 3001; cid++) {  			DataRow dr = dt.NewRow ();  			dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  			dr ["C_D_ID"] = "D_W" + i + "_" + id;  			dr ["C_W_ID"] = "W_" + i;  			dr ["C_FIRST"] = RandomString (5' 16);  			dr ["C_MIDDLE"] = "oe";  			dr ["C_LAST"] = RandomString (8' 16);  			dr ["C_STREET_1"] = RandomString (10' 20);  			dr ["C_STREET_2"] = RandomString (10' 20);  			dr ["C_CITY"] = RandomString (10' 20);  			dr ["C_STATE"] = RandomString (2' 2);  			dr ["C_ZIP"] = RandZip ();  			dr ["C_PHONE"] = RandomString (12' 12);  			dr ["C_SINCE"] = currdate.ToLongTimeString ();  			dr ["C_CREDIT"] = "GC";  			dr ["C_CREDIT_LIM"] = 5000;  			dr ["C_DISCOUNT"] = .5;  			dr ["C_BALANCE"] = -10.00;  			dr ["C_YTD_PAYMENT"] = 10.00;  			dr ["C_PAYMENT_CNT"] = 1;  			dr ["C_DELIVERY_CNT"] = 0;  			dr ["C_DATA"] = RandomString (300' 500);  			dr ["SEQ_ID"] = tid;  			dt.Rows.Add (dr);  		}  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++) {  		for (int cid = 1; cid < 3001; cid++) {  			DataRow dr = dt.NewRow ();  			dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  			dr ["C_D_ID"] = "D_W" + i + "_" + id;  			dr ["C_W_ID"] = "W_" + i;  			dr ["C_FIRST"] = RandomString (5' 16);  			dr ["C_MIDDLE"] = "oe";  			dr ["C_LAST"] = RandomString (8' 16);  			dr ["C_STREET_1"] = RandomString (10' 20);  			dr ["C_STREET_2"] = RandomString (10' 20);  			dr ["C_CITY"] = RandomString (10' 20);  			dr ["C_STATE"] = RandomString (2' 2);  			dr ["C_ZIP"] = RandZip ();  			dr ["C_PHONE"] = RandomString (12' 12);  			dr ["C_SINCE"] = currdate.ToLongTimeString ();  			dr ["C_CREDIT"] = "GC";  			dr ["C_CREDIT_LIM"] = 5000;  			dr ["C_DISCOUNT"] = .5;  			dr ["C_BALANCE"] = -10.00;  			dr ["C_YTD_PAYMENT"] = 10.00;  			dr ["C_PAYMENT_CNT"] = 1;  			dr ["C_DELIVERY_CNT"] = 0;  			dr ["C_DATA"] = RandomString (300' 500);  			dr ["SEQ_ID"] = tid;  			dt.Rows.Add (dr);  		}  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++) {  		for (int cid = 1; cid < 3001; cid++) {  			DataRow dr = dt.NewRow ();  			dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  			dr ["C_D_ID"] = "D_W" + i + "_" + id;  			dr ["C_W_ID"] = "W_" + i;  			dr ["C_FIRST"] = RandomString (5' 16);  			dr ["C_MIDDLE"] = "oe";  			dr ["C_LAST"] = RandomString (8' 16);  			dr ["C_STREET_1"] = RandomString (10' 20);  			dr ["C_STREET_2"] = RandomString (10' 20);  			dr ["C_CITY"] = RandomString (10' 20);  			dr ["C_STATE"] = RandomString (2' 2);  			dr ["C_ZIP"] = RandZip ();  			dr ["C_PHONE"] = RandomString (12' 12);  			dr ["C_SINCE"] = currdate.ToLongTimeString ();  			dr ["C_CREDIT"] = "GC";  			dr ["C_CREDIT_LIM"] = 5000;  			dr ["C_DISCOUNT"] = .5;  			dr ["C_BALANCE"] = -10.00;  			dr ["C_YTD_PAYMENT"] = 10.00;  			dr ["C_PAYMENT_CNT"] = 1;  			dr ["C_DELIVERY_CNT"] = 0;  			dr ["C_DATA"] = RandomString (300' 500);  			dr ["SEQ_ID"] = tid;  			dt.Rows.Add (dr);  		}  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++) {  		for (int cid = 1; cid < 3001; cid++) {  			DataRow dr = dt.NewRow ();  			dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  			dr ["C_D_ID"] = "D_W" + i + "_" + id;  			dr ["C_W_ID"] = "W_" + i;  			dr ["C_FIRST"] = RandomString (5' 16);  			dr ["C_MIDDLE"] = "oe";  			dr ["C_LAST"] = RandomString (8' 16);  			dr ["C_STREET_1"] = RandomString (10' 20);  			dr ["C_STREET_2"] = RandomString (10' 20);  			dr ["C_CITY"] = RandomString (10' 20);  			dr ["C_STATE"] = RandomString (2' 2);  			dr ["C_ZIP"] = RandZip ();  			dr ["C_PHONE"] = RandomString (12' 12);  			dr ["C_SINCE"] = currdate.ToLongTimeString ();  			dr ["C_CREDIT"] = "GC";  			dr ["C_CREDIT_LIM"] = 5000;  			dr ["C_DISCOUNT"] = .5;  			dr ["C_BALANCE"] = -10.00;  			dr ["C_YTD_PAYMENT"] = 10.00;  			dr ["C_PAYMENT_CNT"] = 1;  			dr ["C_DELIVERY_CNT"] = 0;  			dr ["C_DATA"] = RandomString (300' 500);  			dr ["SEQ_ID"] = tid;  			dt.Rows.Add (dr);  		}  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++) {  		for (int cid = 1; cid < 3001; cid++) {  			DataRow dr = dt.NewRow ();  			dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  			dr ["C_D_ID"] = "D_W" + i + "_" + id;  			dr ["C_W_ID"] = "W_" + i;  			dr ["C_FIRST"] = RandomString (5' 16);  			dr ["C_MIDDLE"] = "oe";  			dr ["C_LAST"] = RandomString (8' 16);  			dr ["C_STREET_1"] = RandomString (10' 20);  			dr ["C_STREET_2"] = RandomString (10' 20);  			dr ["C_CITY"] = RandomString (10' 20);  			dr ["C_STATE"] = RandomString (2' 2);  			dr ["C_ZIP"] = RandZip ();  			dr ["C_PHONE"] = RandomString (12' 12);  			dr ["C_SINCE"] = currdate.ToLongTimeString ();  			dr ["C_CREDIT"] = "GC";  			dr ["C_CREDIT_LIM"] = 5000;  			dr ["C_DISCOUNT"] = .5;  			dr ["C_BALANCE"] = -10.00;  			dr ["C_YTD_PAYMENT"] = 10.00;  			dr ["C_PAYMENT_CNT"] = 1;  			dr ["C_DELIVERY_CNT"] = 0;  			dr ["C_DATA"] = RandomString (300' 500);  			dr ["SEQ_ID"] = tid;  			dt.Rows.Add (dr);  		}  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++) {  		for (int cid = 1; cid < 3001; cid++) {  			DataRow dr = dt.NewRow ();  			dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  			dr ["C_D_ID"] = "D_W" + i + "_" + id;  			dr ["C_W_ID"] = "W_" + i;  			dr ["C_FIRST"] = RandomString (5' 16);  			dr ["C_MIDDLE"] = "oe";  			dr ["C_LAST"] = RandomString (8' 16);  			dr ["C_STREET_1"] = RandomString (10' 20);  			dr ["C_STREET_2"] = RandomString (10' 20);  			dr ["C_CITY"] = RandomString (10' 20);  			dr ["C_STATE"] = RandomString (2' 2);  			dr ["C_ZIP"] = RandZip ();  			dr ["C_PHONE"] = RandomString (12' 12);  			dr ["C_SINCE"] = currdate.ToLongTimeString ();  			dr ["C_CREDIT"] = "GC";  			dr ["C_CREDIT_LIM"] = 5000;  			dr ["C_DISCOUNT"] = .5;  			dr ["C_BALANCE"] = -10.00;  			dr ["C_YTD_PAYMENT"] = 10.00;  			dr ["C_PAYMENT_CNT"] = 1;  			dr ["C_DELIVERY_CNT"] = 0;  			dr ["C_DATA"] = RandomString (300' 500);  			dr ["SEQ_ID"] = tid;  			dt.Rows.Add (dr);  		}  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++) {  		for (int cid = 1; cid < 3001; cid++) {  			DataRow dr = dt.NewRow ();  			dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  			dr ["C_D_ID"] = "D_W" + i + "_" + id;  			dr ["C_W_ID"] = "W_" + i;  			dr ["C_FIRST"] = RandomString (5' 16);  			dr ["C_MIDDLE"] = "oe";  			dr ["C_LAST"] = RandomString (8' 16);  			dr ["C_STREET_1"] = RandomString (10' 20);  			dr ["C_STREET_2"] = RandomString (10' 20);  			dr ["C_CITY"] = RandomString (10' 20);  			dr ["C_STATE"] = RandomString (2' 2);  			dr ["C_ZIP"] = RandZip ();  			dr ["C_PHONE"] = RandomString (12' 12);  			dr ["C_SINCE"] = currdate.ToLongTimeString ();  			dr ["C_CREDIT"] = "GC";  			dr ["C_CREDIT_LIM"] = 5000;  			dr ["C_DISCOUNT"] = .5;  			dr ["C_BALANCE"] = -10.00;  			dr ["C_YTD_PAYMENT"] = 10.00;  			dr ["C_PAYMENT_CNT"] = 1;  			dr ["C_DELIVERY_CNT"] = 0;  			dr ["C_DATA"] = RandomString (300' 500);  			dr ["SEQ_ID"] = tid;  			dt.Rows.Add (dr);  		}  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++) {  		for (int cid = 1; cid < 3001; cid++) {  			DataRow dr = dt.NewRow ();  			dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  			dr ["C_D_ID"] = "D_W" + i + "_" + id;  			dr ["C_W_ID"] = "W_" + i;  			dr ["C_FIRST"] = RandomString (5' 16);  			dr ["C_MIDDLE"] = "oe";  			dr ["C_LAST"] = RandomString (8' 16);  			dr ["C_STREET_1"] = RandomString (10' 20);  			dr ["C_STREET_2"] = RandomString (10' 20);  			dr ["C_CITY"] = RandomString (10' 20);  			dr ["C_STATE"] = RandomString (2' 2);  			dr ["C_ZIP"] = RandZip ();  			dr ["C_PHONE"] = RandomString (12' 12);  			dr ["C_SINCE"] = currdate.ToLongTimeString ();  			dr ["C_CREDIT"] = "GC";  			dr ["C_CREDIT_LIM"] = 5000;  			dr ["C_DISCOUNT"] = .5;  			dr ["C_BALANCE"] = -10.00;  			dr ["C_YTD_PAYMENT"] = 10.00;  			dr ["C_PAYMENT_CNT"] = 1;  			dr ["C_DELIVERY_CNT"] = 0;  			dr ["C_DATA"] = RandomString (300' 500);  			dr ["SEQ_ID"] = tid;  			dt.Rows.Add (dr);  		}  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++) {  		for (int cid = 1; cid < 3001; cid++) {  			DataRow dr = dt.NewRow ();  			dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  			dr ["C_D_ID"] = "D_W" + i + "_" + id;  			dr ["C_W_ID"] = "W_" + i;  			dr ["C_FIRST"] = RandomString (5' 16);  			dr ["C_MIDDLE"] = "oe";  			dr ["C_LAST"] = RandomString (8' 16);  			dr ["C_STREET_1"] = RandomString (10' 20);  			dr ["C_STREET_2"] = RandomString (10' 20);  			dr ["C_CITY"] = RandomString (10' 20);  			dr ["C_STATE"] = RandomString (2' 2);  			dr ["C_ZIP"] = RandZip ();  			dr ["C_PHONE"] = RandomString (12' 12);  			dr ["C_SINCE"] = currdate.ToLongTimeString ();  			dr ["C_CREDIT"] = "GC";  			dr ["C_CREDIT_LIM"] = 5000;  			dr ["C_DISCOUNT"] = .5;  			dr ["C_BALANCE"] = -10.00;  			dr ["C_YTD_PAYMENT"] = 10.00;  			dr ["C_PAYMENT_CNT"] = 1;  			dr ["C_DELIVERY_CNT"] = 0;  			dr ["C_DATA"] = RandomString (300' 500);  			dr ["SEQ_ID"] = tid;  			dt.Rows.Add (dr);  		}  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++) {  		for (int cid = 1; cid < 3001; cid++) {  			DataRow dr = dt.NewRow ();  			dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  			dr ["C_D_ID"] = "D_W" + i + "_" + id;  			dr ["C_W_ID"] = "W_" + i;  			dr ["C_FIRST"] = RandomString (5' 16);  			dr ["C_MIDDLE"] = "oe";  			dr ["C_LAST"] = RandomString (8' 16);  			dr ["C_STREET_1"] = RandomString (10' 20);  			dr ["C_STREET_2"] = RandomString (10' 20);  			dr ["C_CITY"] = RandomString (10' 20);  			dr ["C_STATE"] = RandomString (2' 2);  			dr ["C_ZIP"] = RandZip ();  			dr ["C_PHONE"] = RandomString (12' 12);  			dr ["C_SINCE"] = currdate.ToLongTimeString ();  			dr ["C_CREDIT"] = "GC";  			dr ["C_CREDIT_LIM"] = 5000;  			dr ["C_DISCOUNT"] = .5;  			dr ["C_BALANCE"] = -10.00;  			dr ["C_YTD_PAYMENT"] = 10.00;  			dr ["C_PAYMENT_CNT"] = 1;  			dr ["C_DELIVERY_CNT"] = 0;  			dr ["C_DATA"] = RandomString (300' 500);  			dr ["SEQ_ID"] = tid;  			dt.Rows.Add (dr);  		}  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++) {  		for (int cid = 1; cid < 3001; cid++) {  			DataRow dr = dt.NewRow ();  			dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  			dr ["C_D_ID"] = "D_W" + i + "_" + id;  			dr ["C_W_ID"] = "W_" + i;  			dr ["C_FIRST"] = RandomString (5' 16);  			dr ["C_MIDDLE"] = "oe";  			dr ["C_LAST"] = RandomString (8' 16);  			dr ["C_STREET_1"] = RandomString (10' 20);  			dr ["C_STREET_2"] = RandomString (10' 20);  			dr ["C_CITY"] = RandomString (10' 20);  			dr ["C_STATE"] = RandomString (2' 2);  			dr ["C_ZIP"] = RandZip ();  			dr ["C_PHONE"] = RandomString (12' 12);  			dr ["C_SINCE"] = currdate.ToLongTimeString ();  			dr ["C_CREDIT"] = "GC";  			dr ["C_CREDIT_LIM"] = 5000;  			dr ["C_DISCOUNT"] = .5;  			dr ["C_BALANCE"] = -10.00;  			dr ["C_YTD_PAYMENT"] = 10.00;  			dr ["C_PAYMENT_CNT"] = 1;  			dr ["C_DELIVERY_CNT"] = 0;  			dr ["C_DATA"] = RandomString (300' 500);  			dr ["SEQ_ID"] = tid;  			dt.Rows.Add (dr);  		}  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++) {  		for (int cid = 1; cid < 3001; cid++) {  			DataRow dr = dt.NewRow ();  			dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  			dr ["C_D_ID"] = "D_W" + i + "_" + id;  			dr ["C_W_ID"] = "W_" + i;  			dr ["C_FIRST"] = RandomString (5' 16);  			dr ["C_MIDDLE"] = "oe";  			dr ["C_LAST"] = RandomString (8' 16);  			dr ["C_STREET_1"] = RandomString (10' 20);  			dr ["C_STREET_2"] = RandomString (10' 20);  			dr ["C_CITY"] = RandomString (10' 20);  			dr ["C_STATE"] = RandomString (2' 2);  			dr ["C_ZIP"] = RandZip ();  			dr ["C_PHONE"] = RandomString (12' 12);  			dr ["C_SINCE"] = currdate.ToLongTimeString ();  			dr ["C_CREDIT"] = "GC";  			dr ["C_CREDIT_LIM"] = 5000;  			dr ["C_DISCOUNT"] = .5;  			dr ["C_BALANCE"] = -10.00;  			dr ["C_YTD_PAYMENT"] = 10.00;  			dr ["C_PAYMENT_CNT"] = 1;  			dr ["C_DELIVERY_CNT"] = 0;  			dr ["C_DATA"] = RandomString (300' 500);  			dr ["SEQ_ID"] = tid;  			dt.Rows.Add (dr);  		}  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++) {  		for (int cid = 1; cid < 3001; cid++) {  			DataRow dr = dt.NewRow ();  			dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  			dr ["C_D_ID"] = "D_W" + i + "_" + id;  			dr ["C_W_ID"] = "W_" + i;  			dr ["C_FIRST"] = RandomString (5' 16);  			dr ["C_MIDDLE"] = "oe";  			dr ["C_LAST"] = RandomString (8' 16);  			dr ["C_STREET_1"] = RandomString (10' 20);  			dr ["C_STREET_2"] = RandomString (10' 20);  			dr ["C_CITY"] = RandomString (10' 20);  			dr ["C_STATE"] = RandomString (2' 2);  			dr ["C_ZIP"] = RandZip ();  			dr ["C_PHONE"] = RandomString (12' 12);  			dr ["C_SINCE"] = currdate.ToLongTimeString ();  			dr ["C_CREDIT"] = "GC";  			dr ["C_CREDIT_LIM"] = 5000;  			dr ["C_DISCOUNT"] = .5;  			dr ["C_BALANCE"] = -10.00;  			dr ["C_YTD_PAYMENT"] = 10.00;  			dr ["C_PAYMENT_CNT"] = 1;  			dr ["C_DELIVERY_CNT"] = 0;  			dr ["C_DATA"] = RandomString (300' 500);  			dr ["SEQ_ID"] = tid;  			dt.Rows.Add (dr);  		}  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: for (int id = 1; id < 11; id++) {  	for (int cid = 1; cid < 3001; cid++) {  		DataRow dr = dt.NewRow ();  		dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  		dr ["C_D_ID"] = "D_W" + i + "_" + id;  		dr ["C_W_ID"] = "W_" + i;  		dr ["C_FIRST"] = RandomString (5' 16);  		dr ["C_MIDDLE"] = "oe";  		dr ["C_LAST"] = RandomString (8' 16);  		dr ["C_STREET_1"] = RandomString (10' 20);  		dr ["C_STREET_2"] = RandomString (10' 20);  		dr ["C_CITY"] = RandomString (10' 20);  		dr ["C_STATE"] = RandomString (2' 2);  		dr ["C_ZIP"] = RandZip ();  		dr ["C_PHONE"] = RandomString (12' 12);  		dr ["C_SINCE"] = currdate.ToLongTimeString ();  		dr ["C_CREDIT"] = "GC";  		dr ["C_CREDIT_LIM"] = 5000;  		dr ["C_DISCOUNT"] = .5;  		dr ["C_BALANCE"] = -10.00;  		dr ["C_YTD_PAYMENT"] = 10.00;  		dr ["C_PAYMENT_CNT"] = 1;  		dr ["C_DELIVERY_CNT"] = 0;  		dr ["C_DATA"] = RandomString (300' 500);  		dr ["SEQ_ID"] = tid;  		dt.Rows.Add (dr);  	}  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: for (int id = 1; id < 11; id++) {  	for (int cid = 1; cid < 3001; cid++) {  		DataRow dr = dt.NewRow ();  		dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  		dr ["C_D_ID"] = "D_W" + i + "_" + id;  		dr ["C_W_ID"] = "W_" + i;  		dr ["C_FIRST"] = RandomString (5' 16);  		dr ["C_MIDDLE"] = "oe";  		dr ["C_LAST"] = RandomString (8' 16);  		dr ["C_STREET_1"] = RandomString (10' 20);  		dr ["C_STREET_2"] = RandomString (10' 20);  		dr ["C_CITY"] = RandomString (10' 20);  		dr ["C_STATE"] = RandomString (2' 2);  		dr ["C_ZIP"] = RandZip ();  		dr ["C_PHONE"] = RandomString (12' 12);  		dr ["C_SINCE"] = currdate.ToLongTimeString ();  		dr ["C_CREDIT"] = "GC";  		dr ["C_CREDIT_LIM"] = 5000;  		dr ["C_DISCOUNT"] = .5;  		dr ["C_BALANCE"] = -10.00;  		dr ["C_YTD_PAYMENT"] = 10.00;  		dr ["C_PAYMENT_CNT"] = 1;  		dr ["C_DELIVERY_CNT"] = 0;  		dr ["C_DATA"] = RandomString (300' 500);  		dr ["SEQ_ID"] = tid;  		dt.Rows.Add (dr);  	}  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: for (int id = 1; id < 11; id++) {  	for (int cid = 1; cid < 3001; cid++) {  		DataRow dr = dt.NewRow ();  		dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  		dr ["C_D_ID"] = "D_W" + i + "_" + id;  		dr ["C_W_ID"] = "W_" + i;  		dr ["C_FIRST"] = RandomString (5' 16);  		dr ["C_MIDDLE"] = "oe";  		dr ["C_LAST"] = RandomString (8' 16);  		dr ["C_STREET_1"] = RandomString (10' 20);  		dr ["C_STREET_2"] = RandomString (10' 20);  		dr ["C_CITY"] = RandomString (10' 20);  		dr ["C_STATE"] = RandomString (2' 2);  		dr ["C_ZIP"] = RandZip ();  		dr ["C_PHONE"] = RandomString (12' 12);  		dr ["C_SINCE"] = currdate.ToLongTimeString ();  		dr ["C_CREDIT"] = "GC";  		dr ["C_CREDIT_LIM"] = 5000;  		dr ["C_DISCOUNT"] = .5;  		dr ["C_BALANCE"] = -10.00;  		dr ["C_YTD_PAYMENT"] = 10.00;  		dr ["C_PAYMENT_CNT"] = 1;  		dr ["C_DELIVERY_CNT"] = 0;  		dr ["C_DATA"] = RandomString (300' 500);  		dr ["SEQ_ID"] = tid;  		dt.Rows.Add (dr);  	}  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: for (int id = 1; id < 11; id++) {  	for (int cid = 1; cid < 3001; cid++) {  		DataRow dr = dt.NewRow ();  		dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  		dr ["C_D_ID"] = "D_W" + i + "_" + id;  		dr ["C_W_ID"] = "W_" + i;  		dr ["C_FIRST"] = RandomString (5' 16);  		dr ["C_MIDDLE"] = "oe";  		dr ["C_LAST"] = RandomString (8' 16);  		dr ["C_STREET_1"] = RandomString (10' 20);  		dr ["C_STREET_2"] = RandomString (10' 20);  		dr ["C_CITY"] = RandomString (10' 20);  		dr ["C_STATE"] = RandomString (2' 2);  		dr ["C_ZIP"] = RandZip ();  		dr ["C_PHONE"] = RandomString (12' 12);  		dr ["C_SINCE"] = currdate.ToLongTimeString ();  		dr ["C_CREDIT"] = "GC";  		dr ["C_CREDIT_LIM"] = 5000;  		dr ["C_DISCOUNT"] = .5;  		dr ["C_BALANCE"] = -10.00;  		dr ["C_YTD_PAYMENT"] = 10.00;  		dr ["C_PAYMENT_CNT"] = 1;  		dr ["C_DELIVERY_CNT"] = 0;  		dr ["C_DATA"] = RandomString (300' 500);  		dr ["SEQ_ID"] = tid;  		dt.Rows.Add (dr);  	}  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: for (int id = 1; id < 11; id++) {  	for (int cid = 1; cid < 3001; cid++) {  		DataRow dr = dt.NewRow ();  		dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  		dr ["C_D_ID"] = "D_W" + i + "_" + id;  		dr ["C_W_ID"] = "W_" + i;  		dr ["C_FIRST"] = RandomString (5' 16);  		dr ["C_MIDDLE"] = "oe";  		dr ["C_LAST"] = RandomString (8' 16);  		dr ["C_STREET_1"] = RandomString (10' 20);  		dr ["C_STREET_2"] = RandomString (10' 20);  		dr ["C_CITY"] = RandomString (10' 20);  		dr ["C_STATE"] = RandomString (2' 2);  		dr ["C_ZIP"] = RandZip ();  		dr ["C_PHONE"] = RandomString (12' 12);  		dr ["C_SINCE"] = currdate.ToLongTimeString ();  		dr ["C_CREDIT"] = "GC";  		dr ["C_CREDIT_LIM"] = 5000;  		dr ["C_DISCOUNT"] = .5;  		dr ["C_BALANCE"] = -10.00;  		dr ["C_YTD_PAYMENT"] = 10.00;  		dr ["C_PAYMENT_CNT"] = 1;  		dr ["C_DELIVERY_CNT"] = 0;  		dr ["C_DATA"] = RandomString (300' 500);  		dr ["SEQ_ID"] = tid;  		dt.Rows.Add (dr);  	}  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: for (int id = 1; id < 11; id++) {  	for (int cid = 1; cid < 3001; cid++) {  		DataRow dr = dt.NewRow ();  		dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  		dr ["C_D_ID"] = "D_W" + i + "_" + id;  		dr ["C_W_ID"] = "W_" + i;  		dr ["C_FIRST"] = RandomString (5' 16);  		dr ["C_MIDDLE"] = "oe";  		dr ["C_LAST"] = RandomString (8' 16);  		dr ["C_STREET_1"] = RandomString (10' 20);  		dr ["C_STREET_2"] = RandomString (10' 20);  		dr ["C_CITY"] = RandomString (10' 20);  		dr ["C_STATE"] = RandomString (2' 2);  		dr ["C_ZIP"] = RandZip ();  		dr ["C_PHONE"] = RandomString (12' 12);  		dr ["C_SINCE"] = currdate.ToLongTimeString ();  		dr ["C_CREDIT"] = "GC";  		dr ["C_CREDIT_LIM"] = 5000;  		dr ["C_DISCOUNT"] = .5;  		dr ["C_BALANCE"] = -10.00;  		dr ["C_YTD_PAYMENT"] = 10.00;  		dr ["C_PAYMENT_CNT"] = 1;  		dr ["C_DELIVERY_CNT"] = 0;  		dr ["C_DATA"] = RandomString (300' 500);  		dr ["SEQ_ID"] = tid;  		dt.Rows.Add (dr);  	}  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: for (int id = 1; id < 11; id++) {  	for (int cid = 1; cid < 3001; cid++) {  		DataRow dr = dt.NewRow ();  		dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  		dr ["C_D_ID"] = "D_W" + i + "_" + id;  		dr ["C_W_ID"] = "W_" + i;  		dr ["C_FIRST"] = RandomString (5' 16);  		dr ["C_MIDDLE"] = "oe";  		dr ["C_LAST"] = RandomString (8' 16);  		dr ["C_STREET_1"] = RandomString (10' 20);  		dr ["C_STREET_2"] = RandomString (10' 20);  		dr ["C_CITY"] = RandomString (10' 20);  		dr ["C_STATE"] = RandomString (2' 2);  		dr ["C_ZIP"] = RandZip ();  		dr ["C_PHONE"] = RandomString (12' 12);  		dr ["C_SINCE"] = currdate.ToLongTimeString ();  		dr ["C_CREDIT"] = "GC";  		dr ["C_CREDIT_LIM"] = 5000;  		dr ["C_DISCOUNT"] = .5;  		dr ["C_BALANCE"] = -10.00;  		dr ["C_YTD_PAYMENT"] = 10.00;  		dr ["C_PAYMENT_CNT"] = 1;  		dr ["C_DELIVERY_CNT"] = 0;  		dr ["C_DATA"] = RandomString (300' 500);  		dr ["SEQ_ID"] = tid;  		dt.Rows.Add (dr);  	}  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: for (int id = 1; id < 11; id++) {  	for (int cid = 1; cid < 3001; cid++) {  		DataRow dr = dt.NewRow ();  		dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  		dr ["C_D_ID"] = "D_W" + i + "_" + id;  		dr ["C_W_ID"] = "W_" + i;  		dr ["C_FIRST"] = RandomString (5' 16);  		dr ["C_MIDDLE"] = "oe";  		dr ["C_LAST"] = RandomString (8' 16);  		dr ["C_STREET_1"] = RandomString (10' 20);  		dr ["C_STREET_2"] = RandomString (10' 20);  		dr ["C_CITY"] = RandomString (10' 20);  		dr ["C_STATE"] = RandomString (2' 2);  		dr ["C_ZIP"] = RandZip ();  		dr ["C_PHONE"] = RandomString (12' 12);  		dr ["C_SINCE"] = currdate.ToLongTimeString ();  		dr ["C_CREDIT"] = "GC";  		dr ["C_CREDIT_LIM"] = 5000;  		dr ["C_DISCOUNT"] = .5;  		dr ["C_BALANCE"] = -10.00;  		dr ["C_YTD_PAYMENT"] = 10.00;  		dr ["C_PAYMENT_CNT"] = 1;  		dr ["C_DELIVERY_CNT"] = 0;  		dr ["C_DATA"] = RandomString (300' 500);  		dr ["SEQ_ID"] = tid;  		dt.Rows.Add (dr);  	}  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: for (int id = 1; id < 11; id++) {  	for (int cid = 1; cid < 3001; cid++) {  		DataRow dr = dt.NewRow ();  		dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  		dr ["C_D_ID"] = "D_W" + i + "_" + id;  		dr ["C_W_ID"] = "W_" + i;  		dr ["C_FIRST"] = RandomString (5' 16);  		dr ["C_MIDDLE"] = "oe";  		dr ["C_LAST"] = RandomString (8' 16);  		dr ["C_STREET_1"] = RandomString (10' 20);  		dr ["C_STREET_2"] = RandomString (10' 20);  		dr ["C_CITY"] = RandomString (10' 20);  		dr ["C_STATE"] = RandomString (2' 2);  		dr ["C_ZIP"] = RandZip ();  		dr ["C_PHONE"] = RandomString (12' 12);  		dr ["C_SINCE"] = currdate.ToLongTimeString ();  		dr ["C_CREDIT"] = "GC";  		dr ["C_CREDIT_LIM"] = 5000;  		dr ["C_DISCOUNT"] = .5;  		dr ["C_BALANCE"] = -10.00;  		dr ["C_YTD_PAYMENT"] = 10.00;  		dr ["C_PAYMENT_CNT"] = 1;  		dr ["C_DELIVERY_CNT"] = 0;  		dr ["C_DATA"] = RandomString (300' 500);  		dr ["SEQ_ID"] = tid;  		dt.Rows.Add (dr);  	}  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: for (int id = 1; id < 11; id++) {  	for (int cid = 1; cid < 3001; cid++) {  		DataRow dr = dt.NewRow ();  		dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  		dr ["C_D_ID"] = "D_W" + i + "_" + id;  		dr ["C_W_ID"] = "W_" + i;  		dr ["C_FIRST"] = RandomString (5' 16);  		dr ["C_MIDDLE"] = "oe";  		dr ["C_LAST"] = RandomString (8' 16);  		dr ["C_STREET_1"] = RandomString (10' 20);  		dr ["C_STREET_2"] = RandomString (10' 20);  		dr ["C_CITY"] = RandomString (10' 20);  		dr ["C_STATE"] = RandomString (2' 2);  		dr ["C_ZIP"] = RandZip ();  		dr ["C_PHONE"] = RandomString (12' 12);  		dr ["C_SINCE"] = currdate.ToLongTimeString ();  		dr ["C_CREDIT"] = "GC";  		dr ["C_CREDIT_LIM"] = 5000;  		dr ["C_DISCOUNT"] = .5;  		dr ["C_BALANCE"] = -10.00;  		dr ["C_YTD_PAYMENT"] = 10.00;  		dr ["C_PAYMENT_CNT"] = 1;  		dr ["C_DELIVERY_CNT"] = 0;  		dr ["C_DATA"] = RandomString (300' 500);  		dr ["SEQ_ID"] = tid;  		dt.Rows.Add (dr);  	}  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: for (int id = 1; id < 11; id++) {  	for (int cid = 1; cid < 3001; cid++) {  		DataRow dr = dt.NewRow ();  		dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  		dr ["C_D_ID"] = "D_W" + i + "_" + id;  		dr ["C_W_ID"] = "W_" + i;  		dr ["C_FIRST"] = RandomString (5' 16);  		dr ["C_MIDDLE"] = "oe";  		dr ["C_LAST"] = RandomString (8' 16);  		dr ["C_STREET_1"] = RandomString (10' 20);  		dr ["C_STREET_2"] = RandomString (10' 20);  		dr ["C_CITY"] = RandomString (10' 20);  		dr ["C_STATE"] = RandomString (2' 2);  		dr ["C_ZIP"] = RandZip ();  		dr ["C_PHONE"] = RandomString (12' 12);  		dr ["C_SINCE"] = currdate.ToLongTimeString ();  		dr ["C_CREDIT"] = "GC";  		dr ["C_CREDIT_LIM"] = 5000;  		dr ["C_DISCOUNT"] = .5;  		dr ["C_BALANCE"] = -10.00;  		dr ["C_YTD_PAYMENT"] = 10.00;  		dr ["C_PAYMENT_CNT"] = 1;  		dr ["C_DELIVERY_CNT"] = 0;  		dr ["C_DATA"] = RandomString (300' 500);  		dr ["SEQ_ID"] = tid;  		dt.Rows.Add (dr);  	}  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: for (int id = 1; id < 11; id++) {  	for (int cid = 1; cid < 3001; cid++) {  		DataRow dr = dt.NewRow ();  		dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  		dr ["C_D_ID"] = "D_W" + i + "_" + id;  		dr ["C_W_ID"] = "W_" + i;  		dr ["C_FIRST"] = RandomString (5' 16);  		dr ["C_MIDDLE"] = "oe";  		dr ["C_LAST"] = RandomString (8' 16);  		dr ["C_STREET_1"] = RandomString (10' 20);  		dr ["C_STREET_2"] = RandomString (10' 20);  		dr ["C_CITY"] = RandomString (10' 20);  		dr ["C_STATE"] = RandomString (2' 2);  		dr ["C_ZIP"] = RandZip ();  		dr ["C_PHONE"] = RandomString (12' 12);  		dr ["C_SINCE"] = currdate.ToLongTimeString ();  		dr ["C_CREDIT"] = "GC";  		dr ["C_CREDIT_LIM"] = 5000;  		dr ["C_DISCOUNT"] = .5;  		dr ["C_BALANCE"] = -10.00;  		dr ["C_YTD_PAYMENT"] = 10.00;  		dr ["C_PAYMENT_CNT"] = 1;  		dr ["C_DELIVERY_CNT"] = 0;  		dr ["C_DATA"] = RandomString (300' 500);  		dr ["SEQ_ID"] = tid;  		dt.Rows.Add (dr);  	}  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: for (int id = 1; id < 11; id++) {  	for (int cid = 1; cid < 3001; cid++) {  		DataRow dr = dt.NewRow ();  		dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  		dr ["C_D_ID"] = "D_W" + i + "_" + id;  		dr ["C_W_ID"] = "W_" + i;  		dr ["C_FIRST"] = RandomString (5' 16);  		dr ["C_MIDDLE"] = "oe";  		dr ["C_LAST"] = RandomString (8' 16);  		dr ["C_STREET_1"] = RandomString (10' 20);  		dr ["C_STREET_2"] = RandomString (10' 20);  		dr ["C_CITY"] = RandomString (10' 20);  		dr ["C_STATE"] = RandomString (2' 2);  		dr ["C_ZIP"] = RandZip ();  		dr ["C_PHONE"] = RandomString (12' 12);  		dr ["C_SINCE"] = currdate.ToLongTimeString ();  		dr ["C_CREDIT"] = "GC";  		dr ["C_CREDIT_LIM"] = 5000;  		dr ["C_DISCOUNT"] = .5;  		dr ["C_BALANCE"] = -10.00;  		dr ["C_YTD_PAYMENT"] = 10.00;  		dr ["C_PAYMENT_CNT"] = 1;  		dr ["C_DELIVERY_CNT"] = 0;  		dr ["C_DATA"] = RandomString (300' 500);  		dr ["SEQ_ID"] = tid;  		dt.Rows.Add (dr);  	}  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: for (int id = 1; id < 11; id++) {  	for (int cid = 1; cid < 3001; cid++) {  		DataRow dr = dt.NewRow ();  		dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  		dr ["C_D_ID"] = "D_W" + i + "_" + id;  		dr ["C_W_ID"] = "W_" + i;  		dr ["C_FIRST"] = RandomString (5' 16);  		dr ["C_MIDDLE"] = "oe";  		dr ["C_LAST"] = RandomString (8' 16);  		dr ["C_STREET_1"] = RandomString (10' 20);  		dr ["C_STREET_2"] = RandomString (10' 20);  		dr ["C_CITY"] = RandomString (10' 20);  		dr ["C_STATE"] = RandomString (2' 2);  		dr ["C_ZIP"] = RandZip ();  		dr ["C_PHONE"] = RandomString (12' 12);  		dr ["C_SINCE"] = currdate.ToLongTimeString ();  		dr ["C_CREDIT"] = "GC";  		dr ["C_CREDIT_LIM"] = 5000;  		dr ["C_DISCOUNT"] = .5;  		dr ["C_BALANCE"] = -10.00;  		dr ["C_YTD_PAYMENT"] = 10.00;  		dr ["C_PAYMENT_CNT"] = 1;  		dr ["C_DELIVERY_CNT"] = 0;  		dr ["C_DATA"] = RandomString (300' 500);  		dr ["SEQ_ID"] = tid;  		dt.Rows.Add (dr);  	}  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: for (int id = 1; id < 11; id++) {  	for (int cid = 1; cid < 3001; cid++) {  		DataRow dr = dt.NewRow ();  		dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  		dr ["C_D_ID"] = "D_W" + i + "_" + id;  		dr ["C_W_ID"] = "W_" + i;  		dr ["C_FIRST"] = RandomString (5' 16);  		dr ["C_MIDDLE"] = "oe";  		dr ["C_LAST"] = RandomString (8' 16);  		dr ["C_STREET_1"] = RandomString (10' 20);  		dr ["C_STREET_2"] = RandomString (10' 20);  		dr ["C_CITY"] = RandomString (10' 20);  		dr ["C_STATE"] = RandomString (2' 2);  		dr ["C_ZIP"] = RandZip ();  		dr ["C_PHONE"] = RandomString (12' 12);  		dr ["C_SINCE"] = currdate.ToLongTimeString ();  		dr ["C_CREDIT"] = "GC";  		dr ["C_CREDIT_LIM"] = 5000;  		dr ["C_DISCOUNT"] = .5;  		dr ["C_BALANCE"] = -10.00;  		dr ["C_YTD_PAYMENT"] = 10.00;  		dr ["C_PAYMENT_CNT"] = 1;  		dr ["C_DELIVERY_CNT"] = 0;  		dr ["C_DATA"] = RandomString (300' 500);  		dr ["SEQ_ID"] = tid;  		dt.Rows.Add (dr);  	}  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: for (int id = 1; id < 11; id++) {  	for (int cid = 1; cid < 3001; cid++) {  		DataRow dr = dt.NewRow ();  		dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  		dr ["C_D_ID"] = "D_W" + i + "_" + id;  		dr ["C_W_ID"] = "W_" + i;  		dr ["C_FIRST"] = RandomString (5' 16);  		dr ["C_MIDDLE"] = "oe";  		dr ["C_LAST"] = RandomString (8' 16);  		dr ["C_STREET_1"] = RandomString (10' 20);  		dr ["C_STREET_2"] = RandomString (10' 20);  		dr ["C_CITY"] = RandomString (10' 20);  		dr ["C_STATE"] = RandomString (2' 2);  		dr ["C_ZIP"] = RandZip ();  		dr ["C_PHONE"] = RandomString (12' 12);  		dr ["C_SINCE"] = currdate.ToLongTimeString ();  		dr ["C_CREDIT"] = "GC";  		dr ["C_CREDIT_LIM"] = 5000;  		dr ["C_DISCOUNT"] = .5;  		dr ["C_BALANCE"] = -10.00;  		dr ["C_YTD_PAYMENT"] = 10.00;  		dr ["C_PAYMENT_CNT"] = 1;  		dr ["C_DELIVERY_CNT"] = 0;  		dr ["C_DATA"] = RandomString (300' 500);  		dr ["SEQ_ID"] = tid;  		dt.Rows.Add (dr);  	}  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: for (int id = 1; id < 11; id++) {  	for (int cid = 1; cid < 3001; cid++) {  		DataRow dr = dt.NewRow ();  		dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  		dr ["C_D_ID"] = "D_W" + i + "_" + id;  		dr ["C_W_ID"] = "W_" + i;  		dr ["C_FIRST"] = RandomString (5' 16);  		dr ["C_MIDDLE"] = "oe";  		dr ["C_LAST"] = RandomString (8' 16);  		dr ["C_STREET_1"] = RandomString (10' 20);  		dr ["C_STREET_2"] = RandomString (10' 20);  		dr ["C_CITY"] = RandomString (10' 20);  		dr ["C_STATE"] = RandomString (2' 2);  		dr ["C_ZIP"] = RandZip ();  		dr ["C_PHONE"] = RandomString (12' 12);  		dr ["C_SINCE"] = currdate.ToLongTimeString ();  		dr ["C_CREDIT"] = "GC";  		dr ["C_CREDIT_LIM"] = 5000;  		dr ["C_DISCOUNT"] = .5;  		dr ["C_BALANCE"] = -10.00;  		dr ["C_YTD_PAYMENT"] = 10.00;  		dr ["C_PAYMENT_CNT"] = 1;  		dr ["C_DELIVERY_CNT"] = 0;  		dr ["C_DATA"] = RandomString (300' 500);  		dr ["SEQ_ID"] = tid;  		dt.Rows.Add (dr);  	}  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: for (int id = 1; id < 11; id++) {  	for (int cid = 1; cid < 3001; cid++) {  		DataRow dr = dt.NewRow ();  		dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  		dr ["C_D_ID"] = "D_W" + i + "_" + id;  		dr ["C_W_ID"] = "W_" + i;  		dr ["C_FIRST"] = RandomString (5' 16);  		dr ["C_MIDDLE"] = "oe";  		dr ["C_LAST"] = RandomString (8' 16);  		dr ["C_STREET_1"] = RandomString (10' 20);  		dr ["C_STREET_2"] = RandomString (10' 20);  		dr ["C_CITY"] = RandomString (10' 20);  		dr ["C_STATE"] = RandomString (2' 2);  		dr ["C_ZIP"] = RandZip ();  		dr ["C_PHONE"] = RandomString (12' 12);  		dr ["C_SINCE"] = currdate.ToLongTimeString ();  		dr ["C_CREDIT"] = "GC";  		dr ["C_CREDIT_LIM"] = 5000;  		dr ["C_DISCOUNT"] = .5;  		dr ["C_BALANCE"] = -10.00;  		dr ["C_YTD_PAYMENT"] = 10.00;  		dr ["C_PAYMENT_CNT"] = 1;  		dr ["C_DELIVERY_CNT"] = 0;  		dr ["C_DATA"] = RandomString (300' 500);  		dr ["SEQ_ID"] = tid;  		dt.Rows.Add (dr);  	}  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: for (int id = 1; id < 11; id++) {  	for (int cid = 1; cid < 3001; cid++) {  		DataRow dr = dt.NewRow ();  		dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  		dr ["C_D_ID"] = "D_W" + i + "_" + id;  		dr ["C_W_ID"] = "W_" + i;  		dr ["C_FIRST"] = RandomString (5' 16);  		dr ["C_MIDDLE"] = "oe";  		dr ["C_LAST"] = RandomString (8' 16);  		dr ["C_STREET_1"] = RandomString (10' 20);  		dr ["C_STREET_2"] = RandomString (10' 20);  		dr ["C_CITY"] = RandomString (10' 20);  		dr ["C_STATE"] = RandomString (2' 2);  		dr ["C_ZIP"] = RandZip ();  		dr ["C_PHONE"] = RandomString (12' 12);  		dr ["C_SINCE"] = currdate.ToLongTimeString ();  		dr ["C_CREDIT"] = "GC";  		dr ["C_CREDIT_LIM"] = 5000;  		dr ["C_DISCOUNT"] = .5;  		dr ["C_BALANCE"] = -10.00;  		dr ["C_YTD_PAYMENT"] = 10.00;  		dr ["C_PAYMENT_CNT"] = 1;  		dr ["C_DELIVERY_CNT"] = 0;  		dr ["C_DATA"] = RandomString (300' 500);  		dr ["SEQ_ID"] = tid;  		dt.Rows.Add (dr);  	}  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: for (int id = 1; id < 11; id++) {  	for (int cid = 1; cid < 3001; cid++) {  		DataRow dr = dt.NewRow ();  		dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  		dr ["C_D_ID"] = "D_W" + i + "_" + id;  		dr ["C_W_ID"] = "W_" + i;  		dr ["C_FIRST"] = RandomString (5' 16);  		dr ["C_MIDDLE"] = "oe";  		dr ["C_LAST"] = RandomString (8' 16);  		dr ["C_STREET_1"] = RandomString (10' 20);  		dr ["C_STREET_2"] = RandomString (10' 20);  		dr ["C_CITY"] = RandomString (10' 20);  		dr ["C_STATE"] = RandomString (2' 2);  		dr ["C_ZIP"] = RandZip ();  		dr ["C_PHONE"] = RandomString (12' 12);  		dr ["C_SINCE"] = currdate.ToLongTimeString ();  		dr ["C_CREDIT"] = "GC";  		dr ["C_CREDIT_LIM"] = 5000;  		dr ["C_DISCOUNT"] = .5;  		dr ["C_BALANCE"] = -10.00;  		dr ["C_YTD_PAYMENT"] = 10.00;  		dr ["C_PAYMENT_CNT"] = 1;  		dr ["C_DELIVERY_CNT"] = 0;  		dr ["C_DATA"] = RandomString (300' 500);  		dr ["SEQ_ID"] = tid;  		dt.Rows.Add (dr);  	}  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: for (int id = 1; id < 11; id++) {  	for (int cid = 1; cid < 3001; cid++) {  		DataRow dr = dt.NewRow ();  		dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  		dr ["C_D_ID"] = "D_W" + i + "_" + id;  		dr ["C_W_ID"] = "W_" + i;  		dr ["C_FIRST"] = RandomString (5' 16);  		dr ["C_MIDDLE"] = "oe";  		dr ["C_LAST"] = RandomString (8' 16);  		dr ["C_STREET_1"] = RandomString (10' 20);  		dr ["C_STREET_2"] = RandomString (10' 20);  		dr ["C_CITY"] = RandomString (10' 20);  		dr ["C_STATE"] = RandomString (2' 2);  		dr ["C_ZIP"] = RandZip ();  		dr ["C_PHONE"] = RandomString (12' 12);  		dr ["C_SINCE"] = currdate.ToLongTimeString ();  		dr ["C_CREDIT"] = "GC";  		dr ["C_CREDIT_LIM"] = 5000;  		dr ["C_DISCOUNT"] = .5;  		dr ["C_BALANCE"] = -10.00;  		dr ["C_YTD_PAYMENT"] = 10.00;  		dr ["C_PAYMENT_CNT"] = 1;  		dr ["C_DELIVERY_CNT"] = 0;  		dr ["C_DATA"] = RandomString (300' 500);  		dr ["SEQ_ID"] = tid;  		dt.Rows.Add (dr);  	}  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: for (int id = 1; id < 11; id++) {  	for (int cid = 1; cid < 3001; cid++) {  		DataRow dr = dt.NewRow ();  		dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  		dr ["C_D_ID"] = "D_W" + i + "_" + id;  		dr ["C_W_ID"] = "W_" + i;  		dr ["C_FIRST"] = RandomString (5' 16);  		dr ["C_MIDDLE"] = "oe";  		dr ["C_LAST"] = RandomString (8' 16);  		dr ["C_STREET_1"] = RandomString (10' 20);  		dr ["C_STREET_2"] = RandomString (10' 20);  		dr ["C_CITY"] = RandomString (10' 20);  		dr ["C_STATE"] = RandomString (2' 2);  		dr ["C_ZIP"] = RandZip ();  		dr ["C_PHONE"] = RandomString (12' 12);  		dr ["C_SINCE"] = currdate.ToLongTimeString ();  		dr ["C_CREDIT"] = "GC";  		dr ["C_CREDIT_LIM"] = 5000;  		dr ["C_DISCOUNT"] = .5;  		dr ["C_BALANCE"] = -10.00;  		dr ["C_YTD_PAYMENT"] = 10.00;  		dr ["C_PAYMENT_CNT"] = 1;  		dr ["C_DELIVERY_CNT"] = 0;  		dr ["C_DATA"] = RandomString (300' 500);  		dr ["SEQ_ID"] = tid;  		dt.Rows.Add (dr);  	}  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: for (int cid = 1; cid < 3001; cid++) {  	DataRow dr = dt.NewRow ();  	dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  	dr ["C_D_ID"] = "D_W" + i + "_" + id;  	dr ["C_W_ID"] = "W_" + i;  	dr ["C_FIRST"] = RandomString (5' 16);  	dr ["C_MIDDLE"] = "oe";  	dr ["C_LAST"] = RandomString (8' 16);  	dr ["C_STREET_1"] = RandomString (10' 20);  	dr ["C_STREET_2"] = RandomString (10' 20);  	dr ["C_CITY"] = RandomString (10' 20);  	dr ["C_STATE"] = RandomString (2' 2);  	dr ["C_ZIP"] = RandZip ();  	dr ["C_PHONE"] = RandomString (12' 12);  	dr ["C_SINCE"] = currdate.ToLongTimeString ();  	dr ["C_CREDIT"] = "GC";  	dr ["C_CREDIT_LIM"] = 5000;  	dr ["C_DISCOUNT"] = .5;  	dr ["C_BALANCE"] = -10.00;  	dr ["C_YTD_PAYMENT"] = 10.00;  	dr ["C_PAYMENT_CNT"] = 1;  	dr ["C_DELIVERY_CNT"] = 0;  	dr ["C_DATA"] = RandomString (300' 500);  	dr ["SEQ_ID"] = tid;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: for (int cid = 1; cid < 3001; cid++) {  	DataRow dr = dt.NewRow ();  	dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  	dr ["C_D_ID"] = "D_W" + i + "_" + id;  	dr ["C_W_ID"] = "W_" + i;  	dr ["C_FIRST"] = RandomString (5' 16);  	dr ["C_MIDDLE"] = "oe";  	dr ["C_LAST"] = RandomString (8' 16);  	dr ["C_STREET_1"] = RandomString (10' 20);  	dr ["C_STREET_2"] = RandomString (10' 20);  	dr ["C_CITY"] = RandomString (10' 20);  	dr ["C_STATE"] = RandomString (2' 2);  	dr ["C_ZIP"] = RandZip ();  	dr ["C_PHONE"] = RandomString (12' 12);  	dr ["C_SINCE"] = currdate.ToLongTimeString ();  	dr ["C_CREDIT"] = "GC";  	dr ["C_CREDIT_LIM"] = 5000;  	dr ["C_DISCOUNT"] = .5;  	dr ["C_BALANCE"] = -10.00;  	dr ["C_YTD_PAYMENT"] = 10.00;  	dr ["C_PAYMENT_CNT"] = 1;  	dr ["C_DELIVERY_CNT"] = 0;  	dr ["C_DATA"] = RandomString (300' 500);  	dr ["SEQ_ID"] = tid;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: for (int cid = 1; cid < 3001; cid++) {  	DataRow dr = dt.NewRow ();  	dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  	dr ["C_D_ID"] = "D_W" + i + "_" + id;  	dr ["C_W_ID"] = "W_" + i;  	dr ["C_FIRST"] = RandomString (5' 16);  	dr ["C_MIDDLE"] = "oe";  	dr ["C_LAST"] = RandomString (8' 16);  	dr ["C_STREET_1"] = RandomString (10' 20);  	dr ["C_STREET_2"] = RandomString (10' 20);  	dr ["C_CITY"] = RandomString (10' 20);  	dr ["C_STATE"] = RandomString (2' 2);  	dr ["C_ZIP"] = RandZip ();  	dr ["C_PHONE"] = RandomString (12' 12);  	dr ["C_SINCE"] = currdate.ToLongTimeString ();  	dr ["C_CREDIT"] = "GC";  	dr ["C_CREDIT_LIM"] = 5000;  	dr ["C_DISCOUNT"] = .5;  	dr ["C_BALANCE"] = -10.00;  	dr ["C_YTD_PAYMENT"] = 10.00;  	dr ["C_PAYMENT_CNT"] = 1;  	dr ["C_DELIVERY_CNT"] = 0;  	dr ["C_DATA"] = RandomString (300' 500);  	dr ["SEQ_ID"] = tid;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: for (int cid = 1; cid < 3001; cid++) {  	DataRow dr = dt.NewRow ();  	dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  	dr ["C_D_ID"] = "D_W" + i + "_" + id;  	dr ["C_W_ID"] = "W_" + i;  	dr ["C_FIRST"] = RandomString (5' 16);  	dr ["C_MIDDLE"] = "oe";  	dr ["C_LAST"] = RandomString (8' 16);  	dr ["C_STREET_1"] = RandomString (10' 20);  	dr ["C_STREET_2"] = RandomString (10' 20);  	dr ["C_CITY"] = RandomString (10' 20);  	dr ["C_STATE"] = RandomString (2' 2);  	dr ["C_ZIP"] = RandZip ();  	dr ["C_PHONE"] = RandomString (12' 12);  	dr ["C_SINCE"] = currdate.ToLongTimeString ();  	dr ["C_CREDIT"] = "GC";  	dr ["C_CREDIT_LIM"] = 5000;  	dr ["C_DISCOUNT"] = .5;  	dr ["C_BALANCE"] = -10.00;  	dr ["C_YTD_PAYMENT"] = 10.00;  	dr ["C_PAYMENT_CNT"] = 1;  	dr ["C_DELIVERY_CNT"] = 0;  	dr ["C_DATA"] = RandomString (300' 500);  	dr ["SEQ_ID"] = tid;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: for (int cid = 1; cid < 3001; cid++) {  	DataRow dr = dt.NewRow ();  	dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  	dr ["C_D_ID"] = "D_W" + i + "_" + id;  	dr ["C_W_ID"] = "W_" + i;  	dr ["C_FIRST"] = RandomString (5' 16);  	dr ["C_MIDDLE"] = "oe";  	dr ["C_LAST"] = RandomString (8' 16);  	dr ["C_STREET_1"] = RandomString (10' 20);  	dr ["C_STREET_2"] = RandomString (10' 20);  	dr ["C_CITY"] = RandomString (10' 20);  	dr ["C_STATE"] = RandomString (2' 2);  	dr ["C_ZIP"] = RandZip ();  	dr ["C_PHONE"] = RandomString (12' 12);  	dr ["C_SINCE"] = currdate.ToLongTimeString ();  	dr ["C_CREDIT"] = "GC";  	dr ["C_CREDIT_LIM"] = 5000;  	dr ["C_DISCOUNT"] = .5;  	dr ["C_BALANCE"] = -10.00;  	dr ["C_YTD_PAYMENT"] = 10.00;  	dr ["C_PAYMENT_CNT"] = 1;  	dr ["C_DELIVERY_CNT"] = 0;  	dr ["C_DATA"] = RandomString (300' 500);  	dr ["SEQ_ID"] = tid;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: for (int cid = 1; cid < 3001; cid++) {  	DataRow dr = dt.NewRow ();  	dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  	dr ["C_D_ID"] = "D_W" + i + "_" + id;  	dr ["C_W_ID"] = "W_" + i;  	dr ["C_FIRST"] = RandomString (5' 16);  	dr ["C_MIDDLE"] = "oe";  	dr ["C_LAST"] = RandomString (8' 16);  	dr ["C_STREET_1"] = RandomString (10' 20);  	dr ["C_STREET_2"] = RandomString (10' 20);  	dr ["C_CITY"] = RandomString (10' 20);  	dr ["C_STATE"] = RandomString (2' 2);  	dr ["C_ZIP"] = RandZip ();  	dr ["C_PHONE"] = RandomString (12' 12);  	dr ["C_SINCE"] = currdate.ToLongTimeString ();  	dr ["C_CREDIT"] = "GC";  	dr ["C_CREDIT_LIM"] = 5000;  	dr ["C_DISCOUNT"] = .5;  	dr ["C_BALANCE"] = -10.00;  	dr ["C_YTD_PAYMENT"] = 10.00;  	dr ["C_PAYMENT_CNT"] = 1;  	dr ["C_DELIVERY_CNT"] = 0;  	dr ["C_DATA"] = RandomString (300' 500);  	dr ["SEQ_ID"] = tid;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: for (int cid = 1; cid < 3001; cid++) {  	DataRow dr = dt.NewRow ();  	dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  	dr ["C_D_ID"] = "D_W" + i + "_" + id;  	dr ["C_W_ID"] = "W_" + i;  	dr ["C_FIRST"] = RandomString (5' 16);  	dr ["C_MIDDLE"] = "oe";  	dr ["C_LAST"] = RandomString (8' 16);  	dr ["C_STREET_1"] = RandomString (10' 20);  	dr ["C_STREET_2"] = RandomString (10' 20);  	dr ["C_CITY"] = RandomString (10' 20);  	dr ["C_STATE"] = RandomString (2' 2);  	dr ["C_ZIP"] = RandZip ();  	dr ["C_PHONE"] = RandomString (12' 12);  	dr ["C_SINCE"] = currdate.ToLongTimeString ();  	dr ["C_CREDIT"] = "GC";  	dr ["C_CREDIT_LIM"] = 5000;  	dr ["C_DISCOUNT"] = .5;  	dr ["C_BALANCE"] = -10.00;  	dr ["C_YTD_PAYMENT"] = 10.00;  	dr ["C_PAYMENT_CNT"] = 1;  	dr ["C_DELIVERY_CNT"] = 0;  	dr ["C_DATA"] = RandomString (300' 500);  	dr ["SEQ_ID"] = tid;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: for (int cid = 1; cid < 3001; cid++) {  	DataRow dr = dt.NewRow ();  	dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  	dr ["C_D_ID"] = "D_W" + i + "_" + id;  	dr ["C_W_ID"] = "W_" + i;  	dr ["C_FIRST"] = RandomString (5' 16);  	dr ["C_MIDDLE"] = "oe";  	dr ["C_LAST"] = RandomString (8' 16);  	dr ["C_STREET_1"] = RandomString (10' 20);  	dr ["C_STREET_2"] = RandomString (10' 20);  	dr ["C_CITY"] = RandomString (10' 20);  	dr ["C_STATE"] = RandomString (2' 2);  	dr ["C_ZIP"] = RandZip ();  	dr ["C_PHONE"] = RandomString (12' 12);  	dr ["C_SINCE"] = currdate.ToLongTimeString ();  	dr ["C_CREDIT"] = "GC";  	dr ["C_CREDIT_LIM"] = 5000;  	dr ["C_DISCOUNT"] = .5;  	dr ["C_BALANCE"] = -10.00;  	dr ["C_YTD_PAYMENT"] = 10.00;  	dr ["C_PAYMENT_CNT"] = 1;  	dr ["C_DELIVERY_CNT"] = 0;  	dr ["C_DATA"] = RandomString (300' 500);  	dr ["SEQ_ID"] = tid;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: for (int cid = 1; cid < 3001; cid++) {  	DataRow dr = dt.NewRow ();  	dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  	dr ["C_D_ID"] = "D_W" + i + "_" + id;  	dr ["C_W_ID"] = "W_" + i;  	dr ["C_FIRST"] = RandomString (5' 16);  	dr ["C_MIDDLE"] = "oe";  	dr ["C_LAST"] = RandomString (8' 16);  	dr ["C_STREET_1"] = RandomString (10' 20);  	dr ["C_STREET_2"] = RandomString (10' 20);  	dr ["C_CITY"] = RandomString (10' 20);  	dr ["C_STATE"] = RandomString (2' 2);  	dr ["C_ZIP"] = RandZip ();  	dr ["C_PHONE"] = RandomString (12' 12);  	dr ["C_SINCE"] = currdate.ToLongTimeString ();  	dr ["C_CREDIT"] = "GC";  	dr ["C_CREDIT_LIM"] = 5000;  	dr ["C_DISCOUNT"] = .5;  	dr ["C_BALANCE"] = -10.00;  	dr ["C_YTD_PAYMENT"] = 10.00;  	dr ["C_PAYMENT_CNT"] = 1;  	dr ["C_DELIVERY_CNT"] = 0;  	dr ["C_DATA"] = RandomString (300' 500);  	dr ["SEQ_ID"] = tid;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: for (int cid = 1; cid < 3001; cid++) {  	DataRow dr = dt.NewRow ();  	dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  	dr ["C_D_ID"] = "D_W" + i + "_" + id;  	dr ["C_W_ID"] = "W_" + i;  	dr ["C_FIRST"] = RandomString (5' 16);  	dr ["C_MIDDLE"] = "oe";  	dr ["C_LAST"] = RandomString (8' 16);  	dr ["C_STREET_1"] = RandomString (10' 20);  	dr ["C_STREET_2"] = RandomString (10' 20);  	dr ["C_CITY"] = RandomString (10' 20);  	dr ["C_STATE"] = RandomString (2' 2);  	dr ["C_ZIP"] = RandZip ();  	dr ["C_PHONE"] = RandomString (12' 12);  	dr ["C_SINCE"] = currdate.ToLongTimeString ();  	dr ["C_CREDIT"] = "GC";  	dr ["C_CREDIT_LIM"] = 5000;  	dr ["C_DISCOUNT"] = .5;  	dr ["C_BALANCE"] = -10.00;  	dr ["C_YTD_PAYMENT"] = 10.00;  	dr ["C_PAYMENT_CNT"] = 1;  	dr ["C_DELIVERY_CNT"] = 0;  	dr ["C_DATA"] = RandomString (300' 500);  	dr ["SEQ_ID"] = tid;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: for (int cid = 1; cid < 3001; cid++) {  	DataRow dr = dt.NewRow ();  	dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  	dr ["C_D_ID"] = "D_W" + i + "_" + id;  	dr ["C_W_ID"] = "W_" + i;  	dr ["C_FIRST"] = RandomString (5' 16);  	dr ["C_MIDDLE"] = "oe";  	dr ["C_LAST"] = RandomString (8' 16);  	dr ["C_STREET_1"] = RandomString (10' 20);  	dr ["C_STREET_2"] = RandomString (10' 20);  	dr ["C_CITY"] = RandomString (10' 20);  	dr ["C_STATE"] = RandomString (2' 2);  	dr ["C_ZIP"] = RandZip ();  	dr ["C_PHONE"] = RandomString (12' 12);  	dr ["C_SINCE"] = currdate.ToLongTimeString ();  	dr ["C_CREDIT"] = "GC";  	dr ["C_CREDIT_LIM"] = 5000;  	dr ["C_DISCOUNT"] = .5;  	dr ["C_BALANCE"] = -10.00;  	dr ["C_YTD_PAYMENT"] = 10.00;  	dr ["C_PAYMENT_CNT"] = 1;  	dr ["C_DELIVERY_CNT"] = 0;  	dr ["C_DATA"] = RandomString (300' 500);  	dr ["SEQ_ID"] = tid;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: for (int cid = 1; cid < 3001; cid++) {  	DataRow dr = dt.NewRow ();  	dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  	dr ["C_D_ID"] = "D_W" + i + "_" + id;  	dr ["C_W_ID"] = "W_" + i;  	dr ["C_FIRST"] = RandomString (5' 16);  	dr ["C_MIDDLE"] = "oe";  	dr ["C_LAST"] = RandomString (8' 16);  	dr ["C_STREET_1"] = RandomString (10' 20);  	dr ["C_STREET_2"] = RandomString (10' 20);  	dr ["C_CITY"] = RandomString (10' 20);  	dr ["C_STATE"] = RandomString (2' 2);  	dr ["C_ZIP"] = RandZip ();  	dr ["C_PHONE"] = RandomString (12' 12);  	dr ["C_SINCE"] = currdate.ToLongTimeString ();  	dr ["C_CREDIT"] = "GC";  	dr ["C_CREDIT_LIM"] = 5000;  	dr ["C_DISCOUNT"] = .5;  	dr ["C_BALANCE"] = -10.00;  	dr ["C_YTD_PAYMENT"] = 10.00;  	dr ["C_PAYMENT_CNT"] = 1;  	dr ["C_DELIVERY_CNT"] = 0;  	dr ["C_DATA"] = RandomString (300' 500);  	dr ["SEQ_ID"] = tid;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: for (int cid = 1; cid < 3001; cid++) {  	DataRow dr = dt.NewRow ();  	dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  	dr ["C_D_ID"] = "D_W" + i + "_" + id;  	dr ["C_W_ID"] = "W_" + i;  	dr ["C_FIRST"] = RandomString (5' 16);  	dr ["C_MIDDLE"] = "oe";  	dr ["C_LAST"] = RandomString (8' 16);  	dr ["C_STREET_1"] = RandomString (10' 20);  	dr ["C_STREET_2"] = RandomString (10' 20);  	dr ["C_CITY"] = RandomString (10' 20);  	dr ["C_STATE"] = RandomString (2' 2);  	dr ["C_ZIP"] = RandZip ();  	dr ["C_PHONE"] = RandomString (12' 12);  	dr ["C_SINCE"] = currdate.ToLongTimeString ();  	dr ["C_CREDIT"] = "GC";  	dr ["C_CREDIT_LIM"] = 5000;  	dr ["C_DISCOUNT"] = .5;  	dr ["C_BALANCE"] = -10.00;  	dr ["C_YTD_PAYMENT"] = 10.00;  	dr ["C_PAYMENT_CNT"] = 1;  	dr ["C_DELIVERY_CNT"] = 0;  	dr ["C_DATA"] = RandomString (300' 500);  	dr ["SEQ_ID"] = tid;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: for (int cid = 1; cid < 3001; cid++) {  	DataRow dr = dt.NewRow ();  	dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  	dr ["C_D_ID"] = "D_W" + i + "_" + id;  	dr ["C_W_ID"] = "W_" + i;  	dr ["C_FIRST"] = RandomString (5' 16);  	dr ["C_MIDDLE"] = "oe";  	dr ["C_LAST"] = RandomString (8' 16);  	dr ["C_STREET_1"] = RandomString (10' 20);  	dr ["C_STREET_2"] = RandomString (10' 20);  	dr ["C_CITY"] = RandomString (10' 20);  	dr ["C_STATE"] = RandomString (2' 2);  	dr ["C_ZIP"] = RandZip ();  	dr ["C_PHONE"] = RandomString (12' 12);  	dr ["C_SINCE"] = currdate.ToLongTimeString ();  	dr ["C_CREDIT"] = "GC";  	dr ["C_CREDIT_LIM"] = 5000;  	dr ["C_DISCOUNT"] = .5;  	dr ["C_BALANCE"] = -10.00;  	dr ["C_YTD_PAYMENT"] = 10.00;  	dr ["C_PAYMENT_CNT"] = 1;  	dr ["C_DELIVERY_CNT"] = 0;  	dr ["C_DATA"] = RandomString (300' 500);  	dr ["SEQ_ID"] = tid;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: for (int cid = 1; cid < 3001; cid++) {  	DataRow dr = dt.NewRow ();  	dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  	dr ["C_D_ID"] = "D_W" + i + "_" + id;  	dr ["C_W_ID"] = "W_" + i;  	dr ["C_FIRST"] = RandomString (5' 16);  	dr ["C_MIDDLE"] = "oe";  	dr ["C_LAST"] = RandomString (8' 16);  	dr ["C_STREET_1"] = RandomString (10' 20);  	dr ["C_STREET_2"] = RandomString (10' 20);  	dr ["C_CITY"] = RandomString (10' 20);  	dr ["C_STATE"] = RandomString (2' 2);  	dr ["C_ZIP"] = RandZip ();  	dr ["C_PHONE"] = RandomString (12' 12);  	dr ["C_SINCE"] = currdate.ToLongTimeString ();  	dr ["C_CREDIT"] = "GC";  	dr ["C_CREDIT_LIM"] = 5000;  	dr ["C_DISCOUNT"] = .5;  	dr ["C_BALANCE"] = -10.00;  	dr ["C_YTD_PAYMENT"] = 10.00;  	dr ["C_PAYMENT_CNT"] = 1;  	dr ["C_DELIVERY_CNT"] = 0;  	dr ["C_DATA"] = RandomString (300' 500);  	dr ["SEQ_ID"] = tid;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: for (int cid = 1; cid < 3001; cid++) {  	DataRow dr = dt.NewRow ();  	dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  	dr ["C_D_ID"] = "D_W" + i + "_" + id;  	dr ["C_W_ID"] = "W_" + i;  	dr ["C_FIRST"] = RandomString (5' 16);  	dr ["C_MIDDLE"] = "oe";  	dr ["C_LAST"] = RandomString (8' 16);  	dr ["C_STREET_1"] = RandomString (10' 20);  	dr ["C_STREET_2"] = RandomString (10' 20);  	dr ["C_CITY"] = RandomString (10' 20);  	dr ["C_STATE"] = RandomString (2' 2);  	dr ["C_ZIP"] = RandZip ();  	dr ["C_PHONE"] = RandomString (12' 12);  	dr ["C_SINCE"] = currdate.ToLongTimeString ();  	dr ["C_CREDIT"] = "GC";  	dr ["C_CREDIT_LIM"] = 5000;  	dr ["C_DISCOUNT"] = .5;  	dr ["C_BALANCE"] = -10.00;  	dr ["C_YTD_PAYMENT"] = 10.00;  	dr ["C_PAYMENT_CNT"] = 1;  	dr ["C_DELIVERY_CNT"] = 0;  	dr ["C_DATA"] = RandomString (300' 500);  	dr ["SEQ_ID"] = tid;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: for (int cid = 1; cid < 3001; cid++) {  	DataRow dr = dt.NewRow ();  	dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  	dr ["C_D_ID"] = "D_W" + i + "_" + id;  	dr ["C_W_ID"] = "W_" + i;  	dr ["C_FIRST"] = RandomString (5' 16);  	dr ["C_MIDDLE"] = "oe";  	dr ["C_LAST"] = RandomString (8' 16);  	dr ["C_STREET_1"] = RandomString (10' 20);  	dr ["C_STREET_2"] = RandomString (10' 20);  	dr ["C_CITY"] = RandomString (10' 20);  	dr ["C_STATE"] = RandomString (2' 2);  	dr ["C_ZIP"] = RandZip ();  	dr ["C_PHONE"] = RandomString (12' 12);  	dr ["C_SINCE"] = currdate.ToLongTimeString ();  	dr ["C_CREDIT"] = "GC";  	dr ["C_CREDIT_LIM"] = 5000;  	dr ["C_DISCOUNT"] = .5;  	dr ["C_BALANCE"] = -10.00;  	dr ["C_YTD_PAYMENT"] = 10.00;  	dr ["C_PAYMENT_CNT"] = 1;  	dr ["C_DELIVERY_CNT"] = 0;  	dr ["C_DATA"] = RandomString (300' 500);  	dr ["SEQ_ID"] = tid;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: for (int cid = 1; cid < 3001; cid++) {  	DataRow dr = dt.NewRow ();  	dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  	dr ["C_D_ID"] = "D_W" + i + "_" + id;  	dr ["C_W_ID"] = "W_" + i;  	dr ["C_FIRST"] = RandomString (5' 16);  	dr ["C_MIDDLE"] = "oe";  	dr ["C_LAST"] = RandomString (8' 16);  	dr ["C_STREET_1"] = RandomString (10' 20);  	dr ["C_STREET_2"] = RandomString (10' 20);  	dr ["C_CITY"] = RandomString (10' 20);  	dr ["C_STATE"] = RandomString (2' 2);  	dr ["C_ZIP"] = RandZip ();  	dr ["C_PHONE"] = RandomString (12' 12);  	dr ["C_SINCE"] = currdate.ToLongTimeString ();  	dr ["C_CREDIT"] = "GC";  	dr ["C_CREDIT_LIM"] = 5000;  	dr ["C_DISCOUNT"] = .5;  	dr ["C_BALANCE"] = -10.00;  	dr ["C_YTD_PAYMENT"] = 10.00;  	dr ["C_PAYMENT_CNT"] = 1;  	dr ["C_DELIVERY_CNT"] = 0;  	dr ["C_DATA"] = RandomString (300' 500);  	dr ["SEQ_ID"] = tid;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: for (int cid = 1; cid < 3001; cid++) {  	DataRow dr = dt.NewRow ();  	dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  	dr ["C_D_ID"] = "D_W" + i + "_" + id;  	dr ["C_W_ID"] = "W_" + i;  	dr ["C_FIRST"] = RandomString (5' 16);  	dr ["C_MIDDLE"] = "oe";  	dr ["C_LAST"] = RandomString (8' 16);  	dr ["C_STREET_1"] = RandomString (10' 20);  	dr ["C_STREET_2"] = RandomString (10' 20);  	dr ["C_CITY"] = RandomString (10' 20);  	dr ["C_STATE"] = RandomString (2' 2);  	dr ["C_ZIP"] = RandZip ();  	dr ["C_PHONE"] = RandomString (12' 12);  	dr ["C_SINCE"] = currdate.ToLongTimeString ();  	dr ["C_CREDIT"] = "GC";  	dr ["C_CREDIT_LIM"] = 5000;  	dr ["C_DISCOUNT"] = .5;  	dr ["C_BALANCE"] = -10.00;  	dr ["C_YTD_PAYMENT"] = 10.00;  	dr ["C_PAYMENT_CNT"] = 1;  	dr ["C_DELIVERY_CNT"] = 0;  	dr ["C_DATA"] = RandomString (300' 500);  	dr ["SEQ_ID"] = tid;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: for (int cid = 1; cid < 3001; cid++) {  	DataRow dr = dt.NewRow ();  	dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  	dr ["C_D_ID"] = "D_W" + i + "_" + id;  	dr ["C_W_ID"] = "W_" + i;  	dr ["C_FIRST"] = RandomString (5' 16);  	dr ["C_MIDDLE"] = "oe";  	dr ["C_LAST"] = RandomString (8' 16);  	dr ["C_STREET_1"] = RandomString (10' 20);  	dr ["C_STREET_2"] = RandomString (10' 20);  	dr ["C_CITY"] = RandomString (10' 20);  	dr ["C_STATE"] = RandomString (2' 2);  	dr ["C_ZIP"] = RandZip ();  	dr ["C_PHONE"] = RandomString (12' 12);  	dr ["C_SINCE"] = currdate.ToLongTimeString ();  	dr ["C_CREDIT"] = "GC";  	dr ["C_CREDIT_LIM"] = 5000;  	dr ["C_DISCOUNT"] = .5;  	dr ["C_BALANCE"] = -10.00;  	dr ["C_YTD_PAYMENT"] = 10.00;  	dr ["C_PAYMENT_CNT"] = 1;  	dr ["C_DELIVERY_CNT"] = 0;  	dr ["C_DATA"] = RandomString (300' 500);  	dr ["SEQ_ID"] = tid;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: for (int cid = 1; cid < 3001; cid++) {  	DataRow dr = dt.NewRow ();  	dr ["C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  	dr ["C_D_ID"] = "D_W" + i + "_" + id;  	dr ["C_W_ID"] = "W_" + i;  	dr ["C_FIRST"] = RandomString (5' 16);  	dr ["C_MIDDLE"] = "oe";  	dr ["C_LAST"] = RandomString (8' 16);  	dr ["C_STREET_1"] = RandomString (10' 20);  	dr ["C_STREET_2"] = RandomString (10' 20);  	dr ["C_CITY"] = RandomString (10' 20);  	dr ["C_STATE"] = RandomString (2' 2);  	dr ["C_ZIP"] = RandZip ();  	dr ["C_PHONE"] = RandomString (12' 12);  	dr ["C_SINCE"] = currdate.ToLongTimeString ();  	dr ["C_CREDIT"] = "GC";  	dr ["C_CREDIT_LIM"] = 5000;  	dr ["C_DISCOUNT"] = .5;  	dr ["C_BALANCE"] = -10.00;  	dr ["C_YTD_PAYMENT"] = 10.00;  	dr ["C_PAYMENT_CNT"] = 1;  	dr ["C_DELIVERY_CNT"] = 0;  	dr ["C_DATA"] = RandomString (300' 500);  	dr ["SEQ_ID"] = tid;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: dr ["C_FIRST"] = RandomString (5' 16);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: dr ["C_FIRST"] = RandomString (5' 16);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: dr ["C_LAST"] = RandomString (8' 16);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: dr ["C_LAST"] = RandomString (8' 16);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: dr ["C_STREET_1"] = RandomString (10' 20);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: dr ["C_STREET_1"] = RandomString (10' 20);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: dr ["C_STREET_2"] = RandomString (10' 20);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: dr ["C_STREET_2"] = RandomString (10' 20);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: dr ["C_CITY"] = RandomString (10' 20);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: dr ["C_CITY"] = RandomString (10' 20);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: dr ["C_STATE"] = RandomString (2' 2);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: dr ["C_STATE"] = RandomString (2' 2);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: dr ["C_PHONE"] = RandomString (12' 12);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: dr ["C_PHONE"] = RandomString (12' 12);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: dr ["C_CREDIT_LIM"] = 5000;  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: dr ["C_DISCOUNT"] = .5;  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: dr ["C_BALANCE"] = -10.00;  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: dr ["C_YTD_PAYMENT"] = 10.00;  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: dr ["C_DATA"] = RandomString (300' 500);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildCustomerTable,The following statement contains a magic number: dr ["C_DATA"] = RandomString (300' 500);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildDistrictTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++) {  		DataRow dr = dt.NewRow ();  		dr ["D_ID"] = "D_W" + i + "_" + id;  		dr ["D_W_ID"] = "W_" + i;  		dr ["D_NAME"] = RandomString (6' 10);  		dr ["D_STREET_1"] = RandomString (10' 20);  		dr ["D_STREET_2"] = RandomString (10' 20);  		dr ["D_CITY"] = RandomString (10' 20);  		dr ["D_STATE"] = RandomString (2' 2);  		dr ["D_ZIP"] = RandZip ();  		dr ["D_TAX"] = 0.1000;  		dr ["D_YTD"] = 30000;  		dr ["D_NEXT_O_ID"] = "3001";  		dr ["SEQ_ID"] = tid;  		dt.Rows.Add (dr);  		tid++;  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildDistrictTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++) {  		DataRow dr = dt.NewRow ();  		dr ["D_ID"] = "D_W" + i + "_" + id;  		dr ["D_W_ID"] = "W_" + i;  		dr ["D_NAME"] = RandomString (6' 10);  		dr ["D_STREET_1"] = RandomString (10' 20);  		dr ["D_STREET_2"] = RandomString (10' 20);  		dr ["D_CITY"] = RandomString (10' 20);  		dr ["D_STATE"] = RandomString (2' 2);  		dr ["D_ZIP"] = RandZip ();  		dr ["D_TAX"] = 0.1000;  		dr ["D_YTD"] = 30000;  		dr ["D_NEXT_O_ID"] = "3001";  		dr ["SEQ_ID"] = tid;  		dt.Rows.Add (dr);  		tid++;  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildDistrictTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++) {  		DataRow dr = dt.NewRow ();  		dr ["D_ID"] = "D_W" + i + "_" + id;  		dr ["D_W_ID"] = "W_" + i;  		dr ["D_NAME"] = RandomString (6' 10);  		dr ["D_STREET_1"] = RandomString (10' 20);  		dr ["D_STREET_2"] = RandomString (10' 20);  		dr ["D_CITY"] = RandomString (10' 20);  		dr ["D_STATE"] = RandomString (2' 2);  		dr ["D_ZIP"] = RandZip ();  		dr ["D_TAX"] = 0.1000;  		dr ["D_YTD"] = 30000;  		dr ["D_NEXT_O_ID"] = "3001";  		dr ["SEQ_ID"] = tid;  		dt.Rows.Add (dr);  		tid++;  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildDistrictTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++) {  		DataRow dr = dt.NewRow ();  		dr ["D_ID"] = "D_W" + i + "_" + id;  		dr ["D_W_ID"] = "W_" + i;  		dr ["D_NAME"] = RandomString (6' 10);  		dr ["D_STREET_1"] = RandomString (10' 20);  		dr ["D_STREET_2"] = RandomString (10' 20);  		dr ["D_CITY"] = RandomString (10' 20);  		dr ["D_STATE"] = RandomString (2' 2);  		dr ["D_ZIP"] = RandZip ();  		dr ["D_TAX"] = 0.1000;  		dr ["D_YTD"] = 30000;  		dr ["D_NEXT_O_ID"] = "3001";  		dr ["SEQ_ID"] = tid;  		dt.Rows.Add (dr);  		tid++;  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildDistrictTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++) {  		DataRow dr = dt.NewRow ();  		dr ["D_ID"] = "D_W" + i + "_" + id;  		dr ["D_W_ID"] = "W_" + i;  		dr ["D_NAME"] = RandomString (6' 10);  		dr ["D_STREET_1"] = RandomString (10' 20);  		dr ["D_STREET_2"] = RandomString (10' 20);  		dr ["D_CITY"] = RandomString (10' 20);  		dr ["D_STATE"] = RandomString (2' 2);  		dr ["D_ZIP"] = RandZip ();  		dr ["D_TAX"] = 0.1000;  		dr ["D_YTD"] = 30000;  		dr ["D_NEXT_O_ID"] = "3001";  		dr ["SEQ_ID"] = tid;  		dt.Rows.Add (dr);  		tid++;  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildDistrictTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++) {  		DataRow dr = dt.NewRow ();  		dr ["D_ID"] = "D_W" + i + "_" + id;  		dr ["D_W_ID"] = "W_" + i;  		dr ["D_NAME"] = RandomString (6' 10);  		dr ["D_STREET_1"] = RandomString (10' 20);  		dr ["D_STREET_2"] = RandomString (10' 20);  		dr ["D_CITY"] = RandomString (10' 20);  		dr ["D_STATE"] = RandomString (2' 2);  		dr ["D_ZIP"] = RandZip ();  		dr ["D_TAX"] = 0.1000;  		dr ["D_YTD"] = 30000;  		dr ["D_NEXT_O_ID"] = "3001";  		dr ["SEQ_ID"] = tid;  		dt.Rows.Add (dr);  		tid++;  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildDistrictTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++) {  		DataRow dr = dt.NewRow ();  		dr ["D_ID"] = "D_W" + i + "_" + id;  		dr ["D_W_ID"] = "W_" + i;  		dr ["D_NAME"] = RandomString (6' 10);  		dr ["D_STREET_1"] = RandomString (10' 20);  		dr ["D_STREET_2"] = RandomString (10' 20);  		dr ["D_CITY"] = RandomString (10' 20);  		dr ["D_STATE"] = RandomString (2' 2);  		dr ["D_ZIP"] = RandZip ();  		dr ["D_TAX"] = 0.1000;  		dr ["D_YTD"] = 30000;  		dr ["D_NEXT_O_ID"] = "3001";  		dr ["SEQ_ID"] = tid;  		dt.Rows.Add (dr);  		tid++;  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildDistrictTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++) {  		DataRow dr = dt.NewRow ();  		dr ["D_ID"] = "D_W" + i + "_" + id;  		dr ["D_W_ID"] = "W_" + i;  		dr ["D_NAME"] = RandomString (6' 10);  		dr ["D_STREET_1"] = RandomString (10' 20);  		dr ["D_STREET_2"] = RandomString (10' 20);  		dr ["D_CITY"] = RandomString (10' 20);  		dr ["D_STATE"] = RandomString (2' 2);  		dr ["D_ZIP"] = RandZip ();  		dr ["D_TAX"] = 0.1000;  		dr ["D_YTD"] = 30000;  		dr ["D_NEXT_O_ID"] = "3001";  		dr ["SEQ_ID"] = tid;  		dt.Rows.Add (dr);  		tid++;  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildDistrictTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++) {  		DataRow dr = dt.NewRow ();  		dr ["D_ID"] = "D_W" + i + "_" + id;  		dr ["D_W_ID"] = "W_" + i;  		dr ["D_NAME"] = RandomString (6' 10);  		dr ["D_STREET_1"] = RandomString (10' 20);  		dr ["D_STREET_2"] = RandomString (10' 20);  		dr ["D_CITY"] = RandomString (10' 20);  		dr ["D_STATE"] = RandomString (2' 2);  		dr ["D_ZIP"] = RandZip ();  		dr ["D_TAX"] = 0.1000;  		dr ["D_YTD"] = 30000;  		dr ["D_NEXT_O_ID"] = "3001";  		dr ["SEQ_ID"] = tid;  		dt.Rows.Add (dr);  		tid++;  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildDistrictTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++) {  		DataRow dr = dt.NewRow ();  		dr ["D_ID"] = "D_W" + i + "_" + id;  		dr ["D_W_ID"] = "W_" + i;  		dr ["D_NAME"] = RandomString (6' 10);  		dr ["D_STREET_1"] = RandomString (10' 20);  		dr ["D_STREET_2"] = RandomString (10' 20);  		dr ["D_CITY"] = RandomString (10' 20);  		dr ["D_STATE"] = RandomString (2' 2);  		dr ["D_ZIP"] = RandZip ();  		dr ["D_TAX"] = 0.1000;  		dr ["D_YTD"] = 30000;  		dr ["D_NEXT_O_ID"] = "3001";  		dr ["SEQ_ID"] = tid;  		dt.Rows.Add (dr);  		tid++;  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildDistrictTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++) {  		DataRow dr = dt.NewRow ();  		dr ["D_ID"] = "D_W" + i + "_" + id;  		dr ["D_W_ID"] = "W_" + i;  		dr ["D_NAME"] = RandomString (6' 10);  		dr ["D_STREET_1"] = RandomString (10' 20);  		dr ["D_STREET_2"] = RandomString (10' 20);  		dr ["D_CITY"] = RandomString (10' 20);  		dr ["D_STATE"] = RandomString (2' 2);  		dr ["D_ZIP"] = RandZip ();  		dr ["D_TAX"] = 0.1000;  		dr ["D_YTD"] = 30000;  		dr ["D_NEXT_O_ID"] = "3001";  		dr ["SEQ_ID"] = tid;  		dt.Rows.Add (dr);  		tid++;  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildDistrictTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++) {  		DataRow dr = dt.NewRow ();  		dr ["D_ID"] = "D_W" + i + "_" + id;  		dr ["D_W_ID"] = "W_" + i;  		dr ["D_NAME"] = RandomString (6' 10);  		dr ["D_STREET_1"] = RandomString (10' 20);  		dr ["D_STREET_2"] = RandomString (10' 20);  		dr ["D_CITY"] = RandomString (10' 20);  		dr ["D_STATE"] = RandomString (2' 2);  		dr ["D_ZIP"] = RandZip ();  		dr ["D_TAX"] = 0.1000;  		dr ["D_YTD"] = 30000;  		dr ["D_NEXT_O_ID"] = "3001";  		dr ["SEQ_ID"] = tid;  		dt.Rows.Add (dr);  		tid++;  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildDistrictTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++) {  		DataRow dr = dt.NewRow ();  		dr ["D_ID"] = "D_W" + i + "_" + id;  		dr ["D_W_ID"] = "W_" + i;  		dr ["D_NAME"] = RandomString (6' 10);  		dr ["D_STREET_1"] = RandomString (10' 20);  		dr ["D_STREET_2"] = RandomString (10' 20);  		dr ["D_CITY"] = RandomString (10' 20);  		dr ["D_STATE"] = RandomString (2' 2);  		dr ["D_ZIP"] = RandZip ();  		dr ["D_TAX"] = 0.1000;  		dr ["D_YTD"] = 30000;  		dr ["D_NEXT_O_ID"] = "3001";  		dr ["SEQ_ID"] = tid;  		dt.Rows.Add (dr);  		tid++;  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildDistrictTable,The following statement contains a magic number: for (int id = 1; id < 11; id++) {  	DataRow dr = dt.NewRow ();  	dr ["D_ID"] = "D_W" + i + "_" + id;  	dr ["D_W_ID"] = "W_" + i;  	dr ["D_NAME"] = RandomString (6' 10);  	dr ["D_STREET_1"] = RandomString (10' 20);  	dr ["D_STREET_2"] = RandomString (10' 20);  	dr ["D_CITY"] = RandomString (10' 20);  	dr ["D_STATE"] = RandomString (2' 2);  	dr ["D_ZIP"] = RandZip ();  	dr ["D_TAX"] = 0.1000;  	dr ["D_YTD"] = 30000;  	dr ["D_NEXT_O_ID"] = "3001";  	dr ["SEQ_ID"] = tid;  	dt.Rows.Add (dr);  	tid++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildDistrictTable,The following statement contains a magic number: for (int id = 1; id < 11; id++) {  	DataRow dr = dt.NewRow ();  	dr ["D_ID"] = "D_W" + i + "_" + id;  	dr ["D_W_ID"] = "W_" + i;  	dr ["D_NAME"] = RandomString (6' 10);  	dr ["D_STREET_1"] = RandomString (10' 20);  	dr ["D_STREET_2"] = RandomString (10' 20);  	dr ["D_CITY"] = RandomString (10' 20);  	dr ["D_STATE"] = RandomString (2' 2);  	dr ["D_ZIP"] = RandZip ();  	dr ["D_TAX"] = 0.1000;  	dr ["D_YTD"] = 30000;  	dr ["D_NEXT_O_ID"] = "3001";  	dr ["SEQ_ID"] = tid;  	dt.Rows.Add (dr);  	tid++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildDistrictTable,The following statement contains a magic number: for (int id = 1; id < 11; id++) {  	DataRow dr = dt.NewRow ();  	dr ["D_ID"] = "D_W" + i + "_" + id;  	dr ["D_W_ID"] = "W_" + i;  	dr ["D_NAME"] = RandomString (6' 10);  	dr ["D_STREET_1"] = RandomString (10' 20);  	dr ["D_STREET_2"] = RandomString (10' 20);  	dr ["D_CITY"] = RandomString (10' 20);  	dr ["D_STATE"] = RandomString (2' 2);  	dr ["D_ZIP"] = RandZip ();  	dr ["D_TAX"] = 0.1000;  	dr ["D_YTD"] = 30000;  	dr ["D_NEXT_O_ID"] = "3001";  	dr ["SEQ_ID"] = tid;  	dt.Rows.Add (dr);  	tid++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildDistrictTable,The following statement contains a magic number: for (int id = 1; id < 11; id++) {  	DataRow dr = dt.NewRow ();  	dr ["D_ID"] = "D_W" + i + "_" + id;  	dr ["D_W_ID"] = "W_" + i;  	dr ["D_NAME"] = RandomString (6' 10);  	dr ["D_STREET_1"] = RandomString (10' 20);  	dr ["D_STREET_2"] = RandomString (10' 20);  	dr ["D_CITY"] = RandomString (10' 20);  	dr ["D_STATE"] = RandomString (2' 2);  	dr ["D_ZIP"] = RandZip ();  	dr ["D_TAX"] = 0.1000;  	dr ["D_YTD"] = 30000;  	dr ["D_NEXT_O_ID"] = "3001";  	dr ["SEQ_ID"] = tid;  	dt.Rows.Add (dr);  	tid++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildDistrictTable,The following statement contains a magic number: for (int id = 1; id < 11; id++) {  	DataRow dr = dt.NewRow ();  	dr ["D_ID"] = "D_W" + i + "_" + id;  	dr ["D_W_ID"] = "W_" + i;  	dr ["D_NAME"] = RandomString (6' 10);  	dr ["D_STREET_1"] = RandomString (10' 20);  	dr ["D_STREET_2"] = RandomString (10' 20);  	dr ["D_CITY"] = RandomString (10' 20);  	dr ["D_STATE"] = RandomString (2' 2);  	dr ["D_ZIP"] = RandZip ();  	dr ["D_TAX"] = 0.1000;  	dr ["D_YTD"] = 30000;  	dr ["D_NEXT_O_ID"] = "3001";  	dr ["SEQ_ID"] = tid;  	dt.Rows.Add (dr);  	tid++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildDistrictTable,The following statement contains a magic number: for (int id = 1; id < 11; id++) {  	DataRow dr = dt.NewRow ();  	dr ["D_ID"] = "D_W" + i + "_" + id;  	dr ["D_W_ID"] = "W_" + i;  	dr ["D_NAME"] = RandomString (6' 10);  	dr ["D_STREET_1"] = RandomString (10' 20);  	dr ["D_STREET_2"] = RandomString (10' 20);  	dr ["D_CITY"] = RandomString (10' 20);  	dr ["D_STATE"] = RandomString (2' 2);  	dr ["D_ZIP"] = RandZip ();  	dr ["D_TAX"] = 0.1000;  	dr ["D_YTD"] = 30000;  	dr ["D_NEXT_O_ID"] = "3001";  	dr ["SEQ_ID"] = tid;  	dt.Rows.Add (dr);  	tid++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildDistrictTable,The following statement contains a magic number: for (int id = 1; id < 11; id++) {  	DataRow dr = dt.NewRow ();  	dr ["D_ID"] = "D_W" + i + "_" + id;  	dr ["D_W_ID"] = "W_" + i;  	dr ["D_NAME"] = RandomString (6' 10);  	dr ["D_STREET_1"] = RandomString (10' 20);  	dr ["D_STREET_2"] = RandomString (10' 20);  	dr ["D_CITY"] = RandomString (10' 20);  	dr ["D_STATE"] = RandomString (2' 2);  	dr ["D_ZIP"] = RandZip ();  	dr ["D_TAX"] = 0.1000;  	dr ["D_YTD"] = 30000;  	dr ["D_NEXT_O_ID"] = "3001";  	dr ["SEQ_ID"] = tid;  	dt.Rows.Add (dr);  	tid++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildDistrictTable,The following statement contains a magic number: for (int id = 1; id < 11; id++) {  	DataRow dr = dt.NewRow ();  	dr ["D_ID"] = "D_W" + i + "_" + id;  	dr ["D_W_ID"] = "W_" + i;  	dr ["D_NAME"] = RandomString (6' 10);  	dr ["D_STREET_1"] = RandomString (10' 20);  	dr ["D_STREET_2"] = RandomString (10' 20);  	dr ["D_CITY"] = RandomString (10' 20);  	dr ["D_STATE"] = RandomString (2' 2);  	dr ["D_ZIP"] = RandZip ();  	dr ["D_TAX"] = 0.1000;  	dr ["D_YTD"] = 30000;  	dr ["D_NEXT_O_ID"] = "3001";  	dr ["SEQ_ID"] = tid;  	dt.Rows.Add (dr);  	tid++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildDistrictTable,The following statement contains a magic number: for (int id = 1; id < 11; id++) {  	DataRow dr = dt.NewRow ();  	dr ["D_ID"] = "D_W" + i + "_" + id;  	dr ["D_W_ID"] = "W_" + i;  	dr ["D_NAME"] = RandomString (6' 10);  	dr ["D_STREET_1"] = RandomString (10' 20);  	dr ["D_STREET_2"] = RandomString (10' 20);  	dr ["D_CITY"] = RandomString (10' 20);  	dr ["D_STATE"] = RandomString (2' 2);  	dr ["D_ZIP"] = RandZip ();  	dr ["D_TAX"] = 0.1000;  	dr ["D_YTD"] = 30000;  	dr ["D_NEXT_O_ID"] = "3001";  	dr ["SEQ_ID"] = tid;  	dt.Rows.Add (dr);  	tid++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildDistrictTable,The following statement contains a magic number: for (int id = 1; id < 11; id++) {  	DataRow dr = dt.NewRow ();  	dr ["D_ID"] = "D_W" + i + "_" + id;  	dr ["D_W_ID"] = "W_" + i;  	dr ["D_NAME"] = RandomString (6' 10);  	dr ["D_STREET_1"] = RandomString (10' 20);  	dr ["D_STREET_2"] = RandomString (10' 20);  	dr ["D_CITY"] = RandomString (10' 20);  	dr ["D_STATE"] = RandomString (2' 2);  	dr ["D_ZIP"] = RandZip ();  	dr ["D_TAX"] = 0.1000;  	dr ["D_YTD"] = 30000;  	dr ["D_NEXT_O_ID"] = "3001";  	dr ["SEQ_ID"] = tid;  	dt.Rows.Add (dr);  	tid++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildDistrictTable,The following statement contains a magic number: for (int id = 1; id < 11; id++) {  	DataRow dr = dt.NewRow ();  	dr ["D_ID"] = "D_W" + i + "_" + id;  	dr ["D_W_ID"] = "W_" + i;  	dr ["D_NAME"] = RandomString (6' 10);  	dr ["D_STREET_1"] = RandomString (10' 20);  	dr ["D_STREET_2"] = RandomString (10' 20);  	dr ["D_CITY"] = RandomString (10' 20);  	dr ["D_STATE"] = RandomString (2' 2);  	dr ["D_ZIP"] = RandZip ();  	dr ["D_TAX"] = 0.1000;  	dr ["D_YTD"] = 30000;  	dr ["D_NEXT_O_ID"] = "3001";  	dr ["SEQ_ID"] = tid;  	dt.Rows.Add (dr);  	tid++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildDistrictTable,The following statement contains a magic number: for (int id = 1; id < 11; id++) {  	DataRow dr = dt.NewRow ();  	dr ["D_ID"] = "D_W" + i + "_" + id;  	dr ["D_W_ID"] = "W_" + i;  	dr ["D_NAME"] = RandomString (6' 10);  	dr ["D_STREET_1"] = RandomString (10' 20);  	dr ["D_STREET_2"] = RandomString (10' 20);  	dr ["D_CITY"] = RandomString (10' 20);  	dr ["D_STATE"] = RandomString (2' 2);  	dr ["D_ZIP"] = RandZip ();  	dr ["D_TAX"] = 0.1000;  	dr ["D_YTD"] = 30000;  	dr ["D_NEXT_O_ID"] = "3001";  	dr ["SEQ_ID"] = tid;  	dt.Rows.Add (dr);  	tid++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildDistrictTable,The following statement contains a magic number: for (int id = 1; id < 11; id++) {  	DataRow dr = dt.NewRow ();  	dr ["D_ID"] = "D_W" + i + "_" + id;  	dr ["D_W_ID"] = "W_" + i;  	dr ["D_NAME"] = RandomString (6' 10);  	dr ["D_STREET_1"] = RandomString (10' 20);  	dr ["D_STREET_2"] = RandomString (10' 20);  	dr ["D_CITY"] = RandomString (10' 20);  	dr ["D_STATE"] = RandomString (2' 2);  	dr ["D_ZIP"] = RandZip ();  	dr ["D_TAX"] = 0.1000;  	dr ["D_YTD"] = 30000;  	dr ["D_NEXT_O_ID"] = "3001";  	dr ["SEQ_ID"] = tid;  	dt.Rows.Add (dr);  	tid++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildDistrictTable,The following statement contains a magic number: dr ["D_NAME"] = RandomString (6' 10);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildDistrictTable,The following statement contains a magic number: dr ["D_NAME"] = RandomString (6' 10);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildDistrictTable,The following statement contains a magic number: dr ["D_STREET_1"] = RandomString (10' 20);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildDistrictTable,The following statement contains a magic number: dr ["D_STREET_1"] = RandomString (10' 20);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildDistrictTable,The following statement contains a magic number: dr ["D_STREET_2"] = RandomString (10' 20);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildDistrictTable,The following statement contains a magic number: dr ["D_STREET_2"] = RandomString (10' 20);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildDistrictTable,The following statement contains a magic number: dr ["D_CITY"] = RandomString (10' 20);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildDistrictTable,The following statement contains a magic number: dr ["D_CITY"] = RandomString (10' 20);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildDistrictTable,The following statement contains a magic number: dr ["D_STATE"] = RandomString (2' 2);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildDistrictTable,The following statement contains a magic number: dr ["D_STATE"] = RandomString (2' 2);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildDistrictTable,The following statement contains a magic number: dr ["D_TAX"] = 0.1000;  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildDistrictTable,The following statement contains a magic number: dr ["D_YTD"] = 30000;  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildHistoryTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++)//check to see if ID should be 11 and not 10  	 {  		for (int cid = 1; cid < 3001; cid++) {  			DataRow dr = dt.NewRow ();  			dr ["H_C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  			dr ["H_C_D_ID"] = "D_W" + i + "_" + id;  			dr ["H_C_W_ID"] = "W_" + i;  			dr ["H_D_ID"] = "D_W" + i + "_" + id;  			dr ["H_W_ID"] = "W_" + i;  			dr ["H_DATE"] = currdate.ToLongTimeString ();  			dr ["H_AMOUNT"] = 10.00;  			dr ["H_DATA"] = RandomString (12' 24);  			dr ["SEQ_ID"] = tid;  			dt.Rows.Add (dr);  			tid++;  		}  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildHistoryTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++)//check to see if ID should be 11 and not 10  	 {  		for (int cid = 1; cid < 3001; cid++) {  			DataRow dr = dt.NewRow ();  			dr ["H_C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  			dr ["H_C_D_ID"] = "D_W" + i + "_" + id;  			dr ["H_C_W_ID"] = "W_" + i;  			dr ["H_D_ID"] = "D_W" + i + "_" + id;  			dr ["H_W_ID"] = "W_" + i;  			dr ["H_DATE"] = currdate.ToLongTimeString ();  			dr ["H_AMOUNT"] = 10.00;  			dr ["H_DATA"] = RandomString (12' 24);  			dr ["SEQ_ID"] = tid;  			dt.Rows.Add (dr);  			tid++;  		}  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildHistoryTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++)//check to see if ID should be 11 and not 10  	 {  		for (int cid = 1; cid < 3001; cid++) {  			DataRow dr = dt.NewRow ();  			dr ["H_C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  			dr ["H_C_D_ID"] = "D_W" + i + "_" + id;  			dr ["H_C_W_ID"] = "W_" + i;  			dr ["H_D_ID"] = "D_W" + i + "_" + id;  			dr ["H_W_ID"] = "W_" + i;  			dr ["H_DATE"] = currdate.ToLongTimeString ();  			dr ["H_AMOUNT"] = 10.00;  			dr ["H_DATA"] = RandomString (12' 24);  			dr ["SEQ_ID"] = tid;  			dt.Rows.Add (dr);  			tid++;  		}  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildHistoryTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++)//check to see if ID should be 11 and not 10  	 {  		for (int cid = 1; cid < 3001; cid++) {  			DataRow dr = dt.NewRow ();  			dr ["H_C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  			dr ["H_C_D_ID"] = "D_W" + i + "_" + id;  			dr ["H_C_W_ID"] = "W_" + i;  			dr ["H_D_ID"] = "D_W" + i + "_" + id;  			dr ["H_W_ID"] = "W_" + i;  			dr ["H_DATE"] = currdate.ToLongTimeString ();  			dr ["H_AMOUNT"] = 10.00;  			dr ["H_DATA"] = RandomString (12' 24);  			dr ["SEQ_ID"] = tid;  			dt.Rows.Add (dr);  			tid++;  		}  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildHistoryTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++)//check to see if ID should be 11 and not 10  	 {  		for (int cid = 1; cid < 3001; cid++) {  			DataRow dr = dt.NewRow ();  			dr ["H_C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  			dr ["H_C_D_ID"] = "D_W" + i + "_" + id;  			dr ["H_C_W_ID"] = "W_" + i;  			dr ["H_D_ID"] = "D_W" + i + "_" + id;  			dr ["H_W_ID"] = "W_" + i;  			dr ["H_DATE"] = currdate.ToLongTimeString ();  			dr ["H_AMOUNT"] = 10.00;  			dr ["H_DATA"] = RandomString (12' 24);  			dr ["SEQ_ID"] = tid;  			dt.Rows.Add (dr);  			tid++;  		}  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildHistoryTable,The following statement contains a magic number: for (int id = 1; id < 11; id++)//check to see if ID should be 11 and not 10   {  	for (int cid = 1; cid < 3001; cid++) {  		DataRow dr = dt.NewRow ();  		dr ["H_C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  		dr ["H_C_D_ID"] = "D_W" + i + "_" + id;  		dr ["H_C_W_ID"] = "W_" + i;  		dr ["H_D_ID"] = "D_W" + i + "_" + id;  		dr ["H_W_ID"] = "W_" + i;  		dr ["H_DATE"] = currdate.ToLongTimeString ();  		dr ["H_AMOUNT"] = 10.00;  		dr ["H_DATA"] = RandomString (12' 24);  		dr ["SEQ_ID"] = tid;  		dt.Rows.Add (dr);  		tid++;  	}  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildHistoryTable,The following statement contains a magic number: for (int id = 1; id < 11; id++)//check to see if ID should be 11 and not 10   {  	for (int cid = 1; cid < 3001; cid++) {  		DataRow dr = dt.NewRow ();  		dr ["H_C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  		dr ["H_C_D_ID"] = "D_W" + i + "_" + id;  		dr ["H_C_W_ID"] = "W_" + i;  		dr ["H_D_ID"] = "D_W" + i + "_" + id;  		dr ["H_W_ID"] = "W_" + i;  		dr ["H_DATE"] = currdate.ToLongTimeString ();  		dr ["H_AMOUNT"] = 10.00;  		dr ["H_DATA"] = RandomString (12' 24);  		dr ["SEQ_ID"] = tid;  		dt.Rows.Add (dr);  		tid++;  	}  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildHistoryTable,The following statement contains a magic number: for (int id = 1; id < 11; id++)//check to see if ID should be 11 and not 10   {  	for (int cid = 1; cid < 3001; cid++) {  		DataRow dr = dt.NewRow ();  		dr ["H_C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  		dr ["H_C_D_ID"] = "D_W" + i + "_" + id;  		dr ["H_C_W_ID"] = "W_" + i;  		dr ["H_D_ID"] = "D_W" + i + "_" + id;  		dr ["H_W_ID"] = "W_" + i;  		dr ["H_DATE"] = currdate.ToLongTimeString ();  		dr ["H_AMOUNT"] = 10.00;  		dr ["H_DATA"] = RandomString (12' 24);  		dr ["SEQ_ID"] = tid;  		dt.Rows.Add (dr);  		tid++;  	}  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildHistoryTable,The following statement contains a magic number: for (int id = 1; id < 11; id++)//check to see if ID should be 11 and not 10   {  	for (int cid = 1; cid < 3001; cid++) {  		DataRow dr = dt.NewRow ();  		dr ["H_C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  		dr ["H_C_D_ID"] = "D_W" + i + "_" + id;  		dr ["H_C_W_ID"] = "W_" + i;  		dr ["H_D_ID"] = "D_W" + i + "_" + id;  		dr ["H_W_ID"] = "W_" + i;  		dr ["H_DATE"] = currdate.ToLongTimeString ();  		dr ["H_AMOUNT"] = 10.00;  		dr ["H_DATA"] = RandomString (12' 24);  		dr ["SEQ_ID"] = tid;  		dt.Rows.Add (dr);  		tid++;  	}  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildHistoryTable,The following statement contains a magic number: for (int id = 1; id < 11; id++)//check to see if ID should be 11 and not 10   {  	for (int cid = 1; cid < 3001; cid++) {  		DataRow dr = dt.NewRow ();  		dr ["H_C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  		dr ["H_C_D_ID"] = "D_W" + i + "_" + id;  		dr ["H_C_W_ID"] = "W_" + i;  		dr ["H_D_ID"] = "D_W" + i + "_" + id;  		dr ["H_W_ID"] = "W_" + i;  		dr ["H_DATE"] = currdate.ToLongTimeString ();  		dr ["H_AMOUNT"] = 10.00;  		dr ["H_DATA"] = RandomString (12' 24);  		dr ["SEQ_ID"] = tid;  		dt.Rows.Add (dr);  		tid++;  	}  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildHistoryTable,The following statement contains a magic number: for (int cid = 1; cid < 3001; cid++) {  	DataRow dr = dt.NewRow ();  	dr ["H_C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  	dr ["H_C_D_ID"] = "D_W" + i + "_" + id;  	dr ["H_C_W_ID"] = "W_" + i;  	dr ["H_D_ID"] = "D_W" + i + "_" + id;  	dr ["H_W_ID"] = "W_" + i;  	dr ["H_DATE"] = currdate.ToLongTimeString ();  	dr ["H_AMOUNT"] = 10.00;  	dr ["H_DATA"] = RandomString (12' 24);  	dr ["SEQ_ID"] = tid;  	dt.Rows.Add (dr);  	tid++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildHistoryTable,The following statement contains a magic number: for (int cid = 1; cid < 3001; cid++) {  	DataRow dr = dt.NewRow ();  	dr ["H_C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  	dr ["H_C_D_ID"] = "D_W" + i + "_" + id;  	dr ["H_C_W_ID"] = "W_" + i;  	dr ["H_D_ID"] = "D_W" + i + "_" + id;  	dr ["H_W_ID"] = "W_" + i;  	dr ["H_DATE"] = currdate.ToLongTimeString ();  	dr ["H_AMOUNT"] = 10.00;  	dr ["H_DATA"] = RandomString (12' 24);  	dr ["SEQ_ID"] = tid;  	dt.Rows.Add (dr);  	tid++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildHistoryTable,The following statement contains a magic number: for (int cid = 1; cid < 3001; cid++) {  	DataRow dr = dt.NewRow ();  	dr ["H_C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  	dr ["H_C_D_ID"] = "D_W" + i + "_" + id;  	dr ["H_C_W_ID"] = "W_" + i;  	dr ["H_D_ID"] = "D_W" + i + "_" + id;  	dr ["H_W_ID"] = "W_" + i;  	dr ["H_DATE"] = currdate.ToLongTimeString ();  	dr ["H_AMOUNT"] = 10.00;  	dr ["H_DATA"] = RandomString (12' 24);  	dr ["SEQ_ID"] = tid;  	dt.Rows.Add (dr);  	tid++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildHistoryTable,The following statement contains a magic number: for (int cid = 1; cid < 3001; cid++) {  	DataRow dr = dt.NewRow ();  	dr ["H_C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  	dr ["H_C_D_ID"] = "D_W" + i + "_" + id;  	dr ["H_C_W_ID"] = "W_" + i;  	dr ["H_D_ID"] = "D_W" + i + "_" + id;  	dr ["H_W_ID"] = "W_" + i;  	dr ["H_DATE"] = currdate.ToLongTimeString ();  	dr ["H_AMOUNT"] = 10.00;  	dr ["H_DATA"] = RandomString (12' 24);  	dr ["SEQ_ID"] = tid;  	dt.Rows.Add (dr);  	tid++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildHistoryTable,The following statement contains a magic number: dr ["H_AMOUNT"] = 10.00;  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildHistoryTable,The following statement contains a magic number: dr ["H_DATA"] = RandomString (12' 24);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildHistoryTable,The following statement contains a magic number: dr ["H_DATA"] = RandomString (12' 24);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildItemsTable,The following statement contains a magic number: while (i < 100001) {  	DataRow dr = dt.NewRow ();  	dr ["I_ID"] = i;  	dr ["I_IM_ID"] = RandomString (10' 20);  	dr ["I_NAME"] = RandomString (14' 24);  	dr ["I_PRICE"] = Frnd.Next (1' 100);  	dr ["I_DATA"] = RandomString (26' 50);  	i++;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildItemsTable,The following statement contains a magic number: while (i < 100001) {  	DataRow dr = dt.NewRow ();  	dr ["I_ID"] = i;  	dr ["I_IM_ID"] = RandomString (10' 20);  	dr ["I_NAME"] = RandomString (14' 24);  	dr ["I_PRICE"] = Frnd.Next (1' 100);  	dr ["I_DATA"] = RandomString (26' 50);  	i++;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildItemsTable,The following statement contains a magic number: while (i < 100001) {  	DataRow dr = dt.NewRow ();  	dr ["I_ID"] = i;  	dr ["I_IM_ID"] = RandomString (10' 20);  	dr ["I_NAME"] = RandomString (14' 24);  	dr ["I_PRICE"] = Frnd.Next (1' 100);  	dr ["I_DATA"] = RandomString (26' 50);  	i++;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildItemsTable,The following statement contains a magic number: while (i < 100001) {  	DataRow dr = dt.NewRow ();  	dr ["I_ID"] = i;  	dr ["I_IM_ID"] = RandomString (10' 20);  	dr ["I_NAME"] = RandomString (14' 24);  	dr ["I_PRICE"] = Frnd.Next (1' 100);  	dr ["I_DATA"] = RandomString (26' 50);  	i++;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildItemsTable,The following statement contains a magic number: while (i < 100001) {  	DataRow dr = dt.NewRow ();  	dr ["I_ID"] = i;  	dr ["I_IM_ID"] = RandomString (10' 20);  	dr ["I_NAME"] = RandomString (14' 24);  	dr ["I_PRICE"] = Frnd.Next (1' 100);  	dr ["I_DATA"] = RandomString (26' 50);  	i++;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildItemsTable,The following statement contains a magic number: while (i < 100001) {  	DataRow dr = dt.NewRow ();  	dr ["I_ID"] = i;  	dr ["I_IM_ID"] = RandomString (10' 20);  	dr ["I_NAME"] = RandomString (14' 24);  	dr ["I_PRICE"] = Frnd.Next (1' 100);  	dr ["I_DATA"] = RandomString (26' 50);  	i++;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildItemsTable,The following statement contains a magic number: while (i < 100001) {  	DataRow dr = dt.NewRow ();  	dr ["I_ID"] = i;  	dr ["I_IM_ID"] = RandomString (10' 20);  	dr ["I_NAME"] = RandomString (14' 24);  	dr ["I_PRICE"] = Frnd.Next (1' 100);  	dr ["I_DATA"] = RandomString (26' 50);  	i++;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildItemsTable,The following statement contains a magic number: while (i < 100001) {  	DataRow dr = dt.NewRow ();  	dr ["I_ID"] = i;  	dr ["I_IM_ID"] = RandomString (10' 20);  	dr ["I_NAME"] = RandomString (14' 24);  	dr ["I_PRICE"] = Frnd.Next (1' 100);  	dr ["I_DATA"] = RandomString (26' 50);  	i++;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildItemsTable,The following statement contains a magic number: dr ["I_IM_ID"] = RandomString (10' 20);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildItemsTable,The following statement contains a magic number: dr ["I_IM_ID"] = RandomString (10' 20);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildItemsTable,The following statement contains a magic number: dr ["I_NAME"] = RandomString (14' 24);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildItemsTable,The following statement contains a magic number: dr ["I_NAME"] = RandomString (14' 24);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildItemsTable,The following statement contains a magic number: dr ["I_PRICE"] = Frnd.Next (1' 100);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildItemsTable,The following statement contains a magic number: dr ["I_DATA"] = RandomString (26' 50);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildItemsTable,The following statement contains a magic number: dr ["I_DATA"] = RandomString (26' 50);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildNewOrderTable,The following statement contains a magic number: if (NumWh == 1) {  	tid = 1;  	tolid = 1;  }  else {  	tid = (NumWh * 10 * 3000) + 1;  	tolid = (NumWh * 10 * 3000 * 10) + 1;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildNewOrderTable,The following statement contains a magic number: if (NumWh == 1) {  	tid = 1;  	tolid = 1;  }  else {  	tid = (NumWh * 10 * 3000) + 1;  	tolid = (NumWh * 10 * 3000 * 10) + 1;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildNewOrderTable,The following statement contains a magic number: if (NumWh == 1) {  	tid = 1;  	tolid = 1;  }  else {  	tid = (NumWh * 10 * 3000) + 1;  	tolid = (NumWh * 10 * 3000 * 10) + 1;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildNewOrderTable,The following statement contains a magic number: if (NumWh == 1) {  	tid = 1;  	tolid = 1;  }  else {  	tid = (NumWh * 10 * 3000) + 1;  	tolid = (NumWh * 10 * 3000 * 10) + 1;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildNewOrderTable,The following statement contains a magic number: if (NumWh == 1) {  	tid = 1;  	tolid = 1;  }  else {  	tid = (NumWh * 10 * 3000) + 1;  	tolid = (NumWh * 10 * 3000 * 10) + 1;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildNewOrderTable,The following statement contains a magic number: tid = (NumWh * 10 * 3000) + 1;  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildNewOrderTable,The following statement contains a magic number: tid = (NumWh * 10 * 3000) + 1;  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildNewOrderTable,The following statement contains a magic number: tolid = (NumWh * 10 * 3000 * 10) + 1;  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildNewOrderTable,The following statement contains a magic number: tolid = (NumWh * 10 * 3000 * 10) + 1;  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildNewOrderTable,The following statement contains a magic number: tolid = (NumWh * 10 * 3000 * 10) + 1;  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildNewOrderTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++) {  		for (int cid = 1; cid < 3001; cid++) {  			if (cid < 901) {  				DataRow dr = dt.NewRow ();  				dr ["NO_O_ID"] = tid;  				dr ["NO_D_ID"] = "D_W" + i + "_" + id;  				dr ["NO_W_ID"] = "W_" + i;  				dr ["SEQ_ID"] = tolid;  				tolid++;  				dt.Rows.Add (dr);  			}  			tid++;  		}  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildNewOrderTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++) {  		for (int cid = 1; cid < 3001; cid++) {  			if (cid < 901) {  				DataRow dr = dt.NewRow ();  				dr ["NO_O_ID"] = tid;  				dr ["NO_D_ID"] = "D_W" + i + "_" + id;  				dr ["NO_W_ID"] = "W_" + i;  				dr ["SEQ_ID"] = tolid;  				tolid++;  				dt.Rows.Add (dr);  			}  			tid++;  		}  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildNewOrderTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++) {  		for (int cid = 1; cid < 3001; cid++) {  			if (cid < 901) {  				DataRow dr = dt.NewRow ();  				dr ["NO_O_ID"] = tid;  				dr ["NO_D_ID"] = "D_W" + i + "_" + id;  				dr ["NO_W_ID"] = "W_" + i;  				dr ["SEQ_ID"] = tolid;  				tolid++;  				dt.Rows.Add (dr);  			}  			tid++;  		}  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildNewOrderTable,The following statement contains a magic number: for (int id = 1; id < 11; id++) {  	for (int cid = 1; cid < 3001; cid++) {  		if (cid < 901) {  			DataRow dr = dt.NewRow ();  			dr ["NO_O_ID"] = tid;  			dr ["NO_D_ID"] = "D_W" + i + "_" + id;  			dr ["NO_W_ID"] = "W_" + i;  			dr ["SEQ_ID"] = tolid;  			tolid++;  			dt.Rows.Add (dr);  		}  		tid++;  	}  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildNewOrderTable,The following statement contains a magic number: for (int id = 1; id < 11; id++) {  	for (int cid = 1; cid < 3001; cid++) {  		if (cid < 901) {  			DataRow dr = dt.NewRow ();  			dr ["NO_O_ID"] = tid;  			dr ["NO_D_ID"] = "D_W" + i + "_" + id;  			dr ["NO_W_ID"] = "W_" + i;  			dr ["SEQ_ID"] = tolid;  			tolid++;  			dt.Rows.Add (dr);  		}  		tid++;  	}  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildNewOrderTable,The following statement contains a magic number: for (int id = 1; id < 11; id++) {  	for (int cid = 1; cid < 3001; cid++) {  		if (cid < 901) {  			DataRow dr = dt.NewRow ();  			dr ["NO_O_ID"] = tid;  			dr ["NO_D_ID"] = "D_W" + i + "_" + id;  			dr ["NO_W_ID"] = "W_" + i;  			dr ["SEQ_ID"] = tolid;  			tolid++;  			dt.Rows.Add (dr);  		}  		tid++;  	}  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildNewOrderTable,The following statement contains a magic number: for (int cid = 1; cid < 3001; cid++) {  	if (cid < 901) {  		DataRow dr = dt.NewRow ();  		dr ["NO_O_ID"] = tid;  		dr ["NO_D_ID"] = "D_W" + i + "_" + id;  		dr ["NO_W_ID"] = "W_" + i;  		dr ["SEQ_ID"] = tolid;  		tolid++;  		dt.Rows.Add (dr);  	}  	tid++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildNewOrderTable,The following statement contains a magic number: for (int cid = 1; cid < 3001; cid++) {  	if (cid < 901) {  		DataRow dr = dt.NewRow ();  		dr ["NO_O_ID"] = tid;  		dr ["NO_D_ID"] = "D_W" + i + "_" + id;  		dr ["NO_W_ID"] = "W_" + i;  		dr ["SEQ_ID"] = tolid;  		tolid++;  		dt.Rows.Add (dr);  	}  	tid++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildNewOrderTable,The following statement contains a magic number: if (cid < 901) {  	DataRow dr = dt.NewRow ();  	dr ["NO_O_ID"] = tid;  	dr ["NO_D_ID"] = "D_W" + i + "_" + id;  	dr ["NO_W_ID"] = "W_" + i;  	dr ["SEQ_ID"] = tolid;  	tolid++;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderTable,The following statement contains a magic number: if (NumWh == 1) {  	tid = 1;  }  else {  	tid = (NumWh * 10 * 3000) + 1;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderTable,The following statement contains a magic number: if (NumWh == 1) {  	tid = 1;  }  else {  	tid = (NumWh * 10 * 3000) + 1;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderTable,The following statement contains a magic number: tid = (NumWh * 10 * 3000) + 1;  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderTable,The following statement contains a magic number: tid = (NumWh * 10 * 3000) + 1;  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++) {  		for (int cid = 1; cid < 3001; cid++) {  			DataRow dr = dt.NewRow ();  			dr ["O_ID"] = tid;  			dr ["O_D_ID"] = "D_W" + i + "_" + id;  			dr ["O_W_ID"] = "W_" + i;  			dr ["O_C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  			dr ["O_ENTRY_D"] = currdate.ToLongTimeString ();  			dr ["O_CARRIER_ID"] = "";  			dr ["O_OL_CNT"] = Frnd.Next (5' 15);  			dr ["O_ALL_LOCAL"] = "1";  			dr ["SEQ_ID"] = tid;  			dr ["SOURCE_TIME"] = currdate.ToLongTimeString ();  			tid++;  			dt.Rows.Add (dr);  		}  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++) {  		for (int cid = 1; cid < 3001; cid++) {  			DataRow dr = dt.NewRow ();  			dr ["O_ID"] = tid;  			dr ["O_D_ID"] = "D_W" + i + "_" + id;  			dr ["O_W_ID"] = "W_" + i;  			dr ["O_C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  			dr ["O_ENTRY_D"] = currdate.ToLongTimeString ();  			dr ["O_CARRIER_ID"] = "";  			dr ["O_OL_CNT"] = Frnd.Next (5' 15);  			dr ["O_ALL_LOCAL"] = "1";  			dr ["SEQ_ID"] = tid;  			dr ["SOURCE_TIME"] = currdate.ToLongTimeString ();  			tid++;  			dt.Rows.Add (dr);  		}  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++) {  		for (int cid = 1; cid < 3001; cid++) {  			DataRow dr = dt.NewRow ();  			dr ["O_ID"] = tid;  			dr ["O_D_ID"] = "D_W" + i + "_" + id;  			dr ["O_W_ID"] = "W_" + i;  			dr ["O_C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  			dr ["O_ENTRY_D"] = currdate.ToLongTimeString ();  			dr ["O_CARRIER_ID"] = "";  			dr ["O_OL_CNT"] = Frnd.Next (5' 15);  			dr ["O_ALL_LOCAL"] = "1";  			dr ["SEQ_ID"] = tid;  			dr ["SOURCE_TIME"] = currdate.ToLongTimeString ();  			tid++;  			dt.Rows.Add (dr);  		}  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++) {  		for (int cid = 1; cid < 3001; cid++) {  			DataRow dr = dt.NewRow ();  			dr ["O_ID"] = tid;  			dr ["O_D_ID"] = "D_W" + i + "_" + id;  			dr ["O_W_ID"] = "W_" + i;  			dr ["O_C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  			dr ["O_ENTRY_D"] = currdate.ToLongTimeString ();  			dr ["O_CARRIER_ID"] = "";  			dr ["O_OL_CNT"] = Frnd.Next (5' 15);  			dr ["O_ALL_LOCAL"] = "1";  			dr ["SEQ_ID"] = tid;  			dr ["SOURCE_TIME"] = currdate.ToLongTimeString ();  			tid++;  			dt.Rows.Add (dr);  		}  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderTable,The following statement contains a magic number: for (int id = 1; id < 11; id++) {  	for (int cid = 1; cid < 3001; cid++) {  		DataRow dr = dt.NewRow ();  		dr ["O_ID"] = tid;  		dr ["O_D_ID"] = "D_W" + i + "_" + id;  		dr ["O_W_ID"] = "W_" + i;  		dr ["O_C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  		dr ["O_ENTRY_D"] = currdate.ToLongTimeString ();  		dr ["O_CARRIER_ID"] = "";  		dr ["O_OL_CNT"] = Frnd.Next (5' 15);  		dr ["O_ALL_LOCAL"] = "1";  		dr ["SEQ_ID"] = tid;  		dr ["SOURCE_TIME"] = currdate.ToLongTimeString ();  		tid++;  		dt.Rows.Add (dr);  	}  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderTable,The following statement contains a magic number: for (int id = 1; id < 11; id++) {  	for (int cid = 1; cid < 3001; cid++) {  		DataRow dr = dt.NewRow ();  		dr ["O_ID"] = tid;  		dr ["O_D_ID"] = "D_W" + i + "_" + id;  		dr ["O_W_ID"] = "W_" + i;  		dr ["O_C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  		dr ["O_ENTRY_D"] = currdate.ToLongTimeString ();  		dr ["O_CARRIER_ID"] = "";  		dr ["O_OL_CNT"] = Frnd.Next (5' 15);  		dr ["O_ALL_LOCAL"] = "1";  		dr ["SEQ_ID"] = tid;  		dr ["SOURCE_TIME"] = currdate.ToLongTimeString ();  		tid++;  		dt.Rows.Add (dr);  	}  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderTable,The following statement contains a magic number: for (int id = 1; id < 11; id++) {  	for (int cid = 1; cid < 3001; cid++) {  		DataRow dr = dt.NewRow ();  		dr ["O_ID"] = tid;  		dr ["O_D_ID"] = "D_W" + i + "_" + id;  		dr ["O_W_ID"] = "W_" + i;  		dr ["O_C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  		dr ["O_ENTRY_D"] = currdate.ToLongTimeString ();  		dr ["O_CARRIER_ID"] = "";  		dr ["O_OL_CNT"] = Frnd.Next (5' 15);  		dr ["O_ALL_LOCAL"] = "1";  		dr ["SEQ_ID"] = tid;  		dr ["SOURCE_TIME"] = currdate.ToLongTimeString ();  		tid++;  		dt.Rows.Add (dr);  	}  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderTable,The following statement contains a magic number: for (int id = 1; id < 11; id++) {  	for (int cid = 1; cid < 3001; cid++) {  		DataRow dr = dt.NewRow ();  		dr ["O_ID"] = tid;  		dr ["O_D_ID"] = "D_W" + i + "_" + id;  		dr ["O_W_ID"] = "W_" + i;  		dr ["O_C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  		dr ["O_ENTRY_D"] = currdate.ToLongTimeString ();  		dr ["O_CARRIER_ID"] = "";  		dr ["O_OL_CNT"] = Frnd.Next (5' 15);  		dr ["O_ALL_LOCAL"] = "1";  		dr ["SEQ_ID"] = tid;  		dr ["SOURCE_TIME"] = currdate.ToLongTimeString ();  		tid++;  		dt.Rows.Add (dr);  	}  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderTable,The following statement contains a magic number: for (int cid = 1; cid < 3001; cid++) {  	DataRow dr = dt.NewRow ();  	dr ["O_ID"] = tid;  	dr ["O_D_ID"] = "D_W" + i + "_" + id;  	dr ["O_W_ID"] = "W_" + i;  	dr ["O_C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  	dr ["O_ENTRY_D"] = currdate.ToLongTimeString ();  	dr ["O_CARRIER_ID"] = "";  	dr ["O_OL_CNT"] = Frnd.Next (5' 15);  	dr ["O_ALL_LOCAL"] = "1";  	dr ["SEQ_ID"] = tid;  	dr ["SOURCE_TIME"] = currdate.ToLongTimeString ();  	tid++;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderTable,The following statement contains a magic number: for (int cid = 1; cid < 3001; cid++) {  	DataRow dr = dt.NewRow ();  	dr ["O_ID"] = tid;  	dr ["O_D_ID"] = "D_W" + i + "_" + id;  	dr ["O_W_ID"] = "W_" + i;  	dr ["O_C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  	dr ["O_ENTRY_D"] = currdate.ToLongTimeString ();  	dr ["O_CARRIER_ID"] = "";  	dr ["O_OL_CNT"] = Frnd.Next (5' 15);  	dr ["O_ALL_LOCAL"] = "1";  	dr ["SEQ_ID"] = tid;  	dr ["SOURCE_TIME"] = currdate.ToLongTimeString ();  	tid++;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderTable,The following statement contains a magic number: for (int cid = 1; cid < 3001; cid++) {  	DataRow dr = dt.NewRow ();  	dr ["O_ID"] = tid;  	dr ["O_D_ID"] = "D_W" + i + "_" + id;  	dr ["O_W_ID"] = "W_" + i;  	dr ["O_C_ID"] = "C_W" + i + "_D" + id + "_" + cid;  	dr ["O_ENTRY_D"] = currdate.ToLongTimeString ();  	dr ["O_CARRIER_ID"] = "";  	dr ["O_OL_CNT"] = Frnd.Next (5' 15);  	dr ["O_ALL_LOCAL"] = "1";  	dr ["SEQ_ID"] = tid;  	dr ["SOURCE_TIME"] = currdate.ToLongTimeString ();  	tid++;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderTable,The following statement contains a magic number: dr ["O_OL_CNT"] = Frnd.Next (5' 15);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderTable,The following statement contains a magic number: dr ["O_OL_CNT"] = Frnd.Next (5' 15);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderLineTable,The following statement contains a magic number: if (NumWh == 1) {  	tid = 1;  	tolid = 1;  }  else {  	tid = (NumWh * 10 * 3000) + 1;  	tolid = (NumWh * 10 * 3000 * 10) + 1;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderLineTable,The following statement contains a magic number: if (NumWh == 1) {  	tid = 1;  	tolid = 1;  }  else {  	tid = (NumWh * 10 * 3000) + 1;  	tolid = (NumWh * 10 * 3000 * 10) + 1;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderLineTable,The following statement contains a magic number: if (NumWh == 1) {  	tid = 1;  	tolid = 1;  }  else {  	tid = (NumWh * 10 * 3000) + 1;  	tolid = (NumWh * 10 * 3000 * 10) + 1;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderLineTable,The following statement contains a magic number: if (NumWh == 1) {  	tid = 1;  	tolid = 1;  }  else {  	tid = (NumWh * 10 * 3000) + 1;  	tolid = (NumWh * 10 * 3000 * 10) + 1;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderLineTable,The following statement contains a magic number: if (NumWh == 1) {  	tid = 1;  	tolid = 1;  }  else {  	tid = (NumWh * 10 * 3000) + 1;  	tolid = (NumWh * 10 * 3000 * 10) + 1;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderLineTable,The following statement contains a magic number: tid = (NumWh * 10 * 3000) + 1;  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderLineTable,The following statement contains a magic number: tid = (NumWh * 10 * 3000) + 1;  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderLineTable,The following statement contains a magic number: tolid = (NumWh * 10 * 3000 * 10) + 1;  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderLineTable,The following statement contains a magic number: tolid = (NumWh * 10 * 3000 * 10) + 1;  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderLineTable,The following statement contains a magic number: tolid = (NumWh * 10 * 3000 * 10) + 1;  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderLineTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++) {  		for (int cid = 1; cid < 3001; cid++) {  			for (int olid = 1; olid < 11; olid++) {  				DataRow dr = dt.NewRow ();  				dr ["OL_O_ID"] = tid;  				dr ["OL_D_ID"] = "D_W" + i + "_" + id;  				dr ["OL_W_ID"] = "W_" + i;  				dr ["OL_NUMBER"] = "OL_NUM_" + tolid;  				dr ["OL_I_ID"] = Frnd.Next (1' 100000);  				dr ["OL_SUPPLY_W_ID"] = "W_" + i;  				dr ["OL_DELIVERY_D"] = "01/01/1900 00:00:00.000";  				// SqlDateTime.Null;// sqldatenull;  				dr ["OL_QUANTITY"] = 5;  				dr ["OL_AMOUNT"] = Frnd.Next (1' 9999);  				dr ["OL_DIST_INFO"] = RandomString (24' 24);  				dr ["SEQ_ID"] = tolid;  				tolid++;  				dt.Rows.Add (dr);  			}  			tid++;  		}  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderLineTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++) {  		for (int cid = 1; cid < 3001; cid++) {  			for (int olid = 1; olid < 11; olid++) {  				DataRow dr = dt.NewRow ();  				dr ["OL_O_ID"] = tid;  				dr ["OL_D_ID"] = "D_W" + i + "_" + id;  				dr ["OL_W_ID"] = "W_" + i;  				dr ["OL_NUMBER"] = "OL_NUM_" + tolid;  				dr ["OL_I_ID"] = Frnd.Next (1' 100000);  				dr ["OL_SUPPLY_W_ID"] = "W_" + i;  				dr ["OL_DELIVERY_D"] = "01/01/1900 00:00:00.000";  				// SqlDateTime.Null;// sqldatenull;  				dr ["OL_QUANTITY"] = 5;  				dr ["OL_AMOUNT"] = Frnd.Next (1' 9999);  				dr ["OL_DIST_INFO"] = RandomString (24' 24);  				dr ["SEQ_ID"] = tolid;  				tolid++;  				dt.Rows.Add (dr);  			}  			tid++;  		}  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderLineTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++) {  		for (int cid = 1; cid < 3001; cid++) {  			for (int olid = 1; olid < 11; olid++) {  				DataRow dr = dt.NewRow ();  				dr ["OL_O_ID"] = tid;  				dr ["OL_D_ID"] = "D_W" + i + "_" + id;  				dr ["OL_W_ID"] = "W_" + i;  				dr ["OL_NUMBER"] = "OL_NUM_" + tolid;  				dr ["OL_I_ID"] = Frnd.Next (1' 100000);  				dr ["OL_SUPPLY_W_ID"] = "W_" + i;  				dr ["OL_DELIVERY_D"] = "01/01/1900 00:00:00.000";  				// SqlDateTime.Null;// sqldatenull;  				dr ["OL_QUANTITY"] = 5;  				dr ["OL_AMOUNT"] = Frnd.Next (1' 9999);  				dr ["OL_DIST_INFO"] = RandomString (24' 24);  				dr ["SEQ_ID"] = tolid;  				tolid++;  				dt.Rows.Add (dr);  			}  			tid++;  		}  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderLineTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++) {  		for (int cid = 1; cid < 3001; cid++) {  			for (int olid = 1; olid < 11; olid++) {  				DataRow dr = dt.NewRow ();  				dr ["OL_O_ID"] = tid;  				dr ["OL_D_ID"] = "D_W" + i + "_" + id;  				dr ["OL_W_ID"] = "W_" + i;  				dr ["OL_NUMBER"] = "OL_NUM_" + tolid;  				dr ["OL_I_ID"] = Frnd.Next (1' 100000);  				dr ["OL_SUPPLY_W_ID"] = "W_" + i;  				dr ["OL_DELIVERY_D"] = "01/01/1900 00:00:00.000";  				// SqlDateTime.Null;// sqldatenull;  				dr ["OL_QUANTITY"] = 5;  				dr ["OL_AMOUNT"] = Frnd.Next (1' 9999);  				dr ["OL_DIST_INFO"] = RandomString (24' 24);  				dr ["SEQ_ID"] = tolid;  				tolid++;  				dt.Rows.Add (dr);  			}  			tid++;  		}  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderLineTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++) {  		for (int cid = 1; cid < 3001; cid++) {  			for (int olid = 1; olid < 11; olid++) {  				DataRow dr = dt.NewRow ();  				dr ["OL_O_ID"] = tid;  				dr ["OL_D_ID"] = "D_W" + i + "_" + id;  				dr ["OL_W_ID"] = "W_" + i;  				dr ["OL_NUMBER"] = "OL_NUM_" + tolid;  				dr ["OL_I_ID"] = Frnd.Next (1' 100000);  				dr ["OL_SUPPLY_W_ID"] = "W_" + i;  				dr ["OL_DELIVERY_D"] = "01/01/1900 00:00:00.000";  				// SqlDateTime.Null;// sqldatenull;  				dr ["OL_QUANTITY"] = 5;  				dr ["OL_AMOUNT"] = Frnd.Next (1' 9999);  				dr ["OL_DIST_INFO"] = RandomString (24' 24);  				dr ["SEQ_ID"] = tolid;  				tolid++;  				dt.Rows.Add (dr);  			}  			tid++;  		}  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderLineTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++) {  		for (int cid = 1; cid < 3001; cid++) {  			for (int olid = 1; olid < 11; olid++) {  				DataRow dr = dt.NewRow ();  				dr ["OL_O_ID"] = tid;  				dr ["OL_D_ID"] = "D_W" + i + "_" + id;  				dr ["OL_W_ID"] = "W_" + i;  				dr ["OL_NUMBER"] = "OL_NUM_" + tolid;  				dr ["OL_I_ID"] = Frnd.Next (1' 100000);  				dr ["OL_SUPPLY_W_ID"] = "W_" + i;  				dr ["OL_DELIVERY_D"] = "01/01/1900 00:00:00.000";  				// SqlDateTime.Null;// sqldatenull;  				dr ["OL_QUANTITY"] = 5;  				dr ["OL_AMOUNT"] = Frnd.Next (1' 9999);  				dr ["OL_DIST_INFO"] = RandomString (24' 24);  				dr ["SEQ_ID"] = tolid;  				tolid++;  				dt.Rows.Add (dr);  			}  			tid++;  		}  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderLineTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++) {  		for (int cid = 1; cid < 3001; cid++) {  			for (int olid = 1; olid < 11; olid++) {  				DataRow dr = dt.NewRow ();  				dr ["OL_O_ID"] = tid;  				dr ["OL_D_ID"] = "D_W" + i + "_" + id;  				dr ["OL_W_ID"] = "W_" + i;  				dr ["OL_NUMBER"] = "OL_NUM_" + tolid;  				dr ["OL_I_ID"] = Frnd.Next (1' 100000);  				dr ["OL_SUPPLY_W_ID"] = "W_" + i;  				dr ["OL_DELIVERY_D"] = "01/01/1900 00:00:00.000";  				// SqlDateTime.Null;// sqldatenull;  				dr ["OL_QUANTITY"] = 5;  				dr ["OL_AMOUNT"] = Frnd.Next (1' 9999);  				dr ["OL_DIST_INFO"] = RandomString (24' 24);  				dr ["SEQ_ID"] = tolid;  				tolid++;  				dt.Rows.Add (dr);  			}  			tid++;  		}  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderLineTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 11; id++) {  		for (int cid = 1; cid < 3001; cid++) {  			for (int olid = 1; olid < 11; olid++) {  				DataRow dr = dt.NewRow ();  				dr ["OL_O_ID"] = tid;  				dr ["OL_D_ID"] = "D_W" + i + "_" + id;  				dr ["OL_W_ID"] = "W_" + i;  				dr ["OL_NUMBER"] = "OL_NUM_" + tolid;  				dr ["OL_I_ID"] = Frnd.Next (1' 100000);  				dr ["OL_SUPPLY_W_ID"] = "W_" + i;  				dr ["OL_DELIVERY_D"] = "01/01/1900 00:00:00.000";  				// SqlDateTime.Null;// sqldatenull;  				dr ["OL_QUANTITY"] = 5;  				dr ["OL_AMOUNT"] = Frnd.Next (1' 9999);  				dr ["OL_DIST_INFO"] = RandomString (24' 24);  				dr ["SEQ_ID"] = tolid;  				tolid++;  				dt.Rows.Add (dr);  			}  			tid++;  		}  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderLineTable,The following statement contains a magic number: for (int id = 1; id < 11; id++) {  	for (int cid = 1; cid < 3001; cid++) {  		for (int olid = 1; olid < 11; olid++) {  			DataRow dr = dt.NewRow ();  			dr ["OL_O_ID"] = tid;  			dr ["OL_D_ID"] = "D_W" + i + "_" + id;  			dr ["OL_W_ID"] = "W_" + i;  			dr ["OL_NUMBER"] = "OL_NUM_" + tolid;  			dr ["OL_I_ID"] = Frnd.Next (1' 100000);  			dr ["OL_SUPPLY_W_ID"] = "W_" + i;  			dr ["OL_DELIVERY_D"] = "01/01/1900 00:00:00.000";  			// SqlDateTime.Null;// sqldatenull;  			dr ["OL_QUANTITY"] = 5;  			dr ["OL_AMOUNT"] = Frnd.Next (1' 9999);  			dr ["OL_DIST_INFO"] = RandomString (24' 24);  			dr ["SEQ_ID"] = tolid;  			tolid++;  			dt.Rows.Add (dr);  		}  		tid++;  	}  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderLineTable,The following statement contains a magic number: for (int id = 1; id < 11; id++) {  	for (int cid = 1; cid < 3001; cid++) {  		for (int olid = 1; olid < 11; olid++) {  			DataRow dr = dt.NewRow ();  			dr ["OL_O_ID"] = tid;  			dr ["OL_D_ID"] = "D_W" + i + "_" + id;  			dr ["OL_W_ID"] = "W_" + i;  			dr ["OL_NUMBER"] = "OL_NUM_" + tolid;  			dr ["OL_I_ID"] = Frnd.Next (1' 100000);  			dr ["OL_SUPPLY_W_ID"] = "W_" + i;  			dr ["OL_DELIVERY_D"] = "01/01/1900 00:00:00.000";  			// SqlDateTime.Null;// sqldatenull;  			dr ["OL_QUANTITY"] = 5;  			dr ["OL_AMOUNT"] = Frnd.Next (1' 9999);  			dr ["OL_DIST_INFO"] = RandomString (24' 24);  			dr ["SEQ_ID"] = tolid;  			tolid++;  			dt.Rows.Add (dr);  		}  		tid++;  	}  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderLineTable,The following statement contains a magic number: for (int id = 1; id < 11; id++) {  	for (int cid = 1; cid < 3001; cid++) {  		for (int olid = 1; olid < 11; olid++) {  			DataRow dr = dt.NewRow ();  			dr ["OL_O_ID"] = tid;  			dr ["OL_D_ID"] = "D_W" + i + "_" + id;  			dr ["OL_W_ID"] = "W_" + i;  			dr ["OL_NUMBER"] = "OL_NUM_" + tolid;  			dr ["OL_I_ID"] = Frnd.Next (1' 100000);  			dr ["OL_SUPPLY_W_ID"] = "W_" + i;  			dr ["OL_DELIVERY_D"] = "01/01/1900 00:00:00.000";  			// SqlDateTime.Null;// sqldatenull;  			dr ["OL_QUANTITY"] = 5;  			dr ["OL_AMOUNT"] = Frnd.Next (1' 9999);  			dr ["OL_DIST_INFO"] = RandomString (24' 24);  			dr ["SEQ_ID"] = tolid;  			tolid++;  			dt.Rows.Add (dr);  		}  		tid++;  	}  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderLineTable,The following statement contains a magic number: for (int id = 1; id < 11; id++) {  	for (int cid = 1; cid < 3001; cid++) {  		for (int olid = 1; olid < 11; olid++) {  			DataRow dr = dt.NewRow ();  			dr ["OL_O_ID"] = tid;  			dr ["OL_D_ID"] = "D_W" + i + "_" + id;  			dr ["OL_W_ID"] = "W_" + i;  			dr ["OL_NUMBER"] = "OL_NUM_" + tolid;  			dr ["OL_I_ID"] = Frnd.Next (1' 100000);  			dr ["OL_SUPPLY_W_ID"] = "W_" + i;  			dr ["OL_DELIVERY_D"] = "01/01/1900 00:00:00.000";  			// SqlDateTime.Null;// sqldatenull;  			dr ["OL_QUANTITY"] = 5;  			dr ["OL_AMOUNT"] = Frnd.Next (1' 9999);  			dr ["OL_DIST_INFO"] = RandomString (24' 24);  			dr ["SEQ_ID"] = tolid;  			tolid++;  			dt.Rows.Add (dr);  		}  		tid++;  	}  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderLineTable,The following statement contains a magic number: for (int id = 1; id < 11; id++) {  	for (int cid = 1; cid < 3001; cid++) {  		for (int olid = 1; olid < 11; olid++) {  			DataRow dr = dt.NewRow ();  			dr ["OL_O_ID"] = tid;  			dr ["OL_D_ID"] = "D_W" + i + "_" + id;  			dr ["OL_W_ID"] = "W_" + i;  			dr ["OL_NUMBER"] = "OL_NUM_" + tolid;  			dr ["OL_I_ID"] = Frnd.Next (1' 100000);  			dr ["OL_SUPPLY_W_ID"] = "W_" + i;  			dr ["OL_DELIVERY_D"] = "01/01/1900 00:00:00.000";  			// SqlDateTime.Null;// sqldatenull;  			dr ["OL_QUANTITY"] = 5;  			dr ["OL_AMOUNT"] = Frnd.Next (1' 9999);  			dr ["OL_DIST_INFO"] = RandomString (24' 24);  			dr ["SEQ_ID"] = tolid;  			tolid++;  			dt.Rows.Add (dr);  		}  		tid++;  	}  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderLineTable,The following statement contains a magic number: for (int id = 1; id < 11; id++) {  	for (int cid = 1; cid < 3001; cid++) {  		for (int olid = 1; olid < 11; olid++) {  			DataRow dr = dt.NewRow ();  			dr ["OL_O_ID"] = tid;  			dr ["OL_D_ID"] = "D_W" + i + "_" + id;  			dr ["OL_W_ID"] = "W_" + i;  			dr ["OL_NUMBER"] = "OL_NUM_" + tolid;  			dr ["OL_I_ID"] = Frnd.Next (1' 100000);  			dr ["OL_SUPPLY_W_ID"] = "W_" + i;  			dr ["OL_DELIVERY_D"] = "01/01/1900 00:00:00.000";  			// SqlDateTime.Null;// sqldatenull;  			dr ["OL_QUANTITY"] = 5;  			dr ["OL_AMOUNT"] = Frnd.Next (1' 9999);  			dr ["OL_DIST_INFO"] = RandomString (24' 24);  			dr ["SEQ_ID"] = tolid;  			tolid++;  			dt.Rows.Add (dr);  		}  		tid++;  	}  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderLineTable,The following statement contains a magic number: for (int id = 1; id < 11; id++) {  	for (int cid = 1; cid < 3001; cid++) {  		for (int olid = 1; olid < 11; olid++) {  			DataRow dr = dt.NewRow ();  			dr ["OL_O_ID"] = tid;  			dr ["OL_D_ID"] = "D_W" + i + "_" + id;  			dr ["OL_W_ID"] = "W_" + i;  			dr ["OL_NUMBER"] = "OL_NUM_" + tolid;  			dr ["OL_I_ID"] = Frnd.Next (1' 100000);  			dr ["OL_SUPPLY_W_ID"] = "W_" + i;  			dr ["OL_DELIVERY_D"] = "01/01/1900 00:00:00.000";  			// SqlDateTime.Null;// sqldatenull;  			dr ["OL_QUANTITY"] = 5;  			dr ["OL_AMOUNT"] = Frnd.Next (1' 9999);  			dr ["OL_DIST_INFO"] = RandomString (24' 24);  			dr ["SEQ_ID"] = tolid;  			tolid++;  			dt.Rows.Add (dr);  		}  		tid++;  	}  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderLineTable,The following statement contains a magic number: for (int id = 1; id < 11; id++) {  	for (int cid = 1; cid < 3001; cid++) {  		for (int olid = 1; olid < 11; olid++) {  			DataRow dr = dt.NewRow ();  			dr ["OL_O_ID"] = tid;  			dr ["OL_D_ID"] = "D_W" + i + "_" + id;  			dr ["OL_W_ID"] = "W_" + i;  			dr ["OL_NUMBER"] = "OL_NUM_" + tolid;  			dr ["OL_I_ID"] = Frnd.Next (1' 100000);  			dr ["OL_SUPPLY_W_ID"] = "W_" + i;  			dr ["OL_DELIVERY_D"] = "01/01/1900 00:00:00.000";  			// SqlDateTime.Null;// sqldatenull;  			dr ["OL_QUANTITY"] = 5;  			dr ["OL_AMOUNT"] = Frnd.Next (1' 9999);  			dr ["OL_DIST_INFO"] = RandomString (24' 24);  			dr ["SEQ_ID"] = tolid;  			tolid++;  			dt.Rows.Add (dr);  		}  		tid++;  	}  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderLineTable,The following statement contains a magic number: for (int cid = 1; cid < 3001; cid++) {  	for (int olid = 1; olid < 11; olid++) {  		DataRow dr = dt.NewRow ();  		dr ["OL_O_ID"] = tid;  		dr ["OL_D_ID"] = "D_W" + i + "_" + id;  		dr ["OL_W_ID"] = "W_" + i;  		dr ["OL_NUMBER"] = "OL_NUM_" + tolid;  		dr ["OL_I_ID"] = Frnd.Next (1' 100000);  		dr ["OL_SUPPLY_W_ID"] = "W_" + i;  		dr ["OL_DELIVERY_D"] = "01/01/1900 00:00:00.000";  		// SqlDateTime.Null;// sqldatenull;  		dr ["OL_QUANTITY"] = 5;  		dr ["OL_AMOUNT"] = Frnd.Next (1' 9999);  		dr ["OL_DIST_INFO"] = RandomString (24' 24);  		dr ["SEQ_ID"] = tolid;  		tolid++;  		dt.Rows.Add (dr);  	}  	tid++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderLineTable,The following statement contains a magic number: for (int cid = 1; cid < 3001; cid++) {  	for (int olid = 1; olid < 11; olid++) {  		DataRow dr = dt.NewRow ();  		dr ["OL_O_ID"] = tid;  		dr ["OL_D_ID"] = "D_W" + i + "_" + id;  		dr ["OL_W_ID"] = "W_" + i;  		dr ["OL_NUMBER"] = "OL_NUM_" + tolid;  		dr ["OL_I_ID"] = Frnd.Next (1' 100000);  		dr ["OL_SUPPLY_W_ID"] = "W_" + i;  		dr ["OL_DELIVERY_D"] = "01/01/1900 00:00:00.000";  		// SqlDateTime.Null;// sqldatenull;  		dr ["OL_QUANTITY"] = 5;  		dr ["OL_AMOUNT"] = Frnd.Next (1' 9999);  		dr ["OL_DIST_INFO"] = RandomString (24' 24);  		dr ["SEQ_ID"] = tolid;  		tolid++;  		dt.Rows.Add (dr);  	}  	tid++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderLineTable,The following statement contains a magic number: for (int cid = 1; cid < 3001; cid++) {  	for (int olid = 1; olid < 11; olid++) {  		DataRow dr = dt.NewRow ();  		dr ["OL_O_ID"] = tid;  		dr ["OL_D_ID"] = "D_W" + i + "_" + id;  		dr ["OL_W_ID"] = "W_" + i;  		dr ["OL_NUMBER"] = "OL_NUM_" + tolid;  		dr ["OL_I_ID"] = Frnd.Next (1' 100000);  		dr ["OL_SUPPLY_W_ID"] = "W_" + i;  		dr ["OL_DELIVERY_D"] = "01/01/1900 00:00:00.000";  		// SqlDateTime.Null;// sqldatenull;  		dr ["OL_QUANTITY"] = 5;  		dr ["OL_AMOUNT"] = Frnd.Next (1' 9999);  		dr ["OL_DIST_INFO"] = RandomString (24' 24);  		dr ["SEQ_ID"] = tolid;  		tolid++;  		dt.Rows.Add (dr);  	}  	tid++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderLineTable,The following statement contains a magic number: for (int cid = 1; cid < 3001; cid++) {  	for (int olid = 1; olid < 11; olid++) {  		DataRow dr = dt.NewRow ();  		dr ["OL_O_ID"] = tid;  		dr ["OL_D_ID"] = "D_W" + i + "_" + id;  		dr ["OL_W_ID"] = "W_" + i;  		dr ["OL_NUMBER"] = "OL_NUM_" + tolid;  		dr ["OL_I_ID"] = Frnd.Next (1' 100000);  		dr ["OL_SUPPLY_W_ID"] = "W_" + i;  		dr ["OL_DELIVERY_D"] = "01/01/1900 00:00:00.000";  		// SqlDateTime.Null;// sqldatenull;  		dr ["OL_QUANTITY"] = 5;  		dr ["OL_AMOUNT"] = Frnd.Next (1' 9999);  		dr ["OL_DIST_INFO"] = RandomString (24' 24);  		dr ["SEQ_ID"] = tolid;  		tolid++;  		dt.Rows.Add (dr);  	}  	tid++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderLineTable,The following statement contains a magic number: for (int cid = 1; cid < 3001; cid++) {  	for (int olid = 1; olid < 11; olid++) {  		DataRow dr = dt.NewRow ();  		dr ["OL_O_ID"] = tid;  		dr ["OL_D_ID"] = "D_W" + i + "_" + id;  		dr ["OL_W_ID"] = "W_" + i;  		dr ["OL_NUMBER"] = "OL_NUM_" + tolid;  		dr ["OL_I_ID"] = Frnd.Next (1' 100000);  		dr ["OL_SUPPLY_W_ID"] = "W_" + i;  		dr ["OL_DELIVERY_D"] = "01/01/1900 00:00:00.000";  		// SqlDateTime.Null;// sqldatenull;  		dr ["OL_QUANTITY"] = 5;  		dr ["OL_AMOUNT"] = Frnd.Next (1' 9999);  		dr ["OL_DIST_INFO"] = RandomString (24' 24);  		dr ["SEQ_ID"] = tolid;  		tolid++;  		dt.Rows.Add (dr);  	}  	tid++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderLineTable,The following statement contains a magic number: for (int cid = 1; cid < 3001; cid++) {  	for (int olid = 1; olid < 11; olid++) {  		DataRow dr = dt.NewRow ();  		dr ["OL_O_ID"] = tid;  		dr ["OL_D_ID"] = "D_W" + i + "_" + id;  		dr ["OL_W_ID"] = "W_" + i;  		dr ["OL_NUMBER"] = "OL_NUM_" + tolid;  		dr ["OL_I_ID"] = Frnd.Next (1' 100000);  		dr ["OL_SUPPLY_W_ID"] = "W_" + i;  		dr ["OL_DELIVERY_D"] = "01/01/1900 00:00:00.000";  		// SqlDateTime.Null;// sqldatenull;  		dr ["OL_QUANTITY"] = 5;  		dr ["OL_AMOUNT"] = Frnd.Next (1' 9999);  		dr ["OL_DIST_INFO"] = RandomString (24' 24);  		dr ["SEQ_ID"] = tolid;  		tolid++;  		dt.Rows.Add (dr);  	}  	tid++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderLineTable,The following statement contains a magic number: for (int cid = 1; cid < 3001; cid++) {  	for (int olid = 1; olid < 11; olid++) {  		DataRow dr = dt.NewRow ();  		dr ["OL_O_ID"] = tid;  		dr ["OL_D_ID"] = "D_W" + i + "_" + id;  		dr ["OL_W_ID"] = "W_" + i;  		dr ["OL_NUMBER"] = "OL_NUM_" + tolid;  		dr ["OL_I_ID"] = Frnd.Next (1' 100000);  		dr ["OL_SUPPLY_W_ID"] = "W_" + i;  		dr ["OL_DELIVERY_D"] = "01/01/1900 00:00:00.000";  		// SqlDateTime.Null;// sqldatenull;  		dr ["OL_QUANTITY"] = 5;  		dr ["OL_AMOUNT"] = Frnd.Next (1' 9999);  		dr ["OL_DIST_INFO"] = RandomString (24' 24);  		dr ["SEQ_ID"] = tolid;  		tolid++;  		dt.Rows.Add (dr);  	}  	tid++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderLineTable,The following statement contains a magic number: for (int olid = 1; olid < 11; olid++) {  	DataRow dr = dt.NewRow ();  	dr ["OL_O_ID"] = tid;  	dr ["OL_D_ID"] = "D_W" + i + "_" + id;  	dr ["OL_W_ID"] = "W_" + i;  	dr ["OL_NUMBER"] = "OL_NUM_" + tolid;  	dr ["OL_I_ID"] = Frnd.Next (1' 100000);  	dr ["OL_SUPPLY_W_ID"] = "W_" + i;  	dr ["OL_DELIVERY_D"] = "01/01/1900 00:00:00.000";  	// SqlDateTime.Null;// sqldatenull;  	dr ["OL_QUANTITY"] = 5;  	dr ["OL_AMOUNT"] = Frnd.Next (1' 9999);  	dr ["OL_DIST_INFO"] = RandomString (24' 24);  	dr ["SEQ_ID"] = tolid;  	tolid++;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderLineTable,The following statement contains a magic number: for (int olid = 1; olid < 11; olid++) {  	DataRow dr = dt.NewRow ();  	dr ["OL_O_ID"] = tid;  	dr ["OL_D_ID"] = "D_W" + i + "_" + id;  	dr ["OL_W_ID"] = "W_" + i;  	dr ["OL_NUMBER"] = "OL_NUM_" + tolid;  	dr ["OL_I_ID"] = Frnd.Next (1' 100000);  	dr ["OL_SUPPLY_W_ID"] = "W_" + i;  	dr ["OL_DELIVERY_D"] = "01/01/1900 00:00:00.000";  	// SqlDateTime.Null;// sqldatenull;  	dr ["OL_QUANTITY"] = 5;  	dr ["OL_AMOUNT"] = Frnd.Next (1' 9999);  	dr ["OL_DIST_INFO"] = RandomString (24' 24);  	dr ["SEQ_ID"] = tolid;  	tolid++;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderLineTable,The following statement contains a magic number: for (int olid = 1; olid < 11; olid++) {  	DataRow dr = dt.NewRow ();  	dr ["OL_O_ID"] = tid;  	dr ["OL_D_ID"] = "D_W" + i + "_" + id;  	dr ["OL_W_ID"] = "W_" + i;  	dr ["OL_NUMBER"] = "OL_NUM_" + tolid;  	dr ["OL_I_ID"] = Frnd.Next (1' 100000);  	dr ["OL_SUPPLY_W_ID"] = "W_" + i;  	dr ["OL_DELIVERY_D"] = "01/01/1900 00:00:00.000";  	// SqlDateTime.Null;// sqldatenull;  	dr ["OL_QUANTITY"] = 5;  	dr ["OL_AMOUNT"] = Frnd.Next (1' 9999);  	dr ["OL_DIST_INFO"] = RandomString (24' 24);  	dr ["SEQ_ID"] = tolid;  	tolid++;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderLineTable,The following statement contains a magic number: for (int olid = 1; olid < 11; olid++) {  	DataRow dr = dt.NewRow ();  	dr ["OL_O_ID"] = tid;  	dr ["OL_D_ID"] = "D_W" + i + "_" + id;  	dr ["OL_W_ID"] = "W_" + i;  	dr ["OL_NUMBER"] = "OL_NUM_" + tolid;  	dr ["OL_I_ID"] = Frnd.Next (1' 100000);  	dr ["OL_SUPPLY_W_ID"] = "W_" + i;  	dr ["OL_DELIVERY_D"] = "01/01/1900 00:00:00.000";  	// SqlDateTime.Null;// sqldatenull;  	dr ["OL_QUANTITY"] = 5;  	dr ["OL_AMOUNT"] = Frnd.Next (1' 9999);  	dr ["OL_DIST_INFO"] = RandomString (24' 24);  	dr ["SEQ_ID"] = tolid;  	tolid++;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderLineTable,The following statement contains a magic number: for (int olid = 1; olid < 11; olid++) {  	DataRow dr = dt.NewRow ();  	dr ["OL_O_ID"] = tid;  	dr ["OL_D_ID"] = "D_W" + i + "_" + id;  	dr ["OL_W_ID"] = "W_" + i;  	dr ["OL_NUMBER"] = "OL_NUM_" + tolid;  	dr ["OL_I_ID"] = Frnd.Next (1' 100000);  	dr ["OL_SUPPLY_W_ID"] = "W_" + i;  	dr ["OL_DELIVERY_D"] = "01/01/1900 00:00:00.000";  	// SqlDateTime.Null;// sqldatenull;  	dr ["OL_QUANTITY"] = 5;  	dr ["OL_AMOUNT"] = Frnd.Next (1' 9999);  	dr ["OL_DIST_INFO"] = RandomString (24' 24);  	dr ["SEQ_ID"] = tolid;  	tolid++;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderLineTable,The following statement contains a magic number: for (int olid = 1; olid < 11; olid++) {  	DataRow dr = dt.NewRow ();  	dr ["OL_O_ID"] = tid;  	dr ["OL_D_ID"] = "D_W" + i + "_" + id;  	dr ["OL_W_ID"] = "W_" + i;  	dr ["OL_NUMBER"] = "OL_NUM_" + tolid;  	dr ["OL_I_ID"] = Frnd.Next (1' 100000);  	dr ["OL_SUPPLY_W_ID"] = "W_" + i;  	dr ["OL_DELIVERY_D"] = "01/01/1900 00:00:00.000";  	// SqlDateTime.Null;// sqldatenull;  	dr ["OL_QUANTITY"] = 5;  	dr ["OL_AMOUNT"] = Frnd.Next (1' 9999);  	dr ["OL_DIST_INFO"] = RandomString (24' 24);  	dr ["SEQ_ID"] = tolid;  	tolid++;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderLineTable,The following statement contains a magic number: dr ["OL_I_ID"] = Frnd.Next (1' 100000);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderLineTable,The following statement contains a magic number: dr ["OL_QUANTITY"] = 5;  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderLineTable,The following statement contains a magic number: dr ["OL_AMOUNT"] = Frnd.Next (1' 9999);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderLineTable,The following statement contains a magic number: dr ["OL_DIST_INFO"] = RandomString (24' 24);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildOrderLineTable,The following statement contains a magic number: dr ["OL_DIST_INFO"] = RandomString (24' 24);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 100001; id++) {  		DataRow dr = dt.NewRow ();  		dr ["S_I_ID"] = id;  		dr ["S_W_ID"] = "W_" + i;  		dr ["S_QUANTITY"] = Frnd.Next (10' 100);  		dr ["S_DIST_01"] = RandomString (24' 24);  		dr ["S_DIST_02"] = RandomString (24' 24);  		dr ["S_DIST_03"] = RandomString (24' 24);  		dr ["S_DIST_04"] = RandomString (24' 24);  		dr ["S_DIST_05"] = RandomString (24' 24);  		dr ["S_DIST_06"] = RandomString (24' 24);  		dr ["S_DIST_07"] = RandomString (24' 24);  		dr ["S_DIST_08"] = RandomString (24' 24);  		dr ["S_DIST_09"] = RandomString (24' 24);  		dr ["S_DIST_10"] = RandomString (24' 24);  		dr ["S_YTD"] = 0;  		dr ["S_ORDER_CNT"] = 0;  		dr ["S_REMOTE_CNT"] = 0;  		dr ["S_DATA"] = RandomString (26' 50);  		dr ["SEQ_ID"] = id;  		dt.Rows.Add (dr);  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 100001; id++) {  		DataRow dr = dt.NewRow ();  		dr ["S_I_ID"] = id;  		dr ["S_W_ID"] = "W_" + i;  		dr ["S_QUANTITY"] = Frnd.Next (10' 100);  		dr ["S_DIST_01"] = RandomString (24' 24);  		dr ["S_DIST_02"] = RandomString (24' 24);  		dr ["S_DIST_03"] = RandomString (24' 24);  		dr ["S_DIST_04"] = RandomString (24' 24);  		dr ["S_DIST_05"] = RandomString (24' 24);  		dr ["S_DIST_06"] = RandomString (24' 24);  		dr ["S_DIST_07"] = RandomString (24' 24);  		dr ["S_DIST_08"] = RandomString (24' 24);  		dr ["S_DIST_09"] = RandomString (24' 24);  		dr ["S_DIST_10"] = RandomString (24' 24);  		dr ["S_YTD"] = 0;  		dr ["S_ORDER_CNT"] = 0;  		dr ["S_REMOTE_CNT"] = 0;  		dr ["S_DATA"] = RandomString (26' 50);  		dr ["SEQ_ID"] = id;  		dt.Rows.Add (dr);  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 100001; id++) {  		DataRow dr = dt.NewRow ();  		dr ["S_I_ID"] = id;  		dr ["S_W_ID"] = "W_" + i;  		dr ["S_QUANTITY"] = Frnd.Next (10' 100);  		dr ["S_DIST_01"] = RandomString (24' 24);  		dr ["S_DIST_02"] = RandomString (24' 24);  		dr ["S_DIST_03"] = RandomString (24' 24);  		dr ["S_DIST_04"] = RandomString (24' 24);  		dr ["S_DIST_05"] = RandomString (24' 24);  		dr ["S_DIST_06"] = RandomString (24' 24);  		dr ["S_DIST_07"] = RandomString (24' 24);  		dr ["S_DIST_08"] = RandomString (24' 24);  		dr ["S_DIST_09"] = RandomString (24' 24);  		dr ["S_DIST_10"] = RandomString (24' 24);  		dr ["S_YTD"] = 0;  		dr ["S_ORDER_CNT"] = 0;  		dr ["S_REMOTE_CNT"] = 0;  		dr ["S_DATA"] = RandomString (26' 50);  		dr ["SEQ_ID"] = id;  		dt.Rows.Add (dr);  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 100001; id++) {  		DataRow dr = dt.NewRow ();  		dr ["S_I_ID"] = id;  		dr ["S_W_ID"] = "W_" + i;  		dr ["S_QUANTITY"] = Frnd.Next (10' 100);  		dr ["S_DIST_01"] = RandomString (24' 24);  		dr ["S_DIST_02"] = RandomString (24' 24);  		dr ["S_DIST_03"] = RandomString (24' 24);  		dr ["S_DIST_04"] = RandomString (24' 24);  		dr ["S_DIST_05"] = RandomString (24' 24);  		dr ["S_DIST_06"] = RandomString (24' 24);  		dr ["S_DIST_07"] = RandomString (24' 24);  		dr ["S_DIST_08"] = RandomString (24' 24);  		dr ["S_DIST_09"] = RandomString (24' 24);  		dr ["S_DIST_10"] = RandomString (24' 24);  		dr ["S_YTD"] = 0;  		dr ["S_ORDER_CNT"] = 0;  		dr ["S_REMOTE_CNT"] = 0;  		dr ["S_DATA"] = RandomString (26' 50);  		dr ["SEQ_ID"] = id;  		dt.Rows.Add (dr);  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 100001; id++) {  		DataRow dr = dt.NewRow ();  		dr ["S_I_ID"] = id;  		dr ["S_W_ID"] = "W_" + i;  		dr ["S_QUANTITY"] = Frnd.Next (10' 100);  		dr ["S_DIST_01"] = RandomString (24' 24);  		dr ["S_DIST_02"] = RandomString (24' 24);  		dr ["S_DIST_03"] = RandomString (24' 24);  		dr ["S_DIST_04"] = RandomString (24' 24);  		dr ["S_DIST_05"] = RandomString (24' 24);  		dr ["S_DIST_06"] = RandomString (24' 24);  		dr ["S_DIST_07"] = RandomString (24' 24);  		dr ["S_DIST_08"] = RandomString (24' 24);  		dr ["S_DIST_09"] = RandomString (24' 24);  		dr ["S_DIST_10"] = RandomString (24' 24);  		dr ["S_YTD"] = 0;  		dr ["S_ORDER_CNT"] = 0;  		dr ["S_REMOTE_CNT"] = 0;  		dr ["S_DATA"] = RandomString (26' 50);  		dr ["SEQ_ID"] = id;  		dt.Rows.Add (dr);  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 100001; id++) {  		DataRow dr = dt.NewRow ();  		dr ["S_I_ID"] = id;  		dr ["S_W_ID"] = "W_" + i;  		dr ["S_QUANTITY"] = Frnd.Next (10' 100);  		dr ["S_DIST_01"] = RandomString (24' 24);  		dr ["S_DIST_02"] = RandomString (24' 24);  		dr ["S_DIST_03"] = RandomString (24' 24);  		dr ["S_DIST_04"] = RandomString (24' 24);  		dr ["S_DIST_05"] = RandomString (24' 24);  		dr ["S_DIST_06"] = RandomString (24' 24);  		dr ["S_DIST_07"] = RandomString (24' 24);  		dr ["S_DIST_08"] = RandomString (24' 24);  		dr ["S_DIST_09"] = RandomString (24' 24);  		dr ["S_DIST_10"] = RandomString (24' 24);  		dr ["S_YTD"] = 0;  		dr ["S_ORDER_CNT"] = 0;  		dr ["S_REMOTE_CNT"] = 0;  		dr ["S_DATA"] = RandomString (26' 50);  		dr ["SEQ_ID"] = id;  		dt.Rows.Add (dr);  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 100001; id++) {  		DataRow dr = dt.NewRow ();  		dr ["S_I_ID"] = id;  		dr ["S_W_ID"] = "W_" + i;  		dr ["S_QUANTITY"] = Frnd.Next (10' 100);  		dr ["S_DIST_01"] = RandomString (24' 24);  		dr ["S_DIST_02"] = RandomString (24' 24);  		dr ["S_DIST_03"] = RandomString (24' 24);  		dr ["S_DIST_04"] = RandomString (24' 24);  		dr ["S_DIST_05"] = RandomString (24' 24);  		dr ["S_DIST_06"] = RandomString (24' 24);  		dr ["S_DIST_07"] = RandomString (24' 24);  		dr ["S_DIST_08"] = RandomString (24' 24);  		dr ["S_DIST_09"] = RandomString (24' 24);  		dr ["S_DIST_10"] = RandomString (24' 24);  		dr ["S_YTD"] = 0;  		dr ["S_ORDER_CNT"] = 0;  		dr ["S_REMOTE_CNT"] = 0;  		dr ["S_DATA"] = RandomString (26' 50);  		dr ["SEQ_ID"] = id;  		dt.Rows.Add (dr);  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 100001; id++) {  		DataRow dr = dt.NewRow ();  		dr ["S_I_ID"] = id;  		dr ["S_W_ID"] = "W_" + i;  		dr ["S_QUANTITY"] = Frnd.Next (10' 100);  		dr ["S_DIST_01"] = RandomString (24' 24);  		dr ["S_DIST_02"] = RandomString (24' 24);  		dr ["S_DIST_03"] = RandomString (24' 24);  		dr ["S_DIST_04"] = RandomString (24' 24);  		dr ["S_DIST_05"] = RandomString (24' 24);  		dr ["S_DIST_06"] = RandomString (24' 24);  		dr ["S_DIST_07"] = RandomString (24' 24);  		dr ["S_DIST_08"] = RandomString (24' 24);  		dr ["S_DIST_09"] = RandomString (24' 24);  		dr ["S_DIST_10"] = RandomString (24' 24);  		dr ["S_YTD"] = 0;  		dr ["S_ORDER_CNT"] = 0;  		dr ["S_REMOTE_CNT"] = 0;  		dr ["S_DATA"] = RandomString (26' 50);  		dr ["SEQ_ID"] = id;  		dt.Rows.Add (dr);  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 100001; id++) {  		DataRow dr = dt.NewRow ();  		dr ["S_I_ID"] = id;  		dr ["S_W_ID"] = "W_" + i;  		dr ["S_QUANTITY"] = Frnd.Next (10' 100);  		dr ["S_DIST_01"] = RandomString (24' 24);  		dr ["S_DIST_02"] = RandomString (24' 24);  		dr ["S_DIST_03"] = RandomString (24' 24);  		dr ["S_DIST_04"] = RandomString (24' 24);  		dr ["S_DIST_05"] = RandomString (24' 24);  		dr ["S_DIST_06"] = RandomString (24' 24);  		dr ["S_DIST_07"] = RandomString (24' 24);  		dr ["S_DIST_08"] = RandomString (24' 24);  		dr ["S_DIST_09"] = RandomString (24' 24);  		dr ["S_DIST_10"] = RandomString (24' 24);  		dr ["S_YTD"] = 0;  		dr ["S_ORDER_CNT"] = 0;  		dr ["S_REMOTE_CNT"] = 0;  		dr ["S_DATA"] = RandomString (26' 50);  		dr ["SEQ_ID"] = id;  		dt.Rows.Add (dr);  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 100001; id++) {  		DataRow dr = dt.NewRow ();  		dr ["S_I_ID"] = id;  		dr ["S_W_ID"] = "W_" + i;  		dr ["S_QUANTITY"] = Frnd.Next (10' 100);  		dr ["S_DIST_01"] = RandomString (24' 24);  		dr ["S_DIST_02"] = RandomString (24' 24);  		dr ["S_DIST_03"] = RandomString (24' 24);  		dr ["S_DIST_04"] = RandomString (24' 24);  		dr ["S_DIST_05"] = RandomString (24' 24);  		dr ["S_DIST_06"] = RandomString (24' 24);  		dr ["S_DIST_07"] = RandomString (24' 24);  		dr ["S_DIST_08"] = RandomString (24' 24);  		dr ["S_DIST_09"] = RandomString (24' 24);  		dr ["S_DIST_10"] = RandomString (24' 24);  		dr ["S_YTD"] = 0;  		dr ["S_ORDER_CNT"] = 0;  		dr ["S_REMOTE_CNT"] = 0;  		dr ["S_DATA"] = RandomString (26' 50);  		dr ["SEQ_ID"] = id;  		dt.Rows.Add (dr);  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 100001; id++) {  		DataRow dr = dt.NewRow ();  		dr ["S_I_ID"] = id;  		dr ["S_W_ID"] = "W_" + i;  		dr ["S_QUANTITY"] = Frnd.Next (10' 100);  		dr ["S_DIST_01"] = RandomString (24' 24);  		dr ["S_DIST_02"] = RandomString (24' 24);  		dr ["S_DIST_03"] = RandomString (24' 24);  		dr ["S_DIST_04"] = RandomString (24' 24);  		dr ["S_DIST_05"] = RandomString (24' 24);  		dr ["S_DIST_06"] = RandomString (24' 24);  		dr ["S_DIST_07"] = RandomString (24' 24);  		dr ["S_DIST_08"] = RandomString (24' 24);  		dr ["S_DIST_09"] = RandomString (24' 24);  		dr ["S_DIST_10"] = RandomString (24' 24);  		dr ["S_YTD"] = 0;  		dr ["S_ORDER_CNT"] = 0;  		dr ["S_REMOTE_CNT"] = 0;  		dr ["S_DATA"] = RandomString (26' 50);  		dr ["SEQ_ID"] = id;  		dt.Rows.Add (dr);  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 100001; id++) {  		DataRow dr = dt.NewRow ();  		dr ["S_I_ID"] = id;  		dr ["S_W_ID"] = "W_" + i;  		dr ["S_QUANTITY"] = Frnd.Next (10' 100);  		dr ["S_DIST_01"] = RandomString (24' 24);  		dr ["S_DIST_02"] = RandomString (24' 24);  		dr ["S_DIST_03"] = RandomString (24' 24);  		dr ["S_DIST_04"] = RandomString (24' 24);  		dr ["S_DIST_05"] = RandomString (24' 24);  		dr ["S_DIST_06"] = RandomString (24' 24);  		dr ["S_DIST_07"] = RandomString (24' 24);  		dr ["S_DIST_08"] = RandomString (24' 24);  		dr ["S_DIST_09"] = RandomString (24' 24);  		dr ["S_DIST_10"] = RandomString (24' 24);  		dr ["S_YTD"] = 0;  		dr ["S_ORDER_CNT"] = 0;  		dr ["S_REMOTE_CNT"] = 0;  		dr ["S_DATA"] = RandomString (26' 50);  		dr ["SEQ_ID"] = id;  		dt.Rows.Add (dr);  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 100001; id++) {  		DataRow dr = dt.NewRow ();  		dr ["S_I_ID"] = id;  		dr ["S_W_ID"] = "W_" + i;  		dr ["S_QUANTITY"] = Frnd.Next (10' 100);  		dr ["S_DIST_01"] = RandomString (24' 24);  		dr ["S_DIST_02"] = RandomString (24' 24);  		dr ["S_DIST_03"] = RandomString (24' 24);  		dr ["S_DIST_04"] = RandomString (24' 24);  		dr ["S_DIST_05"] = RandomString (24' 24);  		dr ["S_DIST_06"] = RandomString (24' 24);  		dr ["S_DIST_07"] = RandomString (24' 24);  		dr ["S_DIST_08"] = RandomString (24' 24);  		dr ["S_DIST_09"] = RandomString (24' 24);  		dr ["S_DIST_10"] = RandomString (24' 24);  		dr ["S_YTD"] = 0;  		dr ["S_ORDER_CNT"] = 0;  		dr ["S_REMOTE_CNT"] = 0;  		dr ["S_DATA"] = RandomString (26' 50);  		dr ["SEQ_ID"] = id;  		dt.Rows.Add (dr);  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 100001; id++) {  		DataRow dr = dt.NewRow ();  		dr ["S_I_ID"] = id;  		dr ["S_W_ID"] = "W_" + i;  		dr ["S_QUANTITY"] = Frnd.Next (10' 100);  		dr ["S_DIST_01"] = RandomString (24' 24);  		dr ["S_DIST_02"] = RandomString (24' 24);  		dr ["S_DIST_03"] = RandomString (24' 24);  		dr ["S_DIST_04"] = RandomString (24' 24);  		dr ["S_DIST_05"] = RandomString (24' 24);  		dr ["S_DIST_06"] = RandomString (24' 24);  		dr ["S_DIST_07"] = RandomString (24' 24);  		dr ["S_DIST_08"] = RandomString (24' 24);  		dr ["S_DIST_09"] = RandomString (24' 24);  		dr ["S_DIST_10"] = RandomString (24' 24);  		dr ["S_YTD"] = 0;  		dr ["S_ORDER_CNT"] = 0;  		dr ["S_REMOTE_CNT"] = 0;  		dr ["S_DATA"] = RandomString (26' 50);  		dr ["SEQ_ID"] = id;  		dt.Rows.Add (dr);  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 100001; id++) {  		DataRow dr = dt.NewRow ();  		dr ["S_I_ID"] = id;  		dr ["S_W_ID"] = "W_" + i;  		dr ["S_QUANTITY"] = Frnd.Next (10' 100);  		dr ["S_DIST_01"] = RandomString (24' 24);  		dr ["S_DIST_02"] = RandomString (24' 24);  		dr ["S_DIST_03"] = RandomString (24' 24);  		dr ["S_DIST_04"] = RandomString (24' 24);  		dr ["S_DIST_05"] = RandomString (24' 24);  		dr ["S_DIST_06"] = RandomString (24' 24);  		dr ["S_DIST_07"] = RandomString (24' 24);  		dr ["S_DIST_08"] = RandomString (24' 24);  		dr ["S_DIST_09"] = RandomString (24' 24);  		dr ["S_DIST_10"] = RandomString (24' 24);  		dr ["S_YTD"] = 0;  		dr ["S_ORDER_CNT"] = 0;  		dr ["S_REMOTE_CNT"] = 0;  		dr ["S_DATA"] = RandomString (26' 50);  		dr ["SEQ_ID"] = id;  		dt.Rows.Add (dr);  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 100001; id++) {  		DataRow dr = dt.NewRow ();  		dr ["S_I_ID"] = id;  		dr ["S_W_ID"] = "W_" + i;  		dr ["S_QUANTITY"] = Frnd.Next (10' 100);  		dr ["S_DIST_01"] = RandomString (24' 24);  		dr ["S_DIST_02"] = RandomString (24' 24);  		dr ["S_DIST_03"] = RandomString (24' 24);  		dr ["S_DIST_04"] = RandomString (24' 24);  		dr ["S_DIST_05"] = RandomString (24' 24);  		dr ["S_DIST_06"] = RandomString (24' 24);  		dr ["S_DIST_07"] = RandomString (24' 24);  		dr ["S_DIST_08"] = RandomString (24' 24);  		dr ["S_DIST_09"] = RandomString (24' 24);  		dr ["S_DIST_10"] = RandomString (24' 24);  		dr ["S_YTD"] = 0;  		dr ["S_ORDER_CNT"] = 0;  		dr ["S_REMOTE_CNT"] = 0;  		dr ["S_DATA"] = RandomString (26' 50);  		dr ["SEQ_ID"] = id;  		dt.Rows.Add (dr);  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 100001; id++) {  		DataRow dr = dt.NewRow ();  		dr ["S_I_ID"] = id;  		dr ["S_W_ID"] = "W_" + i;  		dr ["S_QUANTITY"] = Frnd.Next (10' 100);  		dr ["S_DIST_01"] = RandomString (24' 24);  		dr ["S_DIST_02"] = RandomString (24' 24);  		dr ["S_DIST_03"] = RandomString (24' 24);  		dr ["S_DIST_04"] = RandomString (24' 24);  		dr ["S_DIST_05"] = RandomString (24' 24);  		dr ["S_DIST_06"] = RandomString (24' 24);  		dr ["S_DIST_07"] = RandomString (24' 24);  		dr ["S_DIST_08"] = RandomString (24' 24);  		dr ["S_DIST_09"] = RandomString (24' 24);  		dr ["S_DIST_10"] = RandomString (24' 24);  		dr ["S_YTD"] = 0;  		dr ["S_ORDER_CNT"] = 0;  		dr ["S_REMOTE_CNT"] = 0;  		dr ["S_DATA"] = RandomString (26' 50);  		dr ["SEQ_ID"] = id;  		dt.Rows.Add (dr);  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 100001; id++) {  		DataRow dr = dt.NewRow ();  		dr ["S_I_ID"] = id;  		dr ["S_W_ID"] = "W_" + i;  		dr ["S_QUANTITY"] = Frnd.Next (10' 100);  		dr ["S_DIST_01"] = RandomString (24' 24);  		dr ["S_DIST_02"] = RandomString (24' 24);  		dr ["S_DIST_03"] = RandomString (24' 24);  		dr ["S_DIST_04"] = RandomString (24' 24);  		dr ["S_DIST_05"] = RandomString (24' 24);  		dr ["S_DIST_06"] = RandomString (24' 24);  		dr ["S_DIST_07"] = RandomString (24' 24);  		dr ["S_DIST_08"] = RandomString (24' 24);  		dr ["S_DIST_09"] = RandomString (24' 24);  		dr ["S_DIST_10"] = RandomString (24' 24);  		dr ["S_YTD"] = 0;  		dr ["S_ORDER_CNT"] = 0;  		dr ["S_REMOTE_CNT"] = 0;  		dr ["S_DATA"] = RandomString (26' 50);  		dr ["SEQ_ID"] = id;  		dt.Rows.Add (dr);  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 100001; id++) {  		DataRow dr = dt.NewRow ();  		dr ["S_I_ID"] = id;  		dr ["S_W_ID"] = "W_" + i;  		dr ["S_QUANTITY"] = Frnd.Next (10' 100);  		dr ["S_DIST_01"] = RandomString (24' 24);  		dr ["S_DIST_02"] = RandomString (24' 24);  		dr ["S_DIST_03"] = RandomString (24' 24);  		dr ["S_DIST_04"] = RandomString (24' 24);  		dr ["S_DIST_05"] = RandomString (24' 24);  		dr ["S_DIST_06"] = RandomString (24' 24);  		dr ["S_DIST_07"] = RandomString (24' 24);  		dr ["S_DIST_08"] = RandomString (24' 24);  		dr ["S_DIST_09"] = RandomString (24' 24);  		dr ["S_DIST_10"] = RandomString (24' 24);  		dr ["S_YTD"] = 0;  		dr ["S_ORDER_CNT"] = 0;  		dr ["S_REMOTE_CNT"] = 0;  		dr ["S_DATA"] = RandomString (26' 50);  		dr ["SEQ_ID"] = id;  		dt.Rows.Add (dr);  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 100001; id++) {  		DataRow dr = dt.NewRow ();  		dr ["S_I_ID"] = id;  		dr ["S_W_ID"] = "W_" + i;  		dr ["S_QUANTITY"] = Frnd.Next (10' 100);  		dr ["S_DIST_01"] = RandomString (24' 24);  		dr ["S_DIST_02"] = RandomString (24' 24);  		dr ["S_DIST_03"] = RandomString (24' 24);  		dr ["S_DIST_04"] = RandomString (24' 24);  		dr ["S_DIST_05"] = RandomString (24' 24);  		dr ["S_DIST_06"] = RandomString (24' 24);  		dr ["S_DIST_07"] = RandomString (24' 24);  		dr ["S_DIST_08"] = RandomString (24' 24);  		dr ["S_DIST_09"] = RandomString (24' 24);  		dr ["S_DIST_10"] = RandomString (24' 24);  		dr ["S_YTD"] = 0;  		dr ["S_ORDER_CNT"] = 0;  		dr ["S_REMOTE_CNT"] = 0;  		dr ["S_DATA"] = RandomString (26' 50);  		dr ["SEQ_ID"] = id;  		dt.Rows.Add (dr);  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 100001; id++) {  		DataRow dr = dt.NewRow ();  		dr ["S_I_ID"] = id;  		dr ["S_W_ID"] = "W_" + i;  		dr ["S_QUANTITY"] = Frnd.Next (10' 100);  		dr ["S_DIST_01"] = RandomString (24' 24);  		dr ["S_DIST_02"] = RandomString (24' 24);  		dr ["S_DIST_03"] = RandomString (24' 24);  		dr ["S_DIST_04"] = RandomString (24' 24);  		dr ["S_DIST_05"] = RandomString (24' 24);  		dr ["S_DIST_06"] = RandomString (24' 24);  		dr ["S_DIST_07"] = RandomString (24' 24);  		dr ["S_DIST_08"] = RandomString (24' 24);  		dr ["S_DIST_09"] = RandomString (24' 24);  		dr ["S_DIST_10"] = RandomString (24' 24);  		dr ["S_YTD"] = 0;  		dr ["S_ORDER_CNT"] = 0;  		dr ["S_REMOTE_CNT"] = 0;  		dr ["S_DATA"] = RandomString (26' 50);  		dr ["SEQ_ID"] = id;  		dt.Rows.Add (dr);  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 100001; id++) {  		DataRow dr = dt.NewRow ();  		dr ["S_I_ID"] = id;  		dr ["S_W_ID"] = "W_" + i;  		dr ["S_QUANTITY"] = Frnd.Next (10' 100);  		dr ["S_DIST_01"] = RandomString (24' 24);  		dr ["S_DIST_02"] = RandomString (24' 24);  		dr ["S_DIST_03"] = RandomString (24' 24);  		dr ["S_DIST_04"] = RandomString (24' 24);  		dr ["S_DIST_05"] = RandomString (24' 24);  		dr ["S_DIST_06"] = RandomString (24' 24);  		dr ["S_DIST_07"] = RandomString (24' 24);  		dr ["S_DIST_08"] = RandomString (24' 24);  		dr ["S_DIST_09"] = RandomString (24' 24);  		dr ["S_DIST_10"] = RandomString (24' 24);  		dr ["S_YTD"] = 0;  		dr ["S_ORDER_CNT"] = 0;  		dr ["S_REMOTE_CNT"] = 0;  		dr ["S_DATA"] = RandomString (26' 50);  		dr ["SEQ_ID"] = id;  		dt.Rows.Add (dr);  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 100001; id++) {  		DataRow dr = dt.NewRow ();  		dr ["S_I_ID"] = id;  		dr ["S_W_ID"] = "W_" + i;  		dr ["S_QUANTITY"] = Frnd.Next (10' 100);  		dr ["S_DIST_01"] = RandomString (24' 24);  		dr ["S_DIST_02"] = RandomString (24' 24);  		dr ["S_DIST_03"] = RandomString (24' 24);  		dr ["S_DIST_04"] = RandomString (24' 24);  		dr ["S_DIST_05"] = RandomString (24' 24);  		dr ["S_DIST_06"] = RandomString (24' 24);  		dr ["S_DIST_07"] = RandomString (24' 24);  		dr ["S_DIST_08"] = RandomString (24' 24);  		dr ["S_DIST_09"] = RandomString (24' 24);  		dr ["S_DIST_10"] = RandomString (24' 24);  		dr ["S_YTD"] = 0;  		dr ["S_ORDER_CNT"] = 0;  		dr ["S_REMOTE_CNT"] = 0;  		dr ["S_DATA"] = RandomString (26' 50);  		dr ["SEQ_ID"] = id;  		dt.Rows.Add (dr);  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 100001; id++) {  		DataRow dr = dt.NewRow ();  		dr ["S_I_ID"] = id;  		dr ["S_W_ID"] = "W_" + i;  		dr ["S_QUANTITY"] = Frnd.Next (10' 100);  		dr ["S_DIST_01"] = RandomString (24' 24);  		dr ["S_DIST_02"] = RandomString (24' 24);  		dr ["S_DIST_03"] = RandomString (24' 24);  		dr ["S_DIST_04"] = RandomString (24' 24);  		dr ["S_DIST_05"] = RandomString (24' 24);  		dr ["S_DIST_06"] = RandomString (24' 24);  		dr ["S_DIST_07"] = RandomString (24' 24);  		dr ["S_DIST_08"] = RandomString (24' 24);  		dr ["S_DIST_09"] = RandomString (24' 24);  		dr ["S_DIST_10"] = RandomString (24' 24);  		dr ["S_YTD"] = 0;  		dr ["S_ORDER_CNT"] = 0;  		dr ["S_REMOTE_CNT"] = 0;  		dr ["S_DATA"] = RandomString (26' 50);  		dr ["SEQ_ID"] = id;  		dt.Rows.Add (dr);  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	for (int id = 1; id < 100001; id++) {  		DataRow dr = dt.NewRow ();  		dr ["S_I_ID"] = id;  		dr ["S_W_ID"] = "W_" + i;  		dr ["S_QUANTITY"] = Frnd.Next (10' 100);  		dr ["S_DIST_01"] = RandomString (24' 24);  		dr ["S_DIST_02"] = RandomString (24' 24);  		dr ["S_DIST_03"] = RandomString (24' 24);  		dr ["S_DIST_04"] = RandomString (24' 24);  		dr ["S_DIST_05"] = RandomString (24' 24);  		dr ["S_DIST_06"] = RandomString (24' 24);  		dr ["S_DIST_07"] = RandomString (24' 24);  		dr ["S_DIST_08"] = RandomString (24' 24);  		dr ["S_DIST_09"] = RandomString (24' 24);  		dr ["S_DIST_10"] = RandomString (24' 24);  		dr ["S_YTD"] = 0;  		dr ["S_ORDER_CNT"] = 0;  		dr ["S_REMOTE_CNT"] = 0;  		dr ["S_DATA"] = RandomString (26' 50);  		dr ["SEQ_ID"] = id;  		dt.Rows.Add (dr);  	}  	bulkCopy.WriteToServer (dt);  	dt.Clear ();  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: for (int id = 1; id < 100001; id++) {  	DataRow dr = dt.NewRow ();  	dr ["S_I_ID"] = id;  	dr ["S_W_ID"] = "W_" + i;  	dr ["S_QUANTITY"] = Frnd.Next (10' 100);  	dr ["S_DIST_01"] = RandomString (24' 24);  	dr ["S_DIST_02"] = RandomString (24' 24);  	dr ["S_DIST_03"] = RandomString (24' 24);  	dr ["S_DIST_04"] = RandomString (24' 24);  	dr ["S_DIST_05"] = RandomString (24' 24);  	dr ["S_DIST_06"] = RandomString (24' 24);  	dr ["S_DIST_07"] = RandomString (24' 24);  	dr ["S_DIST_08"] = RandomString (24' 24);  	dr ["S_DIST_09"] = RandomString (24' 24);  	dr ["S_DIST_10"] = RandomString (24' 24);  	dr ["S_YTD"] = 0;  	dr ["S_ORDER_CNT"] = 0;  	dr ["S_REMOTE_CNT"] = 0;  	dr ["S_DATA"] = RandomString (26' 50);  	dr ["SEQ_ID"] = id;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: for (int id = 1; id < 100001; id++) {  	DataRow dr = dt.NewRow ();  	dr ["S_I_ID"] = id;  	dr ["S_W_ID"] = "W_" + i;  	dr ["S_QUANTITY"] = Frnd.Next (10' 100);  	dr ["S_DIST_01"] = RandomString (24' 24);  	dr ["S_DIST_02"] = RandomString (24' 24);  	dr ["S_DIST_03"] = RandomString (24' 24);  	dr ["S_DIST_04"] = RandomString (24' 24);  	dr ["S_DIST_05"] = RandomString (24' 24);  	dr ["S_DIST_06"] = RandomString (24' 24);  	dr ["S_DIST_07"] = RandomString (24' 24);  	dr ["S_DIST_08"] = RandomString (24' 24);  	dr ["S_DIST_09"] = RandomString (24' 24);  	dr ["S_DIST_10"] = RandomString (24' 24);  	dr ["S_YTD"] = 0;  	dr ["S_ORDER_CNT"] = 0;  	dr ["S_REMOTE_CNT"] = 0;  	dr ["S_DATA"] = RandomString (26' 50);  	dr ["SEQ_ID"] = id;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: for (int id = 1; id < 100001; id++) {  	DataRow dr = dt.NewRow ();  	dr ["S_I_ID"] = id;  	dr ["S_W_ID"] = "W_" + i;  	dr ["S_QUANTITY"] = Frnd.Next (10' 100);  	dr ["S_DIST_01"] = RandomString (24' 24);  	dr ["S_DIST_02"] = RandomString (24' 24);  	dr ["S_DIST_03"] = RandomString (24' 24);  	dr ["S_DIST_04"] = RandomString (24' 24);  	dr ["S_DIST_05"] = RandomString (24' 24);  	dr ["S_DIST_06"] = RandomString (24' 24);  	dr ["S_DIST_07"] = RandomString (24' 24);  	dr ["S_DIST_08"] = RandomString (24' 24);  	dr ["S_DIST_09"] = RandomString (24' 24);  	dr ["S_DIST_10"] = RandomString (24' 24);  	dr ["S_YTD"] = 0;  	dr ["S_ORDER_CNT"] = 0;  	dr ["S_REMOTE_CNT"] = 0;  	dr ["S_DATA"] = RandomString (26' 50);  	dr ["SEQ_ID"] = id;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: for (int id = 1; id < 100001; id++) {  	DataRow dr = dt.NewRow ();  	dr ["S_I_ID"] = id;  	dr ["S_W_ID"] = "W_" + i;  	dr ["S_QUANTITY"] = Frnd.Next (10' 100);  	dr ["S_DIST_01"] = RandomString (24' 24);  	dr ["S_DIST_02"] = RandomString (24' 24);  	dr ["S_DIST_03"] = RandomString (24' 24);  	dr ["S_DIST_04"] = RandomString (24' 24);  	dr ["S_DIST_05"] = RandomString (24' 24);  	dr ["S_DIST_06"] = RandomString (24' 24);  	dr ["S_DIST_07"] = RandomString (24' 24);  	dr ["S_DIST_08"] = RandomString (24' 24);  	dr ["S_DIST_09"] = RandomString (24' 24);  	dr ["S_DIST_10"] = RandomString (24' 24);  	dr ["S_YTD"] = 0;  	dr ["S_ORDER_CNT"] = 0;  	dr ["S_REMOTE_CNT"] = 0;  	dr ["S_DATA"] = RandomString (26' 50);  	dr ["SEQ_ID"] = id;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: for (int id = 1; id < 100001; id++) {  	DataRow dr = dt.NewRow ();  	dr ["S_I_ID"] = id;  	dr ["S_W_ID"] = "W_" + i;  	dr ["S_QUANTITY"] = Frnd.Next (10' 100);  	dr ["S_DIST_01"] = RandomString (24' 24);  	dr ["S_DIST_02"] = RandomString (24' 24);  	dr ["S_DIST_03"] = RandomString (24' 24);  	dr ["S_DIST_04"] = RandomString (24' 24);  	dr ["S_DIST_05"] = RandomString (24' 24);  	dr ["S_DIST_06"] = RandomString (24' 24);  	dr ["S_DIST_07"] = RandomString (24' 24);  	dr ["S_DIST_08"] = RandomString (24' 24);  	dr ["S_DIST_09"] = RandomString (24' 24);  	dr ["S_DIST_10"] = RandomString (24' 24);  	dr ["S_YTD"] = 0;  	dr ["S_ORDER_CNT"] = 0;  	dr ["S_REMOTE_CNT"] = 0;  	dr ["S_DATA"] = RandomString (26' 50);  	dr ["SEQ_ID"] = id;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: for (int id = 1; id < 100001; id++) {  	DataRow dr = dt.NewRow ();  	dr ["S_I_ID"] = id;  	dr ["S_W_ID"] = "W_" + i;  	dr ["S_QUANTITY"] = Frnd.Next (10' 100);  	dr ["S_DIST_01"] = RandomString (24' 24);  	dr ["S_DIST_02"] = RandomString (24' 24);  	dr ["S_DIST_03"] = RandomString (24' 24);  	dr ["S_DIST_04"] = RandomString (24' 24);  	dr ["S_DIST_05"] = RandomString (24' 24);  	dr ["S_DIST_06"] = RandomString (24' 24);  	dr ["S_DIST_07"] = RandomString (24' 24);  	dr ["S_DIST_08"] = RandomString (24' 24);  	dr ["S_DIST_09"] = RandomString (24' 24);  	dr ["S_DIST_10"] = RandomString (24' 24);  	dr ["S_YTD"] = 0;  	dr ["S_ORDER_CNT"] = 0;  	dr ["S_REMOTE_CNT"] = 0;  	dr ["S_DATA"] = RandomString (26' 50);  	dr ["SEQ_ID"] = id;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: for (int id = 1; id < 100001; id++) {  	DataRow dr = dt.NewRow ();  	dr ["S_I_ID"] = id;  	dr ["S_W_ID"] = "W_" + i;  	dr ["S_QUANTITY"] = Frnd.Next (10' 100);  	dr ["S_DIST_01"] = RandomString (24' 24);  	dr ["S_DIST_02"] = RandomString (24' 24);  	dr ["S_DIST_03"] = RandomString (24' 24);  	dr ["S_DIST_04"] = RandomString (24' 24);  	dr ["S_DIST_05"] = RandomString (24' 24);  	dr ["S_DIST_06"] = RandomString (24' 24);  	dr ["S_DIST_07"] = RandomString (24' 24);  	dr ["S_DIST_08"] = RandomString (24' 24);  	dr ["S_DIST_09"] = RandomString (24' 24);  	dr ["S_DIST_10"] = RandomString (24' 24);  	dr ["S_YTD"] = 0;  	dr ["S_ORDER_CNT"] = 0;  	dr ["S_REMOTE_CNT"] = 0;  	dr ["S_DATA"] = RandomString (26' 50);  	dr ["SEQ_ID"] = id;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: for (int id = 1; id < 100001; id++) {  	DataRow dr = dt.NewRow ();  	dr ["S_I_ID"] = id;  	dr ["S_W_ID"] = "W_" + i;  	dr ["S_QUANTITY"] = Frnd.Next (10' 100);  	dr ["S_DIST_01"] = RandomString (24' 24);  	dr ["S_DIST_02"] = RandomString (24' 24);  	dr ["S_DIST_03"] = RandomString (24' 24);  	dr ["S_DIST_04"] = RandomString (24' 24);  	dr ["S_DIST_05"] = RandomString (24' 24);  	dr ["S_DIST_06"] = RandomString (24' 24);  	dr ["S_DIST_07"] = RandomString (24' 24);  	dr ["S_DIST_08"] = RandomString (24' 24);  	dr ["S_DIST_09"] = RandomString (24' 24);  	dr ["S_DIST_10"] = RandomString (24' 24);  	dr ["S_YTD"] = 0;  	dr ["S_ORDER_CNT"] = 0;  	dr ["S_REMOTE_CNT"] = 0;  	dr ["S_DATA"] = RandomString (26' 50);  	dr ["SEQ_ID"] = id;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: for (int id = 1; id < 100001; id++) {  	DataRow dr = dt.NewRow ();  	dr ["S_I_ID"] = id;  	dr ["S_W_ID"] = "W_" + i;  	dr ["S_QUANTITY"] = Frnd.Next (10' 100);  	dr ["S_DIST_01"] = RandomString (24' 24);  	dr ["S_DIST_02"] = RandomString (24' 24);  	dr ["S_DIST_03"] = RandomString (24' 24);  	dr ["S_DIST_04"] = RandomString (24' 24);  	dr ["S_DIST_05"] = RandomString (24' 24);  	dr ["S_DIST_06"] = RandomString (24' 24);  	dr ["S_DIST_07"] = RandomString (24' 24);  	dr ["S_DIST_08"] = RandomString (24' 24);  	dr ["S_DIST_09"] = RandomString (24' 24);  	dr ["S_DIST_10"] = RandomString (24' 24);  	dr ["S_YTD"] = 0;  	dr ["S_ORDER_CNT"] = 0;  	dr ["S_REMOTE_CNT"] = 0;  	dr ["S_DATA"] = RandomString (26' 50);  	dr ["SEQ_ID"] = id;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: for (int id = 1; id < 100001; id++) {  	DataRow dr = dt.NewRow ();  	dr ["S_I_ID"] = id;  	dr ["S_W_ID"] = "W_" + i;  	dr ["S_QUANTITY"] = Frnd.Next (10' 100);  	dr ["S_DIST_01"] = RandomString (24' 24);  	dr ["S_DIST_02"] = RandomString (24' 24);  	dr ["S_DIST_03"] = RandomString (24' 24);  	dr ["S_DIST_04"] = RandomString (24' 24);  	dr ["S_DIST_05"] = RandomString (24' 24);  	dr ["S_DIST_06"] = RandomString (24' 24);  	dr ["S_DIST_07"] = RandomString (24' 24);  	dr ["S_DIST_08"] = RandomString (24' 24);  	dr ["S_DIST_09"] = RandomString (24' 24);  	dr ["S_DIST_10"] = RandomString (24' 24);  	dr ["S_YTD"] = 0;  	dr ["S_ORDER_CNT"] = 0;  	dr ["S_REMOTE_CNT"] = 0;  	dr ["S_DATA"] = RandomString (26' 50);  	dr ["SEQ_ID"] = id;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: for (int id = 1; id < 100001; id++) {  	DataRow dr = dt.NewRow ();  	dr ["S_I_ID"] = id;  	dr ["S_W_ID"] = "W_" + i;  	dr ["S_QUANTITY"] = Frnd.Next (10' 100);  	dr ["S_DIST_01"] = RandomString (24' 24);  	dr ["S_DIST_02"] = RandomString (24' 24);  	dr ["S_DIST_03"] = RandomString (24' 24);  	dr ["S_DIST_04"] = RandomString (24' 24);  	dr ["S_DIST_05"] = RandomString (24' 24);  	dr ["S_DIST_06"] = RandomString (24' 24);  	dr ["S_DIST_07"] = RandomString (24' 24);  	dr ["S_DIST_08"] = RandomString (24' 24);  	dr ["S_DIST_09"] = RandomString (24' 24);  	dr ["S_DIST_10"] = RandomString (24' 24);  	dr ["S_YTD"] = 0;  	dr ["S_ORDER_CNT"] = 0;  	dr ["S_REMOTE_CNT"] = 0;  	dr ["S_DATA"] = RandomString (26' 50);  	dr ["SEQ_ID"] = id;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: for (int id = 1; id < 100001; id++) {  	DataRow dr = dt.NewRow ();  	dr ["S_I_ID"] = id;  	dr ["S_W_ID"] = "W_" + i;  	dr ["S_QUANTITY"] = Frnd.Next (10' 100);  	dr ["S_DIST_01"] = RandomString (24' 24);  	dr ["S_DIST_02"] = RandomString (24' 24);  	dr ["S_DIST_03"] = RandomString (24' 24);  	dr ["S_DIST_04"] = RandomString (24' 24);  	dr ["S_DIST_05"] = RandomString (24' 24);  	dr ["S_DIST_06"] = RandomString (24' 24);  	dr ["S_DIST_07"] = RandomString (24' 24);  	dr ["S_DIST_08"] = RandomString (24' 24);  	dr ["S_DIST_09"] = RandomString (24' 24);  	dr ["S_DIST_10"] = RandomString (24' 24);  	dr ["S_YTD"] = 0;  	dr ["S_ORDER_CNT"] = 0;  	dr ["S_REMOTE_CNT"] = 0;  	dr ["S_DATA"] = RandomString (26' 50);  	dr ["SEQ_ID"] = id;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: for (int id = 1; id < 100001; id++) {  	DataRow dr = dt.NewRow ();  	dr ["S_I_ID"] = id;  	dr ["S_W_ID"] = "W_" + i;  	dr ["S_QUANTITY"] = Frnd.Next (10' 100);  	dr ["S_DIST_01"] = RandomString (24' 24);  	dr ["S_DIST_02"] = RandomString (24' 24);  	dr ["S_DIST_03"] = RandomString (24' 24);  	dr ["S_DIST_04"] = RandomString (24' 24);  	dr ["S_DIST_05"] = RandomString (24' 24);  	dr ["S_DIST_06"] = RandomString (24' 24);  	dr ["S_DIST_07"] = RandomString (24' 24);  	dr ["S_DIST_08"] = RandomString (24' 24);  	dr ["S_DIST_09"] = RandomString (24' 24);  	dr ["S_DIST_10"] = RandomString (24' 24);  	dr ["S_YTD"] = 0;  	dr ["S_ORDER_CNT"] = 0;  	dr ["S_REMOTE_CNT"] = 0;  	dr ["S_DATA"] = RandomString (26' 50);  	dr ["SEQ_ID"] = id;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: for (int id = 1; id < 100001; id++) {  	DataRow dr = dt.NewRow ();  	dr ["S_I_ID"] = id;  	dr ["S_W_ID"] = "W_" + i;  	dr ["S_QUANTITY"] = Frnd.Next (10' 100);  	dr ["S_DIST_01"] = RandomString (24' 24);  	dr ["S_DIST_02"] = RandomString (24' 24);  	dr ["S_DIST_03"] = RandomString (24' 24);  	dr ["S_DIST_04"] = RandomString (24' 24);  	dr ["S_DIST_05"] = RandomString (24' 24);  	dr ["S_DIST_06"] = RandomString (24' 24);  	dr ["S_DIST_07"] = RandomString (24' 24);  	dr ["S_DIST_08"] = RandomString (24' 24);  	dr ["S_DIST_09"] = RandomString (24' 24);  	dr ["S_DIST_10"] = RandomString (24' 24);  	dr ["S_YTD"] = 0;  	dr ["S_ORDER_CNT"] = 0;  	dr ["S_REMOTE_CNT"] = 0;  	dr ["S_DATA"] = RandomString (26' 50);  	dr ["SEQ_ID"] = id;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: for (int id = 1; id < 100001; id++) {  	DataRow dr = dt.NewRow ();  	dr ["S_I_ID"] = id;  	dr ["S_W_ID"] = "W_" + i;  	dr ["S_QUANTITY"] = Frnd.Next (10' 100);  	dr ["S_DIST_01"] = RandomString (24' 24);  	dr ["S_DIST_02"] = RandomString (24' 24);  	dr ["S_DIST_03"] = RandomString (24' 24);  	dr ["S_DIST_04"] = RandomString (24' 24);  	dr ["S_DIST_05"] = RandomString (24' 24);  	dr ["S_DIST_06"] = RandomString (24' 24);  	dr ["S_DIST_07"] = RandomString (24' 24);  	dr ["S_DIST_08"] = RandomString (24' 24);  	dr ["S_DIST_09"] = RandomString (24' 24);  	dr ["S_DIST_10"] = RandomString (24' 24);  	dr ["S_YTD"] = 0;  	dr ["S_ORDER_CNT"] = 0;  	dr ["S_REMOTE_CNT"] = 0;  	dr ["S_DATA"] = RandomString (26' 50);  	dr ["SEQ_ID"] = id;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: for (int id = 1; id < 100001; id++) {  	DataRow dr = dt.NewRow ();  	dr ["S_I_ID"] = id;  	dr ["S_W_ID"] = "W_" + i;  	dr ["S_QUANTITY"] = Frnd.Next (10' 100);  	dr ["S_DIST_01"] = RandomString (24' 24);  	dr ["S_DIST_02"] = RandomString (24' 24);  	dr ["S_DIST_03"] = RandomString (24' 24);  	dr ["S_DIST_04"] = RandomString (24' 24);  	dr ["S_DIST_05"] = RandomString (24' 24);  	dr ["S_DIST_06"] = RandomString (24' 24);  	dr ["S_DIST_07"] = RandomString (24' 24);  	dr ["S_DIST_08"] = RandomString (24' 24);  	dr ["S_DIST_09"] = RandomString (24' 24);  	dr ["S_DIST_10"] = RandomString (24' 24);  	dr ["S_YTD"] = 0;  	dr ["S_ORDER_CNT"] = 0;  	dr ["S_REMOTE_CNT"] = 0;  	dr ["S_DATA"] = RandomString (26' 50);  	dr ["SEQ_ID"] = id;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: for (int id = 1; id < 100001; id++) {  	DataRow dr = dt.NewRow ();  	dr ["S_I_ID"] = id;  	dr ["S_W_ID"] = "W_" + i;  	dr ["S_QUANTITY"] = Frnd.Next (10' 100);  	dr ["S_DIST_01"] = RandomString (24' 24);  	dr ["S_DIST_02"] = RandomString (24' 24);  	dr ["S_DIST_03"] = RandomString (24' 24);  	dr ["S_DIST_04"] = RandomString (24' 24);  	dr ["S_DIST_05"] = RandomString (24' 24);  	dr ["S_DIST_06"] = RandomString (24' 24);  	dr ["S_DIST_07"] = RandomString (24' 24);  	dr ["S_DIST_08"] = RandomString (24' 24);  	dr ["S_DIST_09"] = RandomString (24' 24);  	dr ["S_DIST_10"] = RandomString (24' 24);  	dr ["S_YTD"] = 0;  	dr ["S_ORDER_CNT"] = 0;  	dr ["S_REMOTE_CNT"] = 0;  	dr ["S_DATA"] = RandomString (26' 50);  	dr ["SEQ_ID"] = id;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: for (int id = 1; id < 100001; id++) {  	DataRow dr = dt.NewRow ();  	dr ["S_I_ID"] = id;  	dr ["S_W_ID"] = "W_" + i;  	dr ["S_QUANTITY"] = Frnd.Next (10' 100);  	dr ["S_DIST_01"] = RandomString (24' 24);  	dr ["S_DIST_02"] = RandomString (24' 24);  	dr ["S_DIST_03"] = RandomString (24' 24);  	dr ["S_DIST_04"] = RandomString (24' 24);  	dr ["S_DIST_05"] = RandomString (24' 24);  	dr ["S_DIST_06"] = RandomString (24' 24);  	dr ["S_DIST_07"] = RandomString (24' 24);  	dr ["S_DIST_08"] = RandomString (24' 24);  	dr ["S_DIST_09"] = RandomString (24' 24);  	dr ["S_DIST_10"] = RandomString (24' 24);  	dr ["S_YTD"] = 0;  	dr ["S_ORDER_CNT"] = 0;  	dr ["S_REMOTE_CNT"] = 0;  	dr ["S_DATA"] = RandomString (26' 50);  	dr ["SEQ_ID"] = id;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: for (int id = 1; id < 100001; id++) {  	DataRow dr = dt.NewRow ();  	dr ["S_I_ID"] = id;  	dr ["S_W_ID"] = "W_" + i;  	dr ["S_QUANTITY"] = Frnd.Next (10' 100);  	dr ["S_DIST_01"] = RandomString (24' 24);  	dr ["S_DIST_02"] = RandomString (24' 24);  	dr ["S_DIST_03"] = RandomString (24' 24);  	dr ["S_DIST_04"] = RandomString (24' 24);  	dr ["S_DIST_05"] = RandomString (24' 24);  	dr ["S_DIST_06"] = RandomString (24' 24);  	dr ["S_DIST_07"] = RandomString (24' 24);  	dr ["S_DIST_08"] = RandomString (24' 24);  	dr ["S_DIST_09"] = RandomString (24' 24);  	dr ["S_DIST_10"] = RandomString (24' 24);  	dr ["S_YTD"] = 0;  	dr ["S_ORDER_CNT"] = 0;  	dr ["S_REMOTE_CNT"] = 0;  	dr ["S_DATA"] = RandomString (26' 50);  	dr ["SEQ_ID"] = id;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: for (int id = 1; id < 100001; id++) {  	DataRow dr = dt.NewRow ();  	dr ["S_I_ID"] = id;  	dr ["S_W_ID"] = "W_" + i;  	dr ["S_QUANTITY"] = Frnd.Next (10' 100);  	dr ["S_DIST_01"] = RandomString (24' 24);  	dr ["S_DIST_02"] = RandomString (24' 24);  	dr ["S_DIST_03"] = RandomString (24' 24);  	dr ["S_DIST_04"] = RandomString (24' 24);  	dr ["S_DIST_05"] = RandomString (24' 24);  	dr ["S_DIST_06"] = RandomString (24' 24);  	dr ["S_DIST_07"] = RandomString (24' 24);  	dr ["S_DIST_08"] = RandomString (24' 24);  	dr ["S_DIST_09"] = RandomString (24' 24);  	dr ["S_DIST_10"] = RandomString (24' 24);  	dr ["S_YTD"] = 0;  	dr ["S_ORDER_CNT"] = 0;  	dr ["S_REMOTE_CNT"] = 0;  	dr ["S_DATA"] = RandomString (26' 50);  	dr ["SEQ_ID"] = id;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: for (int id = 1; id < 100001; id++) {  	DataRow dr = dt.NewRow ();  	dr ["S_I_ID"] = id;  	dr ["S_W_ID"] = "W_" + i;  	dr ["S_QUANTITY"] = Frnd.Next (10' 100);  	dr ["S_DIST_01"] = RandomString (24' 24);  	dr ["S_DIST_02"] = RandomString (24' 24);  	dr ["S_DIST_03"] = RandomString (24' 24);  	dr ["S_DIST_04"] = RandomString (24' 24);  	dr ["S_DIST_05"] = RandomString (24' 24);  	dr ["S_DIST_06"] = RandomString (24' 24);  	dr ["S_DIST_07"] = RandomString (24' 24);  	dr ["S_DIST_08"] = RandomString (24' 24);  	dr ["S_DIST_09"] = RandomString (24' 24);  	dr ["S_DIST_10"] = RandomString (24' 24);  	dr ["S_YTD"] = 0;  	dr ["S_ORDER_CNT"] = 0;  	dr ["S_REMOTE_CNT"] = 0;  	dr ["S_DATA"] = RandomString (26' 50);  	dr ["SEQ_ID"] = id;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: for (int id = 1; id < 100001; id++) {  	DataRow dr = dt.NewRow ();  	dr ["S_I_ID"] = id;  	dr ["S_W_ID"] = "W_" + i;  	dr ["S_QUANTITY"] = Frnd.Next (10' 100);  	dr ["S_DIST_01"] = RandomString (24' 24);  	dr ["S_DIST_02"] = RandomString (24' 24);  	dr ["S_DIST_03"] = RandomString (24' 24);  	dr ["S_DIST_04"] = RandomString (24' 24);  	dr ["S_DIST_05"] = RandomString (24' 24);  	dr ["S_DIST_06"] = RandomString (24' 24);  	dr ["S_DIST_07"] = RandomString (24' 24);  	dr ["S_DIST_08"] = RandomString (24' 24);  	dr ["S_DIST_09"] = RandomString (24' 24);  	dr ["S_DIST_10"] = RandomString (24' 24);  	dr ["S_YTD"] = 0;  	dr ["S_ORDER_CNT"] = 0;  	dr ["S_REMOTE_CNT"] = 0;  	dr ["S_DATA"] = RandomString (26' 50);  	dr ["SEQ_ID"] = id;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: for (int id = 1; id < 100001; id++) {  	DataRow dr = dt.NewRow ();  	dr ["S_I_ID"] = id;  	dr ["S_W_ID"] = "W_" + i;  	dr ["S_QUANTITY"] = Frnd.Next (10' 100);  	dr ["S_DIST_01"] = RandomString (24' 24);  	dr ["S_DIST_02"] = RandomString (24' 24);  	dr ["S_DIST_03"] = RandomString (24' 24);  	dr ["S_DIST_04"] = RandomString (24' 24);  	dr ["S_DIST_05"] = RandomString (24' 24);  	dr ["S_DIST_06"] = RandomString (24' 24);  	dr ["S_DIST_07"] = RandomString (24' 24);  	dr ["S_DIST_08"] = RandomString (24' 24);  	dr ["S_DIST_09"] = RandomString (24' 24);  	dr ["S_DIST_10"] = RandomString (24' 24);  	dr ["S_YTD"] = 0;  	dr ["S_ORDER_CNT"] = 0;  	dr ["S_REMOTE_CNT"] = 0;  	dr ["S_DATA"] = RandomString (26' 50);  	dr ["SEQ_ID"] = id;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: for (int id = 1; id < 100001; id++) {  	DataRow dr = dt.NewRow ();  	dr ["S_I_ID"] = id;  	dr ["S_W_ID"] = "W_" + i;  	dr ["S_QUANTITY"] = Frnd.Next (10' 100);  	dr ["S_DIST_01"] = RandomString (24' 24);  	dr ["S_DIST_02"] = RandomString (24' 24);  	dr ["S_DIST_03"] = RandomString (24' 24);  	dr ["S_DIST_04"] = RandomString (24' 24);  	dr ["S_DIST_05"] = RandomString (24' 24);  	dr ["S_DIST_06"] = RandomString (24' 24);  	dr ["S_DIST_07"] = RandomString (24' 24);  	dr ["S_DIST_08"] = RandomString (24' 24);  	dr ["S_DIST_09"] = RandomString (24' 24);  	dr ["S_DIST_10"] = RandomString (24' 24);  	dr ["S_YTD"] = 0;  	dr ["S_ORDER_CNT"] = 0;  	dr ["S_REMOTE_CNT"] = 0;  	dr ["S_DATA"] = RandomString (26' 50);  	dr ["SEQ_ID"] = id;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: for (int id = 1; id < 100001; id++) {  	DataRow dr = dt.NewRow ();  	dr ["S_I_ID"] = id;  	dr ["S_W_ID"] = "W_" + i;  	dr ["S_QUANTITY"] = Frnd.Next (10' 100);  	dr ["S_DIST_01"] = RandomString (24' 24);  	dr ["S_DIST_02"] = RandomString (24' 24);  	dr ["S_DIST_03"] = RandomString (24' 24);  	dr ["S_DIST_04"] = RandomString (24' 24);  	dr ["S_DIST_05"] = RandomString (24' 24);  	dr ["S_DIST_06"] = RandomString (24' 24);  	dr ["S_DIST_07"] = RandomString (24' 24);  	dr ["S_DIST_08"] = RandomString (24' 24);  	dr ["S_DIST_09"] = RandomString (24' 24);  	dr ["S_DIST_10"] = RandomString (24' 24);  	dr ["S_YTD"] = 0;  	dr ["S_ORDER_CNT"] = 0;  	dr ["S_REMOTE_CNT"] = 0;  	dr ["S_DATA"] = RandomString (26' 50);  	dr ["SEQ_ID"] = id;  	dt.Rows.Add (dr);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: dr ["S_QUANTITY"] = Frnd.Next (10' 100);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: dr ["S_QUANTITY"] = Frnd.Next (10' 100);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: dr ["S_DIST_01"] = RandomString (24' 24);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: dr ["S_DIST_01"] = RandomString (24' 24);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: dr ["S_DIST_02"] = RandomString (24' 24);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: dr ["S_DIST_02"] = RandomString (24' 24);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: dr ["S_DIST_03"] = RandomString (24' 24);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: dr ["S_DIST_03"] = RandomString (24' 24);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: dr ["S_DIST_04"] = RandomString (24' 24);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: dr ["S_DIST_04"] = RandomString (24' 24);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: dr ["S_DIST_05"] = RandomString (24' 24);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: dr ["S_DIST_05"] = RandomString (24' 24);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: dr ["S_DIST_06"] = RandomString (24' 24);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: dr ["S_DIST_06"] = RandomString (24' 24);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: dr ["S_DIST_07"] = RandomString (24' 24);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: dr ["S_DIST_07"] = RandomString (24' 24);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: dr ["S_DIST_08"] = RandomString (24' 24);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: dr ["S_DIST_08"] = RandomString (24' 24);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: dr ["S_DIST_09"] = RandomString (24' 24);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: dr ["S_DIST_09"] = RandomString (24' 24);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: dr ["S_DIST_10"] = RandomString (24' 24);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: dr ["S_DIST_10"] = RandomString (24' 24);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: dr ["S_DATA"] = RandomString (26' 50);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildStockTable,The following statement contains a magic number: dr ["S_DATA"] = RandomString (26' 50);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildWarehouseTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	DataRow dr = dt.NewRow ();  	dr ["W_ID"] = "W_" + i;  	dr ["W_NAME"] = RandomString (6' 10);  	dr ["W_STREET_1"] = RandomString (10' 20);  	dr ["W_STREET_2"] = RandomString (10' 20);  	dr ["W_CITY"] = RandomString (10' 20);  	dr ["W_STATE"] = RandomString (2' 2);  	dr ["W_ZIP"] = RandZip ();  	dr ["W_TAX"] = 0.1000;  	dr ["W_YTD"] = 3000000.00;  	dr ["SEQ_ID"] = i;  	dt.Rows.Add (dr);  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildWarehouseTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	DataRow dr = dt.NewRow ();  	dr ["W_ID"] = "W_" + i;  	dr ["W_NAME"] = RandomString (6' 10);  	dr ["W_STREET_1"] = RandomString (10' 20);  	dr ["W_STREET_2"] = RandomString (10' 20);  	dr ["W_CITY"] = RandomString (10' 20);  	dr ["W_STATE"] = RandomString (2' 2);  	dr ["W_ZIP"] = RandZip ();  	dr ["W_TAX"] = 0.1000;  	dr ["W_YTD"] = 3000000.00;  	dr ["SEQ_ID"] = i;  	dt.Rows.Add (dr);  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildWarehouseTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	DataRow dr = dt.NewRow ();  	dr ["W_ID"] = "W_" + i;  	dr ["W_NAME"] = RandomString (6' 10);  	dr ["W_STREET_1"] = RandomString (10' 20);  	dr ["W_STREET_2"] = RandomString (10' 20);  	dr ["W_CITY"] = RandomString (10' 20);  	dr ["W_STATE"] = RandomString (2' 2);  	dr ["W_ZIP"] = RandZip ();  	dr ["W_TAX"] = 0.1000;  	dr ["W_YTD"] = 3000000.00;  	dr ["SEQ_ID"] = i;  	dt.Rows.Add (dr);  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildWarehouseTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	DataRow dr = dt.NewRow ();  	dr ["W_ID"] = "W_" + i;  	dr ["W_NAME"] = RandomString (6' 10);  	dr ["W_STREET_1"] = RandomString (10' 20);  	dr ["W_STREET_2"] = RandomString (10' 20);  	dr ["W_CITY"] = RandomString (10' 20);  	dr ["W_STATE"] = RandomString (2' 2);  	dr ["W_ZIP"] = RandZip ();  	dr ["W_TAX"] = 0.1000;  	dr ["W_YTD"] = 3000000.00;  	dr ["SEQ_ID"] = i;  	dt.Rows.Add (dr);  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildWarehouseTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	DataRow dr = dt.NewRow ();  	dr ["W_ID"] = "W_" + i;  	dr ["W_NAME"] = RandomString (6' 10);  	dr ["W_STREET_1"] = RandomString (10' 20);  	dr ["W_STREET_2"] = RandomString (10' 20);  	dr ["W_CITY"] = RandomString (10' 20);  	dr ["W_STATE"] = RandomString (2' 2);  	dr ["W_ZIP"] = RandZip ();  	dr ["W_TAX"] = 0.1000;  	dr ["W_YTD"] = 3000000.00;  	dr ["SEQ_ID"] = i;  	dt.Rows.Add (dr);  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildWarehouseTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	DataRow dr = dt.NewRow ();  	dr ["W_ID"] = "W_" + i;  	dr ["W_NAME"] = RandomString (6' 10);  	dr ["W_STREET_1"] = RandomString (10' 20);  	dr ["W_STREET_2"] = RandomString (10' 20);  	dr ["W_CITY"] = RandomString (10' 20);  	dr ["W_STATE"] = RandomString (2' 2);  	dr ["W_ZIP"] = RandZip ();  	dr ["W_TAX"] = 0.1000;  	dr ["W_YTD"] = 3000000.00;  	dr ["SEQ_ID"] = i;  	dt.Rows.Add (dr);  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildWarehouseTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	DataRow dr = dt.NewRow ();  	dr ["W_ID"] = "W_" + i;  	dr ["W_NAME"] = RandomString (6' 10);  	dr ["W_STREET_1"] = RandomString (10' 20);  	dr ["W_STREET_2"] = RandomString (10' 20);  	dr ["W_CITY"] = RandomString (10' 20);  	dr ["W_STATE"] = RandomString (2' 2);  	dr ["W_ZIP"] = RandZip ();  	dr ["W_TAX"] = 0.1000;  	dr ["W_YTD"] = 3000000.00;  	dr ["SEQ_ID"] = i;  	dt.Rows.Add (dr);  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildWarehouseTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	DataRow dr = dt.NewRow ();  	dr ["W_ID"] = "W_" + i;  	dr ["W_NAME"] = RandomString (6' 10);  	dr ["W_STREET_1"] = RandomString (10' 20);  	dr ["W_STREET_2"] = RandomString (10' 20);  	dr ["W_CITY"] = RandomString (10' 20);  	dr ["W_STATE"] = RandomString (2' 2);  	dr ["W_ZIP"] = RandZip ();  	dr ["W_TAX"] = 0.1000;  	dr ["W_YTD"] = 3000000.00;  	dr ["SEQ_ID"] = i;  	dt.Rows.Add (dr);  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildWarehouseTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	DataRow dr = dt.NewRow ();  	dr ["W_ID"] = "W_" + i;  	dr ["W_NAME"] = RandomString (6' 10);  	dr ["W_STREET_1"] = RandomString (10' 20);  	dr ["W_STREET_2"] = RandomString (10' 20);  	dr ["W_CITY"] = RandomString (10' 20);  	dr ["W_STATE"] = RandomString (2' 2);  	dr ["W_ZIP"] = RandZip ();  	dr ["W_TAX"] = 0.1000;  	dr ["W_YTD"] = 3000000.00;  	dr ["SEQ_ID"] = i;  	dt.Rows.Add (dr);  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildWarehouseTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	DataRow dr = dt.NewRow ();  	dr ["W_ID"] = "W_" + i;  	dr ["W_NAME"] = RandomString (6' 10);  	dr ["W_STREET_1"] = RandomString (10' 20);  	dr ["W_STREET_2"] = RandomString (10' 20);  	dr ["W_CITY"] = RandomString (10' 20);  	dr ["W_STATE"] = RandomString (2' 2);  	dr ["W_ZIP"] = RandZip ();  	dr ["W_TAX"] = 0.1000;  	dr ["W_YTD"] = 3000000.00;  	dr ["SEQ_ID"] = i;  	dt.Rows.Add (dr);  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildWarehouseTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	DataRow dr = dt.NewRow ();  	dr ["W_ID"] = "W_" + i;  	dr ["W_NAME"] = RandomString (6' 10);  	dr ["W_STREET_1"] = RandomString (10' 20);  	dr ["W_STREET_2"] = RandomString (10' 20);  	dr ["W_CITY"] = RandomString (10' 20);  	dr ["W_STATE"] = RandomString (2' 2);  	dr ["W_ZIP"] = RandZip ();  	dr ["W_TAX"] = 0.1000;  	dr ["W_YTD"] = 3000000.00;  	dr ["SEQ_ID"] = i;  	dt.Rows.Add (dr);  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildWarehouseTable,The following statement contains a magic number: while (i < MaxNumWh + 1) {  	DataRow dr = dt.NewRow ();  	dr ["W_ID"] = "W_" + i;  	dr ["W_NAME"] = RandomString (6' 10);  	dr ["W_STREET_1"] = RandomString (10' 20);  	dr ["W_STREET_2"] = RandomString (10' 20);  	dr ["W_CITY"] = RandomString (10' 20);  	dr ["W_STATE"] = RandomString (2' 2);  	dr ["W_ZIP"] = RandZip ();  	dr ["W_TAX"] = 0.1000;  	dr ["W_YTD"] = 3000000.00;  	dr ["SEQ_ID"] = i;  	dt.Rows.Add (dr);  	i++;  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildWarehouseTable,The following statement contains a magic number: dr ["W_NAME"] = RandomString (6' 10);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildWarehouseTable,The following statement contains a magic number: dr ["W_NAME"] = RandomString (6' 10);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildWarehouseTable,The following statement contains a magic number: dr ["W_STREET_1"] = RandomString (10' 20);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildWarehouseTable,The following statement contains a magic number: dr ["W_STREET_1"] = RandomString (10' 20);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildWarehouseTable,The following statement contains a magic number: dr ["W_STREET_2"] = RandomString (10' 20);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildWarehouseTable,The following statement contains a magic number: dr ["W_STREET_2"] = RandomString (10' 20);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildWarehouseTable,The following statement contains a magic number: dr ["W_CITY"] = RandomString (10' 20);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildWarehouseTable,The following statement contains a magic number: dr ["W_CITY"] = RandomString (10' 20);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildWarehouseTable,The following statement contains a magic number: dr ["W_STATE"] = RandomString (2' 2);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildWarehouseTable,The following statement contains a magic number: dr ["W_STATE"] = RandomString (2' 2);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildWarehouseTable,The following statement contains a magic number: dr ["W_TAX"] = 0.1000;  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,BuildWarehouseTable,The following statement contains a magic number: dr ["W_YTD"] = 3000000.00;  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,RandomString,The following statement contains a magic number: for (int x = 0; x < Frnd.Next (strMin' strMax); ++x) {  	randomString += RandHold.Substring (Frnd.Next (0' 62)' 1);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,RandomString,The following statement contains a magic number: randomString += RandHold.Substring (Frnd.Next (0' 62)' 1);  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,RandZip,The following statement contains a magic number: for (int x = 0; x < 4; ++x) {  	holdZip += ZipRandHold.Substring (Frnd.Next (0' 9)' 1);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,RandZip,The following statement contains a magic number: for (int x = 0; x < 4; ++x) {  	holdZip += ZipRandHold.Substring (Frnd.Next (0' 9)' 1);  }  
Magic Number,TPCCDatabaseGenerator,TPCCGenData,C:\repos\SQLServerIO_TPCCBench\TPCCDatabaseGenerator\TPCCGenData.cs,RandZip,The following statement contains a magic number: holdZip += ZipRandHold.Substring (Frnd.Next (0' 9)' 1);  
