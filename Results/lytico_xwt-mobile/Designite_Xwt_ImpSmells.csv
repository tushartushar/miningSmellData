Implementation smell,Namespace,Class,File,Method,Description
Long Method,Xwt.Drawing,VectorImageRecorderContextHandler,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\VectorImage.cs,Draw,The method has 119 lines of code.
Long Method,Xwt.Formats,MarkdownTextFormat,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Formats\MarkdownTextFormat.cs,ParseMarkdown,The method has 108 lines of code.
Complex Method,Xwt,Widget,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Widget.cs,GetPlacementInRect,Cyclomatic complexity of the method is 8
Complex Method,Xwt,Widget,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Widget.cs,GetPreferredSize,Cyclomatic complexity of the method is 15
Complex Method,Xwt,Widget,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Widget.cs,DelayedResizeRequest,Cyclomatic complexity of the method is 11
Complex Method,Xwt,Widget,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Widget.cs,RegisterChild,Cyclomatic complexity of the method is 9
Complex Method,Xwt,Window,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Window.cs,AdjustSize,Cyclomatic complexity of the method is 15
Complex Method,Xwt,Box,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Box.cs,Pack,Cyclomatic complexity of the method is 9
Complex Method,Xwt,Box,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Box.cs,OnReallocate,Cyclomatic complexity of the method is 9
Complex Method,Xwt,Box,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Box.cs,CalcDefaultSizes,Cyclomatic complexity of the method is 9
Complex Method,Xwt,Box,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Box.cs,OnGetPreferredSize,Cyclomatic complexity of the method is 10
Complex Method,Xwt,Table,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Table.cs,Add,Cyclomatic complexity of the method is 8
Complex Method,Xwt,TreeViewStatus,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\TreeViewStatus.cs,Load,Cyclomatic complexity of the method is 9
Complex Method,Xwt,FormattedText,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\FormattedText.cs,PushSpan,Cyclomatic complexity of the method is 22
Complex Method,Xwt,FormattedText,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\FormattedText.cs,CreateAttribute,Cyclomatic complexity of the method is 24
Complex Method,Xwt.Drawing,Image,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Image.cs,FromResource,Cyclomatic complexity of the method is 11
Complex Method,Xwt.Drawing,Image,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Image.cs,WithSize,Cyclomatic complexity of the method is 11
Complex Method,Xwt.Drawing,TextLayoutData,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\TextLayout.cs,InitLayout,Cyclomatic complexity of the method is 8
Complex Method,Xwt.Drawing,Font,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Font.cs,FromName,Cyclomatic complexity of the method is 8
Complex Method,Xwt.Drawing,VectorImageRecorderContextHandler,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\VectorImage.cs,Draw,Cyclomatic complexity of the method is 104
Complex Method,Xwt.Drawing,NinePatchImage,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\NinePatchImage.cs,OnDraw,Cyclomatic complexity of the method is 11
Complex Method,Xwt.Formats,MarkdownTextFormat,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Formats\MarkdownTextFormat.cs,ParseMarkdown,Cyclomatic complexity of the method is 22
Long Parameter List,Xwt.Backends,DragStartData,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Backends\IWidgetBackend.cs,DragStartData,The method has 5 parameters.
Long Parameter List,Xwt.Backends,ImageBackendHandler,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Backends\ImageBackendHandler.cs,ConvertToBitmap,The method has 5 parameters.
Long Parameter List,Xwt.Backends,ImageBackendHandler,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Backends\ImageBackendHandler.cs,CopyBitmapArea,The method has 8 parameters.
Long Parameter List,Xwt.Backends,ImageBackendHandler,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Backends\ImageBackendHandler.cs,CropBitmap,The method has 5 parameters.
Long Parameter List,Xwt.Backends,ToolkitEngineBackend,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Backends\ToolkitEngineBackend.cs,RenderImage,The method has 5 parameters.
Long Parameter List,Xwt.Backends,GradientBackendHandler,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Backends\GradientBackendHandler.cs,CreateRadial,The method has 6 parameters.
Long Parameter List,Xwt.Backends,FontBackendHandler,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Backends\FontBackendHandler.cs,Create,The method has 5 parameters.
Long Parameter List,Xwt.Backends,DrawingPathBackendHandler,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Backends\DrawingPathBackendHandler.cs,Arc,The method has 6 parameters.
Long Parameter List,Xwt.Backends,DrawingPathBackendHandler,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Backends\DrawingPathBackendHandler.cs,ArcNegative,The method has 6 parameters.
Long Parameter List,Xwt.Backends,DrawingPathBackendHandler,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Backends\DrawingPathBackendHandler.cs,CurveTo,The method has 7 parameters.
Long Parameter List,Xwt.Backends,DrawingPathBackendHandler,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Backends\DrawingPathBackendHandler.cs,Rectangle,The method has 5 parameters.
Long Parameter List,Xwt.Backends,DrawingPathBackendHandler,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Backends\DrawingPathBackendHandler.cs,RelCurveTo,The method has 7 parameters.
Long Parameter List,Xwt.Backends,IScrollAdjustmentBackend,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Backends\IScrollAdjustmentBackend.cs,SetRange,The method has 6 parameters.
Long Parameter List,Xwt,Box,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Box.cs,PackStart,The method has 9 parameters.
Long Parameter List,Xwt,Box,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Box.cs,PackEnd,The method has 9 parameters.
Long Parameter List,Xwt,Box,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Box.cs,Pack,The method has 10 parameters.
Long Parameter List,Xwt,Table,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Table.cs,Attach,The method has 5 parameters.
Long Parameter List,Xwt,Table,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Table.cs,Attach,The method has 5 parameters.
Long Parameter List,Xwt,Table,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Table.cs,Add,The method has 14 parameters.
Long Parameter List,Xwt,Table,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Table.cs,Attach,The method has 7 parameters.
Long Parameter List,Xwt,TreeNavigator,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\TreeNavigator.cs,SetValues,The method has 5 parameters.
Long Parameter List,Xwt,TreeNavigator,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\TreeNavigator.cs,SetValues,The method has 7 parameters.
Long Parameter List,Xwt,TreeNavigator,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\TreeNavigator.cs,SetValues,The method has 8 parameters.
Long Parameter List,Xwt,TreeNavigator,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\TreeNavigator.cs,SetValues,The method has 10 parameters.
Long Parameter List,Xwt,TreeNavigator,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\TreeNavigator.cs,SetValues,The method has 12 parameters.
Long Parameter List,Xwt,TreeNavigator,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\TreeNavigator.cs,SetValues,The method has 14 parameters.
Long Parameter List,Xwt,TreeNavigator,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\TreeNavigator.cs,SetValues,The method has 16 parameters.
Long Parameter List,Xwt,TreeNavigator,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\TreeNavigator.cs,SetValues,The method has 18 parameters.
Long Parameter List,Xwt,TreeNavigator,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\TreeNavigator.cs,SetValues,The method has 20 parameters.
Long Parameter List,Xwt,ListStore,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\ListStore.cs,SetValues,The method has 5 parameters.
Long Parameter List,Xwt,ListStore,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\ListStore.cs,SetValues,The method has 7 parameters.
Long Parameter List,Xwt,ListStore,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\ListStore.cs,SetValues,The method has 9 parameters.
Long Parameter List,Xwt,ListStore,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\ListStore.cs,SetValues,The method has 11 parameters.
Long Parameter List,Xwt,ListStore,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\ListStore.cs,SetValues,The method has 13 parameters.
Long Parameter List,Xwt,ListStore,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\ListStore.cs,SetValues,The method has 15 parameters.
Long Parameter List,Xwt,ListStore,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\ListStore.cs,SetValues,The method has 17 parameters.
Long Parameter List,Xwt,ListStore,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\ListStore.cs,SetValues,The method has 19 parameters.
Long Parameter List,Xwt,ListStore,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\ListStore.cs,SetValues,The method has 21 parameters.
Long Parameter List,Xwt,MessageDialog,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\MessageDialog.cs,GenericAlert,The method has 5 parameters.
Long Parameter List,Xwt,MessageDialog,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\MessageDialog.cs,GenericAlert,The method has 6 parameters.
Long Parameter List,Xwt,Toolkit,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Toolkit.cs,RenderImage,The method has 5 parameters.
Long Parameter List,Xwt,FormattedText,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\FormattedText.cs,PushSpan,The method has 6 parameters.
Long Parameter List,Xwt,FormattedText,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\FormattedText.cs,ParseAttributes,The method has 5 parameters.
Long Parameter List,Xwt.Drawing,Context,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Context.cs,DrawImage,The method has 6 parameters.
Long Parameter List,Xwt.Drawing,RadialGradient,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\RadialGradient.cs,RadialGradient,The method has 6 parameters.
Long Parameter List,Xwt.Drawing,Matrix,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Matrix.cs,Matrix,The method has 6 parameters.
Long Parameter List,Xwt.Drawing,Matrix,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Matrix.cs,Append,The method has 6 parameters.
Long Parameter List,Xwt.Drawing,Matrix,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Matrix.cs,Prepend,The method has 6 parameters.
Long Parameter List,Xwt.Drawing,DrawingPath,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\DrawingPath.cs,Arc,The method has 5 parameters.
Long Parameter List,Xwt.Drawing,DrawingPath,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\DrawingPath.cs,ArcNegative,The method has 5 parameters.
Long Parameter List,Xwt.Drawing,DrawingPath,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\DrawingPath.cs,CurveTo,The method has 6 parameters.
Long Parameter List,Xwt.Drawing,DrawingPath,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\DrawingPath.cs,RoundRectangle,The method has 5 parameters.
Long Parameter List,Xwt.Drawing,DrawingPath,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\DrawingPath.cs,RelCurveTo,The method has 6 parameters.
Long Parameter List,Xwt.Drawing,BitmapImage,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\BitmapImage.cs,CopyArea,The method has 7 parameters.
Long Parameter List,Xwt.Drawing,VectorImageRecorderContextHandler,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\VectorImage.cs,Arc,The method has 6 parameters.
Long Parameter List,Xwt.Drawing,VectorImageRecorderContextHandler,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\VectorImage.cs,ArcNegative,The method has 6 parameters.
Long Parameter List,Xwt.Drawing,VectorImageRecorderContextHandler,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\VectorImage.cs,CurveTo,The method has 7 parameters.
Long Parameter List,Xwt.Drawing,VectorImageRecorderContextHandler,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\VectorImage.cs,Rectangle,The method has 5 parameters.
Long Parameter List,Xwt.Drawing,VectorImageRecorderContextHandler,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\VectorImage.cs,RelCurveTo,The method has 7 parameters.
Long Parameter List,Xwt.Drawing,NinePatchImage,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\NinePatchImage.cs,AddFrame,The method has 12 parameters.
Long Parameter List,Xwt.Drawing,NinePatchImage,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\NinePatchImage.cs,CalcSectionSize,The method has 5 parameters.
Long Parameter List,Xwt.Formats,MarkdownTextFormat,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Formats\MarkdownTextFormat.cs,ParseMarkdown,The method has 5 parameters.
Long Parameter List,Xwt.Motion,Animation,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Motion\Animation.cs,Animation,The method has 6 parameters.
Long Parameter List,Xwt.Motion,Animation,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Motion\Animation.cs,Commit,The method has 7 parameters.
Long Parameter List,Xwt.Motion,Animation,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Motion\Animation.cs,AddConcurrent,The method has 6 parameters.
Long Parameter List,Xwt.Motion,AnimationExtensions,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Motion\AnimationExtensions.cs,AnimateKinetic,The method has 7 parameters.
Long Parameter List,Xwt.Motion,AnimationExtensions,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Motion\AnimationExtensions.cs,Animate,The method has 8 parameters.
Long Parameter List,Xwt.Motion,AnimationExtensions,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Motion\AnimationExtensions.cs,Interpolate,The method has 5 parameters.
Long Parameter List,Xwt.Motion,AnimationExtensions,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Motion\AnimationExtensions.cs,Animate,The method has 10 parameters.
Long Parameter List,Xwt.Motion,AnimationExtensions,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Motion\AnimationExtensions.cs,Animate,The method has 9 parameters.
Long Parameter List,Xwt.Motion,AnimationExtensions,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Motion\AnimationExtensions.cs,Animate,The method has 12 parameters.
Long Statement,Xwt.Backends,ToolkitEngineBackend,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Backends\ToolkitEngineBackend.cs,CreateBackendForFrontend,The length of the statement  "			throw new InvalidOperationException ("Backend type for frontend '" + frontendType + "' is not a IBackend implementation"); " is 122.
Long Statement,Xwt.Backends,ToolkitEngineBackend,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Backends\ToolkitEngineBackend.cs,CreateBackend,The length of the statement  "		throw new InvalidOperationException ("Invalid backend type. Expected '" + backendType + "' found '" + res.GetType () + "'"); " is 124.
Long Statement,Xwt.Backends,EventHost,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Backends\EventHost.cs,IsOverriden,The length of the statement  "	var method = thisType.GetMethod (emap.MethodName' BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance); " is 120.
Long Statement,Xwt,Widget,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Widget.cs,GetPreferredSize,The length of the statement  "	return ((IWidgetSurface)this).GetPreferredSize (SizeConstraint.Unconstrained' SizeConstraint.Unconstrained' includeMargin); " is 123.
Long Statement,Xwt,Widget,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Widget.cs,GetPreferredSize,The length of the statement  "		return Surface.GetPreferredSize (widthConstraint - margin.HorizontalSpacing' heightConstraint - margin.VerticalSpacing' false) + new Size (Margin.HorizontalSpacing' Margin.VerticalSpacing); " is 189.
Long Statement,Xwt,Window,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Window.cs,AdjustSize,The length of the statement  "	var wc = (shown || widthSet) ? SizeConstraint.WithSize (Math.Max (size.Width - padding.HorizontalSpacing - mDecorationsSize.Width' mMinSize.Width)) : SizeConstraint.Unconstrained; " is 179.
Long Statement,Xwt,Window,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Window.cs,AdjustSize,The length of the statement  "	var hc = (shown || heightSet) ? SizeConstraint.WithSize (Math.Max (size.Height - padding.VerticalSpacing - mDecorationsSize.Height' mMinSize.Height)) : SizeConstraint.Unconstrained; " is 181.
Long Statement,Xwt,Box,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Box.cs,OnGetPreferredSize,The length of the statement  "			var wsize = cw.Child.Surface.GetPreferredSize (widthConstraint.IsConstrained ? cw.NextSize : SizeConstraint.Unconstrained' heightConstraint' true); " is 147.
Long Statement,Xwt,Box,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Box.cs,OnGetPreferredSize,The length of the statement  "			var wsize = cw.Child.Surface.GetPreferredSize (widthConstraint' heightConstraint.IsConstrained ? cw.NextSize : SizeConstraint.Unconstrained' true); " is 147.
Long Statement,Xwt,Table,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Table.cs,OnReallocate,The length of the statement  "		rects [n] = new Rectangle (bp.NextX + margin.Left' bp.NextY + margin.Top' bp.NextWidth - margin.HorizontalSpacing' bp.NextHeight - margin.VerticalSpacing).Round ().WithPositiveSize (); " is 184.
Long Statement,Xwt,Rectangle,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Rectangle.cs,ToString,The length of the statement  "	return String.Format ("{{X={0} Y={1} Width={2} Height={3}}}"' X.ToString (CultureInfo.InvariantCulture)' Y.ToString (CultureInfo.InvariantCulture)' Width.ToString (CultureInfo.InvariantCulture)' Height.ToString (CultureInfo.InvariantCulture)); " is 243.
Long Statement,Xwt,Rectangle,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Rectangle.cs,Union,The length of the statement  "	return FromLTRB (Math.Min (r1.Left' r2.Left)' Math.Min (r1.Top' r2.Top)' Math.Max (r1.Right' r2.Right)' Math.Max (r1.Bottom' r2.Bottom)); " is 137.
Long Statement,Xwt,Point,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Point.cs,ToString,The length of the statement  "	return String.Format ("{{X={0} Y={1}}}"' X.ToString (CultureInfo.InvariantCulture)' Y.ToString (CultureInfo.InvariantCulture)); " is 127.
Long Statement,Xwt,Size,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Size.cs,ToString,The length of the statement  "	return String.Format ("{{Width={0} Height={1}}}"' width.ToString (CultureInfo.InvariantCulture)' height.ToString (CultureInfo.InvariantCulture)); " is 145.
Long Statement,Xwt,Distance,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Distance.cs,ToString,The length of the statement  "	return String.Format ("{{Dx={0} Dy={1}}}"' dx.ToString (CultureInfo.InvariantCulture)' dy.ToString (CultureInfo.InvariantCulture)); " is 131.
Long Statement,Xwt,MessageDialog,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\MessageDialog.cs,Confirm,The length of the statement  "	return GenericAlert (RootWindow' StockIcons.Question' primaryText' secondaryText' confirmIsDefault ? 0 : 1' Command.Cancel' button) == button; " is 142.
Long Statement,Xwt,TreeViewStatus,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\TreeViewStatus.cs,Load,The length of the statement  "		throw new InvalidOperationException ("Invalid tree instance. The status can only be restored on the tree that generated the status object."); " is 141.
Long Statement,Xwt,WidgetSpacingValueSerializer,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\WidgetSpacing.cs,ConvertToString,The length of the statement  "		return s.Left.ToString (CultureInfo.InvariantCulture) + " " + s.Top.ToString (CultureInfo.InvariantCulture) + " " + s.Right.ToString (CultureInfo.InvariantCulture) + " " + s.Bottom.ToString (CultureInfo.InvariantCulture); " is 221.
Long Statement,Xwt,WidgetSpacingValueSerializer,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\WidgetSpacing.cs,ConvertToString,The length of the statement  "		return s.Left.ToString (CultureInfo.InvariantCulture) + " " + s.Top.ToString (CultureInfo.InvariantCulture) + " " + s.Right.ToString (CultureInfo.InvariantCulture); " is 164.
Long Statement,Xwt,DefaultColorSelectorBackend,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\ColorSelector.cs,HandleColorBoxSelectionChanged,The length of the statement  "	currentColor = Color.FromHsl (hsBox.SelectedColor.Hue' hsBox.SelectedColor.Saturation' lightBox.Light' currentColor.Alpha); " is 123.
Long Statement,Xwt,Placement,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Placement.cs,OnGetPreferredSize,The length of the statement  "		var s = new Size (child.Margin.HorizontalSpacing + Padding.HorizontalSpacing' child.Margin.VerticalSpacing + Padding.VerticalSpacing); " is 134.
Long Statement,Xwt.Drawing,Image,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Image.cs,CreateMultiSizeIcon,The length of the statement  "	return new Image (Toolkit.CurrentEngine.ImageBackendHandler.CreateMultiSizeIcon (images.Select (i => i.GetBackend ()))); " is 120.
Long Statement,Xwt.Drawing,Color,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Color.cs,BlendWith,The length of the statement  "	return new Color (BlendValue (r' target.r' amount)' BlendValue (g' target.g' amount)' BlendValue (b' target.b' amount)' target.Alpha); " is 134.
Long Statement,Xwt.Drawing,ColorValueSerializer,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Color.cs,ConvertToString,The length of the statement  "	return "#" + ((int)(s.Red * 255)).ToString ("x2") + ((int)(s.Green * 255)).ToString ("x2") + ((int)(s.Blue * 255)).ToString ("x2") + ((int)(s.Alpha * 255)).ToString ("x2"); " is 172.
Long Statement,Xwt.Drawing,TextLayoutData,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\TextLayout.cs,Equals,The length of the statement  "	if (Width != other.Width || Height != other.Height || Text != other.Text || Font != other.Font || TextTrimming != other.TextTrimming || WrapMode != other.WrapMode) " is 163.
Long Statement,Xwt.Drawing,Font,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Font.cs,GetDefaultFont,The length of the statement  "	Console.WriteLine ("Font '" + unknownFont + "' not available in the system. Using '" + Font.SystemFont.Family + "' instead"); " is 125.
Long Statement,Xwt.Drawing,Font,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Font.cs,Equals,The length of the statement  "	return Family == other.Family && Style == other.Style && Weight == other.Weight && Stretch == other.Stretch && Size == other.Size; " is 130.
Long Statement,Xwt.Drawing,Matrix,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Matrix.cs,Equals,The length of the statement  "	return (M11 == value.M11 && M12 == value.M12 && M21 == value.M21 && M22 == value.M22 && OffsetX == value.OffsetX && OffsetY == value.OffsetY); " is 142.
Long Statement,Xwt.Drawing,Matrix,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Matrix.cs,ToString,The length of the statement  "		return string.Format (this.GetType ().Name + "{{M11={0} M12={1} M21={2} M22={3} OffsetX={4} OffsetY={5}}}"' M11.ToString (CultureInfo.InvariantCulture)' M12.ToString (CultureInfo.InvariantCulture)' M21.ToString (CultureInfo.InvariantCulture)' M22.ToString (CultureInfo.InvariantCulture)' OffsetX.ToString (CultureInfo.InvariantCulture)' OffsetY.ToString (CultureInfo.InvariantCulture)); " is 386.
Long Statement,Xwt.Drawing,BitmapImage,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\BitmapImage.cs,Crop,The length of the statement  "	return new BitmapImage (ToolkitEngine.ImageBackendHandler.CropBitmap (Backend' x' y' pixelWidth' pixelHeight)' new Size (pixelWidth / scaleX' pixelHeight / scaleY)); " is 165.
Long Statement,Xwt.Drawing,BitmapImage,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\BitmapImage.cs,Crop,The length of the statement  "	return new BitmapImage (ToolkitEngine.ImageBackendHandler.CropBitmap (Backend' (int)pixelRect.X' (int)pixelRect.Y' (int)pixelRect.Width' (int)pixelRect.Height)' new Size (pixelRect.Width / scaleX' pixelRect.Height / scaleY)); " is 225.
Long Statement,Xwt.Drawing,VectorImageRecorderContextHandler,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\VectorImage.cs,Draw,The length of the statement  "			pathHandler.ArcNegative (ctx' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]); " is 125.
Long Statement,Xwt.Drawing,VectorImageRecorderContextHandler,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\VectorImage.cs,Draw,The length of the statement  "			pathHandler.CurveTo (ctx' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]); " is 140.
Long Statement,Xwt.Drawing,VectorImageRecorderContextHandler,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\VectorImage.cs,Draw,The length of the statement  "			pathHandler.RelCurveTo (ctx' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]); " is 143.
Long Statement,Xwt.Drawing,NinePatchImage,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\NinePatchImage.cs,AddFrame,The length of the statement  "	frame.HorizontalSections = CreateSections (frame' Enumerable.Range (1' (int)bitmap.Width - 2).Select (n => bitmap.GetPixel (n' 0))); " is 132.
Long Statement,Xwt.Drawing,NinePatchImage,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\NinePatchImage.cs,AddFrame,The length of the statement  "	frame.VerticalSections = CreateSections (frame' Enumerable.Range (1' (int)bitmap.Height - 2).Select (n => bitmap.GetPixel (0' n))); " is 131.
Long Statement,Xwt.Drawing,NinePatchImage,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\NinePatchImage.cs,AddFrame,The length of the statement  "	var hbox = CreateSections (frame' Enumerable.Range (1' (int)bitmap.Width - 1).Select (n => bitmap.GetPixel (n' (int)bitmap.Height - 1))); " is 137.
Long Statement,Xwt.Drawing,NinePatchImage,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\NinePatchImage.cs,AddFrame,The length of the statement  "	var vbox = CreateSections (frame' Enumerable.Range (1' (int)bitmap.Height - 1).Select (n => bitmap.GetPixel ((int)bitmap.Width - 1' n))); " is 137.
Long Statement,Xwt.Formats,MarkdownTextFormat,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Formats\MarkdownTextFormat.cs,ParseMarkdown,The length of the statement  "		else if (i < lines.Length - 1 && !string.IsNullOrEmpty (lines [i + 1]) && lines [i + 1].All (c => c == '=' || c == '-')) { " is 122.
Long Statement,Xwt.Formats,MarkdownTextFormat,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Formats\MarkdownTextFormat.cs,ParseMarkdown,The length of the statement  "		else if ((trimmed [0] == '+' || trimmed [0] == '-' || trimmed [0] == '*') && (trimmed [1] == ' ' || trimmed [1] == '\t')) { " is 123.
Long Statement,Xwt.Motion,ObjectTransforms,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Motion\ObjectTransforms.cs,GetColorTransform,The length of the statement  "	return ratio => new Color (Interpolate (ratio' initialColor.Red' endColor.Red)' Interpolate (ratio' initialColor.Green' endColor.Green)' Interpolate (ratio' initialColor.Blue' endColor.Blue)' Interpolate (ratio' initialColor.Alpha' endColor.Alpha)); " is 249.
Long Statement,Xwt.Motion,ObjectTransforms,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Motion\ObjectTransforms.cs,GetPointTransform,The length of the statement  "	return ratio => new Point (Interpolate (ratio' initialPoint.X' endPoint.X)' Interpolate (ratio' initialPoint.Y' endPoint.Y)); " is 125.
Long Statement,Xwt.Motion,ObjectTransforms,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Motion\ObjectTransforms.cs,GetSizeTransform,The length of the statement  "	return ratio => new Size (Interpolate (ratio' initialSize.Width' endSize.Width)' Interpolate (ratio' initialSize.Height' endSize.Height)); " is 138.
Long Statement,Xwt.Motion,ObjectTransforms,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Motion\ObjectTransforms.cs,GetRectangleTransform,The length of the statement  "	return ratio => new Rectangle (Interpolate (ratio' initialRectangle.X' endRectangle.X)' Interpolate (ratio' initialRectangle.Y' endRectangle.Y)' Interpolate (ratio' initialRectangle.Width' endRectangle.Width)' Interpolate (ratio' initialRectangle.Height' endRectangle.Height)); " is 277.
Complex Conditional,Xwt.Drawing,TextLayoutData,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\TextLayout.cs,Equals,The conditional expression  "Width != other.Width || Height != other.Height || Text != other.Text || Font != other.Font || TextTrimming != other.TextTrimming || WrapMode != other.WrapMode"  is complex.
Complex Conditional,Xwt.Drawing,NinePatchImage,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\NinePatchImage.cs,CreateSections,The conditional expression  "p.Red > 0.9 && p.Blue < 0.2 && p.Green < 0.2 && p.Alpha == 1"  is complex.
Complex Conditional,Xwt.Drawing,NinePatchImage,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\NinePatchImage.cs,CreateSections,The conditional expression  "p.Red < 0.2 && p.Blue < 0.2 && p.Green < 0.2 && p.Alpha == 1"  is complex.
Complex Conditional,Xwt.Formats,MarkdownTextFormat,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Formats\MarkdownTextFormat.cs,ParseMarkdown,The conditional expression  "i < lines.Length - 1 && !string.IsNullOrEmpty (lines [i + 1]) && lines [i + 1].All (c => c == '=' || c == '-')"  is complex.
Complex Conditional,Xwt.Formats,MarkdownTextFormat,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Formats\MarkdownTextFormat.cs,ParseMarkdown,The conditional expression  "(trimmed [0] == '+' || trimmed [0] == '-' || trimmed [0] == '*') && (trimmed [1] == ' ' || trimmed [1] == '\t')"  is complex.
Virtual Method Call from Constructor,Xwt,XwtComponent,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\XwtComponent.cs,XwtComponent,The constructor "XwtComponent" calls a virtual method "CreateBackendHost".
Virtual Method Call from Constructor,Xwt.Drawing,TextLayout,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\TextLayout.cs,TextLayout,The constructor "TextLayout" calls a virtual method "Create".
Virtual Method Call from Constructor,Xwt.Drawing,TextLayout,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\TextLayout.cs,TextLayout,The constructor "TextLayout" calls a virtual method "Create".
Virtual Method Call from Constructor,Xwt.Drawing,TextLayout,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\TextLayout.cs,TextLayout,The constructor "TextLayout" calls a virtual method "Create".
Virtual Method Call from Constructor,Xwt.Drawing,TextLayout,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\TextLayout.cs,TextLayout,The constructor "TextLayout" calls a virtual method "Create".
Virtual Method Call from Constructor,Xwt.Drawing,DrawingPath,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\DrawingPath.cs,DrawingPath,The constructor "DrawingPath" calls a virtual method "CreatePath".
Empty Catch Block,Xwt,Desktop,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Desktop.cs,IsRunningOnMac,The method has an empty catch block.
Magic Number,Xwt.Backends,ExtensionMethods,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Backends\ExtensionMethods.cs,GetValue,The following statement contains a magic number: switch (al) {  case WidgetPlacement.Center:  	return 0.5;  case WidgetPlacement.End:  	return 1;  default:  	return 0;  }  
Magic Number,Xwt.Backends,ExtensionMethods,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Backends\ExtensionMethods.cs,GetValue,The following statement contains a magic number: return 0.5;  
Magic Number,Xwt,Widget,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Widget.cs,GetPreferredSize,The following statement contains a magic number: if (sizeCached && widthConstraint == cachedWidthConstraint && heightConstraint == cachedHeightConstraint)  	return cachedSize;  else {  	if (widthRequest != -1 && !widthConstraint.IsConstrained)  		widthConstraint = SizeConstraint.WithSize (widthRequest);  	if (heightRequest != -1 && !heightConstraint.IsConstrained)  		heightConstraint = SizeConstraint.WithSize (heightRequest);  	if (DebugWidgetLayout) {  		LayoutLog ("GetPreferredSize: wc:{0} hc:{1} - {2}"' widthConstraint' heightConstraint' GetWidgetDesc ());  		DebugWidgetLayoutIndent += 3;  	}  	if (widthRequest == -1 || heightRequest == -1)  		cachedSize = OnGetPreferredSize (widthConstraint' heightConstraint);  	if (DebugWidgetLayout)  		DebugWidgetLayoutIndent -= 3;  	if (widthRequest != -1)  		cachedSize.Width = widthRequest;  	else if (minWidth > cachedSize.Width)  		cachedSize.Width = minWidth;  	if (heightRequest != -1)  		cachedSize.Height = heightRequest;  	else if (minHeight > cachedSize.Height)  		cachedSize.Height = minHeight;  	if (cachedSize.Width < 0)  		cachedSize.Width = 0;  	if (cachedSize.Height < 0)  		cachedSize.Height = 0;  	if (!BackendHost.EngineBackend.HandlesSizeNegotiation) {  		sizeCached = true;  		cachedWidthConstraint = widthConstraint;  		cachedHeightConstraint = heightConstraint;  	}  	if (DebugWidgetLayout) {  		LayoutLog ("-> {0}"' cachedSize);  	}  	return cachedSize;  }  
Magic Number,Xwt,Widget,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Widget.cs,GetPreferredSize,The following statement contains a magic number: if (sizeCached && widthConstraint == cachedWidthConstraint && heightConstraint == cachedHeightConstraint)  	return cachedSize;  else {  	if (widthRequest != -1 && !widthConstraint.IsConstrained)  		widthConstraint = SizeConstraint.WithSize (widthRequest);  	if (heightRequest != -1 && !heightConstraint.IsConstrained)  		heightConstraint = SizeConstraint.WithSize (heightRequest);  	if (DebugWidgetLayout) {  		LayoutLog ("GetPreferredSize: wc:{0} hc:{1} - {2}"' widthConstraint' heightConstraint' GetWidgetDesc ());  		DebugWidgetLayoutIndent += 3;  	}  	if (widthRequest == -1 || heightRequest == -1)  		cachedSize = OnGetPreferredSize (widthConstraint' heightConstraint);  	if (DebugWidgetLayout)  		DebugWidgetLayoutIndent -= 3;  	if (widthRequest != -1)  		cachedSize.Width = widthRequest;  	else if (minWidth > cachedSize.Width)  		cachedSize.Width = minWidth;  	if (heightRequest != -1)  		cachedSize.Height = heightRequest;  	else if (minHeight > cachedSize.Height)  		cachedSize.Height = minHeight;  	if (cachedSize.Width < 0)  		cachedSize.Width = 0;  	if (cachedSize.Height < 0)  		cachedSize.Height = 0;  	if (!BackendHost.EngineBackend.HandlesSizeNegotiation) {  		sizeCached = true;  		cachedWidthConstraint = widthConstraint;  		cachedHeightConstraint = heightConstraint;  	}  	if (DebugWidgetLayout) {  		LayoutLog ("-> {0}"' cachedSize);  	}  	return cachedSize;  }  
Magic Number,Xwt,Widget,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Widget.cs,GetPreferredSize,The following statement contains a magic number: if (DebugWidgetLayout) {  	LayoutLog ("GetPreferredSize: wc:{0} hc:{1} - {2}"' widthConstraint' heightConstraint' GetWidgetDesc ());  	DebugWidgetLayoutIndent += 3;  }  
Magic Number,Xwt,Widget,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Widget.cs,GetPreferredSize,The following statement contains a magic number: DebugWidgetLayoutIndent += 3;  
Magic Number,Xwt,Widget,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Widget.cs,GetPreferredSize,The following statement contains a magic number: if (DebugWidgetLayout)  	DebugWidgetLayoutIndent -= 3;  
Magic Number,Xwt,Widget,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Widget.cs,GetPreferredSize,The following statement contains a magic number: DebugWidgetLayoutIndent -= 3;  
Magic Number,Xwt,Widget,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Widget.cs,Reallocate,The following statement contains a magic number: if (DebugWidgetLayout) {  	LayoutLog ("Reallocate: {0} - {1}"' Size' GetWidgetDesc ());  	DebugWidgetLayoutIndent += 3;  }  
Magic Number,Xwt,Widget,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Widget.cs,Reallocate,The following statement contains a magic number: DebugWidgetLayoutIndent += 3;  
Magic Number,Xwt,Widget,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Widget.cs,Reallocate,The following statement contains a magic number: if (DebugWidgetLayout)  	DebugWidgetLayoutIndent -= 3;  
Magic Number,Xwt,Widget,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Widget.cs,Reallocate,The following statement contains a magic number: DebugWidgetLayoutIndent -= 3;  
Magic Number,Xwt,Window,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Window.cs,Window,The following statement contains a magic number: Padding = 12;  
Magic Number,Xwt,Window,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Window.cs,AdjustSize,The following statement contains a magic number: if (!shown) {  	shown = true;  	if (!locationSet && initialLocation != WindowLocation.Manual) {  		Point center;  		if (initialLocation == WindowLocation.CenterScreen || TransientFor == null)  			center = Desktop.PrimaryScreen.VisibleBounds.Center;  		else  			center = TransientFor.ScreenBounds.Center;  		initialBounds.X = Math.Round (center.X - size.Width / 2);  		initialBounds.Y = Math.Round (center.Y - size.Height / 2);  		locationSet = true;  	}  	if (size != Size) {  		if (locationSet)  			Backend.Bounds = new Rectangle (initialBounds.X' initialBounds.Y' size.Width' size.Height);  		else  			Backend.SetSize (size.Width' size.Height);  	}  	else if (locationSet && !shown)  		Backend.Move (initialBounds.X' initialBounds.Y);  }  else {  	if (size != Size)  		Backend.SetSize (size.Width' size.Height);  }  
Magic Number,Xwt,Window,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Window.cs,AdjustSize,The following statement contains a magic number: if (!shown) {  	shown = true;  	if (!locationSet && initialLocation != WindowLocation.Manual) {  		Point center;  		if (initialLocation == WindowLocation.CenterScreen || TransientFor == null)  			center = Desktop.PrimaryScreen.VisibleBounds.Center;  		else  			center = TransientFor.ScreenBounds.Center;  		initialBounds.X = Math.Round (center.X - size.Width / 2);  		initialBounds.Y = Math.Round (center.Y - size.Height / 2);  		locationSet = true;  	}  	if (size != Size) {  		if (locationSet)  			Backend.Bounds = new Rectangle (initialBounds.X' initialBounds.Y' size.Width' size.Height);  		else  			Backend.SetSize (size.Width' size.Height);  	}  	else if (locationSet && !shown)  		Backend.Move (initialBounds.X' initialBounds.Y);  }  else {  	if (size != Size)  		Backend.SetSize (size.Width' size.Height);  }  
Magic Number,Xwt,Window,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Window.cs,AdjustSize,The following statement contains a magic number: if (!locationSet && initialLocation != WindowLocation.Manual) {  	Point center;  	if (initialLocation == WindowLocation.CenterScreen || TransientFor == null)  		center = Desktop.PrimaryScreen.VisibleBounds.Center;  	else  		center = TransientFor.ScreenBounds.Center;  	initialBounds.X = Math.Round (center.X - size.Width / 2);  	initialBounds.Y = Math.Round (center.Y - size.Height / 2);  	locationSet = true;  }  
Magic Number,Xwt,Window,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Window.cs,AdjustSize,The following statement contains a magic number: if (!locationSet && initialLocation != WindowLocation.Manual) {  	Point center;  	if (initialLocation == WindowLocation.CenterScreen || TransientFor == null)  		center = Desktop.PrimaryScreen.VisibleBounds.Center;  	else  		center = TransientFor.ScreenBounds.Center;  	initialBounds.X = Math.Round (center.X - size.Width / 2);  	initialBounds.Y = Math.Round (center.Y - size.Height / 2);  	locationSet = true;  }  
Magic Number,Xwt,Window,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Window.cs,AdjustSize,The following statement contains a magic number: initialBounds.X = Math.Round (center.X - size.Width / 2);  
Magic Number,Xwt,Window,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Window.cs,AdjustSize,The following statement contains a magic number: initialBounds.Y = Math.Round (center.Y - size.Height / 2);  
Magic Number,Xwt,Paned,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Paned.cs,Paned,The following statement contains a magic number: panel2 = new Panel ((WidgetBackendHost)BackendHost' 2);  
Magic Number,Xwt,Rectangle,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Rectangle.cs,GetHashCode,The following statement contains a magic number: unchecked {  	var hash = X.GetHashCode ();  	hash = (hash * 397) ^ Y.GetHashCode ();  	hash = (hash * 397) ^ Width.GetHashCode ();  	hash = (hash * 397) ^ Height.GetHashCode ();  	return hash;  }  
Magic Number,Xwt,Rectangle,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Rectangle.cs,GetHashCode,The following statement contains a magic number: unchecked {  	var hash = X.GetHashCode ();  	hash = (hash * 397) ^ Y.GetHashCode ();  	hash = (hash * 397) ^ Width.GetHashCode ();  	hash = (hash * 397) ^ Height.GetHashCode ();  	return hash;  }  
Magic Number,Xwt,Rectangle,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Rectangle.cs,GetHashCode,The following statement contains a magic number: unchecked {  	var hash = X.GetHashCode ();  	hash = (hash * 397) ^ Y.GetHashCode ();  	hash = (hash * 397) ^ Width.GetHashCode ();  	hash = (hash * 397) ^ Height.GetHashCode ();  	return hash;  }  
Magic Number,Xwt,Rectangle,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Rectangle.cs,GetHashCode,The following statement contains a magic number: hash = (hash * 397) ^ Y.GetHashCode ();  
Magic Number,Xwt,Rectangle,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Rectangle.cs,GetHashCode,The following statement contains a magic number: hash = (hash * 397) ^ Width.GetHashCode ();  
Magic Number,Xwt,Rectangle,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Rectangle.cs,GetHashCode,The following statement contains a magic number: hash = (hash * 397) ^ Height.GetHashCode ();  
Magic Number,Xwt,Rectangle,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Rectangle.cs,Inflate,The following statement contains a magic number: r.Width += width * 2;  
Magic Number,Xwt,Rectangle,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Rectangle.cs,Inflate,The following statement contains a magic number: r.Height += height * 2;  
Magic Number,Xwt,Point,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Point.cs,GetHashCode,The following statement contains a magic number: unchecked {  	return (X.GetHashCode () * 397) ^ Y.GetHashCode ();  }  
Magic Number,Xwt,Point,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Point.cs,GetHashCode,The following statement contains a magic number: return (X.GetHashCode () * 397) ^ Y.GetHashCode ();  
Magic Number,Xwt,Size,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Size.cs,GetHashCode,The following statement contains a magic number: unchecked {  	return (width.GetHashCode () * 397) ^ height.GetHashCode ();  }  
Magic Number,Xwt,Size,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Size.cs,GetHashCode,The following statement contains a magic number: return (width.GetHashCode () * 397) ^ height.GetHashCode ();  
Magic Number,Xwt,Distance,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Distance.cs,GetHashCode,The following statement contains a magic number: unchecked {  	return (dx.GetHashCode () * 397) ^ dy.GetHashCode ();  }  
Magic Number,Xwt,Distance,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Distance.cs,GetHashCode,The following statement contains a magic number: return (dx.GetHashCode () * 397) ^ dy.GetHashCode ();  
Magic Number,Xwt,WidgetSpacingValueSerializer,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\WidgetSpacing.cs,ConvertFromString,The following statement contains a magic number: if (value.Length >= 2 && double.TryParse (values [1]' NumberStyles.Any' CultureInfo.InvariantCulture' out v))  	c.Top = v;  
Magic Number,Xwt,WidgetSpacingValueSerializer,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\WidgetSpacing.cs,ConvertFromString,The following statement contains a magic number: if (value.Length >= 3 && double.TryParse (values [2]' NumberStyles.Any' CultureInfo.InvariantCulture' out v))  	c.Right = v;  
Magic Number,Xwt,WidgetSpacingValueSerializer,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\WidgetSpacing.cs,ConvertFromString,The following statement contains a magic number: if (value.Length >= 3 && double.TryParse (values [2]' NumberStyles.Any' CultureInfo.InvariantCulture' out v))  	c.Right = v;  
Magic Number,Xwt,WidgetSpacingValueSerializer,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\WidgetSpacing.cs,ConvertFromString,The following statement contains a magic number: if (value.Length >= 4 && double.TryParse (values [3]' NumberStyles.Any' CultureInfo.InvariantCulture' out v))  	c.Bottom = v;  
Magic Number,Xwt,WidgetSpacingValueSerializer,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\WidgetSpacing.cs,ConvertFromString,The following statement contains a magic number: if (value.Length >= 4 && double.TryParse (values [3]' NumberStyles.Any' CultureInfo.InvariantCulture' out v))  	c.Bottom = v;  
Magic Number,Xwt,DefaultColorSelectorBackend,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\ColorSelector.cs,DefaultColorSelectorBackend,The following statement contains a magic number: hsBox.Light = 0.5;  
Magic Number,Xwt,DefaultColorSelectorBackend,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\ColorSelector.cs,DefaultColorSelectorBackend,The following statement contains a magic number: colorBox = new ColorSelectionBox () {  	MinHeight = 20  };  
Magic Number,Xwt,DefaultColorSelectorBackend,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\ColorSelector.cs,DefaultColorSelectorBackend,The following statement contains a magic number: entryTable.Add (colorBox' 1' 0' colspan: 4);  
Magic Number,Xwt,DefaultColorSelectorBackend,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\ColorSelector.cs,DefaultColorSelectorBackend,The following statement contains a magic number: entryTable.Add (new HSeparator ()' 0' 1' colspan: 5);  
Magic Number,Xwt,DefaultColorSelectorBackend,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\ColorSelector.cs,DefaultColorSelectorBackend,The following statement contains a magic number: r = 2;  
Magic Number,Xwt,DefaultColorSelectorBackend,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\ColorSelector.cs,DefaultColorSelectorBackend,The following statement contains a magic number: entryTable.Add (new Label ("Red:")' 3' r);  
Magic Number,Xwt,DefaultColorSelectorBackend,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\ColorSelector.cs,DefaultColorSelectorBackend,The following statement contains a magic number: entryTable.Add (redEntry = new TextEntry () {  	MinWidth = entryWidth  }' 4' r++);  
Magic Number,Xwt,DefaultColorSelectorBackend,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\ColorSelector.cs,DefaultColorSelectorBackend,The following statement contains a magic number: entryTable.Add (new Label ("Green:")' 3' r);  
Magic Number,Xwt,DefaultColorSelectorBackend,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\ColorSelector.cs,DefaultColorSelectorBackend,The following statement contains a magic number: entryTable.Add (greenEntry = new TextEntry () {  	MinWidth = entryWidth  }' 4' r++);  
Magic Number,Xwt,DefaultColorSelectorBackend,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\ColorSelector.cs,DefaultColorSelectorBackend,The following statement contains a magic number: entryTable.Add (new Label ("Blue:")' 3' r);  
Magic Number,Xwt,DefaultColorSelectorBackend,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\ColorSelector.cs,DefaultColorSelectorBackend,The following statement contains a magic number: entryTable.Add (blueEntry = new TextEntry () {  	MinWidth = entryWidth  }' 4' r++);  
Magic Number,Xwt,DefaultColorSelectorBackend,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\ColorSelector.cs,DefaultColorSelectorBackend,The following statement contains a magic number: entryTable.Add (alphaSeparator = new HSeparator ()' 0' r++' colspan: 5);  
Magic Number,Xwt,DefaultColorSelectorBackend,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\ColorSelector.cs,LoadAlphaEntry,The following statement contains a magic number: alphaEntry.Text = ((int)(currentColor.Alpha * 255)).ToString ();  
Magic Number,Xwt,DefaultColorSelectorBackend,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\ColorSelector.cs,LoadHslEntries,The following statement contains a magic number: hueEntry.Text = ((int)(currentColor.Hue * 255)).ToString ();  
Magic Number,Xwt,DefaultColorSelectorBackend,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\ColorSelector.cs,LoadHslEntries,The following statement contains a magic number: satEntry.Text = ((int)(currentColor.Saturation * 255)).ToString ();  
Magic Number,Xwt,DefaultColorSelectorBackend,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\ColorSelector.cs,LoadHslEntries,The following statement contains a magic number: lightEntry.Text = ((int)(currentColor.Light * 255)).ToString ();  
Magic Number,Xwt,DefaultColorSelectorBackend,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\ColorSelector.cs,LoadRgbEntries,The following statement contains a magic number: redEntry.Text = ((int)(currentColor.Red * 255)).ToString ();  
Magic Number,Xwt,DefaultColorSelectorBackend,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\ColorSelector.cs,LoadRgbEntries,The following statement contains a magic number: greenEntry.Text = ((int)(currentColor.Green * 255)).ToString ();  
Magic Number,Xwt,DefaultColorSelectorBackend,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\ColorSelector.cs,LoadRgbEntries,The following statement contains a magic number: blueEntry.Text = ((int)(currentColor.Blue * 255)).ToString ();  
Magic Number,Xwt,HueBox,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\ColorSelector.cs,HueBox,The following statement contains a magic number: MinWidth = size + padding * 2;  
Magic Number,Xwt,HueBox,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\ColorSelector.cs,HueBox,The following statement contains a magic number: MinHeight = size + padding * 2;  
Magic Number,Xwt,HueBox,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\ColorSelector.cs,OnDraw,The following statement contains a magic number: ctx.Rectangle (selection.X + padding - 2 + 0.5' selection.Y + padding - 2 + 0.5' 4' 4);  
Magic Number,Xwt,HueBox,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\ColorSelector.cs,OnDraw,The following statement contains a magic number: ctx.Rectangle (selection.X + padding - 2 + 0.5' selection.Y + padding - 2 + 0.5' 4' 4);  
Magic Number,Xwt,HueBox,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\ColorSelector.cs,OnDraw,The following statement contains a magic number: ctx.Rectangle (selection.X + padding - 2 + 0.5' selection.Y + padding - 2 + 0.5' 4' 4);  
Magic Number,Xwt,HueBox,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\ColorSelector.cs,OnDraw,The following statement contains a magic number: ctx.Rectangle (selection.X + padding - 2 + 0.5' selection.Y + padding - 2 + 0.5' 4' 4);  
Magic Number,Xwt,HueBox,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\ColorSelector.cs,OnDraw,The following statement contains a magic number: ctx.Rectangle (selection.X + padding - 2 + 0.5' selection.Y + padding - 2 + 0.5' 4' 4);  
Magic Number,Xwt,HueBox,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\ColorSelector.cs,OnDraw,The following statement contains a magic number: ctx.Rectangle (selection.X + padding - 2 + 0.5' selection.Y + padding - 2 + 0.5' 4' 4);  
Magic Number,Xwt,LightBox,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\ColorSelector.cs,LightBox,The following statement contains a magic number: MinWidth = 20;  
Magic Number,Xwt,LightBox,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\ColorSelector.cs,LightBox,The following statement contains a magic number: MinHeight = 20;  
Magic Number,Xwt,LightBox,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\ColorSelector.cs,OnDraw,The following statement contains a magic number: ctx.Rectangle (0.5' padding + (int)(((double)range) * (1 - light)) + 0.5 - 2' Size.Width - 1' 4);  
Magic Number,Xwt,LightBox,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\ColorSelector.cs,OnDraw,The following statement contains a magic number: ctx.Rectangle (0.5' padding + (int)(((double)range) * (1 - light)) + 0.5 - 2' Size.Width - 1' 4);  
Magic Number,Xwt,LightBox,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\ColorSelector.cs,OnDraw,The following statement contains a magic number: ctx.Rectangle (0.5' padding + (int)(((double)range) * (1 - light)) + 0.5 - 2' Size.Width - 1' 4);  
Magic Number,Xwt,LightBox,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\ColorSelector.cs,OnDraw,The following statement contains a magic number: ctx.Rectangle (0.5' padding + (int)(((double)range) * (1 - light)) + 0.5 - 2' Size.Width - 1' 4);  
Magic Number,Xwt,Desktop,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Desktop.cs,IsRunningOnMac,The following statement contains a magic number: try {  	buf = Marshal.AllocHGlobal (8192);  	// This is a hacktastic way of getting sysname from uname ()  	if (uname (buf) == 0) {  		string os = System.Runtime.InteropServices.Marshal.PtrToStringAnsi (buf);  		if (os == "Darwin")  			return true;  	}  }  catch {  }  finally {  	if (buf != IntPtr.Zero)  		System.Runtime.InteropServices.Marshal.FreeHGlobal (buf);  }  
Magic Number,Xwt,Desktop,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Desktop.cs,IsRunningOnMac,The following statement contains a magic number: buf = Marshal.AllocHGlobal (8192);  
Magic Number,Xwt,Desktop,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Desktop.cs,GetFileIcon,The following statement contains a magic number: if (img != null)  	return new Drawing.Image (img' Toolkit.CurrentEngine);  else {  	if (blankImage == null)  		blankImage = new Xwt.Drawing.ImageBuilder (16' 16).ToVectorImage ();  	return blankImage;  }  
Magic Number,Xwt,Desktop,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Desktop.cs,GetFileIcon,The following statement contains a magic number: if (img != null)  	return new Drawing.Image (img' Toolkit.CurrentEngine);  else {  	if (blankImage == null)  		blankImage = new Xwt.Drawing.ImageBuilder (16' 16).ToVectorImage ();  	return blankImage;  }  
Magic Number,Xwt,Desktop,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Desktop.cs,GetFileIcon,The following statement contains a magic number: if (blankImage == null)  	blankImage = new Xwt.Drawing.ImageBuilder (16' 16).ToVectorImage ();  
Magic Number,Xwt,Desktop,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Desktop.cs,GetFileIcon,The following statement contains a magic number: if (blankImage == null)  	blankImage = new Xwt.Drawing.ImageBuilder (16' 16).ToVectorImage ();  
Magic Number,Xwt,Desktop,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Desktop.cs,GetFileIcon,The following statement contains a magic number: blankImage = new Xwt.Drawing.ImageBuilder (16' 16).ToVectorImage ();  
Magic Number,Xwt,Desktop,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\Desktop.cs,GetFileIcon,The following statement contains a magic number: blankImage = new Xwt.Drawing.ImageBuilder (16' 16).ToVectorImage ();  
Magic Number,Xwt,ScrollAdjustment,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\ScrollAdjustment.cs,ScrollAdjustment,The following statement contains a magic number: upperValue = 100;  
Magic Number,Xwt,ScrollAdjustment,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\ScrollAdjustment.cs,ScrollAdjustment,The following statement contains a magic number: pageSize = 10;  
Magic Number,Xwt,ScrollAdjustment,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\ScrollAdjustment.cs,ScrollAdjustment,The following statement contains a magic number: pageIncrement = 10;  
Magic Number,Xwt.Drawing,Image,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Image.cs,WithSize,The following statement contains a magic number: switch (size) {  case IconSize.Small:  	s = new Size (16' 16);  	break;  case IconSize.Medium:  	s = new Size (24' 24);  	break;  case IconSize.Large:  	s = new Size (32' 32);  	break;  default:  	throw new ArgumentOutOfRangeException ("size");  }  
Magic Number,Xwt.Drawing,Image,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Image.cs,WithSize,The following statement contains a magic number: switch (size) {  case IconSize.Small:  	s = new Size (16' 16);  	break;  case IconSize.Medium:  	s = new Size (24' 24);  	break;  case IconSize.Large:  	s = new Size (32' 32);  	break;  default:  	throw new ArgumentOutOfRangeException ("size");  }  
Magic Number,Xwt.Drawing,Image,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Image.cs,WithSize,The following statement contains a magic number: switch (size) {  case IconSize.Small:  	s = new Size (16' 16);  	break;  case IconSize.Medium:  	s = new Size (24' 24);  	break;  case IconSize.Large:  	s = new Size (32' 32);  	break;  default:  	throw new ArgumentOutOfRangeException ("size");  }  
Magic Number,Xwt.Drawing,Image,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Image.cs,WithSize,The following statement contains a magic number: switch (size) {  case IconSize.Small:  	s = new Size (16' 16);  	break;  case IconSize.Medium:  	s = new Size (24' 24);  	break;  case IconSize.Large:  	s = new Size (32' 32);  	break;  default:  	throw new ArgumentOutOfRangeException ("size");  }  
Magic Number,Xwt.Drawing,Image,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Image.cs,WithSize,The following statement contains a magic number: switch (size) {  case IconSize.Small:  	s = new Size (16' 16);  	break;  case IconSize.Medium:  	s = new Size (24' 24);  	break;  case IconSize.Large:  	s = new Size (32' 32);  	break;  default:  	throw new ArgumentOutOfRangeException ("size");  }  
Magic Number,Xwt.Drawing,Image,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Image.cs,WithSize,The following statement contains a magic number: switch (size) {  case IconSize.Small:  	s = new Size (16' 16);  	break;  case IconSize.Medium:  	s = new Size (24' 24);  	break;  case IconSize.Large:  	s = new Size (32' 32);  	break;  default:  	throw new ArgumentOutOfRangeException ("size");  }  
Magic Number,Xwt.Drawing,Image,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Image.cs,WithSize,The following statement contains a magic number: s = new Size (16' 16);  
Magic Number,Xwt.Drawing,Image,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Image.cs,WithSize,The following statement contains a magic number: s = new Size (16' 16);  
Magic Number,Xwt.Drawing,Image,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Image.cs,WithSize,The following statement contains a magic number: s = new Size (24' 24);  
Magic Number,Xwt.Drawing,Image,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Image.cs,WithSize,The following statement contains a magic number: s = new Size (24' 24);  
Magic Number,Xwt.Drawing,Image,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Image.cs,WithSize,The following statement contains a magic number: s = new Size (32' 32);  
Magic Number,Xwt.Drawing,Image,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Image.cs,WithSize,The following statement contains a magic number: s = new Size (32' 32);  
Magic Number,Xwt.Drawing,Color,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Color.cs,WithIncreasedContrast,The following statement contains a magic number: return WithIncreasedContrast (new Color (0.5' 0.5' 0.5)' amount);  
Magic Number,Xwt.Drawing,Color,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Color.cs,WithIncreasedContrast,The following statement contains a magic number: return WithIncreasedContrast (new Color (0.5' 0.5' 0.5)' amount);  
Magic Number,Xwt.Drawing,Color,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Color.cs,WithIncreasedContrast,The following statement contains a magic number: return WithIncreasedContrast (new Color (0.5' 0.5' 0.5)' amount);  
Magic Number,Xwt.Drawing,Color,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Color.cs,FromBytes,The following statement contains a magic number: return FromBytes (red' green' blue' 255);  
Magic Number,Xwt.Drawing,Color,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Color.cs,FromBytes,The following statement contains a magic number: return new Color {  	Red = ((double)red) / 255.0'  	Green = ((double)green) / 255.0'  	Blue = ((double)blue) / 255.0'  	Alpha = ((double)alpha) / 255.0  };  
Magic Number,Xwt.Drawing,Color,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Color.cs,FromBytes,The following statement contains a magic number: return new Color {  	Red = ((double)red) / 255.0'  	Green = ((double)green) / 255.0'  	Blue = ((double)blue) / 255.0'  	Alpha = ((double)alpha) / 255.0  };  
Magic Number,Xwt.Drawing,Color,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Color.cs,FromBytes,The following statement contains a magic number: return new Color {  	Red = ((double)red) / 255.0'  	Green = ((double)green) / 255.0'  	Blue = ((double)blue) / 255.0'  	Alpha = ((double)alpha) / 255.0  };  
Magic Number,Xwt.Drawing,Color,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Color.cs,FromBytes,The following statement contains a magic number: return new Color {  	Red = ((double)red) / 255.0'  	Green = ((double)green) / 255.0'  	Blue = ((double)blue) / 255.0'  	Alpha = ((double)alpha) / 255.0  };  
Magic Number,Xwt.Drawing,Color,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Color.cs,TryParse,The following statement contains a magic number: color = Color.FromBytes ((byte)(val >> 24)' (byte)((val >> 16) & 0xff)' (byte)((val >> 8) & 0xff)' (byte)(val & 0xff));  
Magic Number,Xwt.Drawing,Color,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Color.cs,TryParse,The following statement contains a magic number: color = Color.FromBytes ((byte)(val >> 24)' (byte)((val >> 16) & 0xff)' (byte)((val >> 8) & 0xff)' (byte)(val & 0xff));  
Magic Number,Xwt.Drawing,Color,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Color.cs,TryParse,The following statement contains a magic number: color = Color.FromBytes ((byte)(val >> 24)' (byte)((val >> 16) & 0xff)' (byte)((val >> 8) & 0xff)' (byte)(val & 0xff));  
Magic Number,Xwt.Drawing,Color,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Color.cs,TryParseColourFromHex,The following statement contains a magic number: if (str [0] != '#' || str.Length > 9)  	return false;  
Magic Number,Xwt.Drawing,Color,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Color.cs,TryParseColourFromHex,The following statement contains a magic number: val = val << ((9 - str.Length) * 4);  
Magic Number,Xwt.Drawing,Color,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Color.cs,TryParseColourFromHex,The following statement contains a magic number: val = val << ((9 - str.Length) * 4);  
Magic Number,Xwt.Drawing,Color,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Color.cs,TryParseColourFromHex,The following statement contains a magic number: if (str.Length <= 7)  	val |= 0xff;  
Magic Number,Xwt.Drawing,Color,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Color.cs,GetHashCode,The following statement contains a magic number: unchecked {  	var hash = r.GetHashCode ();  	hash = (hash * 397) ^ g.GetHashCode ();  	hash = (hash * 397) ^ b.GetHashCode ();  	hash = (hash * 397) ^ a.GetHashCode ();  	return hash;  }  
Magic Number,Xwt.Drawing,Color,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Color.cs,GetHashCode,The following statement contains a magic number: unchecked {  	var hash = r.GetHashCode ();  	hash = (hash * 397) ^ g.GetHashCode ();  	hash = (hash * 397) ^ b.GetHashCode ();  	hash = (hash * 397) ^ a.GetHashCode ();  	return hash;  }  
Magic Number,Xwt.Drawing,Color,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Color.cs,GetHashCode,The following statement contains a magic number: unchecked {  	var hash = r.GetHashCode ();  	hash = (hash * 397) ^ g.GetHashCode ();  	hash = (hash * 397) ^ b.GetHashCode ();  	hash = (hash * 397) ^ a.GetHashCode ();  	return hash;  }  
Magic Number,Xwt.Drawing,Color,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Color.cs,GetHashCode,The following statement contains a magic number: hash = (hash * 397) ^ g.GetHashCode ();  
Magic Number,Xwt.Drawing,Color,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Color.cs,GetHashCode,The following statement contains a magic number: hash = (hash * 397) ^ b.GetHashCode ();  
Magic Number,Xwt.Drawing,Color,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Color.cs,GetHashCode,The following statement contains a magic number: hash = (hash * 397) ^ a.GetHashCode ();  
Magic Number,Xwt.Drawing,ColorValueSerializer,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Color.cs,ConvertToString,The following statement contains a magic number: return "#" + ((int)(s.Red * 255)).ToString ("x2") + ((int)(s.Green * 255)).ToString ("x2") + ((int)(s.Blue * 255)).ToString ("x2") + ((int)(s.Alpha * 255)).ToString ("x2");  
Magic Number,Xwt.Drawing,ColorValueSerializer,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Color.cs,ConvertToString,The following statement contains a magic number: return "#" + ((int)(s.Red * 255)).ToString ("x2") + ((int)(s.Green * 255)).ToString ("x2") + ((int)(s.Blue * 255)).ToString ("x2") + ((int)(s.Alpha * 255)).ToString ("x2");  
Magic Number,Xwt.Drawing,ColorValueSerializer,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Color.cs,ConvertToString,The following statement contains a magic number: return "#" + ((int)(s.Red * 255)).ToString ("x2") + ((int)(s.Green * 255)).ToString ("x2") + ((int)(s.Blue * 255)).ToString ("x2") + ((int)(s.Alpha * 255)).ToString ("x2");  
Magic Number,Xwt.Drawing,ColorValueSerializer,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Color.cs,ConvertToString,The following statement contains a magic number: return "#" + ((int)(s.Red * 255)).ToString ("x2") + ((int)(s.Green * 255)).ToString ("x2") + ((int)(s.Blue * 255)).ToString ("x2") + ((int)(s.Alpha * 255)).ToString ("x2");  
Magic Number,Xwt.Drawing,HslColor,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\HslColor.cs,HslColor,The following statement contains a magic number: this.L = (m + v) / 2.0;  
Magic Number,Xwt.Drawing,HslColor,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\HslColor.cs,HslColor,The following statement contains a magic number: if (this.S > 0.0) {  	this.S /= (this.L <= 0.5) ? (v + m) : (2.0 - v - m);  }  else {  	return;  }  
Magic Number,Xwt.Drawing,HslColor,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\HslColor.cs,HslColor,The following statement contains a magic number: if (this.S > 0.0) {  	this.S /= (this.L <= 0.5) ? (v + m) : (2.0 - v - m);  }  else {  	return;  }  
Magic Number,Xwt.Drawing,HslColor,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\HslColor.cs,HslColor,The following statement contains a magic number: this.S /= (this.L <= 0.5) ? (v + m) : (2.0 - v - m);  
Magic Number,Xwt.Drawing,HslColor,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\HslColor.cs,HslColor,The following statement contains a magic number: this.S /= (this.L <= 0.5) ? (v + m) : (2.0 - v - m);  
Magic Number,Xwt.Drawing,HslColor,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\HslColor.cs,HslColor,The following statement contains a magic number: if (r == v) {  	this.H = (g == m ? 5.0 + b2 : 1.0 - g2);  }  else if (g == v) {  	this.H = (b == m ? 1.0 + r2 : 3.0 - b2);  }  else {  	this.H = (r == m ? 3.0 + g2 : 5.0 - r2);  }  
Magic Number,Xwt.Drawing,HslColor,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\HslColor.cs,HslColor,The following statement contains a magic number: if (r == v) {  	this.H = (g == m ? 5.0 + b2 : 1.0 - g2);  }  else if (g == v) {  	this.H = (b == m ? 1.0 + r2 : 3.0 - b2);  }  else {  	this.H = (r == m ? 3.0 + g2 : 5.0 - r2);  }  
Magic Number,Xwt.Drawing,HslColor,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\HslColor.cs,HslColor,The following statement contains a magic number: if (r == v) {  	this.H = (g == m ? 5.0 + b2 : 1.0 - g2);  }  else if (g == v) {  	this.H = (b == m ? 1.0 + r2 : 3.0 - b2);  }  else {  	this.H = (r == m ? 3.0 + g2 : 5.0 - r2);  }  
Magic Number,Xwt.Drawing,HslColor,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\HslColor.cs,HslColor,The following statement contains a magic number: if (r == v) {  	this.H = (g == m ? 5.0 + b2 : 1.0 - g2);  }  else if (g == v) {  	this.H = (b == m ? 1.0 + r2 : 3.0 - b2);  }  else {  	this.H = (r == m ? 3.0 + g2 : 5.0 - r2);  }  
Magic Number,Xwt.Drawing,HslColor,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\HslColor.cs,HslColor,The following statement contains a magic number: this.H = (g == m ? 5.0 + b2 : 1.0 - g2);  
Magic Number,Xwt.Drawing,HslColor,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\HslColor.cs,HslColor,The following statement contains a magic number: if (g == v) {  	this.H = (b == m ? 1.0 + r2 : 3.0 - b2);  }  else {  	this.H = (r == m ? 3.0 + g2 : 5.0 - r2);  }  
Magic Number,Xwt.Drawing,HslColor,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\HslColor.cs,HslColor,The following statement contains a magic number: if (g == v) {  	this.H = (b == m ? 1.0 + r2 : 3.0 - b2);  }  else {  	this.H = (r == m ? 3.0 + g2 : 5.0 - r2);  }  
Magic Number,Xwt.Drawing,HslColor,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\HslColor.cs,HslColor,The following statement contains a magic number: if (g == v) {  	this.H = (b == m ? 1.0 + r2 : 3.0 - b2);  }  else {  	this.H = (r == m ? 3.0 + g2 : 5.0 - r2);  }  
Magic Number,Xwt.Drawing,HslColor,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\HslColor.cs,HslColor,The following statement contains a magic number: this.H = (b == m ? 1.0 + r2 : 3.0 - b2);  
Magic Number,Xwt.Drawing,HslColor,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\HslColor.cs,HslColor,The following statement contains a magic number: this.H = (r == m ? 3.0 + g2 : 5.0 - r2);  
Magic Number,Xwt.Drawing,HslColor,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\HslColor.cs,HslColor,The following statement contains a magic number: this.H = (r == m ? 3.0 + g2 : 5.0 - r2);  
Magic Number,Xwt.Drawing,HslColor,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\HslColor.cs,HslColor,The following statement contains a magic number: this.H /= 6.0;  
Magic Number,Xwt.Drawing,HslColor,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\HslColor.cs,Brightness,The following statement contains a magic number: return System.Math.Sqrt (r * .241 + g * .691 + b * .068);  
Magic Number,Xwt.Drawing,HslColor,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\HslColor.cs,Brightness,The following statement contains a magic number: return System.Math.Sqrt (r * .241 + g * .691 + b * .068);  
Magic Number,Xwt.Drawing,HslColor,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\HslColor.cs,Brightness,The following statement contains a magic number: return System.Math.Sqrt (r * .241 + g * .691 + b * .068);  
Magic Number,Xwt.Drawing,Matrix,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Matrix.cs,GetHashCode,The following statement contains a magic number: h = (h << 5) - h + M21.GetHashCode ();  
Magic Number,Xwt.Drawing,Matrix,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Matrix.cs,GetHashCode,The following statement contains a magic number: h = (h << 5) - h + M12.GetHashCode ();  
Magic Number,Xwt.Drawing,Matrix,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Matrix.cs,GetHashCode,The following statement contains a magic number: h = (h << 5) - h + M22.GetHashCode ();  
Magic Number,Xwt.Drawing,Matrix,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Matrix.cs,GetHashCode,The following statement contains a magic number: h = (h << 5) - h + OffsetX.GetHashCode ();  
Magic Number,Xwt.Drawing,Matrix,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Matrix.cs,GetHashCode,The following statement contains a magic number: h = (h << 5) - h + OffsetY.GetHashCode ();  
Magic Number,Xwt.Drawing,Matrix,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Matrix.cs,Rotate,The following statement contains a magic number: angle = angle % 360;  
Magic Number,Xwt.Drawing,Matrix,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Matrix.cs,Rotate,The following statement contains a magic number: if (angle == 90 || angle == -270)  	Prepend (0' 1' -1' 0' 0' 0);  else if (angle == -90 || angle == 270)  	Prepend (0' -1' 1' 0' 0' 0);  else if (angle == 180 || angle == -180)  	Prepend (-1' 0' 0' -1' 0' 0);  else {  	var theta = angle * pi180;  	var cos = Math.Cos (theta);  	var sin = Math.Sin (theta);  	Prepend (cos' sin' -sin' cos' 0' 0);  }  
Magic Number,Xwt.Drawing,Matrix,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Matrix.cs,Rotate,The following statement contains a magic number: if (angle == 90 || angle == -270)  	Prepend (0' 1' -1' 0' 0' 0);  else if (angle == -90 || angle == 270)  	Prepend (0' -1' 1' 0' 0' 0);  else if (angle == 180 || angle == -180)  	Prepend (-1' 0' 0' -1' 0' 0);  else {  	var theta = angle * pi180;  	var cos = Math.Cos (theta);  	var sin = Math.Sin (theta);  	Prepend (cos' sin' -sin' cos' 0' 0);  }  
Magic Number,Xwt.Drawing,Matrix,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Matrix.cs,Rotate,The following statement contains a magic number: if (angle == 90 || angle == -270)  	Prepend (0' 1' -1' 0' 0' 0);  else if (angle == -90 || angle == 270)  	Prepend (0' -1' 1' 0' 0' 0);  else if (angle == 180 || angle == -180)  	Prepend (-1' 0' 0' -1' 0' 0);  else {  	var theta = angle * pi180;  	var cos = Math.Cos (theta);  	var sin = Math.Sin (theta);  	Prepend (cos' sin' -sin' cos' 0' 0);  }  
Magic Number,Xwt.Drawing,Matrix,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Matrix.cs,Rotate,The following statement contains a magic number: if (angle == 90 || angle == -270)  	Prepend (0' 1' -1' 0' 0' 0);  else if (angle == -90 || angle == 270)  	Prepend (0' -1' 1' 0' 0' 0);  else if (angle == 180 || angle == -180)  	Prepend (-1' 0' 0' -1' 0' 0);  else {  	var theta = angle * pi180;  	var cos = Math.Cos (theta);  	var sin = Math.Sin (theta);  	Prepend (cos' sin' -sin' cos' 0' 0);  }  
Magic Number,Xwt.Drawing,Matrix,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Matrix.cs,Rotate,The following statement contains a magic number: if (angle == 90 || angle == -270)  	Prepend (0' 1' -1' 0' 0' 0);  else if (angle == -90 || angle == 270)  	Prepend (0' -1' 1' 0' 0' 0);  else if (angle == 180 || angle == -180)  	Prepend (-1' 0' 0' -1' 0' 0);  else {  	var theta = angle * pi180;  	var cos = Math.Cos (theta);  	var sin = Math.Sin (theta);  	Prepend (cos' sin' -sin' cos' 0' 0);  }  
Magic Number,Xwt.Drawing,Matrix,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Matrix.cs,Rotate,The following statement contains a magic number: if (angle == 90 || angle == -270)  	Prepend (0' 1' -1' 0' 0' 0);  else if (angle == -90 || angle == 270)  	Prepend (0' -1' 1' 0' 0' 0);  else if (angle == 180 || angle == -180)  	Prepend (-1' 0' 0' -1' 0' 0);  else {  	var theta = angle * pi180;  	var cos = Math.Cos (theta);  	var sin = Math.Sin (theta);  	Prepend (cos' sin' -sin' cos' 0' 0);  }  
Magic Number,Xwt.Drawing,Matrix,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Matrix.cs,Rotate,The following statement contains a magic number: if (angle == -90 || angle == 270)  	Prepend (0' -1' 1' 0' 0' 0);  else if (angle == 180 || angle == -180)  	Prepend (-1' 0' 0' -1' 0' 0);  else {  	var theta = angle * pi180;  	var cos = Math.Cos (theta);  	var sin = Math.Sin (theta);  	Prepend (cos' sin' -sin' cos' 0' 0);  }  
Magic Number,Xwt.Drawing,Matrix,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Matrix.cs,Rotate,The following statement contains a magic number: if (angle == -90 || angle == 270)  	Prepend (0' -1' 1' 0' 0' 0);  else if (angle == 180 || angle == -180)  	Prepend (-1' 0' 0' -1' 0' 0);  else {  	var theta = angle * pi180;  	var cos = Math.Cos (theta);  	var sin = Math.Sin (theta);  	Prepend (cos' sin' -sin' cos' 0' 0);  }  
Magic Number,Xwt.Drawing,Matrix,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Matrix.cs,Rotate,The following statement contains a magic number: if (angle == -90 || angle == 270)  	Prepend (0' -1' 1' 0' 0' 0);  else if (angle == 180 || angle == -180)  	Prepend (-1' 0' 0' -1' 0' 0);  else {  	var theta = angle * pi180;  	var cos = Math.Cos (theta);  	var sin = Math.Sin (theta);  	Prepend (cos' sin' -sin' cos' 0' 0);  }  
Magic Number,Xwt.Drawing,Matrix,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Matrix.cs,Rotate,The following statement contains a magic number: if (angle == -90 || angle == 270)  	Prepend (0' -1' 1' 0' 0' 0);  else if (angle == 180 || angle == -180)  	Prepend (-1' 0' 0' -1' 0' 0);  else {  	var theta = angle * pi180;  	var cos = Math.Cos (theta);  	var sin = Math.Sin (theta);  	Prepend (cos' sin' -sin' cos' 0' 0);  }  
Magic Number,Xwt.Drawing,Matrix,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Matrix.cs,Rotate,The following statement contains a magic number: if (angle == 180 || angle == -180)  	Prepend (-1' 0' 0' -1' 0' 0);  else {  	var theta = angle * pi180;  	var cos = Math.Cos (theta);  	var sin = Math.Sin (theta);  	Prepend (cos' sin' -sin' cos' 0' 0);  }  
Magic Number,Xwt.Drawing,Matrix,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Matrix.cs,Rotate,The following statement contains a magic number: if (angle == 180 || angle == -180)  	Prepend (-1' 0' 0' -1' 0' 0);  else {  	var theta = angle * pi180;  	var cos = Math.Cos (theta);  	var sin = Math.Sin (theta);  	Prepend (cos' sin' -sin' cos' 0' 0);  }  
Magic Number,Xwt.Drawing,Matrix,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Matrix.cs,RotateAppend,The following statement contains a magic number: angle = angle % 360;  
Magic Number,Xwt.Drawing,Matrix,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Matrix.cs,RotateAppend,The following statement contains a magic number: if (angle == 90 || angle == -270)  	Append (0' 1' -1' 0' 0' 0);  else if (angle == -90 || angle == 270)  	Append (0' -1' 1' 0' 0' 0);  else if (angle == 180 || angle == -180)  	Append (-1' 0' 0' -1' 0' 0);  else if (angle == 0)  	return;  else {  	var theta = angle * pi180;  	var cos = Math.Cos (theta);  	var sin = Math.Sin (theta);  	Append (cos' sin' -sin' cos' 0' 0);  }  
Magic Number,Xwt.Drawing,Matrix,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Matrix.cs,RotateAppend,The following statement contains a magic number: if (angle == 90 || angle == -270)  	Append (0' 1' -1' 0' 0' 0);  else if (angle == -90 || angle == 270)  	Append (0' -1' 1' 0' 0' 0);  else if (angle == 180 || angle == -180)  	Append (-1' 0' 0' -1' 0' 0);  else if (angle == 0)  	return;  else {  	var theta = angle * pi180;  	var cos = Math.Cos (theta);  	var sin = Math.Sin (theta);  	Append (cos' sin' -sin' cos' 0' 0);  }  
Magic Number,Xwt.Drawing,Matrix,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Matrix.cs,RotateAppend,The following statement contains a magic number: if (angle == 90 || angle == -270)  	Append (0' 1' -1' 0' 0' 0);  else if (angle == -90 || angle == 270)  	Append (0' -1' 1' 0' 0' 0);  else if (angle == 180 || angle == -180)  	Append (-1' 0' 0' -1' 0' 0);  else if (angle == 0)  	return;  else {  	var theta = angle * pi180;  	var cos = Math.Cos (theta);  	var sin = Math.Sin (theta);  	Append (cos' sin' -sin' cos' 0' 0);  }  
Magic Number,Xwt.Drawing,Matrix,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Matrix.cs,RotateAppend,The following statement contains a magic number: if (angle == 90 || angle == -270)  	Append (0' 1' -1' 0' 0' 0);  else if (angle == -90 || angle == 270)  	Append (0' -1' 1' 0' 0' 0);  else if (angle == 180 || angle == -180)  	Append (-1' 0' 0' -1' 0' 0);  else if (angle == 0)  	return;  else {  	var theta = angle * pi180;  	var cos = Math.Cos (theta);  	var sin = Math.Sin (theta);  	Append (cos' sin' -sin' cos' 0' 0);  }  
Magic Number,Xwt.Drawing,Matrix,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Matrix.cs,RotateAppend,The following statement contains a magic number: if (angle == 90 || angle == -270)  	Append (0' 1' -1' 0' 0' 0);  else if (angle == -90 || angle == 270)  	Append (0' -1' 1' 0' 0' 0);  else if (angle == 180 || angle == -180)  	Append (-1' 0' 0' -1' 0' 0);  else if (angle == 0)  	return;  else {  	var theta = angle * pi180;  	var cos = Math.Cos (theta);  	var sin = Math.Sin (theta);  	Append (cos' sin' -sin' cos' 0' 0);  }  
Magic Number,Xwt.Drawing,Matrix,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Matrix.cs,RotateAppend,The following statement contains a magic number: if (angle == 90 || angle == -270)  	Append (0' 1' -1' 0' 0' 0);  else if (angle == -90 || angle == 270)  	Append (0' -1' 1' 0' 0' 0);  else if (angle == 180 || angle == -180)  	Append (-1' 0' 0' -1' 0' 0);  else if (angle == 0)  	return;  else {  	var theta = angle * pi180;  	var cos = Math.Cos (theta);  	var sin = Math.Sin (theta);  	Append (cos' sin' -sin' cos' 0' 0);  }  
Magic Number,Xwt.Drawing,Matrix,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Matrix.cs,RotateAppend,The following statement contains a magic number: if (angle == -90 || angle == 270)  	Append (0' -1' 1' 0' 0' 0);  else if (angle == 180 || angle == -180)  	Append (-1' 0' 0' -1' 0' 0);  else if (angle == 0)  	return;  else {  	var theta = angle * pi180;  	var cos = Math.Cos (theta);  	var sin = Math.Sin (theta);  	Append (cos' sin' -sin' cos' 0' 0);  }  
Magic Number,Xwt.Drawing,Matrix,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Matrix.cs,RotateAppend,The following statement contains a magic number: if (angle == -90 || angle == 270)  	Append (0' -1' 1' 0' 0' 0);  else if (angle == 180 || angle == -180)  	Append (-1' 0' 0' -1' 0' 0);  else if (angle == 0)  	return;  else {  	var theta = angle * pi180;  	var cos = Math.Cos (theta);  	var sin = Math.Sin (theta);  	Append (cos' sin' -sin' cos' 0' 0);  }  
Magic Number,Xwt.Drawing,Matrix,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Matrix.cs,RotateAppend,The following statement contains a magic number: if (angle == -90 || angle == 270)  	Append (0' -1' 1' 0' 0' 0);  else if (angle == 180 || angle == -180)  	Append (-1' 0' 0' -1' 0' 0);  else if (angle == 0)  	return;  else {  	var theta = angle * pi180;  	var cos = Math.Cos (theta);  	var sin = Math.Sin (theta);  	Append (cos' sin' -sin' cos' 0' 0);  }  
Magic Number,Xwt.Drawing,Matrix,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Matrix.cs,RotateAppend,The following statement contains a magic number: if (angle == -90 || angle == 270)  	Append (0' -1' 1' 0' 0' 0);  else if (angle == 180 || angle == -180)  	Append (-1' 0' 0' -1' 0' 0);  else if (angle == 0)  	return;  else {  	var theta = angle * pi180;  	var cos = Math.Cos (theta);  	var sin = Math.Sin (theta);  	Append (cos' sin' -sin' cos' 0' 0);  }  
Magic Number,Xwt.Drawing,Matrix,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Matrix.cs,RotateAppend,The following statement contains a magic number: if (angle == 180 || angle == -180)  	Append (-1' 0' 0' -1' 0' 0);  else if (angle == 0)  	return;  else {  	var theta = angle * pi180;  	var cos = Math.Cos (theta);  	var sin = Math.Sin (theta);  	Append (cos' sin' -sin' cos' 0' 0);  }  
Magic Number,Xwt.Drawing,Matrix,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\Matrix.cs,RotateAppend,The following statement contains a magic number: if (angle == 180 || angle == -180)  	Append (-1' 0' 0' -1' 0' 0);  else if (angle == 0)  	return;  else {  	var theta = angle * pi180;  	var cos = Math.Cos (theta);  	var sin = Math.Sin (theta);  	Append (cos' sin' -sin' cos' 0' 0);  }  
Magic Number,Xwt.Drawing,DrawingPath,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\DrawingPath.cs,RoundRectangle,The following statement contains a magic number: if (radius > width - radius)  	radius = width / 2;  
Magic Number,Xwt.Drawing,DrawingPath,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\DrawingPath.cs,RoundRectangle,The following statement contains a magic number: radius = width / 2;  
Magic Number,Xwt.Drawing,DrawingPath,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\DrawingPath.cs,RoundRectangle,The following statement contains a magic number: if (radius > height - radius)  	radius = height / 2;  
Magic Number,Xwt.Drawing,DrawingPath,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\DrawingPath.cs,RoundRectangle,The following statement contains a magic number: radius = height / 2;  
Magic Number,Xwt.Drawing,DrawingPath,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\DrawingPath.cs,RoundRectangle,The following statement contains a magic number: if (radius > 0)  	Arc (x + width - radius' y + radius' radius' -90' 0);  
Magic Number,Xwt.Drawing,DrawingPath,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\DrawingPath.cs,RoundRectangle,The following statement contains a magic number: Arc (x + width - radius' y + radius' radius' -90' 0);  
Magic Number,Xwt.Drawing,DrawingPath,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\DrawingPath.cs,RoundRectangle,The following statement contains a magic number: if (radius > 0)  	Arc (x + width - radius' y + height - radius' radius' 0' 90);  
Magic Number,Xwt.Drawing,DrawingPath,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\DrawingPath.cs,RoundRectangle,The following statement contains a magic number: Arc (x + width - radius' y + height - radius' radius' 0' 90);  
Magic Number,Xwt.Drawing,DrawingPath,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\DrawingPath.cs,RoundRectangle,The following statement contains a magic number: if (radius > 0)  	Arc (x + radius' y + height - radius' radius' 90' 180);  
Magic Number,Xwt.Drawing,DrawingPath,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\DrawingPath.cs,RoundRectangle,The following statement contains a magic number: if (radius > 0)  	Arc (x + radius' y + height - radius' radius' 90' 180);  
Magic Number,Xwt.Drawing,DrawingPath,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\DrawingPath.cs,RoundRectangle,The following statement contains a magic number: Arc (x + radius' y + height - radius' radius' 90' 180);  
Magic Number,Xwt.Drawing,DrawingPath,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\DrawingPath.cs,RoundRectangle,The following statement contains a magic number: Arc (x + radius' y + height - radius' radius' 90' 180);  
Magic Number,Xwt.Drawing,DrawingPath,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\DrawingPath.cs,RoundRectangle,The following statement contains a magic number: if (radius > 0)  	Arc (x + radius' y + radius' radius' 180' 270);  
Magic Number,Xwt.Drawing,DrawingPath,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\DrawingPath.cs,RoundRectangle,The following statement contains a magic number: if (radius > 0)  	Arc (x + radius' y + radius' radius' 180' 270);  
Magic Number,Xwt.Drawing,DrawingPath,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\DrawingPath.cs,RoundRectangle,The following statement contains a magic number: Arc (x + radius' y + radius' radius' 180' 270);  
Magic Number,Xwt.Drawing,DrawingPath,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\DrawingPath.cs,RoundRectangle,The following statement contains a magic number: Arc (x + radius' y + radius' radius' 180' 270);  
Magic Number,Xwt.Drawing,NinePatchImage,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\NinePatchImage.cs,AddFrame,The following statement contains a magic number: frame.HorizontalSections = CreateSections (frame' Enumerable.Range (1' (int)bitmap.Width - 2).Select (n => bitmap.GetPixel (n' 0)));  
Magic Number,Xwt.Drawing,NinePatchImage,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\NinePatchImage.cs,AddFrame,The following statement contains a magic number: frame.VerticalSections = CreateSections (frame' Enumerable.Range (1' (int)bitmap.Height - 2).Select (n => bitmap.GetPixel (0' n)));  
Magic Number,Xwt.Drawing,NinePatchImage,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\NinePatchImage.cs,AddFrame,The following statement contains a magic number: if (sec != null) {  	padLeft = sec.Start;  	padRight = bitmap.Width - 2 - padLeft - sec.Size;  }  
Magic Number,Xwt.Drawing,NinePatchImage,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\NinePatchImage.cs,AddFrame,The following statement contains a magic number: padRight = bitmap.Width - 2 - padLeft - sec.Size;  
Magic Number,Xwt.Drawing,NinePatchImage,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\NinePatchImage.cs,AddFrame,The following statement contains a magic number: if (sec != null) {  	padTop = sec.Start;  	padBottom = bitmap.Height - 2 - padTop - sec.Size;  }  
Magic Number,Xwt.Drawing,NinePatchImage,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\NinePatchImage.cs,AddFrame,The following statement contains a magic number: padBottom = bitmap.Height - 2 - padTop - sec.Size;  
Magic Number,Xwt.Drawing,NinePatchImage,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\NinePatchImage.cs,CreateSections,The following statement contains a magic number: foreach (var p in pixels) {  	RenderMode mode;  	// Don't compare exact colors. This is a workaround to make sure regions are properly detected when  	// there are small variations in colors.  	if (p.Red > 0.9 && p.Blue < 0.2 && p.Green < 0.2 && p.Alpha == 1)  		// Red-ish  		mode = RenderMode.Tile;  	else if (p.Red < 0.2 && p.Blue < 0.2 && p.Green < 0.2 && p.Alpha == 1)  		// Black-ish  		mode = RenderMode.Stretch;  	else  		mode = RenderMode.Fixed;  	if (section == null || mode != section.Mode) {  		section = new ImageSection {  			Start = n'  			Size = 1'  			Mode = mode  		};  		sections.Add (section);  	}  	else  		section.Size++;  	n++;  }  
Magic Number,Xwt.Drawing,NinePatchImage,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\NinePatchImage.cs,CreateSections,The following statement contains a magic number: foreach (var p in pixels) {  	RenderMode mode;  	// Don't compare exact colors. This is a workaround to make sure regions are properly detected when  	// there are small variations in colors.  	if (p.Red > 0.9 && p.Blue < 0.2 && p.Green < 0.2 && p.Alpha == 1)  		// Red-ish  		mode = RenderMode.Tile;  	else if (p.Red < 0.2 && p.Blue < 0.2 && p.Green < 0.2 && p.Alpha == 1)  		// Black-ish  		mode = RenderMode.Stretch;  	else  		mode = RenderMode.Fixed;  	if (section == null || mode != section.Mode) {  		section = new ImageSection {  			Start = n'  			Size = 1'  			Mode = mode  		};  		sections.Add (section);  	}  	else  		section.Size++;  	n++;  }  
Magic Number,Xwt.Drawing,NinePatchImage,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\NinePatchImage.cs,CreateSections,The following statement contains a magic number: foreach (var p in pixels) {  	RenderMode mode;  	// Don't compare exact colors. This is a workaround to make sure regions are properly detected when  	// there are small variations in colors.  	if (p.Red > 0.9 && p.Blue < 0.2 && p.Green < 0.2 && p.Alpha == 1)  		// Red-ish  		mode = RenderMode.Tile;  	else if (p.Red < 0.2 && p.Blue < 0.2 && p.Green < 0.2 && p.Alpha == 1)  		// Black-ish  		mode = RenderMode.Stretch;  	else  		mode = RenderMode.Fixed;  	if (section == null || mode != section.Mode) {  		section = new ImageSection {  			Start = n'  			Size = 1'  			Mode = mode  		};  		sections.Add (section);  	}  	else  		section.Size++;  	n++;  }  
Magic Number,Xwt.Drawing,NinePatchImage,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\NinePatchImage.cs,CreateSections,The following statement contains a magic number: foreach (var p in pixels) {  	RenderMode mode;  	// Don't compare exact colors. This is a workaround to make sure regions are properly detected when  	// there are small variations in colors.  	if (p.Red > 0.9 && p.Blue < 0.2 && p.Green < 0.2 && p.Alpha == 1)  		// Red-ish  		mode = RenderMode.Tile;  	else if (p.Red < 0.2 && p.Blue < 0.2 && p.Green < 0.2 && p.Alpha == 1)  		// Black-ish  		mode = RenderMode.Stretch;  	else  		mode = RenderMode.Fixed;  	if (section == null || mode != section.Mode) {  		section = new ImageSection {  			Start = n'  			Size = 1'  			Mode = mode  		};  		sections.Add (section);  	}  	else  		section.Size++;  	n++;  }  
Magic Number,Xwt.Drawing,NinePatchImage,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\NinePatchImage.cs,CreateSections,The following statement contains a magic number: foreach (var p in pixels) {  	RenderMode mode;  	// Don't compare exact colors. This is a workaround to make sure regions are properly detected when  	// there are small variations in colors.  	if (p.Red > 0.9 && p.Blue < 0.2 && p.Green < 0.2 && p.Alpha == 1)  		// Red-ish  		mode = RenderMode.Tile;  	else if (p.Red < 0.2 && p.Blue < 0.2 && p.Green < 0.2 && p.Alpha == 1)  		// Black-ish  		mode = RenderMode.Stretch;  	else  		mode = RenderMode.Fixed;  	if (section == null || mode != section.Mode) {  		section = new ImageSection {  			Start = n'  			Size = 1'  			Mode = mode  		};  		sections.Add (section);  	}  	else  		section.Size++;  	n++;  }  
Magic Number,Xwt.Drawing,NinePatchImage,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\NinePatchImage.cs,CreateSections,The following statement contains a magic number: foreach (var p in pixels) {  	RenderMode mode;  	// Don't compare exact colors. This is a workaround to make sure regions are properly detected when  	// there are small variations in colors.  	if (p.Red > 0.9 && p.Blue < 0.2 && p.Green < 0.2 && p.Alpha == 1)  		// Red-ish  		mode = RenderMode.Tile;  	else if (p.Red < 0.2 && p.Blue < 0.2 && p.Green < 0.2 && p.Alpha == 1)  		// Black-ish  		mode = RenderMode.Stretch;  	else  		mode = RenderMode.Fixed;  	if (section == null || mode != section.Mode) {  		section = new ImageSection {  			Start = n'  			Size = 1'  			Mode = mode  		};  		sections.Add (section);  	}  	else  		section.Size++;  	n++;  }  
Magic Number,Xwt.Drawing,NinePatchImage,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\NinePatchImage.cs,CreateSections,The following statement contains a magic number: if (p.Red > 0.9 && p.Blue < 0.2 && p.Green < 0.2 && p.Alpha == 1)  	// Red-ish  	mode = RenderMode.Tile;  else if (p.Red < 0.2 && p.Blue < 0.2 && p.Green < 0.2 && p.Alpha == 1)  	// Black-ish  	mode = RenderMode.Stretch;  else  	mode = RenderMode.Fixed;  
Magic Number,Xwt.Drawing,NinePatchImage,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\NinePatchImage.cs,CreateSections,The following statement contains a magic number: if (p.Red > 0.9 && p.Blue < 0.2 && p.Green < 0.2 && p.Alpha == 1)  	// Red-ish  	mode = RenderMode.Tile;  else if (p.Red < 0.2 && p.Blue < 0.2 && p.Green < 0.2 && p.Alpha == 1)  	// Black-ish  	mode = RenderMode.Stretch;  else  	mode = RenderMode.Fixed;  
Magic Number,Xwt.Drawing,NinePatchImage,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\NinePatchImage.cs,CreateSections,The following statement contains a magic number: if (p.Red > 0.9 && p.Blue < 0.2 && p.Green < 0.2 && p.Alpha == 1)  	// Red-ish  	mode = RenderMode.Tile;  else if (p.Red < 0.2 && p.Blue < 0.2 && p.Green < 0.2 && p.Alpha == 1)  	// Black-ish  	mode = RenderMode.Stretch;  else  	mode = RenderMode.Fixed;  
Magic Number,Xwt.Drawing,NinePatchImage,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\NinePatchImage.cs,CreateSections,The following statement contains a magic number: if (p.Red > 0.9 && p.Blue < 0.2 && p.Green < 0.2 && p.Alpha == 1)  	// Red-ish  	mode = RenderMode.Tile;  else if (p.Red < 0.2 && p.Blue < 0.2 && p.Green < 0.2 && p.Alpha == 1)  	// Black-ish  	mode = RenderMode.Stretch;  else  	mode = RenderMode.Fixed;  
Magic Number,Xwt.Drawing,NinePatchImage,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\NinePatchImage.cs,CreateSections,The following statement contains a magic number: if (p.Red > 0.9 && p.Blue < 0.2 && p.Green < 0.2 && p.Alpha == 1)  	// Red-ish  	mode = RenderMode.Tile;  else if (p.Red < 0.2 && p.Blue < 0.2 && p.Green < 0.2 && p.Alpha == 1)  	// Black-ish  	mode = RenderMode.Stretch;  else  	mode = RenderMode.Fixed;  
Magic Number,Xwt.Drawing,NinePatchImage,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\NinePatchImage.cs,CreateSections,The following statement contains a magic number: if (p.Red > 0.9 && p.Blue < 0.2 && p.Green < 0.2 && p.Alpha == 1)  	// Red-ish  	mode = RenderMode.Tile;  else if (p.Red < 0.2 && p.Blue < 0.2 && p.Green < 0.2 && p.Alpha == 1)  	// Black-ish  	mode = RenderMode.Stretch;  else  	mode = RenderMode.Fixed;  
Magic Number,Xwt.Drawing,NinePatchImage,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\NinePatchImage.cs,CreateSections,The following statement contains a magic number: if (p.Red < 0.2 && p.Blue < 0.2 && p.Green < 0.2 && p.Alpha == 1)  	// Black-ish  	mode = RenderMode.Stretch;  else  	mode = RenderMode.Fixed;  
Magic Number,Xwt.Drawing,NinePatchImage,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\NinePatchImage.cs,CreateSections,The following statement contains a magic number: if (p.Red < 0.2 && p.Blue < 0.2 && p.Green < 0.2 && p.Alpha == 1)  	// Black-ish  	mode = RenderMode.Stretch;  else  	mode = RenderMode.Fixed;  
Magic Number,Xwt.Drawing,NinePatchImage,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\NinePatchImage.cs,CreateSections,The following statement contains a magic number: if (p.Red < 0.2 && p.Blue < 0.2 && p.Green < 0.2 && p.Alpha == 1)  	// Black-ish  	mode = RenderMode.Stretch;  else  	mode = RenderMode.Fixed;  
Magic Number,Xwt.Drawing,NinePatchImage,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\NinePatchImage.cs,GetFrame,The following statement contains a magic number: return frames.FirstOrDefault (i => Math.Abs (i.ScaleFactor - scaleFactor) < 0.1) ?? frames [0];  
Magic Number,Xwt.Drawing,NinePatchImage,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\NinePatchImage.cs,GetDefaultSize,The following statement contains a magic number: return new Size ((frame.Bitmap.Width - 2) / frame.ScaleFactor' (frame.Bitmap.Height - 2) / frame.ScaleFactor);  
Magic Number,Xwt.Drawing,NinePatchImage,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\NinePatchImage.cs,GetDefaultSize,The following statement contains a magic number: return new Size ((frame.Bitmap.Width - 2) / frame.ScaleFactor' (frame.Bitmap.Height - 2) / frame.ScaleFactor);  
Magic Number,Xwt.Formats,MarkdownTextFormat,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Formats\MarkdownTextFormat.cs,ParseMarkdown,The following statement contains a magic number: for (int i = 0; i < lines.Length; i++) {  	var line = lines [i];  	var trimmed = line.TrimStart ();  	// New paragraph  	if (string.IsNullOrWhiteSpace (line)) {  		if (wasParagraph) {  			buffer.EmitEndParagraph ();  			wasParagraph = false;  		}  	}  	// Title  	else if (line.StartsWith ("#")) {  		var level = line.TakeWhile (c => c == '#').Count ();  		buffer.EmitStartHeader (level);  		ParseInline (buffer' line.Trim (' '' '#'));  		buffer.EmitEndHeader ();  	}  	// Title (setex-style)  	else if (i < lines.Length - 1 && !string.IsNullOrEmpty (lines [i + 1]) && lines [i + 1].All (c => c == '=' || c == '-')) {  		var level = lines [i + 1] [0] == '=' ? 1 : 2;  		//  		//	FooBarBaz  		//	SomeHeader  		//	=========  		// In the above Markdown snippet we generate a paragraph and then want to insert a header' so we  		// must close the paragraph containing 'FooBarBaz' first. Or we should disallow this construct  		if (wasParagraph) {  			wasParagraph = false;  			buffer.EmitEndParagraph ();  		}  		buffer.EmitStartHeader (level);  		ParseInline (buffer' line);  		buffer.EmitEndHeader ();  		i++;  	}  	// Ruler  	else if (line.All (c => c == '-') && line.Length >= 3) {  		buffer.EmitHorizontalRuler ();  	}  	// Code blocks  	else if (line.StartsWith ("\t") || line.StartsWith ("    ") || line.StartsWith ("```")) {  		bool isFencedCodeBlock = line.StartsWith ("```");  		if (isFencedCodeBlock)  			i++;  		var codeblock = new StringBuilder ();  		for (; i < lines.Length; i++) {  			line = lines [i];  			if (!line.StartsWith ("\t") && !line.StartsWith ("    ") && !isFencedCodeBlock)  				break;  			if (isFencedCodeBlock && line.StartsWith ("```")) {  				i++;  				break;  			}  			if (isFencedCodeBlock && !line.StartsWith ("```"))  				codeblock.AppendLine (line);  			else  				codeblock.AppendLine (line.StartsWith ("\t") ? line.Substring (1) : line.Substring (4));  		}  		i--;  		if (wasParagraph) {  			buffer.EmitEndParagraph ();  			wasParagraph = false;  		}  		buffer.EmitCodeBlock (codeblock.ToString ());  	}  	// List  	else if ((trimmed [0] == '+' || trimmed [0] == '-' || trimmed [0] == '*') && (trimmed [1] == ' ' || trimmed [1] == '\t')) {  		buffer.EmitOpenList ();  		var bullet = trimmed [0].ToString ();  		for (; i < lines.Length; i++) {  			trimmed = lines [i].TrimStart ();  			if (!trimmed.StartsWith (bullet))  				break;  			buffer.EmitOpenBullet ();  			var lineBreaks = new List<string> ();  			lineBreaks.Add (trimmed.TrimStart ('+'' '-'' '*'' ' '' '\t'));  			while (i + 1 < lines.Length) {  				string nextTrimmed = lines [i + 1].TrimStart ();  				if (nextTrimmed.Length > 0 && !nextTrimmed.StartsWith (bullet)) {  					lineBreaks.Add (nextTrimmed);  					i++;  				}  				else  					break;  			}  			ParseInline (buffer' string.Join (" "' lineBreaks));  			buffer.EmitCloseBullet ();  		}  		i--;  		buffer.EmitCloseList ();  	}  	// Normal paragraph  	else {  		if (!wasParagraph)  			buffer.EmitStartParagraph (0);  		ParseInline (buffer' line.TrimEnd () + (line.EndsWith ("  ") ? Environment.NewLine : " "));  		wasParagraph = true;  	}  }  
Magic Number,Xwt.Formats,MarkdownTextFormat,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Formats\MarkdownTextFormat.cs,ParseMarkdown,The following statement contains a magic number: for (int i = 0; i < lines.Length; i++) {  	var line = lines [i];  	var trimmed = line.TrimStart ();  	// New paragraph  	if (string.IsNullOrWhiteSpace (line)) {  		if (wasParagraph) {  			buffer.EmitEndParagraph ();  			wasParagraph = false;  		}  	}  	// Title  	else if (line.StartsWith ("#")) {  		var level = line.TakeWhile (c => c == '#').Count ();  		buffer.EmitStartHeader (level);  		ParseInline (buffer' line.Trim (' '' '#'));  		buffer.EmitEndHeader ();  	}  	// Title (setex-style)  	else if (i < lines.Length - 1 && !string.IsNullOrEmpty (lines [i + 1]) && lines [i + 1].All (c => c == '=' || c == '-')) {  		var level = lines [i + 1] [0] == '=' ? 1 : 2;  		//  		//	FooBarBaz  		//	SomeHeader  		//	=========  		// In the above Markdown snippet we generate a paragraph and then want to insert a header' so we  		// must close the paragraph containing 'FooBarBaz' first. Or we should disallow this construct  		if (wasParagraph) {  			wasParagraph = false;  			buffer.EmitEndParagraph ();  		}  		buffer.EmitStartHeader (level);  		ParseInline (buffer' line);  		buffer.EmitEndHeader ();  		i++;  	}  	// Ruler  	else if (line.All (c => c == '-') && line.Length >= 3) {  		buffer.EmitHorizontalRuler ();  	}  	// Code blocks  	else if (line.StartsWith ("\t") || line.StartsWith ("    ") || line.StartsWith ("```")) {  		bool isFencedCodeBlock = line.StartsWith ("```");  		if (isFencedCodeBlock)  			i++;  		var codeblock = new StringBuilder ();  		for (; i < lines.Length; i++) {  			line = lines [i];  			if (!line.StartsWith ("\t") && !line.StartsWith ("    ") && !isFencedCodeBlock)  				break;  			if (isFencedCodeBlock && line.StartsWith ("```")) {  				i++;  				break;  			}  			if (isFencedCodeBlock && !line.StartsWith ("```"))  				codeblock.AppendLine (line);  			else  				codeblock.AppendLine (line.StartsWith ("\t") ? line.Substring (1) : line.Substring (4));  		}  		i--;  		if (wasParagraph) {  			buffer.EmitEndParagraph ();  			wasParagraph = false;  		}  		buffer.EmitCodeBlock (codeblock.ToString ());  	}  	// List  	else if ((trimmed [0] == '+' || trimmed [0] == '-' || trimmed [0] == '*') && (trimmed [1] == ' ' || trimmed [1] == '\t')) {  		buffer.EmitOpenList ();  		var bullet = trimmed [0].ToString ();  		for (; i < lines.Length; i++) {  			trimmed = lines [i].TrimStart ();  			if (!trimmed.StartsWith (bullet))  				break;  			buffer.EmitOpenBullet ();  			var lineBreaks = new List<string> ();  			lineBreaks.Add (trimmed.TrimStart ('+'' '-'' '*'' ' '' '\t'));  			while (i + 1 < lines.Length) {  				string nextTrimmed = lines [i + 1].TrimStart ();  				if (nextTrimmed.Length > 0 && !nextTrimmed.StartsWith (bullet)) {  					lineBreaks.Add (nextTrimmed);  					i++;  				}  				else  					break;  			}  			ParseInline (buffer' string.Join (" "' lineBreaks));  			buffer.EmitCloseBullet ();  		}  		i--;  		buffer.EmitCloseList ();  	}  	// Normal paragraph  	else {  		if (!wasParagraph)  			buffer.EmitStartParagraph (0);  		ParseInline (buffer' line.TrimEnd () + (line.EndsWith ("  ") ? Environment.NewLine : " "));  		wasParagraph = true;  	}  }  
Magic Number,Xwt.Formats,MarkdownTextFormat,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Formats\MarkdownTextFormat.cs,ParseMarkdown,The following statement contains a magic number: for (int i = 0; i < lines.Length; i++) {  	var line = lines [i];  	var trimmed = line.TrimStart ();  	// New paragraph  	if (string.IsNullOrWhiteSpace (line)) {  		if (wasParagraph) {  			buffer.EmitEndParagraph ();  			wasParagraph = false;  		}  	}  	// Title  	else if (line.StartsWith ("#")) {  		var level = line.TakeWhile (c => c == '#').Count ();  		buffer.EmitStartHeader (level);  		ParseInline (buffer' line.Trim (' '' '#'));  		buffer.EmitEndHeader ();  	}  	// Title (setex-style)  	else if (i < lines.Length - 1 && !string.IsNullOrEmpty (lines [i + 1]) && lines [i + 1].All (c => c == '=' || c == '-')) {  		var level = lines [i + 1] [0] == '=' ? 1 : 2;  		//  		//	FooBarBaz  		//	SomeHeader  		//	=========  		// In the above Markdown snippet we generate a paragraph and then want to insert a header' so we  		// must close the paragraph containing 'FooBarBaz' first. Or we should disallow this construct  		if (wasParagraph) {  			wasParagraph = false;  			buffer.EmitEndParagraph ();  		}  		buffer.EmitStartHeader (level);  		ParseInline (buffer' line);  		buffer.EmitEndHeader ();  		i++;  	}  	// Ruler  	else if (line.All (c => c == '-') && line.Length >= 3) {  		buffer.EmitHorizontalRuler ();  	}  	// Code blocks  	else if (line.StartsWith ("\t") || line.StartsWith ("    ") || line.StartsWith ("```")) {  		bool isFencedCodeBlock = line.StartsWith ("```");  		if (isFencedCodeBlock)  			i++;  		var codeblock = new StringBuilder ();  		for (; i < lines.Length; i++) {  			line = lines [i];  			if (!line.StartsWith ("\t") && !line.StartsWith ("    ") && !isFencedCodeBlock)  				break;  			if (isFencedCodeBlock && line.StartsWith ("```")) {  				i++;  				break;  			}  			if (isFencedCodeBlock && !line.StartsWith ("```"))  				codeblock.AppendLine (line);  			else  				codeblock.AppendLine (line.StartsWith ("\t") ? line.Substring (1) : line.Substring (4));  		}  		i--;  		if (wasParagraph) {  			buffer.EmitEndParagraph ();  			wasParagraph = false;  		}  		buffer.EmitCodeBlock (codeblock.ToString ());  	}  	// List  	else if ((trimmed [0] == '+' || trimmed [0] == '-' || trimmed [0] == '*') && (trimmed [1] == ' ' || trimmed [1] == '\t')) {  		buffer.EmitOpenList ();  		var bullet = trimmed [0].ToString ();  		for (; i < lines.Length; i++) {  			trimmed = lines [i].TrimStart ();  			if (!trimmed.StartsWith (bullet))  				break;  			buffer.EmitOpenBullet ();  			var lineBreaks = new List<string> ();  			lineBreaks.Add (trimmed.TrimStart ('+'' '-'' '*'' ' '' '\t'));  			while (i + 1 < lines.Length) {  				string nextTrimmed = lines [i + 1].TrimStart ();  				if (nextTrimmed.Length > 0 && !nextTrimmed.StartsWith (bullet)) {  					lineBreaks.Add (nextTrimmed);  					i++;  				}  				else  					break;  			}  			ParseInline (buffer' string.Join (" "' lineBreaks));  			buffer.EmitCloseBullet ();  		}  		i--;  		buffer.EmitCloseList ();  	}  	// Normal paragraph  	else {  		if (!wasParagraph)  			buffer.EmitStartParagraph (0);  		ParseInline (buffer' line.TrimEnd () + (line.EndsWith ("  ") ? Environment.NewLine : " "));  		wasParagraph = true;  	}  }  
Magic Number,Xwt.Formats,MarkdownTextFormat,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Formats\MarkdownTextFormat.cs,ParseMarkdown,The following statement contains a magic number: if (string.IsNullOrWhiteSpace (line)) {  	if (wasParagraph) {  		buffer.EmitEndParagraph ();  		wasParagraph = false;  	}  }  // Title  else if (line.StartsWith ("#")) {  	var level = line.TakeWhile (c => c == '#').Count ();  	buffer.EmitStartHeader (level);  	ParseInline (buffer' line.Trim (' '' '#'));  	buffer.EmitEndHeader ();  }  // Title (setex-style)  else if (i < lines.Length - 1 && !string.IsNullOrEmpty (lines [i + 1]) && lines [i + 1].All (c => c == '=' || c == '-')) {  	var level = lines [i + 1] [0] == '=' ? 1 : 2;  	//  	//	FooBarBaz  	//	SomeHeader  	//	=========  	// In the above Markdown snippet we generate a paragraph and then want to insert a header' so we  	// must close the paragraph containing 'FooBarBaz' first. Or we should disallow this construct  	if (wasParagraph) {  		wasParagraph = false;  		buffer.EmitEndParagraph ();  	}  	buffer.EmitStartHeader (level);  	ParseInline (buffer' line);  	buffer.EmitEndHeader ();  	i++;  }  // Ruler  else if (line.All (c => c == '-') && line.Length >= 3) {  	buffer.EmitHorizontalRuler ();  }  // Code blocks  else if (line.StartsWith ("\t") || line.StartsWith ("    ") || line.StartsWith ("```")) {  	bool isFencedCodeBlock = line.StartsWith ("```");  	if (isFencedCodeBlock)  		i++;  	var codeblock = new StringBuilder ();  	for (; i < lines.Length; i++) {  		line = lines [i];  		if (!line.StartsWith ("\t") && !line.StartsWith ("    ") && !isFencedCodeBlock)  			break;  		if (isFencedCodeBlock && line.StartsWith ("```")) {  			i++;  			break;  		}  		if (isFencedCodeBlock && !line.StartsWith ("```"))  			codeblock.AppendLine (line);  		else  			codeblock.AppendLine (line.StartsWith ("\t") ? line.Substring (1) : line.Substring (4));  	}  	i--;  	if (wasParagraph) {  		buffer.EmitEndParagraph ();  		wasParagraph = false;  	}  	buffer.EmitCodeBlock (codeblock.ToString ());  }  // List  else if ((trimmed [0] == '+' || trimmed [0] == '-' || trimmed [0] == '*') && (trimmed [1] == ' ' || trimmed [1] == '\t')) {  	buffer.EmitOpenList ();  	var bullet = trimmed [0].ToString ();  	for (; i < lines.Length; i++) {  		trimmed = lines [i].TrimStart ();  		if (!trimmed.StartsWith (bullet))  			break;  		buffer.EmitOpenBullet ();  		var lineBreaks = new List<string> ();  		lineBreaks.Add (trimmed.TrimStart ('+'' '-'' '*'' ' '' '\t'));  		while (i + 1 < lines.Length) {  			string nextTrimmed = lines [i + 1].TrimStart ();  			if (nextTrimmed.Length > 0 && !nextTrimmed.StartsWith (bullet)) {  				lineBreaks.Add (nextTrimmed);  				i++;  			}  			else  				break;  		}  		ParseInline (buffer' string.Join (" "' lineBreaks));  		buffer.EmitCloseBullet ();  	}  	i--;  	buffer.EmitCloseList ();  }  // Normal paragraph  else {  	if (!wasParagraph)  		buffer.EmitStartParagraph (0);  	ParseInline (buffer' line.TrimEnd () + (line.EndsWith ("  ") ? Environment.NewLine : " "));  	wasParagraph = true;  }  
Magic Number,Xwt.Formats,MarkdownTextFormat,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Formats\MarkdownTextFormat.cs,ParseMarkdown,The following statement contains a magic number: if (string.IsNullOrWhiteSpace (line)) {  	if (wasParagraph) {  		buffer.EmitEndParagraph ();  		wasParagraph = false;  	}  }  // Title  else if (line.StartsWith ("#")) {  	var level = line.TakeWhile (c => c == '#').Count ();  	buffer.EmitStartHeader (level);  	ParseInline (buffer' line.Trim (' '' '#'));  	buffer.EmitEndHeader ();  }  // Title (setex-style)  else if (i < lines.Length - 1 && !string.IsNullOrEmpty (lines [i + 1]) && lines [i + 1].All (c => c == '=' || c == '-')) {  	var level = lines [i + 1] [0] == '=' ? 1 : 2;  	//  	//	FooBarBaz  	//	SomeHeader  	//	=========  	// In the above Markdown snippet we generate a paragraph and then want to insert a header' so we  	// must close the paragraph containing 'FooBarBaz' first. Or we should disallow this construct  	if (wasParagraph) {  		wasParagraph = false;  		buffer.EmitEndParagraph ();  	}  	buffer.EmitStartHeader (level);  	ParseInline (buffer' line);  	buffer.EmitEndHeader ();  	i++;  }  // Ruler  else if (line.All (c => c == '-') && line.Length >= 3) {  	buffer.EmitHorizontalRuler ();  }  // Code blocks  else if (line.StartsWith ("\t") || line.StartsWith ("    ") || line.StartsWith ("```")) {  	bool isFencedCodeBlock = line.StartsWith ("```");  	if (isFencedCodeBlock)  		i++;  	var codeblock = new StringBuilder ();  	for (; i < lines.Length; i++) {  		line = lines [i];  		if (!line.StartsWith ("\t") && !line.StartsWith ("    ") && !isFencedCodeBlock)  			break;  		if (isFencedCodeBlock && line.StartsWith ("```")) {  			i++;  			break;  		}  		if (isFencedCodeBlock && !line.StartsWith ("```"))  			codeblock.AppendLine (line);  		else  			codeblock.AppendLine (line.StartsWith ("\t") ? line.Substring (1) : line.Substring (4));  	}  	i--;  	if (wasParagraph) {  		buffer.EmitEndParagraph ();  		wasParagraph = false;  	}  	buffer.EmitCodeBlock (codeblock.ToString ());  }  // List  else if ((trimmed [0] == '+' || trimmed [0] == '-' || trimmed [0] == '*') && (trimmed [1] == ' ' || trimmed [1] == '\t')) {  	buffer.EmitOpenList ();  	var bullet = trimmed [0].ToString ();  	for (; i < lines.Length; i++) {  		trimmed = lines [i].TrimStart ();  		if (!trimmed.StartsWith (bullet))  			break;  		buffer.EmitOpenBullet ();  		var lineBreaks = new List<string> ();  		lineBreaks.Add (trimmed.TrimStart ('+'' '-'' '*'' ' '' '\t'));  		while (i + 1 < lines.Length) {  			string nextTrimmed = lines [i + 1].TrimStart ();  			if (nextTrimmed.Length > 0 && !nextTrimmed.StartsWith (bullet)) {  				lineBreaks.Add (nextTrimmed);  				i++;  			}  			else  				break;  		}  		ParseInline (buffer' string.Join (" "' lineBreaks));  		buffer.EmitCloseBullet ();  	}  	i--;  	buffer.EmitCloseList ();  }  // Normal paragraph  else {  	if (!wasParagraph)  		buffer.EmitStartParagraph (0);  	ParseInline (buffer' line.TrimEnd () + (line.EndsWith ("  ") ? Environment.NewLine : " "));  	wasParagraph = true;  }  
Magic Number,Xwt.Formats,MarkdownTextFormat,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Formats\MarkdownTextFormat.cs,ParseMarkdown,The following statement contains a magic number: if (string.IsNullOrWhiteSpace (line)) {  	if (wasParagraph) {  		buffer.EmitEndParagraph ();  		wasParagraph = false;  	}  }  // Title  else if (line.StartsWith ("#")) {  	var level = line.TakeWhile (c => c == '#').Count ();  	buffer.EmitStartHeader (level);  	ParseInline (buffer' line.Trim (' '' '#'));  	buffer.EmitEndHeader ();  }  // Title (setex-style)  else if (i < lines.Length - 1 && !string.IsNullOrEmpty (lines [i + 1]) && lines [i + 1].All (c => c == '=' || c == '-')) {  	var level = lines [i + 1] [0] == '=' ? 1 : 2;  	//  	//	FooBarBaz  	//	SomeHeader  	//	=========  	// In the above Markdown snippet we generate a paragraph and then want to insert a header' so we  	// must close the paragraph containing 'FooBarBaz' first. Or we should disallow this construct  	if (wasParagraph) {  		wasParagraph = false;  		buffer.EmitEndParagraph ();  	}  	buffer.EmitStartHeader (level);  	ParseInline (buffer' line);  	buffer.EmitEndHeader ();  	i++;  }  // Ruler  else if (line.All (c => c == '-') && line.Length >= 3) {  	buffer.EmitHorizontalRuler ();  }  // Code blocks  else if (line.StartsWith ("\t") || line.StartsWith ("    ") || line.StartsWith ("```")) {  	bool isFencedCodeBlock = line.StartsWith ("```");  	if (isFencedCodeBlock)  		i++;  	var codeblock = new StringBuilder ();  	for (; i < lines.Length; i++) {  		line = lines [i];  		if (!line.StartsWith ("\t") && !line.StartsWith ("    ") && !isFencedCodeBlock)  			break;  		if (isFencedCodeBlock && line.StartsWith ("```")) {  			i++;  			break;  		}  		if (isFencedCodeBlock && !line.StartsWith ("```"))  			codeblock.AppendLine (line);  		else  			codeblock.AppendLine (line.StartsWith ("\t") ? line.Substring (1) : line.Substring (4));  	}  	i--;  	if (wasParagraph) {  		buffer.EmitEndParagraph ();  		wasParagraph = false;  	}  	buffer.EmitCodeBlock (codeblock.ToString ());  }  // List  else if ((trimmed [0] == '+' || trimmed [0] == '-' || trimmed [0] == '*') && (trimmed [1] == ' ' || trimmed [1] == '\t')) {  	buffer.EmitOpenList ();  	var bullet = trimmed [0].ToString ();  	for (; i < lines.Length; i++) {  		trimmed = lines [i].TrimStart ();  		if (!trimmed.StartsWith (bullet))  			break;  		buffer.EmitOpenBullet ();  		var lineBreaks = new List<string> ();  		lineBreaks.Add (trimmed.TrimStart ('+'' '-'' '*'' ' '' '\t'));  		while (i + 1 < lines.Length) {  			string nextTrimmed = lines [i + 1].TrimStart ();  			if (nextTrimmed.Length > 0 && !nextTrimmed.StartsWith (bullet)) {  				lineBreaks.Add (nextTrimmed);  				i++;  			}  			else  				break;  		}  		ParseInline (buffer' string.Join (" "' lineBreaks));  		buffer.EmitCloseBullet ();  	}  	i--;  	buffer.EmitCloseList ();  }  // Normal paragraph  else {  	if (!wasParagraph)  		buffer.EmitStartParagraph (0);  	ParseInline (buffer' line.TrimEnd () + (line.EndsWith ("  ") ? Environment.NewLine : " "));  	wasParagraph = true;  }  
Magic Number,Xwt.Formats,MarkdownTextFormat,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Formats\MarkdownTextFormat.cs,ParseMarkdown,The following statement contains a magic number: if (line.StartsWith ("#")) {  	var level = line.TakeWhile (c => c == '#').Count ();  	buffer.EmitStartHeader (level);  	ParseInline (buffer' line.Trim (' '' '#'));  	buffer.EmitEndHeader ();  }  // Title (setex-style)  else if (i < lines.Length - 1 && !string.IsNullOrEmpty (lines [i + 1]) && lines [i + 1].All (c => c == '=' || c == '-')) {  	var level = lines [i + 1] [0] == '=' ? 1 : 2;  	//  	//	FooBarBaz  	//	SomeHeader  	//	=========  	// In the above Markdown snippet we generate a paragraph and then want to insert a header' so we  	// must close the paragraph containing 'FooBarBaz' first. Or we should disallow this construct  	if (wasParagraph) {  		wasParagraph = false;  		buffer.EmitEndParagraph ();  	}  	buffer.EmitStartHeader (level);  	ParseInline (buffer' line);  	buffer.EmitEndHeader ();  	i++;  }  // Ruler  else if (line.All (c => c == '-') && line.Length >= 3) {  	buffer.EmitHorizontalRuler ();  }  // Code blocks  else if (line.StartsWith ("\t") || line.StartsWith ("    ") || line.StartsWith ("```")) {  	bool isFencedCodeBlock = line.StartsWith ("```");  	if (isFencedCodeBlock)  		i++;  	var codeblock = new StringBuilder ();  	for (; i < lines.Length; i++) {  		line = lines [i];  		if (!line.StartsWith ("\t") && !line.StartsWith ("    ") && !isFencedCodeBlock)  			break;  		if (isFencedCodeBlock && line.StartsWith ("```")) {  			i++;  			break;  		}  		if (isFencedCodeBlock && !line.StartsWith ("```"))  			codeblock.AppendLine (line);  		else  			codeblock.AppendLine (line.StartsWith ("\t") ? line.Substring (1) : line.Substring (4));  	}  	i--;  	if (wasParagraph) {  		buffer.EmitEndParagraph ();  		wasParagraph = false;  	}  	buffer.EmitCodeBlock (codeblock.ToString ());  }  // List  else if ((trimmed [0] == '+' || trimmed [0] == '-' || trimmed [0] == '*') && (trimmed [1] == ' ' || trimmed [1] == '\t')) {  	buffer.EmitOpenList ();  	var bullet = trimmed [0].ToString ();  	for (; i < lines.Length; i++) {  		trimmed = lines [i].TrimStart ();  		if (!trimmed.StartsWith (bullet))  			break;  		buffer.EmitOpenBullet ();  		var lineBreaks = new List<string> ();  		lineBreaks.Add (trimmed.TrimStart ('+'' '-'' '*'' ' '' '\t'));  		while (i + 1 < lines.Length) {  			string nextTrimmed = lines [i + 1].TrimStart ();  			if (nextTrimmed.Length > 0 && !nextTrimmed.StartsWith (bullet)) {  				lineBreaks.Add (nextTrimmed);  				i++;  			}  			else  				break;  		}  		ParseInline (buffer' string.Join (" "' lineBreaks));  		buffer.EmitCloseBullet ();  	}  	i--;  	buffer.EmitCloseList ();  }  // Normal paragraph  else {  	if (!wasParagraph)  		buffer.EmitStartParagraph (0);  	ParseInline (buffer' line.TrimEnd () + (line.EndsWith ("  ") ? Environment.NewLine : " "));  	wasParagraph = true;  }  
Magic Number,Xwt.Formats,MarkdownTextFormat,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Formats\MarkdownTextFormat.cs,ParseMarkdown,The following statement contains a magic number: if (line.StartsWith ("#")) {  	var level = line.TakeWhile (c => c == '#').Count ();  	buffer.EmitStartHeader (level);  	ParseInline (buffer' line.Trim (' '' '#'));  	buffer.EmitEndHeader ();  }  // Title (setex-style)  else if (i < lines.Length - 1 && !string.IsNullOrEmpty (lines [i + 1]) && lines [i + 1].All (c => c == '=' || c == '-')) {  	var level = lines [i + 1] [0] == '=' ? 1 : 2;  	//  	//	FooBarBaz  	//	SomeHeader  	//	=========  	// In the above Markdown snippet we generate a paragraph and then want to insert a header' so we  	// must close the paragraph containing 'FooBarBaz' first. Or we should disallow this construct  	if (wasParagraph) {  		wasParagraph = false;  		buffer.EmitEndParagraph ();  	}  	buffer.EmitStartHeader (level);  	ParseInline (buffer' line);  	buffer.EmitEndHeader ();  	i++;  }  // Ruler  else if (line.All (c => c == '-') && line.Length >= 3) {  	buffer.EmitHorizontalRuler ();  }  // Code blocks  else if (line.StartsWith ("\t") || line.StartsWith ("    ") || line.StartsWith ("```")) {  	bool isFencedCodeBlock = line.StartsWith ("```");  	if (isFencedCodeBlock)  		i++;  	var codeblock = new StringBuilder ();  	for (; i < lines.Length; i++) {  		line = lines [i];  		if (!line.StartsWith ("\t") && !line.StartsWith ("    ") && !isFencedCodeBlock)  			break;  		if (isFencedCodeBlock && line.StartsWith ("```")) {  			i++;  			break;  		}  		if (isFencedCodeBlock && !line.StartsWith ("```"))  			codeblock.AppendLine (line);  		else  			codeblock.AppendLine (line.StartsWith ("\t") ? line.Substring (1) : line.Substring (4));  	}  	i--;  	if (wasParagraph) {  		buffer.EmitEndParagraph ();  		wasParagraph = false;  	}  	buffer.EmitCodeBlock (codeblock.ToString ());  }  // List  else if ((trimmed [0] == '+' || trimmed [0] == '-' || trimmed [0] == '*') && (trimmed [1] == ' ' || trimmed [1] == '\t')) {  	buffer.EmitOpenList ();  	var bullet = trimmed [0].ToString ();  	for (; i < lines.Length; i++) {  		trimmed = lines [i].TrimStart ();  		if (!trimmed.StartsWith (bullet))  			break;  		buffer.EmitOpenBullet ();  		var lineBreaks = new List<string> ();  		lineBreaks.Add (trimmed.TrimStart ('+'' '-'' '*'' ' '' '\t'));  		while (i + 1 < lines.Length) {  			string nextTrimmed = lines [i + 1].TrimStart ();  			if (nextTrimmed.Length > 0 && !nextTrimmed.StartsWith (bullet)) {  				lineBreaks.Add (nextTrimmed);  				i++;  			}  			else  				break;  		}  		ParseInline (buffer' string.Join (" "' lineBreaks));  		buffer.EmitCloseBullet ();  	}  	i--;  	buffer.EmitCloseList ();  }  // Normal paragraph  else {  	if (!wasParagraph)  		buffer.EmitStartParagraph (0);  	ParseInline (buffer' line.TrimEnd () + (line.EndsWith ("  ") ? Environment.NewLine : " "));  	wasParagraph = true;  }  
Magic Number,Xwt.Formats,MarkdownTextFormat,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Formats\MarkdownTextFormat.cs,ParseMarkdown,The following statement contains a magic number: if (line.StartsWith ("#")) {  	var level = line.TakeWhile (c => c == '#').Count ();  	buffer.EmitStartHeader (level);  	ParseInline (buffer' line.Trim (' '' '#'));  	buffer.EmitEndHeader ();  }  // Title (setex-style)  else if (i < lines.Length - 1 && !string.IsNullOrEmpty (lines [i + 1]) && lines [i + 1].All (c => c == '=' || c == '-')) {  	var level = lines [i + 1] [0] == '=' ? 1 : 2;  	//  	//	FooBarBaz  	//	SomeHeader  	//	=========  	// In the above Markdown snippet we generate a paragraph and then want to insert a header' so we  	// must close the paragraph containing 'FooBarBaz' first. Or we should disallow this construct  	if (wasParagraph) {  		wasParagraph = false;  		buffer.EmitEndParagraph ();  	}  	buffer.EmitStartHeader (level);  	ParseInline (buffer' line);  	buffer.EmitEndHeader ();  	i++;  }  // Ruler  else if (line.All (c => c == '-') && line.Length >= 3) {  	buffer.EmitHorizontalRuler ();  }  // Code blocks  else if (line.StartsWith ("\t") || line.StartsWith ("    ") || line.StartsWith ("```")) {  	bool isFencedCodeBlock = line.StartsWith ("```");  	if (isFencedCodeBlock)  		i++;  	var codeblock = new StringBuilder ();  	for (; i < lines.Length; i++) {  		line = lines [i];  		if (!line.StartsWith ("\t") && !line.StartsWith ("    ") && !isFencedCodeBlock)  			break;  		if (isFencedCodeBlock && line.StartsWith ("```")) {  			i++;  			break;  		}  		if (isFencedCodeBlock && !line.StartsWith ("```"))  			codeblock.AppendLine (line);  		else  			codeblock.AppendLine (line.StartsWith ("\t") ? line.Substring (1) : line.Substring (4));  	}  	i--;  	if (wasParagraph) {  		buffer.EmitEndParagraph ();  		wasParagraph = false;  	}  	buffer.EmitCodeBlock (codeblock.ToString ());  }  // List  else if ((trimmed [0] == '+' || trimmed [0] == '-' || trimmed [0] == '*') && (trimmed [1] == ' ' || trimmed [1] == '\t')) {  	buffer.EmitOpenList ();  	var bullet = trimmed [0].ToString ();  	for (; i < lines.Length; i++) {  		trimmed = lines [i].TrimStart ();  		if (!trimmed.StartsWith (bullet))  			break;  		buffer.EmitOpenBullet ();  		var lineBreaks = new List<string> ();  		lineBreaks.Add (trimmed.TrimStart ('+'' '-'' '*'' ' '' '\t'));  		while (i + 1 < lines.Length) {  			string nextTrimmed = lines [i + 1].TrimStart ();  			if (nextTrimmed.Length > 0 && !nextTrimmed.StartsWith (bullet)) {  				lineBreaks.Add (nextTrimmed);  				i++;  			}  			else  				break;  		}  		ParseInline (buffer' string.Join (" "' lineBreaks));  		buffer.EmitCloseBullet ();  	}  	i--;  	buffer.EmitCloseList ();  }  // Normal paragraph  else {  	if (!wasParagraph)  		buffer.EmitStartParagraph (0);  	ParseInline (buffer' line.TrimEnd () + (line.EndsWith ("  ") ? Environment.NewLine : " "));  	wasParagraph = true;  }  
Magic Number,Xwt.Formats,MarkdownTextFormat,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Formats\MarkdownTextFormat.cs,ParseMarkdown,The following statement contains a magic number: if (i < lines.Length - 1 && !string.IsNullOrEmpty (lines [i + 1]) && lines [i + 1].All (c => c == '=' || c == '-')) {  	var level = lines [i + 1] [0] == '=' ? 1 : 2;  	//  	//	FooBarBaz  	//	SomeHeader  	//	=========  	// In the above Markdown snippet we generate a paragraph and then want to insert a header' so we  	// must close the paragraph containing 'FooBarBaz' first. Or we should disallow this construct  	if (wasParagraph) {  		wasParagraph = false;  		buffer.EmitEndParagraph ();  	}  	buffer.EmitStartHeader (level);  	ParseInline (buffer' line);  	buffer.EmitEndHeader ();  	i++;  }  // Ruler  else if (line.All (c => c == '-') && line.Length >= 3) {  	buffer.EmitHorizontalRuler ();  }  // Code blocks  else if (line.StartsWith ("\t") || line.StartsWith ("    ") || line.StartsWith ("```")) {  	bool isFencedCodeBlock = line.StartsWith ("```");  	if (isFencedCodeBlock)  		i++;  	var codeblock = new StringBuilder ();  	for (; i < lines.Length; i++) {  		line = lines [i];  		if (!line.StartsWith ("\t") && !line.StartsWith ("    ") && !isFencedCodeBlock)  			break;  		if (isFencedCodeBlock && line.StartsWith ("```")) {  			i++;  			break;  		}  		if (isFencedCodeBlock && !line.StartsWith ("```"))  			codeblock.AppendLine (line);  		else  			codeblock.AppendLine (line.StartsWith ("\t") ? line.Substring (1) : line.Substring (4));  	}  	i--;  	if (wasParagraph) {  		buffer.EmitEndParagraph ();  		wasParagraph = false;  	}  	buffer.EmitCodeBlock (codeblock.ToString ());  }  // List  else if ((trimmed [0] == '+' || trimmed [0] == '-' || trimmed [0] == '*') && (trimmed [1] == ' ' || trimmed [1] == '\t')) {  	buffer.EmitOpenList ();  	var bullet = trimmed [0].ToString ();  	for (; i < lines.Length; i++) {  		trimmed = lines [i].TrimStart ();  		if (!trimmed.StartsWith (bullet))  			break;  		buffer.EmitOpenBullet ();  		var lineBreaks = new List<string> ();  		lineBreaks.Add (trimmed.TrimStart ('+'' '-'' '*'' ' '' '\t'));  		while (i + 1 < lines.Length) {  			string nextTrimmed = lines [i + 1].TrimStart ();  			if (nextTrimmed.Length > 0 && !nextTrimmed.StartsWith (bullet)) {  				lineBreaks.Add (nextTrimmed);  				i++;  			}  			else  				break;  		}  		ParseInline (buffer' string.Join (" "' lineBreaks));  		buffer.EmitCloseBullet ();  	}  	i--;  	buffer.EmitCloseList ();  }  // Normal paragraph  else {  	if (!wasParagraph)  		buffer.EmitStartParagraph (0);  	ParseInline (buffer' line.TrimEnd () + (line.EndsWith ("  ") ? Environment.NewLine : " "));  	wasParagraph = true;  }  
Magic Number,Xwt.Formats,MarkdownTextFormat,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Formats\MarkdownTextFormat.cs,ParseMarkdown,The following statement contains a magic number: if (i < lines.Length - 1 && !string.IsNullOrEmpty (lines [i + 1]) && lines [i + 1].All (c => c == '=' || c == '-')) {  	var level = lines [i + 1] [0] == '=' ? 1 : 2;  	//  	//	FooBarBaz  	//	SomeHeader  	//	=========  	// In the above Markdown snippet we generate a paragraph and then want to insert a header' so we  	// must close the paragraph containing 'FooBarBaz' first. Or we should disallow this construct  	if (wasParagraph) {  		wasParagraph = false;  		buffer.EmitEndParagraph ();  	}  	buffer.EmitStartHeader (level);  	ParseInline (buffer' line);  	buffer.EmitEndHeader ();  	i++;  }  // Ruler  else if (line.All (c => c == '-') && line.Length >= 3) {  	buffer.EmitHorizontalRuler ();  }  // Code blocks  else if (line.StartsWith ("\t") || line.StartsWith ("    ") || line.StartsWith ("```")) {  	bool isFencedCodeBlock = line.StartsWith ("```");  	if (isFencedCodeBlock)  		i++;  	var codeblock = new StringBuilder ();  	for (; i < lines.Length; i++) {  		line = lines [i];  		if (!line.StartsWith ("\t") && !line.StartsWith ("    ") && !isFencedCodeBlock)  			break;  		if (isFencedCodeBlock && line.StartsWith ("```")) {  			i++;  			break;  		}  		if (isFencedCodeBlock && !line.StartsWith ("```"))  			codeblock.AppendLine (line);  		else  			codeblock.AppendLine (line.StartsWith ("\t") ? line.Substring (1) : line.Substring (4));  	}  	i--;  	if (wasParagraph) {  		buffer.EmitEndParagraph ();  		wasParagraph = false;  	}  	buffer.EmitCodeBlock (codeblock.ToString ());  }  // List  else if ((trimmed [0] == '+' || trimmed [0] == '-' || trimmed [0] == '*') && (trimmed [1] == ' ' || trimmed [1] == '\t')) {  	buffer.EmitOpenList ();  	var bullet = trimmed [0].ToString ();  	for (; i < lines.Length; i++) {  		trimmed = lines [i].TrimStart ();  		if (!trimmed.StartsWith (bullet))  			break;  		buffer.EmitOpenBullet ();  		var lineBreaks = new List<string> ();  		lineBreaks.Add (trimmed.TrimStart ('+'' '-'' '*'' ' '' '\t'));  		while (i + 1 < lines.Length) {  			string nextTrimmed = lines [i + 1].TrimStart ();  			if (nextTrimmed.Length > 0 && !nextTrimmed.StartsWith (bullet)) {  				lineBreaks.Add (nextTrimmed);  				i++;  			}  			else  				break;  		}  		ParseInline (buffer' string.Join (" "' lineBreaks));  		buffer.EmitCloseBullet ();  	}  	i--;  	buffer.EmitCloseList ();  }  // Normal paragraph  else {  	if (!wasParagraph)  		buffer.EmitStartParagraph (0);  	ParseInline (buffer' line.TrimEnd () + (line.EndsWith ("  ") ? Environment.NewLine : " "));  	wasParagraph = true;  }  
Magic Number,Xwt.Formats,MarkdownTextFormat,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Formats\MarkdownTextFormat.cs,ParseMarkdown,The following statement contains a magic number: if (i < lines.Length - 1 && !string.IsNullOrEmpty (lines [i + 1]) && lines [i + 1].All (c => c == '=' || c == '-')) {  	var level = lines [i + 1] [0] == '=' ? 1 : 2;  	//  	//	FooBarBaz  	//	SomeHeader  	//	=========  	// In the above Markdown snippet we generate a paragraph and then want to insert a header' so we  	// must close the paragraph containing 'FooBarBaz' first. Or we should disallow this construct  	if (wasParagraph) {  		wasParagraph = false;  		buffer.EmitEndParagraph ();  	}  	buffer.EmitStartHeader (level);  	ParseInline (buffer' line);  	buffer.EmitEndHeader ();  	i++;  }  // Ruler  else if (line.All (c => c == '-') && line.Length >= 3) {  	buffer.EmitHorizontalRuler ();  }  // Code blocks  else if (line.StartsWith ("\t") || line.StartsWith ("    ") || line.StartsWith ("```")) {  	bool isFencedCodeBlock = line.StartsWith ("```");  	if (isFencedCodeBlock)  		i++;  	var codeblock = new StringBuilder ();  	for (; i < lines.Length; i++) {  		line = lines [i];  		if (!line.StartsWith ("\t") && !line.StartsWith ("    ") && !isFencedCodeBlock)  			break;  		if (isFencedCodeBlock && line.StartsWith ("```")) {  			i++;  			break;  		}  		if (isFencedCodeBlock && !line.StartsWith ("```"))  			codeblock.AppendLine (line);  		else  			codeblock.AppendLine (line.StartsWith ("\t") ? line.Substring (1) : line.Substring (4));  	}  	i--;  	if (wasParagraph) {  		buffer.EmitEndParagraph ();  		wasParagraph = false;  	}  	buffer.EmitCodeBlock (codeblock.ToString ());  }  // List  else if ((trimmed [0] == '+' || trimmed [0] == '-' || trimmed [0] == '*') && (trimmed [1] == ' ' || trimmed [1] == '\t')) {  	buffer.EmitOpenList ();  	var bullet = trimmed [0].ToString ();  	for (; i < lines.Length; i++) {  		trimmed = lines [i].TrimStart ();  		if (!trimmed.StartsWith (bullet))  			break;  		buffer.EmitOpenBullet ();  		var lineBreaks = new List<string> ();  		lineBreaks.Add (trimmed.TrimStart ('+'' '-'' '*'' ' '' '\t'));  		while (i + 1 < lines.Length) {  			string nextTrimmed = lines [i + 1].TrimStart ();  			if (nextTrimmed.Length > 0 && !nextTrimmed.StartsWith (bullet)) {  				lineBreaks.Add (nextTrimmed);  				i++;  			}  			else  				break;  		}  		ParseInline (buffer' string.Join (" "' lineBreaks));  		buffer.EmitCloseBullet ();  	}  	i--;  	buffer.EmitCloseList ();  }  // Normal paragraph  else {  	if (!wasParagraph)  		buffer.EmitStartParagraph (0);  	ParseInline (buffer' line.TrimEnd () + (line.EndsWith ("  ") ? Environment.NewLine : " "));  	wasParagraph = true;  }  
Magic Number,Xwt.Formats,MarkdownTextFormat,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Formats\MarkdownTextFormat.cs,ParseMarkdown,The following statement contains a magic number: if (line.All (c => c == '-') && line.Length >= 3) {  	buffer.EmitHorizontalRuler ();  }  // Code blocks  else if (line.StartsWith ("\t") || line.StartsWith ("    ") || line.StartsWith ("```")) {  	bool isFencedCodeBlock = line.StartsWith ("```");  	if (isFencedCodeBlock)  		i++;  	var codeblock = new StringBuilder ();  	for (; i < lines.Length; i++) {  		line = lines [i];  		if (!line.StartsWith ("\t") && !line.StartsWith ("    ") && !isFencedCodeBlock)  			break;  		if (isFencedCodeBlock && line.StartsWith ("```")) {  			i++;  			break;  		}  		if (isFencedCodeBlock && !line.StartsWith ("```"))  			codeblock.AppendLine (line);  		else  			codeblock.AppendLine (line.StartsWith ("\t") ? line.Substring (1) : line.Substring (4));  	}  	i--;  	if (wasParagraph) {  		buffer.EmitEndParagraph ();  		wasParagraph = false;  	}  	buffer.EmitCodeBlock (codeblock.ToString ());  }  // List  else if ((trimmed [0] == '+' || trimmed [0] == '-' || trimmed [0] == '*') && (trimmed [1] == ' ' || trimmed [1] == '\t')) {  	buffer.EmitOpenList ();  	var bullet = trimmed [0].ToString ();  	for (; i < lines.Length; i++) {  		trimmed = lines [i].TrimStart ();  		if (!trimmed.StartsWith (bullet))  			break;  		buffer.EmitOpenBullet ();  		var lineBreaks = new List<string> ();  		lineBreaks.Add (trimmed.TrimStart ('+'' '-'' '*'' ' '' '\t'));  		while (i + 1 < lines.Length) {  			string nextTrimmed = lines [i + 1].TrimStart ();  			if (nextTrimmed.Length > 0 && !nextTrimmed.StartsWith (bullet)) {  				lineBreaks.Add (nextTrimmed);  				i++;  			}  			else  				break;  		}  		ParseInline (buffer' string.Join (" "' lineBreaks));  		buffer.EmitCloseBullet ();  	}  	i--;  	buffer.EmitCloseList ();  }  // Normal paragraph  else {  	if (!wasParagraph)  		buffer.EmitStartParagraph (0);  	ParseInline (buffer' line.TrimEnd () + (line.EndsWith ("  ") ? Environment.NewLine : " "));  	wasParagraph = true;  }  
Magic Number,Xwt.Formats,MarkdownTextFormat,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Formats\MarkdownTextFormat.cs,ParseMarkdown,The following statement contains a magic number: if (line.All (c => c == '-') && line.Length >= 3) {  	buffer.EmitHorizontalRuler ();  }  // Code blocks  else if (line.StartsWith ("\t") || line.StartsWith ("    ") || line.StartsWith ("```")) {  	bool isFencedCodeBlock = line.StartsWith ("```");  	if (isFencedCodeBlock)  		i++;  	var codeblock = new StringBuilder ();  	for (; i < lines.Length; i++) {  		line = lines [i];  		if (!line.StartsWith ("\t") && !line.StartsWith ("    ") && !isFencedCodeBlock)  			break;  		if (isFencedCodeBlock && line.StartsWith ("```")) {  			i++;  			break;  		}  		if (isFencedCodeBlock && !line.StartsWith ("```"))  			codeblock.AppendLine (line);  		else  			codeblock.AppendLine (line.StartsWith ("\t") ? line.Substring (1) : line.Substring (4));  	}  	i--;  	if (wasParagraph) {  		buffer.EmitEndParagraph ();  		wasParagraph = false;  	}  	buffer.EmitCodeBlock (codeblock.ToString ());  }  // List  else if ((trimmed [0] == '+' || trimmed [0] == '-' || trimmed [0] == '*') && (trimmed [1] == ' ' || trimmed [1] == '\t')) {  	buffer.EmitOpenList ();  	var bullet = trimmed [0].ToString ();  	for (; i < lines.Length; i++) {  		trimmed = lines [i].TrimStart ();  		if (!trimmed.StartsWith (bullet))  			break;  		buffer.EmitOpenBullet ();  		var lineBreaks = new List<string> ();  		lineBreaks.Add (trimmed.TrimStart ('+'' '-'' '*'' ' '' '\t'));  		while (i + 1 < lines.Length) {  			string nextTrimmed = lines [i + 1].TrimStart ();  			if (nextTrimmed.Length > 0 && !nextTrimmed.StartsWith (bullet)) {  				lineBreaks.Add (nextTrimmed);  				i++;  			}  			else  				break;  		}  		ParseInline (buffer' string.Join (" "' lineBreaks));  		buffer.EmitCloseBullet ();  	}  	i--;  	buffer.EmitCloseList ();  }  // Normal paragraph  else {  	if (!wasParagraph)  		buffer.EmitStartParagraph (0);  	ParseInline (buffer' line.TrimEnd () + (line.EndsWith ("  ") ? Environment.NewLine : " "));  	wasParagraph = true;  }  
Magic Number,Xwt.Formats,MarkdownTextFormat,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Formats\MarkdownTextFormat.cs,ParseMarkdown,The following statement contains a magic number: if (line.StartsWith ("\t") || line.StartsWith ("    ") || line.StartsWith ("```")) {  	bool isFencedCodeBlock = line.StartsWith ("```");  	if (isFencedCodeBlock)  		i++;  	var codeblock = new StringBuilder ();  	for (; i < lines.Length; i++) {  		line = lines [i];  		if (!line.StartsWith ("\t") && !line.StartsWith ("    ") && !isFencedCodeBlock)  			break;  		if (isFencedCodeBlock && line.StartsWith ("```")) {  			i++;  			break;  		}  		if (isFencedCodeBlock && !line.StartsWith ("```"))  			codeblock.AppendLine (line);  		else  			codeblock.AppendLine (line.StartsWith ("\t") ? line.Substring (1) : line.Substring (4));  	}  	i--;  	if (wasParagraph) {  		buffer.EmitEndParagraph ();  		wasParagraph = false;  	}  	buffer.EmitCodeBlock (codeblock.ToString ());  }  // List  else if ((trimmed [0] == '+' || trimmed [0] == '-' || trimmed [0] == '*') && (trimmed [1] == ' ' || trimmed [1] == '\t')) {  	buffer.EmitOpenList ();  	var bullet = trimmed [0].ToString ();  	for (; i < lines.Length; i++) {  		trimmed = lines [i].TrimStart ();  		if (!trimmed.StartsWith (bullet))  			break;  		buffer.EmitOpenBullet ();  		var lineBreaks = new List<string> ();  		lineBreaks.Add (trimmed.TrimStart ('+'' '-'' '*'' ' '' '\t'));  		while (i + 1 < lines.Length) {  			string nextTrimmed = lines [i + 1].TrimStart ();  			if (nextTrimmed.Length > 0 && !nextTrimmed.StartsWith (bullet)) {  				lineBreaks.Add (nextTrimmed);  				i++;  			}  			else  				break;  		}  		ParseInline (buffer' string.Join (" "' lineBreaks));  		buffer.EmitCloseBullet ();  	}  	i--;  	buffer.EmitCloseList ();  }  // Normal paragraph  else {  	if (!wasParagraph)  		buffer.EmitStartParagraph (0);  	ParseInline (buffer' line.TrimEnd () + (line.EndsWith ("  ") ? Environment.NewLine : " "));  	wasParagraph = true;  }  
Magic Number,Xwt.Formats,MarkdownTextFormat,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Formats\MarkdownTextFormat.cs,ParseMarkdown,The following statement contains a magic number: for (; i < lines.Length; i++) {  	line = lines [i];  	if (!line.StartsWith ("\t") && !line.StartsWith ("    ") && !isFencedCodeBlock)  		break;  	if (isFencedCodeBlock && line.StartsWith ("```")) {  		i++;  		break;  	}  	if (isFencedCodeBlock && !line.StartsWith ("```"))  		codeblock.AppendLine (line);  	else  		codeblock.AppendLine (line.StartsWith ("\t") ? line.Substring (1) : line.Substring (4));  }  
Magic Number,Xwt.Formats,MarkdownTextFormat,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Formats\MarkdownTextFormat.cs,ParseMarkdown,The following statement contains a magic number: if (isFencedCodeBlock && !line.StartsWith ("```"))  	codeblock.AppendLine (line);  else  	codeblock.AppendLine (line.StartsWith ("\t") ? line.Substring (1) : line.Substring (4));  
Magic Number,Xwt.Formats,MarkdownTextFormat,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Formats\MarkdownTextFormat.cs,ParseMarkdown,The following statement contains a magic number: codeblock.AppendLine (line.StartsWith ("\t") ? line.Substring (1) : line.Substring (4));  
Magic Number,Xwt.Motion,Easing,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Motion\Easing.cs,Easing,The following statement contains a magic number: BounceOut = new Easing (p =>  {  	if (p < (1 / 2.75f)) {  		return 7.5625f * p * p;  	}  	else if (p < (2 / 2.75f)) {  		p -= (1.5f / 2.75f);  		return 7.5625f * p * p + .75f;  	}  	else if (p < (2.5f / 2.75f)) {  		p -= (2.25f / 2.75f);  		return 7.5625f * p * p + .9375f;  	}  	else {  		p -= (2.625f / 2.75f);  		return 7.5625f * p * p + .984375f;  	}  });  
Magic Number,Xwt.Motion,Easing,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Motion\Easing.cs,Easing,The following statement contains a magic number: if (p < (1 / 2.75f)) {  	return 7.5625f * p * p;  }  else if (p < (2 / 2.75f)) {  	p -= (1.5f / 2.75f);  	return 7.5625f * p * p + .75f;  }  else if (p < (2.5f / 2.75f)) {  	p -= (2.25f / 2.75f);  	return 7.5625f * p * p + .9375f;  }  else {  	p -= (2.625f / 2.75f);  	return 7.5625f * p * p + .984375f;  }  
Magic Number,Xwt.Motion,Easing,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Motion\Easing.cs,Easing,The following statement contains a magic number: if (p < (2 / 2.75f)) {  	p -= (1.5f / 2.75f);  	return 7.5625f * p * p + .75f;  }  else if (p < (2.5f / 2.75f)) {  	p -= (2.25f / 2.75f);  	return 7.5625f * p * p + .9375f;  }  else {  	p -= (2.625f / 2.75f);  	return 7.5625f * p * p + .984375f;  }  
Magic Number,Xwt.Motion,Ticker,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Motion\Tweener.cs,EnableTimer,The following statement contains a magic number: timer = Xwt.Application.TimeoutInvoke (16' HandleElapsed);  
Missing Default,Xwt,FormattedText,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\FormattedText.cs,PushSpan,The following switch statement is missing a default case: switch (tag) {  case "b":  	span.Add (new FontWeightTextAttribute () {  		Weight = FontWeight.Bold  	});  	break;  case "i":  	span.Add (new FontStyleTextAttribute () {  		Style = FontStyle.Italic  	});  	break;  case "s":  	span.Add (new StrikethroughTextAttribute ());  	break;  case "u":  	span.Add (new UnderlineTextAttribute ());  	break;  case "a":  	Uri href = null;  	ReadXmlAttributes (markup' ref k' (name' val) =>  {  		if (name == "href") {  			href = new Uri (val' UriKind.RelativeOrAbsolute);  			return true;  		}  		return false;  	});  	span.Add (new LinkTextAttribute () {  		Target = href  	});  	break;  case "span":  	ParseAttributes (span' markup' ref k);  	break;  //			case "small":  //			case "big":  //			case "tt":  }  
Missing Default,Xwt,FormattedText,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt\FormattedText.cs,CreateAttribute,The following switch statement is missing a default case: switch (name) {  case "font":  case "font-desc":  case "font_desc":  	return new FontTextAttribute () {  		Font = Font.FromName (val)  	};  /*			case "size": 			case "font_size": 				double s; 				if (!double.TryParse (val' NumberStyles.Any' CultureInfo.InvariantCulture' out s)) 					return null; 				return new FontSizeTextAttribute () { Size = s }; */case "font_weight":  case "font-weight":  case "weight":  	FontWeight w;  	if (!Enum.TryParse<FontWeight> (val' true' out w))  		return null;  	return new FontWeightTextAttribute () {  		Weight = w  	};  case "font_style":  case "font-style":  	FontStyle s;  	if (!Enum.TryParse<FontStyle> (val' true' out s))  		return null;  	return new FontStyleTextAttribute () {  		Style = s  	};  case "foreground":  case "fgcolor":  case "color":  	Color c;  	if (!Color.TryParse (val' out c))  		return null;  	return new ColorTextAttribute () {  		Color = c  	};  case "background":  case "background-color":  case "bgcolor":  	Color bc;  	if (!Color.TryParse (val' out bc))  		return null;  	return new BackgroundTextAttribute () {  		Color = bc  	};  case "underline":  	return new UnderlineTextAttribute () {  		Underline = ParseBool (val' false)  	};  case "strikethrough":  	return new StrikethroughTextAttribute () {  		Strikethrough = ParseBool (val' false)  	};  }  
Missing Default,Xwt.Drawing,VectorImageRecorderContextHandler,C:\repos\lytico_xwt-mobile\src\Xwt\Xwt.Drawing\VectorImage.cs,Draw,The following switch statement is missing a default case: switch (cm.Commands [n]) {  case DrawingCommand.AppendPath:  	var p = cm.Objects [oi++];  	if (p is VectorImageData)  		Draw (targetHandler' ctx' (VectorImageData)p);  	else  		pathHandler.AppendPath (ctx' p);  	break;  case DrawingCommand.Arc:  	pathHandler.Arc (ctx' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]);  	break;  case DrawingCommand.ArcNegative:  	pathHandler.ArcNegative (ctx' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]);  	break;  case DrawingCommand.Clip:  	handler.Clip (ctx);  	break;  case DrawingCommand.ClipPreserve:  	handler.ClipPreserve (ctx);  	break;  case DrawingCommand.ClosePath:  	pathHandler.ClosePath (ctx);  	break;  case DrawingCommand.CurveTo:  	pathHandler.CurveTo (ctx' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]);  	break;  case DrawingCommand.DrawImage2:  	handler.DrawImage (ctx' cm.Images [imi++]' cm.Rectangles [ri++]' cm.Rectangles [ri++]);  	break;  case DrawingCommand.DrawImage:  	handler.DrawImage (ctx' cm.Images [imi++]' cm.Doubles [di++]' cm.Doubles [di++]);  	break;  case DrawingCommand.DrawTextLayout:  	var lad = (TextLayoutData)cm.TextLayouts [ti++];  	var la = new TextLayout (toolkit);  	lad.InitLayout (la);  	handler.DrawTextLayout (ctx' la' cm.Doubles [di++]' cm.Doubles [di++]);  	break;  case DrawingCommand.Fill:  	handler.Fill (ctx);  	break;  case DrawingCommand.FillPreserve:  	handler.FillPreserve (ctx);  	break;  case DrawingCommand.LineTo:  	pathHandler.LineTo (ctx' cm.Doubles [di++]' cm.Doubles [di++]);  	break;  case DrawingCommand.MoveTo:  	pathHandler.MoveTo (ctx' cm.Doubles [di++]' cm.Doubles [di++]);  	break;  case DrawingCommand.NewPath:  	handler.NewPath (ctx);  	break;  case DrawingCommand.Rectangle:  	pathHandler.Rectangle (ctx' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]);  	break;  case DrawingCommand.RelCurveTo:  	pathHandler.RelCurveTo (ctx' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]);  	break;  case DrawingCommand.RelLineTo:  	pathHandler.RelLineTo (ctx' cm.Doubles [di++]' cm.Doubles [di++]);  	break;  case DrawingCommand.RelMoveTo:  	pathHandler.RelMoveTo (ctx' cm.Doubles [di++]' cm.Doubles [di++]);  	break;  case DrawingCommand.Restore:  	handler.Restore (ctx);  	break;  case DrawingCommand.Rotate:  	handler.Rotate (ctx' cm.Doubles [di++]);  	break;  case DrawingCommand.Save:  	handler.Save (ctx);  	break;  case DrawingCommand.Scale:  	handler.Scale (ctx' cm.Doubles [di++]' cm.Doubles [di++]);  	break;  case DrawingCommand.SetColor:  	handler.SetColor (ctx' cm.Colors [ci++]);  	break;  case DrawingCommand.SetGlobalAlpha:  	handler.SetGlobalAlpha (ctx' cm.Doubles [di++]);  	break;  case DrawingCommand.SetLineDash:  	var off = cm.Doubles [di++];  	var ds = new double[cm.Ints [ii++]];  	for (int i = 0; i < ds.Length; i++)  		ds [i] = cm.Doubles [di++];  	handler.SetLineDash (ctx' off' ds);  	break;  case DrawingCommand.SetLineWidth:  	handler.SetLineWidth (ctx' cm.Doubles [di++]);  	break;  case DrawingCommand.SetPattern:  	handler.SetPattern (ctx' cm.Objects [oi++]);  	break;  case DrawingCommand.Stroke:  	handler.Stroke (ctx);  	break;  case DrawingCommand.StrokePreserve:  	handler.StrokePreserve (ctx);  	break;  case DrawingCommand.Translate:  	handler.Translate (ctx' cm.Doubles [di++]' cm.Doubles [di++]);  	break;  }  
