Implementation smell,Namespace,Class,File,Method,Description
Long Statement,NotificationHubSample.iOS,AppDelegate,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\WebServices\AzureNotificationHub\NotificationHubSample\NotificationHubSample.iOS\AppDelegate.cs,RegisterForRemoteNotifications,The length of the statement  "                UIRemoteNotificationType notificationTypes = UIRemoteNotificationType.Alert | UIRemoteNotificationType.Badge | UIRemoteNotificationType.Sound; " is 142.
Long Statement,NotificationHubSample.iOS,AppDelegate,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\WebServices\AzureNotificationHub\NotificationHubSample\NotificationHubSample.iOS\AppDelegate.cs,RegisteredForRemoteNotifications,The length of the statement  "                var templateExpiration = DateTime.Now.AddDays(120).ToString(System.Globalization.CultureInfo.CreateSpecificCulture("en-US")); " is 125.
Long Statement,NotificationHubSample.iOS,AppDelegate,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\WebServices\AzureNotificationHub\NotificationHubSample\NotificationHubSample.iOS\AppDelegate.cs,RegisteredForRemoteNotifications,The length of the statement  "                Hub.RegisterTemplate(deviceToken' "defaultTemplate"' AppConstants.APNTemplateBody' templateExpiration' tags' (errorCallback) => " is 127.
Magic Number,NotificationHubSample.iOS,AppDelegate,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\WebServices\AzureNotificationHub\NotificationHubSample\NotificationHubSample.iOS\AppDelegate.cs,RegisterForRemoteNotifications,The following statement contains a magic number: UIDevice.CurrentDevice.CheckSystemVersion(10' 0)
Magic Number,NotificationHubSample.iOS,AppDelegate,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\WebServices\AzureNotificationHub\NotificationHubSample\NotificationHubSample.iOS\AppDelegate.cs,RegisteredForRemoteNotifications,The following statement contains a magic number: Hub.UnregisterAll(deviceToken' (error) =>              {                  if (error != null)                  {                      Debug.WriteLine($"Unable to call unregister {error}");                      return;                  }                    var tags = new NSSet(AppConstants.SubscriptionTags.ToArray());                  Hub.RegisterNative(deviceToken' tags' (errorCallback) =>                  {                      if (errorCallback != null)                      {                          Debug.WriteLine($"RegisterNativeAsync error: {errorCallback}");                      }                  });                    var templateExpiration = DateTime.Now.AddDays(120).ToString(System.Globalization.CultureInfo.CreateSpecificCulture("en-US"));                  Hub.RegisterTemplate(deviceToken' "defaultTemplate"' AppConstants.APNTemplateBody' templateExpiration' tags' (errorCallback) =>                  {                      if (errorCallback != null)                      {                          if (errorCallback != null)                          {                              Debug.WriteLine($"RegisterTemplateAsync error: {errorCallback}");                          }                      }                  });              });
