Implementation smell,Namespace,Class,File,Method,Description
Long Method,RpnCalculator,RpnCalculatorViewModel,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\RpnCalculator\RpnCalculator\RpnCalculator\RpnCalculatorViewModel.cs,RpnCalculatorViewModel,The method has 104 lines of code.
Magic Number,RpnCalculator,RpnCalculatorViewModel,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\RpnCalculator\RpnCalculator\RpnCalculator\RpnCalculatorViewModel.cs,RpnCalculatorViewModel,The following statement contains a magic number: UnaryOperation = new Command<string>(                  (string op) =>                  {                      double arg = stack.Pop();                      double result = 0;                        switch (op)                      {                          case "log10": result = Math.Log10(arg); break;                          case "log": result = Math.Log(arg); break;                          case "exp": result = Math.Exp(arg); break;                          case "sqrt": result = Math.Sqrt(arg); break;                          case "sin": result = Math.Sin(arg); break;                          case "cos": result = Math.Cos(arg); break;                          case "tan": result = Math.Tan(arg); break;                          case "invert": result = 1 / arg; break;                          case "asin": result = Math.Asin(arg); break;                          case "acos": result = Math.Acos(arg); break;                          case "atan": result = Math.Atan(arg); break;                          case "negate": result = -arg; break;                          case "radians": result = Math.PI * arg / 180; break;                          case "degrees": result = 180 * arg / Math.PI; break;                      }                        stack.Push(result);                      RefreshStackDisplay();                  }'                  (string op) =>                  {                      return stack.Count > 0;                  });
Magic Number,RpnCalculator,RpnCalculatorViewModel,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\RpnCalculator\RpnCalculator\RpnCalculator\RpnCalculatorViewModel.cs,RpnCalculatorViewModel,The following statement contains a magic number: UnaryOperation = new Command<string>(                  (string op) =>                  {                      double arg = stack.Pop();                      double result = 0;                        switch (op)                      {                          case "log10": result = Math.Log10(arg); break;                          case "log": result = Math.Log(arg); break;                          case "exp": result = Math.Exp(arg); break;                          case "sqrt": result = Math.Sqrt(arg); break;                          case "sin": result = Math.Sin(arg); break;                          case "cos": result = Math.Cos(arg); break;                          case "tan": result = Math.Tan(arg); break;                          case "invert": result = 1 / arg; break;                          case "asin": result = Math.Asin(arg); break;                          case "acos": result = Math.Acos(arg); break;                          case "atan": result = Math.Atan(arg); break;                          case "negate": result = -arg; break;                          case "radians": result = Math.PI * arg / 180; break;                          case "degrees": result = 180 * arg / Math.PI; break;                      }                        stack.Push(result);                      RefreshStackDisplay();                  }'                  (string op) =>                  {                      return stack.Count > 0;                  });
Missing Default,RpnCalculator,RpnCalculatorViewModel,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\RpnCalculator\RpnCalculator\RpnCalculator\RpnCalculatorViewModel.cs,RpnCalculatorViewModel,The following switch statement is missing a default case: switch (op)                      {                          case "log10": result = Math.Log10(arg); break;                          case "log": result = Math.Log(arg); break;                          case "exp": result = Math.Exp(arg); break;                          case "sqrt": result = Math.Sqrt(arg); break;                          case "sin": result = Math.Sin(arg); break;                          case "cos": result = Math.Cos(arg); break;                          case "tan": result = Math.Tan(arg); break;                          case "invert": result = 1 / arg; break;                          case "asin": result = Math.Asin(arg); break;                          case "acos": result = Math.Acos(arg); break;                          case "atan": result = Math.Atan(arg); break;                          case "negate": result = -arg; break;                          case "radians": result = Math.PI * arg / 180; break;                          case "degrees": result = 180 * arg / Math.PI; break;                      }
Missing Default,RpnCalculator,RpnCalculatorViewModel,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\RpnCalculator\RpnCalculator\RpnCalculator\RpnCalculatorViewModel.cs,RpnCalculatorViewModel,The following switch statement is missing a default case: switch (op)                      {                          case "divide": result = y / x; break;                          case "multiply": result = y * x; break;                          case "subtract": result = y - x; break;                          case "add": result = y + x; break;                          case "pow": result = Math.Pow(y' x); break;                          case "swap": stack.Push(x); result = y; break;                      }
