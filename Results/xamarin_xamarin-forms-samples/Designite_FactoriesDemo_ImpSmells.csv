Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,FormsVideoLibrary,VideoPlayer,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\Advanced\DependencyResolution\FactoriesDemo\FactoriesDemo\FormsVideoLibrary\VideoPlayer.cs,,The length of the parameter AreTransportControlsEnabledProperty is 35.
Magic Number,FactoriesDemo,BoxViewDraggingPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\Advanced\DependencyResolution\FactoriesDemo\FactoriesDemo\Views\BoxViewDraggingPage.xaml.cs,AddBoxViewToLayout,The following statement contains a magic number: BoxView boxView = new BoxView              {                  WidthRequest = 100'                  HeightRequest = 100'                  Color = new Color(_random.NextDouble()'                                    _random.NextDouble()'                                    _random.NextDouble())              };
Magic Number,FactoriesDemo,BoxViewDraggingPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\Advanced\DependencyResolution\FactoriesDemo\FactoriesDemo\Views\BoxViewDraggingPage.xaml.cs,AddBoxViewToLayout,The following statement contains a magic number: BoxView boxView = new BoxView              {                  WidthRequest = 100'                  HeightRequest = 100'                  Color = new Color(_random.NextDouble()'                                    _random.NextDouble()'                                    _random.NextDouble())              };
Magic Number,FormsVideoLibrary,VideoPlayer,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\Advanced\DependencyResolution\FactoriesDemo\FactoriesDemo\FormsVideoLibrary\VideoPlayer.cs,VideoPlayer,The following statement contains a magic number: Device.StartTimer(TimeSpan.FromMilliseconds(100)' () =>              {                  UpdateStatus?.Invoke(this' EventArgs.Empty);                  return true;              });
Missing Default,FactoriesDemo,BoxViewDraggingPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\Advanced\DependencyResolution\FactoriesDemo\FactoriesDemo\Views\BoxViewDraggingPage.xaml.cs,OnTouchEffectAction,The following switch statement is missing a default case: switch (args.Type)              {                  case TouchActionType.Pressed:                      // Don't allow a second touch on an already touched BoxView                      if (!_dragDictionary.ContainsKey(boxView))                      {                          _dragDictionary.Add(boxView' new DragInfo(args.Id' args.Location));                            // Set Capture property to true                          TouchEffect touchEffect = (TouchEffect)boxView.Effects.FirstOrDefault(e => e is TouchEffect);                          touchEffect.Capture = true;                      }                      break;                    case TouchActionType.Moved:                      if (_dragDictionary.ContainsKey(boxView) && _dragDictionary[boxView].Id == args.Id)                      {                          Rectangle rect = AbsoluteLayout.GetLayoutBounds(boxView);                          Point initialLocation = _dragDictionary[boxView].PressPoint;                          rect.X += args.Location.X - initialLocation.X;                          rect.Y += args.Location.Y - initialLocation.Y;                          AbsoluteLayout.SetLayoutBounds(boxView' rect);                      }                      break;                    case TouchActionType.Released:                      if (_dragDictionary.ContainsKey(boxView) && _dragDictionary[boxView].Id == args.Id)                      {                          _dragDictionary.Remove(boxView);                      }                      break;              }
