Implementation smell,Namespace,Class,File,Method,Description
Long Statement,CustomRenderer.UWP,CameraPageRenderer,C:\repos\xamarin_xamarin-forms-samples\CustomRenderers\ContentPage\UWP\CameraPageRenderer.cs,OnSystemMediaControlsPropertyChanged,The length of the statement  "                if (args.Property == SystemMediaTransportControlsProperty.SoundLevel && page.Frame.CurrentSourcePageType == typeof(MainPage)) " is 125.
Long Statement,CustomRenderer.UWP,CameraPageRenderer,C:\repos\xamarin_xamarin-forms-samples\CustomRenderers\ContentPage\UWP\CameraPageRenderer.cs,InitializeCameraAsync,The length of the statement  "                var cameraDevice = devices.FirstOrDefault(c => c.EnclosureLocation != null && c.EnclosureLocation.Panel == Windows.Devices.Enumeration.Panel.Back); " is 147.
Long Statement,CustomRenderer.UWP,CameraPageRenderer,C:\repos\xamarin_xamarin-forms-samples\CustomRenderers\ContentPage\UWP\CameraPageRenderer.cs,InitializeCameraAsync,The length of the statement  "                    if (cameraDevice.EnclosureLocation == null || cameraDevice.EnclosureLocation.Panel == Windows.Devices.Enumeration.Panel.Unknown) " is 128.
Magic Number,CustomRenderer.UWP,CameraPageRenderer,C:\repos\xamarin_xamarin-forms-samples\CustomRenderers\ContentPage\UWP\CameraPageRenderer.cs,SetPreviewRotationAsync,The following statement contains a magic number: if (mirroringPreview)              {                  rotation = (360 - rotation) % 360;              }
Magic Number,CustomRenderer.UWP,CameraPageRenderer,C:\repos\xamarin_xamarin-forms-samples\CustomRenderers\ContentPage\UWP\CameraPageRenderer.cs,SetPreviewRotationAsync,The following statement contains a magic number: if (mirroringPreview)              {                  rotation = (360 - rotation) % 360;              }
Magic Number,CustomRenderer.UWP,CameraPageRenderer,C:\repos\xamarin_xamarin-forms-samples\CustomRenderers\ContentPage\UWP\CameraPageRenderer.cs,ConvertDeviceOrientationToDegrees,The following statement contains a magic number: switch (orientation)              {                  case SimpleOrientation.Rotated90DegreesCounterclockwise:                      return 90;                  case SimpleOrientation.Rotated180DegreesCounterclockwise:                      return 180;                  case SimpleOrientation.Rotated270DegreesCounterclockwise:                      return 270;                  case SimpleOrientation.NotRotated:                  default:                      return 0;              }
Magic Number,CustomRenderer.UWP,CameraPageRenderer,C:\repos\xamarin_xamarin-forms-samples\CustomRenderers\ContentPage\UWP\CameraPageRenderer.cs,ConvertDeviceOrientationToDegrees,The following statement contains a magic number: switch (orientation)              {                  case SimpleOrientation.Rotated90DegreesCounterclockwise:                      return 90;                  case SimpleOrientation.Rotated180DegreesCounterclockwise:                      return 180;                  case SimpleOrientation.Rotated270DegreesCounterclockwise:                      return 270;                  case SimpleOrientation.NotRotated:                  default:                      return 0;              }
Magic Number,CustomRenderer.UWP,CameraPageRenderer,C:\repos\xamarin_xamarin-forms-samples\CustomRenderers\ContentPage\UWP\CameraPageRenderer.cs,ConvertDeviceOrientationToDegrees,The following statement contains a magic number: switch (orientation)              {                  case SimpleOrientation.Rotated90DegreesCounterclockwise:                      return 90;                  case SimpleOrientation.Rotated180DegreesCounterclockwise:                      return 180;                  case SimpleOrientation.Rotated270DegreesCounterclockwise:                      return 270;                  case SimpleOrientation.NotRotated:                  default:                      return 0;              }
Magic Number,CustomRenderer.UWP,CameraPageRenderer,C:\repos\xamarin_xamarin-forms-samples\CustomRenderers\ContentPage\UWP\CameraPageRenderer.cs,ConvertDisplayOrientationToDegrees,The following statement contains a magic number: switch (orientation)              {                  case DisplayOrientations.Portrait:                      return 90;                  case DisplayOrientations.LandscapeFlipped:                      return 180;                  case DisplayOrientations.PortraitFlipped:                      return 270;                  case DisplayOrientations.Landscape:                  default:                      return 0;              }
Magic Number,CustomRenderer.UWP,CameraPageRenderer,C:\repos\xamarin_xamarin-forms-samples\CustomRenderers\ContentPage\UWP\CameraPageRenderer.cs,ConvertDisplayOrientationToDegrees,The following statement contains a magic number: switch (orientation)              {                  case DisplayOrientations.Portrait:                      return 90;                  case DisplayOrientations.LandscapeFlipped:                      return 180;                  case DisplayOrientations.PortraitFlipped:                      return 270;                  case DisplayOrientations.Landscape:                  default:                      return 0;              }
Magic Number,CustomRenderer.UWP,CameraPageRenderer,C:\repos\xamarin_xamarin-forms-samples\CustomRenderers\ContentPage\UWP\CameraPageRenderer.cs,ConvertDisplayOrientationToDegrees,The following statement contains a magic number: switch (orientation)              {                  case DisplayOrientations.Portrait:                      return 90;                  case DisplayOrientations.LandscapeFlipped:                      return 180;                  case DisplayOrientations.PortraitFlipped:                      return 270;                  case DisplayOrientations.Landscape:                  default:                      return 0;              }
Missing Default,CustomRenderer.UWP,CameraPageRenderer,C:\repos\xamarin_xamarin-forms-samples\CustomRenderers\ContentPage\UWP\CameraPageRenderer.cs,GetCameraOrientation,The following switch statement is missing a default case: switch (result)                  {                      case SimpleOrientation.Rotated90DegreesCounterclockwise:                          result = SimpleOrientation.NotRotated;                          break;                      case SimpleOrientation.Rotated180DegreesCounterclockwise:                          result = SimpleOrientation.Rotated90DegreesCounterclockwise;                          break;                      case SimpleOrientation.Rotated270DegreesCounterclockwise:                          result = SimpleOrientation.Rotated180DegreesCounterclockwise;                          break;                      case SimpleOrientation.NotRotated:                          result = SimpleOrientation.Rotated270DegreesCounterclockwise;                          break;                  }
Missing Default,CustomRenderer.UWP,CameraPageRenderer,C:\repos\xamarin_xamarin-forms-samples\CustomRenderers\ContentPage\UWP\CameraPageRenderer.cs,GetCameraOrientation,The following switch statement is missing a default case: switch (result)                  {                      case SimpleOrientation.Rotated90DegreesCounterclockwise:                          return SimpleOrientation.Rotated270DegreesCounterclockwise;                      case SimpleOrientation.Rotated270DegreesCounterclockwise:                          return SimpleOrientation.Rotated90DegreesCounterclockwise;                  }
