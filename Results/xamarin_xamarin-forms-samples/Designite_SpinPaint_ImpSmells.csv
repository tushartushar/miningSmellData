Implementation smell,Namespace,Class,File,Method,Description
Magic Number,SpinPaint,MainPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\SpinPaint\SpinPaint\SpinPaint\MainPage.xaml.cs,MainPage,The following statement contains a magic number: Device.StartTimer(TimeSpan.FromMilliseconds(16)' OnTimerTick);
Magic Number,SpinPaint,MainPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\SpinPaint\SpinPaint\SpinPaint\MainPage.xaml.cs,OnTimerTick,The following statement contains a magic number: float tColor = stopwatch.ElapsedMilliseconds % 10000 / 10000f;
Magic Number,SpinPaint,MainPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\SpinPaint\SpinPaint\SpinPaint\MainPage.xaml.cs,OnTimerTick,The following statement contains a magic number: float tColor = stopwatch.ElapsedMilliseconds % 10000 / 10000f;
Magic Number,SpinPaint,MainPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\SpinPaint\SpinPaint\SpinPaint\MainPage.xaml.cs,OnTimerTick,The following statement contains a magic number: fingerPaint.Color = SKColor.FromHsl(360 * tColor' 100' 50);
Magic Number,SpinPaint,MainPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\SpinPaint\SpinPaint\SpinPaint\MainPage.xaml.cs,OnTimerTick,The following statement contains a magic number: fingerPaint.Color = SKColor.FromHsl(360 * tColor' 100' 50);
Magic Number,SpinPaint,MainPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\SpinPaint\SpinPaint\SpinPaint\MainPage.xaml.cs,OnTimerTick,The following statement contains a magic number: fingerPaint.Color = SKColor.FromHsl(360 * tColor' 100' 50);
Magic Number,SpinPaint,MainPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\SpinPaint\SpinPaint\SpinPaint\MainPage.xaml.cs,OnTimerTick,The following statement contains a magic number: float tAngle = stopwatch.ElapsedMilliseconds % 5000 / 5000f;
Magic Number,SpinPaint,MainPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\SpinPaint\SpinPaint\SpinPaint\MainPage.xaml.cs,OnTimerTick,The following statement contains a magic number: float tAngle = stopwatch.ElapsedMilliseconds % 5000 / 5000f;
Magic Number,SpinPaint,MainPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\SpinPaint\SpinPaint\SpinPaint\MainPage.xaml.cs,OnTimerTick,The following statement contains a magic number: angle = 360 * tAngle;
Magic Number,SpinPaint,MainPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\SpinPaint\SpinPaint\SpinPaint\MainPage.xaml.cs,OnTimerTick,The following statement contains a magic number: SKMatrix matrix = SKMatrix.MakeRotationDegrees(-angle' bitmap.Width / 2' bitmap.Height / 2);
Magic Number,SpinPaint,MainPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\SpinPaint\SpinPaint\SpinPaint\MainPage.xaml.cs,OnTimerTick,The following statement contains a magic number: SKMatrix matrix = SKMatrix.MakeRotationDegrees(-angle' bitmap.Width / 2' bitmap.Height / 2);
Magic Number,SpinPaint,MainPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\SpinPaint\SpinPaint\SpinPaint\MainPage.xaml.cs,OnTimerTick,The following statement contains a magic number: float offset = (bitmapSize - canvasSize) / 2;
Magic Number,SpinPaint,MainPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\SpinPaint\SpinPaint\SpinPaint\MainPage.xaml.cs,OnPaintSurface,The following statement contains a magic number: float radius = canvasSize / 2;
Magic Number,SpinPaint,MainPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\SpinPaint\SpinPaint\SpinPaint\MainPage.xaml.cs,OnPaintSurface,The following statement contains a magic number: float offset = (canvasSize - bitmapSize) / 2f;
Magic Number,SpinPaint,MainPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\SpinPaint\SpinPaint\SpinPaint\MainPage.xaml.cs,PrepBitmap,The following statement contains a magic number: bitmapClipPath.AddCircle(bitmapSize / 2' bitmapSize / 2' bitmapSize / 2);
Magic Number,SpinPaint,MainPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\SpinPaint\SpinPaint\SpinPaint\MainPage.xaml.cs,PrepBitmap,The following statement contains a magic number: bitmapClipPath.AddCircle(bitmapSize / 2' bitmapSize / 2' bitmapSize / 2);
Magic Number,SpinPaint,MainPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\SpinPaint\SpinPaint\SpinPaint\MainPage.xaml.cs,PrepBitmap,The following statement contains a magic number: bitmapClipPath.AddCircle(bitmapSize / 2' bitmapSize / 2' bitmapSize / 2);
Missing Default,SpinPaint,MainPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\SpinPaint\SpinPaint\SpinPaint\MainPage.xaml.cs,OnTouchEffectAction,The following switch statement is missing a default case: switch (args.Type)              {                  case TouchActionType.Pressed:                      if (args.IsInContact)                      {                          idDictionary.Add(args.Id' new FingerInfo                          {                              ThisPosition = args.Location'                              LastPosition = new SKPoint(float.PositiveInfinity' float.PositiveInfinity)                          });                      }                      break;                    case TouchActionType.Moved:                      if (idDictionary.ContainsKey(args.Id))                      {                          idDictionary[args.Id].ThisPosition = args.Location;                      }                      break;                    case TouchActionType.Released:                  case TouchActionType.Cancelled:                      if (idDictionary.ContainsKey(args.Id))                      {                          idDictionary.Remove(args.Id);                      }                      break;              }
