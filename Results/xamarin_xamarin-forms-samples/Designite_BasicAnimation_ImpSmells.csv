Implementation smell,Namespace,Class,File,Method,Description
Magic Number,BasicAnimation,FadeAnimationPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\FadeAnimationPage.xaml.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: await image.FadeTo (1' 4000);
Magic Number,BasicAnimation,FadeAnimationPageCS,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\FadeAnimationPageCS.cs,FadeAnimationPageCS,The following statement contains a magic number: Content = new StackLayout {   				Margin = new Thickness (0' 20' 0' 0)'  				Children = {  					image'  					startButton'  					cancelButton  				}  			};
Magic Number,BasicAnimation,FadeAnimationPageCS,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\FadeAnimationPageCS.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: await image.FadeTo (1' 4000);
Magic Number,BasicAnimation,HomePageCS,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\HomePageCS.cs,HomePageCS,The following statement contains a magic number: Content = new StackLayout {   				Margin = new Thickness (0' 20' 0' 0)'  				Children = {  					rotateButton'  					relativeRotateButton'  					rotateAnchorButton'  					multipleRotateButton'  					scaleButton'  					relativeScaleButton'  					transformButton'  					fadeButton  				}  			};
Magic Number,BasicAnimation,MultipleRotationAnimationPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\MultipleRotationAnimationPage.xaml.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: uint duration = 10 * 60 * 1000;
Magic Number,BasicAnimation,MultipleRotationAnimationPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\MultipleRotationAnimationPage.xaml.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: uint duration = 10 * 60 * 1000;
Magic Number,BasicAnimation,MultipleRotationAnimationPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\MultipleRotationAnimationPage.xaml.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: uint duration = 10 * 60 * 1000;
Magic Number,BasicAnimation,MultipleRotationAnimationPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\MultipleRotationAnimationPage.xaml.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: await Task.WhenAll (  				image.RotateTo (307 * 360' duration)'  				image.RotateXTo (251 * 360' duration)'  				image.RotateYTo (199 * 360' duration)  			);
Magic Number,BasicAnimation,MultipleRotationAnimationPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\MultipleRotationAnimationPage.xaml.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: await Task.WhenAll (  				image.RotateTo (307 * 360' duration)'  				image.RotateXTo (251 * 360' duration)'  				image.RotateYTo (199 * 360' duration)  			);
Magic Number,BasicAnimation,MultipleRotationAnimationPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\MultipleRotationAnimationPage.xaml.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: await Task.WhenAll (  				image.RotateTo (307 * 360' duration)'  				image.RotateXTo (251 * 360' duration)'  				image.RotateYTo (199 * 360' duration)  			);
Magic Number,BasicAnimation,MultipleRotationAnimationPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\MultipleRotationAnimationPage.xaml.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: await Task.WhenAll (  				image.RotateTo (307 * 360' duration)'  				image.RotateXTo (251 * 360' duration)'  				image.RotateYTo (199 * 360' duration)  			);
Magic Number,BasicAnimation,MultipleRotationAnimationPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\MultipleRotationAnimationPage.xaml.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: await Task.WhenAll (  				image.RotateTo (307 * 360' duration)'  				image.RotateXTo (251 * 360' duration)'  				image.RotateYTo (199 * 360' duration)  			);
Magic Number,BasicAnimation,MultipleRotationAnimationPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\MultipleRotationAnimationPage.xaml.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: await Task.WhenAll (  				image.RotateTo (307 * 360' duration)'  				image.RotateXTo (251 * 360' duration)'  				image.RotateYTo (199 * 360' duration)  			);
Magic Number,BasicAnimation,MultipleRotationAnimationPageCS,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\MultipleRotationAnimationPageCS.cs,MultipleRotationAnimationPageCS,The following statement contains a magic number: Content = new StackLayout {   				Margin = new Thickness (0' 20' 0' 0)'  				Children = {  					image'  					startButton'  					cancelButton  				}  			};
Magic Number,BasicAnimation,MultipleRotationAnimationPageCS,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\MultipleRotationAnimationPageCS.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: uint duration = 10 * 60 * 1000;
Magic Number,BasicAnimation,MultipleRotationAnimationPageCS,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\MultipleRotationAnimationPageCS.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: uint duration = 10 * 60 * 1000;
Magic Number,BasicAnimation,MultipleRotationAnimationPageCS,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\MultipleRotationAnimationPageCS.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: uint duration = 10 * 60 * 1000;
Magic Number,BasicAnimation,MultipleRotationAnimationPageCS,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\MultipleRotationAnimationPageCS.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: await Task.WhenAll (  				image.RotateTo (307 * 360' duration)'  				image.RotateXTo (251 * 360' duration)'  				image.RotateYTo (199 * 360' duration)  			);
Magic Number,BasicAnimation,MultipleRotationAnimationPageCS,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\MultipleRotationAnimationPageCS.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: await Task.WhenAll (  				image.RotateTo (307 * 360' duration)'  				image.RotateXTo (251 * 360' duration)'  				image.RotateYTo (199 * 360' duration)  			);
Magic Number,BasicAnimation,MultipleRotationAnimationPageCS,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\MultipleRotationAnimationPageCS.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: await Task.WhenAll (  				image.RotateTo (307 * 360' duration)'  				image.RotateXTo (251 * 360' duration)'  				image.RotateYTo (199 * 360' duration)  			);
Magic Number,BasicAnimation,MultipleRotationAnimationPageCS,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\MultipleRotationAnimationPageCS.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: await Task.WhenAll (  				image.RotateTo (307 * 360' duration)'  				image.RotateXTo (251 * 360' duration)'  				image.RotateYTo (199 * 360' duration)  			);
Magic Number,BasicAnimation,MultipleRotationAnimationPageCS,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\MultipleRotationAnimationPageCS.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: await Task.WhenAll (  				image.RotateTo (307 * 360' duration)'  				image.RotateXTo (251 * 360' duration)'  				image.RotateYTo (199 * 360' duration)  			);
Magic Number,BasicAnimation,MultipleRotationAnimationPageCS,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\MultipleRotationAnimationPageCS.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: await Task.WhenAll (  				image.RotateTo (307 * 360' duration)'  				image.RotateXTo (251 * 360' duration)'  				image.RotateYTo (199 * 360' duration)  			);
Magic Number,BasicAnimation,RelativeRotationPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\RelativeRotationPage.xaml.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: await image.RelRotateTo (360' 2000);
Magic Number,BasicAnimation,RelativeRotationPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\RelativeRotationPage.xaml.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: await image.RelRotateTo (360' 2000);
Magic Number,BasicAnimation,RelativeRotationPageCS,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\RelativeRotationPageCS.cs,RelativeRotationPageCS,The following statement contains a magic number: Content = new StackLayout {   				Margin = new Thickness (0' 20' 0' 0)'  				Children = {  					image'  					startButton'  					cancelButton  				}  			};
Magic Number,BasicAnimation,RelativeRotationPageCS,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\RelativeRotationPageCS.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: await image.RelRotateTo (360' 2000);
Magic Number,BasicAnimation,RelativeRotationPageCS,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\RelativeRotationPageCS.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: await image.RelRotateTo (360' 2000);
Magic Number,BasicAnimation,RelativeScaleAnimationPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\RelativeScaleAnimationPage.xaml.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: await image.RelScaleTo (2' 2000);
Magic Number,BasicAnimation,RelativeScaleAnimationPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\RelativeScaleAnimationPage.xaml.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: await image.RelScaleTo (2' 2000);
Magic Number,BasicAnimation,RelativeScaleAnimationPageCS,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\RelativeScaleAnimationPageCS.cs,RelativeScaleAnimationPageCS,The following statement contains a magic number: Content = new StackLayout {   				Margin = new Thickness (0' 20' 0' 0)'  				Children = {  					image'  					startButton'  					cancelButton  				}  			};
Magic Number,BasicAnimation,RelativeScaleAnimationPageCS,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\RelativeScaleAnimationPageCS.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: await image.RelScaleTo (2' 2000);
Magic Number,BasicAnimation,RelativeScaleAnimationPageCS,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\RelativeScaleAnimationPageCS.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: await image.RelScaleTo (2' 2000);
Magic Number,BasicAnimation,RotateAnimationPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\RotateAnimationPage.xaml.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: await image.RotateTo (360' 2000);
Magic Number,BasicAnimation,RotateAnimationPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\RotateAnimationPage.xaml.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: await image.RotateTo (360' 2000);
Magic Number,BasicAnimation,RotateAnimationPageCS,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\RotateAnimationPageCS.cs,RotateAnimationPageCS,The following statement contains a magic number: Content = new StackLayout {   				Margin = new Thickness (0' 20' 0' 0)'  				Children = {  					image'  					startButton'  					cancelButton  				}  			};
Magic Number,BasicAnimation,RotateAnimationPageCS,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\RotateAnimationPageCS.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: await image.RotateTo (360' 2000);
Magic Number,BasicAnimation,RotateAnimationPageCS,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\RotateAnimationPageCS.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: await image.RotateTo (360' 2000);
Magic Number,BasicAnimation,RotateAnimationWithAnchorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\RotateAnimationWithAnchorsPage.xaml.cs,OnSizeChanged,The following statement contains a magic number: center = new Point(absoluteLayout.Width / 2' absoluteLayout.Height / 2);
Magic Number,BasicAnimation,RotateAnimationWithAnchorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\RotateAnimationWithAnchorsPage.xaml.cs,OnSizeChanged,The following statement contains a magic number: center = new Point(absoluteLayout.Width / 2' absoluteLayout.Height / 2);
Magic Number,BasicAnimation,RotateAnimationWithAnchorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\RotateAnimationWithAnchorsPage.xaml.cs,OnSizeChanged,The following statement contains a magic number: radius = Math.Min(absoluteLayout.Width' absoluteLayout.Height) / 2;
Magic Number,BasicAnimation,RotateAnimationWithAnchorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\RotateAnimationWithAnchorsPage.xaml.cs,OnSizeChanged,The following statement contains a magic number: AbsoluteLayout.SetLayoutBounds(image'                  new Rectangle(center.X - image.Width / 2' center.Y - radius' AbsoluteLayout.AutoSize' AbsoluteLayout.AutoSize));
Magic Number,BasicAnimation,RotateAnimationWithAnchorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\RotateAnimationWithAnchorsPage.xaml.cs,OnImageTapped,The following statement contains a magic number: await image.RotateTo(360' 2000);
Magic Number,BasicAnimation,RotateAnimationWithAnchorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\RotateAnimationWithAnchorsPage.xaml.cs,OnImageTapped,The following statement contains a magic number: await image.RotateTo(360' 2000);
Magic Number,BasicAnimation,RotateAnimationWithAnchorsPageCS,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\RotateAnimationWithAnchorsPageCS.cs,OnSizeChanged,The following statement contains a magic number: center = new Point(absoluteLayout.Width / 2' absoluteLayout.Height / 2);
Magic Number,BasicAnimation,RotateAnimationWithAnchorsPageCS,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\RotateAnimationWithAnchorsPageCS.cs,OnSizeChanged,The following statement contains a magic number: center = new Point(absoluteLayout.Width / 2' absoluteLayout.Height / 2);
Magic Number,BasicAnimation,RotateAnimationWithAnchorsPageCS,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\RotateAnimationWithAnchorsPageCS.cs,OnSizeChanged,The following statement contains a magic number: radius = Math.Min(absoluteLayout.Width' absoluteLayout.Height) / 2;
Magic Number,BasicAnimation,RotateAnimationWithAnchorsPageCS,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\RotateAnimationWithAnchorsPageCS.cs,OnSizeChanged,The following statement contains a magic number: AbsoluteLayout.SetLayoutBounds(image'                  new Rectangle(center.X - image.Width / 2' center.Y - radius' AbsoluteLayout.AutoSize' AbsoluteLayout.AutoSize));
Magic Number,BasicAnimation,RotateAnimationWithAnchorsPageCS,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\RotateAnimationWithAnchorsPageCS.cs,OnImageTapped,The following statement contains a magic number: await image.RotateTo(360' 2000);
Magic Number,BasicAnimation,RotateAnimationWithAnchorsPageCS,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\RotateAnimationWithAnchorsPageCS.cs,OnImageTapped,The following statement contains a magic number: await image.RotateTo(360' 2000);
Magic Number,BasicAnimation,ScaleAnimationPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\ScaleAnimationPage.xaml.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: bool isCancelled = await image.ScaleTo (2' 2000);
Magic Number,BasicAnimation,ScaleAnimationPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\ScaleAnimationPage.xaml.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: bool isCancelled = await image.ScaleTo (2' 2000);
Magic Number,BasicAnimation,ScaleAnimationPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\ScaleAnimationPage.xaml.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: await image.ScaleTo (1' 2000);
Magic Number,BasicAnimation,ScaleAnimationPageCS,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\ScaleAnimationPageCS.cs,ScaleAnimationPageCS,The following statement contains a magic number: Content = new StackLayout {   				Margin = new Thickness (0' 20' 0' 0)'  				Children = {  					image'  					startButton'  					cancelButton  				}  			};
Magic Number,BasicAnimation,ScaleAnimationPageCS,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\ScaleAnimationPageCS.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: bool isCancelled = await image.ScaleTo (2' 2000);
Magic Number,BasicAnimation,ScaleAnimationPageCS,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\ScaleAnimationPageCS.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: bool isCancelled = await image.ScaleTo (2' 2000);
Magic Number,BasicAnimation,ScaleAnimationPageCS,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\ScaleAnimationPageCS.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: await image.ScaleTo (1' 2000);
Magic Number,BasicAnimation,TransformAnimationPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\TransformAnimationPage.xaml.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: bool isCancelled = await image.TranslateTo (-100' 0' 1000);
Magic Number,BasicAnimation,TransformAnimationPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\TransformAnimationPage.xaml.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: bool isCancelled = await image.TranslateTo (-100' 0' 1000);
Magic Number,BasicAnimation,TransformAnimationPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\TransformAnimationPage.xaml.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: isCancelled = await image.TranslateTo (-100' -100' 1000);
Magic Number,BasicAnimation,TransformAnimationPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\TransformAnimationPage.xaml.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: isCancelled = await image.TranslateTo (-100' -100' 1000);
Magic Number,BasicAnimation,TransformAnimationPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\TransformAnimationPage.xaml.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: isCancelled = await image.TranslateTo (-100' -100' 1000);
Magic Number,BasicAnimation,TransformAnimationPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\TransformAnimationPage.xaml.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: isCancelled = await image.TranslateTo (100' 100' 2000);
Magic Number,BasicAnimation,TransformAnimationPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\TransformAnimationPage.xaml.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: isCancelled = await image.TranslateTo (100' 100' 2000);
Magic Number,BasicAnimation,TransformAnimationPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\TransformAnimationPage.xaml.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: isCancelled = await image.TranslateTo (100' 100' 2000);
Magic Number,BasicAnimation,TransformAnimationPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\TransformAnimationPage.xaml.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: isCancelled = await image.TranslateTo (0' 100' 1000);
Magic Number,BasicAnimation,TransformAnimationPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\TransformAnimationPage.xaml.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: isCancelled = await image.TranslateTo (0' 100' 1000);
Magic Number,BasicAnimation,TransformAnimationPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\TransformAnimationPage.xaml.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: isCancelled = await image.TranslateTo (0' 0' 1000);
Magic Number,BasicAnimation,TransformAnimationPageCS,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\TransformAnimationPageCS.cs,TransformAnimationPageCS,The following statement contains a magic number: Content = new StackLayout {   				Margin = new Thickness (0' 20' 0' 0)'  				Children = {  					image'  					startButton'  					cancelButton  				}  			};
Magic Number,BasicAnimation,TransformAnimationPageCS,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\TransformAnimationPageCS.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: bool isCancelled = await image.TranslateTo (-100' 0' 1000);
Magic Number,BasicAnimation,TransformAnimationPageCS,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\TransformAnimationPageCS.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: bool isCancelled = await image.TranslateTo (-100' 0' 1000);
Magic Number,BasicAnimation,TransformAnimationPageCS,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\TransformAnimationPageCS.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: isCancelled = await image.TranslateTo (-100' -100' 1000);
Magic Number,BasicAnimation,TransformAnimationPageCS,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\TransformAnimationPageCS.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: isCancelled = await image.TranslateTo (-100' -100' 1000);
Magic Number,BasicAnimation,TransformAnimationPageCS,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\TransformAnimationPageCS.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: isCancelled = await image.TranslateTo (-100' -100' 1000);
Magic Number,BasicAnimation,TransformAnimationPageCS,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\TransformAnimationPageCS.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: isCancelled = await image.TranslateTo (100' 100' 2000);
Magic Number,BasicAnimation,TransformAnimationPageCS,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\TransformAnimationPageCS.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: isCancelled = await image.TranslateTo (100' 100' 2000);
Magic Number,BasicAnimation,TransformAnimationPageCS,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\TransformAnimationPageCS.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: isCancelled = await image.TranslateTo (100' 100' 2000);
Magic Number,BasicAnimation,TransformAnimationPageCS,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\TransformAnimationPageCS.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: isCancelled = await image.TranslateTo (0' 100' 1000);
Magic Number,BasicAnimation,TransformAnimationPageCS,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\TransformAnimationPageCS.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: isCancelled = await image.TranslateTo (0' 100' 1000);
Magic Number,BasicAnimation,TransformAnimationPageCS,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\Animation\Basic\BasicAnimation\TransformAnimationPageCS.cs,OnStartAnimationButtonClicked,The following statement contains a magic number: isCancelled = await image.TranslateTo (0' 0' 1000);
