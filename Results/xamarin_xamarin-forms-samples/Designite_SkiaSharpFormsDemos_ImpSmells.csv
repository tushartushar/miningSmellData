Implementation smell,Namespace,Class,File,Method,Description
Complex Method,SkiaSharpFormsDemos.Bitmaps,CroppingRectangle,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\CroppingRectangle.cs,MoveCorner,Cyclomatic complexity of the method is 8
Complex Method,SkiaSharpFormsDemos.Bitmaps,FingerPaintSavePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\FingerPaintSavePage.xaml.cs,OnTouchEffectAction,Cyclomatic complexity of the method is 8
Complex Method,SkiaSharpFormsDemos.Curves,PathExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PathExtensions.cs,CloneWithTransform,Cyclomatic complexity of the method is 12
Complex Method,SkiaSharpFormsDemos.Paths,FingerPaintPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\FingerPaintPage.xaml.cs,OnTouchEffectAction,Cyclomatic complexity of the method is 8
Complex Method,SkiaSharpFormsDemos.Transforms,SingleFingerCornerScalePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\SingleFingerCornerScalePage.xaml.cs,OnTouchEffectAction,Cyclomatic complexity of the method is 8
Complex Method,SkiaSharpFormsDemos.Transforms,TaperTransform,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\TaperTransform.cs,Make,Cyclomatic complexity of the method is 12
Long Parameter List,SkiaSharpFormsDemos,BitmapExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\BitmapExtensions.cs,RgbaGetBytes,The method has 5 parameters. Parameters: pixel' red' green' blue' alpha
Long Parameter List,SkiaSharpFormsDemos,BitmapExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\BitmapExtensions.cs,BgraGetBytes,The method has 5 parameters. Parameters: pixel' blue' green' red' alpha
Long Parameter List,SkiaSharpFormsDemos,BitmapExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\BitmapExtensions.cs,DrawBitmap,The method has 7 parameters. Parameters: canvas' bitmap' dest' stretch' horizontal' vertical' paint
Long Parameter List,SkiaSharpFormsDemos,BitmapExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\BitmapExtensions.cs,DrawBitmap,The method has 8 parameters. Parameters: canvas' bitmap' source' dest' stretch' horizontal' vertical' paint
Long Parameter List,SkiaSharpFormsDemos,BitmapExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\BitmapExtensions.cs,CalculateDisplayRect,The method has 5 parameters. Parameters: dest' bmpWidth' bmpHeight' horizontal' vertical
Long Parameter List,SkiaSharpFormsDemos.Bitmaps,PhotoPuzzlePage4,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\PhotoPuzzlePage4.xaml.cs,AnimateTile,The method has 5 parameters. Parameters: row' col' newRow' newCol' length
Long Parameter List,SkiaSharpFormsDemos.Effects,ChainLinkTile,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ChainLinkTile.cs,StraightWire,The method has 5 parameters. Parameters: path' center' corner' pt1' pt2
Long Parameter List,SkiaSharpFormsDemos.Effects,ChainLinkTile,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ChainLinkTile.cs,CurvedWire,The method has 5 parameters. Parameters: path' center' corner' pt1' pt2
Long Parameter List,SkiaSharpFormsDemos.Transforms,ShowNonAffineMatrixPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\ShowNonAffineMatrixPage.xaml.cs,ComputeMatrix,The method has 5 parameters. Parameters: size' ptUL' ptUR' ptLL' ptLR
Complex Conditional,SkiaSharpFormsDemos.Transforms,TouchManipulationManager,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\TouchManipulationManager.cs,TwoFingerManipulate,The conditional expression  "!float.IsNaN(scaleX) && !float.IsInfinity(scaleX) &&                  !float.IsNaN(scaleY) && !float.IsInfinity(scaleY)"  is complex.
Empty Catch Block,SkiaSharpFormsDemos.Basics,BasicBitmapsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\BasicBitmapsPage.cs,OnAppearing,The method has an empty catch block.
Magic Number,SkiaSharpFormsDemos,BitmapExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\BitmapExtensions.cs,RgbaMakePixel,The following statement contains a magic number: return (uint)((alpha << 24) | (blue << 16) | (green << 8) | red);
Magic Number,SkiaSharpFormsDemos,BitmapExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\BitmapExtensions.cs,RgbaMakePixel,The following statement contains a magic number: return (uint)((alpha << 24) | (blue << 16) | (green << 8) | red);
Magic Number,SkiaSharpFormsDemos,BitmapExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\BitmapExtensions.cs,RgbaMakePixel,The following statement contains a magic number: return (uint)((alpha << 24) | (blue << 16) | (green << 8) | red);
Magic Number,SkiaSharpFormsDemos,BitmapExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\BitmapExtensions.cs,RgbaGetBytes,The following statement contains a magic number: green = (byte)(pixel >> 8);
Magic Number,SkiaSharpFormsDemos,BitmapExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\BitmapExtensions.cs,RgbaGetBytes,The following statement contains a magic number: blue = (byte)(pixel >> 16);
Magic Number,SkiaSharpFormsDemos,BitmapExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\BitmapExtensions.cs,RgbaGetBytes,The following statement contains a magic number: alpha = (byte)(pixel >> 24);
Magic Number,SkiaSharpFormsDemos,BitmapExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\BitmapExtensions.cs,BgraMakePixel,The following statement contains a magic number: return (uint)((alpha << 24) | (red << 16) | (green << 8) | blue);
Magic Number,SkiaSharpFormsDemos,BitmapExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\BitmapExtensions.cs,BgraMakePixel,The following statement contains a magic number: return (uint)((alpha << 24) | (red << 16) | (green << 8) | blue);
Magic Number,SkiaSharpFormsDemos,BitmapExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\BitmapExtensions.cs,BgraMakePixel,The following statement contains a magic number: return (uint)((alpha << 24) | (red << 16) | (green << 8) | blue);
Magic Number,SkiaSharpFormsDemos,BitmapExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\BitmapExtensions.cs,BgraGetBytes,The following statement contains a magic number: green = (byte)(pixel >> 8);
Magic Number,SkiaSharpFormsDemos,BitmapExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\BitmapExtensions.cs,BgraGetBytes,The following statement contains a magic number: red = (byte)(pixel >> 16);
Magic Number,SkiaSharpFormsDemos,BitmapExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\BitmapExtensions.cs,BgraGetBytes,The following statement contains a magic number: alpha = (byte)(pixel >> 24);
Magic Number,SkiaSharpFormsDemos,BitmapExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\BitmapExtensions.cs,CalculateDisplayRect,The following statement contains a magic number: switch (horizontal)              {                  case BitmapAlignment.Center:                      x = (dest.Width - bmpWidth) / 2;                      break;                    case BitmapAlignment.Start:                      break;                    case BitmapAlignment.End:                      x = dest.Width - bmpWidth;                      break;              }
Magic Number,SkiaSharpFormsDemos,BitmapExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\BitmapExtensions.cs,CalculateDisplayRect,The following statement contains a magic number: switch (vertical)              {                  case BitmapAlignment.Center:                      y = (dest.Height - bmpHeight) / 2;                      break;                    case BitmapAlignment.Start:                      break;                    case BitmapAlignment.End:                      y = dest.Height - bmpHeight;                      break;              }
Magic Number,SkiaSharpFormsDemos,MatrixDisplay,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\MatrixDisplay.cs,MeasureAndPaint,The following statement contains a magic number: string[] texts = new string[9];
Magic Number,SkiaSharpFormsDemos,MatrixDisplay,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\MatrixDisplay.cs,MeasureAndPaint,The following statement contains a magic number: SKRect[] bounds = new SKRect[9];
Magic Number,SkiaSharpFormsDemos,MatrixDisplay,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\MatrixDisplay.cs,MeasureAndPaint,The following statement contains a magic number: float[] widths = new float[3];
Magic Number,SkiaSharpFormsDemos,MatrixDisplay,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\MatrixDisplay.cs,MeasureAndPaint,The following statement contains a magic number: int row = i % 3;
Magic Number,SkiaSharpFormsDemos,MatrixDisplay,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\MatrixDisplay.cs,MeasureAndPaint,The following statement contains a magic number: int col = i / 3;
Magic Number,SkiaSharpFormsDemos,MatrixDisplay,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\MatrixDisplay.cs,MeasureAndPaint,The following statement contains a magic number: texts[i] = values[i].ToString(row == 2 ? "F0" : (col == 2 ? PerspectiveFormat : "F2"));
Magic Number,SkiaSharpFormsDemos,MatrixDisplay,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\MatrixDisplay.cs,MeasureAndPaint,The following statement contains a magic number: texts[i] = values[i].ToString(row == 2 ? "F0" : (col == 2 ? PerspectiveFormat : "F2"));
Magic Number,SkiaSharpFormsDemos,MatrixDisplay,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\MatrixDisplay.cs,MeasureAndPaint,The following statement contains a magic number: i < 9
Magic Number,SkiaSharpFormsDemos,MatrixDisplay,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\MatrixDisplay.cs,MeasureAndPaint,The following statement contains a magic number: float vertMarg = MatrixPaint.FontSpacing / 4;
Magic Number,SkiaSharpFormsDemos,MatrixDisplay,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\MatrixDisplay.cs,MeasureAndPaint,The following statement contains a magic number: float totalWidth = widths[0] + widths[1] + widths[2] + 2 * horzGap + 2 * horzMarg;
Magic Number,SkiaSharpFormsDemos,MatrixDisplay,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\MatrixDisplay.cs,MeasureAndPaint,The following statement contains a magic number: float totalWidth = widths[0] + widths[1] + widths[2] + 2 * horzGap + 2 * horzMarg;
Magic Number,SkiaSharpFormsDemos,MatrixDisplay,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\MatrixDisplay.cs,MeasureAndPaint,The following statement contains a magic number: float totalWidth = widths[0] + widths[1] + widths[2] + 2 * horzGap + 2 * horzMarg;
Magic Number,SkiaSharpFormsDemos,MatrixDisplay,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\MatrixDisplay.cs,MeasureAndPaint,The following statement contains a magic number: float totalHeight = 3 * MatrixPaint.FontSpacing + 2 * vertMarg;
Magic Number,SkiaSharpFormsDemos,MatrixDisplay,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\MatrixDisplay.cs,MeasureAndPaint,The following statement contains a magic number: float totalHeight = 3 * MatrixPaint.FontSpacing + 2 * vertMarg;
Magic Number,SkiaSharpFormsDemos,MatrixDisplay,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\MatrixDisplay.cs,MeasureAndPaint,The following statement contains a magic number: int row = i % 3;
Magic Number,SkiaSharpFormsDemos,MatrixDisplay,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\MatrixDisplay.cs,MeasureAndPaint,The following statement contains a magic number: int col = i / 3;
Magic Number,SkiaSharpFormsDemos,MatrixDisplay,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\MatrixDisplay.cs,MeasureAndPaint,The following statement contains a magic number: y += (MatrixPaint.FontSpacing - bounds[i].Height) / 2 - bounds[i].Top;
Magic Number,SkiaSharpFormsDemos,MatrixDisplay,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\MatrixDisplay.cs,MeasureAndPaint,The following statement contains a magic number: i < 9
Magic Number,SkiaSharpFormsDemos,MatrixDisplay,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\MatrixDisplay.cs,MeasureAndPaint,The following statement contains a magic number: canvas.DrawLine(location.X + horzMarg / 2' location.Y + vertMarg'                                   location.X + horzMarg / 2' location.Y + totalHeight - vertMarg' MatrixPaint);
Magic Number,SkiaSharpFormsDemos,MatrixDisplay,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\MatrixDisplay.cs,MeasureAndPaint,The following statement contains a magic number: canvas.DrawLine(location.X + horzMarg / 2' location.Y + vertMarg'                                   location.X + horzMarg / 2' location.Y + totalHeight - vertMarg' MatrixPaint);
Magic Number,SkiaSharpFormsDemos,MatrixDisplay,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\MatrixDisplay.cs,MeasureAndPaint,The following statement contains a magic number: canvas.DrawLine(location.X + totalWidth - horzMarg / 2' location.Y + vertMarg'                                   location.X + totalWidth - horzMarg / 2' location.Y + totalHeight - vertMarg' MatrixPaint);
Magic Number,SkiaSharpFormsDemos,MatrixDisplay,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\MatrixDisplay.cs,MeasureAndPaint,The following statement contains a magic number: canvas.DrawLine(location.X + totalWidth - horzMarg / 2' location.Y + vertMarg'                                   location.X + totalWidth - horzMarg / 2' location.Y + totalHeight - vertMarg' MatrixPaint);
Magic Number,SkiaSharpFormsDemos,TouchPoint,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\TouchPoint.cs,PointInCircle,The following statement contains a magic number: return (Math.Pow(pt.X - Center.X' 2) + Math.Pow(pt.Y - Center.Y' 2)) < (Radius * Radius);
Magic Number,SkiaSharpFormsDemos,TouchPoint,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\TouchPoint.cs,PointInCircle,The following statement contains a magic number: return (Math.Pow(pt.X - Center.X' 2) + Math.Pow(pt.Y - Center.Y' 2)) < (Radius * Radius);
Magic Number,SkiaSharpFormsDemos.Basics,BasicBitmapsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\BasicBitmapsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float x = (info.Width - webBitmap.Width) / 2;
Magic Number,SkiaSharpFormsDemos.Basics,BasicBitmapsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\BasicBitmapsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float y = (info.Height / 3 - webBitmap.Height) / 2;
Magic Number,SkiaSharpFormsDemos.Basics,BasicBitmapsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\BasicBitmapsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float y = (info.Height / 3 - webBitmap.Height) / 2;
Magic Number,SkiaSharpFormsDemos.Basics,BasicBitmapsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\BasicBitmapsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawBitmap(resourceBitmap'                       new SKRect(0' info.Height / 3' info.Width' 2 * info.Height / 3));
Magic Number,SkiaSharpFormsDemos.Basics,BasicBitmapsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\BasicBitmapsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawBitmap(resourceBitmap'                       new SKRect(0' info.Height / 3' info.Width' 2 * info.Height / 3));
Magic Number,SkiaSharpFormsDemos.Basics,BasicBitmapsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\BasicBitmapsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawBitmap(resourceBitmap'                       new SKRect(0' info.Height / 3' info.Width' 2 * info.Height / 3));
Magic Number,SkiaSharpFormsDemos.Basics,BasicBitmapsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\BasicBitmapsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float scale = Math.Min((float)info.Width / libraryBitmap.Width'                                         info.Height / 3f / libraryBitmap.Height);
Magic Number,SkiaSharpFormsDemos.Basics,BasicBitmapsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\BasicBitmapsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float left = (info.Width - scale * libraryBitmap.Width) / 2;
Magic Number,SkiaSharpFormsDemos.Basics,BasicBitmapsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\BasicBitmapsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float top = (info.Height / 3 - scale * libraryBitmap.Height) / 2;
Magic Number,SkiaSharpFormsDemos.Basics,BasicBitmapsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\BasicBitmapsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float top = (info.Height / 3 - scale * libraryBitmap.Height) / 2;
Magic Number,SkiaSharpFormsDemos.Basics,BasicBitmapsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\BasicBitmapsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: rect.Offset(0' 2 * info.Height / 3);
Magic Number,SkiaSharpFormsDemos.Basics,BasicBitmapsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\BasicBitmapsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: rect.Offset(0' 2 * info.Height / 3);
Magic Number,SkiaSharpFormsDemos.Basics,BitmapDissolvePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\BitmapDissolvePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float x = (info.Width - rect.Width) / 2;
Magic Number,SkiaSharpFormsDemos.Basics,BitmapDissolvePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\BitmapDissolvePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float y = (info.Height - rect.Height) / 2;
Magic Number,SkiaSharpFormsDemos.Basics,CodeMoreCodePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\CodeMoreCodePage.cs,OnAppearing,The following statement contains a magic number: Device.StartTimer(TimeSpan.FromMilliseconds(16)' OnTimerTick);
Magic Number,SkiaSharpFormsDemos.Basics,CodeMoreCodePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\CodeMoreCodePage.cs,OnTimerTick,The following statement contains a magic number: const int duration = 5;
Magic Number,SkiaSharpFormsDemos.Basics,CodeMoreCodePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\CodeMoreCodePage.cs,OnTimerTick,The following statement contains a magic number: transparency = 0.5 * (1 + Math.Sin(progress * 2 * Math.PI));
Magic Number,SkiaSharpFormsDemos.Basics,CodeMoreCodePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\CodeMoreCodePage.cs,OnTimerTick,The following statement contains a magic number: transparency = 0.5 * (1 + Math.Sin(progress * 2 * Math.PI));
Magic Number,SkiaSharpFormsDemos.Basics,CodeMoreCodePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\CodeMoreCodePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.TextSize = 100;
Magic Number,SkiaSharpFormsDemos.Basics,CodeMoreCodePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\CodeMoreCodePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.TextSize *= 0.9f * info.Width / textWidth;
Magic Number,SkiaSharpFormsDemos.Basics,CodeMoreCodePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\CodeMoreCodePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float xText = info.Width / 2 - textBounds.MidX;
Magic Number,SkiaSharpFormsDemos.Basics,CodeMoreCodePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\CodeMoreCodePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float yText = info.Height / 2 - textBounds.MidY;
Magic Number,SkiaSharpFormsDemos.Basics,CodeMoreCodePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\CodeMoreCodePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: xText = info.Width / 2 - textBounds.MidX;
Magic Number,SkiaSharpFormsDemos.Basics,CodeMoreCodePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\CodeMoreCodePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: yText = info.Height / 2 - textBounds.MidY;
Magic Number,SkiaSharpFormsDemos.Basics,ColorExplorePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\ColorExplorePage.xaml.cs,ColorExplorePage,The following statement contains a magic number: saturationSlider.Value = 100;
Magic Number,SkiaSharpFormsDemos.Basics,ColorExplorePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\ColorExplorePage.xaml.cs,ColorExplorePage,The following statement contains a magic number: lightnessSlider.Value = 50;
Magic Number,SkiaSharpFormsDemos.Basics,ColorExplorePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\ColorExplorePage.xaml.cs,ColorExplorePage,The following statement contains a magic number: valueSlider.Value = 100;
Magic Number,SkiaSharpFormsDemos.Basics,EllipseFillPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\EllipseFillPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float strokeWidth = 50;
Magic Number,SkiaSharpFormsDemos.Basics,EllipseFillPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\EllipseFillPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float xRadius = (info.Width - strokeWidth) / 2;
Magic Number,SkiaSharpFormsDemos.Basics,EllipseFillPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\EllipseFillPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float yRadius = (info.Height - strokeWidth) / 2;
Magic Number,SkiaSharpFormsDemos.Basics,EllipseFillPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\EllipseFillPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawOval(info.Width / 2' info.Height / 2' xRadius' yRadius' paint);
Magic Number,SkiaSharpFormsDemos.Basics,EllipseFillPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\EllipseFillPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawOval(info.Width / 2' info.Height / 2' xRadius' yRadius' paint);
Magic Number,SkiaSharpFormsDemos.Basics,ExpandingCirclesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\ExpandingCirclesPage.cs,OnAppearing,The following statement contains a magic number: Device.StartTimer(TimeSpan.FromMilliseconds(33)' () =>              {                  t = (float)(stopwatch.Elapsed.TotalMilliseconds % cycleTime / cycleTime);                  canvasView.InvalidateSurface();                    if (!pageIsActive)                  {                      stopwatch.Stop();                  }                  return pageIsActive;              });
Magic Number,SkiaSharpFormsDemos.Basics,ExpandingCirclesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\ExpandingCirclesPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKPoint center = new SKPoint(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Basics,ExpandingCirclesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\ExpandingCirclesPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKPoint center = new SKPoint(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Basics,ExpandingCirclesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\ExpandingCirclesPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float baseRadius = Math.Min(info.Width' info.Height) / 12;
Magic Number,SkiaSharpFormsDemos.Basics,ExpandingCirclesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\ExpandingCirclesPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.StrokeWidth = baseRadius / 2 * (circle == 0 ? t : 1);
Magic Number,SkiaSharpFormsDemos.Basics,ExpandingCirclesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\ExpandingCirclesPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.Color = new SKColor(0' 0' 255'                      (byte)(255 * (circle == 4 ? (1 - t) : 1)));
Magic Number,SkiaSharpFormsDemos.Basics,ExpandingCirclesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\ExpandingCirclesPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.Color = new SKColor(0' 0' 255'                      (byte)(255 * (circle == 4 ? (1 - t) : 1)));
Magic Number,SkiaSharpFormsDemos.Basics,ExpandingCirclesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\ExpandingCirclesPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.Color = new SKColor(0' 0' 255'                      (byte)(255 * (circle == 4 ? (1 - t) : 1)));
Magic Number,SkiaSharpFormsDemos.Basics,ExpandingCirclesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\ExpandingCirclesPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: circle < 5
Magic Number,SkiaSharpFormsDemos.Basics,FramedTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\FramedTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: textPaint.TextSize = 0.9f * info.Width * textPaint.TextSize / textWidth;
Magic Number,SkiaSharpFormsDemos.Basics,FramedTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\FramedTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float xText = info.Width / 2 - textBounds.MidX;
Magic Number,SkiaSharpFormsDemos.Basics,FramedTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\FramedTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float yText = info.Height / 2 - textBounds.MidY;
Magic Number,SkiaSharpFormsDemos.Basics,FramedTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\FramedTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: frameRect.Inflate(10' 10);
Magic Number,SkiaSharpFormsDemos.Basics,FramedTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\FramedTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: frameRect.Inflate(10' 10);
Magic Number,SkiaSharpFormsDemos.Basics,FramedTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\FramedTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKPaint framePaint = new SKPaint              {                  Style = SKPaintStyle.Stroke'                  StrokeWidth = 5'                  Color = SKColors.Blue              };
Magic Number,SkiaSharpFormsDemos.Basics,FramedTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\FramedTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawRoundRect(frameRect' 20' 20' framePaint);
Magic Number,SkiaSharpFormsDemos.Basics,FramedTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\FramedTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawRoundRect(frameRect' 20' 20' framePaint);
Magic Number,SkiaSharpFormsDemos.Basics,FramedTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\FramedTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: frameRect.Inflate(10' 10);
Magic Number,SkiaSharpFormsDemos.Basics,FramedTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\FramedTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: frameRect.Inflate(10' 10);
Magic Number,SkiaSharpFormsDemos.Basics,FramedTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\FramedTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawRoundRect(frameRect' 30' 30' framePaint);
Magic Number,SkiaSharpFormsDemos.Basics,FramedTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\FramedTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawRoundRect(frameRect' 30' 30' framePaint);
Magic Number,SkiaSharpFormsDemos.Basics,OutlinedTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\OutlinedTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: textPaint.TextSize = 0.95f * info.Width * textPaint.TextSize / textWidth;
Magic Number,SkiaSharpFormsDemos.Basics,OutlinedTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\OutlinedTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float xText = info.Width / 2 - textBounds.MidX;
Magic Number,SkiaSharpFormsDemos.Basics,OutlinedTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\OutlinedTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float yText = info.Height / 2 - textBounds.MidY;
Magic Number,SkiaSharpFormsDemos.Basics,PulsatingEllipsePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\PulsatingEllipsePage.xaml.cs,AnimationLoop,The following statement contains a magic number: scale = (1 + (float)Math.Sin(2 * Math.PI * t)) / 2;
Magic Number,SkiaSharpFormsDemos.Basics,PulsatingEllipsePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\PulsatingEllipsePage.xaml.cs,AnimationLoop,The following statement contains a magic number: scale = (1 + (float)Math.Sin(2 * Math.PI * t)) / 2;
Magic Number,SkiaSharpFormsDemos.Basics,PulsatingEllipsePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\PulsatingEllipsePage.xaml.cs,AnimationLoop,The following statement contains a magic number: await Task.Delay(TimeSpan.FromSeconds(1.0 / 30));
Magic Number,SkiaSharpFormsDemos.Basics,PulsatingEllipsePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\PulsatingEllipsePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float maxRadius = 0.75f * Math.Min(info.Width' info.Height) / 2;
Magic Number,SkiaSharpFormsDemos.Basics,PulsatingEllipsePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\PulsatingEllipsePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float maxRadius = 0.75f * Math.Min(info.Width' info.Height) / 2;
Magic Number,SkiaSharpFormsDemos.Basics,PulsatingEllipsePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\PulsatingEllipsePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float minRadius = 0.25f * maxRadius;
Magic Number,SkiaSharpFormsDemos.Basics,PulsatingEllipsePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\PulsatingEllipsePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.StrokeWidth = 50;
Magic Number,SkiaSharpFormsDemos.Basics,PulsatingEllipsePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\PulsatingEllipsePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawOval(info.Width / 2' info.Height / 2' xRadius' yRadius' paint);
Magic Number,SkiaSharpFormsDemos.Basics,PulsatingEllipsePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\PulsatingEllipsePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawOval(info.Width / 2' info.Height / 2' xRadius' yRadius' paint);
Magic Number,SkiaSharpFormsDemos.Basics,PulsatingEllipsePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\PulsatingEllipsePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawOval(info.Width / 2' info.Height / 2' xRadius' yRadius' paint);
Magic Number,SkiaSharpFormsDemos.Basics,PulsatingEllipsePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\PulsatingEllipsePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawOval(info.Width / 2' info.Height / 2' xRadius' yRadius' paint);
Magic Number,SkiaSharpFormsDemos.Basics,SimpleCirclePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\SimpleCirclePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKPaint paint = new SKPaint              {                  Style = SKPaintStyle.Stroke'                  Color = Color.Red.ToSKColor()'                  StrokeWidth = 25              };
Magic Number,SkiaSharpFormsDemos.Basics,SimpleCirclePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\SimpleCirclePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawCircle(info.Width / 2' info.Height / 2' 100' paint);
Magic Number,SkiaSharpFormsDemos.Basics,SimpleCirclePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\SimpleCirclePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawCircle(info.Width / 2' info.Height / 2' 100' paint);
Magic Number,SkiaSharpFormsDemos.Basics,SimpleCirclePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\SimpleCirclePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawCircle(info.Width / 2' info.Height / 2' 100' paint);
Magic Number,SkiaSharpFormsDemos.Basics,SimpleCirclePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\SimpleCirclePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawCircle(info.Width / 2' info.Height / 2' 100' paint);
Magic Number,SkiaSharpFormsDemos.Basics,SimpleCirclePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\SimpleCirclePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawCircle(info.Width / 2' info.Height / 2' 100' paint);
Magic Number,SkiaSharpFormsDemos.Basics,SimpleCirclePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\SimpleCirclePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawCircle(info.Width / 2' info.Height / 2' 100' paint);
Magic Number,SkiaSharpFormsDemos.Basics,SurfaceSizePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\SurfaceSizePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKPaint paint = new SKPaint              {                  Color = SKColors.Black'                  TextSize = 40              };
Magic Number,SkiaSharpFormsDemos.Basics,SurfaceSizePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\SurfaceSizePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float x = 20;
Magic Number,SkiaSharpFormsDemos.Basics,SurfaceSizePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\SurfaceSizePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float indent = 100;
Magic Number,SkiaSharpFormsDemos.Basics,SurfaceSizePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\SurfaceSizePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: y += fontSpacing * 2;
Magic Number,SkiaSharpFormsDemos.Basics,SurfaceSizePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\SurfaceSizePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: y += fontSpacing * 2;
Magic Number,SkiaSharpFormsDemos.Basics,TapToggleFillPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\TapToggleFillPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKPaint paint = new SKPaint              {                  Style = SKPaintStyle.Stroke'                  Color = Color.Red.ToSKColor()'                  StrokeWidth = 50              };
Magic Number,SkiaSharpFormsDemos.Basics,TapToggleFillPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\TapToggleFillPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawCircle(info.Width / 2' info.Height / 2' 100' paint);
Magic Number,SkiaSharpFormsDemos.Basics,TapToggleFillPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\TapToggleFillPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawCircle(info.Width / 2' info.Height / 2' 100' paint);
Magic Number,SkiaSharpFormsDemos.Basics,TapToggleFillPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\TapToggleFillPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawCircle(info.Width / 2' info.Height / 2' 100' paint);
Magic Number,SkiaSharpFormsDemos.Basics,TapToggleFillPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\TapToggleFillPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawCircle(info.Width / 2' info.Height / 2' 100' paint);
Magic Number,SkiaSharpFormsDemos.Basics,TapToggleFillPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\TapToggleFillPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawCircle(info.Width / 2' info.Height / 2' 100' paint);
Magic Number,SkiaSharpFormsDemos.Basics,TapToggleFillPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Basics\TapToggleFillPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawCircle(info.Width / 2' info.Height / 2' 100' paint);
Magic Number,SkiaSharpFormsDemos.Bitmaps,AnimatedGifPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\AnimatedGifPage.xaml.cs,OnAppearing,The following statement contains a magic number: Device.StartTimer(TimeSpan.FromMilliseconds(16)' OnTimerTick);
Magic Number,SkiaSharpFormsDemos.Bitmaps,BitmapFlipperPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\BitmapFlipperPage.xaml.cs,OnFlipVerticalClicked,The following statement contains a magic number: canvas.Scale(-1' 1' bitmap.Width / 2' 0);
Magic Number,SkiaSharpFormsDemos.Bitmaps,BitmapFlipperPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\BitmapFlipperPage.xaml.cs,OnFlipHorizontalClicked,The following statement contains a magic number: canvas.Scale(1' -1' 0' bitmap.Height / 2);
Magic Number,SkiaSharpFormsDemos.Bitmaps,BitmapRotatorPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\BitmapRotatorPage.xaml.cs,OnSliderValueChanged,The following statement contains a magic number: double radians = Math.PI * angle / 180;
Magic Number,SkiaSharpFormsDemos.Bitmaps,BitmapRotatorPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\BitmapRotatorPage.xaml.cs,OnSliderValueChanged,The following statement contains a magic number: canvas.Translate(rotatedWidth / 2' rotatedHeight / 2);
Magic Number,SkiaSharpFormsDemos.Bitmaps,BitmapRotatorPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\BitmapRotatorPage.xaml.cs,OnSliderValueChanged,The following statement contains a magic number: canvas.Translate(rotatedWidth / 2' rotatedHeight / 2);
Magic Number,SkiaSharpFormsDemos.Bitmaps,BitmapRotatorPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\BitmapRotatorPage.xaml.cs,OnSliderValueChanged,The following statement contains a magic number: canvas.Translate(-originalWidth / 2' -originalHeight / 2);
Magic Number,SkiaSharpFormsDemos.Bitmaps,BitmapRotatorPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\BitmapRotatorPage.xaml.cs,OnSliderValueChanged,The following statement contains a magic number: canvas.Translate(-originalWidth / 2' -originalHeight / 2);
Magic Number,SkiaSharpFormsDemos.Bitmaps,ColorAdjustmentPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\ColorAdjustmentPage.xaml.cs,OnSliderValueChanged,The following statement contains a magic number: float saturationAdjust = (float)Math.Pow(2' saturationSlider.Value);
Magic Number,SkiaSharpFormsDemos.Bitmaps,ColorAdjustmentPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\ColorAdjustmentPage.xaml.cs,OnSliderValueChanged,The following statement contains a magic number: float luminosityAdjust = (float)Math.Pow(2' luminositySlider.Value);
Magic Number,SkiaSharpFormsDemos.Bitmaps,ColorAdjustmentPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\ColorAdjustmentPage.xaml.cs,TransferPixels,The following statement contains a magic number: hue = (hue + hueAdjust) % 360;
Magic Number,SkiaSharpFormsDemos.Bitmaps,ColorAdjustmentPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\ColorAdjustmentPage.xaml.cs,TransferPixels,The following statement contains a magic number: saturation = Math.Max(0' Math.Min(100' saturationAdjust * saturation));
Magic Number,SkiaSharpFormsDemos.Bitmaps,ColorAdjustmentPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\ColorAdjustmentPage.xaml.cs,TransferPixels,The following statement contains a magic number: luminosity = Math.Max(0' Math.Min(100' luminosityAdjust * luminosity));
Magic Number,SkiaSharpFormsDemos.Bitmaps,CroppingRectangle,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\CroppingRectangle.cs,CroppingRectangle,The following statement contains a magic number: Rect = new SKRect(0.9f * maxRect.Left + 0.1f * maxRect.Right'                                0.9f * maxRect.Top + 0.1f * maxRect.Bottom'                                0.1f * maxRect.Left + 0.9f * maxRect.Right'                                0.1f * maxRect.Top + 0.9f * maxRect.Bottom);
Magic Number,SkiaSharpFormsDemos.Bitmaps,CroppingRectangle,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\CroppingRectangle.cs,CroppingRectangle,The following statement contains a magic number: Rect = new SKRect(0.9f * maxRect.Left + 0.1f * maxRect.Right'                                0.9f * maxRect.Top + 0.1f * maxRect.Bottom'                                0.1f * maxRect.Left + 0.9f * maxRect.Right'                                0.1f * maxRect.Top + 0.9f * maxRect.Bottom);
Magic Number,SkiaSharpFormsDemos.Bitmaps,CroppingRectangle,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\CroppingRectangle.cs,CroppingRectangle,The following statement contains a magic number: Rect = new SKRect(0.9f * maxRect.Left + 0.1f * maxRect.Right'                                0.9f * maxRect.Top + 0.1f * maxRect.Bottom'                                0.1f * maxRect.Left + 0.9f * maxRect.Right'                                0.1f * maxRect.Top + 0.9f * maxRect.Bottom);
Magic Number,SkiaSharpFormsDemos.Bitmaps,CroppingRectangle,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\CroppingRectangle.cs,CroppingRectangle,The following statement contains a magic number: Rect = new SKRect(0.9f * maxRect.Left + 0.1f * maxRect.Right'                                0.9f * maxRect.Top + 0.1f * maxRect.Bottom'                                0.1f * maxRect.Left + 0.9f * maxRect.Right'                                0.1f * maxRect.Top + 0.9f * maxRect.Bottom);
Magic Number,SkiaSharpFormsDemos.Bitmaps,CroppingRectangle,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\CroppingRectangle.cs,CroppingRectangle,The following statement contains a magic number: Rect = new SKRect(0.9f * maxRect.Left + 0.1f * maxRect.Right'                                0.9f * maxRect.Top + 0.1f * maxRect.Bottom'                                0.1f * maxRect.Left + 0.9f * maxRect.Right'                                0.1f * maxRect.Top + 0.9f * maxRect.Bottom);
Magic Number,SkiaSharpFormsDemos.Bitmaps,CroppingRectangle,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\CroppingRectangle.cs,CroppingRectangle,The following statement contains a magic number: Rect = new SKRect(0.9f * maxRect.Left + 0.1f * maxRect.Right'                                0.9f * maxRect.Top + 0.1f * maxRect.Bottom'                                0.1f * maxRect.Left + 0.9f * maxRect.Right'                                0.1f * maxRect.Top + 0.9f * maxRect.Bottom);
Magic Number,SkiaSharpFormsDemos.Bitmaps,CroppingRectangle,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\CroppingRectangle.cs,CroppingRectangle,The following statement contains a magic number: Rect = new SKRect(0.9f * maxRect.Left + 0.1f * maxRect.Right'                                0.9f * maxRect.Top + 0.1f * maxRect.Bottom'                                0.1f * maxRect.Left + 0.9f * maxRect.Right'                                0.1f * maxRect.Top + 0.9f * maxRect.Bottom);
Magic Number,SkiaSharpFormsDemos.Bitmaps,CroppingRectangle,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\CroppingRectangle.cs,CroppingRectangle,The following statement contains a magic number: Rect = new SKRect(0.9f * maxRect.Left + 0.1f * maxRect.Right'                                0.9f * maxRect.Top + 0.1f * maxRect.Bottom'                                0.1f * maxRect.Left + 0.9f * maxRect.Right'                                0.1f * maxRect.Top + 0.9f * maxRect.Bottom);
Magic Number,SkiaSharpFormsDemos.Bitmaps,CroppingRectangle,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\CroppingRectangle.cs,CroppingRectangle,The following statement contains a magic number: rect.Left = (maxRect.Width - width) / 2;
Magic Number,SkiaSharpFormsDemos.Bitmaps,CroppingRectangle,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\CroppingRectangle.cs,MoveCorner,The following statement contains a magic number: switch (index)              {                  case 0: // upper-left                      rect.Left = Math.Min(Math.Max(point.X' maxRect.Left)' rect.Right - MINIMUM);                      rect.Top = Math.Min(Math.Max(point.Y' maxRect.Top)' rect.Bottom - MINIMUM);                      break;                    case 1: // upper-right                      rect.Right = Math.Max(Math.Min(point.X' maxRect.Right)' rect.Left + MINIMUM);                      rect.Top = Math.Min(Math.Max(point.Y' maxRect.Top)' rect.Bottom - MINIMUM);                      break;                    case 2: // lower-right                      rect.Right = Math.Max(Math.Min(point.X' maxRect.Right)' rect.Left + MINIMUM);                      rect.Bottom = Math.Max(Math.Min(point.Y' maxRect.Bottom)' rect.Top + MINIMUM);                      break;                    case 3: // lower-left                      rect.Left = Math.Min(Math.Max(point.X' maxRect.Left)' rect.Right - MINIMUM);                      rect.Bottom = Math.Max(Math.Min(point.Y' maxRect.Bottom)' rect.Top + MINIMUM);                      break;              }
Magic Number,SkiaSharpFormsDemos.Bitmaps,CroppingRectangle,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\CroppingRectangle.cs,MoveCorner,The following statement contains a magic number: switch (index)              {                  case 0: // upper-left                      rect.Left = Math.Min(Math.Max(point.X' maxRect.Left)' rect.Right - MINIMUM);                      rect.Top = Math.Min(Math.Max(point.Y' maxRect.Top)' rect.Bottom - MINIMUM);                      break;                    case 1: // upper-right                      rect.Right = Math.Max(Math.Min(point.X' maxRect.Right)' rect.Left + MINIMUM);                      rect.Top = Math.Min(Math.Max(point.Y' maxRect.Top)' rect.Bottom - MINIMUM);                      break;                    case 2: // lower-right                      rect.Right = Math.Max(Math.Min(point.X' maxRect.Right)' rect.Left + MINIMUM);                      rect.Bottom = Math.Max(Math.Min(point.Y' maxRect.Bottom)' rect.Top + MINIMUM);                      break;                    case 3: // lower-left                      rect.Left = Math.Min(Math.Max(point.X' maxRect.Left)' rect.Right - MINIMUM);                      rect.Bottom = Math.Max(Math.Min(point.Y' maxRect.Bottom)' rect.Top + MINIMUM);                      break;              }
Magic Number,SkiaSharpFormsDemos.Bitmaps,CroppingRectangle,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\CroppingRectangle.cs,MoveCorner,The following statement contains a magic number: switch (index)                      {                          case 0:                          case 3: rect.Left = rect.Right - width; break;                          case 1:                          case 2: rect.Right = rect.Left + width; break;                      }
Magic Number,SkiaSharpFormsDemos.Bitmaps,CroppingRectangle,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\CroppingRectangle.cs,MoveCorner,The following statement contains a magic number: switch (index)                      {                          case 0:                          case 3: rect.Left = rect.Right - width; break;                          case 1:                          case 2: rect.Right = rect.Left + width; break;                      }
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,GradientBitmapPage,The following statement contains a magic number: bitmaps[2] = FillBitmapBytePtr(out descriptions[2]' out elapsedTimes[2]);
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,GradientBitmapPage,The following statement contains a magic number: bitmaps[2] = FillBitmapBytePtr(out descriptions[2]' out elapsedTimes[2]);
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,GradientBitmapPage,The following statement contains a magic number: bitmaps[2] = FillBitmapBytePtr(out descriptions[2]' out elapsedTimes[2]);
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,GradientBitmapPage,The following statement contains a magic number: bitmaps[4] = FillBitmapUintPtr(out descriptions[4]' out elapsedTimes[4]);
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,GradientBitmapPage,The following statement contains a magic number: bitmaps[4] = FillBitmapUintPtr(out descriptions[4]' out elapsedTimes[4]);
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,GradientBitmapPage,The following statement contains a magic number: bitmaps[4] = FillBitmapUintPtr(out descriptions[4]' out elapsedTimes[4]);
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,GradientBitmapPage,The following statement contains a magic number: bitmaps[6] = FillBitmapUintPtrColor(out descriptions[6]' out elapsedTimes[6]);
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,GradientBitmapPage,The following statement contains a magic number: bitmaps[6] = FillBitmapUintPtrColor(out descriptions[6]' out elapsedTimes[6]);
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,GradientBitmapPage,The following statement contains a magic number: bitmaps[6] = FillBitmapUintPtrColor(out descriptions[6]' out elapsedTimes[6]);
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,GradientBitmapPage,The following statement contains a magic number: bitmaps[3] = FillBitmapByteBuffer(out descriptions[3]' out elapsedTimes[3]);
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,GradientBitmapPage,The following statement contains a magic number: bitmaps[3] = FillBitmapByteBuffer(out descriptions[3]' out elapsedTimes[3]);
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,GradientBitmapPage,The following statement contains a magic number: bitmaps[3] = FillBitmapByteBuffer(out descriptions[3]' out elapsedTimes[3]);
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,GradientBitmapPage,The following statement contains a magic number: bitmaps[5] = FillBitmapUintBuffer(out descriptions[5]' out elapsedTimes[5]);
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,GradientBitmapPage,The following statement contains a magic number: bitmaps[5] = FillBitmapUintBuffer(out descriptions[5]' out elapsedTimes[5]);
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,GradientBitmapPage,The following statement contains a magic number: bitmaps[5] = FillBitmapUintBuffer(out descriptions[5]' out elapsedTimes[5]);
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,GradientBitmapPage,The following statement contains a magic number: bitmaps[7] = FillBitmapUintBufferColor(out descriptions[7]' out elapsedTimes[7]);
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,GradientBitmapPage,The following statement contains a magic number: bitmaps[7] = FillBitmapUintBufferColor(out descriptions[7]' out elapsedTimes[7]);
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,GradientBitmapPage,The following statement contains a magic number: bitmaps[7] = FillBitmapUintBufferColor(out descriptions[7]' out elapsedTimes[7]);
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,FillBitmapSetPixel,The following statement contains a magic number: SKBitmap bitmap = new SKBitmap(256' 256);
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,FillBitmapSetPixel,The following statement contains a magic number: SKBitmap bitmap = new SKBitmap(256' 256);
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,FillBitmapSetPixel,The following statement contains a magic number: col < 256
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,FillBitmapPixelsProp,The following statement contains a magic number: SKBitmap bitmap = new SKBitmap(256' 256);
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,FillBitmapPixelsProp,The following statement contains a magic number: SKBitmap bitmap = new SKBitmap(256' 256);
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,FillBitmapPixelsProp,The following statement contains a magic number: SKColor[] pixels = new SKColor[256 * 256];
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,FillBitmapPixelsProp,The following statement contains a magic number: SKColor[] pixels = new SKColor[256 * 256];
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,FillBitmapPixelsProp,The following statement contains a magic number: pixels[256 * row + col] = new SKColor((byte)col' 0' (byte)row);
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,FillBitmapPixelsProp,The following statement contains a magic number: col < 256
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,FillBitmapBytePtr,The following statement contains a magic number: SKBitmap bitmap = new SKBitmap(256' 256);
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,FillBitmapBytePtr,The following statement contains a magic number: SKBitmap bitmap = new SKBitmap(256' 256);
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,FillBitmapBytePtr,The following statement contains a magic number: row < 256
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,FillBitmapUintPtr,The following statement contains a magic number: SKBitmap bitmap = new SKBitmap(256' 256);
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,FillBitmapUintPtr,The following statement contains a magic number: SKBitmap bitmap = new SKBitmap(256' 256);
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,FillBitmapUintPtr,The following statement contains a magic number: row < 256
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,FillBitmapUintPtrColor,The following statement contains a magic number: SKBitmap bitmap = new SKBitmap(256' 256);
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,FillBitmapUintPtrColor,The following statement contains a magic number: SKBitmap bitmap = new SKBitmap(256' 256);
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,FillBitmapUintPtrColor,The following statement contains a magic number: row < 256
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,FillBitmapByteBuffer,The following statement contains a magic number: SKBitmap bitmap = new SKBitmap(256' 256);
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,FillBitmapByteBuffer,The following statement contains a magic number: SKBitmap bitmap = new SKBitmap(256' 256);
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,FillBitmapByteBuffer,The following statement contains a magic number: byte[''] buffer = new byte[256' 256' 4];
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,FillBitmapByteBuffer,The following statement contains a magic number: byte[''] buffer = new byte[256' 256' 4];
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,FillBitmapByteBuffer,The following statement contains a magic number: byte[''] buffer = new byte[256' 256' 4];
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,FillBitmapByteBuffer,The following statement contains a magic number: buffer[row' col' 2] = (byte)row;
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,FillBitmapByteBuffer,The following statement contains a magic number: buffer[row' col' 3] = 0xFF;
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,FillBitmapByteBuffer,The following statement contains a magic number: col < 256
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,FillBitmapUintBuffer,The following statement contains a magic number: SKBitmap bitmap = new SKBitmap(256' 256);
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,FillBitmapUintBuffer,The following statement contains a magic number: SKBitmap bitmap = new SKBitmap(256' 256);
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,FillBitmapUintBuffer,The following statement contains a magic number: uint['] buffer = new uint[256' 256];
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,FillBitmapUintBuffer,The following statement contains a magic number: uint['] buffer = new uint[256' 256];
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,FillBitmapUintBuffer,The following statement contains a magic number: col < 256
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,FillBitmapUintBufferColor,The following statement contains a magic number: SKBitmap bitmap = new SKBitmap(256' 256);
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,FillBitmapUintBufferColor,The following statement contains a magic number: SKBitmap bitmap = new SKBitmap(256' 256);
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,FillBitmapUintBufferColor,The following statement contains a magic number: uint['] buffer = new uint[256' 256];
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,FillBitmapUintBufferColor,The following statement contains a magic number: uint['] buffer = new uint[256' 256];
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,FillBitmapUintBufferColor,The following statement contains a magic number: col < 256
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: Display(canvas' 0' new SKRect(0' 0' width / 2' height / 4));
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: Display(canvas' 0' new SKRect(0' 0' width / 2' height / 4));
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: Display(canvas' 1' new SKRect(width / 2' 0' width' height / 4));
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: Display(canvas' 1' new SKRect(width / 2' 0' width' height / 4));
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: Display(canvas' 2' new SKRect(0' height / 4' width / 2' 2 * height / 4));
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: Display(canvas' 2' new SKRect(0' height / 4' width / 2' 2 * height / 4));
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: Display(canvas' 2' new SKRect(0' height / 4' width / 2' 2 * height / 4));
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: Display(canvas' 2' new SKRect(0' height / 4' width / 2' 2 * height / 4));
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: Display(canvas' 2' new SKRect(0' height / 4' width / 2' 2 * height / 4));
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: Display(canvas' 3' new SKRect(width / 2' height / 4' width' 2 * height / 4));
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: Display(canvas' 3' new SKRect(width / 2' height / 4' width' 2 * height / 4));
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: Display(canvas' 3' new SKRect(width / 2' height / 4' width' 2 * height / 4));
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: Display(canvas' 3' new SKRect(width / 2' height / 4' width' 2 * height / 4));
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: Display(canvas' 3' new SKRect(width / 2' height / 4' width' 2 * height / 4));
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: Display(canvas' 4' new SKRect(0' 2 * height / 4' width / 2' 3 * height / 4));
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: Display(canvas' 4' new SKRect(0' 2 * height / 4' width / 2' 3 * height / 4));
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: Display(canvas' 4' new SKRect(0' 2 * height / 4' width / 2' 3 * height / 4));
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: Display(canvas' 4' new SKRect(0' 2 * height / 4' width / 2' 3 * height / 4));
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: Display(canvas' 4' new SKRect(0' 2 * height / 4' width / 2' 3 * height / 4));
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: Display(canvas' 4' new SKRect(0' 2 * height / 4' width / 2' 3 * height / 4));
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: Display(canvas' 5' new SKRect(width / 2' 2 * height / 4' width' 3 * height / 4));
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: Display(canvas' 5' new SKRect(width / 2' 2 * height / 4' width' 3 * height / 4));
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: Display(canvas' 5' new SKRect(width / 2' 2 * height / 4' width' 3 * height / 4));
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: Display(canvas' 5' new SKRect(width / 2' 2 * height / 4' width' 3 * height / 4));
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: Display(canvas' 5' new SKRect(width / 2' 2 * height / 4' width' 3 * height / 4));
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: Display(canvas' 5' new SKRect(width / 2' 2 * height / 4' width' 3 * height / 4));
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: Display(canvas' 6' new SKRect(0' 3 * height / 4' width / 2' height));
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: Display(canvas' 6' new SKRect(0' 3 * height / 4' width / 2' height));
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: Display(canvas' 6' new SKRect(0' 3 * height / 4' width / 2' height));
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: Display(canvas' 6' new SKRect(0' 3 * height / 4' width / 2' height));
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: Display(canvas' 7' new SKRect(width / 2' 3 * height / 4' width' height));
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: Display(canvas' 7' new SKRect(width / 2' 3 * height / 4' width' height));
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: Display(canvas' 7' new SKRect(width / 2' 3 * height / 4' width' height));
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: Display(canvas' 7' new SKRect(width / 2' 3 * height / 4' width' height));
Magic Number,SkiaSharpFormsDemos.Bitmaps,GradientBitmapPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\GradientBitmapPage.cs,Display,The following statement contains a magic number: textPaint.TextSize = (float)(12 * canvasView.CanvasSize.Width / canvasView.Width);
Magic Number,SkiaSharpFormsDemos.Bitmaps,LatticeDisplayPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\LatticeDisplayPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: lattice.XDivs = new int[] { 100' 200' 400 };
Magic Number,SkiaSharpFormsDemos.Bitmaps,LatticeDisplayPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\LatticeDisplayPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: lattice.XDivs = new int[] { 100' 200' 400 };
Magic Number,SkiaSharpFormsDemos.Bitmaps,LatticeDisplayPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\LatticeDisplayPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: lattice.XDivs = new int[] { 100' 200' 400 };
Magic Number,SkiaSharpFormsDemos.Bitmaps,LatticeDisplayPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\LatticeDisplayPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: lattice.YDivs = new int[] { 100' 300' 400 };
Magic Number,SkiaSharpFormsDemos.Bitmaps,LatticeDisplayPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\LatticeDisplayPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: lattice.YDivs = new int[] { 100' 300' 400 };
Magic Number,SkiaSharpFormsDemos.Bitmaps,LatticeDisplayPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\LatticeDisplayPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: lattice.YDivs = new int[] { 100' 300' 400 };
Magic Number,SkiaSharpFormsDemos.Bitmaps,LatticeNinePatchPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\LatticeNinePatchPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: lattice.XDivs = new int[] { 100' 400 };
Magic Number,SkiaSharpFormsDemos.Bitmaps,LatticeNinePatchPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\LatticeNinePatchPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: lattice.XDivs = new int[] { 100' 400 };
Magic Number,SkiaSharpFormsDemos.Bitmaps,LatticeNinePatchPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\LatticeNinePatchPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: lattice.YDivs = new int[] { 100' 400 };
Magic Number,SkiaSharpFormsDemos.Bitmaps,LatticeNinePatchPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\LatticeNinePatchPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: lattice.YDivs = new int[] { 100' 400 };
Magic Number,SkiaSharpFormsDemos.Bitmaps,LatticeNinePatchPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\LatticeNinePatchPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: lattice.Flags = new SKLatticeFlags[9];
Magic Number,SkiaSharpFormsDemos.Bitmaps,MonkeyMoustachePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\MonkeyMoustachePage.cs,MonkeyMoustachePage,The following statement contains a magic number: paint.StrokeWidth = 24;
Magic Number,SkiaSharpFormsDemos.Bitmaps,MonkeyMoustachePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\MonkeyMoustachePage.cs,MonkeyMoustachePage,The following statement contains a magic number: path.MoveTo(380' 390);
Magic Number,SkiaSharpFormsDemos.Bitmaps,MonkeyMoustachePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\MonkeyMoustachePage.cs,MonkeyMoustachePage,The following statement contains a magic number: path.MoveTo(380' 390);
Magic Number,SkiaSharpFormsDemos.Bitmaps,MonkeyMoustachePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\MonkeyMoustachePage.cs,MonkeyMoustachePage,The following statement contains a magic number: path.CubicTo(560' 390' 560' 280' 500' 280);
Magic Number,SkiaSharpFormsDemos.Bitmaps,MonkeyMoustachePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\MonkeyMoustachePage.cs,MonkeyMoustachePage,The following statement contains a magic number: path.CubicTo(560' 390' 560' 280' 500' 280);
Magic Number,SkiaSharpFormsDemos.Bitmaps,MonkeyMoustachePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\MonkeyMoustachePage.cs,MonkeyMoustachePage,The following statement contains a magic number: path.CubicTo(560' 390' 560' 280' 500' 280);
Magic Number,SkiaSharpFormsDemos.Bitmaps,MonkeyMoustachePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\MonkeyMoustachePage.cs,MonkeyMoustachePage,The following statement contains a magic number: path.CubicTo(560' 390' 560' 280' 500' 280);
Magic Number,SkiaSharpFormsDemos.Bitmaps,MonkeyMoustachePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\MonkeyMoustachePage.cs,MonkeyMoustachePage,The following statement contains a magic number: path.CubicTo(560' 390' 560' 280' 500' 280);
Magic Number,SkiaSharpFormsDemos.Bitmaps,MonkeyMoustachePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\MonkeyMoustachePage.cs,MonkeyMoustachePage,The following statement contains a magic number: path.CubicTo(560' 390' 560' 280' 500' 280);
Magic Number,SkiaSharpFormsDemos.Bitmaps,MonkeyMoustachePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\MonkeyMoustachePage.cs,MonkeyMoustachePage,The following statement contains a magic number: path.MoveTo(320' 390);
Magic Number,SkiaSharpFormsDemos.Bitmaps,MonkeyMoustachePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\MonkeyMoustachePage.cs,MonkeyMoustachePage,The following statement contains a magic number: path.MoveTo(320' 390);
Magic Number,SkiaSharpFormsDemos.Bitmaps,MonkeyMoustachePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\MonkeyMoustachePage.cs,MonkeyMoustachePage,The following statement contains a magic number: path.CubicTo(140' 390' 140' 280' 200' 280);
Magic Number,SkiaSharpFormsDemos.Bitmaps,MonkeyMoustachePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\MonkeyMoustachePage.cs,MonkeyMoustachePage,The following statement contains a magic number: path.CubicTo(140' 390' 140' 280' 200' 280);
Magic Number,SkiaSharpFormsDemos.Bitmaps,MonkeyMoustachePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\MonkeyMoustachePage.cs,MonkeyMoustachePage,The following statement contains a magic number: path.CubicTo(140' 390' 140' 280' 200' 280);
Magic Number,SkiaSharpFormsDemos.Bitmaps,MonkeyMoustachePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\MonkeyMoustachePage.cs,MonkeyMoustachePage,The following statement contains a magic number: path.CubicTo(140' 390' 140' 280' 200' 280);
Magic Number,SkiaSharpFormsDemos.Bitmaps,MonkeyMoustachePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\MonkeyMoustachePage.cs,MonkeyMoustachePage,The following statement contains a magic number: path.CubicTo(140' 390' 140' 280' 200' 280);
Magic Number,SkiaSharpFormsDemos.Bitmaps,MonkeyMoustachePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\MonkeyMoustachePage.cs,MonkeyMoustachePage,The following statement contains a magic number: path.CubicTo(140' 390' 140' 280' 200' 280);
Magic Number,SkiaSharpFormsDemos.Bitmaps,NinePatchDisplayPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\NinePatchDisplayPage.cs,NinePatchDisplayPage,The following statement contains a magic number: canvas.DrawCircle(x' y' 40' paint);
Magic Number,SkiaSharpFormsDemos.Bitmaps,NinePatchDisplayPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\NinePatchDisplayPage.cs,NinePatchDisplayPage,The following statement contains a magic number: y < 500
Magic Number,SkiaSharpFormsDemos.Bitmaps,NinePatchDisplayPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\NinePatchDisplayPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKRectI centerRect = new SKRectI(100' 100' 400' 400);
Magic Number,SkiaSharpFormsDemos.Bitmaps,NinePatchDisplayPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\NinePatchDisplayPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKRectI centerRect = new SKRectI(100' 100' 400' 400);
Magic Number,SkiaSharpFormsDemos.Bitmaps,NinePatchDisplayPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\NinePatchDisplayPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKRectI centerRect = new SKRectI(100' 100' 400' 400);
Magic Number,SkiaSharpFormsDemos.Bitmaps,NinePatchDisplayPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\NinePatchDisplayPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKRectI centerRect = new SKRectI(100' 100' 400' 400);
Magic Number,SkiaSharpFormsDemos.Bitmaps,PhotoCropperCanvasView,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\PhotoCropperCanvasView.cs,OnPaintSurface,The following statement contains a magic number: float x = (info.Width - scale * bitmap.Width) / 2;
Magic Number,SkiaSharpFormsDemos.Bitmaps,PhotoCropperCanvasView,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\PhotoCropperCanvasView.cs,OnPaintSurface,The following statement contains a magic number: float y = (info.Height - scale * bitmap.Height) / 2;
Magic Number,SkiaSharpFormsDemos.Bitmaps,PhotoPuzzlePage2,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\PhotoPuzzlePage2.xaml.cs,OnRotateRightButtonClicked,The following statement contains a magic number: canvas.RotateDegrees(90);
Magic Number,SkiaSharpFormsDemos.Bitmaps,PhotoPuzzlePage2,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\PhotoPuzzlePage2.xaml.cs,OnRotateLeftButtonClicked,The following statement contains a magic number: canvas.RotateDegrees(-90);
Magic Number,SkiaSharpFormsDemos.Bitmaps,PhotoPuzzlePage3,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\PhotoPuzzlePage3.xaml.cs,OnDoneButtonClicked,The following statement contains a magic number: int width = croppedBitmap.Width / 4;
Magic Number,SkiaSharpFormsDemos.Bitmaps,PhotoPuzzlePage3,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\PhotoPuzzlePage3.xaml.cs,OnDoneButtonClicked,The following statement contains a magic number: int height = croppedBitmap.Height / 4;
Magic Number,SkiaSharpFormsDemos.Bitmaps,PhotoPuzzlePage3,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\PhotoPuzzlePage3.xaml.cs,OnDoneButtonClicked,The following statement contains a magic number: ImageSource[] imgSources = new ImageSource[15];
Magic Number,SkiaSharpFormsDemos.Bitmaps,PhotoPuzzlePage3,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\PhotoPuzzlePage3.xaml.cs,OnDoneButtonClicked,The following statement contains a magic number: row == 3 && col == 3
Magic Number,SkiaSharpFormsDemos.Bitmaps,PhotoPuzzlePage3,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\PhotoPuzzlePage3.xaml.cs,OnDoneButtonClicked,The following statement contains a magic number: row == 3 && col == 3
Magic Number,SkiaSharpFormsDemos.Bitmaps,PhotoPuzzlePage3,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\PhotoPuzzlePage3.xaml.cs,OnDoneButtonClicked,The following statement contains a magic number: imgSources[4 * row + col] = (SKBitmapImageSource)bitmap;
Magic Number,SkiaSharpFormsDemos.Bitmaps,PhotoPuzzlePage3,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\PhotoPuzzlePage3.xaml.cs,OnDoneButtonClicked,The following statement contains a magic number: col < 4
Magic Number,SkiaSharpFormsDemos.Bitmaps,PhotoPuzzlePage3,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\PhotoPuzzlePage3.xaml.cs,OnDoneButtonClicked,The following statement contains a magic number: row < 4
Magic Number,SkiaSharpFormsDemos.Bitmaps,PhotoPuzzlePage4,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\PhotoPuzzlePage4.xaml.cs,OnRandomizeButtonClicked,The following statement contains a magic number: await ShiftIntoEmpty(rand.Next(NUM)' emptyCol' 25);
Magic Number,SkiaSharpFormsDemos.Bitmaps,PhotoPuzzlePage4,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\PhotoPuzzlePage4.xaml.cs,OnRandomizeButtonClicked,The following statement contains a magic number: await ShiftIntoEmpty(emptyRow' rand.Next(NUM)' 25);
Magic Number,SkiaSharpFormsDemos.Bitmaps,PhotoPuzzlePage4,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\PhotoPuzzlePage4.xaml.cs,OnRandomizeButtonClicked,The following statement contains a magic number: i < 100
Magic Number,SkiaSharpFormsDemos.Bitmaps,PixelDimensionsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\PixelDimensionsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float x = (info.Width - bitmap.Width) / 2;
Magic Number,SkiaSharpFormsDemos.Bitmaps,PixelDimensionsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\PixelDimensionsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float y = (info.Height - bitmap.Height) / 2;
Magic Number,SkiaSharpFormsDemos.Bitmaps,PixelizedImagePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\PixelizedImagePage.cs,PixelizedImagePage,The following statement contains a magic number: SKBitmap faceBitmap = new SKBitmap(9' 9);
Magic Number,SkiaSharpFormsDemos.Bitmaps,PixelizedImagePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\PixelizedImagePage.cs,PixelizedImagePage,The following statement contains a magic number: SKBitmap faceBitmap = new SKBitmap(9' 9);
Magic Number,SkiaSharpFormsDemos.Bitmaps,PixelizedImagePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\PixelizedImagePage.cs,PixelizedImagePage,The following statement contains a magic number: canvas.DrawBitmap(originalBitmap'                                    new SKRect(112' 238' 184' 310)'   // source                                    new SKRect(0' 0' 9' 9));
Magic Number,SkiaSharpFormsDemos.Bitmaps,PixelizedImagePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\PixelizedImagePage.cs,PixelizedImagePage,The following statement contains a magic number: canvas.DrawBitmap(originalBitmap'                                    new SKRect(112' 238' 184' 310)'   // source                                    new SKRect(0' 0' 9' 9));
Magic Number,SkiaSharpFormsDemos.Bitmaps,PixelizedImagePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\PixelizedImagePage.cs,PixelizedImagePage,The following statement contains a magic number: canvas.DrawBitmap(originalBitmap'                                    new SKRect(112' 238' 184' 310)'   // source                                    new SKRect(0' 0' 9' 9));
Magic Number,SkiaSharpFormsDemos.Bitmaps,PixelizedImagePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\PixelizedImagePage.cs,PixelizedImagePage,The following statement contains a magic number: canvas.DrawBitmap(originalBitmap'                                    new SKRect(112' 238' 184' 310)'   // source                                    new SKRect(0' 0' 9' 9));
Magic Number,SkiaSharpFormsDemos.Bitmaps,PixelizedImagePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\PixelizedImagePage.cs,PixelizedImagePage,The following statement contains a magic number: canvas.DrawBitmap(originalBitmap'                                    new SKRect(112' 238' 184' 310)'   // source                                    new SKRect(0' 0' 9' 9));
Magic Number,SkiaSharpFormsDemos.Bitmaps,PixelizedImagePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\PixelizedImagePage.cs,PixelizedImagePage,The following statement contains a magic number: canvas.DrawBitmap(originalBitmap'                                    new SKRect(112' 238' 184' 310)'   // source                                    new SKRect(0' 0' 9' 9));
Magic Number,SkiaSharpFormsDemos.Bitmaps,PixelizedImagePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\PixelizedImagePage.cs,PixelizedImagePage,The following statement contains a magic number: canvas.DrawBitmap(faceBitmap'                                     new SKRect(112' 238' 184' 310));
Magic Number,SkiaSharpFormsDemos.Bitmaps,PixelizedImagePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\PixelizedImagePage.cs,PixelizedImagePage,The following statement contains a magic number: canvas.DrawBitmap(faceBitmap'                                     new SKRect(112' 238' 184' 310));
Magic Number,SkiaSharpFormsDemos.Bitmaps,PixelizedImagePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\PixelizedImagePage.cs,PixelizedImagePage,The following statement contains a magic number: canvas.DrawBitmap(faceBitmap'                                     new SKRect(112' 238' 184' 310));
Magic Number,SkiaSharpFormsDemos.Bitmaps,PixelizedImagePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\PixelizedImagePage.cs,PixelizedImagePage,The following statement contains a magic number: canvas.DrawBitmap(faceBitmap'                                     new SKRect(112' 238' 184' 310));
Magic Number,SkiaSharpFormsDemos.Bitmaps,RainbowSinePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\RainbowSinePage.cs,RainbowSinePage,The following statement contains a magic number: bitmap = new SKBitmap(360 * 3' 1024' SKColorType.Bgra8888' SKAlphaType.Unpremul);
Magic Number,SkiaSharpFormsDemos.Bitmaps,RainbowSinePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\RainbowSinePage.cs,RainbowSinePage,The following statement contains a magic number: bitmap = new SKBitmap(360 * 3' 1024' SKColorType.Bgra8888' SKAlphaType.Unpremul);
Magic Number,SkiaSharpFormsDemos.Bitmaps,RainbowSinePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\RainbowSinePage.cs,RainbowSinePage,The following statement contains a magic number: bitmap = new SKBitmap(360 * 3' 1024' SKColorType.Bgra8888' SKAlphaType.Unpremul);
Magic Number,SkiaSharpFormsDemos.Bitmaps,RainbowSinePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\RainbowSinePage.cs,RainbowSinePage,The following statement contains a magic number: double angle = 2 * Math.PI * row / bitmap.Height;
Magic Number,SkiaSharpFormsDemos.Bitmaps,RainbowSinePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\RainbowSinePage.cs,RainbowSinePage,The following statement contains a magic number: int col = (int)(360 + 360 * sine + hue);
Magic Number,SkiaSharpFormsDemos.Bitmaps,RainbowSinePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\RainbowSinePage.cs,RainbowSinePage,The following statement contains a magic number: int col = (int)(360 + 360 * sine + hue);
Magic Number,SkiaSharpFormsDemos.Bitmaps,RainbowSinePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\RainbowSinePage.cs,RainbowSinePage,The following statement contains a magic number: *ptr = (uint)SKColor.FromHsl(hue' 100' 50);
Magic Number,SkiaSharpFormsDemos.Bitmaps,RainbowSinePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\RainbowSinePage.cs,RainbowSinePage,The following statement contains a magic number: *ptr = (uint)SKColor.FromHsl(hue' 100' 50);
Magic Number,SkiaSharpFormsDemos.Bitmaps,RainbowSinePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\RainbowSinePage.cs,RainbowSinePage,The following statement contains a magic number: hue < 360
Magic Number,SkiaSharpFormsDemos.Bitmaps,UniformScalingPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\UniformScalingPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float x = (info.Width - scale * bitmap.Width) / 2;
Magic Number,SkiaSharpFormsDemos.Bitmaps,UniformScalingPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\UniformScalingPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float y = (info.Height - scale * bitmap.Height) / 2;
Magic Number,SkiaSharpFormsDemos.Curves,AngleArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\AngleArcPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKRect rect = new SKRect(100' 100' info.Width - 100' info.Height - 100);
Magic Number,SkiaSharpFormsDemos.Curves,AngleArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\AngleArcPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKRect rect = new SKRect(100' 100' info.Width - 100' info.Height - 100);
Magic Number,SkiaSharpFormsDemos.Curves,AngleArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\AngleArcPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKRect rect = new SKRect(100' 100' info.Width - 100' info.Height - 100);
Magic Number,SkiaSharpFormsDemos.Curves,AngleArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\AngleArcPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKRect rect = new SKRect(100' 100' info.Width - 100' info.Height - 100);
Magic Number,SkiaSharpFormsDemos.Curves,AnimatedDottedTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\AnimatedDottedTextPage.cs,OnAppearing,The following statement contains a magic number: Device.StartTimer(TimeSpan.FromSeconds(1f / 60)' () =>              {                  canvasView.InvalidateSurface();                  return pageIsActive;              });
Magic Number,SkiaSharpFormsDemos.Curves,AnimatedDottedTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\AnimatedDottedTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: textPaint.TextSize *= 0.95f * info.Width / textWidth;
Magic Number,SkiaSharpFormsDemos.Curves,AnimatedDottedTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\AnimatedDottedTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float xText = info.Width / 2 - textBounds.MidX;
Magic Number,SkiaSharpFormsDemos.Curves,AnimatedDottedTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\AnimatedDottedTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float yText = info.Height / 2 - textBounds.MidY;
Magic Number,SkiaSharpFormsDemos.Curves,AnimatedDottedTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\AnimatedDottedTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float phase = -t * 2 * strokeWidth;
Magic Number,SkiaSharpFormsDemos.Curves,AnotherRoundedHeptagonPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\AnotherRoundedHeptagonPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: int numVertices = 7;
Magic Number,SkiaSharpFormsDemos.Curves,AnotherRoundedHeptagonPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\AnotherRoundedHeptagonPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float radius = 0.45f * Math.Min(info.Width' info.Height);
Magic Number,SkiaSharpFormsDemos.Curves,AnotherRoundedHeptagonPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\AnotherRoundedHeptagonPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: double vertexAngle = -0.5f * Math.PI;
Magic Number,SkiaSharpFormsDemos.Curves,AnotherRoundedHeptagonPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\AnotherRoundedHeptagonPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: vertexAngle += 2 * Math.PI / numVertices;
Magic Number,SkiaSharpFormsDemos.Curves,AnotherRoundedHeptagonPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\AnotherRoundedHeptagonPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float cornerRadius = 100;
Magic Number,SkiaSharpFormsDemos.Curves,AnotherRoundedHeptagonPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\AnotherRoundedHeptagonPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.StrokeWidth = 10;
Magic Number,SkiaSharpFormsDemos.Curves,AnotherRoundedHeptagonPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\AnotherRoundedHeptagonPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.PathEffect = SKPathEffect.CreateCorner(cornerRadius / 2);
Magic Number,SkiaSharpFormsDemos.Curves,AnotherRoundedHeptagonPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\AnotherRoundedHeptagonPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Curves,AnotherRoundedHeptagonPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\AnotherRoundedHeptagonPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Curves,AnotherRoundedHeptagonPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\AnotherRoundedHeptagonPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float offset = cornerRadius / (float)Math.Sin(Math.PI * (numVertices - 2) / numVertices / 2);
Magic Number,SkiaSharpFormsDemos.Curves,AnotherRoundedHeptagonPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\AnotherRoundedHeptagonPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float offset = cornerRadius / (float)Math.Sin(Math.PI * (numVertices - 2) / numVertices / 2);
Magic Number,SkiaSharpFormsDemos.Curves,ArcInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ArcInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.LineTo(83' 75);
Magic Number,SkiaSharpFormsDemos.Curves,ArcInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ArcInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.LineTo(83' 75);
Magic Number,SkiaSharpFormsDemos.Curves,ArcInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ArcInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.ArcTo(100' 100' 0' SKPathArcSize.Large' SKPathDirection.CounterClockwise' 83' -75);
Magic Number,SkiaSharpFormsDemos.Curves,ArcInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ArcInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.ArcTo(100' 100' 0' SKPathArcSize.Large' SKPathDirection.CounterClockwise' 83' -75);
Magic Number,SkiaSharpFormsDemos.Curves,ArcInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ArcInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.ArcTo(100' 100' 0' SKPathArcSize.Large' SKPathDirection.CounterClockwise' 83' -75);
Magic Number,SkiaSharpFormsDemos.Curves,ArcInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ArcInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.ArcTo(100' 100' 0' SKPathArcSize.Large' SKPathDirection.CounterClockwise' 83' -75);
Magic Number,SkiaSharpFormsDemos.Curves,ArcInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ArcInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.LineTo(-83' 75);
Magic Number,SkiaSharpFormsDemos.Curves,ArcInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ArcInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.LineTo(-83' 75);
Magic Number,SkiaSharpFormsDemos.Curves,ArcInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ArcInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.ArcTo(100' 100' 0' SKPathArcSize.Large' SKPathDirection.Clockwise' -83' -75);
Magic Number,SkiaSharpFormsDemos.Curves,ArcInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ArcInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.ArcTo(100' 100' 0' SKPathArcSize.Large' SKPathDirection.Clockwise' -83' -75);
Magic Number,SkiaSharpFormsDemos.Curves,ArcInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ArcInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.ArcTo(100' 100' 0' SKPathArcSize.Large' SKPathDirection.Clockwise' -83' -75);
Magic Number,SkiaSharpFormsDemos.Curves,ArcInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ArcInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.ArcTo(100' 100' 0' SKPathArcSize.Large' SKPathDirection.Clockwise' -83' -75);
Magic Number,SkiaSharpFormsDemos.Curves,ArcInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ArcInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Curves,ArcInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ArcInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Curves,ArcInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ArcInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.StrokeWidth = 5;
Magic Number,SkiaSharpFormsDemos.Curves,BezierCircularArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierCircularArcPage.xaml.cs,BezierCircularArcPage,The following statement contains a magic number: angleSlider.Value = 90;
Magic Number,SkiaSharpFormsDemos.Curves,BezierCircularArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierCircularArcPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Curves,BezierCircularArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierCircularArcPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Curves,BezierCircularArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierCircularArcPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float radius = Math.Min(info.Width' info.Height) / 3;
Magic Number,SkiaSharpFormsDemos.Curves,BezierCircularArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierCircularArcPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float length = radius * 4 * (float)Math.Tan(Math.PI * angle / 180 / 4) / 3;
Magic Number,SkiaSharpFormsDemos.Curves,BezierCircularArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierCircularArcPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float length = radius * 4 * (float)Math.Tan(Math.PI * angle / 180 / 4) / 3;
Magic Number,SkiaSharpFormsDemos.Curves,BezierCircularArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierCircularArcPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float length = radius * 4 * (float)Math.Tan(Math.PI * angle / 180 / 4) / 3;
Magic Number,SkiaSharpFormsDemos.Curves,BezierCircularArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierCircularArcPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float length = radius * 4 * (float)Math.Tan(Math.PI * angle / 180 / 4) / 3;
Magic Number,SkiaSharpFormsDemos.Curves,BezierCircularArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierCircularArcPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float sin = (float)Math.Sin(Math.PI * angle / 180 / 2);
Magic Number,SkiaSharpFormsDemos.Curves,BezierCircularArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierCircularArcPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float sin = (float)Math.Sin(Math.PI * angle / 180 / 2);
Magic Number,SkiaSharpFormsDemos.Curves,BezierCircularArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierCircularArcPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float cos = (float)Math.Cos(Math.PI * angle / 180 / 2);
Magic Number,SkiaSharpFormsDemos.Curves,BezierCircularArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierCircularArcPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float cos = (float)Math.Cos(Math.PI * angle / 180 / 2);
Magic Number,SkiaSharpFormsDemos.Curves,BezierCircularArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierCircularArcPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawCircle(point0.X' point0.Y' 10' blackFill);
Magic Number,SkiaSharpFormsDemos.Curves,BezierCircularArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierCircularArcPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawCircle(point1.X' point1.Y' 10' blackFill);
Magic Number,SkiaSharpFormsDemos.Curves,BezierCircularArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierCircularArcPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawCircle(point2.X' point2.Y' 10' blackFill);
Magic Number,SkiaSharpFormsDemos.Curves,BezierCircularArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierCircularArcPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawCircle(point3.X' point3.Y' 10' blackFill);
Magic Number,SkiaSharpFormsDemos.Curves,BezierCurvePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierCurvePage.xaml.cs,BezierCurvePage,The following statement contains a magic number: touchPoints = new TouchPoint[4];
Magic Number,SkiaSharpFormsDemos.Curves,BezierCurvePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierCurvePage.xaml.cs,BezierCurvePage,The following statement contains a magic number: TouchPoint touchPoint = new TouchPoint                  {                      Center = new SKPoint(100 + 200 * (i % 2)'                                           100 + 200 * i)                  };
Magic Number,SkiaSharpFormsDemos.Curves,BezierCurvePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierCurvePage.xaml.cs,BezierCurvePage,The following statement contains a magic number: TouchPoint touchPoint = new TouchPoint                  {                      Center = new SKPoint(100 + 200 * (i % 2)'                                           100 + 200 * i)                  };
Magic Number,SkiaSharpFormsDemos.Curves,BezierCurvePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierCurvePage.xaml.cs,BezierCurvePage,The following statement contains a magic number: TouchPoint touchPoint = new TouchPoint                  {                      Center = new SKPoint(100 + 200 * (i % 2)'                                           100 + 200 * i)                  };
Magic Number,SkiaSharpFormsDemos.Curves,BezierCurvePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierCurvePage.xaml.cs,BezierCurvePage,The following statement contains a magic number: TouchPoint touchPoint = new TouchPoint                  {                      Center = new SKPoint(100 + 200 * (i % 2)'                                           100 + 200 * i)                  };
Magic Number,SkiaSharpFormsDemos.Curves,BezierCurvePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierCurvePage.xaml.cs,BezierCurvePage,The following statement contains a magic number: TouchPoint touchPoint = new TouchPoint                  {                      Center = new SKPoint(100 + 200 * (i % 2)'                                           100 + 200 * i)                  };
Magic Number,SkiaSharpFormsDemos.Curves,BezierCurvePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierCurvePage.xaml.cs,BezierCurvePage,The following statement contains a magic number: i < 4
Magic Number,SkiaSharpFormsDemos.Curves,BezierCurvePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierCurvePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.CubicTo(touchPoints[1].Center'                                touchPoints[2].Center'                                touchPoints[3].Center);
Magic Number,SkiaSharpFormsDemos.Curves,BezierCurvePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierCurvePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.CubicTo(touchPoints[1].Center'                                touchPoints[2].Center'                                touchPoints[3].Center);
Magic Number,SkiaSharpFormsDemos.Curves,BezierCurvePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierCurvePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawLine(touchPoints[2].Center.X'                              touchPoints[2].Center.Y'                              touchPoints[3].Center.X'                              touchPoints[3].Center.Y' dottedStrokePaint);
Magic Number,SkiaSharpFormsDemos.Curves,BezierCurvePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierCurvePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawLine(touchPoints[2].Center.X'                              touchPoints[2].Center.Y'                              touchPoints[3].Center.X'                              touchPoints[3].Center.Y' dottedStrokePaint);
Magic Number,SkiaSharpFormsDemos.Curves,BezierCurvePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierCurvePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawLine(touchPoints[2].Center.X'                              touchPoints[2].Center.Y'                              touchPoints[3].Center.X'                              touchPoints[3].Center.Y' dottedStrokePaint);
Magic Number,SkiaSharpFormsDemos.Curves,BezierCurvePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierCurvePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawLine(touchPoints[2].Center.X'                              touchPoints[2].Center.Y'                              touchPoints[3].Center.X'                              touchPoints[3].Center.Y' dottedStrokePaint);
Magic Number,SkiaSharpFormsDemos.Curves,BezierInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.CubicTo(  50'  -50'   95' -100'  150' -100);
Magic Number,SkiaSharpFormsDemos.Curves,BezierInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.CubicTo(  50'  -50'   95' -100'  150' -100);
Magic Number,SkiaSharpFormsDemos.Curves,BezierInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.CubicTo(  50'  -50'   95' -100'  150' -100);
Magic Number,SkiaSharpFormsDemos.Curves,BezierInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.CubicTo(  50'  -50'   95' -100'  150' -100);
Magic Number,SkiaSharpFormsDemos.Curves,BezierInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.CubicTo(  50'  -50'   95' -100'  150' -100);
Magic Number,SkiaSharpFormsDemos.Curves,BezierInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.CubicTo(  50'  -50'   95' -100'  150' -100);
Magic Number,SkiaSharpFormsDemos.Curves,BezierInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.CubicTo( 205' -100'  250'  -55'  250'    0);
Magic Number,SkiaSharpFormsDemos.Curves,BezierInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.CubicTo( 205' -100'  250'  -55'  250'    0);
Magic Number,SkiaSharpFormsDemos.Curves,BezierInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.CubicTo( 205' -100'  250'  -55'  250'    0);
Magic Number,SkiaSharpFormsDemos.Curves,BezierInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.CubicTo( 205' -100'  250'  -55'  250'    0);
Magic Number,SkiaSharpFormsDemos.Curves,BezierInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.CubicTo( 205' -100'  250'  -55'  250'    0);
Magic Number,SkiaSharpFormsDemos.Curves,BezierInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.CubicTo( 250'   55'  205'  100'  150'  100);
Magic Number,SkiaSharpFormsDemos.Curves,BezierInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.CubicTo( 250'   55'  205'  100'  150'  100);
Magic Number,SkiaSharpFormsDemos.Curves,BezierInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.CubicTo( 250'   55'  205'  100'  150'  100);
Magic Number,SkiaSharpFormsDemos.Curves,BezierInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.CubicTo( 250'   55'  205'  100'  150'  100);
Magic Number,SkiaSharpFormsDemos.Curves,BezierInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.CubicTo( 250'   55'  205'  100'  150'  100);
Magic Number,SkiaSharpFormsDemos.Curves,BezierInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.CubicTo( 250'   55'  205'  100'  150'  100);
Magic Number,SkiaSharpFormsDemos.Curves,BezierInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.CubicTo(  95'  100'   50'   50'    0'    0);
Magic Number,SkiaSharpFormsDemos.Curves,BezierInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.CubicTo(  95'  100'   50'   50'    0'    0);
Magic Number,SkiaSharpFormsDemos.Curves,BezierInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.CubicTo(  95'  100'   50'   50'    0'    0);
Magic Number,SkiaSharpFormsDemos.Curves,BezierInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.CubicTo(  95'  100'   50'   50'    0'    0);
Magic Number,SkiaSharpFormsDemos.Curves,BezierInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.CubicTo( -50'  -50'  -95' -100' -150' -100);
Magic Number,SkiaSharpFormsDemos.Curves,BezierInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.CubicTo( -50'  -50'  -95' -100' -150' -100);
Magic Number,SkiaSharpFormsDemos.Curves,BezierInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.CubicTo( -50'  -50'  -95' -100' -150' -100);
Magic Number,SkiaSharpFormsDemos.Curves,BezierInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.CubicTo( -50'  -50'  -95' -100' -150' -100);
Magic Number,SkiaSharpFormsDemos.Curves,BezierInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.CubicTo( -50'  -50'  -95' -100' -150' -100);
Magic Number,SkiaSharpFormsDemos.Curves,BezierInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.CubicTo( -50'  -50'  -95' -100' -150' -100);
Magic Number,SkiaSharpFormsDemos.Curves,BezierInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.CubicTo(-205' -100' -250'  -55' -250'    0);
Magic Number,SkiaSharpFormsDemos.Curves,BezierInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.CubicTo(-205' -100' -250'  -55' -250'    0);
Magic Number,SkiaSharpFormsDemos.Curves,BezierInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.CubicTo(-205' -100' -250'  -55' -250'    0);
Magic Number,SkiaSharpFormsDemos.Curves,BezierInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.CubicTo(-205' -100' -250'  -55' -250'    0);
Magic Number,SkiaSharpFormsDemos.Curves,BezierInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.CubicTo(-205' -100' -250'  -55' -250'    0);
Magic Number,SkiaSharpFormsDemos.Curves,BezierInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.CubicTo(-250'   55' -205'  100' -150'  100);
Magic Number,SkiaSharpFormsDemos.Curves,BezierInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.CubicTo(-250'   55' -205'  100' -150'  100);
Magic Number,SkiaSharpFormsDemos.Curves,BezierInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.CubicTo(-250'   55' -205'  100' -150'  100);
Magic Number,SkiaSharpFormsDemos.Curves,BezierInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.CubicTo(-250'   55' -205'  100' -150'  100);
Magic Number,SkiaSharpFormsDemos.Curves,BezierInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.CubicTo(-250'   55' -205'  100' -150'  100);
Magic Number,SkiaSharpFormsDemos.Curves,BezierInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.CubicTo(-250'   55' -205'  100' -150'  100);
Magic Number,SkiaSharpFormsDemos.Curves,BezierInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.CubicTo( -95'  100'  -50'   50'    0'    0);
Magic Number,SkiaSharpFormsDemos.Curves,BezierInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.CubicTo( -95'  100'  -50'   50'    0'    0);
Magic Number,SkiaSharpFormsDemos.Curves,BezierInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.CubicTo( -95'  100'  -50'   50'    0'    0);
Magic Number,SkiaSharpFormsDemos.Curves,BezierInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.CubicTo( -95'  100'  -50'   50'    0'    0);
Magic Number,SkiaSharpFormsDemos.Curves,BezierInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Curves,BezierInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Curves,BezierInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Scale(0.9f * Math.Min(info.Width / pathBounds.Width'                                               info.Height / pathBounds.Height));
Magic Number,SkiaSharpFormsDemos.Curves,BezierInfinityPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\BezierInfinityPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.StrokeWidth = 5;
Magic Number,SkiaSharpFormsDemos.Curves,CatsInFramePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\CatsInFramePage.cs,CatsInFramePage,The following statement contains a magic number: catPath.Transform(SKMatrix.MakeTranslation(-240' -175));
Magic Number,SkiaSharpFormsDemos.Curves,CatsInFramePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\CatsInFramePage.cs,CatsInFramePage,The following statement contains a magic number: catPath.Transform(SKMatrix.MakeTranslation(-240' -175));
Magic Number,SkiaSharpFormsDemos.Curves,CatsInFramePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\CatsInFramePage.cs,CatsInFramePage,The following statement contains a magic number: catPath.Transform(SKMatrix.MakeScale(0.40f' 0.40f));
Magic Number,SkiaSharpFormsDemos.Curves,CatsInFramePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\CatsInFramePage.cs,CatsInFramePage,The following statement contains a magic number: catPath.Transform(SKMatrix.MakeScale(0.40f' 0.40f));
Magic Number,SkiaSharpFormsDemos.Curves,CatsInFramePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\CatsInFramePage.cs,CatsInFramePage,The following statement contains a magic number: SKPathEffect fillEffect = SKPathEffect.Create2DPath(                  new SKMatrix { ScaleX = 170' ScaleY = 110'                                 TransX = 75' TransY = 80'                                 Persp2 = 1 }'                  outlinedCatPath);
Magic Number,SkiaSharpFormsDemos.Curves,CatsInFramePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\CatsInFramePage.cs,CatsInFramePage,The following statement contains a magic number: SKPathEffect fillEffect = SKPathEffect.Create2DPath(                  new SKMatrix { ScaleX = 170' ScaleY = 110'                                 TransX = 75' TransY = 80'                                 Persp2 = 1 }'                  outlinedCatPath);
Magic Number,SkiaSharpFormsDemos.Curves,CatsInFramePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\CatsInFramePage.cs,CatsInFramePage,The following statement contains a magic number: SKPathEffect fillEffect = SKPathEffect.Create2DPath(                  new SKMatrix { ScaleX = 170' ScaleY = 110'                                 TransX = 75' TransY = 80'                                 Persp2 = 1 }'                  outlinedCatPath);
Magic Number,SkiaSharpFormsDemos.Curves,CatsInFramePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\CatsInFramePage.cs,CatsInFramePage,The following statement contains a magic number: SKPathEffect fillEffect = SKPathEffect.Create2DPath(                  new SKMatrix { ScaleX = 170' ScaleY = 110'                                 TransX = 75' TransY = 80'                                 Persp2 = 1 }'                  outlinedCatPath);
Magic Number,SkiaSharpFormsDemos.Curves,CatsInFramePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\CatsInFramePage.cs,CatsInFramePage,The following statement contains a magic number: SKPathEffect strokeEffect =                   SKPathEffect.Create1DPath(scallopPath' 75' 0' SKPath1DPathEffectStyle.Rotate);
Magic Number,SkiaSharpFormsDemos.Curves,CatsInFramePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\CatsInFramePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKRect rect = new SKRect(50' 50' info.Width - 50' info.Height - 50);
Magic Number,SkiaSharpFormsDemos.Curves,CatsInFramePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\CatsInFramePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKRect rect = new SKRect(50' 50' info.Width - 50' info.Height - 50);
Magic Number,SkiaSharpFormsDemos.Curves,CatsInFramePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\CatsInFramePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKRect rect = new SKRect(50' 50' info.Width - 50' info.Height - 50);
Magic Number,SkiaSharpFormsDemos.Curves,CatsInFramePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\CatsInFramePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKRect rect = new SKRect(50' 50' info.Width - 50' info.Height - 50);
Magic Number,SkiaSharpFormsDemos.Curves,CharacterOutlineOutlinesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\CharacterOutlineOutlinesPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float xText = info.Width / 2 - textBounds.MidX;
Magic Number,SkiaSharpFormsDemos.Curves,CharacterOutlineOutlinesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\CharacterOutlineOutlinesPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float yText = info.Height / 2 - textBounds.MidY;
Magic Number,SkiaSharpFormsDemos.Curves,CharacterOutlineOutlinesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\CharacterOutlineOutlinesPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: textPaint.StrokeWidth = 25;
Magic Number,SkiaSharpFormsDemos.Curves,CharacterOutlineOutlinesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\CharacterOutlineOutlinesPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: outlinePaint.StrokeWidth = 5;
Magic Number,SkiaSharpFormsDemos.Curves,CircularTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\CircularTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float radius = 0.35f * Math.Min(info.Width' info.Height);
Magic Number,SkiaSharpFormsDemos.Curves,CircularTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\CircularTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: circularPath.AddCircle(info.Width / 2' info.Height / 2' radius);
Magic Number,SkiaSharpFormsDemos.Curves,CircularTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\CircularTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: circularPath.AddCircle(info.Width / 2' info.Height / 2' radius);
Magic Number,SkiaSharpFormsDemos.Curves,CircularTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\CircularTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: textPaint.TextSize = 100;
Magic Number,SkiaSharpFormsDemos.Curves,CircularTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\CircularTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: textPaint.TextSize *= 2 * 3.14f * radius / textWidth;
Magic Number,SkiaSharpFormsDemos.Curves,CircularTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\CircularTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: textPaint.TextSize *= 2 * 3.14f * radius / textWidth;
Magic Number,SkiaSharpFormsDemos.Curves,ClipOperationsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ClipOperationsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: DisplayClipOp(canvas' new SKRect(x' y' x + info.Width' y + info.Height / 2)' clipOp);
Magic Number,SkiaSharpFormsDemos.Curves,ClipOperationsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ClipOperationsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: y += info.Height / 2;
Magic Number,SkiaSharpFormsDemos.Curves,ClipOperationsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ClipOperationsPage.cs,DisplayClipOp,The following statement contains a magic number: float radius = 0.9f * Math.Min(rect.Width / 3' rect.Height / 2);
Magic Number,SkiaSharpFormsDemos.Curves,ClipOperationsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ClipOperationsPage.cs,DisplayClipOp,The following statement contains a magic number: float radius = 0.9f * Math.Min(rect.Width / 3' rect.Height / 2);
Magic Number,SkiaSharpFormsDemos.Curves,ClipOperationsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ClipOperationsPage.cs,DisplayClipOp,The following statement contains a magic number: float radius = 0.9f * Math.Min(rect.Width / 3' rect.Height / 2);
Magic Number,SkiaSharpFormsDemos.Curves,ClipOperationsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ClipOperationsPage.cs,DisplayClipOp,The following statement contains a magic number: path1.AddCircle(xCenter - radius / 2' yCenter' radius);
Magic Number,SkiaSharpFormsDemos.Curves,ClipOperationsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ClipOperationsPage.cs,DisplayClipOp,The following statement contains a magic number: path2.AddCircle(xCenter + radius / 2' yCenter' radius);
Magic Number,SkiaSharpFormsDemos.Curves,ClippingTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ClippingTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.TextSize = 10;
Magic Number,SkiaSharpFormsDemos.Curves,ClippingTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ClippingTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Curves,ClippingTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ClippingTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Curves,ConicCircularArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConicCircularArcPage.xaml.cs,ConicCircularArcPage,The following statement contains a magic number: angleSlider.Value = 90;
Magic Number,SkiaSharpFormsDemos.Curves,ConicCircularArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConicCircularArcPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Curves,ConicCircularArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConicCircularArcPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Curves,ConicCircularArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConicCircularArcPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float radius = Math.Min(info.Width' info.Height) / 4;
Magic Number,SkiaSharpFormsDemos.Curves,ConicCircularArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConicCircularArcPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float sin = (float)Math.Sin(Math.PI * angle / 180 / 2);
Magic Number,SkiaSharpFormsDemos.Curves,ConicCircularArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConicCircularArcPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float sin = (float)Math.Sin(Math.PI * angle / 180 / 2);
Magic Number,SkiaSharpFormsDemos.Curves,ConicCircularArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConicCircularArcPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float cos = (float)Math.Cos(Math.PI * angle / 180 / 2);
Magic Number,SkiaSharpFormsDemos.Curves,ConicCircularArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConicCircularArcPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float cos = (float)Math.Cos(Math.PI * angle / 180 / 2);
Magic Number,SkiaSharpFormsDemos.Curves,ConicCircularArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConicCircularArcPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawCircle(point0.X' point0.Y' 10' blackFill);
Magic Number,SkiaSharpFormsDemos.Curves,ConicCircularArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConicCircularArcPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawCircle(point1.X' point1.Y' 10' blackFill);
Magic Number,SkiaSharpFormsDemos.Curves,ConicCircularArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConicCircularArcPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawCircle(point2.X' point2.Y' 10' blackFill);
Magic Number,SkiaSharpFormsDemos.Curves,ConicCurvePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConicCurvePage.xaml.cs,ConicCurvePage,The following statement contains a magic number: touchPoints = new TouchPoint[3];
Magic Number,SkiaSharpFormsDemos.Curves,ConicCurvePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConicCurvePage.xaml.cs,ConicCurvePage,The following statement contains a magic number: TouchPoint touchPoint = new TouchPoint                  {                      Center = new SKPoint(100 + 200 * i'                                           100 + (i == 1 ? 300 : 0))                  };
Magic Number,SkiaSharpFormsDemos.Curves,ConicCurvePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConicCurvePage.xaml.cs,ConicCurvePage,The following statement contains a magic number: TouchPoint touchPoint = new TouchPoint                  {                      Center = new SKPoint(100 + 200 * i'                                           100 + (i == 1 ? 300 : 0))                  };
Magic Number,SkiaSharpFormsDemos.Curves,ConicCurvePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConicCurvePage.xaml.cs,ConicCurvePage,The following statement contains a magic number: TouchPoint touchPoint = new TouchPoint                  {                      Center = new SKPoint(100 + 200 * i'                                           100 + (i == 1 ? 300 : 0))                  };
Magic Number,SkiaSharpFormsDemos.Curves,ConicCurvePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConicCurvePage.xaml.cs,ConicCurvePage,The following statement contains a magic number: TouchPoint touchPoint = new TouchPoint                  {                      Center = new SKPoint(100 + 200 * i'                                           100 + (i == 1 ? 300 : 0))                  };
Magic Number,SkiaSharpFormsDemos.Curves,ConicCurvePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConicCurvePage.xaml.cs,ConicCurvePage,The following statement contains a magic number: i < 3
Magic Number,SkiaSharpFormsDemos.Curves,ConicCurvePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConicCurvePage.xaml.cs,ConicCurvePage,The following statement contains a magic number: weightSlider.Value = 0.5;
Magic Number,SkiaSharpFormsDemos.Curves,ConicCurvePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConicCurvePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.ConicTo(touchPoints[1].Center'                               touchPoints[2].Center'                               (float)weightSlider.Value);
Magic Number,SkiaSharpFormsDemos.Curves,ConicCurvePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConicCurvePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawLine(touchPoints[1].Center.X'                              touchPoints[1].Center.Y'                              touchPoints[2].Center.X'                              touchPoints[2].Center.Y' dottedStrokePaint);
Magic Number,SkiaSharpFormsDemos.Curves,ConicCurvePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConicCurvePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawLine(touchPoints[1].Center.X'                              touchPoints[1].Center.Y'                              touchPoints[2].Center.X'                              touchPoints[2].Center.Y' dottedStrokePaint);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,ConveyorBeltPage,The following statement contains a magic number: bucketPath.AddRect(new SKRect(-5' -3' 25' 3));
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,ConveyorBeltPage,The following statement contains a magic number: bucketPath.AddRect(new SKRect(-5' -3' 25' 3));
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,ConveyorBeltPage,The following statement contains a magic number: bucketPath.AddRect(new SKRect(-5' -3' 25' 3));
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,ConveyorBeltPage,The following statement contains a magic number: bucketPath.AddRect(new SKRect(-5' -3' 25' 3));
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,ConveyorBeltPage,The following statement contains a magic number: bucketPath.AddRoundedRect(new SKRect(25' -19' 27' 18)' 10' 10'                                         SKPathDirection.CounterClockwise);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,ConveyorBeltPage,The following statement contains a magic number: bucketPath.AddRoundedRect(new SKRect(25' -19' 27' 18)' 10' 10'                                         SKPathDirection.CounterClockwise);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,ConveyorBeltPage,The following statement contains a magic number: bucketPath.AddRoundedRect(new SKRect(25' -19' 27' 18)' 10' 10'                                         SKPathDirection.CounterClockwise);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,ConveyorBeltPage,The following statement contains a magic number: bucketPath.AddRoundedRect(new SKRect(25' -19' 27' 18)' 10' 10'                                         SKPathDirection.CounterClockwise);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,ConveyorBeltPage,The following statement contains a magic number: bucketPath.AddRoundedRect(new SKRect(25' -19' 27' 18)' 10' 10'                                         SKPathDirection.CounterClockwise);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,ConveyorBeltPage,The following statement contains a magic number: bucketPath.AddRoundedRect(new SKRect(25' -19' 27' 18)' 10' 10'                                         SKPathDirection.CounterClockwise);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,ConveyorBeltPage,The following statement contains a magic number: bucketPath.AddRoundedRect(new SKRect(63' -19' 65' 18)' 10' 10'                                         SKPathDirection.CounterClockwise);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,ConveyorBeltPage,The following statement contains a magic number: bucketPath.AddRoundedRect(new SKRect(63' -19' 65' 18)' 10' 10'                                         SKPathDirection.CounterClockwise);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,ConveyorBeltPage,The following statement contains a magic number: bucketPath.AddRoundedRect(new SKRect(63' -19' 65' 18)' 10' 10'                                         SKPathDirection.CounterClockwise);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,ConveyorBeltPage,The following statement contains a magic number: bucketPath.AddRoundedRect(new SKRect(63' -19' 65' 18)' 10' 10'                                         SKPathDirection.CounterClockwise);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,ConveyorBeltPage,The following statement contains a magic number: bucketPath.AddRoundedRect(new SKRect(63' -19' 65' 18)' 10' 10'                                         SKPathDirection.CounterClockwise);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,ConveyorBeltPage,The following statement contains a magic number: bucketPath.AddRoundedRect(new SKRect(63' -19' 65' 18)' 10' 10'                                         SKPathDirection.CounterClockwise);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,ConveyorBeltPage,The following statement contains a magic number: bucketPath.MoveTo(25' -19 + 8 * i);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,ConveyorBeltPage,The following statement contains a magic number: bucketPath.MoveTo(25' -19 + 8 * i);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,ConveyorBeltPage,The following statement contains a magic number: bucketPath.MoveTo(25' -19 + 8 * i);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,ConveyorBeltPage,The following statement contains a magic number: bucketPath.LineTo(25' -13 + 8 * i);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,ConveyorBeltPage,The following statement contains a magic number: bucketPath.LineTo(25' -13 + 8 * i);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,ConveyorBeltPage,The following statement contains a magic number: bucketPath.LineTo(25' -13 + 8 * i);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,ConveyorBeltPage,The following statement contains a magic number: bucketPath.ArcTo(50' 50' 0' SKPathArcSize.Small'                                    SKPathDirection.CounterClockwise' 65' -13 + 8 * i);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,ConveyorBeltPage,The following statement contains a magic number: bucketPath.ArcTo(50' 50' 0' SKPathArcSize.Small'                                    SKPathDirection.CounterClockwise' 65' -13 + 8 * i);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,ConveyorBeltPage,The following statement contains a magic number: bucketPath.ArcTo(50' 50' 0' SKPathArcSize.Small'                                    SKPathDirection.CounterClockwise' 65' -13 + 8 * i);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,ConveyorBeltPage,The following statement contains a magic number: bucketPath.ArcTo(50' 50' 0' SKPathArcSize.Small'                                    SKPathDirection.CounterClockwise' 65' -13 + 8 * i);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,ConveyorBeltPage,The following statement contains a magic number: bucketPath.ArcTo(50' 50' 0' SKPathArcSize.Small'                                    SKPathDirection.CounterClockwise' 65' -13 + 8 * i);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,ConveyorBeltPage,The following statement contains a magic number: bucketPath.LineTo(65' -19 + 8 * i);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,ConveyorBeltPage,The following statement contains a magic number: bucketPath.LineTo(65' -19 + 8 * i);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,ConveyorBeltPage,The following statement contains a magic number: bucketPath.LineTo(65' -19 + 8 * i);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,ConveyorBeltPage,The following statement contains a magic number: bucketPath.ArcTo(50' 50' 0' SKPathArcSize.Small'                                    SKPathDirection.Clockwise' 25' -19 + 8 * i);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,ConveyorBeltPage,The following statement contains a magic number: bucketPath.ArcTo(50' 50' 0' SKPathArcSize.Small'                                    SKPathDirection.Clockwise' 25' -19 + 8 * i);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,ConveyorBeltPage,The following statement contains a magic number: bucketPath.ArcTo(50' 50' 0' SKPathArcSize.Small'                                    SKPathDirection.Clockwise' 25' -19 + 8 * i);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,ConveyorBeltPage,The following statement contains a magic number: bucketPath.ArcTo(50' 50' 0' SKPathArcSize.Small'                                    SKPathDirection.Clockwise' 25' -19 + 8 * i);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,ConveyorBeltPage,The following statement contains a magic number: bucketPath.ArcTo(50' 50' 0' SKPathArcSize.Small'                                    SKPathDirection.Clockwise' 25' -19 + 8 * i);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,ConveyorBeltPage,The following statement contains a magic number: i < 5
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,ConveyorBeltPage,The following statement contains a magic number: bucketPath.MoveTo(25' -17);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,ConveyorBeltPage,The following statement contains a magic number: bucketPath.MoveTo(25' -17);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,ConveyorBeltPage,The following statement contains a magic number: bucketPath.ArcTo(50' 50' 0' SKPathArcSize.Small'                                   SKPathDirection.Clockwise' 65' -17);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,ConveyorBeltPage,The following statement contains a magic number: bucketPath.ArcTo(50' 50' 0' SKPathArcSize.Small'                                   SKPathDirection.Clockwise' 65' -17);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,ConveyorBeltPage,The following statement contains a magic number: bucketPath.ArcTo(50' 50' 0' SKPathArcSize.Small'                                   SKPathDirection.Clockwise' 65' -17);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,ConveyorBeltPage,The following statement contains a magic number: bucketPath.ArcTo(50' 50' 0' SKPathArcSize.Small'                                   SKPathDirection.Clockwise' 65' -17);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,ConveyorBeltPage,The following statement contains a magic number: bucketPath.LineTo(65' -19);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,ConveyorBeltPage,The following statement contains a magic number: bucketPath.LineTo(65' -19);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,ConveyorBeltPage,The following statement contains a magic number: bucketPath.ArcTo(50' 50' 0' SKPathArcSize.Small'                                   SKPathDirection.CounterClockwise' 25' -19);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,ConveyorBeltPage,The following statement contains a magic number: bucketPath.ArcTo(50' 50' 0' SKPathArcSize.Small'                                   SKPathDirection.CounterClockwise' 25' -19);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,ConveyorBeltPage,The following statement contains a magic number: bucketPath.ArcTo(50' 50' 0' SKPathArcSize.Small'                                   SKPathDirection.CounterClockwise' 25' -19);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,ConveyorBeltPage,The following statement contains a magic number: bucketPath.ArcTo(50' 50' 0' SKPathArcSize.Small'                                   SKPathDirection.CounterClockwise' 25' -19);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,ConveyorBeltPage,The following statement contains a magic number: bucketPath.Transform(SKMatrix.MakeScale(-2' 2));
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,ConveyorBeltPage,The following statement contains a magic number: bucketPath.Transform(SKMatrix.MakeScale(-2' 2));
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,ConveyorBeltPage,The following statement contains a magic number: bucketPath.Transform(SKMatrix.MakeRotationDegrees(90));
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,OnAppearing,The following statement contains a magic number: Device.StartTimer(TimeSpan.FromSeconds(1f / 60)' () =>              {                  canvasView.InvalidateSurface();                  return pageIsActive;              });
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float width = info.Width / 3;
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float verticalMargin = width / 2 + 150;
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float verticalMargin = width / 2 + 150;
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: conveyerPath.ArcTo(width / 2' width / 2' 0' SKPathArcSize.Large'                                      SKPathDirection.Clockwise' 2 * width' verticalMargin);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: conveyerPath.ArcTo(width / 2' width / 2' 0' SKPathArcSize.Large'                                      SKPathDirection.Clockwise' 2 * width' verticalMargin);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: conveyerPath.ArcTo(width / 2' width / 2' 0' SKPathArcSize.Large'                                      SKPathDirection.Clockwise' 2 * width' verticalMargin);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: conveyerPath.LineTo(2 * width' info.Height - verticalMargin);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: conveyerPath.ArcTo(width / 2' width / 2' 0' SKPathArcSize.Large'                                      SKPathDirection.Clockwise' width' info.Height - verticalMargin);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: conveyerPath.ArcTo(width / 2' width / 2' 0' SKPathArcSize.Large'                                      SKPathDirection.Clockwise' width' info.Height - verticalMargin);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float length = 2 * (info.Height - 2 * verticalMargin) +                                 2 * ((float)Math.PI * width / 2);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float length = 2 * (info.Height - 2 * verticalMargin) +                                 2 * ((float)Math.PI * width / 2);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float length = 2 * (info.Height - 2 * verticalMargin) +                                 2 * ((float)Math.PI * width / 2);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float length = 2 * (info.Height - 2 * verticalMargin) +                                 2 * ((float)Math.PI * width / 2);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float spacing = length / (float)Math.Round(length / 200);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float t = (float)(timeSpan.TotalSeconds % 2 / 2);
Magic Number,SkiaSharpFormsDemos.Curves,ConveyorBeltPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ConveyorBeltPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float t = (float)(timeSpan.TotalSeconds % 2 / 2);
Magic Number,SkiaSharpFormsDemos.Curves,DashedHatchLinesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\DashedHatchLinesPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawOval(info.Width / 2' info.Height / 2'                               0.45f * info.Width' 0.45f * info.Height'                               paint);
Magic Number,SkiaSharpFormsDemos.Curves,DashedHatchLinesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\DashedHatchLinesPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawOval(info.Width / 2' info.Height / 2'                               0.45f * info.Width' 0.45f * info.Height'                               paint);
Magic Number,SkiaSharpFormsDemos.Curves,DashedHatchLinesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\DashedHatchLinesPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawOval(info.Width / 2' info.Height / 2'                               0.45f * info.Width' 0.45f * info.Height'                               paint);
Magic Number,SkiaSharpFormsDemos.Curves,DashedHatchLinesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\DashedHatchLinesPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawOval(info.Width / 2' info.Height / 2'                               0.45f * info.Width' 0.45f * info.Height'                               paint);
Magic Number,SkiaSharpFormsDemos.Curves,DotDashMorphPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\DotDashMorphPage.cs,OnAppearing,The following statement contains a magic number: Device.StartTimer(TimeSpan.FromSeconds(1f / 60)' () =>              {                  canvasView.InvalidateSurface();                  return pageIsActive;              });
Magic Number,SkiaSharpFormsDemos.Curves,DotDashMorphPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\DotDashMorphPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: ellipsePath.AddOval(new SKRect(50' 50' info.Width - 50' info.Height - 50));
Magic Number,SkiaSharpFormsDemos.Curves,DotDashMorphPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\DotDashMorphPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: ellipsePath.AddOval(new SKRect(50' 50' info.Width - 50' info.Height - 50));
Magic Number,SkiaSharpFormsDemos.Curves,DotDashMorphPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\DotDashMorphPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: ellipsePath.AddOval(new SKRect(50' 50' info.Width - 50' info.Height - 50));
Magic Number,SkiaSharpFormsDemos.Curves,DotDashMorphPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\DotDashMorphPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: ellipsePath.AddOval(new SKRect(50' 50' info.Width - 50' info.Height - 50));
Magic Number,SkiaSharpFormsDemos.Curves,DotDashMorphPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\DotDashMorphPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float t = (float)(timeSpan.TotalSeconds % 3 / 3);
Magic Number,SkiaSharpFormsDemos.Curves,DotDashMorphPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\DotDashMorphPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float t = (float)(timeSpan.TotalSeconds % 3 / 3);
Magic Number,SkiaSharpFormsDemos.Curves,DotDashMorphPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\DotDashMorphPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float tsub = 4 * t;
Magic Number,SkiaSharpFormsDemos.Curves,DotDashMorphPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\DotDashMorphPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: dashArray[1] = strokeWidth * 2 * tsub;
Magic Number,SkiaSharpFormsDemos.Curves,DotDashMorphPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\DotDashMorphPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: dashArray[2] = strokeWidth * (1 - tsub);
Magic Number,SkiaSharpFormsDemos.Curves,DotDashMorphPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\DotDashMorphPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: dashArray[3] = strokeWidth * 2;
Magic Number,SkiaSharpFormsDemos.Curves,DotDashMorphPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\DotDashMorphPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: dashArray[3] = strokeWidth * 2;
Magic Number,SkiaSharpFormsDemos.Curves,DotDashMorphPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\DotDashMorphPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: t < 0.25f
Magic Number,SkiaSharpFormsDemos.Curves,EllipticalArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\EllipticalArcPage.xaml.cs,EllipticalArcPage,The following statement contains a magic number: touchPoints = new TouchPoint[2];
Magic Number,SkiaSharpFormsDemos.Curves,EllipticalArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\EllipticalArcPage.xaml.cs,EllipticalArcPage,The following statement contains a magic number: TouchPoint touchPoint = new TouchPoint                  {                      Center = new SKPoint(300' 100 + 200 * i)                  };
Magic Number,SkiaSharpFormsDemos.Curves,EllipticalArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\EllipticalArcPage.xaml.cs,EllipticalArcPage,The following statement contains a magic number: TouchPoint touchPoint = new TouchPoint                  {                      Center = new SKPoint(300' 100 + 200 * i)                  };
Magic Number,SkiaSharpFormsDemos.Curves,EllipticalArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\EllipticalArcPage.xaml.cs,EllipticalArcPage,The following statement contains a magic number: TouchPoint touchPoint = new TouchPoint                  {                      Center = new SKPoint(300' 100 + 200 * i)                  };
Magic Number,SkiaSharpFormsDemos.Curves,EllipticalArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\EllipticalArcPage.xaml.cs,EllipticalArcPage,The following statement contains a magic number: i < 2
Magic Number,SkiaSharpFormsDemos.Curves,EllipticalArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\EllipticalArcPage.xaml.cs,EllipticalArcPage,The following statement contains a magic number: xRadiusSlider.Value = 150;
Magic Number,SkiaSharpFormsDemos.Curves,EllipticalArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\EllipticalArcPage.xaml.cs,EllipticalArcPage,The following statement contains a magic number: yRadiusSlider.Value = 125;
Magic Number,SkiaSharpFormsDemos.Curves,ExplodedPieChartPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ExplodedPieChartPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKPoint center = new SKPoint(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Curves,ExplodedPieChartPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ExplodedPieChartPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKPoint center = new SKPoint(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Curves,ExplodedPieChartPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ExplodedPieChartPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float explodeOffset = 50;
Magic Number,SkiaSharpFormsDemos.Curves,ExplodedPieChartPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ExplodedPieChartPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float radius = Math.Min(info.Width / 2' info.Height / 2) - 2 * explodeOffset;
Magic Number,SkiaSharpFormsDemos.Curves,ExplodedPieChartPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ExplodedPieChartPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float radius = Math.Min(info.Width / 2' info.Height / 2) - 2 * explodeOffset;
Magic Number,SkiaSharpFormsDemos.Curves,ExplodedPieChartPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ExplodedPieChartPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float radius = Math.Min(info.Width / 2' info.Height / 2) - 2 * explodeOffset;
Magic Number,SkiaSharpFormsDemos.Curves,ExplodedPieChartPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ExplodedPieChartPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float sweepAngle = 360f * item.Value / totalValues;
Magic Number,SkiaSharpFormsDemos.Curves,ExplodedPieChartPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ExplodedPieChartPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: outlinePaint.StrokeWidth = 5;
Magic Number,SkiaSharpFormsDemos.Curves,ExplodedPieChartPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ExplodedPieChartPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float angle = startAngle + 0.5f * sweepAngle;
Magic Number,SkiaSharpFormsDemos.Curves,ExplodedPieChartPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ExplodedPieChartPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float x = explodeOffset * (float)Math.Cos(Math.PI * angle / 180);
Magic Number,SkiaSharpFormsDemos.Curves,ExplodedPieChartPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\ExplodedPieChartPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float y = explodeOffset * (float)Math.Sin(Math.PI * angle / 180);
Magic Number,SkiaSharpFormsDemos.Curves,FourCircleIntersectClipPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\FourCircleIntersectClipPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float radius = 0.4f * size;
Magic Number,SkiaSharpFormsDemos.Curves,FourCircleIntersectClipPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\FourCircleIntersectClipPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float offset = size / 2 - radius;
Magic Number,SkiaSharpFormsDemos.Curves,FourCircleIntersectClipPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\FourCircleIntersectClipPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Curves,FourCircleIntersectClipPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\FourCircleIntersectClipPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Curves,FourLeafCloverPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\FourLeafCloverPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float xCenter = info.Width / 2;
Magic Number,SkiaSharpFormsDemos.Curves,FourLeafCloverPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\FourLeafCloverPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float yCenter = info.Height / 2;
Magic Number,SkiaSharpFormsDemos.Curves,FourLeafCloverPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\FourLeafCloverPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float radius = 0.24f * Math.Min(info.Width' info.Height);
Magic Number,SkiaSharpFormsDemos.Curves,FourLeafCloverPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\FourLeafCloverPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: circlePath.Transform(SKMatrix.MakeTranslation(2 * radius' 0));
Magic Number,SkiaSharpFormsDemos.Curves,FourLeafCloverPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\FourLeafCloverPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: circlePath.Transform(SKMatrix.MakeTranslation(0' 2 * radius));
Magic Number,SkiaSharpFormsDemos.Curves,FourLeafCloverPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\FourLeafCloverPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float x = 2 * radius * (float)Math.Cos(Math.PI * angle / 180);
Magic Number,SkiaSharpFormsDemos.Curves,FourLeafCloverPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\FourLeafCloverPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float x = 2 * radius * (float)Math.Cos(Math.PI * angle / 180);
Magic Number,SkiaSharpFormsDemos.Curves,FourLeafCloverPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\FourLeafCloverPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float y = 2 * radius * (float)Math.Sin(Math.PI * angle / 180);
Magic Number,SkiaSharpFormsDemos.Curves,FourLeafCloverPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\FourLeafCloverPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float y = 2 * radius * (float)Math.Sin(Math.PI * angle / 180);
Magic Number,SkiaSharpFormsDemos.Curves,FourLeafCloverPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\FourLeafCloverPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: strokePaint.StrokeWidth = 2;
Magic Number,SkiaSharpFormsDemos.Curves,GlobularTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\GlobularTextPage.cs,GlobularTextPage,The following statement contains a magic number: textPaint.TextSize = 100;
Magic Number,SkiaSharpFormsDemos.Curves,GlobularTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\GlobularTextPage.cs,GlobularTextPage,The following statement contains a magic number: globePath = textPath.CloneWithTransform((SKPoint pt) =>                      {                          double longitude = (Math.PI / textPathBounds.Width) *                                                   (pt.X - textPathBounds.Left) - Math.PI / 2;                          double latitude = (Math.PI / textPathBounds.Height) *                                                   (pt.Y - textPathBounds.Top) - Math.PI / 2;                            longitude *= 0.75;                          latitude *= 0.75;                            float x = (float)(Math.Cos(latitude) * Math.Sin(longitude));                          float y = (float)Math.Sin(latitude);                            return new SKPoint(x' y);                      });
Magic Number,SkiaSharpFormsDemos.Curves,GlobularTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\GlobularTextPage.cs,GlobularTextPage,The following statement contains a magic number: globePath = textPath.CloneWithTransform((SKPoint pt) =>                      {                          double longitude = (Math.PI / textPathBounds.Width) *                                                   (pt.X - textPathBounds.Left) - Math.PI / 2;                          double latitude = (Math.PI / textPathBounds.Height) *                                                   (pt.Y - textPathBounds.Top) - Math.PI / 2;                            longitude *= 0.75;                          latitude *= 0.75;                            float x = (float)(Math.Cos(latitude) * Math.Sin(longitude));                          float y = (float)Math.Sin(latitude);                            return new SKPoint(x' y);                      });
Magic Number,SkiaSharpFormsDemos.Curves,GlobularTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\GlobularTextPage.cs,GlobularTextPage,The following statement contains a magic number: globePath = textPath.CloneWithTransform((SKPoint pt) =>                      {                          double longitude = (Math.PI / textPathBounds.Width) *                                                   (pt.X - textPathBounds.Left) - Math.PI / 2;                          double latitude = (Math.PI / textPathBounds.Height) *                                                   (pt.Y - textPathBounds.Top) - Math.PI / 2;                            longitude *= 0.75;                          latitude *= 0.75;                            float x = (float)(Math.Cos(latitude) * Math.Sin(longitude));                          float y = (float)Math.Sin(latitude);                            return new SKPoint(x' y);                      });
Magic Number,SkiaSharpFormsDemos.Curves,GlobularTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\GlobularTextPage.cs,GlobularTextPage,The following statement contains a magic number: globePath = textPath.CloneWithTransform((SKPoint pt) =>                      {                          double longitude = (Math.PI / textPathBounds.Width) *                                                   (pt.X - textPathBounds.Left) - Math.PI / 2;                          double latitude = (Math.PI / textPathBounds.Height) *                                                   (pt.Y - textPathBounds.Top) - Math.PI / 2;                            longitude *= 0.75;                          latitude *= 0.75;                            float x = (float)(Math.Cos(latitude) * Math.Sin(longitude));                          float y = (float)Math.Sin(latitude);                            return new SKPoint(x' y);                      });
Magic Number,SkiaSharpFormsDemos.Curves,GlobularTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\GlobularTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: pathPaint.StrokeWidth = 3;
Magic Number,SkiaSharpFormsDemos.Curves,GlobularTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\GlobularTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Curves,GlobularTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\GlobularTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Curves,GlobularTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\GlobularTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Scale(0.45f * Math.Min(info.Width' info.Height));
Magic Number,SkiaSharpFormsDemos.Curves,HatchFillPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\HatchFillPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: roundRectPath.AddRoundedRect(                      new SKRect(50' 50' info.Width - 50' info.Height - 50)' 100' 100);
Magic Number,SkiaSharpFormsDemos.Curves,HatchFillPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\HatchFillPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: roundRectPath.AddRoundedRect(                      new SKRect(50' 50' info.Width - 50' info.Height - 50)' 100' 100);
Magic Number,SkiaSharpFormsDemos.Curves,HatchFillPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\HatchFillPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: roundRectPath.AddRoundedRect(                      new SKRect(50' 50' info.Width - 50' info.Height - 50)' 100' 100);
Magic Number,SkiaSharpFormsDemos.Curves,HatchFillPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\HatchFillPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: roundRectPath.AddRoundedRect(                      new SKRect(50' 50' info.Width - 50' info.Height - 50)' 100' 100);
Magic Number,SkiaSharpFormsDemos.Curves,HatchFillPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\HatchFillPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: roundRectPath.AddRoundedRect(                      new SKRect(50' 50' info.Width - 50' info.Height - 50)' 100' 100);
Magic Number,SkiaSharpFormsDemos.Curves,HatchFillPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\HatchFillPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: roundRectPath.AddRoundedRect(                      new SKRect(50' 50' info.Width - 50' info.Height - 50)' 100' 100);
Magic Number,SkiaSharpFormsDemos.Curves,JitterExperimentPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\JitterExperimentPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.StrokeWidth = 5;
Magic Number,SkiaSharpFormsDemos.Curves,JitterExperimentPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\JitterExperimentPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKRect rect = new SKRect(100' 100' info.Width - 100' info.Height - 100);
Magic Number,SkiaSharpFormsDemos.Curves,JitterExperimentPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\JitterExperimentPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKRect rect = new SKRect(100' 100' info.Width - 100' info.Height - 100);
Magic Number,SkiaSharpFormsDemos.Curves,JitterExperimentPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\JitterExperimentPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKRect rect = new SKRect(100' 100' info.Width - 100' info.Height - 100);
Magic Number,SkiaSharpFormsDemos.Curves,JitterExperimentPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\JitterExperimentPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKRect rect = new SKRect(100' 100' info.Width - 100' info.Height - 100);
Magic Number,SkiaSharpFormsDemos.Curves,JitterTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\JitterTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: textPaint.PathEffect = SKPathEffect.CreateDiscrete(3f' 10f);
Magic Number,SkiaSharpFormsDemos.Curves,JitterTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\JitterTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: textPaint.PathEffect = SKPathEffect.CreateDiscrete(3f' 10f);
Magic Number,SkiaSharpFormsDemos.Curves,JitterTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\JitterTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: textPaint.TextSize *= 0.95f * info.Width / textWidth;
Magic Number,SkiaSharpFormsDemos.Curves,JitterTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\JitterTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float xText = info.Width / 2 - textBounds.MidX;
Magic Number,SkiaSharpFormsDemos.Curves,JitterTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\JitterTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float yText = info.Height / 2 - textBounds.MidY;
Magic Number,SkiaSharpFormsDemos.Curves,LinkedChainPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\LinkedChainPage.cs,LinkedChainPage,The following statement contains a magic number: linkPath.AddArc(outer' 55' 160);
Magic Number,SkiaSharpFormsDemos.Curves,LinkedChainPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\LinkedChainPage.cs,LinkedChainPage,The following statement contains a magic number: linkPath.AddArc(outer' 55' 160);
Magic Number,SkiaSharpFormsDemos.Curves,LinkedChainPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\LinkedChainPage.cs,LinkedChainPage,The following statement contains a magic number: linkPath.ArcTo(inner' 215' -160' false);
Magic Number,SkiaSharpFormsDemos.Curves,LinkedChainPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\LinkedChainPage.cs,LinkedChainPage,The following statement contains a magic number: linkPath.ArcTo(inner' 215' -160' false);
Magic Number,SkiaSharpFormsDemos.Curves,LinkedChainPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\LinkedChainPage.cs,LinkedChainPage,The following statement contains a magic number: linkPath.AddArc(outer' 235' 160);
Magic Number,SkiaSharpFormsDemos.Curves,LinkedChainPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\LinkedChainPage.cs,LinkedChainPage,The following statement contains a magic number: linkPath.AddArc(outer' 235' 160);
Magic Number,SkiaSharpFormsDemos.Curves,LinkedChainPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\LinkedChainPage.cs,LinkedChainPage,The following statement contains a magic number: linkPath.ArcTo(inner' 395' -160' false);
Magic Number,SkiaSharpFormsDemos.Curves,LinkedChainPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\LinkedChainPage.cs,LinkedChainPage,The following statement contains a magic number: linkPath.ArcTo(inner' 395' -160' false);
Magic Number,SkiaSharpFormsDemos.Curves,LinkedChainPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\LinkedChainPage.cs,LinkedChainPage,The following statement contains a magic number: linksPaint.PathEffect =                       SKPathEffect.Create1DPath(linkPath' 1.3f * linkRadius' 0'                                                 SKPath1DPathEffectStyle.Rotate);
Magic Number,SkiaSharpFormsDemos.Curves,LinkedChainPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\LinkedChainPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float yOffset = catenary(optA' -width / 2);
Magic Number,SkiaSharpFormsDemos.Curves,LinkedChainPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\LinkedChainPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: points[x] = new SKPoint(x' yOffset - catenary(optA' x - width / 2));
Magic Number,SkiaSharpFormsDemos.Curves,LinkedChainPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\LinkedChainPage.cs,FindOptimumA,The following statement contains a magic number: Func<float' float> left = (float a) => (float)Math.Cosh(width / 2 / a);
Magic Number,SkiaSharpFormsDemos.Curves,LinkedChainPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\LinkedChainPage.cs,FindOptimumA,The following statement contains a magic number: float ltA = 10000;
Magic Number,SkiaSharpFormsDemos.Curves,LinkedChainPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\LinkedChainPage.cs,FindOptimumA,The following statement contains a magic number: float avgA = (gtA + ltA) / 2;
Magic Number,SkiaSharpFormsDemos.Curves,LinkedChainPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\LinkedChainPage.cs,FindOptimumA,The following statement contains a magic number: Math.Abs(gtA - ltA) > 0.1f
Magic Number,SkiaSharpFormsDemos.Curves,LinkedChainPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\LinkedChainPage.cs,FindOptimumA,The following statement contains a magic number: return (gtA + ltA) / 2;
Magic Number,SkiaSharpFormsDemos.Curves,MonkeyThroughKeyholePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\MonkeyThroughKeyholePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Curves,MonkeyThroughKeyholePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\MonkeyThroughKeyholePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Curves,MonkeyThroughKeyholePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\MonkeyThroughKeyholePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Scale(0.98f * info.Height / bounds.Height);
Magic Number,SkiaSharpFormsDemos.Curves,MonkeyThroughKeyholePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\MonkeyThroughKeyholePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawBitmap(bitmap'                   new SKRect((info.Width - info.Height) / 2' 0'                             (info.Width + info.Height) / 2' info.Height));
Magic Number,SkiaSharpFormsDemos.Curves,MonkeyThroughKeyholePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\MonkeyThroughKeyholePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawBitmap(bitmap'                   new SKRect((info.Width - info.Height) / 2' 0'                             (info.Width + info.Height) / 2' info.Height));
Magic Number,SkiaSharpFormsDemos.Curves,OneDimensionalPathEffectPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\OneDimensionalPathEffectPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.CubicTo(new SKPoint(2 * info.Width' info.Height)'                               new SKPoint(-info.Width' info.Height)'                               new SKPoint(info.Width' 0));
Magic Number,SkiaSharpFormsDemos.Curves,PathDataCatPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PathDataCatPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Curves,PathDataCatPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PathDataCatPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Curves,PathDataCatPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PathDataCatPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Scale(0.9f * Math.Min(info.Width / bounds.Width'                                           info.Height / bounds.Height));
Magic Number,SkiaSharpFormsDemos.Curves,PathDataHelloPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PathDataHelloPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Curves,PathDataHelloPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PathDataHelloPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Curves,PathExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PathExtensions.cs,CloneWithTransform,The following statement contains a magic number: SKPoint[] points = new SKPoint[4];
Magic Number,SkiaSharpFormsDemos.Curves,PathExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PathExtensions.cs,CloneWithTransform,The following statement contains a magic number: switch (pathVerb)                      {                          case SKPathVerb.Move:                              pathOut.MoveTo(transform(points[0]));                              firstPoint = lastPoint = points[0];                              break;                            case SKPathVerb.Line:                              SKPoint[] linePoints = Interpolate(points[0]' points[1]);                                foreach (SKPoint pt in linePoints)                              {                                  pathOut.LineTo(transform(pt));                              }                                lastPoint = points[1];                              break;                            case SKPathVerb.Cubic:                              SKPoint[] cubicPoints = FlattenCubic(points[0]' points[1]' points[2]' points[3]);                                foreach (SKPoint pt in cubicPoints)                              {                                  pathOut.LineTo(transform(pt));                              }                                lastPoint = points[3];                              break;                            case SKPathVerb.Quad:                              SKPoint[] quadPoints = FlattenQuadratic(points[0]' points[1]' points[2]);                                foreach (SKPoint pt in quadPoints)                              {                                  pathOut.LineTo(transform(pt));                              }                                lastPoint = points[2];                              break;                            case SKPathVerb.Conic:                              SKPoint[] conicPoints = FlattenConic(points[0]' points[1]' points[2]' iterator.ConicWeight());                                foreach (SKPoint pt in conicPoints)                              {                                  pathOut.LineTo(transform(pt));                              }                                lastPoint = points[2];                              break;                            case SKPathVerb.Close:                              SKPoint[] closePoints = Interpolate(lastPoint' firstPoint);                                foreach (SKPoint pt in closePoints)                              {                                  pathOut.LineTo(transform(pt));                              }                                firstPoint = lastPoint = new SKPoint(0' 0);                              pathOut.Close();                              break;                      }
Magic Number,SkiaSharpFormsDemos.Curves,PathExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PathExtensions.cs,CloneWithTransform,The following statement contains a magic number: switch (pathVerb)                      {                          case SKPathVerb.Move:                              pathOut.MoveTo(transform(points[0]));                              firstPoint = lastPoint = points[0];                              break;                            case SKPathVerb.Line:                              SKPoint[] linePoints = Interpolate(points[0]' points[1]);                                foreach (SKPoint pt in linePoints)                              {                                  pathOut.LineTo(transform(pt));                              }                                lastPoint = points[1];                              break;                            case SKPathVerb.Cubic:                              SKPoint[] cubicPoints = FlattenCubic(points[0]' points[1]' points[2]' points[3]);                                foreach (SKPoint pt in cubicPoints)                              {                                  pathOut.LineTo(transform(pt));                              }                                lastPoint = points[3];                              break;                            case SKPathVerb.Quad:                              SKPoint[] quadPoints = FlattenQuadratic(points[0]' points[1]' points[2]);                                foreach (SKPoint pt in quadPoints)                              {                                  pathOut.LineTo(transform(pt));                              }                                lastPoint = points[2];                              break;                            case SKPathVerb.Conic:                              SKPoint[] conicPoints = FlattenConic(points[0]' points[1]' points[2]' iterator.ConicWeight());                                foreach (SKPoint pt in conicPoints)                              {                                  pathOut.LineTo(transform(pt));                              }                                lastPoint = points[2];                              break;                            case SKPathVerb.Close:                              SKPoint[] closePoints = Interpolate(lastPoint' firstPoint);                                foreach (SKPoint pt in closePoints)                              {                                  pathOut.LineTo(transform(pt));                              }                                firstPoint = lastPoint = new SKPoint(0' 0);                              pathOut.Close();                              break;                      }
Magic Number,SkiaSharpFormsDemos.Curves,PathExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PathExtensions.cs,CloneWithTransform,The following statement contains a magic number: switch (pathVerb)                      {                          case SKPathVerb.Move:                              pathOut.MoveTo(transform(points[0]));                              firstPoint = lastPoint = points[0];                              break;                            case SKPathVerb.Line:                              SKPoint[] linePoints = Interpolate(points[0]' points[1]);                                foreach (SKPoint pt in linePoints)                              {                                  pathOut.LineTo(transform(pt));                              }                                lastPoint = points[1];                              break;                            case SKPathVerb.Cubic:                              SKPoint[] cubicPoints = FlattenCubic(points[0]' points[1]' points[2]' points[3]);                                foreach (SKPoint pt in cubicPoints)                              {                                  pathOut.LineTo(transform(pt));                              }                                lastPoint = points[3];                              break;                            case SKPathVerb.Quad:                              SKPoint[] quadPoints = FlattenQuadratic(points[0]' points[1]' points[2]);                                foreach (SKPoint pt in quadPoints)                              {                                  pathOut.LineTo(transform(pt));                              }                                lastPoint = points[2];                              break;                            case SKPathVerb.Conic:                              SKPoint[] conicPoints = FlattenConic(points[0]' points[1]' points[2]' iterator.ConicWeight());                                foreach (SKPoint pt in conicPoints)                              {                                  pathOut.LineTo(transform(pt));                              }                                lastPoint = points[2];                              break;                            case SKPathVerb.Close:                              SKPoint[] closePoints = Interpolate(lastPoint' firstPoint);                                foreach (SKPoint pt in closePoints)                              {                                  pathOut.LineTo(transform(pt));                              }                                firstPoint = lastPoint = new SKPoint(0' 0);                              pathOut.Close();                              break;                      }
Magic Number,SkiaSharpFormsDemos.Curves,PathExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PathExtensions.cs,CloneWithTransform,The following statement contains a magic number: switch (pathVerb)                      {                          case SKPathVerb.Move:                              pathOut.MoveTo(transform(points[0]));                              firstPoint = lastPoint = points[0];                              break;                            case SKPathVerb.Line:                              SKPoint[] linePoints = Interpolate(points[0]' points[1]);                                foreach (SKPoint pt in linePoints)                              {                                  pathOut.LineTo(transform(pt));                              }                                lastPoint = points[1];                              break;                            case SKPathVerb.Cubic:                              SKPoint[] cubicPoints = FlattenCubic(points[0]' points[1]' points[2]' points[3]);                                foreach (SKPoint pt in cubicPoints)                              {                                  pathOut.LineTo(transform(pt));                              }                                lastPoint = points[3];                              break;                            case SKPathVerb.Quad:                              SKPoint[] quadPoints = FlattenQuadratic(points[0]' points[1]' points[2]);                                foreach (SKPoint pt in quadPoints)                              {                                  pathOut.LineTo(transform(pt));                              }                                lastPoint = points[2];                              break;                            case SKPathVerb.Conic:                              SKPoint[] conicPoints = FlattenConic(points[0]' points[1]' points[2]' iterator.ConicWeight());                                foreach (SKPoint pt in conicPoints)                              {                                  pathOut.LineTo(transform(pt));                              }                                lastPoint = points[2];                              break;                            case SKPathVerb.Close:                              SKPoint[] closePoints = Interpolate(lastPoint' firstPoint);                                foreach (SKPoint pt in closePoints)                              {                                  pathOut.LineTo(transform(pt));                              }                                firstPoint = lastPoint = new SKPoint(0' 0);                              pathOut.Close();                              break;                      }
Magic Number,SkiaSharpFormsDemos.Curves,PathExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PathExtensions.cs,CloneWithTransform,The following statement contains a magic number: switch (pathVerb)                      {                          case SKPathVerb.Move:                              pathOut.MoveTo(transform(points[0]));                              firstPoint = lastPoint = points[0];                              break;                            case SKPathVerb.Line:                              SKPoint[] linePoints = Interpolate(points[0]' points[1]);                                foreach (SKPoint pt in linePoints)                              {                                  pathOut.LineTo(transform(pt));                              }                                lastPoint = points[1];                              break;                            case SKPathVerb.Cubic:                              SKPoint[] cubicPoints = FlattenCubic(points[0]' points[1]' points[2]' points[3]);                                foreach (SKPoint pt in cubicPoints)                              {                                  pathOut.LineTo(transform(pt));                              }                                lastPoint = points[3];                              break;                            case SKPathVerb.Quad:                              SKPoint[] quadPoints = FlattenQuadratic(points[0]' points[1]' points[2]);                                foreach (SKPoint pt in quadPoints)                              {                                  pathOut.LineTo(transform(pt));                              }                                lastPoint = points[2];                              break;                            case SKPathVerb.Conic:                              SKPoint[] conicPoints = FlattenConic(points[0]' points[1]' points[2]' iterator.ConicWeight());                                foreach (SKPoint pt in conicPoints)                              {                                  pathOut.LineTo(transform(pt));                              }                                lastPoint = points[2];                              break;                            case SKPathVerb.Close:                              SKPoint[] closePoints = Interpolate(lastPoint' firstPoint);                                foreach (SKPoint pt in closePoints)                              {                                  pathOut.LineTo(transform(pt));                              }                                firstPoint = lastPoint = new SKPoint(0' 0);                              pathOut.Close();                              break;                      }
Magic Number,SkiaSharpFormsDemos.Curves,PathExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PathExtensions.cs,CloneWithTransform,The following statement contains a magic number: switch (pathVerb)                      {                          case SKPathVerb.Move:                              pathOut.MoveTo(transform(points[0]));                              firstPoint = lastPoint = points[0];                              break;                            case SKPathVerb.Line:                              SKPoint[] linePoints = Interpolate(points[0]' points[1]);                                foreach (SKPoint pt in linePoints)                              {                                  pathOut.LineTo(transform(pt));                              }                                lastPoint = points[1];                              break;                            case SKPathVerb.Cubic:                              SKPoint[] cubicPoints = FlattenCubic(points[0]' points[1]' points[2]' points[3]);                                foreach (SKPoint pt in cubicPoints)                              {                                  pathOut.LineTo(transform(pt));                              }                                lastPoint = points[3];                              break;                            case SKPathVerb.Quad:                              SKPoint[] quadPoints = FlattenQuadratic(points[0]' points[1]' points[2]);                                foreach (SKPoint pt in quadPoints)                              {                                  pathOut.LineTo(transform(pt));                              }                                lastPoint = points[2];                              break;                            case SKPathVerb.Conic:                              SKPoint[] conicPoints = FlattenConic(points[0]' points[1]' points[2]' iterator.ConicWeight());                                foreach (SKPoint pt in conicPoints)                              {                                  pathOut.LineTo(transform(pt));                              }                                lastPoint = points[2];                              break;                            case SKPathVerb.Close:                              SKPoint[] closePoints = Interpolate(lastPoint' firstPoint);                                foreach (SKPoint pt in closePoints)                              {                                  pathOut.LineTo(transform(pt));                              }                                firstPoint = lastPoint = new SKPoint(0' 0);                              pathOut.Close();                              break;                      }
Magic Number,SkiaSharpFormsDemos.Curves,PathExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PathExtensions.cs,CloneWithTransform,The following statement contains a magic number: switch (pathVerb)                      {                          case SKPathVerb.Move:                              pathOut.MoveTo(transform(points[0]));                              firstPoint = lastPoint = points[0];                              break;                            case SKPathVerb.Line:                              SKPoint[] linePoints = Interpolate(points[0]' points[1]);                                foreach (SKPoint pt in linePoints)                              {                                  pathOut.LineTo(transform(pt));                              }                                lastPoint = points[1];                              break;                            case SKPathVerb.Cubic:                              SKPoint[] cubicPoints = FlattenCubic(points[0]' points[1]' points[2]' points[3]);                                foreach (SKPoint pt in cubicPoints)                              {                                  pathOut.LineTo(transform(pt));                              }                                lastPoint = points[3];                              break;                            case SKPathVerb.Quad:                              SKPoint[] quadPoints = FlattenQuadratic(points[0]' points[1]' points[2]);                                foreach (SKPoint pt in quadPoints)                              {                                  pathOut.LineTo(transform(pt));                              }                                lastPoint = points[2];                              break;                            case SKPathVerb.Conic:                              SKPoint[] conicPoints = FlattenConic(points[0]' points[1]' points[2]' iterator.ConicWeight());                                foreach (SKPoint pt in conicPoints)                              {                                  pathOut.LineTo(transform(pt));                              }                                lastPoint = points[2];                              break;                            case SKPathVerb.Close:                              SKPoint[] closePoints = Interpolate(lastPoint' firstPoint);                                foreach (SKPoint pt in closePoints)                              {                                  pathOut.LineTo(transform(pt));                              }                                firstPoint = lastPoint = new SKPoint(0' 0);                              pathOut.Close();                              break;                      }
Magic Number,SkiaSharpFormsDemos.Curves,PathExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PathExtensions.cs,FlattenCubic,The following statement contains a magic number: float x = (1 - t) * (1 - t) * (1 - t) * pt0.X +                            3 * t * (1 - t) * (1 - t) * pt1.X +                            3 * t * t * (1 - t) * pt2.X +                            t * t * t * pt3.X;
Magic Number,SkiaSharpFormsDemos.Curves,PathExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PathExtensions.cs,FlattenCubic,The following statement contains a magic number: float x = (1 - t) * (1 - t) * (1 - t) * pt0.X +                            3 * t * (1 - t) * (1 - t) * pt1.X +                            3 * t * t * (1 - t) * pt2.X +                            t * t * t * pt3.X;
Magic Number,SkiaSharpFormsDemos.Curves,PathExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PathExtensions.cs,FlattenCubic,The following statement contains a magic number: float y = (1 - t) * (1 - t) * (1 - t) * pt0.Y +                            3 * t * (1 - t) * (1 - t) * pt1.Y +                            3 * t * t * (1 - t) * pt2.Y +                            t * t * t * pt3.Y;
Magic Number,SkiaSharpFormsDemos.Curves,PathExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PathExtensions.cs,FlattenCubic,The following statement contains a magic number: float y = (1 - t) * (1 - t) * (1 - t) * pt0.Y +                            3 * t * (1 - t) * (1 - t) * pt1.Y +                            3 * t * t * (1 - t) * pt2.Y +                            t * t * t * pt3.Y;
Magic Number,SkiaSharpFormsDemos.Curves,PathExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PathExtensions.cs,FlattenQuadratic,The following statement contains a magic number: float x = (1 - t) * (1 - t) * pt0.X + 2 * t * (1 - t) * pt1.X + t * t * pt2.X;
Magic Number,SkiaSharpFormsDemos.Curves,PathExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PathExtensions.cs,FlattenQuadratic,The following statement contains a magic number: float y = (1 - t) * (1 - t) * pt0.Y + 2 * t * (1 - t) * pt1.Y + t * t * pt2.Y;
Magic Number,SkiaSharpFormsDemos.Curves,PathExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PathExtensions.cs,FlattenConic,The following statement contains a magic number: float denominator = (1 - t) * (1 - t) + 2 * weight * t * (1 - t) + t * t;
Magic Number,SkiaSharpFormsDemos.Curves,PathExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PathExtensions.cs,FlattenConic,The following statement contains a magic number: float x = (1 - t) * (1 - t) * pt0.X + 2 * weight * t * (1 - t) * pt1.X + t * t * pt2.X;
Magic Number,SkiaSharpFormsDemos.Curves,PathExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PathExtensions.cs,FlattenConic,The following statement contains a magic number: float y = (1 - t) * (1 - t) * pt0.Y + 2 * weight * t * (1 - t) * pt1.Y + t * t * pt2.Y;
Magic Number,SkiaSharpFormsDemos.Curves,PathExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PathExtensions.cs,Length,The following statement contains a magic number: return Math.Sqrt(Math.Pow(pt1.X - pt0.X' 2) + Math.Pow(pt1.Y - pt0.Y' 2));
Magic Number,SkiaSharpFormsDemos.Curves,PathExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PathExtensions.cs,Length,The following statement contains a magic number: return Math.Sqrt(Math.Pow(pt1.X - pt0.X' 2) + Math.Pow(pt1.Y - pt0.Y' 2));
Magic Number,SkiaSharpFormsDemos.Curves,PathLengthPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PathLengthPage.xaml.cs,PathLengthPage,The following statement contains a magic number: touchPoints = new TouchPoint[4];
Magic Number,SkiaSharpFormsDemos.Curves,PathLengthPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PathLengthPage.xaml.cs,PathLengthPage,The following statement contains a magic number: TouchPoint touchPoint = new TouchPoint                  {                      Center = new SKPoint(100 + 200 * (i % 2)'                                           100 + 200 * i)                  };
Magic Number,SkiaSharpFormsDemos.Curves,PathLengthPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PathLengthPage.xaml.cs,PathLengthPage,The following statement contains a magic number: TouchPoint touchPoint = new TouchPoint                  {                      Center = new SKPoint(100 + 200 * (i % 2)'                                           100 + 200 * i)                  };
Magic Number,SkiaSharpFormsDemos.Curves,PathLengthPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PathLengthPage.xaml.cs,PathLengthPage,The following statement contains a magic number: TouchPoint touchPoint = new TouchPoint                  {                      Center = new SKPoint(100 + 200 * (i % 2)'                                           100 + 200 * i)                  };
Magic Number,SkiaSharpFormsDemos.Curves,PathLengthPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PathLengthPage.xaml.cs,PathLengthPage,The following statement contains a magic number: TouchPoint touchPoint = new TouchPoint                  {                      Center = new SKPoint(100 + 200 * (i % 2)'                                           100 + 200 * i)                  };
Magic Number,SkiaSharpFormsDemos.Curves,PathLengthPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PathLengthPage.xaml.cs,PathLengthPage,The following statement contains a magic number: TouchPoint touchPoint = new TouchPoint                  {                      Center = new SKPoint(100 + 200 * (i % 2)'                                           100 + 200 * i)                  };
Magic Number,SkiaSharpFormsDemos.Curves,PathLengthPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PathLengthPage.xaml.cs,PathLengthPage,The following statement contains a magic number: i < 4
Magic Number,SkiaSharpFormsDemos.Curves,PathLengthPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PathLengthPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.CubicTo(touchPoints[1].Center'                               touchPoints[2].Center'                               touchPoints[3].Center);
Magic Number,SkiaSharpFormsDemos.Curves,PathLengthPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PathLengthPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.CubicTo(touchPoints[1].Center'                               touchPoints[2].Center'                               touchPoints[3].Center);
Magic Number,SkiaSharpFormsDemos.Curves,PathLengthPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PathLengthPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: textPaint.TextSize = pathMeasure.Length / baseTextWidth * 10;
Magic Number,SkiaSharpFormsDemos.Curves,PathTileFillPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PathTileFillPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawRoundRect(                          new SKRect(50' 50' info.Width - 50' info.Height - 50)'                           100' 100' paint);
Magic Number,SkiaSharpFormsDemos.Curves,PathTileFillPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PathTileFillPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawRoundRect(                          new SKRect(50' 50' info.Width - 50' info.Height - 50)'                           100' 100' paint);
Magic Number,SkiaSharpFormsDemos.Curves,PathTileFillPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PathTileFillPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawRoundRect(                          new SKRect(50' 50' info.Width - 50' info.Height - 50)'                           100' 100' paint);
Magic Number,SkiaSharpFormsDemos.Curves,PathTileFillPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PathTileFillPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawRoundRect(                          new SKRect(50' 50' info.Width - 50' info.Height - 50)'                           100' 100' paint);
Magic Number,SkiaSharpFormsDemos.Curves,PathTileFillPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PathTileFillPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawRoundRect(                          new SKRect(50' 50' info.Width - 50' info.Height - 50)'                           100' 100' paint);
Magic Number,SkiaSharpFormsDemos.Curves,PathTileFillPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PathTileFillPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawRoundRect(                          new SKRect(50' 50' info.Width - 50' info.Height - 50)'                           100' 100' paint);
Magic Number,SkiaSharpFormsDemos.Curves,PrettyAnalogClockPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PrettyAnalogClockPage.cs,OnAppearing,The following statement contains a magic number: Device.StartTimer(TimeSpan.FromSeconds(1f / 60)' () =>              {                  canvasView.InvalidateSurface();                  return pageIsActive;              });
Magic Number,SkiaSharpFormsDemos.Curves,PrettyAnalogClockPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PrettyAnalogClockPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Curves,PrettyAnalogClockPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PrettyAnalogClockPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Curves,PrettyAnalogClockPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PrettyAnalogClockPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Scale(Math.Min(info.Width / 200' info.Height / 200));
Magic Number,SkiaSharpFormsDemos.Curves,PrettyAnalogClockPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PrettyAnalogClockPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Scale(Math.Min(info.Width / 200' info.Height / 200));
Magic Number,SkiaSharpFormsDemos.Curves,PrettyAnalogClockPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PrettyAnalogClockPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKRect rect = new SKRect(-90' -90' 90' 90);
Magic Number,SkiaSharpFormsDemos.Curves,PrettyAnalogClockPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PrettyAnalogClockPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKRect rect = new SKRect(-90' -90' 90' 90);
Magic Number,SkiaSharpFormsDemos.Curves,PrettyAnalogClockPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PrettyAnalogClockPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKRect rect = new SKRect(-90' -90' 90' 90);
Magic Number,SkiaSharpFormsDemos.Curves,PrettyAnalogClockPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PrettyAnalogClockPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKRect rect = new SKRect(-90' -90' 90' 90);
Magic Number,SkiaSharpFormsDemos.Curves,PrettyAnalogClockPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PrettyAnalogClockPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.RotateDegrees(30 * dateTime.Hour + dateTime.Minute / 2f);
Magic Number,SkiaSharpFormsDemos.Curves,PrettyAnalogClockPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PrettyAnalogClockPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.RotateDegrees(30 * dateTime.Hour + dateTime.Minute / 2f);
Magic Number,SkiaSharpFormsDemos.Curves,PrettyAnalogClockPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PrettyAnalogClockPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.RotateDegrees(6 * dateTime.Minute + dateTime.Second / 10f);
Magic Number,SkiaSharpFormsDemos.Curves,PrettyAnalogClockPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PrettyAnalogClockPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.RotateDegrees(6 * dateTime.Minute + dateTime.Second / 10f);
Magic Number,SkiaSharpFormsDemos.Curves,PrettyAnalogClockPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PrettyAnalogClockPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: double t = dateTime.Millisecond / 1000.0;
Magic Number,SkiaSharpFormsDemos.Curves,PrettyAnalogClockPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PrettyAnalogClockPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: t = 0.5 * Easing.SpringIn.Ease(t / 0.5);
Magic Number,SkiaSharpFormsDemos.Curves,PrettyAnalogClockPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PrettyAnalogClockPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: t = 0.5 * Easing.SpringIn.Ease(t / 0.5);
Magic Number,SkiaSharpFormsDemos.Curves,PrettyAnalogClockPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PrettyAnalogClockPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: t < 0.5
Magic Number,SkiaSharpFormsDemos.Curves,PrettyAnalogClockPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PrettyAnalogClockPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.RotateDegrees(6 * (dateTime.Second + (float)t));
Magic Number,SkiaSharpFormsDemos.Curves,QuadraticCurvePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\QuadraticCurvePage.xaml.cs,QuadraticCurvePage,The following statement contains a magic number: touchPoints = new TouchPoint[3];
Magic Number,SkiaSharpFormsDemos.Curves,QuadraticCurvePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\QuadraticCurvePage.xaml.cs,QuadraticCurvePage,The following statement contains a magic number: TouchPoint touchPoint = new TouchPoint                  {                      Center = new SKPoint(100 + 200 * i'                                           100 + (i == 1 ? 300 : 0))                  };
Magic Number,SkiaSharpFormsDemos.Curves,QuadraticCurvePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\QuadraticCurvePage.xaml.cs,QuadraticCurvePage,The following statement contains a magic number: TouchPoint touchPoint = new TouchPoint                  {                      Center = new SKPoint(100 + 200 * i'                                           100 + (i == 1 ? 300 : 0))                  };
Magic Number,SkiaSharpFormsDemos.Curves,QuadraticCurvePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\QuadraticCurvePage.xaml.cs,QuadraticCurvePage,The following statement contains a magic number: TouchPoint touchPoint = new TouchPoint                  {                      Center = new SKPoint(100 + 200 * i'                                           100 + (i == 1 ? 300 : 0))                  };
Magic Number,SkiaSharpFormsDemos.Curves,QuadraticCurvePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\QuadraticCurvePage.xaml.cs,QuadraticCurvePage,The following statement contains a magic number: TouchPoint touchPoint = new TouchPoint                  {                      Center = new SKPoint(100 + 200 * i'                                           100 + (i == 1 ? 300 : 0))                  };
Magic Number,SkiaSharpFormsDemos.Curves,QuadraticCurvePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\QuadraticCurvePage.xaml.cs,QuadraticCurvePage,The following statement contains a magic number: i < 3
Magic Number,SkiaSharpFormsDemos.Curves,QuadraticCurvePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\QuadraticCurvePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.QuadTo(touchPoints[1].Center'                              touchPoints[2].Center);
Magic Number,SkiaSharpFormsDemos.Curves,QuadraticCurvePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\QuadraticCurvePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawLine(touchPoints[1].Center.X'                              touchPoints[1].Center.Y'                              touchPoints[2].Center.X'                              touchPoints[2].Center.Y' dottedStrokePaint);
Magic Number,SkiaSharpFormsDemos.Curves,QuadraticCurvePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\QuadraticCurvePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawLine(touchPoints[1].Center.X'                              touchPoints[1].Center.Y'                              touchPoints[2].Center.X'                              touchPoints[2].Center.Y' dottedStrokePaint);
Magic Number,SkiaSharpFormsDemos.Curves,RegionOperationsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\RegionOperationsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float width = info.Height > info.Width ? info.Width / 2 : info.Width / 3;
Magic Number,SkiaSharpFormsDemos.Curves,RegionOperationsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\RegionOperationsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float width = info.Height > info.Width ? info.Width / 2 : info.Width / 3;
Magic Number,SkiaSharpFormsDemos.Curves,RegionOperationsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\RegionOperationsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float height = info.Height > info.Width ? info.Height / 3 : info.Height / 2;
Magic Number,SkiaSharpFormsDemos.Curves,RegionOperationsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\RegionOperationsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float height = info.Height > info.Width ? info.Height / 3 : info.Height / 2;
Magic Number,SkiaSharpFormsDemos.Curves,RegionOperationsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\RegionOperationsPage.cs,DisplayClipOp,The following statement contains a magic number: float radius = 0.9f * Math.Min(rect.Width / 3' rect.Height / 2);
Magic Number,SkiaSharpFormsDemos.Curves,RegionOperationsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\RegionOperationsPage.cs,DisplayClipOp,The following statement contains a magic number: float radius = 0.9f * Math.Min(rect.Width / 3' rect.Height / 2);
Magic Number,SkiaSharpFormsDemos.Curves,RegionOperationsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\RegionOperationsPage.cs,DisplayClipOp,The following statement contains a magic number: float radius = 0.9f * Math.Min(rect.Width / 3' rect.Height / 2);
Magic Number,SkiaSharpFormsDemos.Curves,RegionOperationsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\RegionOperationsPage.cs,DisplayClipOp,The following statement contains a magic number: path1.AddCircle(xCenter - radius / 2' yCenter' radius);
Magic Number,SkiaSharpFormsDemos.Curves,RegionOperationsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\RegionOperationsPage.cs,DisplayClipOp,The following statement contains a magic number: path2.AddCircle(xCenter + radius / 2' yCenter' radius);
Magic Number,SkiaSharpFormsDemos.Curves,RegionPaintPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\RegionPaintPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: int radius = 10;
Magic Number,SkiaSharpFormsDemos.Curves,RegionPaintPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\RegionPaintPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Curves,RegionPaintPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\RegionPaintPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Curves,RegionPaintPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\RegionPaintPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Scale(Math.Min(info.Width / 2' info.Height / 2) / radius);
Magic Number,SkiaSharpFormsDemos.Curves,RegionPaintPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\RegionPaintPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Scale(Math.Min(info.Width / 2' info.Height / 2) / radius);
Magic Number,SkiaSharpFormsDemos.Curves,RegionPaintPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\RegionPaintPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: strokePaint.StrokeWidth = 0.1f;
Magic Number,SkiaSharpFormsDemos.Curves,RoundedHeptagonPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\RoundedHeptagonPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float cornerRadius = 100;
Magic Number,SkiaSharpFormsDemos.Curves,RoundedHeptagonPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\RoundedHeptagonPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: int numVertices = 7;
Magic Number,SkiaSharpFormsDemos.Curves,RoundedHeptagonPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\RoundedHeptagonPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float radius = 0.45f * Math.Min(info.Width' info.Height);
Magic Number,SkiaSharpFormsDemos.Curves,RoundedHeptagonPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\RoundedHeptagonPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: double vertexAngle = -0.5f * Math.PI;
Magic Number,SkiaSharpFormsDemos.Curves,RoundedHeptagonPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\RoundedHeptagonPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: vertexAngle += 2 * Math.PI / numVertices;
Magic Number,SkiaSharpFormsDemos.Curves,RoundedHeptagonPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\RoundedHeptagonPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: midPoints[vertex] = new SKPoint((vertices[prevVertex].X + vertices[vertex].X) / 2'                                                  (vertices[prevVertex].Y + vertices[vertex].Y) / 2);
Magic Number,SkiaSharpFormsDemos.Curves,RoundedHeptagonPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\RoundedHeptagonPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: midPoints[vertex] = new SKPoint((vertices[prevVertex].X + vertices[vertex].X) / 2'                                                  (vertices[prevVertex].Y + vertices[vertex].Y) / 2);
Magic Number,SkiaSharpFormsDemos.Curves,RoundedHeptagonPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\RoundedHeptagonPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.StrokeWidth = 10;
Magic Number,SkiaSharpFormsDemos.Curves,RoundedHeptagonPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\RoundedHeptagonPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Curves,RoundedHeptagonPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\RoundedHeptagonPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Curves,SquaringTheCirclePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\SquaringTheCirclePage.cs,OnAppearing,The following statement contains a magic number: Device.StartTimer(TimeSpan.FromSeconds(1f / 60)' () =>              {                  canvasView.InvalidateSurface();                  return pageIsActive;              });
Magic Number,SkiaSharpFormsDemos.Curves,SquaringTheCirclePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\SquaringTheCirclePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Curves,SquaringTheCirclePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\SquaringTheCirclePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Curves,SquaringTheCirclePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\SquaringTheCirclePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Scale(Math.Min(info.Width / 300' info.Height / 300));
Magic Number,SkiaSharpFormsDemos.Curves,SquaringTheCirclePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\SquaringTheCirclePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Scale(Math.Min(info.Width / 300' info.Height / 300));
Magic Number,SkiaSharpFormsDemos.Curves,SquaringTheCirclePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\SquaringTheCirclePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float t = (float)(timeSpan.TotalSeconds % 3 / 3);
Magic Number,SkiaSharpFormsDemos.Curves,SquaringTheCirclePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\SquaringTheCirclePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float t = (float)(timeSpan.TotalSeconds % 3 / 3);
Magic Number,SkiaSharpFormsDemos.Curves,SquaringTheCirclePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\SquaringTheCirclePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: t = (1 + (float)Math.Sin(2 * Math.PI * t)) / 2;
Magic Number,SkiaSharpFormsDemos.Curves,SquaringTheCirclePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\SquaringTheCirclePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: t = (1 + (float)Math.Sin(2 * Math.PI * t)) / 2;
Magic Number,SkiaSharpFormsDemos.Curves,SquaringTheCirclePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\SquaringTheCirclePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: points[i' 2] = new SKPoint(                      (1 - t) * points[i' 0].X + t * points[i' 1].X'                      (1 - t) * points[i' 0].Y + t * points[i' 1].Y);
Magic Number,SkiaSharpFormsDemos.Curves,SquaringTheCirclePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\SquaringTheCirclePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: i < 13
Magic Number,SkiaSharpFormsDemos.Curves,SquaringTheCirclePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\SquaringTheCirclePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.MoveTo(points[0' 2]);
Magic Number,SkiaSharpFormsDemos.Curves,SquaringTheCirclePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\SquaringTheCirclePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.CubicTo(points[i' 2]' points[i + 1' 2]' points[i + 2' 2]);
Magic Number,SkiaSharpFormsDemos.Curves,SquaringTheCirclePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\SquaringTheCirclePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.CubicTo(points[i' 2]' points[i + 1' 2]' points[i + 2' 2]);
Magic Number,SkiaSharpFormsDemos.Curves,SquaringTheCirclePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\SquaringTheCirclePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.CubicTo(points[i' 2]' points[i + 1' 2]' points[i + 2' 2]);
Magic Number,SkiaSharpFormsDemos.Curves,SquaringTheCirclePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\SquaringTheCirclePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.CubicTo(points[i' 2]' points[i + 1' 2]' points[i + 2' 2]);
Magic Number,SkiaSharpFormsDemos.Curves,SquaringTheCirclePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\SquaringTheCirclePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: i < 13
Magic Number,SkiaSharpFormsDemos.Curves,TangentArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\TangentArcPage.xaml.cs,TangentArcPage,The following statement contains a magic number: touchPoints = new TouchPoint[3];
Magic Number,SkiaSharpFormsDemos.Curves,TangentArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\TangentArcPage.xaml.cs,TangentArcPage,The following statement contains a magic number: TouchPoint touchPoint = new TouchPoint                  {                      Center = new SKPoint(i == 0 ? 100 : 500'                                           i != 2 ? 100 : 500)                  };
Magic Number,SkiaSharpFormsDemos.Curves,TangentArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\TangentArcPage.xaml.cs,TangentArcPage,The following statement contains a magic number: TouchPoint touchPoint = new TouchPoint                  {                      Center = new SKPoint(i == 0 ? 100 : 500'                                           i != 2 ? 100 : 500)                  };
Magic Number,SkiaSharpFormsDemos.Curves,TangentArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\TangentArcPage.xaml.cs,TangentArcPage,The following statement contains a magic number: TouchPoint touchPoint = new TouchPoint                  {                      Center = new SKPoint(i == 0 ? 100 : 500'                                           i != 2 ? 100 : 500)                  };
Magic Number,SkiaSharpFormsDemos.Curves,TangentArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\TangentArcPage.xaml.cs,TangentArcPage,The following statement contains a magic number: TouchPoint touchPoint = new TouchPoint                  {                      Center = new SKPoint(i == 0 ? 100 : 500'                                           i != 2 ? 100 : 500)                  };
Magic Number,SkiaSharpFormsDemos.Curves,TangentArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\TangentArcPage.xaml.cs,TangentArcPage,The following statement contains a magic number: TouchPoint touchPoint = new TouchPoint                  {                      Center = new SKPoint(i == 0 ? 100 : 500'                                           i != 2 ? 100 : 500)                  };
Magic Number,SkiaSharpFormsDemos.Curves,TangentArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\TangentArcPage.xaml.cs,TangentArcPage,The following statement contains a magic number: i < 3
Magic Number,SkiaSharpFormsDemos.Curves,TangentArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\TangentArcPage.xaml.cs,TangentArcPage,The following statement contains a magic number: radiusSlider.Value = 100;
Magic Number,SkiaSharpFormsDemos.Curves,TangentArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\TangentArcPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.LineTo(touchPoints[2].Center);
Magic Number,SkiaSharpFormsDemos.Curves,TangentArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\TangentArcPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKPoint v2 = Normalize(touchPoints[2].Center - touchPoints[1].Center);
Magic Number,SkiaSharpFormsDemos.Curves,TangentArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\TangentArcPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float hypotenuse = radius / (float)Math.Sin(angleBetween / 2);
Magic Number,SkiaSharpFormsDemos.Curves,TangentArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\TangentArcPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKPoint vMid = Normalize(new SKPoint((v1.X + v2.X) / 2' (v1.Y + v2.Y) / 2));
Magic Number,SkiaSharpFormsDemos.Curves,TangentArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\TangentArcPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKPoint vMid = Normalize(new SKPoint((v1.X + v2.X) / 2' (v1.Y + v2.Y) / 2));
Magic Number,SkiaSharpFormsDemos.Curves,TangentArcPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\TangentArcPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.ArcTo(touchPoints[1].Center' touchPoints[2].Center' radius);
Magic Number,SkiaSharpFormsDemos.Curves,TapToOutlineThePathPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\TapToOutlineThePathPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: circlePath.AddCircle(info.Width / 2' info.Height / 2'                                       Math.Min(info.Width / 2' info.Height / 2) -                                        redThickStroke.StrokeWidth);
Magic Number,SkiaSharpFormsDemos.Curves,TapToOutlineThePathPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\TapToOutlineThePathPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: circlePath.AddCircle(info.Width / 2' info.Height / 2'                                       Math.Min(info.Width / 2' info.Height / 2) -                                        redThickStroke.StrokeWidth);
Magic Number,SkiaSharpFormsDemos.Curves,TapToOutlineThePathPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\TapToOutlineThePathPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: circlePath.AddCircle(info.Width / 2' info.Height / 2'                                       Math.Min(info.Width / 2' info.Height / 2) -                                        redThickStroke.StrokeWidth);
Magic Number,SkiaSharpFormsDemos.Curves,TapToOutlineThePathPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\TapToOutlineThePathPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: circlePath.AddCircle(info.Width / 2' info.Height / 2'                                       Math.Min(info.Width / 2' info.Height / 2) -                                        redThickStroke.StrokeWidth);
Magic Number,SkiaSharpFormsDemos.Curves,TextPathEffectPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\TextPathEffectPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float xText = info.Width / 2 - textBounds.MidX;
Magic Number,SkiaSharpFormsDemos.Curves,TextPathEffectPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\TextPathEffectPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float yText = info.Height / 2 - textBounds.MidY;
Magic Number,SkiaSharpFormsDemos.Curves,UnicycleHalfPipePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\UnicycleHalfPipePage.cs,OnAppearing,The following statement contains a magic number: Device.StartTimer(TimeSpan.FromSeconds(1f / 60)' () =>              {                  canvasView.InvalidateSurface();                  return pageIsActive;              });
Magic Number,SkiaSharpFormsDemos.Curves,UnicycleHalfPipePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\UnicycleHalfPipePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: pipePath.MoveTo(50' 50);
Magic Number,SkiaSharpFormsDemos.Curves,UnicycleHalfPipePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\UnicycleHalfPipePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: pipePath.MoveTo(50' 50);
Magic Number,SkiaSharpFormsDemos.Curves,UnicycleHalfPipePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\UnicycleHalfPipePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: pipePath.CubicTo(0' 1.25f * info.Height'                                    info.Width - 0' 1.25f * info.Height'                                   info.Width - 50' 50);
Magic Number,SkiaSharpFormsDemos.Curves,UnicycleHalfPipePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\UnicycleHalfPipePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: pipePath.CubicTo(0' 1.25f * info.Height'                                    info.Width - 0' 1.25f * info.Height'                                   info.Width - 50' 50);
Magic Number,SkiaSharpFormsDemos.Curves,UnicycleHalfPipePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\UnicycleHalfPipePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: pipePath.CubicTo(0' 1.25f * info.Height'                                    info.Width - 0' 1.25f * info.Height'                                   info.Width - 50' 50);
Magic Number,SkiaSharpFormsDemos.Curves,UnicycleHalfPipePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\UnicycleHalfPipePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: pipePath.CubicTo(0' 1.25f * info.Height'                                    info.Width - 0' 1.25f * info.Height'                                   info.Width - 50' 50);
Magic Number,SkiaSharpFormsDemos.Curves,UnicycleHalfPipePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\UnicycleHalfPipePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float t = (float)(timeSpan.TotalSeconds % 5 / 5);
Magic Number,SkiaSharpFormsDemos.Curves,UnicycleHalfPipePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\UnicycleHalfPipePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float t = (float)(timeSpan.TotalSeconds % 5 / 5);
Magic Number,SkiaSharpFormsDemos.Curves,UnicycleHalfPipePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\UnicycleHalfPipePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: t = (float)((1 - Math.Cos(t * 2 * Math.PI)) / 2);
Magic Number,SkiaSharpFormsDemos.Curves,UnicycleHalfPipePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\UnicycleHalfPipePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: t = (float)((1 - Math.Cos(t * 2 * Math.PI)) / 2);
Magic Number,SkiaSharpFormsDemos.Effects,AlgorithmicBrickWallPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\AlgorithmicBrickWallPage.cs,AlgorithmicBrickWallPage,The following statement contains a magic number: const int brickWidth = 64;
Magic Number,SkiaSharpFormsDemos.Effects,AlgorithmicBrickWallPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\AlgorithmicBrickWallPage.cs,AlgorithmicBrickWallPage,The following statement contains a magic number: const int brickHeight = 24;
Magic Number,SkiaSharpFormsDemos.Effects,AlgorithmicBrickWallPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\AlgorithmicBrickWallPage.cs,AlgorithmicBrickWallPage,The following statement contains a magic number: const int morterThickness = 6;
Magic Number,SkiaSharpFormsDemos.Effects,AlgorithmicBrickWallPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\AlgorithmicBrickWallPage.cs,AlgorithmicBrickWallPage,The following statement contains a magic number: const int bitmapHeight = 2 * (brickHeight + morterThickness);
Magic Number,SkiaSharpFormsDemos.Effects,AlgorithmicBrickWallPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\AlgorithmicBrickWallPage.cs,AlgorithmicBrickWallPage,The following statement contains a magic number: canvas.DrawRect(new SKRect(morterThickness / 2'                                             morterThickness / 2'                                             morterThickness / 2 + brickWidth'                                             morterThickness / 2 + brickHeight)'                                             brickPaint);
Magic Number,SkiaSharpFormsDemos.Effects,AlgorithmicBrickWallPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\AlgorithmicBrickWallPage.cs,AlgorithmicBrickWallPage,The following statement contains a magic number: canvas.DrawRect(new SKRect(morterThickness / 2'                                             morterThickness / 2'                                             morterThickness / 2 + brickWidth'                                             morterThickness / 2 + brickHeight)'                                             brickPaint);
Magic Number,SkiaSharpFormsDemos.Effects,AlgorithmicBrickWallPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\AlgorithmicBrickWallPage.cs,AlgorithmicBrickWallPage,The following statement contains a magic number: canvas.DrawRect(new SKRect(morterThickness / 2'                                             morterThickness / 2'                                             morterThickness / 2 + brickWidth'                                             morterThickness / 2 + brickHeight)'                                             brickPaint);
Magic Number,SkiaSharpFormsDemos.Effects,AlgorithmicBrickWallPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\AlgorithmicBrickWallPage.cs,AlgorithmicBrickWallPage,The following statement contains a magic number: canvas.DrawRect(new SKRect(morterThickness / 2'                                             morterThickness / 2'                                             morterThickness / 2 + brickWidth'                                             morterThickness / 2 + brickHeight)'                                             brickPaint);
Magic Number,SkiaSharpFormsDemos.Effects,AlgorithmicBrickWallPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\AlgorithmicBrickWallPage.cs,AlgorithmicBrickWallPage,The following statement contains a magic number: int ySecondBrick = 3 * morterThickness / 2 + brickHeight;
Magic Number,SkiaSharpFormsDemos.Effects,AlgorithmicBrickWallPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\AlgorithmicBrickWallPage.cs,AlgorithmicBrickWallPage,The following statement contains a magic number: int ySecondBrick = 3 * morterThickness / 2 + brickHeight;
Magic Number,SkiaSharpFormsDemos.Effects,AlgorithmicBrickWallPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\AlgorithmicBrickWallPage.cs,AlgorithmicBrickWallPage,The following statement contains a magic number: canvas.DrawRect(new SKRect(0'                                             ySecondBrick'                                             bitmapWidth / 2 - morterThickness / 2'                                             ySecondBrick + brickHeight)'                                             brickPaint);
Magic Number,SkiaSharpFormsDemos.Effects,AlgorithmicBrickWallPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\AlgorithmicBrickWallPage.cs,AlgorithmicBrickWallPage,The following statement contains a magic number: canvas.DrawRect(new SKRect(0'                                             ySecondBrick'                                             bitmapWidth / 2 - morterThickness / 2'                                             ySecondBrick + brickHeight)'                                             brickPaint);
Magic Number,SkiaSharpFormsDemos.Effects,AlgorithmicBrickWallPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\AlgorithmicBrickWallPage.cs,AlgorithmicBrickWallPage,The following statement contains a magic number: canvas.DrawRect(new SKRect(bitmapWidth / 2 + morterThickness / 2'                                             ySecondBrick'                                             bitmapWidth'                                             ySecondBrick + brickHeight)'                                             brickPaint);
Magic Number,SkiaSharpFormsDemos.Effects,AlgorithmicBrickWallPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\AlgorithmicBrickWallPage.cs,AlgorithmicBrickWallPage,The following statement contains a magic number: canvas.DrawRect(new SKRect(bitmapWidth / 2 + morterThickness / 2'                                             ySecondBrick'                                             bitmapWidth'                                             ySecondBrick + brickHeight)'                                             brickPaint);
Magic Number,SkiaSharpFormsDemos.Effects,AnimatedBitmapTilePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\AnimatedBitmapTilePage.cs,OnAppearing,The following statement contains a magic number: Device.StartTimer(TimeSpan.FromMilliseconds(16)' OnTimerTick);
Magic Number,SkiaSharpFormsDemos.Effects,AnimatedBitmapTilePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\AnimatedBitmapTilePage.cs,OnTimerTick,The following statement contains a magic number: const int duration = 10;
Magic Number,SkiaSharpFormsDemos.Effects,AnimatedBitmapTilePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\AnimatedBitmapTilePage.cs,OnTimerTick,The following statement contains a magic number: angle = (float)(360f * (stopwatch.Elapsed.TotalSeconds % duration) / duration);
Magic Number,SkiaSharpFormsDemos.Effects,AnimatedBitmapTilePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\AnimatedBitmapTilePage.cs,DrawBitmap,The following statement contains a magic number: paint.StrokeWidth = SIZE / 8;
Magic Number,SkiaSharpFormsDemos.Effects,AnimatedBitmapTilePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\AnimatedBitmapTilePage.cs,DrawBitmap,The following statement contains a magic number: canvas.Translate(SIZE / 2' SIZE / 2);
Magic Number,SkiaSharpFormsDemos.Effects,AnimatedBitmapTilePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\AnimatedBitmapTilePage.cs,DrawBitmap,The following statement contains a magic number: canvas.Translate(SIZE / 2' SIZE / 2);
Magic Number,SkiaSharpFormsDemos.Effects,BitmapTileFlipModesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\BitmapTileFlipModesPage.xaml.cs,BitmapTileFlipModesPage,The following statement contains a magic number: SKRectI cropRect = new SKRectI(5' 27' 296' 260);
Magic Number,SkiaSharpFormsDemos.Effects,BitmapTileFlipModesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\BitmapTileFlipModesPage.xaml.cs,BitmapTileFlipModesPage,The following statement contains a magic number: SKRectI cropRect = new SKRectI(5' 27' 296' 260);
Magic Number,SkiaSharpFormsDemos.Effects,BitmapTileFlipModesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\BitmapTileFlipModesPage.xaml.cs,BitmapTileFlipModesPage,The following statement contains a magic number: SKRectI cropRect = new SKRectI(5' 27' 296' 260);
Magic Number,SkiaSharpFormsDemos.Effects,BitmapTileFlipModesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\BitmapTileFlipModesPage.xaml.cs,BitmapTileFlipModesPage,The following statement contains a magic number: SKRectI cropRect = new SKRectI(5' 27' 296' 260);
Magic Number,SkiaSharpFormsDemos.Effects,BitmapTileFlipModesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\BitmapTileFlipModesPage.xaml.cs,BitmapTileFlipModesPage,The following statement contains a magic number: SKImageInfo info = new SKImageInfo(cropRect.Width / 2' cropRect.Height / 2);
Magic Number,SkiaSharpFormsDemos.Effects,BitmapTileFlipModesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\BitmapTileFlipModesPage.xaml.cs,BitmapTileFlipModesPage,The following statement contains a magic number: SKImageInfo info = new SKImageInfo(cropRect.Width / 2' cropRect.Height / 2);
Magic Number,SkiaSharpFormsDemos.Effects,BlurryReflectionPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\BlurryReflectionPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.TextSize = 100;
Magic Number,SkiaSharpFormsDemos.Effects,BlurryReflectionPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\BlurryReflectionPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float scale = 0.9f * info.Width / width;
Magic Number,SkiaSharpFormsDemos.Effects,BlurryReflectionPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\BlurryReflectionPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float xText = info.Width / 2 - textBounds.MidX;
Magic Number,SkiaSharpFormsDemos.Effects,BlurryReflectionPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\BlurryReflectionPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float yText = info.Height / 2;
Magic Number,SkiaSharpFormsDemos.Effects,BlurryReflectionPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\BlurryReflectionPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.MaskFilter = SKMaskFilter.CreateBlur(SKBlurStyle.Normal' paint.TextSize / 36);
Magic Number,SkiaSharpFormsDemos.Effects,BrickWallCompositingPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\BrickWallCompositingPage.xaml.cs,OnButtonClicked,The following statement contains a magic number: step = (step + 1) % 5;
Magic Number,SkiaSharpFormsDemos.Effects,BrickWallCompositingPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\BrickWallCompositingPage.xaml.cs,OnButtonClicked,The following statement contains a magic number: switch (step)              {                  case 0: btn.Text = "Show sitting monkey"; break;                  case 1: btn.Text = "Draw matte with DstIn"; break;                  case 2: btn.Text = "Draw sidewalk with DstOver"; break;                  case 3: btn.Text = "Draw brick wall with DstOver"; break;                  case 4: btn.Text = "Reset"; break;              }
Magic Number,SkiaSharpFormsDemos.Effects,BrickWallCompositingPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\BrickWallCompositingPage.xaml.cs,OnButtonClicked,The following statement contains a magic number: switch (step)              {                  case 0: btn.Text = "Show sitting monkey"; break;                  case 1: btn.Text = "Draw matte with DstIn"; break;                  case 2: btn.Text = "Draw sidewalk with DstOver"; break;                  case 3: btn.Text = "Draw brick wall with DstOver"; break;                  case 4: btn.Text = "Reset"; break;              }
Magic Number,SkiaSharpFormsDemos.Effects,BrickWallCompositingPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\BrickWallCompositingPage.xaml.cs,OnButtonClicked,The following statement contains a magic number: switch (step)              {                  case 0: btn.Text = "Show sitting monkey"; break;                  case 1: btn.Text = "Draw matte with DstIn"; break;                  case 2: btn.Text = "Draw sidewalk with DstOver"; break;                  case 3: btn.Text = "Draw brick wall with DstOver"; break;                  case 4: btn.Text = "Reset"; break;              }
Magic Number,SkiaSharpFormsDemos.Effects,BrickWallCompositingPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\BrickWallCompositingPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float x = (info.Width - monkeyBitmap.Width) / 2;
Magic Number,SkiaSharpFormsDemos.Effects,BrickWallCompositingPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\BrickWallCompositingPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: step >= 2
Magic Number,SkiaSharpFormsDemos.Effects,BrickWallCompositingPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\BrickWallCompositingPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: const float sidewalkHeight = 80;
Magic Number,SkiaSharpFormsDemos.Effects,BrickWallCompositingPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\BrickWallCompositingPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.Shader = SKShader.CreateCompose(                                          SKShader.CreateColor(SKColors.SandyBrown)'                                          SKShader.CreatePerlinNoiseTurbulence(0.1f' 0.3f' 1' 9));
Magic Number,SkiaSharpFormsDemos.Effects,BrickWallCompositingPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\BrickWallCompositingPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.Shader = SKShader.CreateCompose(                                          SKShader.CreateColor(SKColors.SandyBrown)'                                          SKShader.CreatePerlinNoiseTurbulence(0.1f' 0.3f' 1' 9));
Magic Number,SkiaSharpFormsDemos.Effects,BrickWallCompositingPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\BrickWallCompositingPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.Shader = SKShader.CreateCompose(                                          SKShader.CreateColor(SKColors.SandyBrown)'                                          SKShader.CreatePerlinNoiseTurbulence(0.1f' 0.3f' 1' 9));
Magic Number,SkiaSharpFormsDemos.Effects,BrickWallCompositingPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\BrickWallCompositingPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: step >= 3
Magic Number,SkiaSharpFormsDemos.Effects,BrickWallCompositingPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\BrickWallCompositingPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: step >= 4
Magic Number,SkiaSharpFormsDemos.Effects,CenteredTilesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\CenteredTilesPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float x = (info.Width - bitmap.Width) / 2f;
Magic Number,SkiaSharpFormsDemos.Effects,CenteredTilesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\CenteredTilesPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float y = (info.Height - bitmap.Height) / 2f;
Magic Number,SkiaSharpFormsDemos.Effects,CenteredTilesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\CenteredTilesPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawCircle(info.Rect.MidX' info.Rect.MidY'                                    Math.Min(info.Width' info.Height) / 2'                                    paint);
Magic Number,SkiaSharpFormsDemos.Effects,ChainLinkFencePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ChainLinkFencePage.cs,ChainLinkFencePage,The following statement contains a magic number: int tileSize = Device.Idiom == TargetIdiom.Desktop ? 64 : 128;
Magic Number,SkiaSharpFormsDemos.Effects,ChainLinkFencePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ChainLinkFencePage.cs,ChainLinkFencePage,The following statement contains a magic number: int tileSize = Device.Idiom == TargetIdiom.Desktop ? 64 : 128;
Magic Number,SkiaSharpFormsDemos.Effects,ChainLinkFencePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ChainLinkFencePage.cs,CreateChainLinkTile,The following statement contains a magic number: float wireThickness = tileSize / 12f;
Magic Number,SkiaSharpFormsDemos.Effects,ChainLinkFencePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ChainLinkFencePage.cs,CreateChainLinkTile,The following statement contains a magic number: paint.Shader = SKShader.CreateLinearGradient(new SKPoint(0' 0)'                                                               new SKPoint(0' tileSize)'                                                               new SKColor[] { SKColors.Silver' SKColors.Black }'                                                               new float[] { 0.4f' 0.6f }'                                                               SKShaderTileMode.Clamp);
Magic Number,SkiaSharpFormsDemos.Effects,ChainLinkFencePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ChainLinkFencePage.cs,CreateChainLinkTile,The following statement contains a magic number: paint.Shader = SKShader.CreateLinearGradient(new SKPoint(0' 0)'                                                               new SKPoint(0' tileSize)'                                                               new SKColor[] { SKColors.Silver' SKColors.Black }'                                                               new float[] { 0.4f' 0.6f }'                                                               SKShaderTileMode.Clamp);
Magic Number,SkiaSharpFormsDemos.Effects,ChainLinkFencePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ChainLinkFencePage.cs,CreateChainLinkTile,The following statement contains a magic number: canvas.DrawLine(0' tileSize / 2'                                  tileSize / 2' tileSize / 2 - wireThickness / 2' paint);
Magic Number,SkiaSharpFormsDemos.Effects,ChainLinkFencePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ChainLinkFencePage.cs,CreateChainLinkTile,The following statement contains a magic number: canvas.DrawLine(0' tileSize / 2'                                  tileSize / 2' tileSize / 2 - wireThickness / 2' paint);
Magic Number,SkiaSharpFormsDemos.Effects,ChainLinkFencePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ChainLinkFencePage.cs,CreateChainLinkTile,The following statement contains a magic number: canvas.DrawLine(0' tileSize / 2'                                  tileSize / 2' tileSize / 2 - wireThickness / 2' paint);
Magic Number,SkiaSharpFormsDemos.Effects,ChainLinkFencePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ChainLinkFencePage.cs,CreateChainLinkTile,The following statement contains a magic number: canvas.DrawLine(0' tileSize / 2'                                  tileSize / 2' tileSize / 2 - wireThickness / 2' paint);
Magic Number,SkiaSharpFormsDemos.Effects,ChainLinkFencePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ChainLinkFencePage.cs,CreateChainLinkTile,The following statement contains a magic number: canvas.DrawLine(tileSize' tileSize / 2'                                  tileSize / 2' tileSize / 2 + wireThickness / 2' paint);
Magic Number,SkiaSharpFormsDemos.Effects,ChainLinkFencePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ChainLinkFencePage.cs,CreateChainLinkTile,The following statement contains a magic number: canvas.DrawLine(tileSize' tileSize / 2'                                  tileSize / 2' tileSize / 2 + wireThickness / 2' paint);
Magic Number,SkiaSharpFormsDemos.Effects,ChainLinkFencePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ChainLinkFencePage.cs,CreateChainLinkTile,The following statement contains a magic number: canvas.DrawLine(tileSize' tileSize / 2'                                  tileSize / 2' tileSize / 2 + wireThickness / 2' paint);
Magic Number,SkiaSharpFormsDemos.Effects,ChainLinkFencePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ChainLinkFencePage.cs,CreateChainLinkTile,The following statement contains a magic number: canvas.DrawLine(tileSize' tileSize / 2'                                  tileSize / 2' tileSize / 2 + wireThickness / 2' paint);
Magic Number,SkiaSharpFormsDemos.Effects,ChainLinkFencePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ChainLinkFencePage.cs,CreateChainLinkTile,The following statement contains a magic number: path.MoveTo(tileSize / 2' 0);
Magic Number,SkiaSharpFormsDemos.Effects,ChainLinkFencePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ChainLinkFencePage.cs,CreateChainLinkTile,The following statement contains a magic number: path.LineTo(tileSize / 2 - wireThickness / 2' tileSize / 2);
Magic Number,SkiaSharpFormsDemos.Effects,ChainLinkFencePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ChainLinkFencePage.cs,CreateChainLinkTile,The following statement contains a magic number: path.LineTo(tileSize / 2 - wireThickness / 2' tileSize / 2);
Magic Number,SkiaSharpFormsDemos.Effects,ChainLinkFencePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ChainLinkFencePage.cs,CreateChainLinkTile,The following statement contains a magic number: path.LineTo(tileSize / 2 - wireThickness / 2' tileSize / 2);
Magic Number,SkiaSharpFormsDemos.Effects,ChainLinkFencePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ChainLinkFencePage.cs,CreateChainLinkTile,The following statement contains a magic number: path.ArcTo(wireThickness / 2' wireThickness / 2'                                 0'                                 SKPathArcSize.Small'                                 SKPathDirection.CounterClockwise'                                 tileSize / 2' tileSize / 2 + wireThickness / 2);
Magic Number,SkiaSharpFormsDemos.Effects,ChainLinkFencePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ChainLinkFencePage.cs,CreateChainLinkTile,The following statement contains a magic number: path.ArcTo(wireThickness / 2' wireThickness / 2'                                 0'                                 SKPathArcSize.Small'                                 SKPathDirection.CounterClockwise'                                 tileSize / 2' tileSize / 2 + wireThickness / 2);
Magic Number,SkiaSharpFormsDemos.Effects,ChainLinkFencePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ChainLinkFencePage.cs,CreateChainLinkTile,The following statement contains a magic number: path.ArcTo(wireThickness / 2' wireThickness / 2'                                 0'                                 SKPathArcSize.Small'                                 SKPathDirection.CounterClockwise'                                 tileSize / 2' tileSize / 2 + wireThickness / 2);
Magic Number,SkiaSharpFormsDemos.Effects,ChainLinkFencePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ChainLinkFencePage.cs,CreateChainLinkTile,The following statement contains a magic number: path.ArcTo(wireThickness / 2' wireThickness / 2'                                 0'                                 SKPathArcSize.Small'                                 SKPathDirection.CounterClockwise'                                 tileSize / 2' tileSize / 2 + wireThickness / 2);
Magic Number,SkiaSharpFormsDemos.Effects,ChainLinkFencePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ChainLinkFencePage.cs,CreateChainLinkTile,The following statement contains a magic number: path.ArcTo(wireThickness / 2' wireThickness / 2'                                 0'                                 SKPathArcSize.Small'                                 SKPathDirection.CounterClockwise'                                 tileSize / 2' tileSize / 2 + wireThickness / 2);
Magic Number,SkiaSharpFormsDemos.Effects,ChainLinkFencePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ChainLinkFencePage.cs,CreateChainLinkTile,The following statement contains a magic number: path.MoveTo(tileSize / 2' tileSize);
Magic Number,SkiaSharpFormsDemos.Effects,ChainLinkFencePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ChainLinkFencePage.cs,CreateChainLinkTile,The following statement contains a magic number: path.LineTo(tileSize / 2 + wireThickness / 2' tileSize / 2);
Magic Number,SkiaSharpFormsDemos.Effects,ChainLinkFencePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ChainLinkFencePage.cs,CreateChainLinkTile,The following statement contains a magic number: path.LineTo(tileSize / 2 + wireThickness / 2' tileSize / 2);
Magic Number,SkiaSharpFormsDemos.Effects,ChainLinkFencePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ChainLinkFencePage.cs,CreateChainLinkTile,The following statement contains a magic number: path.LineTo(tileSize / 2 + wireThickness / 2' tileSize / 2);
Magic Number,SkiaSharpFormsDemos.Effects,ChainLinkFencePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ChainLinkFencePage.cs,CreateChainLinkTile,The following statement contains a magic number: path.ArcTo(wireThickness / 2' wireThickness / 2'                                 0'                                 SKPathArcSize.Small'                                 SKPathDirection.CounterClockwise'                                 tileSize / 2' tileSize / 2 - wireThickness / 2);
Magic Number,SkiaSharpFormsDemos.Effects,ChainLinkFencePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ChainLinkFencePage.cs,CreateChainLinkTile,The following statement contains a magic number: path.ArcTo(wireThickness / 2' wireThickness / 2'                                 0'                                 SKPathArcSize.Small'                                 SKPathDirection.CounterClockwise'                                 tileSize / 2' tileSize / 2 - wireThickness / 2);
Magic Number,SkiaSharpFormsDemos.Effects,ChainLinkFencePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ChainLinkFencePage.cs,CreateChainLinkTile,The following statement contains a magic number: path.ArcTo(wireThickness / 2' wireThickness / 2'                                 0'                                 SKPathArcSize.Small'                                 SKPathDirection.CounterClockwise'                                 tileSize / 2' tileSize / 2 - wireThickness / 2);
Magic Number,SkiaSharpFormsDemos.Effects,ChainLinkFencePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ChainLinkFencePage.cs,CreateChainLinkTile,The following statement contains a magic number: path.ArcTo(wireThickness / 2' wireThickness / 2'                                 0'                                 SKPathArcSize.Small'                                 SKPathDirection.CounterClockwise'                                 tileSize / 2' tileSize / 2 - wireThickness / 2);
Magic Number,SkiaSharpFormsDemos.Effects,ChainLinkFencePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ChainLinkFencePage.cs,CreateChainLinkTile,The following statement contains a magic number: path.ArcTo(wireThickness / 2' wireThickness / 2'                                 0'                                 SKPathArcSize.Small'                                 SKPathDirection.CounterClockwise'                                 tileSize / 2' tileSize / 2 - wireThickness / 2);
Magic Number,SkiaSharpFormsDemos.Effects,ChainLinkFencePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ChainLinkFencePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.Shader = SKShader.CreateBitmap(tileBitmap'                                                        SKShaderTileMode.Repeat'                                                       SKShaderTileMode.Repeat'                                                       SKMatrix.MakeRotationDegrees(45));
Magic Number,SkiaSharpFormsDemos.Effects,ChainLinkTile,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ChainLinkTile.cs,ChainLinkTile,The following statement contains a magic number: wireThickness = tileSize / 16;
Magic Number,SkiaSharpFormsDemos.Effects,ChainLinkTile,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ChainLinkTile.cs,ChainLinkTile,The following statement contains a magic number: cornerOffset = wireThickness / (float)Math.Sqrt(2);
Magic Number,SkiaSharpFormsDemos.Effects,ChainLinkTile,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ChainLinkTile.cs,ChainLinkTile,The following statement contains a magic number: LinkCrossQuadrant(canvas' path' paint' new SKRect(0' 0' tileSize / 2' tileSize / 2));
Magic Number,SkiaSharpFormsDemos.Effects,ChainLinkTile,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ChainLinkTile.cs,ChainLinkTile,The following statement contains a magic number: LinkCrossQuadrant(canvas' path' paint' new SKRect(0' 0' tileSize / 2' tileSize / 2));
Magic Number,SkiaSharpFormsDemos.Effects,ChainLinkTile,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ChainLinkTile.cs,ChainLinkTile,The following statement contains a magic number: LinkCrossQuadrant(canvas' path' paint' new SKRect(tileSize / 2' tileSize / 2' tileSize' tileSize));
Magic Number,SkiaSharpFormsDemos.Effects,ChainLinkTile,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ChainLinkTile.cs,ChainLinkTile,The following statement contains a magic number: LinkCrossQuadrant(canvas' path' paint' new SKRect(tileSize / 2' tileSize / 2' tileSize' tileSize));
Magic Number,SkiaSharpFormsDemos.Effects,ChainLinkTile,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ChainLinkTile.cs,ChainLinkTile,The following statement contains a magic number: MostlyEmptyQuadrant(canvas' paint' new SKRect(tileSize / 2' 0' tileSize' tileSize / 2));
Magic Number,SkiaSharpFormsDemos.Effects,ChainLinkTile,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ChainLinkTile.cs,ChainLinkTile,The following statement contains a magic number: MostlyEmptyQuadrant(canvas' paint' new SKRect(tileSize / 2' 0' tileSize' tileSize / 2));
Magic Number,SkiaSharpFormsDemos.Effects,ChainLinkTile,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ChainLinkTile.cs,ChainLinkTile,The following statement contains a magic number: MostlyEmptyQuadrant(canvas' paint' new SKRect(0' tileSize / 2' tileSize / 2' tileSize));
Magic Number,SkiaSharpFormsDemos.Effects,ChainLinkTile,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ChainLinkTile.cs,ChainLinkTile,The following statement contains a magic number: MostlyEmptyQuadrant(canvas' paint' new SKRect(0' tileSize / 2' tileSize / 2' tileSize));
Magic Number,SkiaSharpFormsDemos.Effects,ChainLinkTile,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ChainLinkTile.cs,MostlyEmptyQuadrant,The following statement contains a magic number: paint.Shader = SKShader.CreateLinearGradient(new SKPoint(rect.MidX' rect.MidY)'                                                                new SKPoint(rect.Left - rect.Width / 2' rect.Bottom + rect.Height / 2)'                                                               shadeGradientColors'                                                               shadeGradientOffsets'                                                               SKShaderTileMode.Clamp);
Magic Number,SkiaSharpFormsDemos.Effects,ChainLinkTile,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ChainLinkTile.cs,MostlyEmptyQuadrant,The following statement contains a magic number: paint.Shader = SKShader.CreateLinearGradient(new SKPoint(rect.MidX' rect.MidY)'                                                                new SKPoint(rect.Left - rect.Width / 2' rect.Bottom + rect.Height / 2)'                                                               shadeGradientColors'                                                               shadeGradientOffsets'                                                               SKShaderTileMode.Clamp);
Magic Number,SkiaSharpFormsDemos.Effects,ChainLinkTile,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ChainLinkTile.cs,MostlyEmptyQuadrant,The following statement contains a magic number: paint.Shader = SKShader.CreateLinearGradient(new SKPoint(rect.Right + rect.Width / 2' rect.Top - rect.Height / 2)'                                                                new SKPoint(rect.MidX' rect.MidY)'                                                               shadeGradientColors'                                                               shadeGradientOffsets'                                                               SKShaderTileMode.Clamp);
Magic Number,SkiaSharpFormsDemos.Effects,ChainLinkTile,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ChainLinkTile.cs,MostlyEmptyQuadrant,The following statement contains a magic number: paint.Shader = SKShader.CreateLinearGradient(new SKPoint(rect.Right + rect.Width / 2' rect.Top - rect.Height / 2)'                                                                new SKPoint(rect.MidX' rect.MidY)'                                                               shadeGradientColors'                                                               shadeGradientOffsets'                                                               SKShaderTileMode.Clamp);
Magic Number,SkiaSharpFormsDemos.Effects,ChainLinkTile,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ChainLinkTile.cs,CurvedWire,The following statement contains a magic number: float length = (float)Math.Sqrt(Math.Pow(vector2.X' 2) + Math.Pow(vector2.Y' 2));
Magic Number,SkiaSharpFormsDemos.Effects,ChainLinkTile,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ChainLinkTile.cs,CurvedWire,The following statement contains a magic number: float length = (float)Math.Sqrt(Math.Pow(vector2.X' 2) + Math.Pow(vector2.Y' 2));
Magic Number,SkiaSharpFormsDemos.Effects,ComposedPerlinNoisePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ComposedPerlinNoisePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float baseFreqX = (float)Math.Pow(10' baseFrequencyXSlider.Value - 4);
Magic Number,SkiaSharpFormsDemos.Effects,ComposedPerlinNoisePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ComposedPerlinNoisePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float baseFreqX = (float)Math.Pow(10' baseFrequencyXSlider.Value - 4);
Magic Number,SkiaSharpFormsDemos.Effects,ComposedPerlinNoisePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ComposedPerlinNoisePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float baseFreqY = (float)Math.Pow(10' baseFrequencyYSlider.Value - 4);
Magic Number,SkiaSharpFormsDemos.Effects,ComposedPerlinNoisePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ComposedPerlinNoisePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float baseFreqY = (float)Math.Pow(10' baseFrequencyYSlider.Value - 4);
Magic Number,SkiaSharpFormsDemos.Effects,ComposedPerlinNoisePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ComposedPerlinNoisePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKRect rect = new SKRect(0' 0' info.Width' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Effects,ComposedPerlinNoisePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ComposedPerlinNoisePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: rect = new SKRect(0' info.Height / 2' info.Width' info.Height);
Magic Number,SkiaSharpFormsDemos.Effects,CompositingMaskPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\CompositingMaskPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float x = (info.Width - rect.Width) / 2;
Magic Number,SkiaSharpFormsDemos.Effects,CompositingMaskPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\CompositingMaskPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float y = (info.Height - rect.Height) / 2;
Magic Number,SkiaSharpFormsDemos.Effects,CompositingMaskPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\CompositingMaskPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.Shader = SKShader.CreateRadialGradient(                                      center'                                      radius'                                      new SKColor[] { SKColors.Black'                                                      SKColors.Transparent }'                                      new float[] { 0.6f' 1 }'                                      SKShaderTileMode.Clamp);
Magic Number,SkiaSharpFormsDemos.Effects,ConicalGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ConicalGradientPage.xaml.cs,ConicalGradientPage,The following statement contains a magic number: touchPoints = new TouchPoint[2];
Magic Number,SkiaSharpFormsDemos.Effects,ConicalGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ConicalGradientPage.xaml.cs,ConicalGradientPage,The following statement contains a magic number: touchPoints[0] = new TouchPoint              {                  Center = new SKPoint(100' 100)'                  Radius = RADIUS1              };
Magic Number,SkiaSharpFormsDemos.Effects,ConicalGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ConicalGradientPage.xaml.cs,ConicalGradientPage,The following statement contains a magic number: touchPoints[0] = new TouchPoint              {                  Center = new SKPoint(100' 100)'                  Radius = RADIUS1              };
Magic Number,SkiaSharpFormsDemos.Effects,ConicalGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ConicalGradientPage.xaml.cs,ConicalGradientPage,The following statement contains a magic number: touchPoints[1] = new TouchPoint              {                  Center = new SKPoint(300' 300)'                  Radius = RADIUS2              };
Magic Number,SkiaSharpFormsDemos.Effects,ConicalGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ConicalGradientPage.xaml.cs,ConicalGradientPage,The following statement contains a magic number: touchPoints[1] = new TouchPoint              {                  Center = new SKPoint(300' 300)'                  Radius = RADIUS2              };
Magic Number,SkiaSharpFormsDemos.Effects,ConicalGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ConicalGradientPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.StrokeWidth = 3;
Magic Number,SkiaSharpFormsDemos.Effects,ConicalSpecularHighlightPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ConicalSpecularHighlightPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float radius = 0.4f * Math.Min(info.Width' info.Height);
Magic Number,SkiaSharpFormsDemos.Effects,ConicalSpecularHighlightPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ConicalSpecularHighlightPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKPoint offCenter = center - new SKPoint(radius / 2' radius / 2);
Magic Number,SkiaSharpFormsDemos.Effects,ConicalSpecularHighlightPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ConicalSpecularHighlightPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKPoint offCenter = center - new SKPoint(radius / 2' radius / 2);
Magic Number,SkiaSharpFormsDemos.Effects,CornerToCornerGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\CornerToCornerGradientPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float x = (info.Width - 300) / 2;
Magic Number,SkiaSharpFormsDemos.Effects,CornerToCornerGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\CornerToCornerGradientPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float x = (info.Width - 300) / 2;
Magic Number,SkiaSharpFormsDemos.Effects,CornerToCornerGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\CornerToCornerGradientPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float y = (info.Height - 300) / 2;
Magic Number,SkiaSharpFormsDemos.Effects,CornerToCornerGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\CornerToCornerGradientPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float y = (info.Height - 300) / 2;
Magic Number,SkiaSharpFormsDemos.Effects,CornerToCornerGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\CornerToCornerGradientPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKRect rect = new SKRect(x' y' x + 300' y + 300);
Magic Number,SkiaSharpFormsDemos.Effects,CornerToCornerGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\CornerToCornerGradientPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKRect rect = new SKRect(x' y' x + 300' y + 300);
Magic Number,SkiaSharpFormsDemos.Effects,DistantLightExperimentPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\DistanceLightExperimentPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.TextSize = 100;
Magic Number,SkiaSharpFormsDemos.Effects,DistantLightExperimentPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\DistanceLightExperimentPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.TextSize *= 0.9f * info.Width / textWidth;
Magic Number,SkiaSharpFormsDemos.Effects,DistantLightExperimentPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\DistanceLightExperimentPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.ImageFilter = SKImageFilter.CreateDistantLitDiffuse(                                          new SKPoint3(2' 3' z)'                                          SKColors.White'                                          surfaceScale'                                          lightConstant);
Magic Number,SkiaSharpFormsDemos.Effects,DistantLightExperimentPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\DistanceLightExperimentPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.ImageFilter = SKImageFilter.CreateDistantLitDiffuse(                                          new SKPoint3(2' 3' z)'                                          SKColors.White'                                          surfaceScale'                                          lightConstant);
Magic Number,SkiaSharpFormsDemos.Effects,DodgeAndBurnPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\DodgeAndBurnPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float x = (info.Width - rect.Width) / 2;
Magic Number,SkiaSharpFormsDemos.Effects,DodgeAndBurnPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\DodgeAndBurnPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float y = (info.Height - rect.Height) / 2;
Magic Number,SkiaSharpFormsDemos.Effects,DodgeAndBurnPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\DodgeAndBurnPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: byte value = (byte)(255 * dodgeSlider.Value);
Magic Number,SkiaSharpFormsDemos.Effects,DropShadowExperimentPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\DropShadowExperimentPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.TextSize = info.Width / 7;
Magic Number,SkiaSharpFormsDemos.Effects,DropShadowExperimentPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\DropShadowExperimentPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float xText = info.Width / 2 - textBounds.MidX;
Magic Number,SkiaSharpFormsDemos.Effects,DropShadowExperimentPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\DropShadowExperimentPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float yText = info.Height / 2 - textBounds.MidY;
Magic Number,SkiaSharpFormsDemos.Effects,GradientAnimationPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\GradientAnimationPage.cs,OnAppearing,The following statement contains a magic number: Device.StartTimer(TimeSpan.FromMilliseconds(16)' OnTimerTick);
Magic Number,SkiaSharpFormsDemos.Effects,GradientAnimationPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\GradientAnimationPage.cs,OnTimerTick,The following statement contains a magic number: const int duration = 3000;
Magic Number,SkiaSharpFormsDemos.Effects,GradientAnimationPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\GradientAnimationPage.cs,OnTimerTick,The following statement contains a magic number: angle = 2 * Math.PI * (stopwatch.ElapsedMilliseconds % duration) / duration;
Magic Number,SkiaSharpFormsDemos.Effects,GradientTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\GradientTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.TextSize = 100;
Magic Number,SkiaSharpFormsDemos.Effects,GradientTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\GradientTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float scale = 0.9f * info.Width / width;
Magic Number,SkiaSharpFormsDemos.Effects,GradientTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\GradientTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float xText = info.Width / 2 - textBounds.MidX;
Magic Number,SkiaSharpFormsDemos.Effects,GradientTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\GradientTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float yText = info.Height / 2 - textBounds.MidY;
Magic Number,SkiaSharpFormsDemos.Effects,GradientTransitionsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\GradientTransitionsPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float x = (info.Width - size) / 2;
Magic Number,SkiaSharpFormsDemos.Effects,GradientTransitionsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\GradientTransitionsPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float y = (info.Height - size) / 2;
Magic Number,SkiaSharpFormsDemos.Effects,GradientTransitionsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\GradientTransitionsPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float[] positions = new float[]{ 1.1f * progress - 0.1f'                                                   1.1f * progress };
Magic Number,SkiaSharpFormsDemos.Effects,GradientTransitionsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\GradientTransitionsPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float[] positions = new float[]{ 1.1f * progress - 0.1f'                                                   1.1f * progress };
Magic Number,SkiaSharpFormsDemos.Effects,GradientTransitionsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\GradientTransitionsPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float[] positions = new float[]{ 1.1f * progress - 0.1f'                                                   1.1f * progress };
Magic Number,SkiaSharpFormsDemos.Effects,GradientTransitionsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\GradientTransitionsPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: switch ((TransitionMode)transitionPicker.SelectedIndex)                  {                      case TransitionMode.Linear:                          paint0.Shader = SKShader.CreateLinearGradient(                                             new SKPoint(rect.Left' 0)'                                             new SKPoint(rect.Right' 0)'                                             colors'                                             positions'                                             SKShaderTileMode.Clamp);                          break;                        case TransitionMode.Radial:                          paint0.Shader = SKShader.CreateRadialGradient(                                              new SKPoint(rect.MidX' rect.MidY)'                                              (float)Math.Sqrt(Math.Pow(rect.Width / 2' 2) +                                                               Math.Pow(rect.Height / 2' 2))'                                              colors'                                              positions'                                              SKShaderTileMode.Clamp);                          break;                        case TransitionMode.Sweep:                          paint0.Shader = SKShader.CreateSweepGradient(                                              new SKPoint(rect.MidX' rect.MidY)'                                              colors'                                              positions);                          break;                  }
Magic Number,SkiaSharpFormsDemos.Effects,GradientTransitionsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\GradientTransitionsPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: switch ((TransitionMode)transitionPicker.SelectedIndex)                  {                      case TransitionMode.Linear:                          paint0.Shader = SKShader.CreateLinearGradient(                                             new SKPoint(rect.Left' 0)'                                             new SKPoint(rect.Right' 0)'                                             colors'                                             positions'                                             SKShaderTileMode.Clamp);                          break;                        case TransitionMode.Radial:                          paint0.Shader = SKShader.CreateRadialGradient(                                              new SKPoint(rect.MidX' rect.MidY)'                                              (float)Math.Sqrt(Math.Pow(rect.Width / 2' 2) +                                                               Math.Pow(rect.Height / 2' 2))'                                              colors'                                              positions'                                              SKShaderTileMode.Clamp);                          break;                        case TransitionMode.Sweep:                          paint0.Shader = SKShader.CreateSweepGradient(                                              new SKPoint(rect.MidX' rect.MidY)'                                              colors'                                              positions);                          break;                  }
Magic Number,SkiaSharpFormsDemos.Effects,GradientTransitionsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\GradientTransitionsPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: switch ((TransitionMode)transitionPicker.SelectedIndex)                  {                      case TransitionMode.Linear:                          paint0.Shader = SKShader.CreateLinearGradient(                                             new SKPoint(rect.Left' 0)'                                             new SKPoint(rect.Right' 0)'                                             colors'                                             positions'                                             SKShaderTileMode.Clamp);                          break;                        case TransitionMode.Radial:                          paint0.Shader = SKShader.CreateRadialGradient(                                              new SKPoint(rect.MidX' rect.MidY)'                                              (float)Math.Sqrt(Math.Pow(rect.Width / 2' 2) +                                                               Math.Pow(rect.Height / 2' 2))'                                              colors'                                              positions'                                              SKShaderTileMode.Clamp);                          break;                        case TransitionMode.Sweep:                          paint0.Shader = SKShader.CreateSweepGradient(                                              new SKPoint(rect.MidX' rect.MidY)'                                              colors'                                              positions);                          break;                  }
Magic Number,SkiaSharpFormsDemos.Effects,GradientTransitionsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\GradientTransitionsPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: switch ((TransitionMode)transitionPicker.SelectedIndex)                  {                      case TransitionMode.Linear:                          paint0.Shader = SKShader.CreateLinearGradient(                                             new SKPoint(rect.Left' 0)'                                             new SKPoint(rect.Right' 0)'                                             colors'                                             positions'                                             SKShaderTileMode.Clamp);                          break;                        case TransitionMode.Radial:                          paint0.Shader = SKShader.CreateRadialGradient(                                              new SKPoint(rect.MidX' rect.MidY)'                                              (float)Math.Sqrt(Math.Pow(rect.Width / 2' 2) +                                                               Math.Pow(rect.Height / 2' 2))'                                              colors'                                              positions'                                              SKShaderTileMode.Clamp);                          break;                        case TransitionMode.Sweep:                          paint0.Shader = SKShader.CreateSweepGradient(                                              new SKPoint(rect.MidX' rect.MidY)'                                              colors'                                              positions);                          break;                  }
Magic Number,SkiaSharpFormsDemos.Effects,GrayScaleMatrixPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\GrayScaleMatrixPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.ColorFilter =                      SKColorFilter.CreateColorMatrix(new float[]                      {                          0.21f' 0.72f' 0.07f' 0' 0'                          0.21f' 0.72f' 0.07f' 0' 0'                          0.21f' 0.72f' 0.07f' 0' 0'                          0'     0'     0'     1' 0                      });
Magic Number,SkiaSharpFormsDemos.Effects,GrayScaleMatrixPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\GrayScaleMatrixPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.ColorFilter =                      SKColorFilter.CreateColorMatrix(new float[]                      {                          0.21f' 0.72f' 0.07f' 0' 0'                          0.21f' 0.72f' 0.07f' 0' 0'                          0.21f' 0.72f' 0.07f' 0' 0'                          0'     0'     0'     1' 0                      });
Magic Number,SkiaSharpFormsDemos.Effects,GrayScaleMatrixPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\GrayScaleMatrixPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.ColorFilter =                      SKColorFilter.CreateColorMatrix(new float[]                      {                          0.21f' 0.72f' 0.07f' 0' 0'                          0.21f' 0.72f' 0.07f' 0' 0'                          0.21f' 0.72f' 0.07f' 0' 0'                          0'     0'     0'     1' 0                      });
Magic Number,SkiaSharpFormsDemos.Effects,GrayScaleMatrixPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\GrayScaleMatrixPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.ColorFilter =                      SKColorFilter.CreateColorMatrix(new float[]                      {                          0.21f' 0.72f' 0.07f' 0' 0'                          0.21f' 0.72f' 0.07f' 0' 0'                          0.21f' 0.72f' 0.07f' 0' 0'                          0'     0'     0'     1' 0                      });
Magic Number,SkiaSharpFormsDemos.Effects,GrayScaleMatrixPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\GrayScaleMatrixPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.ColorFilter =                      SKColorFilter.CreateColorMatrix(new float[]                      {                          0.21f' 0.72f' 0.07f' 0' 0'                          0.21f' 0.72f' 0.07f' 0' 0'                          0.21f' 0.72f' 0.07f' 0' 0'                          0'     0'     0'     1' 0                      });
Magic Number,SkiaSharpFormsDemos.Effects,GrayScaleMatrixPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\GrayScaleMatrixPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.ColorFilter =                      SKColorFilter.CreateColorMatrix(new float[]                      {                          0.21f' 0.72f' 0.07f' 0' 0'                          0.21f' 0.72f' 0.07f' 0' 0'                          0.21f' 0.72f' 0.07f' 0' 0'                          0'     0'     0'     1' 0                      });
Magic Number,SkiaSharpFormsDemos.Effects,GrayScaleMatrixPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\GrayScaleMatrixPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.ColorFilter =                      SKColorFilter.CreateColorMatrix(new float[]                      {                          0.21f' 0.72f' 0.07f' 0' 0'                          0.21f' 0.72f' 0.07f' 0' 0'                          0.21f' 0.72f' 0.07f' 0' 0'                          0'     0'     0'     1' 0                      });
Magic Number,SkiaSharpFormsDemos.Effects,GrayScaleMatrixPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\GrayScaleMatrixPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.ColorFilter =                      SKColorFilter.CreateColorMatrix(new float[]                      {                          0.21f' 0.72f' 0.07f' 0' 0'                          0.21f' 0.72f' 0.07f' 0' 0'                          0.21f' 0.72f' 0.07f' 0' 0'                          0'     0'     0'     1' 0                      });
Magic Number,SkiaSharpFormsDemos.Effects,GrayScaleMatrixPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\GrayScaleMatrixPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.ColorFilter =                      SKColorFilter.CreateColorMatrix(new float[]                      {                          0.21f' 0.72f' 0.07f' 0' 0'                          0.21f' 0.72f' 0.07f' 0' 0'                          0.21f' 0.72f' 0.07f' 0' 0'                          0'     0'     0'     1' 0                      });
Magic Number,SkiaSharpFormsDemos.Effects,ImageBlurExperimentPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ImageBlurExperimentPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.TextSize = (info.Width - 100) / (TEXT.Length / 2);
Magic Number,SkiaSharpFormsDemos.Effects,ImageBlurExperimentPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ImageBlurExperimentPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.TextSize = (info.Width - 100) / (TEXT.Length / 2);
Magic Number,SkiaSharpFormsDemos.Effects,ImageBlurExperimentPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ImageBlurExperimentPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKRect textRect = new SKRect(0' 0' info.Width' textBounds.Height + 50);
Magic Number,SkiaSharpFormsDemos.Effects,ImageBlurExperimentPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ImageBlurExperimentPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float xText = textRect.Width / 2 - textBounds.MidX;
Magic Number,SkiaSharpFormsDemos.Effects,ImageBlurExperimentPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ImageBlurExperimentPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float yText = textRect.Height / 2 - textBounds.MidY;
Magic Number,SkiaSharpFormsDemos.Effects,ImageBlurExperimentPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ImageBlurExperimentPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: bitmapRect.Inflate(-50' -50);
Magic Number,SkiaSharpFormsDemos.Effects,ImageBlurExperimentPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ImageBlurExperimentPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: bitmapRect.Inflate(-50' -50);
Magic Number,SkiaSharpFormsDemos.Effects,InfinityColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InfinityColorsPage.cs,InfinityColorsPage,The following statement contains a magic number: infinityPath.CubicTo(  50'  -50'   95' -100'  150' -100);
Magic Number,SkiaSharpFormsDemos.Effects,InfinityColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InfinityColorsPage.cs,InfinityColorsPage,The following statement contains a magic number: infinityPath.CubicTo(  50'  -50'   95' -100'  150' -100);
Magic Number,SkiaSharpFormsDemos.Effects,InfinityColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InfinityColorsPage.cs,InfinityColorsPage,The following statement contains a magic number: infinityPath.CubicTo(  50'  -50'   95' -100'  150' -100);
Magic Number,SkiaSharpFormsDemos.Effects,InfinityColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InfinityColorsPage.cs,InfinityColorsPage,The following statement contains a magic number: infinityPath.CubicTo(  50'  -50'   95' -100'  150' -100);
Magic Number,SkiaSharpFormsDemos.Effects,InfinityColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InfinityColorsPage.cs,InfinityColorsPage,The following statement contains a magic number: infinityPath.CubicTo(  50'  -50'   95' -100'  150' -100);
Magic Number,SkiaSharpFormsDemos.Effects,InfinityColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InfinityColorsPage.cs,InfinityColorsPage,The following statement contains a magic number: infinityPath.CubicTo(  50'  -50'   95' -100'  150' -100);
Magic Number,SkiaSharpFormsDemos.Effects,InfinityColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InfinityColorsPage.cs,InfinityColorsPage,The following statement contains a magic number: infinityPath.CubicTo( 205' -100'  250'  -55'  250'    0);
Magic Number,SkiaSharpFormsDemos.Effects,InfinityColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InfinityColorsPage.cs,InfinityColorsPage,The following statement contains a magic number: infinityPath.CubicTo( 205' -100'  250'  -55'  250'    0);
Magic Number,SkiaSharpFormsDemos.Effects,InfinityColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InfinityColorsPage.cs,InfinityColorsPage,The following statement contains a magic number: infinityPath.CubicTo( 205' -100'  250'  -55'  250'    0);
Magic Number,SkiaSharpFormsDemos.Effects,InfinityColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InfinityColorsPage.cs,InfinityColorsPage,The following statement contains a magic number: infinityPath.CubicTo( 205' -100'  250'  -55'  250'    0);
Magic Number,SkiaSharpFormsDemos.Effects,InfinityColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InfinityColorsPage.cs,InfinityColorsPage,The following statement contains a magic number: infinityPath.CubicTo( 205' -100'  250'  -55'  250'    0);
Magic Number,SkiaSharpFormsDemos.Effects,InfinityColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InfinityColorsPage.cs,InfinityColorsPage,The following statement contains a magic number: infinityPath.CubicTo( 250'   55'  205'  100'  150'  100);
Magic Number,SkiaSharpFormsDemos.Effects,InfinityColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InfinityColorsPage.cs,InfinityColorsPage,The following statement contains a magic number: infinityPath.CubicTo( 250'   55'  205'  100'  150'  100);
Magic Number,SkiaSharpFormsDemos.Effects,InfinityColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InfinityColorsPage.cs,InfinityColorsPage,The following statement contains a magic number: infinityPath.CubicTo( 250'   55'  205'  100'  150'  100);
Magic Number,SkiaSharpFormsDemos.Effects,InfinityColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InfinityColorsPage.cs,InfinityColorsPage,The following statement contains a magic number: infinityPath.CubicTo( 250'   55'  205'  100'  150'  100);
Magic Number,SkiaSharpFormsDemos.Effects,InfinityColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InfinityColorsPage.cs,InfinityColorsPage,The following statement contains a magic number: infinityPath.CubicTo( 250'   55'  205'  100'  150'  100);
Magic Number,SkiaSharpFormsDemos.Effects,InfinityColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InfinityColorsPage.cs,InfinityColorsPage,The following statement contains a magic number: infinityPath.CubicTo( 250'   55'  205'  100'  150'  100);
Magic Number,SkiaSharpFormsDemos.Effects,InfinityColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InfinityColorsPage.cs,InfinityColorsPage,The following statement contains a magic number: infinityPath.CubicTo(  95'  100'   50'   50'    0'    0);
Magic Number,SkiaSharpFormsDemos.Effects,InfinityColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InfinityColorsPage.cs,InfinityColorsPage,The following statement contains a magic number: infinityPath.CubicTo(  95'  100'   50'   50'    0'    0);
Magic Number,SkiaSharpFormsDemos.Effects,InfinityColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InfinityColorsPage.cs,InfinityColorsPage,The following statement contains a magic number: infinityPath.CubicTo(  95'  100'   50'   50'    0'    0);
Magic Number,SkiaSharpFormsDemos.Effects,InfinityColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InfinityColorsPage.cs,InfinityColorsPage,The following statement contains a magic number: infinityPath.CubicTo(  95'  100'   50'   50'    0'    0);
Magic Number,SkiaSharpFormsDemos.Effects,InfinityColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InfinityColorsPage.cs,InfinityColorsPage,The following statement contains a magic number: infinityPath.CubicTo( -50'  -50'  -95' -100' -150' -100);
Magic Number,SkiaSharpFormsDemos.Effects,InfinityColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InfinityColorsPage.cs,InfinityColorsPage,The following statement contains a magic number: infinityPath.CubicTo( -50'  -50'  -95' -100' -150' -100);
Magic Number,SkiaSharpFormsDemos.Effects,InfinityColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InfinityColorsPage.cs,InfinityColorsPage,The following statement contains a magic number: infinityPath.CubicTo( -50'  -50'  -95' -100' -150' -100);
Magic Number,SkiaSharpFormsDemos.Effects,InfinityColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InfinityColorsPage.cs,InfinityColorsPage,The following statement contains a magic number: infinityPath.CubicTo( -50'  -50'  -95' -100' -150' -100);
Magic Number,SkiaSharpFormsDemos.Effects,InfinityColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InfinityColorsPage.cs,InfinityColorsPage,The following statement contains a magic number: infinityPath.CubicTo( -50'  -50'  -95' -100' -150' -100);
Magic Number,SkiaSharpFormsDemos.Effects,InfinityColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InfinityColorsPage.cs,InfinityColorsPage,The following statement contains a magic number: infinityPath.CubicTo( -50'  -50'  -95' -100' -150' -100);
Magic Number,SkiaSharpFormsDemos.Effects,InfinityColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InfinityColorsPage.cs,InfinityColorsPage,The following statement contains a magic number: infinityPath.CubicTo(-205' -100' -250'  -55' -250'    0);
Magic Number,SkiaSharpFormsDemos.Effects,InfinityColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InfinityColorsPage.cs,InfinityColorsPage,The following statement contains a magic number: infinityPath.CubicTo(-205' -100' -250'  -55' -250'    0);
Magic Number,SkiaSharpFormsDemos.Effects,InfinityColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InfinityColorsPage.cs,InfinityColorsPage,The following statement contains a magic number: infinityPath.CubicTo(-205' -100' -250'  -55' -250'    0);
Magic Number,SkiaSharpFormsDemos.Effects,InfinityColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InfinityColorsPage.cs,InfinityColorsPage,The following statement contains a magic number: infinityPath.CubicTo(-205' -100' -250'  -55' -250'    0);
Magic Number,SkiaSharpFormsDemos.Effects,InfinityColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InfinityColorsPage.cs,InfinityColorsPage,The following statement contains a magic number: infinityPath.CubicTo(-205' -100' -250'  -55' -250'    0);
Magic Number,SkiaSharpFormsDemos.Effects,InfinityColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InfinityColorsPage.cs,InfinityColorsPage,The following statement contains a magic number: infinityPath.CubicTo(-250'   55' -205'  100' -150'  100);
Magic Number,SkiaSharpFormsDemos.Effects,InfinityColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InfinityColorsPage.cs,InfinityColorsPage,The following statement contains a magic number: infinityPath.CubicTo(-250'   55' -205'  100' -150'  100);
Magic Number,SkiaSharpFormsDemos.Effects,InfinityColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InfinityColorsPage.cs,InfinityColorsPage,The following statement contains a magic number: infinityPath.CubicTo(-250'   55' -205'  100' -150'  100);
Magic Number,SkiaSharpFormsDemos.Effects,InfinityColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InfinityColorsPage.cs,InfinityColorsPage,The following statement contains a magic number: infinityPath.CubicTo(-250'   55' -205'  100' -150'  100);
Magic Number,SkiaSharpFormsDemos.Effects,InfinityColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InfinityColorsPage.cs,InfinityColorsPage,The following statement contains a magic number: infinityPath.CubicTo(-250'   55' -205'  100' -150'  100);
Magic Number,SkiaSharpFormsDemos.Effects,InfinityColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InfinityColorsPage.cs,InfinityColorsPage,The following statement contains a magic number: infinityPath.CubicTo(-250'   55' -205'  100' -150'  100);
Magic Number,SkiaSharpFormsDemos.Effects,InfinityColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InfinityColorsPage.cs,InfinityColorsPage,The following statement contains a magic number: infinityPath.CubicTo( -95'  100' - 50'   50'    0'    0);
Magic Number,SkiaSharpFormsDemos.Effects,InfinityColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InfinityColorsPage.cs,InfinityColorsPage,The following statement contains a magic number: infinityPath.CubicTo( -95'  100' - 50'   50'    0'    0);
Magic Number,SkiaSharpFormsDemos.Effects,InfinityColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InfinityColorsPage.cs,InfinityColorsPage,The following statement contains a magic number: infinityPath.CubicTo( -95'  100' - 50'   50'    0'    0);
Magic Number,SkiaSharpFormsDemos.Effects,InfinityColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InfinityColorsPage.cs,InfinityColorsPage,The following statement contains a magic number: infinityPath.CubicTo( -95'  100' - 50'   50'    0'    0);
Magic Number,SkiaSharpFormsDemos.Effects,InfinityColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InfinityColorsPage.cs,InfinityColorsPage,The following statement contains a magic number: colors[i] = SKColor.FromHsl(i * 360f / (colors.Length - 1)' 100' 50);
Magic Number,SkiaSharpFormsDemos.Effects,InfinityColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InfinityColorsPage.cs,InfinityColorsPage,The following statement contains a magic number: colors[i] = SKColor.FromHsl(i * 360f / (colors.Length - 1)' 100' 50);
Magic Number,SkiaSharpFormsDemos.Effects,InfinityColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InfinityColorsPage.cs,InfinityColorsPage,The following statement contains a magic number: colors[i] = SKColor.FromHsl(i * 360f / (colors.Length - 1)' 100' 50);
Magic Number,SkiaSharpFormsDemos.Effects,InfinityColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InfinityColorsPage.cs,OnAppearing,The following statement contains a magic number: Device.StartTimer(TimeSpan.FromMilliseconds(16)' OnTimerTick);
Magic Number,SkiaSharpFormsDemos.Effects,InfinityColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InfinityColorsPage.cs,OnTimerTick,The following statement contains a magic number: const int duration = 2;
Magic Number,SkiaSharpFormsDemos.Effects,InfinityColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InfinityColorsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Effects,InfinityColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InfinityColorsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Effects,InfinityColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InfinityColorsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Scale(0.95f *                   Math.Min(info.Width / (pathBounds.Width + STROKE_WIDTH)'                           info.Height / (pathBounds.Height + STROKE_WIDTH)));
Magic Number,SkiaSharpFormsDemos.Effects,InteractiveLinearGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InteractiveLinearGradientPage.xaml.cs,InteractiveLinearGradientPage,The following statement contains a magic number: touchPoints = new TouchPoint[2];
Magic Number,SkiaSharpFormsDemos.Effects,InteractiveLinearGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InteractiveLinearGradientPage.xaml.cs,InteractiveLinearGradientPage,The following statement contains a magic number: touchPoints[i] = new TouchPoint                  {                      Center = new SKPoint(100 + i * 200' 100 + i * 200)                  };
Magic Number,SkiaSharpFormsDemos.Effects,InteractiveLinearGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InteractiveLinearGradientPage.xaml.cs,InteractiveLinearGradientPage,The following statement contains a magic number: touchPoints[i] = new TouchPoint                  {                      Center = new SKPoint(100 + i * 200' 100 + i * 200)                  };
Magic Number,SkiaSharpFormsDemos.Effects,InteractiveLinearGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InteractiveLinearGradientPage.xaml.cs,InteractiveLinearGradientPage,The following statement contains a magic number: touchPoints[i] = new TouchPoint                  {                      Center = new SKPoint(100 + i * 200' 100 + i * 200)                  };
Magic Number,SkiaSharpFormsDemos.Effects,InteractiveLinearGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InteractiveLinearGradientPage.xaml.cs,InteractiveLinearGradientPage,The following statement contains a magic number: touchPoints[i] = new TouchPoint                  {                      Center = new SKPoint(100 + i * 200' 100 + i * 200)                  };
Magic Number,SkiaSharpFormsDemos.Effects,InteractiveLinearGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InteractiveLinearGradientPage.xaml.cs,InteractiveLinearGradientPage,The following statement contains a magic number: i < 2
Magic Number,SkiaSharpFormsDemos.Effects,InteractiveLinearGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InteractiveLinearGradientPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.StrokeWidth = 3;
Magic Number,SkiaSharpFormsDemos.Effects,InteractiveLinearGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InteractiveLinearGradientPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float length = (float)Math.Sqrt(Math.Pow(vector.X' 2) +                                                  Math.Pow(vector.Y' 2));
Magic Number,SkiaSharpFormsDemos.Effects,InteractiveLinearGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InteractiveLinearGradientPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float length = (float)Math.Sqrt(Math.Pow(vector.X' 2) +                                                  Math.Pow(vector.Y' 2));
Magic Number,SkiaSharpFormsDemos.Effects,InteractiveLinearGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InteractiveLinearGradientPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: rotate90.X *= 200;
Magic Number,SkiaSharpFormsDemos.Effects,InteractiveLinearGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\InteractiveLinearGradientPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: rotate90.Y *= 200;
Magic Number,SkiaSharpFormsDemos.Effects,LightenAndDarkenPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\LightenAndDarkenPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float x = (info.Width - rect.Width) / 2;
Magic Number,SkiaSharpFormsDemos.Effects,LightenAndDarkenPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\LightenAndDarkenPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float y = (info.Height - rect.Height) / 2;
Magic Number,SkiaSharpFormsDemos.Effects,LightenAndDarkenPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\LightenAndDarkenPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: byte value = (byte)(255 * lightenSlider.Value);
Magic Number,SkiaSharpFormsDemos.Effects,MaskBlurExperimentPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\MaskBlurExperimentPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.TextSize = (info.Width - 100) / (TEXT.Length / 2);
Magic Number,SkiaSharpFormsDemos.Effects,MaskBlurExperimentPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\MaskBlurExperimentPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.TextSize = (info.Width - 100) / (TEXT.Length / 2);
Magic Number,SkiaSharpFormsDemos.Effects,MaskBlurExperimentPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\MaskBlurExperimentPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKRect textRect = new SKRect(0' 0' info.Width' textBounds.Height + 50);
Magic Number,SkiaSharpFormsDemos.Effects,MaskBlurExperimentPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\MaskBlurExperimentPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float xText = textRect.Width / 2 - textBounds.MidX;
Magic Number,SkiaSharpFormsDemos.Effects,MaskBlurExperimentPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\MaskBlurExperimentPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float yText = textRect.Height / 2 - textBounds.MidY;
Magic Number,SkiaSharpFormsDemos.Effects,MaskBlurExperimentPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\MaskBlurExperimentPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: bitmapRect.Inflate(-50' -50);
Magic Number,SkiaSharpFormsDemos.Effects,MaskBlurExperimentPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\MaskBlurExperimentPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: bitmapRect.Inflate(-50' -50);
Magic Number,SkiaSharpFormsDemos.Effects,PastelMatrixPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PastelMatrixPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.ColorFilter =                      SKColorFilter.CreateColorMatrix(new float[]                      {                          0.75f' 0.25f' 0.25f' 0' 0'                          0.25f' 0.75f' 0.25f' 0' 0'                          0.25f' 0.25f' 0.75f' 0' 0'                          0' 0' 0' 1' 0                      });
Magic Number,SkiaSharpFormsDemos.Effects,PastelMatrixPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PastelMatrixPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.ColorFilter =                      SKColorFilter.CreateColorMatrix(new float[]                      {                          0.75f' 0.25f' 0.25f' 0' 0'                          0.25f' 0.75f' 0.25f' 0' 0'                          0.25f' 0.25f' 0.75f' 0' 0'                          0' 0' 0' 1' 0                      });
Magic Number,SkiaSharpFormsDemos.Effects,PastelMatrixPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PastelMatrixPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.ColorFilter =                      SKColorFilter.CreateColorMatrix(new float[]                      {                          0.75f' 0.25f' 0.25f' 0' 0'                          0.25f' 0.75f' 0.25f' 0' 0'                          0.25f' 0.25f' 0.75f' 0' 0'                          0' 0' 0' 1' 0                      });
Magic Number,SkiaSharpFormsDemos.Effects,PastelMatrixPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PastelMatrixPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.ColorFilter =                      SKColorFilter.CreateColorMatrix(new float[]                      {                          0.75f' 0.25f' 0.25f' 0' 0'                          0.25f' 0.75f' 0.25f' 0' 0'                          0.25f' 0.25f' 0.75f' 0' 0'                          0' 0' 0' 1' 0                      });
Magic Number,SkiaSharpFormsDemos.Effects,PastelMatrixPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PastelMatrixPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.ColorFilter =                      SKColorFilter.CreateColorMatrix(new float[]                      {                          0.75f' 0.25f' 0.25f' 0' 0'                          0.25f' 0.75f' 0.25f' 0' 0'                          0.25f' 0.25f' 0.75f' 0' 0'                          0' 0' 0' 1' 0                      });
Magic Number,SkiaSharpFormsDemos.Effects,PastelMatrixPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PastelMatrixPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.ColorFilter =                      SKColorFilter.CreateColorMatrix(new float[]                      {                          0.75f' 0.25f' 0.25f' 0' 0'                          0.25f' 0.75f' 0.25f' 0' 0'                          0.25f' 0.25f' 0.75f' 0' 0'                          0' 0' 0' 1' 0                      });
Magic Number,SkiaSharpFormsDemos.Effects,PastelMatrixPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PastelMatrixPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.ColorFilter =                      SKColorFilter.CreateColorMatrix(new float[]                      {                          0.75f' 0.25f' 0.25f' 0' 0'                          0.25f' 0.75f' 0.25f' 0' 0'                          0.25f' 0.25f' 0.75f' 0' 0'                          0' 0' 0' 1' 0                      });
Magic Number,SkiaSharpFormsDemos.Effects,PastelMatrixPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PastelMatrixPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.ColorFilter =                      SKColorFilter.CreateColorMatrix(new float[]                      {                          0.75f' 0.25f' 0.25f' 0' 0'                          0.25f' 0.75f' 0.25f' 0' 0'                          0.25f' 0.25f' 0.75f' 0' 0'                          0' 0' 0' 1' 0                      });
Magic Number,SkiaSharpFormsDemos.Effects,PastelMatrixPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PastelMatrixPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.ColorFilter =                      SKColorFilter.CreateColorMatrix(new float[]                      {                          0.75f' 0.25f' 0.25f' 0' 0'                          0.25f' 0.75f' 0.25f' 0' 0'                          0.25f' 0.25f' 0.75f' 0' 0'                          0' 0' 0' 1' 0                      });
Magic Number,SkiaSharpFormsDemos.Effects,PerlinNoisePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PerlinNoisePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float baseFreqX = (float)Math.Pow(10' baseFrequencyXSlider.Value - 4);
Magic Number,SkiaSharpFormsDemos.Effects,PerlinNoisePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PerlinNoisePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float baseFreqX = (float)Math.Pow(10' baseFrequencyXSlider.Value - 4);
Magic Number,SkiaSharpFormsDemos.Effects,PerlinNoisePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PerlinNoisePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float baseFreqY = (float)Math.Pow(10' baseFrequencyYSlider.Value - 4);
Magic Number,SkiaSharpFormsDemos.Effects,PerlinNoisePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PerlinNoisePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float baseFreqY = (float)Math.Pow(10' baseFrequencyYSlider.Value - 4);
Magic Number,SkiaSharpFormsDemos.Effects,PerlinNoisePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PerlinNoisePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKRect rect = new SKRect(0' 0' info.Width' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Effects,PerlinNoisePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PerlinNoisePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: rect = new SKRect(0' info.Height / 2' info.Width' info.Height);
Magic Number,SkiaSharpFormsDemos.Effects,PorterDuffCanvasView,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PorterDuffCanvasView.cs,PorterDuffCanvasView,The following statement contains a magic number: dstBitmap = new SKBitmap(300' 300);
Magic Number,SkiaSharpFormsDemos.Effects,PorterDuffCanvasView,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PorterDuffCanvasView.cs,PorterDuffCanvasView,The following statement contains a magic number: dstBitmap = new SKBitmap(300' 300);
Magic Number,SkiaSharpFormsDemos.Effects,PorterDuffCanvasView,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PorterDuffCanvasView.cs,PorterDuffCanvasView,The following statement contains a magic number: srcBitmap = new SKBitmap(300' 300);
Magic Number,SkiaSharpFormsDemos.Effects,PorterDuffCanvasView,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PorterDuffCanvasView.cs,PorterDuffCanvasView,The following statement contains a magic number: srcBitmap = new SKBitmap(300' 300);
Magic Number,SkiaSharpFormsDemos.Effects,PorterDuffCanvasView,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PorterDuffCanvasView.cs,PorterDuffCanvasView,The following statement contains a magic number: canvas.DrawRect(new SKRect(0' 0' 200' 200)' paint);
Magic Number,SkiaSharpFormsDemos.Effects,PorterDuffCanvasView,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PorterDuffCanvasView.cs,PorterDuffCanvasView,The following statement contains a magic number: canvas.DrawRect(new SKRect(0' 0' 200' 200)' paint);
Magic Number,SkiaSharpFormsDemos.Effects,PorterDuffCanvasView,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PorterDuffCanvasView.cs,PorterDuffCanvasView,The following statement contains a magic number: canvas.DrawRect(new SKRect(100' 100' 300' 300)' paint);
Magic Number,SkiaSharpFormsDemos.Effects,PorterDuffCanvasView,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PorterDuffCanvasView.cs,PorterDuffCanvasView,The following statement contains a magic number: canvas.DrawRect(new SKRect(100' 100' 300' 300)' paint);
Magic Number,SkiaSharpFormsDemos.Effects,PorterDuffCanvasView,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PorterDuffCanvasView.cs,PorterDuffCanvasView,The following statement contains a magic number: canvas.DrawRect(new SKRect(100' 100' 300' 300)' paint);
Magic Number,SkiaSharpFormsDemos.Effects,PorterDuffCanvasView,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PorterDuffCanvasView.cs,PorterDuffCanvasView,The following statement contains a magic number: canvas.DrawRect(new SKRect(100' 100' 300' 300)' paint);
Magic Number,SkiaSharpFormsDemos.Effects,PorterDuffCanvasView,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PorterDuffCanvasView.cs,OnPaintSurface,The following statement contains a magic number: float x = (info.Width - rectSize) / 2;
Magic Number,SkiaSharpFormsDemos.Effects,PorterDuffCanvasView,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PorterDuffCanvasView.cs,OnPaintSurface,The following statement contains a magic number: float y = (info.Height - rectSize) / 2;
Magic Number,SkiaSharpFormsDemos.Effects,PorterDuffCanvasView,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PorterDuffCanvasView.cs,OnPaintSurface,The following statement contains a magic number: paint.StrokeWidth = 2;
Magic Number,SkiaSharpFormsDemos.Effects,PorterDuffGridPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PorterDuffGridPage.cs,PorterDuffGridPage,The following statement contains a magic number: Grid grid = new Grid              {                  Margin = new Thickness(5)              };
Magic Number,SkiaSharpFormsDemos.Effects,PorterDuffGridPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PorterDuffGridPage.cs,PorterDuffGridPage,The following statement contains a magic number: row < 4
Magic Number,SkiaSharpFormsDemos.Effects,PorterDuffGridPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PorterDuffGridPage.cs,PorterDuffGridPage,The following statement contains a magic number: col < 3
Magic Number,SkiaSharpFormsDemos.Effects,PorterDuffGridPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PorterDuffGridPage.cs,PorterDuffGridPage,The following statement contains a magic number: int row = 2 * (i / 4);
Magic Number,SkiaSharpFormsDemos.Effects,PorterDuffGridPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PorterDuffGridPage.cs,PorterDuffGridPage,The following statement contains a magic number: int row = 2 * (i / 4);
Magic Number,SkiaSharpFormsDemos.Effects,PorterDuffGridPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PorterDuffGridPage.cs,PorterDuffGridPage,The following statement contains a magic number: int col = i % 4;
Magic Number,SkiaSharpFormsDemos.Effects,PorterDuffTransparencyPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PorterDuffTransparencyPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float size = 0.9f * Math.Min(info.Width' info.Height);
Magic Number,SkiaSharpFormsDemos.Effects,PorterDuffTransparencyPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PorterDuffTransparencyPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float x = (info.Width - size) / 2;
Magic Number,SkiaSharpFormsDemos.Effects,PorterDuffTransparencyPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PorterDuffTransparencyPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float y = (info.Height - size) / 2;
Magic Number,SkiaSharpFormsDemos.Effects,PorterDuffTransparencyPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PorterDuffTransparencyPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.Shader = SKShader.CreateLinearGradient(                                      new SKPoint(rect.Right' rect.Top)'                                      new SKPoint(rect.Left' rect.Bottom)'                                      new SKColor[] { new SKColor(0xC0' 0x80' 0x00)'                                                      new SKColor(0xC0' 0x80' 0x00' 0) }'                                      new float[] { 0.4f' 0.6f }'                                      SKShaderTileMode.Clamp);
Magic Number,SkiaSharpFormsDemos.Effects,PorterDuffTransparencyPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PorterDuffTransparencyPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.Shader = SKShader.CreateLinearGradient(                                      new SKPoint(rect.Right' rect.Top)'                                      new SKPoint(rect.Left' rect.Bottom)'                                      new SKColor[] { new SKColor(0xC0' 0x80' 0x00)'                                                      new SKColor(0xC0' 0x80' 0x00' 0) }'                                      new float[] { 0.4f' 0.6f }'                                      SKShaderTileMode.Clamp);
Magic Number,SkiaSharpFormsDemos.Effects,PorterDuffTransparencyPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PorterDuffTransparencyPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.Shader = SKShader.CreateLinearGradient(                                      new SKPoint(rect.Left' rect.Top)'                                      new SKPoint(rect.Right' rect.Bottom)'                                      new SKColor[] { new SKColor(0x00' 0x80' 0xC0)'                                                       new SKColor(0x00' 0x80' 0xC0' 0) }'                                      new float[] { 0.4f' 0.6f }'                                      SKShaderTileMode.Clamp);
Magic Number,SkiaSharpFormsDemos.Effects,PorterDuffTransparencyPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PorterDuffTransparencyPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.Shader = SKShader.CreateLinearGradient(                                      new SKPoint(rect.Left' rect.Top)'                                      new SKPoint(rect.Right' rect.Bottom)'                                      new SKColor[] { new SKColor(0x00' 0x80' 0xC0)'                                                       new SKColor(0x00' 0x80' 0xC0' 0) }'                                      new float[] { 0.4f' 0.6f }'                                      SKShaderTileMode.Clamp);
Magic Number,SkiaSharpFormsDemos.Effects,PorterDuffTransparencyPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PorterDuffTransparencyPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.StrokeWidth = 3;
Magic Number,SkiaSharpFormsDemos.Effects,PosterizeTablePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PosterizeTablePage.cs,PosterizeTablePage,The following statement contains a magic number: i < 256
Magic Number,SkiaSharpFormsDemos.Effects,PrimaryColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PrimaryColorsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float radius = Math.Min(info.Width' info.Height) / 4;
Magic Number,SkiaSharpFormsDemos.Effects,PrimaryColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PrimaryColorsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float distance = 0.8f * radius;
Magic Number,SkiaSharpFormsDemos.Effects,PrimaryColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PrimaryColorsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKPoint center1 = center +                   new SKPoint(distance * (float)Math.Cos(9 * Math.PI / 6)'                              distance * (float)Math.Sin(9 * Math.PI / 6));
Magic Number,SkiaSharpFormsDemos.Effects,PrimaryColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PrimaryColorsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKPoint center1 = center +                   new SKPoint(distance * (float)Math.Cos(9 * Math.PI / 6)'                              distance * (float)Math.Sin(9 * Math.PI / 6));
Magic Number,SkiaSharpFormsDemos.Effects,PrimaryColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PrimaryColorsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKPoint center1 = center +                   new SKPoint(distance * (float)Math.Cos(9 * Math.PI / 6)'                              distance * (float)Math.Sin(9 * Math.PI / 6));
Magic Number,SkiaSharpFormsDemos.Effects,PrimaryColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PrimaryColorsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKPoint center1 = center +                   new SKPoint(distance * (float)Math.Cos(9 * Math.PI / 6)'                              distance * (float)Math.Sin(9 * Math.PI / 6));
Magic Number,SkiaSharpFormsDemos.Effects,PrimaryColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PrimaryColorsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKPoint center2 = center +                  new SKPoint(distance * (float)Math.Cos(1 * Math.PI / 6)'                              distance * (float)Math.Sin(1 * Math.PI / 6));
Magic Number,SkiaSharpFormsDemos.Effects,PrimaryColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PrimaryColorsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKPoint center2 = center +                  new SKPoint(distance * (float)Math.Cos(1 * Math.PI / 6)'                              distance * (float)Math.Sin(1 * Math.PI / 6));
Magic Number,SkiaSharpFormsDemos.Effects,PrimaryColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PrimaryColorsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKPoint center3 = center +                  new SKPoint(distance * (float)Math.Cos(5 * Math.PI / 6)'                              distance * (float)Math.Sin(5 * Math.PI / 6));
Magic Number,SkiaSharpFormsDemos.Effects,PrimaryColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PrimaryColorsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKPoint center3 = center +                  new SKPoint(distance * (float)Math.Cos(5 * Math.PI / 6)'                              distance * (float)Math.Sin(5 * Math.PI / 6));
Magic Number,SkiaSharpFormsDemos.Effects,PrimaryColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PrimaryColorsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKPoint center3 = center +                  new SKPoint(distance * (float)Math.Cos(5 * Math.PI / 6)'                              distance * (float)Math.Sin(5 * Math.PI / 6));
Magic Number,SkiaSharpFormsDemos.Effects,PrimaryColorsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\PrimaryColorsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKPoint center3 = center +                  new SKPoint(distance * (float)Math.Cos(5 * Math.PI / 6)'                              distance * (float)Math.Sin(5 * Math.PI / 6));
Magic Number,SkiaSharpFormsDemos.Effects,RadialGradientMaskPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\RadialGradientMaskPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float x = (info.Width - rect.Width) / 2;
Magic Number,SkiaSharpFormsDemos.Effects,RadialGradientMaskPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\RadialGradientMaskPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float y = (info.Height - rect.Height) / 2;
Magic Number,SkiaSharpFormsDemos.Effects,RadialGradientMaskPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\RadialGradientMaskPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.Shader = SKShader.CreateRadialGradient(                                      center'                                      radius'                                      new SKColor[] { SKColors.Transparent'                                                      SKColors.White }'                                      new float[] { 0.6f' 1 }'                                      SKShaderTileMode.Clamp);
Magic Number,SkiaSharpFormsDemos.Effects,RadialGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\RadialGradientPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.Shader = SKShader.CreateRadialGradient(                                      new SKPoint(info.Rect.MidX' info.Rect.MidY)'                                      100'                                      new SKColor[] { SKColors.Black' SKColors.White }'                                      null'                                      tileMode);
Magic Number,SkiaSharpFormsDemos.Effects,RadialSpecularHighlightPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\RadialSpecularHighlightPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float radius = 0.4f * Math.Min(info.Width' info.Height);
Magic Number,SkiaSharpFormsDemos.Effects,RadialSpecularHighlightPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\RadialSpecularHighlightPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKPoint offCenter = center - new SKPoint(radius / 2' radius / 2);
Magic Number,SkiaSharpFormsDemos.Effects,RadialSpecularHighlightPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\RadialSpecularHighlightPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKPoint offCenter = center - new SKPoint(radius / 2' radius / 2);
Magic Number,SkiaSharpFormsDemos.Effects,RadialSpecularHighlightPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\RadialSpecularHighlightPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.Shader = SKShader.CreateRadialGradient(                                      offCenter'                                      radius / 2'                                      new SKColor[] { SKColors.White' SKColors.Red }'                                      null'                                      SKShaderTileMode.Clamp);
Magic Number,SkiaSharpFormsDemos.Effects,RainbowArcGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\RainbowArcGradientPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float rainbowWidth = Math.Min(info.Width' info.Height) / 4f;
Magic Number,SkiaSharpFormsDemos.Effects,RainbowArcGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\RainbowArcGradientPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float radius = outerRadius - rainbowWidth / 2;
Magic Number,SkiaSharpFormsDemos.Effects,RainbowArcGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\RainbowArcGradientPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKColor[] colors = new SKColor[8];
Magic Number,SkiaSharpFormsDemos.Effects,RainbowArcGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\RainbowArcGradientPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float[] positions = new float[8];
Magic Number,SkiaSharpFormsDemos.Effects,RainbowArcGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\RainbowArcGradientPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: colors[i] = SKColor.FromHsl(i * 360f / 7' 100' 50);
Magic Number,SkiaSharpFormsDemos.Effects,RainbowArcGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\RainbowArcGradientPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: colors[i] = SKColor.FromHsl(i * 360f / 7' 100' 50);
Magic Number,SkiaSharpFormsDemos.Effects,RainbowArcGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\RainbowArcGradientPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: colors[i] = SKColor.FromHsl(i * 360f / 7' 100' 50);
Magic Number,SkiaSharpFormsDemos.Effects,RainbowArcGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\RainbowArcGradientPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: colors[i] = SKColor.FromHsl(i * 360f / 7' 100' 50);
Magic Number,SkiaSharpFormsDemos.Effects,RainbowArcGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\RainbowArcGradientPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: positions[i] = (i + (7f - i) * innerRadius / outerRadius) / 7f;
Magic Number,SkiaSharpFormsDemos.Effects,RainbowArcGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\RainbowArcGradientPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: positions[i] = (i + (7f - i) * innerRadius / outerRadius) / 7f;
Magic Number,SkiaSharpFormsDemos.Effects,RainbowGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\RainbowGradientPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float rainbowWidth = Math.Min(info.Width' info.Height) / 2f;
Magic Number,SkiaSharpFormsDemos.Effects,RainbowGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\RainbowGradientPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.LineTo(rainbowWidth / 2' 0);
Magic Number,SkiaSharpFormsDemos.Effects,RainbowGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\RainbowGradientPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.LineTo(info.Width' info.Height - rainbowWidth / 2);
Magic Number,SkiaSharpFormsDemos.Effects,RainbowGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\RainbowGradientPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.LineTo(info.Width - rainbowWidth / 2' info.Height);
Magic Number,SkiaSharpFormsDemos.Effects,RainbowGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\RainbowGradientPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.LineTo(0' rainbowWidth / 2);
Magic Number,SkiaSharpFormsDemos.Effects,RainbowGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\RainbowGradientPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKColor[] colors = new SKColor[8];
Magic Number,SkiaSharpFormsDemos.Effects,RainbowGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\RainbowGradientPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: colors[i] = SKColor.FromHsl(i * 360f / (colors.Length - 1)' 100' 50);
Magic Number,SkiaSharpFormsDemos.Effects,RainbowGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\RainbowGradientPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: colors[i] = SKColor.FromHsl(i * 360f / (colors.Length - 1)' 100' 50);
Magic Number,SkiaSharpFormsDemos.Effects,RainbowGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\RainbowGradientPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: colors[i] = SKColor.FromHsl(i * 360f / (colors.Length - 1)' 100' 50);
Magic Number,SkiaSharpFormsDemos.Effects,RainbowGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\RainbowGradientPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKPoint edgeVector = new SKPoint(info.Width - rainbowWidth / 2' info.Height) -                                              new SKPoint(0' rainbowWidth / 2);
Magic Number,SkiaSharpFormsDemos.Effects,RainbowGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\RainbowGradientPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKPoint edgeVector = new SKPoint(info.Width - rainbowWidth / 2' info.Height) -                                              new SKPoint(0' rainbowWidth / 2);
Magic Number,SkiaSharpFormsDemos.Effects,RainbowGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\RainbowGradientPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float length = (float)Math.Sqrt(Math.Pow(gradientVector.X' 2) +                                                      Math.Pow(gradientVector.Y' 2));
Magic Number,SkiaSharpFormsDemos.Effects,RainbowGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\RainbowGradientPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float length = (float)Math.Sqrt(Math.Pow(gradientVector.X' 2) +                                                      Math.Pow(gradientVector.Y' 2));
Magic Number,SkiaSharpFormsDemos.Effects,RainbowGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\RainbowGradientPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKPoint point1 = new SKPoint(0' rainbowWidth / 2);
Magic Number,SkiaSharpFormsDemos.Effects,ReflectionGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ReflectionGradientPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.TextSize = 100;
Magic Number,SkiaSharpFormsDemos.Effects,ReflectionGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ReflectionGradientPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float scale = 0.9f * info.Width / width;
Magic Number,SkiaSharpFormsDemos.Effects,ReflectionGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ReflectionGradientPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float xText = info.Width / 2 - textBounds.MidX;
Magic Number,SkiaSharpFormsDemos.Effects,ReflectionGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\ReflectionGradientPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float yText = info.Height / 2;
Magic Number,SkiaSharpFormsDemos.Effects,SeparableBlendModesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\SeparableBlendModesPage.xaml.cs,OnSliderValueChanged,The following statement contains a magic number: colorLabel.Text = String.Format("Color = {0:X2} {1:X2} {2:X2}"'                                              (byte)(255 * redSlider.Value)'                                              (byte)(255 * greenSlider.Value)'                                              (byte)(255 * blueSlider.Value));
Magic Number,SkiaSharpFormsDemos.Effects,SeparableBlendModesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\SeparableBlendModesPage.xaml.cs,OnSliderValueChanged,The following statement contains a magic number: colorLabel.Text = String.Format("Color = {0:X2} {1:X2} {2:X2}"'                                              (byte)(255 * redSlider.Value)'                                              (byte)(255 * greenSlider.Value)'                                              (byte)(255 * blueSlider.Value));
Magic Number,SkiaSharpFormsDemos.Effects,SeparableBlendModesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\SeparableBlendModesPage.xaml.cs,OnSliderValueChanged,The following statement contains a magic number: colorLabel.Text = String.Format("Color = {0:X2} {1:X2} {2:X2}"'                                              (byte)(255 * redSlider.Value)'                                              (byte)(255 * greenSlider.Value)'                                              (byte)(255 * blueSlider.Value));
Magic Number,SkiaSharpFormsDemos.Effects,SeparableBlendModesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\SeparableBlendModesPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKRect rect = new SKRect(0' 0' info.Width' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Effects,SeparableBlendModesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\SeparableBlendModesPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: rect = new SKRect(0' info.Height / 2' info.Width' info.Height);
Magic Number,SkiaSharpFormsDemos.Effects,SeparableBlendModesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\SeparableBlendModesPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKColor color = new SKColor((byte)(255 * redSlider.Value)'                                          (byte)(255 * greenSlider.Value)'                                          (byte)(255 * blueSlider.Value));
Magic Number,SkiaSharpFormsDemos.Effects,SeparableBlendModesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\SeparableBlendModesPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKColor color = new SKColor((byte)(255 * redSlider.Value)'                                          (byte)(255 * greenSlider.Value)'                                          (byte)(255 * blueSlider.Value));
Magic Number,SkiaSharpFormsDemos.Effects,SeparableBlendModesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\SeparableBlendModesPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKColor color = new SKColor((byte)(255 * redSlider.Value)'                                          (byte)(255 * greenSlider.Value)'                                          (byte)(255 * blueSlider.Value));
Magic Number,SkiaSharpFormsDemos.Effects,StoneWallPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\StoneWallPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKMatrix matrix = SKMatrix.MakeScale(0.5f' 0.5f);
Magic Number,SkiaSharpFormsDemos.Effects,StoneWallPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\StoneWallPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKMatrix matrix = SKMatrix.MakeScale(0.5f' 0.5f);
Magic Number,SkiaSharpFormsDemos.Effects,SweepGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\SweepGradientPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKColor[] colors = new SKColor[8];
Magic Number,SkiaSharpFormsDemos.Effects,SweepGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\SweepGradientPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: colors[i] = SKColor.FromHsl(i * 360f / 7' 100' 50);
Magic Number,SkiaSharpFormsDemos.Effects,SweepGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\SweepGradientPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: colors[i] = SKColor.FromHsl(i * 360f / 7' 100' 50);
Magic Number,SkiaSharpFormsDemos.Effects,SweepGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\SweepGradientPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: colors[i] = SKColor.FromHsl(i * 360f / 7' 100' 50);
Magic Number,SkiaSharpFormsDemos.Effects,SweepGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\SweepGradientPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: colors[i] = SKColor.FromHsl(i * 360f / 7' 100' 50);
Magic Number,SkiaSharpFormsDemos.Effects,SweepGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\SweepGradientPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: const int strokeWidth = 50;
Magic Number,SkiaSharpFormsDemos.Effects,SweepGradientPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\SweepGradientPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float radius = (Math.Min(info.Width' info.Height) - strokeWidth) / 2;
Magic Number,SkiaSharpFormsDemos.Effects,TileAlignmentPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\TileAlignmentPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKRect rect = new SKRect(info.Width / 7'                                              info.Height / 7'                                              6 * info.Width / 7'                                              6 * info.Height / 7);
Magic Number,SkiaSharpFormsDemos.Effects,TileAlignmentPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\TileAlignmentPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKRect rect = new SKRect(info.Width / 7'                                              info.Height / 7'                                              6 * info.Width / 7'                                              6 * info.Height / 7);
Magic Number,SkiaSharpFormsDemos.Effects,TileAlignmentPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\TileAlignmentPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKRect rect = new SKRect(info.Width / 7'                                              info.Height / 7'                                              6 * info.Width / 7'                                              6 * info.Height / 7);
Magic Number,SkiaSharpFormsDemos.Effects,TileAlignmentPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\TileAlignmentPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKRect rect = new SKRect(info.Width / 7'                                              info.Height / 7'                                              6 * info.Width / 7'                                              6 * info.Height / 7);
Magic Number,SkiaSharpFormsDemos.Effects,TileAlignmentPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\TileAlignmentPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKRect rect = new SKRect(info.Width / 7'                                              info.Height / 7'                                              6 * info.Width / 7'                                              6 * info.Height / 7);
Magic Number,SkiaSharpFormsDemos.Effects,TileAlignmentPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\TileAlignmentPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKRect rect = new SKRect(info.Width / 7'                                              info.Height / 7'                                              6 * info.Width / 7'                                              6 * info.Height / 7);
Magic Number,SkiaSharpFormsDemos.Effects,TiledPerlinNoisePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\TiledPerlinNoisePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.Shader = SKShader.CreatePerlinNoiseTurbulence(                                              0.02f' 0.02f' 1' seed'                                               new SKPointI(TILE_SIZE' TILE_SIZE));
Magic Number,SkiaSharpFormsDemos.Effects,TiledPerlinNoisePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\TiledPerlinNoisePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.Shader = SKShader.CreatePerlinNoiseTurbulence(                                              0.02f' 0.02f' 1' seed'                                               new SKPointI(TILE_SIZE' TILE_SIZE));
Magic Number,SkiaSharpFormsDemos.Effects,TiledPerlinNoisePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\TiledPerlinNoisePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.StrokeWidth = 2;
Magic Number,SkiaSharpFormsDemos.Paths,AnimatedSpiralPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\AnimatedSpiralPage.cs,OnAppearing,The following statement contains a magic number: Device.StartTimer(TimeSpan.FromMilliseconds(33)' () =>              {                  double t = stopwatch.Elapsed.TotalMilliseconds % cycleTime / cycleTime;                  dashPhase = (float)(10 * t);                  canvasView.InvalidateSurface();                    if (!pageIsActive)                  {                      stopwatch.Stop();                  }                    return pageIsActive;              });
Magic Number,SkiaSharpFormsDemos.Paths,AnimatedSpiralPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\AnimatedSpiralPage.cs,OnAppearing,The following statement contains a magic number: Device.StartTimer(TimeSpan.FromMilliseconds(33)' () =>              {                  double t = stopwatch.Elapsed.TotalMilliseconds % cycleTime / cycleTime;                  dashPhase = (float)(10 * t);                  canvasView.InvalidateSurface();                    if (!pageIsActive)                  {                      stopwatch.Stop();                  }                    return pageIsActive;              });
Magic Number,SkiaSharpFormsDemos.Paths,AnimatedSpiralPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\AnimatedSpiralPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKPoint center = new SKPoint(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Paths,AnimatedSpiralPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\AnimatedSpiralPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKPoint center = new SKPoint(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Paths,AnimatedSpiralPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\AnimatedSpiralPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float scaledRadius = radius * angle / 3600;
Magic Number,SkiaSharpFormsDemos.Paths,AnimatedSpiralPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\AnimatedSpiralPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: double radians = Math.PI * angle / 180;
Magic Number,SkiaSharpFormsDemos.Paths,AnimatedSpiralPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\AnimatedSpiralPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: angle < 3600
Magic Number,SkiaSharpFormsDemos.Paths,AnimatedSpiralPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\AnimatedSpiralPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.StrokeWidth = 5;
Magic Number,SkiaSharpFormsDemos.Paths,AnimatedSpiralPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\AnimatedSpiralPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.PathEffect = SKPathEffect.CreateDash(new float[] { 5' 5 }' dashPhase);
Magic Number,SkiaSharpFormsDemos.Paths,AnimatedSpiralPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\AnimatedSpiralPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.PathEffect = SKPathEffect.CreateDash(new float[] { 5' 5 }' dashPhase);
Magic Number,SkiaSharpFormsDemos.Paths,ArchimedeanSpiralPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\ArchimedeanSpiralPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKPoint center = new SKPoint(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Paths,ArchimedeanSpiralPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\ArchimedeanSpiralPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKPoint center = new SKPoint(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Paths,ArchimedeanSpiralPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\ArchimedeanSpiralPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float scaledRadius = radius * angle / 3600;
Magic Number,SkiaSharpFormsDemos.Paths,ArchimedeanSpiralPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\ArchimedeanSpiralPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: double radians = Math.PI * angle / 180;
Magic Number,SkiaSharpFormsDemos.Paths,ArchimedeanSpiralPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\ArchimedeanSpiralPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: angle < 3600
Magic Number,SkiaSharpFormsDemos.Paths,ArchimedeanSpiralPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\ArchimedeanSpiralPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKPaint paint = new SKPaint                  {                      Style = SKPaintStyle.Stroke'                      Color = SKColors.Red'                      StrokeWidth = 5                  };
Magic Number,SkiaSharpFormsDemos.Paths,DotsAndDashesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\DotsAndDashesPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKPaint paint = new SKPaint              {                  Style = SKPaintStyle.Stroke'                  Color = SKColors.Blue'                  StrokeWidth = 10'                  StrokeCap = (SKStrokeCap)strokeCapPicker.SelectedItem'                  PathEffect = SKPathEffect.CreateDash(GetPickerArray(dashArrayPicker)' 20)              };
Magic Number,SkiaSharpFormsDemos.Paths,DotsAndDashesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\DotsAndDashesPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKPaint paint = new SKPaint              {                  Style = SKPaintStyle.Stroke'                  Color = SKColors.Blue'                  StrokeWidth = 10'                  StrokeCap = (SKStrokeCap)strokeCapPicker.SelectedItem'                  PathEffect = SKPathEffect.CreateDash(GetPickerArray(dashArrayPicker)' 20)              };
Magic Number,SkiaSharpFormsDemos.Paths,DotsAndDashesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\DotsAndDashesPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.MoveTo(0.2f * info.Width' 0.2f * info.Height);
Magic Number,SkiaSharpFormsDemos.Paths,DotsAndDashesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\DotsAndDashesPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.MoveTo(0.2f * info.Width' 0.2f * info.Height);
Magic Number,SkiaSharpFormsDemos.Paths,DotsAndDashesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\DotsAndDashesPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.LineTo(0.8f * info.Width' 0.8f * info.Height);
Magic Number,SkiaSharpFormsDemos.Paths,DotsAndDashesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\DotsAndDashesPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.LineTo(0.8f * info.Width' 0.8f * info.Height);
Magic Number,SkiaSharpFormsDemos.Paths,DotsAndDashesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\DotsAndDashesPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.LineTo(0.2f * info.Width' 0.8f * info.Height);
Magic Number,SkiaSharpFormsDemos.Paths,DotsAndDashesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\DotsAndDashesPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.LineTo(0.2f * info.Width' 0.8f * info.Height);
Magic Number,SkiaSharpFormsDemos.Paths,DotsAndDashesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\DotsAndDashesPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.LineTo(0.8f * info.Width' 0.2f * info.Height);
Magic Number,SkiaSharpFormsDemos.Paths,DotsAndDashesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\DotsAndDashesPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.LineTo(0.8f * info.Width' 0.2f * info.Height);
Magic Number,SkiaSharpFormsDemos.Paths,FivePointedStarPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\FivePointedStarPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKPoint center = new SKPoint(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Paths,FivePointedStarPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\FivePointedStarPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKPoint center = new SKPoint(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Paths,FivePointedStarPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\FivePointedStarPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float radius = 0.45f * Math.Min(info.Width' info.Height);
Magic Number,SkiaSharpFormsDemos.Paths,FivePointedStarPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\FivePointedStarPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.MoveTo(info.Width / 2' info.Height / 2 - radius);
Magic Number,SkiaSharpFormsDemos.Paths,FivePointedStarPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\FivePointedStarPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.MoveTo(info.Width / 2' info.Height / 2 - radius);
Magic Number,SkiaSharpFormsDemos.Paths,FivePointedStarPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\FivePointedStarPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: double angle = i * 4 * Math.PI / 5;
Magic Number,SkiaSharpFormsDemos.Paths,FivePointedStarPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\FivePointedStarPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: double angle = i * 4 * Math.PI / 5;
Magic Number,SkiaSharpFormsDemos.Paths,FivePointedStarPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\FivePointedStarPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: i < 5
Magic Number,SkiaSharpFormsDemos.Paths,FivePointedStarPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\FivePointedStarPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKPaint strokePaint = new SKPaint              {                  Style = SKPaintStyle.Stroke'                  Color = SKColors.Red'                  StrokeWidth = 50'                  StrokeJoin = SKStrokeJoin.Round              };
Magic Number,SkiaSharpFormsDemos.Paths,MultipleLinesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\MultipleLinesPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKPoint[] points = new SKPoint[10];
Magic Number,SkiaSharpFormsDemos.Paths,MultipleLinesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\MultipleLinesPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float x = (0.1f + 0.8f * i) * info.Width;
Magic Number,SkiaSharpFormsDemos.Paths,MultipleLinesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\MultipleLinesPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float x = (0.1f + 0.8f * i) * info.Width;
Magic Number,SkiaSharpFormsDemos.Paths,MultipleLinesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\MultipleLinesPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float y = (0.1f + 0.2f * j) * info.Height;
Magic Number,SkiaSharpFormsDemos.Paths,MultipleLinesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\MultipleLinesPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float y = (0.1f + 0.2f * j) * info.Height;
Magic Number,SkiaSharpFormsDemos.Paths,MultipleLinesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\MultipleLinesPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: points[2 * j + i] = new SKPoint(x' y);
Magic Number,SkiaSharpFormsDemos.Paths,MultipleLinesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\MultipleLinesPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: j < 5
Magic Number,SkiaSharpFormsDemos.Paths,MultipleLinesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\MultipleLinesPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: i < 2
Magic Number,SkiaSharpFormsDemos.Paths,MultipleLinesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\MultipleLinesPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKPaint paint = new SKPaint              {                  Style = SKPaintStyle.Stroke'                  Color = SKColors.DarkOrchid'                  StrokeWidth = 50'                  StrokeCap = (SKStrokeCap)strokeCapPicker.SelectedItem              };
Magic Number,SkiaSharpFormsDemos.Paths,OverlappingCirclesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\OverlappingCirclesPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKPoint center = new SKPoint(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Paths,OverlappingCirclesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\OverlappingCirclesPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKPoint center = new SKPoint(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Paths,OverlappingCirclesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\OverlappingCirclesPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float radius = Math.Min(info.Width' info.Height) / 4;
Magic Number,SkiaSharpFormsDemos.Paths,OverlappingCirclesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\OverlappingCirclesPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.AddCircle(center.X - radius / 2' center.Y - radius / 2' radius);
Magic Number,SkiaSharpFormsDemos.Paths,OverlappingCirclesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\OverlappingCirclesPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.AddCircle(center.X - radius / 2' center.Y - radius / 2' radius);
Magic Number,SkiaSharpFormsDemos.Paths,OverlappingCirclesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\OverlappingCirclesPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.AddCircle(center.X - radius / 2' center.Y + radius / 2' radius);
Magic Number,SkiaSharpFormsDemos.Paths,OverlappingCirclesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\OverlappingCirclesPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.AddCircle(center.X - radius / 2' center.Y + radius / 2' radius);
Magic Number,SkiaSharpFormsDemos.Paths,OverlappingCirclesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\OverlappingCirclesPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.AddCircle(center.X + radius / 2' center.Y - radius / 2' radius);
Magic Number,SkiaSharpFormsDemos.Paths,OverlappingCirclesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\OverlappingCirclesPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.AddCircle(center.X + radius / 2' center.Y - radius / 2' radius);
Magic Number,SkiaSharpFormsDemos.Paths,OverlappingCirclesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\OverlappingCirclesPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.AddCircle(center.X + radius / 2' center.Y + radius / 2' radius);
Magic Number,SkiaSharpFormsDemos.Paths,OverlappingCirclesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\OverlappingCirclesPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.AddCircle(center.X + radius / 2' center.Y + radius / 2' radius);
Magic Number,SkiaSharpFormsDemos.Paths,OverlappingCirclesPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\OverlappingCirclesPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.StrokeWidth = 10;
Magic Number,SkiaSharpFormsDemos.Paths,StrokeCapsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\StrokeCapsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKPaint textPaint = new SKPaint              {                  Color = SKColors.Black'                  TextSize = 75'                   TextAlign = SKTextAlign.Center              };
Magic Number,SkiaSharpFormsDemos.Paths,StrokeCapsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\StrokeCapsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKPaint thickLinePaint = new SKPaint              {                  Style = SKPaintStyle.Stroke'                  Color = SKColors.Orange'                  StrokeWidth = 50              };
Magic Number,SkiaSharpFormsDemos.Paths,StrokeCapsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\StrokeCapsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKPaint thinLinePaint = new SKPaint              {                  Style = SKPaintStyle.Stroke'                  Color = SKColors.Black'                  StrokeWidth = 2              };
Magic Number,SkiaSharpFormsDemos.Paths,StrokeCapsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\StrokeCapsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float xText = info.Width / 2;
Magic Number,SkiaSharpFormsDemos.Paths,StrokeCapsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\StrokeCapsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float xLine1 = 100;
Magic Number,SkiaSharpFormsDemos.Paths,StrokeCapsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\StrokeCapsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: y += 2 * textPaint.FontSpacing;
Magic Number,SkiaSharpFormsDemos.Paths,StrokeJoinsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\StrokeJoinsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKPaint textPaint = new SKPaint              {                  Color = SKColors.Black'                  TextSize = 75'                  TextAlign = SKTextAlign.Right              };
Magic Number,SkiaSharpFormsDemos.Paths,StrokeJoinsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\StrokeJoinsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKPaint thickLinePaint = new SKPaint              {                  Style = SKPaintStyle.Stroke'                  Color = SKColors.Orange'                  StrokeWidth = 50              };
Magic Number,SkiaSharpFormsDemos.Paths,StrokeJoinsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\StrokeJoinsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKPaint thinLinePaint = new SKPaint              {                  Style = SKPaintStyle.Stroke'                  Color = SKColors.Black'                  StrokeWidth = 2              };
Magic Number,SkiaSharpFormsDemos.Paths,StrokeJoinsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\StrokeJoinsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float xText = info.Width - 100;
Magic Number,SkiaSharpFormsDemos.Paths,StrokeJoinsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\StrokeJoinsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float xLine1 = 100;
Magic Number,SkiaSharpFormsDemos.Paths,StrokeJoinsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\StrokeJoinsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float y = 2 * textPaint.FontSpacing;
Magic Number,SkiaSharpFormsDemos.Paths,StrokeJoinsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\StrokeJoinsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.MoveTo(xLine1' y - 80);
Magic Number,SkiaSharpFormsDemos.Paths,StrokeJoinsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\StrokeJoinsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.LineTo(xLine1' y + 80);
Magic Number,SkiaSharpFormsDemos.Paths,StrokeJoinsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\StrokeJoinsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.LineTo(xLine2' y + 80);
Magic Number,SkiaSharpFormsDemos.Paths,StrokeJoinsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\StrokeJoinsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: y += 3 * textPaint.FontSpacing;
Magic Number,SkiaSharpFormsDemos.Paths,TwoTriangleContoursPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\TwoTriangleContoursPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.MoveTo(0.5f * info.Width' 0.1f * info.Height);
Magic Number,SkiaSharpFormsDemos.Paths,TwoTriangleContoursPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\TwoTriangleContoursPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.MoveTo(0.5f * info.Width' 0.1f * info.Height);
Magic Number,SkiaSharpFormsDemos.Paths,TwoTriangleContoursPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\TwoTriangleContoursPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.LineTo(0.2f * info.Width' 0.4f * info.Height);
Magic Number,SkiaSharpFormsDemos.Paths,TwoTriangleContoursPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\TwoTriangleContoursPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.LineTo(0.2f * info.Width' 0.4f * info.Height);
Magic Number,SkiaSharpFormsDemos.Paths,TwoTriangleContoursPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\TwoTriangleContoursPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.LineTo(0.8f * info.Width' 0.4f * info.Height);
Magic Number,SkiaSharpFormsDemos.Paths,TwoTriangleContoursPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\TwoTriangleContoursPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.LineTo(0.8f * info.Width' 0.4f * info.Height);
Magic Number,SkiaSharpFormsDemos.Paths,TwoTriangleContoursPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\TwoTriangleContoursPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.LineTo(0.5f * info.Width' 0.1f * info.Height);
Magic Number,SkiaSharpFormsDemos.Paths,TwoTriangleContoursPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\TwoTriangleContoursPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.LineTo(0.5f * info.Width' 0.1f * info.Height);
Magic Number,SkiaSharpFormsDemos.Paths,TwoTriangleContoursPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\TwoTriangleContoursPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.MoveTo(0.5f * info.Width' 0.6f * info.Height);
Magic Number,SkiaSharpFormsDemos.Paths,TwoTriangleContoursPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\TwoTriangleContoursPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.MoveTo(0.5f * info.Width' 0.6f * info.Height);
Magic Number,SkiaSharpFormsDemos.Paths,TwoTriangleContoursPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\TwoTriangleContoursPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.LineTo(0.2f * info.Width' 0.9f * info.Height);
Magic Number,SkiaSharpFormsDemos.Paths,TwoTriangleContoursPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\TwoTriangleContoursPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.LineTo(0.2f * info.Width' 0.9f * info.Height);
Magic Number,SkiaSharpFormsDemos.Paths,TwoTriangleContoursPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\TwoTriangleContoursPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.LineTo(0.8f * info.Width' 0.9f * info.Height);
Magic Number,SkiaSharpFormsDemos.Paths,TwoTriangleContoursPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\TwoTriangleContoursPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: path.LineTo(0.8f * info.Width' 0.9f * info.Height);
Magic Number,SkiaSharpFormsDemos.Paths,TwoTriangleContoursPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\TwoTriangleContoursPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKPaint strokePaint = new SKPaint              {                  Style = SKPaintStyle.Stroke'                  Color = SKColors.Magenta'                  StrokeWidth = 50              };
Magic Number,SkiaSharpFormsDemos.Transforms,AccumulatedTranslatePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\AccumulatedTranslatePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: strokePaint.StrokeWidth = 3;
Magic Number,SkiaSharpFormsDemos.Transforms,AccumulatedTranslatePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\AccumulatedTranslatePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: int rectangleCount = 20;
Magic Number,SkiaSharpFormsDemos.Transforms,AccumulatedTranslatePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\AccumulatedTranslatePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKRect rect = new SKRect(0' 0' 250' 250);
Magic Number,SkiaSharpFormsDemos.Transforms,AccumulatedTranslatePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\AccumulatedTranslatePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SKRect rect = new SKRect(0' 0' 250' 250);
Magic Number,SkiaSharpFormsDemos.Transforms,AnimatedRotation3DPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\AnimatedRotation3DPage.cs,OnAppearing,The following statement contains a magic number: new Animation((value) => xRotationDegrees = 360 * (float)value).                  Commit(this' "xRotationAnimation"' length: 5000' repeat: () => true);
Magic Number,SkiaSharpFormsDemos.Transforms,AnimatedRotation3DPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\AnimatedRotation3DPage.cs,OnAppearing,The following statement contains a magic number: new Animation((value) => xRotationDegrees = 360 * (float)value).                  Commit(this' "xRotationAnimation"' length: 5000' repeat: () => true);
Magic Number,SkiaSharpFormsDemos.Transforms,AnimatedRotation3DPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\AnimatedRotation3DPage.cs,OnAppearing,The following statement contains a magic number: new Animation((value) => yRotationDegrees = 360 * (float)value).                  Commit(this' "yRotationAnimation"' length: 7000' repeat: () => true);
Magic Number,SkiaSharpFormsDemos.Transforms,AnimatedRotation3DPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\AnimatedRotation3DPage.cs,OnAppearing,The following statement contains a magic number: new Animation((value) => yRotationDegrees = 360 * (float)value).                  Commit(this' "yRotationAnimation"' length: 7000' repeat: () => true);
Magic Number,SkiaSharpFormsDemos.Transforms,AnimatedRotation3DPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\AnimatedRotation3DPage.cs,OnAppearing,The following statement contains a magic number: new Animation((value) =>              {                  zRotationDegrees = 360 * (float)value;                  canvasView.InvalidateSurface();              }).Commit(this' "zRotationAnimation"' length: 11000' repeat: () => true);
Magic Number,SkiaSharpFormsDemos.Transforms,AnimatedRotation3DPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\AnimatedRotation3DPage.cs,OnAppearing,The following statement contains a magic number: new Animation((value) =>              {                  zRotationDegrees = 360 * (float)value;                  canvasView.InvalidateSurface();              }).Commit(this' "zRotationAnimation"' length: 11000' repeat: () => true);
Magic Number,SkiaSharpFormsDemos.Transforms,AnimatedRotation3DPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\AnimatedRotation3DPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float xCenter = info.Width / 2;
Magic Number,SkiaSharpFormsDemos.Transforms,AnimatedRotation3DPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\AnimatedRotation3DPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float yCenter = info.Height / 2;
Magic Number,SkiaSharpFormsDemos.Transforms,AnimatedRotation3DPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\AnimatedRotation3DPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float depth = 0.75f * scale * textBounds.Width;
Magic Number,SkiaSharpFormsDemos.Transforms,AnimatedRotation3DPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\AnimatedRotation3DPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: perspectiveMatrix[3' 2] = -1 / depth;
Magic Number,SkiaSharpFormsDemos.Transforms,AnimatedRotation3DPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\AnimatedRotation3DPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: perspectiveMatrix[3' 2] = -1 / depth;
Magic Number,SkiaSharpFormsDemos.Transforms,AnisotropicTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\AnisotropicTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: textBounds.Inflate(textPaint.StrokeWidth / 2'                                      textPaint.StrokeWidth / 2);
Magic Number,SkiaSharpFormsDemos.Transforms,AnisotropicTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\AnisotropicTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: textBounds.Inflate(textPaint.StrokeWidth / 2'                                      textPaint.StrokeWidth / 2);
Magic Number,SkiaSharpFormsDemos.Transforms,BasicRotatePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\BasicRotatePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawText(Title' info.Width / 2' info.Height / 2' textPaint);
Magic Number,SkiaSharpFormsDemos.Transforms,BasicRotatePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\BasicRotatePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawText(Title' info.Width / 2' info.Height / 2' textPaint);
Magic Number,SkiaSharpFormsDemos.Transforms,BasicScalePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\BasicScalePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float margin = 10;
Magic Number,SkiaSharpFormsDemos.Transforms,BasicScalePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\BasicScalePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawRoundRect(borderRect' 20' 20' strokePaint);
Magic Number,SkiaSharpFormsDemos.Transforms,BasicScalePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\BasicScalePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawRoundRect(borderRect' 20' 20' strokePaint);
Magic Number,SkiaSharpFormsDemos.Transforms,BitmapScatterViewPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\BitmapScatterViewPage.xaml.cs,BitmapScatterViewPage,The following statement contains a magic number: position.X += 100;
Magic Number,SkiaSharpFormsDemos.Transforms,BitmapScatterViewPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\BitmapScatterViewPage.xaml.cs,BitmapScatterViewPage,The following statement contains a magic number: position.Y += 100;
Magic Number,SkiaSharpFormsDemos.Transforms,CenteredRotatePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\CenteredRotatePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.RotateDegrees((float)rotateSlider.Value' info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Transforms,CenteredRotatePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\CenteredRotatePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.RotateDegrees((float)rotateSlider.Value' info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Transforms,CenteredRotatePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\CenteredRotatePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Transforms,CenteredRotatePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\CenteredRotatePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Transforms,CenteredScalePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\CenteredScalePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float margin = (info.Width - textBounds.Width) / 2;
Magic Number,SkiaSharpFormsDemos.Transforms,CenteredScalePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\CenteredScalePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float px = margin + textBounds.Width / 2;
Magic Number,SkiaSharpFormsDemos.Transforms,CenteredScalePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\CenteredScalePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float py = margin + textBounds.Height / 2;
Magic Number,SkiaSharpFormsDemos.Transforms,CenteredScalePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\CenteredScalePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawRoundRect(borderRect' 20' 20' strokePaint);
Magic Number,SkiaSharpFormsDemos.Transforms,CenteredScalePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\CenteredScalePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawRoundRect(borderRect' 20' 20' strokePaint);
Magic Number,SkiaSharpFormsDemos.Transforms,HendecagramAnimationPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\HendecagramAnimationPage.cs,OnAppearing,The following statement contains a magic number: Device.StartTimer(TimeSpan.FromMilliseconds(33)' () =>              {                  double t = stopwatch.Elapsed.TotalMilliseconds % cycleTime / cycleTime;                  angle = (float)(360 * t);                  canvasView.InvalidateSurface();                    if (!pageIsActive)                  {                      stopwatch.Stop();                  }                    return pageIsActive;              });
Magic Number,SkiaSharpFormsDemos.Transforms,HendecagramAnimationPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\HendecagramAnimationPage.cs,OnAppearing,The following statement contains a magic number: Device.StartTimer(TimeSpan.FromMilliseconds(33)' () =>              {                  double t = stopwatch.Elapsed.TotalMilliseconds % cycleTime / cycleTime;                  angle = (float)(360 * t);                  canvasView.InvalidateSurface();                    if (!pageIsActive)                  {                      stopwatch.Stop();                  }                    return pageIsActive;              });
Magic Number,SkiaSharpFormsDemos.Transforms,HendecagramAnimationPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\HendecagramAnimationPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Transforms,HendecagramAnimationPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\HendecagramAnimationPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Transforms,HendecagramAnimationPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\HendecagramAnimationPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float radius = (float)Math.Min(info.Width' info.Height) / 2 - 100;
Magic Number,SkiaSharpFormsDemos.Transforms,HendecagramAnimationPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\HendecagramAnimationPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float radius = (float)Math.Min(info.Width' info.Height) / 2 - 100;
Magic Number,SkiaSharpFormsDemos.Transforms,HendecagramAnimationPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\HendecagramAnimationPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.Color = SKColor.FromHsl(angle' 100' 50);
Magic Number,SkiaSharpFormsDemos.Transforms,HendecagramAnimationPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\HendecagramAnimationPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.Color = SKColor.FromHsl(angle' 100' 50);
Magic Number,SkiaSharpFormsDemos.Transforms,HendecagramAnimationPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\HendecagramAnimationPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float x = radius * (float)Math.Sin(Math.PI * angle / 180);
Magic Number,SkiaSharpFormsDemos.Transforms,HendecagramAnimationPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\HendecagramAnimationPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float y = -radius * (float)Math.Cos(Math.PI * angle / 180);
Magic Number,SkiaSharpFormsDemos.Transforms,HendecagramArrayPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\HendecagramArrayPage.cs,HendecagramArrayPage,The following statement contains a magic number: double angle = 5 * i * 2 * Math.PI / 11;
Magic Number,SkiaSharpFormsDemos.Transforms,HendecagramArrayPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\HendecagramArrayPage.cs,HendecagramArrayPage,The following statement contains a magic number: double angle = 5 * i * 2 * Math.PI / 11;
Magic Number,SkiaSharpFormsDemos.Transforms,HendecagramArrayPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\HendecagramArrayPage.cs,HendecagramArrayPage,The following statement contains a magic number: double angle = 5 * i * 2 * Math.PI / 11;
Magic Number,SkiaSharpFormsDemos.Transforms,HendecagramArrayPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\HendecagramArrayPage.cs,HendecagramArrayPage,The following statement contains a magic number: SKPoint pt = new SKPoint(100 * (float)Math.Sin(angle)'                                          -100 * (float)Math.Cos(angle));
Magic Number,SkiaSharpFormsDemos.Transforms,HendecagramArrayPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\HendecagramArrayPage.cs,HendecagramArrayPage,The following statement contains a magic number: SKPoint pt = new SKPoint(100 * (float)Math.Sin(angle)'                                          -100 * (float)Math.Cos(angle));
Magic Number,SkiaSharpFormsDemos.Transforms,HendecagramArrayPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\HendecagramArrayPage.cs,HendecagramArrayPage,The following statement contains a magic number: i < 11
Magic Number,SkiaSharpFormsDemos.Transforms,HendecagramArrayPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\HendecagramArrayPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: byte[] bytes = new byte[3];
Magic Number,SkiaSharpFormsDemos.Transforms,HendecagramArrayPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\HendecagramArrayPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.Color = new SKColor(bytes[0]' bytes[1]' bytes[2]);
Magic Number,SkiaSharpFormsDemos.Transforms,HendecagramArrayPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\HendecagramArrayPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: x < info.Width + 100
Magic Number,SkiaSharpFormsDemos.Transforms,IsotropicScalingPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\IsotropicScalingPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: fillPaint.Color = new SKColor((byte)(255 * (10 - i) / 10)'                                                    0'                                                    (byte)(255 * i / 10));
Magic Number,SkiaSharpFormsDemos.Transforms,IsotropicScalingPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\IsotropicScalingPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: fillPaint.Color = new SKColor((byte)(255 * (10 - i) / 10)'                                                    0'                                                    (byte)(255 * i / 10));
Magic Number,SkiaSharpFormsDemos.Transforms,IsotropicScalingPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\IsotropicScalingPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: fillPaint.Color = new SKColor((byte)(255 * (10 - i) / 10)'                                                    0'                                                    (byte)(255 * i / 10));
Magic Number,SkiaSharpFormsDemos.Transforms,IsotropicScalingPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\IsotropicScalingPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: fillPaint.Color = new SKColor((byte)(255 * (10 - i) / 10)'                                                    0'                                                    (byte)(255 * i / 10));
Magic Number,SkiaSharpFormsDemos.Transforms,IsotropicScalingPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\IsotropicScalingPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: fillPaint.Color = new SKColor((byte)(255 * (10 - i) / 10)'                                                    0'                                                    (byte)(255 * i / 10));
Magic Number,SkiaSharpFormsDemos.Transforms,IsotropicScalingPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\IsotropicScalingPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Transforms,IsotropicScalingPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\IsotropicScalingPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Transforms,IsotropicScalingPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\IsotropicScalingPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: scale *= 0.9f;
Magic Number,SkiaSharpFormsDemos.Transforms,IsotropicScalingPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\IsotropicScalingPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: i <= 10
Magic Number,SkiaSharpFormsDemos.Transforms,ObliqueTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\ObliqueTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Transforms,ObliqueTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\ObliqueTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Transforms,ObliqueTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\ObliqueTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: SkewDegrees(canvas' -20' 0);
Magic Number,SkiaSharpFormsDemos.Transforms,ObliqueTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\ObliqueTextPage.cs,SkewDegrees,The following statement contains a magic number: canvas.Skew((float)Math.Tan(Math.PI * xDegrees / 180)'                          (float)Math.Tan(Math.PI * yDegrees / 180));
Magic Number,SkiaSharpFormsDemos.Transforms,ObliqueTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\ObliqueTextPage.cs,SkewDegrees,The following statement contains a magic number: canvas.Skew((float)Math.Tan(Math.PI * xDegrees / 180)'                          (float)Math.Tan(Math.PI * yDegrees / 180));
Magic Number,SkiaSharpFormsDemos.Transforms,PathTransformPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\PathTransformPage.cs,PathTransformPage,The following statement contains a magic number: SKMatrix matrix = SKMatrix.MakeScale(3' 3);
Magic Number,SkiaSharpFormsDemos.Transforms,PathTransformPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\PathTransformPage.cs,PathTransformPage,The following statement contains a magic number: SKMatrix matrix = SKMatrix.MakeScale(3' 3);
Magic Number,SkiaSharpFormsDemos.Transforms,PathTransformPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\PathTransformPage.cs,PathTransformPage,The following statement contains a magic number: SKMatrix.PostConcat(ref matrix' SKMatrix.MakeRotationDegrees(360f / 22));
Magic Number,SkiaSharpFormsDemos.Transforms,PathTransformPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\PathTransformPage.cs,PathTransformPage,The following statement contains a magic number: SKMatrix.PostConcat(ref matrix' SKMatrix.MakeRotationDegrees(360f / 22));
Magic Number,SkiaSharpFormsDemos.Transforms,PathTransformPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\PathTransformPage.cs,PathTransformPage,The following statement contains a magic number: SKMatrix.PostConcat(ref matrix' SKMatrix.MakeTranslation(300' 300));
Magic Number,SkiaSharpFormsDemos.Transforms,PathTransformPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\PathTransformPage.cs,PathTransformPage,The following statement contains a magic number: SKMatrix.PostConcat(ref matrix' SKMatrix.MakeTranslation(300' 300));
Magic Number,SkiaSharpFormsDemos.Transforms,PathTransformPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\PathTransformPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: paint.StrokeWidth = 5;
Magic Number,SkiaSharpFormsDemos.Transforms,RotateAndRevolvePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\RotateAndRevolvePage.cs,OnAppearing,The following statement contains a magic number: new Animation((value) => revolveDegrees = 360 * (float)value).                  Commit(this' "revolveAnimation"' length: 10000' repeat: () => true);
Magic Number,SkiaSharpFormsDemos.Transforms,RotateAndRevolvePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\RotateAndRevolvePage.cs,OnAppearing,The following statement contains a magic number: new Animation((value) => revolveDegrees = 360 * (float)value).                  Commit(this' "revolveAnimation"' length: 10000' repeat: () => true);
Magic Number,SkiaSharpFormsDemos.Transforms,RotateAndRevolvePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\RotateAndRevolvePage.cs,OnAppearing,The following statement contains a magic number: new Animation((value) =>              {                  rotateDegrees = 360 * (float)value;                  canvasView.InvalidateSurface();              }).Commit(this' "rotateAnimation"' length: 1000' repeat: () => true);
Magic Number,SkiaSharpFormsDemos.Transforms,RotateAndRevolvePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\RotateAndRevolvePage.cs,OnAppearing,The following statement contains a magic number: new Animation((value) =>              {                  rotateDegrees = 360 * (float)value;                  canvasView.InvalidateSurface();              }).Commit(this' "rotateAnimation"' length: 1000' repeat: () => true);
Magic Number,SkiaSharpFormsDemos.Transforms,RotateAndRevolvePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\RotateAndRevolvePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Transforms,RotateAndRevolvePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\RotateAndRevolvePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(info.Width / 2' info.Height / 2);
Magic Number,SkiaSharpFormsDemos.Transforms,RotateAndRevolvePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\RotateAndRevolvePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float radius = Math.Min(info.Width' info.Height) / 3;
Magic Number,SkiaSharpFormsDemos.Transforms,RotateAndRevolvePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\RotateAndRevolvePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawRect(new SKRect(-50' -50' 50' 50)' fillPaint);
Magic Number,SkiaSharpFormsDemos.Transforms,RotateAndRevolvePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\RotateAndRevolvePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawRect(new SKRect(-50' -50' 50' 50)' fillPaint);
Magic Number,SkiaSharpFormsDemos.Transforms,RotateAndRevolvePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\RotateAndRevolvePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawRect(new SKRect(-50' -50' 50' 50)' fillPaint);
Magic Number,SkiaSharpFormsDemos.Transforms,RotateAndRevolvePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\RotateAndRevolvePage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawRect(new SKRect(-50' -50' 50' 50)' fillPaint);
Magic Number,SkiaSharpFormsDemos.Transforms,RotatedTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\RotatedTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float xCenter = info.Width / 2;
Magic Number,SkiaSharpFormsDemos.Transforms,RotatedTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\RotatedTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float yCenter = info.Height / 2;
Magic Number,SkiaSharpFormsDemos.Transforms,RotatedTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\RotatedTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float yText = yCenter - textBounds.Height / 2 - textBounds.Top;
Magic Number,SkiaSharpFormsDemos.Transforms,RotatedTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\RotatedTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: degrees < 360
Magic Number,SkiaSharpFormsDemos.Transforms,Rotation3DPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\Rotation3DPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float xCenter = info.Width / 2;
Magic Number,SkiaSharpFormsDemos.Transforms,Rotation3DPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\Rotation3DPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float yCenter = info.Height / 2;
Magic Number,SkiaSharpFormsDemos.Transforms,Rotation3DPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\Rotation3DPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: perspectiveMatrix[3' 2] = -1 / (float)depthSlider.Value;
Magic Number,SkiaSharpFormsDemos.Transforms,Rotation3DPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\Rotation3DPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: perspectiveMatrix[3' 2] = -1 / (float)depthSlider.Value;
Magic Number,SkiaSharpFormsDemos.Transforms,Rotation3DPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\Rotation3DPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float xBitmap = xCenter - bitmap.Width / 2;
Magic Number,SkiaSharpFormsDemos.Transforms,Rotation3DPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\Rotation3DPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float yBitmap = yCenter - bitmap.Height / 2;
Magic Number,SkiaSharpFormsDemos.Transforms,ShowAffineMatrixPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\ShowAffineMatrixPage.xaml.cs,ShowAffineMatrixPage,The following statement contains a magic number: touchPoints[0] = new TouchPoint(100' 100);
Magic Number,SkiaSharpFormsDemos.Transforms,ShowAffineMatrixPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\ShowAffineMatrixPage.xaml.cs,ShowAffineMatrixPage,The following statement contains a magic number: touchPoints[0] = new TouchPoint(100' 100);
Magic Number,SkiaSharpFormsDemos.Transforms,ShowAffineMatrixPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\ShowAffineMatrixPage.xaml.cs,ShowAffineMatrixPage,The following statement contains a magic number: touchPoints[1] = new TouchPoint(bitmap.Width + 100' 100);
Magic Number,SkiaSharpFormsDemos.Transforms,ShowAffineMatrixPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\ShowAffineMatrixPage.xaml.cs,ShowAffineMatrixPage,The following statement contains a magic number: touchPoints[1] = new TouchPoint(bitmap.Width + 100' 100);
Magic Number,SkiaSharpFormsDemos.Transforms,ShowAffineMatrixPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\ShowAffineMatrixPage.xaml.cs,ShowAffineMatrixPage,The following statement contains a magic number: touchPoints[2] = new TouchPoint(100' bitmap.Height + 100);
Magic Number,SkiaSharpFormsDemos.Transforms,ShowAffineMatrixPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\ShowAffineMatrixPage.xaml.cs,ShowAffineMatrixPage,The following statement contains a magic number: touchPoints[2] = new TouchPoint(100' bitmap.Height + 100);
Magic Number,SkiaSharpFormsDemos.Transforms,ShowAffineMatrixPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\ShowAffineMatrixPage.xaml.cs,ShowAffineMatrixPage,The following statement contains a magic number: touchPoints[2] = new TouchPoint(100' bitmap.Height + 100);
Magic Number,SkiaSharpFormsDemos.Transforms,ShowAffineMatrixPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\ShowAffineMatrixPage.xaml.cs,ShowAffineMatrixPage,The following statement contains a magic number: matrix = ComputeMatrix(bitmapSize' touchPoints[0].Center'                                                  touchPoints[1].Center'                                                  touchPoints[2].Center);
Magic Number,SkiaSharpFormsDemos.Transforms,ShowAffineMatrixPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\ShowAffineMatrixPage.xaml.cs,OnTouchEffectAction,The following statement contains a magic number: matrix = ComputeMatrix(bitmapSize' touchPoints[0].Center'                                                      touchPoints[1].Center'                                                      touchPoints[2].Center);
Magic Number,SkiaSharpFormsDemos.Transforms,ShowNonAffineMatrixPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\ShowNonAffineMatrixPage.xaml.cs,ShowNonAffineMatrixPage,The following statement contains a magic number: touchPoints[0] = new TouchPoint(100' 100);
Magic Number,SkiaSharpFormsDemos.Transforms,ShowNonAffineMatrixPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\ShowNonAffineMatrixPage.xaml.cs,ShowNonAffineMatrixPage,The following statement contains a magic number: touchPoints[0] = new TouchPoint(100' 100);
Magic Number,SkiaSharpFormsDemos.Transforms,ShowNonAffineMatrixPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\ShowNonAffineMatrixPage.xaml.cs,ShowNonAffineMatrixPage,The following statement contains a magic number: touchPoints[1] = new TouchPoint(bitmap.Width + 100' 100);
Magic Number,SkiaSharpFormsDemos.Transforms,ShowNonAffineMatrixPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\ShowNonAffineMatrixPage.xaml.cs,ShowNonAffineMatrixPage,The following statement contains a magic number: touchPoints[1] = new TouchPoint(bitmap.Width + 100' 100);
Magic Number,SkiaSharpFormsDemos.Transforms,ShowNonAffineMatrixPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\ShowNonAffineMatrixPage.xaml.cs,ShowNonAffineMatrixPage,The following statement contains a magic number: touchPoints[2] = new TouchPoint(100' bitmap.Height + 100);
Magic Number,SkiaSharpFormsDemos.Transforms,ShowNonAffineMatrixPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\ShowNonAffineMatrixPage.xaml.cs,ShowNonAffineMatrixPage,The following statement contains a magic number: touchPoints[2] = new TouchPoint(100' bitmap.Height + 100);
Magic Number,SkiaSharpFormsDemos.Transforms,ShowNonAffineMatrixPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\ShowNonAffineMatrixPage.xaml.cs,ShowNonAffineMatrixPage,The following statement contains a magic number: touchPoints[2] = new TouchPoint(100' bitmap.Height + 100);
Magic Number,SkiaSharpFormsDemos.Transforms,ShowNonAffineMatrixPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\ShowNonAffineMatrixPage.xaml.cs,ShowNonAffineMatrixPage,The following statement contains a magic number: touchPoints[3] = new TouchPoint(bitmap.Width + 100' bitmap.Height + 100);
Magic Number,SkiaSharpFormsDemos.Transforms,ShowNonAffineMatrixPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\ShowNonAffineMatrixPage.xaml.cs,ShowNonAffineMatrixPage,The following statement contains a magic number: touchPoints[3] = new TouchPoint(bitmap.Width + 100' bitmap.Height + 100);
Magic Number,SkiaSharpFormsDemos.Transforms,ShowNonAffineMatrixPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\ShowNonAffineMatrixPage.xaml.cs,ShowNonAffineMatrixPage,The following statement contains a magic number: touchPoints[3] = new TouchPoint(bitmap.Width + 100' bitmap.Height + 100);
Magic Number,SkiaSharpFormsDemos.Transforms,ShowNonAffineMatrixPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\ShowNonAffineMatrixPage.xaml.cs,ShowNonAffineMatrixPage,The following statement contains a magic number: matrix = ComputeMatrix(bitmapSize' touchPoints[0].Center' touchPoints[1].Center'                                                  touchPoints[2].Center' touchPoints[3].Center);
Magic Number,SkiaSharpFormsDemos.Transforms,ShowNonAffineMatrixPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\ShowNonAffineMatrixPage.xaml.cs,ShowNonAffineMatrixPage,The following statement contains a magic number: matrix = ComputeMatrix(bitmapSize' touchPoints[0].Center' touchPoints[1].Center'                                                  touchPoints[2].Center' touchPoints[3].Center);
Magic Number,SkiaSharpFormsDemos.Transforms,ShowNonAffineMatrixPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\ShowNonAffineMatrixPage.xaml.cs,OnTouchEffectAction,The following statement contains a magic number: matrix = ComputeMatrix(bitmapSize' touchPoints[0].Center' touchPoints[1].Center'                                                      touchPoints[2].Center' touchPoints[3].Center);
Magic Number,SkiaSharpFormsDemos.Transforms,ShowNonAffineMatrixPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\ShowNonAffineMatrixPage.xaml.cs,OnTouchEffectAction,The following statement contains a magic number: matrix = ComputeMatrix(bitmapSize' touchPoints[0].Center' touchPoints[1].Center'                                                      touchPoints[2].Center' touchPoints[3].Center);
Magic Number,SkiaSharpFormsDemos.Transforms,SingleFingerCornerScalePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\SingleFingerCornerScalePage.xaml.cs,OnTouchEffectAction,The following statement contains a magic number: switch (args.Type)              {                  case TouchActionType.Pressed:                      // Track only one finger                      if (touchId.HasValue)                          return;                        // Check if the finger is within the boundaries of the bitmap                      SKRect rect = new SKRect(0' 0' bitmap.Width' bitmap.Height);                      rect = currentMatrix.MapRect(rect);                      if (!rect.Contains(point))                          return;                        // First assume there will be no scaling                      isScaling = false;                        // If touch is outside interior ellipse' make this a scaling operation                      if (Math.Pow((point.X - rect.MidX) / (rect.Width / 2)' 2) +                          Math.Pow((point.Y - rect.MidY) / (rect.Height / 2)' 2) > 1)                      {                          isScaling = true;                          float xPivot = point.X < rect.MidX ? rect.Right : rect.Left;                          float yPivot = point.Y < rect.MidY ? rect.Bottom : rect.Top;                          pivotPoint = new SKPoint(xPivot' yPivot);                      }                        // Common for either pan or scale                      touchId = args.Id;                      pressedLocation = point;                      pressedMatrix = currentMatrix;                      break;                    case TouchActionType.Moved:                      if (!touchId.HasValue || args.Id != touchId.Value)                          return;                        SKMatrix matrix = SKMatrix.MakeIdentity();                        // Translating                      if (!isScaling)                      {                          SKPoint delta = point - pressedLocation;                          matrix = SKMatrix.MakeTranslation(delta.X' delta.Y);                      }                      // Scaling                      else                      {                          float scaleX = (point.X - pivotPoint.X) / (pressedLocation.X - pivotPoint.X);                          float scaleY = (point.Y - pivotPoint.Y) / (pressedLocation.Y - pivotPoint.Y);                          matrix = SKMatrix.MakeScale(scaleX' scaleY' pivotPoint.X' pivotPoint.Y);                      }                        // Concatenate the matrices                      SKMatrix.PreConcat(ref matrix' pressedMatrix);                      currentMatrix = matrix;                      canvasView.InvalidateSurface();                      break;                    case TouchActionType.Released:                  case TouchActionType.Cancelled:                      touchId = null;                      break;              }
Magic Number,SkiaSharpFormsDemos.Transforms,SingleFingerCornerScalePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\SingleFingerCornerScalePage.xaml.cs,OnTouchEffectAction,The following statement contains a magic number: switch (args.Type)              {                  case TouchActionType.Pressed:                      // Track only one finger                      if (touchId.HasValue)                          return;                        // Check if the finger is within the boundaries of the bitmap                      SKRect rect = new SKRect(0' 0' bitmap.Width' bitmap.Height);                      rect = currentMatrix.MapRect(rect);                      if (!rect.Contains(point))                          return;                        // First assume there will be no scaling                      isScaling = false;                        // If touch is outside interior ellipse' make this a scaling operation                      if (Math.Pow((point.X - rect.MidX) / (rect.Width / 2)' 2) +                          Math.Pow((point.Y - rect.MidY) / (rect.Height / 2)' 2) > 1)                      {                          isScaling = true;                          float xPivot = point.X < rect.MidX ? rect.Right : rect.Left;                          float yPivot = point.Y < rect.MidY ? rect.Bottom : rect.Top;                          pivotPoint = new SKPoint(xPivot' yPivot);                      }                        // Common for either pan or scale                      touchId = args.Id;                      pressedLocation = point;                      pressedMatrix = currentMatrix;                      break;                    case TouchActionType.Moved:                      if (!touchId.HasValue || args.Id != touchId.Value)                          return;                        SKMatrix matrix = SKMatrix.MakeIdentity();                        // Translating                      if (!isScaling)                      {                          SKPoint delta = point - pressedLocation;                          matrix = SKMatrix.MakeTranslation(delta.X' delta.Y);                      }                      // Scaling                      else                      {                          float scaleX = (point.X - pivotPoint.X) / (pressedLocation.X - pivotPoint.X);                          float scaleY = (point.Y - pivotPoint.Y) / (pressedLocation.Y - pivotPoint.Y);                          matrix = SKMatrix.MakeScale(scaleX' scaleY' pivotPoint.X' pivotPoint.Y);                      }                        // Concatenate the matrices                      SKMatrix.PreConcat(ref matrix' pressedMatrix);                      currentMatrix = matrix;                      canvasView.InvalidateSurface();                      break;                    case TouchActionType.Released:                  case TouchActionType.Cancelled:                      touchId = null;                      break;              }
Magic Number,SkiaSharpFormsDemos.Transforms,SingleFingerCornerScalePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\SingleFingerCornerScalePage.xaml.cs,OnTouchEffectAction,The following statement contains a magic number: switch (args.Type)              {                  case TouchActionType.Pressed:                      // Track only one finger                      if (touchId.HasValue)                          return;                        // Check if the finger is within the boundaries of the bitmap                      SKRect rect = new SKRect(0' 0' bitmap.Width' bitmap.Height);                      rect = currentMatrix.MapRect(rect);                      if (!rect.Contains(point))                          return;                        // First assume there will be no scaling                      isScaling = false;                        // If touch is outside interior ellipse' make this a scaling operation                      if (Math.Pow((point.X - rect.MidX) / (rect.Width / 2)' 2) +                          Math.Pow((point.Y - rect.MidY) / (rect.Height / 2)' 2) > 1)                      {                          isScaling = true;                          float xPivot = point.X < rect.MidX ? rect.Right : rect.Left;                          float yPivot = point.Y < rect.MidY ? rect.Bottom : rect.Top;                          pivotPoint = new SKPoint(xPivot' yPivot);                      }                        // Common for either pan or scale                      touchId = args.Id;                      pressedLocation = point;                      pressedMatrix = currentMatrix;                      break;                    case TouchActionType.Moved:                      if (!touchId.HasValue || args.Id != touchId.Value)                          return;                        SKMatrix matrix = SKMatrix.MakeIdentity();                        // Translating                      if (!isScaling)                      {                          SKPoint delta = point - pressedLocation;                          matrix = SKMatrix.MakeTranslation(delta.X' delta.Y);                      }                      // Scaling                      else                      {                          float scaleX = (point.X - pivotPoint.X) / (pressedLocation.X - pivotPoint.X);                          float scaleY = (point.Y - pivotPoint.Y) / (pressedLocation.Y - pivotPoint.Y);                          matrix = SKMatrix.MakeScale(scaleX' scaleY' pivotPoint.X' pivotPoint.Y);                      }                        // Concatenate the matrices                      SKMatrix.PreConcat(ref matrix' pressedMatrix);                      currentMatrix = matrix;                      canvasView.InvalidateSurface();                      break;                    case TouchActionType.Released:                  case TouchActionType.Cancelled:                      touchId = null;                      break;              }
Magic Number,SkiaSharpFormsDemos.Transforms,SingleFingerCornerScalePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\SingleFingerCornerScalePage.xaml.cs,OnTouchEffectAction,The following statement contains a magic number: switch (args.Type)              {                  case TouchActionType.Pressed:                      // Track only one finger                      if (touchId.HasValue)                          return;                        // Check if the finger is within the boundaries of the bitmap                      SKRect rect = new SKRect(0' 0' bitmap.Width' bitmap.Height);                      rect = currentMatrix.MapRect(rect);                      if (!rect.Contains(point))                          return;                        // First assume there will be no scaling                      isScaling = false;                        // If touch is outside interior ellipse' make this a scaling operation                      if (Math.Pow((point.X - rect.MidX) / (rect.Width / 2)' 2) +                          Math.Pow((point.Y - rect.MidY) / (rect.Height / 2)' 2) > 1)                      {                          isScaling = true;                          float xPivot = point.X < rect.MidX ? rect.Right : rect.Left;                          float yPivot = point.Y < rect.MidY ? rect.Bottom : rect.Top;                          pivotPoint = new SKPoint(xPivot' yPivot);                      }                        // Common for either pan or scale                      touchId = args.Id;                      pressedLocation = point;                      pressedMatrix = currentMatrix;                      break;                    case TouchActionType.Moved:                      if (!touchId.HasValue || args.Id != touchId.Value)                          return;                        SKMatrix matrix = SKMatrix.MakeIdentity();                        // Translating                      if (!isScaling)                      {                          SKPoint delta = point - pressedLocation;                          matrix = SKMatrix.MakeTranslation(delta.X' delta.Y);                      }                      // Scaling                      else                      {                          float scaleX = (point.X - pivotPoint.X) / (pressedLocation.X - pivotPoint.X);                          float scaleY = (point.Y - pivotPoint.Y) / (pressedLocation.Y - pivotPoint.Y);                          matrix = SKMatrix.MakeScale(scaleX' scaleY' pivotPoint.X' pivotPoint.Y);                      }                        // Concatenate the matrices                      SKMatrix.PreConcat(ref matrix' pressedMatrix);                      currentMatrix = matrix;                      canvasView.InvalidateSurface();                      break;                    case TouchActionType.Released:                  case TouchActionType.Cancelled:                      touchId = null;                      break;              }
Magic Number,SkiaSharpFormsDemos.Transforms,SkewAngleExperimentPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\SkewAngleExperimentPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float xCenter = info.Width / 2;
Magic Number,SkiaSharpFormsDemos.Transforms,SkewAngleExperimentPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\SkewAngleExperimentPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float yCenter = info.Height / 2;
Magic Number,SkiaSharpFormsDemos.Transforms,SkewAngleExperimentPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\SkewAngleExperimentPage.xaml.cs,SkewDegrees,The following statement contains a magic number: canvas.Skew((float)Math.Tan(Math.PI * xDegrees / 180)'                          (float)Math.Tan(Math.PI * yDegrees / 180));
Magic Number,SkiaSharpFormsDemos.Transforms,SkewAngleExperimentPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\SkewAngleExperimentPage.xaml.cs,SkewDegrees,The following statement contains a magic number: canvas.Skew((float)Math.Tan(Math.PI * xDegrees / 180)'                          (float)Math.Tan(Math.PI * yDegrees / 180));
Magic Number,SkiaSharpFormsDemos.Transforms,SkewShadowTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\SkewShadowTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: textPaint.TextSize = info.Width / 6;
Magic Number,SkiaSharpFormsDemos.Transforms,SkewShadowTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\SkewShadowTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float xText = 20;
Magic Number,SkiaSharpFormsDemos.Transforms,SkewShadowTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\SkewShadowTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float yText = info.Height / 2;
Magic Number,SkiaSharpFormsDemos.Transforms,SkewShadowTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\SkewShadowTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Skew((float)Math.Tan(-Math.PI / 4)' 0);
Magic Number,SkiaSharpFormsDemos.Transforms,SkewShadowTextPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\SkewShadowTextPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Scale(1' 3);
Magic Number,SkiaSharpFormsDemos.Transforms,TaperTransform,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\TaperTransform.cs,Make,The following statement contains a magic number: switch (taperSide)              {                  case TaperSide.Left:                      matrix.ScaleX = taperFraction;                      matrix.ScaleY = taperFraction;                      matrix.Persp0 = (taperFraction - 1) / size.Width;                        switch (taperCorner)                      {                          case TaperCorner.RightOrBottom:                              break;                            case TaperCorner.LeftOrTop:                              matrix.SkewY = size.Height * matrix.Persp0;                              matrix.TransY = size.Height * (1 - taperFraction);                              break;                            case TaperCorner.Both:                              matrix.SkewY = (size.Height / 2) * matrix.Persp0;                              matrix.TransY = size.Height * (1 - taperFraction) / 2;                              break;                      }                      break;                    case TaperSide.Top:                      matrix.ScaleX = taperFraction;                      matrix.ScaleY = taperFraction;                      matrix.Persp1 = (taperFraction - 1) / size.Height;                        switch (taperCorner)                      {                          case TaperCorner.RightOrBottom:                              break;                            case TaperCorner.LeftOrTop:                              matrix.SkewX = size.Width * matrix.Persp1;                              matrix.TransX = size.Width * (1 - taperFraction);                              break;                            case TaperCorner.Both:                              matrix.SkewX = (size.Width / 2) * matrix.Persp1;                              matrix.TransX = size.Width * (1 - taperFraction) / 2;                              break;                      }                      break;                    case TaperSide.Right:                      matrix.ScaleX = 1 / taperFraction;                      matrix.Persp0 = (1 - taperFraction) / (size.Width * taperFraction);                        switch (taperCorner)                      {                          case TaperCorner.RightOrBottom:                              break;                            case TaperCorner.LeftOrTop:                              matrix.SkewY = size.Height * matrix.Persp0;                              break;                            case TaperCorner.Both:                              matrix.SkewY = (size.Height / 2) * matrix.Persp0;                              break;                      }                      break;                    case TaperSide.Bottom:                      matrix.ScaleY = 1 / taperFraction;                      matrix.Persp1 = (1 - taperFraction) / (size.Height * taperFraction);                        switch (taperCorner)                      {                          case TaperCorner.RightOrBottom:                              break;                            case TaperCorner.LeftOrTop:                              matrix.SkewX = size.Width * matrix.Persp1;                              break;                            case TaperCorner.Both:                              matrix.SkewX = (size.Width / 2) * matrix.Persp1;                              break;                      }                      break;              }
Magic Number,SkiaSharpFormsDemos.Transforms,TaperTransform,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\TaperTransform.cs,Make,The following statement contains a magic number: switch (taperSide)              {                  case TaperSide.Left:                      matrix.ScaleX = taperFraction;                      matrix.ScaleY = taperFraction;                      matrix.Persp0 = (taperFraction - 1) / size.Width;                        switch (taperCorner)                      {                          case TaperCorner.RightOrBottom:                              break;                            case TaperCorner.LeftOrTop:                              matrix.SkewY = size.Height * matrix.Persp0;                              matrix.TransY = size.Height * (1 - taperFraction);                              break;                            case TaperCorner.Both:                              matrix.SkewY = (size.Height / 2) * matrix.Persp0;                              matrix.TransY = size.Height * (1 - taperFraction) / 2;                              break;                      }                      break;                    case TaperSide.Top:                      matrix.ScaleX = taperFraction;                      matrix.ScaleY = taperFraction;                      matrix.Persp1 = (taperFraction - 1) / size.Height;                        switch (taperCorner)                      {                          case TaperCorner.RightOrBottom:                              break;                            case TaperCorner.LeftOrTop:                              matrix.SkewX = size.Width * matrix.Persp1;                              matrix.TransX = size.Width * (1 - taperFraction);                              break;                            case TaperCorner.Both:                              matrix.SkewX = (size.Width / 2) * matrix.Persp1;                              matrix.TransX = size.Width * (1 - taperFraction) / 2;                              break;                      }                      break;                    case TaperSide.Right:                      matrix.ScaleX = 1 / taperFraction;                      matrix.Persp0 = (1 - taperFraction) / (size.Width * taperFraction);                        switch (taperCorner)                      {                          case TaperCorner.RightOrBottom:                              break;                            case TaperCorner.LeftOrTop:                              matrix.SkewY = size.Height * matrix.Persp0;                              break;                            case TaperCorner.Both:                              matrix.SkewY = (size.Height / 2) * matrix.Persp0;                              break;                      }                      break;                    case TaperSide.Bottom:                      matrix.ScaleY = 1 / taperFraction;                      matrix.Persp1 = (1 - taperFraction) / (size.Height * taperFraction);                        switch (taperCorner)                      {                          case TaperCorner.RightOrBottom:                              break;                            case TaperCorner.LeftOrTop:                              matrix.SkewX = size.Width * matrix.Persp1;                              break;                            case TaperCorner.Both:                              matrix.SkewX = (size.Width / 2) * matrix.Persp1;                              break;                      }                      break;              }
Magic Number,SkiaSharpFormsDemos.Transforms,TaperTransform,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\TaperTransform.cs,Make,The following statement contains a magic number: switch (taperSide)              {                  case TaperSide.Left:                      matrix.ScaleX = taperFraction;                      matrix.ScaleY = taperFraction;                      matrix.Persp0 = (taperFraction - 1) / size.Width;                        switch (taperCorner)                      {                          case TaperCorner.RightOrBottom:                              break;                            case TaperCorner.LeftOrTop:                              matrix.SkewY = size.Height * matrix.Persp0;                              matrix.TransY = size.Height * (1 - taperFraction);                              break;                            case TaperCorner.Both:                              matrix.SkewY = (size.Height / 2) * matrix.Persp0;                              matrix.TransY = size.Height * (1 - taperFraction) / 2;                              break;                      }                      break;                    case TaperSide.Top:                      matrix.ScaleX = taperFraction;                      matrix.ScaleY = taperFraction;                      matrix.Persp1 = (taperFraction - 1) / size.Height;                        switch (taperCorner)                      {                          case TaperCorner.RightOrBottom:                              break;                            case TaperCorner.LeftOrTop:                              matrix.SkewX = size.Width * matrix.Persp1;                              matrix.TransX = size.Width * (1 - taperFraction);                              break;                            case TaperCorner.Both:                              matrix.SkewX = (size.Width / 2) * matrix.Persp1;                              matrix.TransX = size.Width * (1 - taperFraction) / 2;                              break;                      }                      break;                    case TaperSide.Right:                      matrix.ScaleX = 1 / taperFraction;                      matrix.Persp0 = (1 - taperFraction) / (size.Width * taperFraction);                        switch (taperCorner)                      {                          case TaperCorner.RightOrBottom:                              break;                            case TaperCorner.LeftOrTop:                              matrix.SkewY = size.Height * matrix.Persp0;                              break;                            case TaperCorner.Both:                              matrix.SkewY = (size.Height / 2) * matrix.Persp0;                              break;                      }                      break;                    case TaperSide.Bottom:                      matrix.ScaleY = 1 / taperFraction;                      matrix.Persp1 = (1 - taperFraction) / (size.Height * taperFraction);                        switch (taperCorner)                      {                          case TaperCorner.RightOrBottom:                              break;                            case TaperCorner.LeftOrTop:                              matrix.SkewX = size.Width * matrix.Persp1;                              break;                            case TaperCorner.Both:                              matrix.SkewX = (size.Width / 2) * matrix.Persp1;                              break;                      }                      break;              }
Magic Number,SkiaSharpFormsDemos.Transforms,TaperTransform,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\TaperTransform.cs,Make,The following statement contains a magic number: switch (taperSide)              {                  case TaperSide.Left:                      matrix.ScaleX = taperFraction;                      matrix.ScaleY = taperFraction;                      matrix.Persp0 = (taperFraction - 1) / size.Width;                        switch (taperCorner)                      {                          case TaperCorner.RightOrBottom:                              break;                            case TaperCorner.LeftOrTop:                              matrix.SkewY = size.Height * matrix.Persp0;                              matrix.TransY = size.Height * (1 - taperFraction);                              break;                            case TaperCorner.Both:                              matrix.SkewY = (size.Height / 2) * matrix.Persp0;                              matrix.TransY = size.Height * (1 - taperFraction) / 2;                              break;                      }                      break;                    case TaperSide.Top:                      matrix.ScaleX = taperFraction;                      matrix.ScaleY = taperFraction;                      matrix.Persp1 = (taperFraction - 1) / size.Height;                        switch (taperCorner)                      {                          case TaperCorner.RightOrBottom:                              break;                            case TaperCorner.LeftOrTop:                              matrix.SkewX = size.Width * matrix.Persp1;                              matrix.TransX = size.Width * (1 - taperFraction);                              break;                            case TaperCorner.Both:                              matrix.SkewX = (size.Width / 2) * matrix.Persp1;                              matrix.TransX = size.Width * (1 - taperFraction) / 2;                              break;                      }                      break;                    case TaperSide.Right:                      matrix.ScaleX = 1 / taperFraction;                      matrix.Persp0 = (1 - taperFraction) / (size.Width * taperFraction);                        switch (taperCorner)                      {                          case TaperCorner.RightOrBottom:                              break;                            case TaperCorner.LeftOrTop:                              matrix.SkewY = size.Height * matrix.Persp0;                              break;                            case TaperCorner.Both:                              matrix.SkewY = (size.Height / 2) * matrix.Persp0;                              break;                      }                      break;                    case TaperSide.Bottom:                      matrix.ScaleY = 1 / taperFraction;                      matrix.Persp1 = (1 - taperFraction) / (size.Height * taperFraction);                        switch (taperCorner)                      {                          case TaperCorner.RightOrBottom:                              break;                            case TaperCorner.LeftOrTop:                              matrix.SkewX = size.Width * matrix.Persp1;                              break;                            case TaperCorner.Both:                              matrix.SkewX = (size.Width / 2) * matrix.Persp1;                              break;                      }                      break;              }
Magic Number,SkiaSharpFormsDemos.Transforms,TaperTransform,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\TaperTransform.cs,Make,The following statement contains a magic number: switch (taperSide)              {                  case TaperSide.Left:                      matrix.ScaleX = taperFraction;                      matrix.ScaleY = taperFraction;                      matrix.Persp0 = (taperFraction - 1) / size.Width;                        switch (taperCorner)                      {                          case TaperCorner.RightOrBottom:                              break;                            case TaperCorner.LeftOrTop:                              matrix.SkewY = size.Height * matrix.Persp0;                              matrix.TransY = size.Height * (1 - taperFraction);                              break;                            case TaperCorner.Both:                              matrix.SkewY = (size.Height / 2) * matrix.Persp0;                              matrix.TransY = size.Height * (1 - taperFraction) / 2;                              break;                      }                      break;                    case TaperSide.Top:                      matrix.ScaleX = taperFraction;                      matrix.ScaleY = taperFraction;                      matrix.Persp1 = (taperFraction - 1) / size.Height;                        switch (taperCorner)                      {                          case TaperCorner.RightOrBottom:                              break;                            case TaperCorner.LeftOrTop:                              matrix.SkewX = size.Width * matrix.Persp1;                              matrix.TransX = size.Width * (1 - taperFraction);                              break;                            case TaperCorner.Both:                              matrix.SkewX = (size.Width / 2) * matrix.Persp1;                              matrix.TransX = size.Width * (1 - taperFraction) / 2;                              break;                      }                      break;                    case TaperSide.Right:                      matrix.ScaleX = 1 / taperFraction;                      matrix.Persp0 = (1 - taperFraction) / (size.Width * taperFraction);                        switch (taperCorner)                      {                          case TaperCorner.RightOrBottom:                              break;                            case TaperCorner.LeftOrTop:                              matrix.SkewY = size.Height * matrix.Persp0;                              break;                            case TaperCorner.Both:                              matrix.SkewY = (size.Height / 2) * matrix.Persp0;                              break;                      }                      break;                    case TaperSide.Bottom:                      matrix.ScaleY = 1 / taperFraction;                      matrix.Persp1 = (1 - taperFraction) / (size.Height * taperFraction);                        switch (taperCorner)                      {                          case TaperCorner.RightOrBottom:                              break;                            case TaperCorner.LeftOrTop:                              matrix.SkewX = size.Width * matrix.Persp1;                              break;                            case TaperCorner.Both:                              matrix.SkewX = (size.Width / 2) * matrix.Persp1;                              break;                      }                      break;              }
Magic Number,SkiaSharpFormsDemos.Transforms,TaperTransform,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\TaperTransform.cs,Make,The following statement contains a magic number: switch (taperSide)              {                  case TaperSide.Left:                      matrix.ScaleX = taperFraction;                      matrix.ScaleY = taperFraction;                      matrix.Persp0 = (taperFraction - 1) / size.Width;                        switch (taperCorner)                      {                          case TaperCorner.RightOrBottom:                              break;                            case TaperCorner.LeftOrTop:                              matrix.SkewY = size.Height * matrix.Persp0;                              matrix.TransY = size.Height * (1 - taperFraction);                              break;                            case TaperCorner.Both:                              matrix.SkewY = (size.Height / 2) * matrix.Persp0;                              matrix.TransY = size.Height * (1 - taperFraction) / 2;                              break;                      }                      break;                    case TaperSide.Top:                      matrix.ScaleX = taperFraction;                      matrix.ScaleY = taperFraction;                      matrix.Persp1 = (taperFraction - 1) / size.Height;                        switch (taperCorner)                      {                          case TaperCorner.RightOrBottom:                              break;                            case TaperCorner.LeftOrTop:                              matrix.SkewX = size.Width * matrix.Persp1;                              matrix.TransX = size.Width * (1 - taperFraction);                              break;                            case TaperCorner.Both:                              matrix.SkewX = (size.Width / 2) * matrix.Persp1;                              matrix.TransX = size.Width * (1 - taperFraction) / 2;                              break;                      }                      break;                    case TaperSide.Right:                      matrix.ScaleX = 1 / taperFraction;                      matrix.Persp0 = (1 - taperFraction) / (size.Width * taperFraction);                        switch (taperCorner)                      {                          case TaperCorner.RightOrBottom:                              break;                            case TaperCorner.LeftOrTop:                              matrix.SkewY = size.Height * matrix.Persp0;                              break;                            case TaperCorner.Both:                              matrix.SkewY = (size.Height / 2) * matrix.Persp0;                              break;                      }                      break;                    case TaperSide.Bottom:                      matrix.ScaleY = 1 / taperFraction;                      matrix.Persp1 = (1 - taperFraction) / (size.Height * taperFraction);                        switch (taperCorner)                      {                          case TaperCorner.RightOrBottom:                              break;                            case TaperCorner.LeftOrTop:                              matrix.SkewX = size.Width * matrix.Persp1;                              break;                            case TaperCorner.Both:                              matrix.SkewX = (size.Width / 2) * matrix.Persp1;                              break;                      }                      break;              }
Magic Number,SkiaSharpFormsDemos.Transforms,TaperTransformPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\TaperTransformPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float x = (info.Width - bitmap.Width) / 2;
Magic Number,SkiaSharpFormsDemos.Transforms,TaperTransformPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\TaperTransformPage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float y = (info.Height - bitmap.Height) / 2;
Magic Number,SkiaSharpFormsDemos.Transforms,TestPerspectivePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\TestPerspectivePage.xaml.cs,OnPersp0SliderValueChanged,The following statement contains a magic number: persp0Label.Text = String.Format("Persp0 = {0:F4}"' slider.Value / 100);
Magic Number,SkiaSharpFormsDemos.Transforms,TestPerspectivePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\TestPerspectivePage.xaml.cs,OnPersp1SliderValueChanged,The following statement contains a magic number: persp1Label.Text = String.Format("Persp1 = {0:F4}"' slider.Value / 100);
Magic Number,SkiaSharpFormsDemos.Transforms,TestPerspectivePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\TestPerspectivePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: perspectiveMatrix.Persp0 = (float)persp0Slider.Value / 100;
Magic Number,SkiaSharpFormsDemos.Transforms,TestPerspectivePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\TestPerspectivePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: perspectiveMatrix.Persp1 = (float)persp1Slider.Value / 100;
Magic Number,SkiaSharpFormsDemos.Transforms,TestPerspectivePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\TestPerspectivePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float xCenter = info.Width / 2;
Magic Number,SkiaSharpFormsDemos.Transforms,TestPerspectivePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\TestPerspectivePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float yCenter = info.Height / 2;
Magic Number,SkiaSharpFormsDemos.Transforms,TestPerspectivePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\TestPerspectivePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float x = xCenter - bitmap.Width / 2;
Magic Number,SkiaSharpFormsDemos.Transforms,TestPerspectivePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\TestPerspectivePage.xaml.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float y = yCenter - bitmap.Height / 2;
Magic Number,SkiaSharpFormsDemos.Transforms,TouchManipulationBitmap,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\TouchManipulationBitmap.cs,Manipulate,The following statement contains a magic number: SKPoint pivotPoint = Matrix.MapPoint(bitmap.Width / 2' bitmap.Height / 2);
Magic Number,SkiaSharpFormsDemos.Transforms,TouchManipulationBitmap,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\TouchManipulationBitmap.cs,Manipulate,The following statement contains a magic number: SKPoint pivotPoint = Matrix.MapPoint(bitmap.Width / 2' bitmap.Height / 2);
Magic Number,SkiaSharpFormsDemos.Transforms,TouchManipulationManager,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\TouchManipulationManager.cs,OneFingerManipulate,The following statement contains a magic number: Magnitude(newVector) > 25 && Magnitude(oldVector) > 25
Magic Number,SkiaSharpFormsDemos.Transforms,TouchManipulationManager,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\TouchManipulationManager.cs,OneFingerManipulate,The following statement contains a magic number: Magnitude(newVector) > 25 && Magnitude(oldVector) > 25
Magic Number,SkiaSharpFormsDemos.Transforms,TouchManipulationManager,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\TouchManipulationManager.cs,Magnitude,The following statement contains a magic number: return (float)Math.Sqrt(Math.Pow(point.X' 2) + Math.Pow(point.Y' 2));
Magic Number,SkiaSharpFormsDemos.Transforms,TouchManipulationManager,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\TouchManipulationManager.cs,Magnitude,The following statement contains a magic number: return (float)Math.Sqrt(Math.Pow(point.X' 2) + Math.Pow(point.Y' 2));
Magic Number,SkiaSharpFormsDemos.Transforms,TranslateTextEffectsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\TranslateTextEffectsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float textSize = 150;
Magic Number,SkiaSharpFormsDemos.Transforms,TranslateTextEffectsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\TranslateTextEffectsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: float x = 10;
Magic Number,SkiaSharpFormsDemos.Transforms,TranslateTextEffectsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\TranslateTextEffectsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(10' 10);
Magic Number,SkiaSharpFormsDemos.Transforms,TranslateTextEffectsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\TranslateTextEffectsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(10' 10);
Magic Number,SkiaSharpFormsDemos.Transforms,TranslateTextEffectsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\TranslateTextEffectsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(-10' -10);
Magic Number,SkiaSharpFormsDemos.Transforms,TranslateTextEffectsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\TranslateTextEffectsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(-10' -10);
Magic Number,SkiaSharpFormsDemos.Transforms,TranslateTextEffectsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\TranslateTextEffectsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: y += 2 * textSize;
Magic Number,SkiaSharpFormsDemos.Transforms,TranslateTextEffectsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\TranslateTextEffectsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(-5' -5);
Magic Number,SkiaSharpFormsDemos.Transforms,TranslateTextEffectsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\TranslateTextEffectsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(-5' -5);
Magic Number,SkiaSharpFormsDemos.Transforms,TranslateTextEffectsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\TranslateTextEffectsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: y += 2 * textSize;
Magic Number,SkiaSharpFormsDemos.Transforms,TranslateTextEffectsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\TranslateTextEffectsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(5' 5);
Magic Number,SkiaSharpFormsDemos.Transforms,TranslateTextEffectsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\TranslateTextEffectsPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(5' 5);
Magic Number,SkiaSharpFormsDemos.Transforms,UglyAnalogClockPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\UglyAnalogClockPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(info.Width / 2f' info.Height / 2f);
Magic Number,SkiaSharpFormsDemos.Transforms,UglyAnalogClockPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\UglyAnalogClockPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Translate(info.Width / 2f' info.Height / 2f);
Magic Number,SkiaSharpFormsDemos.Transforms,UglyAnalogClockPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\UglyAnalogClockPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Scale(Math.Min(info.Width / 200f' info.Height / 200f));
Magic Number,SkiaSharpFormsDemos.Transforms,UglyAnalogClockPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\UglyAnalogClockPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.Scale(Math.Min(info.Width / 200f' info.Height / 200f));
Magic Number,SkiaSharpFormsDemos.Transforms,UglyAnalogClockPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\UglyAnalogClockPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawCircle(0' -90' angle % 30 == 0 ? 4 : 2' fillPaint);
Magic Number,SkiaSharpFormsDemos.Transforms,UglyAnalogClockPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\UglyAnalogClockPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawCircle(0' -90' angle % 30 == 0 ? 4 : 2' fillPaint);
Magic Number,SkiaSharpFormsDemos.Transforms,UglyAnalogClockPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\UglyAnalogClockPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawCircle(0' -90' angle % 30 == 0 ? 4 : 2' fillPaint);
Magic Number,SkiaSharpFormsDemos.Transforms,UglyAnalogClockPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\UglyAnalogClockPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawCircle(0' -90' angle % 30 == 0 ? 4 : 2' fillPaint);
Magic Number,SkiaSharpFormsDemos.Transforms,UglyAnalogClockPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\UglyAnalogClockPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.RotateDegrees(6);
Magic Number,SkiaSharpFormsDemos.Transforms,UglyAnalogClockPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\UglyAnalogClockPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: strokePaint.StrokeWidth = 20;
Magic Number,SkiaSharpFormsDemos.Transforms,UglyAnalogClockPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\UglyAnalogClockPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.RotateDegrees(30 * dateTime.Hour + dateTime.Minute / 2f);
Magic Number,SkiaSharpFormsDemos.Transforms,UglyAnalogClockPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\UglyAnalogClockPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.RotateDegrees(30 * dateTime.Hour + dateTime.Minute / 2f);
Magic Number,SkiaSharpFormsDemos.Transforms,UglyAnalogClockPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\UglyAnalogClockPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawLine(0' 0' 0' -50' strokePaint);
Magic Number,SkiaSharpFormsDemos.Transforms,UglyAnalogClockPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\UglyAnalogClockPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: strokePaint.StrokeWidth = 10;
Magic Number,SkiaSharpFormsDemos.Transforms,UglyAnalogClockPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\UglyAnalogClockPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.RotateDegrees(6 * dateTime.Minute + dateTime.Second / 10f);
Magic Number,SkiaSharpFormsDemos.Transforms,UglyAnalogClockPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\UglyAnalogClockPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.RotateDegrees(6 * dateTime.Minute + dateTime.Second / 10f);
Magic Number,SkiaSharpFormsDemos.Transforms,UglyAnalogClockPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\UglyAnalogClockPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawLine(0' 0' 0' -70' strokePaint);
Magic Number,SkiaSharpFormsDemos.Transforms,UglyAnalogClockPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\UglyAnalogClockPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: strokePaint.StrokeWidth = 2;
Magic Number,SkiaSharpFormsDemos.Transforms,UglyAnalogClockPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\UglyAnalogClockPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.RotateDegrees(6 * dateTime.Second);
Magic Number,SkiaSharpFormsDemos.Transforms,UglyAnalogClockPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\UglyAnalogClockPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawLine(0' 10' 0' -80' strokePaint);
Magic Number,SkiaSharpFormsDemos.Transforms,UglyAnalogClockPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\UglyAnalogClockPage.cs,OnCanvasViewPaintSurface,The following statement contains a magic number: canvas.DrawLine(0' 10' 0' -80' strokePaint);
Missing Default,SkiaSharpFormsDemos,BitmapExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\BitmapExtensions.cs,DrawBitmap,The following switch statement is missing a default case: switch (stretch)                  {                      case BitmapStretch.None:                          break;                        case BitmapStretch.Uniform:                          scale = Math.Min(dest.Width / bitmap.Width' dest.Height / bitmap.Height);                          break;                        case BitmapStretch.UniformToFill:                          scale = Math.Max(dest.Width / bitmap.Width' dest.Height / bitmap.Height);                          break;                  }
Missing Default,SkiaSharpFormsDemos,BitmapExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\BitmapExtensions.cs,DrawBitmap,The following switch statement is missing a default case: switch (stretch)                  {                      case BitmapStretch.None:                          break;                        case BitmapStretch.Uniform:                          scale = Math.Min(dest.Width / source.Width' dest.Height / source.Height);                          break;                        case BitmapStretch.UniformToFill:                          scale = Math.Max(dest.Width / source.Width' dest.Height / source.Height);                          break;                  }
Missing Default,SkiaSharpFormsDemos,BitmapExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\BitmapExtensions.cs,CalculateDisplayRect,The following switch statement is missing a default case: switch (horizontal)              {                  case BitmapAlignment.Center:                      x = (dest.Width - bmpWidth) / 2;                      break;                    case BitmapAlignment.Start:                      break;                    case BitmapAlignment.End:                      x = dest.Width - bmpWidth;                      break;              }
Missing Default,SkiaSharpFormsDemos,BitmapExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\BitmapExtensions.cs,CalculateDisplayRect,The following switch statement is missing a default case: switch (vertical)              {                  case BitmapAlignment.Center:                      y = (dest.Height - bmpHeight) / 2;                      break;                    case BitmapAlignment.Start:                      break;                    case BitmapAlignment.End:                      y = dest.Height - bmpHeight;                      break;              }
Missing Default,SkiaSharpFormsDemos,TouchPoint,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\TouchPoint.cs,ProcessTouchEvent,The following switch statement is missing a default case: switch (type)              {                  case TouchActionType.Pressed:                      if (!isBeingDragged && PointInCircle(location))                      {                          isBeingDragged = true;                          touchId = id;                          previousPoint = location;                          centerMoved = false;                      }                      break;                    case TouchActionType.Moved:                      if (isBeingDragged && touchId == id)                      {                          Center += location - previousPoint;                          previousPoint = location;                          centerMoved = true;                      }                      break;                    case TouchActionType.Released:                      if (isBeingDragged && touchId == id)                      {                          Center += location - previousPoint;                          isBeingDragged = false;                          centerMoved = true;                      }                      break;                    case TouchActionType.Cancelled:                      isBeingDragged = false;                      break;              }
Missing Default,SkiaSharpFormsDemos.Bitmaps,CroppingRectangle,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\CroppingRectangle.cs,MoveCorner,The following switch statement is missing a default case: switch (index)              {                  case 0: // upper-left                      rect.Left = Math.Min(Math.Max(point.X' maxRect.Left)' rect.Right - MINIMUM);                      rect.Top = Math.Min(Math.Max(point.Y' maxRect.Top)' rect.Bottom - MINIMUM);                      break;                    case 1: // upper-right                      rect.Right = Math.Max(Math.Min(point.X' maxRect.Right)' rect.Left + MINIMUM);                      rect.Top = Math.Min(Math.Max(point.Y' maxRect.Top)' rect.Bottom - MINIMUM);                      break;                    case 2: // lower-right                      rect.Right = Math.Max(Math.Min(point.X' maxRect.Right)' rect.Left + MINIMUM);                      rect.Bottom = Math.Max(Math.Min(point.Y' maxRect.Bottom)' rect.Top + MINIMUM);                      break;                    case 3: // lower-left                      rect.Left = Math.Min(Math.Max(point.X' maxRect.Left)' rect.Right - MINIMUM);                      rect.Bottom = Math.Max(Math.Min(point.Y' maxRect.Bottom)' rect.Top + MINIMUM);                      break;              }
Missing Default,SkiaSharpFormsDemos.Bitmaps,CroppingRectangle,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\CroppingRectangle.cs,MoveCorner,The following switch statement is missing a default case: switch (index)                      {                          case 0:                          case 3: rect.Left = rect.Right - width; break;                          case 1:                          case 2: rect.Right = rect.Left + width; break;                      }
Missing Default,SkiaSharpFormsDemos.Bitmaps,CroppingRectangle,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\CroppingRectangle.cs,MoveCorner,The following switch statement is missing a default case: switch (index)                      {                          case 0:                          case 1: rect.Top = rect.Bottom - height; break;                          case 2:                          case 3: rect.Bottom = rect.Top + height; break;                      }
Missing Default,SkiaSharpFormsDemos.Bitmaps,FingerPaintSavePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\FingerPaintSavePage.xaml.cs,OnTouchEffectAction,The following switch statement is missing a default case: switch (args.Type)              {                  case TouchActionType.Pressed:                      if (!inProgressPaths.ContainsKey(args.Id))                      {                          SKPath path = new SKPath();                          path.MoveTo(ConvertToPixel(args.Location));                          inProgressPaths.Add(args.Id' path);                          UpdateBitmap();                      }                      break;                    case TouchActionType.Moved:                      if (inProgressPaths.ContainsKey(args.Id))                      {                          SKPath path = inProgressPaths[args.Id];                          path.LineTo(ConvertToPixel(args.Location));                          UpdateBitmap();                      }                      break;                    case TouchActionType.Released:                      if (inProgressPaths.ContainsKey(args.Id))                      {                          completedPaths.Add(inProgressPaths[args.Id]);                          inProgressPaths.Remove(args.Id);                          UpdateBitmap();                      }                      break;                    case TouchActionType.Cancelled:                      if (inProgressPaths.ContainsKey(args.Id))                      {                          inProgressPaths.Remove(args.Id);                          UpdateBitmap();                      }                      break;              }
Missing Default,SkiaSharpFormsDemos.Bitmaps,PhotoCropperCanvasView,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Bitmaps\PhotoCropperCanvasView.cs,OnTouchEffectTouchAction,The following switch statement is missing a default case: switch (args.Type)              {                  case TouchActionType.Pressed:                      // Convert radius to bitmap/cropping scale                      float radius = inverseBitmapMatrix.ScaleX * RADIUS;                        // Find corner that the finger is touching                      int cornerIndex = croppingRect.HitTest(bitmapLocation' radius);                        if (cornerIndex != -1 && !touchPoints.ContainsKey(args.Id))                      {                          TouchPoint touchPoint = new TouchPoint                          {                              CornerIndex = cornerIndex'                              Offset = bitmapLocation - croppingRect.Corners[cornerIndex]                          };                            touchPoints.Add(args.Id' touchPoint);                      }                      break;                    case TouchActionType.Moved:                      if (touchPoints.ContainsKey(args.Id))                      {                          TouchPoint touchPoint = touchPoints[args.Id];                          croppingRect.MoveCorner(touchPoint.CornerIndex'                                                   bitmapLocation - touchPoint.Offset);                          InvalidateSurface();                      }                      break;                    case TouchActionType.Released:                  case TouchActionType.Cancelled:                      if (touchPoints.ContainsKey(args.Id))                      {                          touchPoints.Remove(args.Id);                      }                      break;              }
Missing Default,SkiaSharpFormsDemos.Curves,OneDimensionalPathEffectPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\OneDimensionalPathEffectPage.xaml.cs,OnCanvasViewPaintSurface,The following switch statement is missing a default case: switch ((string)effectStylePicker.SelectedItem)                  {                      case "Translate":                          pathPaint.PathEffect = translatePathEffect;                          break;                        case "Rotate":                          pathPaint.PathEffect = rotatePathEffect;                          break;                        case "Morph":                          pathPaint.PathEffect = morphPathEffect;                          break;                  }
Missing Default,SkiaSharpFormsDemos.Curves,PathExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Curves\PathExtensions.cs,CloneWithTransform,The following switch statement is missing a default case: switch (pathVerb)                      {                          case SKPathVerb.Move:                              pathOut.MoveTo(transform(points[0]));                              firstPoint = lastPoint = points[0];                              break;                            case SKPathVerb.Line:                              SKPoint[] linePoints = Interpolate(points[0]' points[1]);                                foreach (SKPoint pt in linePoints)                              {                                  pathOut.LineTo(transform(pt));                              }                                lastPoint = points[1];                              break;                            case SKPathVerb.Cubic:                              SKPoint[] cubicPoints = FlattenCubic(points[0]' points[1]' points[2]' points[3]);                                foreach (SKPoint pt in cubicPoints)                              {                                  pathOut.LineTo(transform(pt));                              }                                lastPoint = points[3];                              break;                            case SKPathVerb.Quad:                              SKPoint[] quadPoints = FlattenQuadratic(points[0]' points[1]' points[2]);                                foreach (SKPoint pt in quadPoints)                              {                                  pathOut.LineTo(transform(pt));                              }                                lastPoint = points[2];                              break;                            case SKPathVerb.Conic:                              SKPoint[] conicPoints = FlattenConic(points[0]' points[1]' points[2]' iterator.ConicWeight());                                foreach (SKPoint pt in conicPoints)                              {                                  pathOut.LineTo(transform(pt));                              }                                lastPoint = points[2];                              break;                            case SKPathVerb.Close:                              SKPoint[] closePoints = Interpolate(lastPoint' firstPoint);                                foreach (SKPoint pt in closePoints)                              {                                  pathOut.LineTo(transform(pt));                              }                                firstPoint = lastPoint = new SKPoint(0' 0);                              pathOut.Close();                              break;                      }
Missing Default,SkiaSharpFormsDemos.Effects,BrickWallCompositingPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\BrickWallCompositingPage.xaml.cs,OnButtonClicked,The following switch statement is missing a default case: switch (step)              {                  case 0: btn.Text = "Show sitting monkey"; break;                  case 1: btn.Text = "Draw matte with DstIn"; break;                  case 2: btn.Text = "Draw sidewalk with DstOver"; break;                  case 3: btn.Text = "Draw brick wall with DstOver"; break;                  case 4: btn.Text = "Reset"; break;              }
Missing Default,SkiaSharpFormsDemos.Effects,GradientTransitionsPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Effects\GradientTransitionsPage.xaml.cs,OnCanvasViewPaintSurface,The following switch statement is missing a default case: switch ((TransitionMode)transitionPicker.SelectedIndex)                  {                      case TransitionMode.Linear:                          paint0.Shader = SKShader.CreateLinearGradient(                                             new SKPoint(rect.Left' 0)'                                             new SKPoint(rect.Right' 0)'                                             colors'                                             positions'                                             SKShaderTileMode.Clamp);                          break;                        case TransitionMode.Radial:                          paint0.Shader = SKShader.CreateRadialGradient(                                              new SKPoint(rect.MidX' rect.MidY)'                                              (float)Math.Sqrt(Math.Pow(rect.Width / 2' 2) +                                                               Math.Pow(rect.Height / 2' 2))'                                              colors'                                              positions'                                              SKShaderTileMode.Clamp);                          break;                        case TransitionMode.Sweep:                          paint0.Shader = SKShader.CreateSweepGradient(                                              new SKPoint(rect.MidX' rect.MidY)'                                              colors'                                              positions);                          break;                  }
Missing Default,SkiaSharpFormsDemos.Paths,FingerPaintPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\FingerPaintPage.xaml.cs,OnTouchEffectAction,The following switch statement is missing a default case: switch (args.Type)              {                  case TouchActionType.Pressed:                      if (!inProgressPaths.ContainsKey(args.Id))                      {                          SKPath path = new SKPath();                          path.MoveTo(ConvertToPixel(args.Location));                          inProgressPaths.Add(args.Id' path);                          canvasView.InvalidateSurface();                      }                      break;                    case TouchActionType.Moved:                      if (inProgressPaths.ContainsKey(args.Id))                      {                          SKPath path = inProgressPaths[args.Id];                          path.LineTo(ConvertToPixel(args.Location));                          canvasView.InvalidateSurface();                      }                      break;                    case TouchActionType.Released:                      if (inProgressPaths.ContainsKey(args.Id))                      {                          completedPaths.Add(inProgressPaths[args.Id]);                          inProgressPaths.Remove(args.Id);                          canvasView.InvalidateSurface();                      }                      break;                    case TouchActionType.Cancelled:                      if (inProgressPaths.ContainsKey(args.Id))                      {                          inProgressPaths.Remove(args.Id);                          canvasView.InvalidateSurface();                      }                      break;              }
Missing Default,SkiaSharpFormsDemos.Paths,FivePointedStarPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Paths\FivePointedStarPage.xaml.cs,OnCanvasViewPaintSurface,The following switch statement is missing a default case: switch ((string)drawingModePicker.SelectedItem)              {                  case "Fill only":                      canvas.DrawPath(path' fillPaint);                      break;                    case "Stroke only":                      canvas.DrawPath(path' strokePaint);                      break;                    case "Stroke then Fill":                      canvas.DrawPath(path' strokePaint);                      canvas.DrawPath(path' fillPaint);                      break;                    case "Fill then Stroke":                      canvas.DrawPath(path' fillPaint);                      canvas.DrawPath(path' strokePaint);                      break;              }
Missing Default,SkiaSharpFormsDemos.Transforms,BitmapScatterViewPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\BitmapScatterViewPage.xaml.cs,OnTouchEffectAction,The following switch statement is missing a default case: switch (args.Type)              {                  case TouchActionType.Pressed:                      for (int i = bitmapCollection.Count - 1; i >= 0; i--)                      {                          TouchManipulationBitmap bitmap = bitmapCollection[i];                            if (bitmap.HitTest(point))                          {                              // Move bitmap to end of collection                              bitmapCollection.Remove(bitmap);                              bitmapCollection.Add(bitmap);                                // Do the touch processing                              bitmapDictionary.Add(args.Id' bitmap);                              bitmap.ProcessTouchEvent(args.Id' args.Type' point);                              canvasView.InvalidateSurface();                              break;                          }                      }                      break;                    case TouchActionType.Moved:                      if (bitmapDictionary.ContainsKey(args.Id))                      {                          TouchManipulationBitmap bitmap = bitmapDictionary[args.Id];                          bitmap.ProcessTouchEvent(args.Id' args.Type' point);                          canvasView.InvalidateSurface();                      }                      break;                    case TouchActionType.Released:                  case TouchActionType.Cancelled:                      if (bitmapDictionary.ContainsKey(args.Id))                      {                          TouchManipulationBitmap bitmap = bitmapDictionary[args.Id];                          bitmap.ProcessTouchEvent(args.Id' args.Type' point);                          bitmapDictionary.Remove(args.Id);                          canvasView.InvalidateSurface();                      }                      break;              }
Missing Default,SkiaSharpFormsDemos.Transforms,SingleFingerCornerScalePage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\SingleFingerCornerScalePage.xaml.cs,OnTouchEffectAction,The following switch statement is missing a default case: switch (args.Type)              {                  case TouchActionType.Pressed:                      // Track only one finger                      if (touchId.HasValue)                          return;                        // Check if the finger is within the boundaries of the bitmap                      SKRect rect = new SKRect(0' 0' bitmap.Width' bitmap.Height);                      rect = currentMatrix.MapRect(rect);                      if (!rect.Contains(point))                          return;                        // First assume there will be no scaling                      isScaling = false;                        // If touch is outside interior ellipse' make this a scaling operation                      if (Math.Pow((point.X - rect.MidX) / (rect.Width / 2)' 2) +                          Math.Pow((point.Y - rect.MidY) / (rect.Height / 2)' 2) > 1)                      {                          isScaling = true;                          float xPivot = point.X < rect.MidX ? rect.Right : rect.Left;                          float yPivot = point.Y < rect.MidY ? rect.Bottom : rect.Top;                          pivotPoint = new SKPoint(xPivot' yPivot);                      }                        // Common for either pan or scale                      touchId = args.Id;                      pressedLocation = point;                      pressedMatrix = currentMatrix;                      break;                    case TouchActionType.Moved:                      if (!touchId.HasValue || args.Id != touchId.Value)                          return;                        SKMatrix matrix = SKMatrix.MakeIdentity();                        // Translating                      if (!isScaling)                      {                          SKPoint delta = point - pressedLocation;                          matrix = SKMatrix.MakeTranslation(delta.X' delta.Y);                      }                      // Scaling                      else                      {                          float scaleX = (point.X - pivotPoint.X) / (pressedLocation.X - pivotPoint.X);                          float scaleY = (point.Y - pivotPoint.Y) / (pressedLocation.Y - pivotPoint.Y);                          matrix = SKMatrix.MakeScale(scaleX' scaleY' pivotPoint.X' pivotPoint.Y);                      }                        // Concatenate the matrices                      SKMatrix.PreConcat(ref matrix' pressedMatrix);                      currentMatrix = matrix;                      canvasView.InvalidateSurface();                      break;                    case TouchActionType.Released:                  case TouchActionType.Cancelled:                      touchId = null;                      break;              }
Missing Default,SkiaSharpFormsDemos.Transforms,TaperTransform,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\TaperTransform.cs,Make,The following switch statement is missing a default case: switch (taperSide)              {                  case TaperSide.Left:                      matrix.ScaleX = taperFraction;                      matrix.ScaleY = taperFraction;                      matrix.Persp0 = (taperFraction - 1) / size.Width;                        switch (taperCorner)                      {                          case TaperCorner.RightOrBottom:                              break;                            case TaperCorner.LeftOrTop:                              matrix.SkewY = size.Height * matrix.Persp0;                              matrix.TransY = size.Height * (1 - taperFraction);                              break;                            case TaperCorner.Both:                              matrix.SkewY = (size.Height / 2) * matrix.Persp0;                              matrix.TransY = size.Height * (1 - taperFraction) / 2;                              break;                      }                      break;                    case TaperSide.Top:                      matrix.ScaleX = taperFraction;                      matrix.ScaleY = taperFraction;                      matrix.Persp1 = (taperFraction - 1) / size.Height;                        switch (taperCorner)                      {                          case TaperCorner.RightOrBottom:                              break;                            case TaperCorner.LeftOrTop:                              matrix.SkewX = size.Width * matrix.Persp1;                              matrix.TransX = size.Width * (1 - taperFraction);                              break;                            case TaperCorner.Both:                              matrix.SkewX = (size.Width / 2) * matrix.Persp1;                              matrix.TransX = size.Width * (1 - taperFraction) / 2;                              break;                      }                      break;                    case TaperSide.Right:                      matrix.ScaleX = 1 / taperFraction;                      matrix.Persp0 = (1 - taperFraction) / (size.Width * taperFraction);                        switch (taperCorner)                      {                          case TaperCorner.RightOrBottom:                              break;                            case TaperCorner.LeftOrTop:                              matrix.SkewY = size.Height * matrix.Persp0;                              break;                            case TaperCorner.Both:                              matrix.SkewY = (size.Height / 2) * matrix.Persp0;                              break;                      }                      break;                    case TaperSide.Bottom:                      matrix.ScaleY = 1 / taperFraction;                      matrix.Persp1 = (1 - taperFraction) / (size.Height * taperFraction);                        switch (taperCorner)                      {                          case TaperCorner.RightOrBottom:                              break;                            case TaperCorner.LeftOrTop:                              matrix.SkewX = size.Width * matrix.Persp1;                              break;                            case TaperCorner.Both:                              matrix.SkewX = (size.Width / 2) * matrix.Persp1;                              break;                      }                      break;              }
Missing Default,SkiaSharpFormsDemos.Transforms,TaperTransform,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\TaperTransform.cs,Make,The following switch statement is missing a default case: switch (taperCorner)                      {                          case TaperCorner.RightOrBottom:                              break;                            case TaperCorner.LeftOrTop:                              matrix.SkewY = size.Height * matrix.Persp0;                              matrix.TransY = size.Height * (1 - taperFraction);                              break;                            case TaperCorner.Both:                              matrix.SkewY = (size.Height / 2) * matrix.Persp0;                              matrix.TransY = size.Height * (1 - taperFraction) / 2;                              break;                      }
Missing Default,SkiaSharpFormsDemos.Transforms,TaperTransform,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\TaperTransform.cs,Make,The following switch statement is missing a default case: switch (taperCorner)                      {                          case TaperCorner.RightOrBottom:                              break;                            case TaperCorner.LeftOrTop:                              matrix.SkewX = size.Width * matrix.Persp1;                              matrix.TransX = size.Width * (1 - taperFraction);                              break;                            case TaperCorner.Both:                              matrix.SkewX = (size.Width / 2) * matrix.Persp1;                              matrix.TransX = size.Width * (1 - taperFraction) / 2;                              break;                      }
Missing Default,SkiaSharpFormsDemos.Transforms,TaperTransform,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\TaperTransform.cs,Make,The following switch statement is missing a default case: switch (taperCorner)                      {                          case TaperCorner.RightOrBottom:                              break;                            case TaperCorner.LeftOrTop:                              matrix.SkewY = size.Height * matrix.Persp0;                              break;                            case TaperCorner.Both:                              matrix.SkewY = (size.Height / 2) * matrix.Persp0;                              break;                      }
Missing Default,SkiaSharpFormsDemos.Transforms,TaperTransform,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\TaperTransform.cs,Make,The following switch statement is missing a default case: switch (taperCorner)                      {                          case TaperCorner.RightOrBottom:                              break;                            case TaperCorner.LeftOrTop:                              matrix.SkewX = size.Width * matrix.Persp1;                              break;                            case TaperCorner.Both:                              matrix.SkewX = (size.Width / 2) * matrix.Persp1;                              break;                      }
Missing Default,SkiaSharpFormsDemos.Transforms,TouchManipulationBitmap,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\TouchManipulationBitmap.cs,ProcessTouchEvent,The following switch statement is missing a default case: switch (type)              {                  case TouchActionType.Pressed:                      touchDictionary.Add(id' new TouchManipulationInfo                      {                          PreviousPoint = location'                          NewPoint = location                      });                      break;                    case TouchActionType.Moved:                      TouchManipulationInfo info = touchDictionary[id];                      info.NewPoint = location;                      Manipulate();                      info.PreviousPoint = info.NewPoint;                      break;                    case TouchActionType.Released:                      touchDictionary[id].NewPoint = location;                      Manipulate();                      touchDictionary.Remove(id);                      break;                    case TouchActionType.Cancelled:                      touchDictionary.Remove(id);                      break;              }
Missing Default,SkiaSharpFormsDemos.Transforms,TouchManipulationPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\SkiaSharpForms\Demos\Demos\SkiaSharpFormsDemos\Transforms\TouchManipulationPage.xaml.cs,OnTouchEffectAction,The following switch statement is missing a default case: switch (args.Type)              {                  case TouchActionType.Pressed:                      if (bitmap.HitTest(point))                      {                          touchIds.Add(args.Id);                          bitmap.ProcessTouchEvent(args.Id' args.Type' point);                          break;                      }                      break;                    case TouchActionType.Moved:                      if (touchIds.Contains(args.Id))                      {                          bitmap.ProcessTouchEvent(args.Id' args.Type' point);                          canvasView.InvalidateSurface();                      }                      break;                    case TouchActionType.Released:                  case TouchActionType.Cancelled:                      if (touchIds.Contains(args.Id))                      {                          bitmap.ProcessTouchEvent(args.Id' args.Type' point);                          touchIds.Remove(args.Id);                          canvasView.InvalidateSurface();                      }                      break;              }
