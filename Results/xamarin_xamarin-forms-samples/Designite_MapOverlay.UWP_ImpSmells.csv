Implementation smell,Namespace,Class,File,Method,Description
Long Statement,MapOverlay.UWP,CustomMapRenderer,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\CustomRenderers\Map\Circle\UWP\CustomMapRenderer.cs,GenerateCircleCoordinates,The length of the statement  "                double latitudeInRadians = Math.Asin(Math.Sin(latitude) * Math.Cos(distance) + Math.Cos(latitude) * Math.Sin(distance) * Math.Cos(angleInRadians)); " is 147.
Long Statement,MapOverlay.UWP,CustomMapRenderer,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\CustomRenderers\Map\Circle\UWP\CustomMapRenderer.cs,GenerateCircleCoordinates,The length of the statement  "                double longitudeInRadians = longitude + Math.Atan2(Math.Sin(angleInRadians) * Math.Sin(distance) * Math.Cos(latitude)' Math.Cos(distance) - Math.Sin(latitude) * Math.Sin(latitudeInRadians)); " is 190.
Magic Number,MapOverlay.UWP,CustomMapRenderer,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\CustomRenderers\Map\Circle\UWP\CustomMapRenderer.cs,OnElementChanged,The following statement contains a magic number: polygon.FillColor = Windows.UI.Color.FromArgb(128' 255' 0' 0);
Magic Number,MapOverlay.UWP,CustomMapRenderer,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\CustomRenderers\Map\Circle\UWP\CustomMapRenderer.cs,OnElementChanged,The following statement contains a magic number: polygon.FillColor = Windows.UI.Color.FromArgb(128' 255' 0' 0);
Magic Number,MapOverlay.UWP,CustomMapRenderer,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\CustomRenderers\Map\Circle\UWP\CustomMapRenderer.cs,OnElementChanged,The following statement contains a magic number: polygon.StrokeColor = Windows.UI.Color.FromArgb(128' 255' 0' 0);
Magic Number,MapOverlay.UWP,CustomMapRenderer,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\CustomRenderers\Map\Circle\UWP\CustomMapRenderer.cs,OnElementChanged,The following statement contains a magic number: polygon.StrokeColor = Windows.UI.Color.FromArgb(128' 255' 0' 0);
Magic Number,MapOverlay.UWP,CustomMapRenderer,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\CustomRenderers\Map\Circle\UWP\CustomMapRenderer.cs,OnElementChanged,The following statement contains a magic number: polygon.StrokeThickness = 5;
Magic Number,MapOverlay.UWP,CustomMapRenderer,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\CustomRenderers\Map\Circle\UWP\CustomMapRenderer.cs,GenerateCircleCoordinates,The following statement contains a magic number: angle <=360
Magic Number,MapOverlay.UWP,DoubleExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\CustomRenderers\Map\Circle\UWP\DoubleExtensions.cs,ToRadians,The following statement contains a magic number: return degrees * (Math.PI / 180);
Magic Number,MapOverlay.UWP,DoubleExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\CustomRenderers\Map\Circle\UWP\DoubleExtensions.cs,ToDegrees,The following statement contains a magic number: return radians * (180 / Math.PI);
