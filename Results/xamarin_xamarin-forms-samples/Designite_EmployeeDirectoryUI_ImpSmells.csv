Implementation smell,Namespace,Class,File,Method,Description
Magic Number,EmployeeDirectoryUI.CSharp,EmployeeView,C:\repos\xamarin_xamarin-forms-samples\EmployeeDirectory\EmployeeDirectoryUI\ViewsCSharp\EmployeeView.cs,EmployeeView,The following statement contains a magic number: var headerView = new StackLayout {  				Padding = new Thickness (10' 20' 10' 0)'  				HorizontalOptions = LayoutOptions.StartAndExpand'  				Orientation = StackOrientation.Horizontal'  				Children = { photo' optionsView }  			};
Magic Number,EmployeeDirectoryUI.CSharp,EmployeeView,C:\repos\xamarin_xamarin-forms-samples\EmployeeDirectory\EmployeeDirectoryUI\ViewsCSharp\EmployeeView.cs,EmployeeView,The following statement contains a magic number: var headerView = new StackLayout {  				Padding = new Thickness (10' 20' 10' 0)'  				HorizontalOptions = LayoutOptions.StartAndExpand'  				Orientation = StackOrientation.Horizontal'  				Children = { photo' optionsView }  			};
Magic Number,EmployeeDirectoryUI.CSharp,EmployeeView,C:\repos\xamarin_xamarin-forms-samples\EmployeeDirectory\EmployeeDirectoryUI\ViewsCSharp\EmployeeView.cs,EmployeeView,The following statement contains a magic number: var headerView = new StackLayout {  				Padding = new Thickness (10' 20' 10' 0)'  				HorizontalOptions = LayoutOptions.StartAndExpand'  				Orientation = StackOrientation.Horizontal'  				Children = { photo' optionsView }  			};
Magic Number,EmployeeDirectoryUI.CSharp,LoginView,C:\repos\xamarin_xamarin-forms-samples\EmployeeDirectory\EmployeeDirectoryUI\ViewsCSharp\LoginView.cs,LoginView,The following statement contains a magic number: if (Device.RuntimePlatform == Device.iOS) {  				grid.Children.Add (loginButton' 0' 0);  				grid.Children.Add (helpButton' 1' 0);    				Content = new StackLayout () {  					VerticalOptions = LayoutOptions.StartAndExpand'  					Padding = new Thickness (30)'  					Children = { logo' usernameEntry' passwordEntry' grid }  				};    				BackgroundImage = "login_box";    			} else {  				grid.Children.Add (logo' 0' 0);  				grid.Children.Add (helpButton' 1' 0);    				Content = new StackLayout () {  					VerticalOptions = LayoutOptions.Center'  					Padding = new Thickness (30)'  					Children = { grid' usernameEntry' passwordEntry' loginButton }'  				};  			}
Magic Number,EmployeeDirectoryUI.CSharp,LoginView,C:\repos\xamarin_xamarin-forms-samples\EmployeeDirectory\EmployeeDirectoryUI\ViewsCSharp\LoginView.cs,LoginView,The following statement contains a magic number: if (Device.RuntimePlatform == Device.iOS) {  				grid.Children.Add (loginButton' 0' 0);  				grid.Children.Add (helpButton' 1' 0);    				Content = new StackLayout () {  					VerticalOptions = LayoutOptions.StartAndExpand'  					Padding = new Thickness (30)'  					Children = { logo' usernameEntry' passwordEntry' grid }  				};    				BackgroundImage = "login_box";    			} else {  				grid.Children.Add (logo' 0' 0);  				grid.Children.Add (helpButton' 1' 0);    				Content = new StackLayout () {  					VerticalOptions = LayoutOptions.Center'  					Padding = new Thickness (30)'  					Children = { grid' usernameEntry' passwordEntry' loginButton }'  				};  			}
Magic Number,EmployeeDirectoryUI.CSharp,GroupHeaderTemplate,C:\repos\xamarin_xamarin-forms-samples\EmployeeDirectory\EmployeeDirectoryUI\ViewsCSharp\TableItems.cs,GroupHeaderTemplate,The following statement contains a magic number: View = new StackLayout {  				Padding = new Thickness (5' 0' 0' 0)'  				Children = { label }  			};
Magic Number,EmployeeDirectoryUI.CSharp,ListItemTemplate,C:\repos\xamarin_xamarin-forms-samples\EmployeeDirectory\EmployeeDirectoryUI\ViewsCSharp\TableItems.cs,ListItemTemplate,The following statement contains a magic number: var photo = new Image { HeightRequest = 44' WidthRequest = 44 };
Magic Number,EmployeeDirectoryUI.CSharp,ListItemTemplate,C:\repos\xamarin_xamarin-forms-samples\EmployeeDirectory\EmployeeDirectoryUI\ViewsCSharp\TableItems.cs,ListItemTemplate,The following statement contains a magic number: var photo = new Image { HeightRequest = 44' WidthRequest = 44 };
Magic Number,EmployeeDirectoryUI.CSharp,ListItemTemplate,C:\repos\xamarin_xamarin-forms-samples\EmployeeDirectory\EmployeeDirectoryUI\ViewsCSharp\TableItems.cs,ListItemTemplate,The following statement contains a magic number: var information = new StackLayout {  				Padding = new Thickness (5' 0' 0' 0)'  				VerticalOptions = LayoutOptions.StartAndExpand'  				Orientation = StackOrientation.Vertical'  				Children = { nameLabel' titleLabel }  			};
Magic Number,EmployeeDirectoryUI.CSharp,DetailsItemTemplate,C:\repos\xamarin_xamarin-forms-samples\EmployeeDirectory\EmployeeDirectoryUI\ViewsCSharp\TableItems.cs,DetailsItemTemplate,The following statement contains a magic number: View = new StackLayout {  				Padding = new Thickness (20' 0' 0' 0)'  				VerticalOptions = LayoutOptions.StartAndExpand'  				Orientation = StackOrientation.Horizontal'  				Children = { propertyNameLabel' propertyValueLabel }  			};
Missing Default,EmployeeDirectoryUI.CSharp,EmployeeView,C:\repos\xamarin_xamarin-forms-samples\EmployeeDirectory\EmployeeDirectoryUI\ViewsCSharp\EmployeeView.cs,OnItemSelected,The following switch statement is missing a default case: switch (property.Type) {  			case PersonViewModel.PropertyType.Email:  				App.PhoneFeatureService.Email (property.Value);  				break;  			case PersonViewModel.PropertyType.Twitter:  				App.PhoneFeatureService.Tweet (property.Value);  				break;  			case PersonViewModel.PropertyType.Url:  				App.PhoneFeatureService.Browse (property.Value);  				break;  			case PersonViewModel.PropertyType.Phone:  				App.PhoneFeatureService.Call (property.Value);  				break;  			case PersonViewModel.PropertyType.Address:  				App.PhoneFeatureService.Map (property.Value);  				break;  			}
Missing Default,EmployeeDirectoryUI.Xaml,EmployeeXaml,C:\repos\xamarin_xamarin-forms-samples\EmployeeDirectory\EmployeeDirectoryUI\ViewsXaml\EmployeeXaml.xaml.cs,OnItemSelected,The following switch statement is missing a default case: switch (property.Type) {  			case PersonViewModel.PropertyType.Email:  				App.PhoneFeatureService.Email (property.Value);  				break;  			case PersonViewModel.PropertyType.Twitter:  				App.PhoneFeatureService.Tweet (property.Value);  				break;  			case PersonViewModel.PropertyType.Url:  				App.PhoneFeatureService.Browse (property.Value);  				break;  			case PersonViewModel.PropertyType.Phone:  				App.PhoneFeatureService.Call (property.Value);  				break;  			case PersonViewModel.PropertyType.Address:  				App.PhoneFeatureService.Map (property.Value);  				break;  			}
