Implementation smell,Namespace,Class,File,Method,Description
Magic Number,ButtonDemos,BasicButtonClickPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\ButtonDemos\ButtonDemos\ButtonDemos\BasicButtonClickPage.xaml.cs,OnButtonClicked,The following statement contains a magic number: await label.RelRotateTo(360' 1000);
Magic Number,ButtonDemos,BasicButtonClickPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\ButtonDemos\ButtonDemos\ButtonDemos\BasicButtonClickPage.xaml.cs,OnButtonClicked,The following statement contains a magic number: await label.RelRotateTo(360' 1000);
Magic Number,ButtonDemos,CodeButtonClickPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\ButtonDemos\ButtonDemos\ButtonDemos\CodeButtonClickPage.cs,CodeButtonClickPage,The following statement contains a magic number: button.Clicked += async (sender' args) => await label.RelRotateTo(360' 1000);
Magic Number,ButtonDemos,CodeButtonClickPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\ButtonDemos\ButtonDemos\ButtonDemos\CodeButtonClickPage.cs,CodeButtonClickPage,The following statement contains a magic number: button.Clicked += async (sender' args) => await label.RelRotateTo(360' 1000);
Magic Number,ButtonDemos,CommandDemoViewModel,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\ButtonDemos\ButtonDemos\ButtonDemos\CommandDemoViewModel.cs,CommandDemoViewModel,The following statement contains a magic number: MultiplyBy2Command = new Command(() => Number *= 2);
Magic Number,ButtonDemos,CommandDemoViewModel,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\ButtonDemos\ButtonDemos\ButtonDemos\CommandDemoViewModel.cs,CommandDemoViewModel,The following statement contains a magic number: DivideBy2Command = new Command(() => Number /= 2);
Magic Number,ButtonDemos,NamedColor,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\ButtonDemos\ButtonDemos\ButtonDemos\NamedColor.cs,CreateNamedColor,The following statement contains a magic number: NamedColor namedColor = new NamedColor              {                  Name = name'                  FriendlyName = stringBuilder.ToString()'                  Color = color'                  RgbDisplay = String.Format("{0:X2}-{1:X2}-{2:X2}"'                                             (int)(255 * color.R)'                                             (int)(255 * color.G)'                                             (int)(255 * color.B))              };
Magic Number,ButtonDemos,NamedColor,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\ButtonDemos\ButtonDemos\ButtonDemos\NamedColor.cs,CreateNamedColor,The following statement contains a magic number: NamedColor namedColor = new NamedColor              {                  Name = name'                  FriendlyName = stringBuilder.ToString()'                  Color = color'                  RgbDisplay = String.Format("{0:X2}-{1:X2}-{2:X2}"'                                             (int)(255 * color.R)'                                             (int)(255 * color.G)'                                             (int)(255 * color.B))              };
Magic Number,ButtonDemos,NamedColor,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\ButtonDemos\ButtonDemos\ButtonDemos\NamedColor.cs,CreateNamedColor,The following statement contains a magic number: NamedColor namedColor = new NamedColor              {                  Name = name'                  FriendlyName = stringBuilder.ToString()'                  Color = color'                  RgbDisplay = String.Format("{0:X2}-{1:X2}-{2:X2}"'                                             (int)(255 * color.R)'                                             (int)(255 * color.G)'                                             (int)(255 * color.B))              };
Magic Number,ButtonDemos,PressAndReleaseButtonPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\ButtonDemos\ButtonDemos\ButtonDemos\PressAndReleaseButtonPage.xaml.cs,OnButtonPressed,The following statement contains a magic number: Device.StartTimer(TimeSpan.FromMilliseconds(16)' () =>              {                  label.Rotation = 360 * (stopwatch.Elapsed.TotalSeconds % 1);                    return animationInProgress;              });
Magic Number,ButtonDemos,PressAndReleaseButtonPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\UserInterface\ButtonDemos\ButtonDemos\ButtonDemos\PressAndReleaseButtonPage.xaml.cs,OnButtonPressed,The following statement contains a magic number: Device.StartTimer(TimeSpan.FromMilliseconds(16)' () =>              {                  label.Rotation = 360 * (stopwatch.Elapsed.TotalSeconds % 1);                    return animationInProgress;              });
