Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,MobileCRM.Shared.ViewModels,BaseViewModel,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\MobileCRM\MobileCRM.Shared\ViewModels\MasterViewModel.cs,SetProperty,The method has 5 parameters. Parameters: backingStore' value' propertyName' onChanged' onChanging
Long Statement,MobileCRM.Shared.Pages,MapPage<T>,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\MobileCRM\MobileCRM.Shared\Pages\MapPage.cs,MakeMap,The length of the statement  "            //var dict = pins.Zip(ViewModel.Models' (p' m)=>new KeyValuePair<Pin'T>(p' m)).ToDictionary(kvp => kvp.Key' kvp => kvp.Value); " is 126.
Long Statement,MobileCRM.Helpers,ConvertableConverter,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\MobileCRM\MobileCRM.Shared\Helpers\ConvertableConverter.cs,ConvertBack,The length of the statement  "            if (targetType == typeof(Decimal) && value is string && ((string)value).StartsWith(NumberFormatInfo.CurrentInfo.CurrencySymbol' true' culture)){ " is 144.
Long Statement,MobileCRM.Helpers,EditCellFactory,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\MobileCRM\MobileCRM.Shared\Helpers\EditCellFactory.cs,IntCell,The length of the statement  "            entryCell.SetBinding(EntryCell.TextProperty' new Binding(property.Name' mode: BindingMode.TwoWay' converter: DefaultConverter)); " is 128.
Long Statement,MobileCRM.Helpers,EditCellFactory,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\MobileCRM\MobileCRM.Shared\Helpers\EditCellFactory.cs,DecimalCell,The length of the statement  "            entryCell.SetBinding(EntryCell.TextProperty' new Binding(property.Name' mode: BindingMode.TwoWay' converter: DefaultConverter' converterParameter: currencyAttrib)); " is 164.
Long Statement,MobileCRM.Helpers,ViewCellFactory,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\MobileCRM\MobileCRM.Shared\Helpers\ViewCellFactory.cs,CellForProperty,The length of the statement  "                throw new ArgumentOutOfRangeException("info"' "No cell builder function found for type " + info.PropertyType.Name + ". Please register one with CellBuilderMap."); " is 162.
Long Statement,MobileCRM.Helpers,ViewCellFactory,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\MobileCRM\MobileCRM.Shared\Helpers\ViewCellFactory.cs,IntCell,The length of the statement  "            entryCell.SetBinding(EntryCell.TextProperty' new Binding(property.Name' mode: BindingMode.TwoWay' converter: DefaultConverter)); " is 128.
Long Statement,MobileCRM.Helpers,ViewCellFactory,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\MobileCRM\MobileCRM.Shared\Helpers\ViewCellFactory.cs,DecimalCell,The length of the statement  "            entryCell.SetBinding(EntryCell.TextProperty' new Binding(property.Name' mode: BindingMode.TwoWay' converter: DefaultConverter' converterParameter: currencyAttrib)); " is 164.
Long Statement,MobileCRM.Helpers,UserConverter,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\MobileCRM\MobileCRM.Shared\Helpers\UserConverter.cs,ConvertBack,The length of the statement  "            Debug.Assert(parameter != null' "The original user should be passed as a converterParameter in the binding definition."); " is 121.
Magic Number,MobileCRM.Services,GeoService,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\MobileCRM\MobileCRM.iOS\GeoService.cs,ValidateAddress,The following statement contains a magic number: task.Wait (TimeSpan.FromSeconds (10));
Magic Number,MobileCRM.Shared.Helpers,Color,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\MobileCRM\MobileCRM.Shared\Helpers\Color.cs,FromHex,The following statement contains a magic number: return new Color              {                  R = at(16) / 255.0'                  G = at(8) / 255.0'                  B = at(0) / 255.0              };
Magic Number,MobileCRM.Shared.Helpers,Color,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\MobileCRM\MobileCRM.Shared\Helpers\Color.cs,FromHex,The following statement contains a magic number: return new Color              {                  R = at(16) / 255.0'                  G = at(8) / 255.0'                  B = at(0) / 255.0              };
Magic Number,MobileCRM.Shared.Helpers,Color,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\MobileCRM\MobileCRM.Shared\Helpers\Color.cs,FromHex,The following statement contains a magic number: return new Color              {                  R = at(16) / 255.0'                  G = at(8) / 255.0'                  B = at(0) / 255.0              };
Magic Number,MobileCRM.Shared.Helpers,Color,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\MobileCRM\MobileCRM.Shared\Helpers\Color.cs,FromHex,The following statement contains a magic number: return new Color              {                  R = at(16) / 255.0'                  G = at(8) / 255.0'                  B = at(0) / 255.0              };
Magic Number,MobileCRM.Shared.Helpers,Color,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\MobileCRM\MobileCRM.Shared\Helpers\Color.cs,FromHex,The following statement contains a magic number: return new Color              {                  R = at(16) / 255.0'                  G = at(8) / 255.0'                  B = at(0) / 255.0              };
Magic Number,MobileCRM.Shared.Helpers,Color,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\MobileCRM\MobileCRM.Shared\Helpers\Color.cs,ToFormsColor,The following statement contains a magic number: return Xamarin.Forms.Color.FromRgb((int)(255 * R)' (int)(255 * G)' (int)(255 * B));
Magic Number,MobileCRM.Shared.Helpers,Color,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\MobileCRM\MobileCRM.Shared\Helpers\Color.cs,ToFormsColor,The following statement contains a magic number: return Xamarin.Forms.Color.FromRgb((int)(255 * R)' (int)(255 * G)' (int)(255 * B));
Magic Number,MobileCRM.Shared.Helpers,Color,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\MobileCRM\MobileCRM.Shared\Helpers\Color.cs,ToFormsColor,The following statement contains a magic number: return Xamarin.Forms.Color.FromRgb((int)(255 * R)' (int)(255 * G)' (int)(255 * B));
Magic Number,MobileCRM.Shared.Helpers,Haversine,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\MobileCRM\MobileCRM.Shared\Helpers\Haversine.cs,ToRad,The following statement contains a magic number: return input * (Math.PI / 180);
Magic Number,MobileCRM.Shared.Helpers,Haversine,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\MobileCRM\MobileCRM.Shared\Helpers\Haversine.cs,GetDistanceKM,The following statement contains a magic number: double a = Math.Pow(Math.Sin(dLat / 2)' 2) +                  Math.Cos(ToRad(point1.Latitude)) * Math.Cos(ToRad(point2.Latitude)) *                  Math.Pow(Math.Sin(dLon / 2)' 2);
Magic Number,MobileCRM.Shared.Helpers,Haversine,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\MobileCRM\MobileCRM.Shared\Helpers\Haversine.cs,GetDistanceKM,The following statement contains a magic number: double a = Math.Pow(Math.Sin(dLat / 2)' 2) +                  Math.Cos(ToRad(point1.Latitude)) * Math.Cos(ToRad(point2.Latitude)) *                  Math.Pow(Math.Sin(dLon / 2)' 2);
Magic Number,MobileCRM.Shared.Helpers,Haversine,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\MobileCRM\MobileCRM.Shared\Helpers\Haversine.cs,GetDistanceKM,The following statement contains a magic number: double a = Math.Pow(Math.Sin(dLat / 2)' 2) +                  Math.Cos(ToRad(point1.Latitude)) * Math.Cos(ToRad(point2.Latitude)) *                  Math.Pow(Math.Sin(dLon / 2)' 2);
Magic Number,MobileCRM.Shared.Helpers,Haversine,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\MobileCRM\MobileCRM.Shared\Helpers\Haversine.cs,GetDistanceKM,The following statement contains a magic number: double a = Math.Pow(Math.Sin(dLat / 2)' 2) +                  Math.Cos(ToRad(point1.Latitude)) * Math.Cos(ToRad(point2.Latitude)) *                  Math.Pow(Math.Sin(dLon / 2)' 2);
Magic Number,MobileCRM.Shared.Helpers,Haversine,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\MobileCRM\MobileCRM.Shared\Helpers\Haversine.cs,GetDistanceKM,The following statement contains a magic number: double c = 2 * Math.Atan2(Math.Sqrt(a)' Math.Sqrt(1 - a));
Magic Number,MobileCRM.Shared.Pages,LoginPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\MobileCRM\MobileCRM.Shared\Pages\LoginPage.cs,LoginPage,The following statement contains a magic number: var layout = new StackLayout { Padding = 10 };
Magic Number,MobileCRM.Shared.Pages,MapPage<T>,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\MobileCRM\MobileCRM.Shared\Pages\MapPage.cs,MapPage,The following statement contains a magic number: searchAddress.SearchButtonPressed += async (e' a) =>              {                  var addressQuery = searchAddress.Text;                  searchAddress.Text = "";                  searchAddress.Unfocus();                    var positions = (await (new Geocoder()).GetPositionsForAddressAsync(addressQuery)).ToList();                  if (!positions.Any())                      return;                    var position = positions.First();                  map.MoveToRegion(MapSpan.FromCenterAndRadius(position'                          Distance.FromMiles(0.1)));                  map.Pins.Add(new Pin                      {                          Label = addressQuery'                          Position = position'                          Address = addressQuery                      });              };
Magic Number,MobileCRM.Shared.Pages,MapPage<T>,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\MobileCRM\MobileCRM.Shared\Pages\MapPage.cs,MapPage,The following statement contains a magic number: map.HeightRequest = 100;
Magic Number,MobileCRM.Shared.Pages,MapPage<T>,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\MobileCRM\MobileCRM.Shared\Pages\MapPage.cs,MapPage,The following statement contains a magic number: map.WidthRequest = 960;
Magic Number,MobileCRM.Shared.Pages,MenuPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\MobileCRM\MobileCRM.Shared\Pages\MenuPage.cs,MenuPage,The following statement contains a magic number: var label = new ContentView              {                  Padding = new Thickness(10' 36' 0' 5)'                  Content = new Xamarin.Forms.Label                  {                      TextColor = Color.FromHex("AAAAAA")'                      Text = "MENU"'                  }              };
Magic Number,MobileCRM.Shared.Pages,MenuPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\MobileCRM\MobileCRM.Shared\Pages\MenuPage.cs,MenuPage,The following statement contains a magic number: var label = new ContentView              {                  Padding = new Thickness(10' 36' 0' 5)'                  Content = new Xamarin.Forms.Label                  {                      TextColor = Color.FromHex("AAAAAA")'                      Text = "MENU"'                  }              };
Magic Number,MobileCRM.Shared.Pages,MenuPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\MobileCRM\MobileCRM.Shared\Pages\MenuPage.cs,MenuPage,The following statement contains a magic number: var label = new ContentView              {                  Padding = new Thickness(10' 36' 0' 5)'                  Content = new Xamarin.Forms.Label                  {                      TextColor = Color.FromHex("AAAAAA")'                      Text = "MENU"'                  }              };
Magic Number,MobileCRM.Helpers,EditCellFactory,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\MobileCRM\MobileCRM.Shared\Helpers\EditCellFactory.cs,AddressCell,The following statement contains a magic number: var viewCell = new ViewCell               {                  Height = 150D              };
Magic Number,MobileCRM.Helpers,EditCellFactory,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\MobileCRM\MobileCRM.Shared\Helpers\EditCellFactory.cs,AddressCell,The following statement contains a magic number: var map = new Map(MapSpan.FromCenterAndRadius(pin.Position' Distance.FromMiles(0.1D)))              {                  IsShowingUser = false'                  InputTransparent = false'              };
Magic Number,MobileCRM.Helpers,EditCellFactory,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\MobileCRM\MobileCRM.Shared\Helpers\EditCellFactory.cs,AddressCell,The following statement contains a magic number: pin.PropertyChanged  += (sender' e) => {                  Console.WriteLine("Pin." + e.PropertyName + " Changed");                  map.MoveToRegion(MapSpan.FromCenterAndRadius(pin.Position' Distance.FromMiles(0.1D)));              };
Magic Number,MobileCRM.Helpers,ViewCellFactory,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\MobileCRM\MobileCRM.Shared\Helpers\ViewCellFactory.cs,AddressCell,The following statement contains a magic number: var viewCell = new ViewCell               {                  Height = 150D              };
Magic Number,MobileCRM.Helpers,ViewCellFactory,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\MobileCRM\MobileCRM.Shared\Helpers\ViewCellFactory.cs,AddressCell,The following statement contains a magic number: var map = new Map(MapSpan.FromCenterAndRadius(pin.Position' Distance.FromMiles(0.1D)))              {                  IsShowingUser = false'                  InputTransparent = true'                  Pins = { pin }              };
Missing Default,MobileCRM.Shared.Pages,MenuPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-samples\MobileCRM\MobileCRM.Shared\Pages\MenuPage.cs,MenuPage,The following switch statement is missing a default case: switch (Device.RuntimePlatform)              {                  case Device.iOS:                      lbl.FontSize = Device.GetNamedSize(NamedSize.Micro' lbl);                      break;                  case Device.Android:                      lbl.FontSize = Device.GetNamedSize(NamedSize.Medium' lbl);                      break;              }
