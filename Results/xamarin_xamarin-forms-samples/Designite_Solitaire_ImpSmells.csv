Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Solitaire,DisplayExtensions,C:\repos\xamarin_xamarin-forms-samples\SolitaireEncryption\Solitaire\DisplayExtensions.cs,Pad5,The following statement contains a magic number: var isExact = input.Length % 5 == 0;
Magic Number,Solitaire,DisplayExtensions,C:\repos\xamarin_xamarin-forms-samples\SolitaireEncryption\Solitaire\DisplayExtensions.cs,Pad5,The following statement contains a magic number: if (!isExact) {  			//	throw new ArgumentException ("expect input string to be multiples of 5 chars");  				input = input.PadRight (input.Length + (5 - input.Length % 5)' 'X');  			}
Magic Number,Solitaire,DisplayExtensions,C:\repos\xamarin_xamarin-forms-samples\SolitaireEncryption\Solitaire\DisplayExtensions.cs,Pad5,The following statement contains a magic number: if (!isExact) {  			//	throw new ArgumentException ("expect input string to be multiples of 5 chars");  				input = input.PadRight (input.Length + (5 - input.Length % 5)' 'X');  			}
Magic Number,Solitaire,DisplayExtensions,C:\repos\xamarin_xamarin-forms-samples\SolitaireEncryption\Solitaire\DisplayExtensions.cs,Pad5,The following statement contains a magic number: var chunks = input.Length / 5;
Magic Number,Solitaire,DisplayExtensions,C:\repos\xamarin_xamarin-forms-samples\SolitaireEncryption\Solitaire\DisplayExtensions.cs,Pad5,The following statement contains a magic number: for (var chunk = 0; chunk < chunks; chunk++) {  				output.Append (input.Substring (chunk * 5' 5) + ' ');  			}
Magic Number,Solitaire,DisplayExtensions,C:\repos\xamarin_xamarin-forms-samples\SolitaireEncryption\Solitaire\DisplayExtensions.cs,Pad5,The following statement contains a magic number: for (var chunk = 0; chunk < chunks; chunk++) {  				output.Append (input.Substring (chunk * 5' 5) + ' ');  			}
Magic Number,ConceptDevelopment.Net.Collections,Deck,C:\repos\xamarin_xamarin-forms-samples\SolitaireEncryption\Solitaire\Algorithm\Deck.cs,Deck,The following statement contains a magic number: _numCards = 54;
Magic Number,ConceptDevelopment.Net.Collections,Deck,C:\repos\xamarin_xamarin-forms-samples\SolitaireEncryption\Solitaire\Algorithm\Deck.cs,Deck,The following statement contains a magic number: for (int suits = 3; suits >= 0; suits--) {  				for (int faces = 12; faces >= 0; faces--){  					_cardArray[(suits * 13) + faces] = new Card(suits' faces + 1);  				}  			}
Magic Number,ConceptDevelopment.Net.Collections,Deck,C:\repos\xamarin_xamarin-forms-samples\SolitaireEncryption\Solitaire\Algorithm\Deck.cs,Deck,The following statement contains a magic number: for (int suits = 3; suits >= 0; suits--) {  				for (int faces = 12; faces >= 0; faces--){  					_cardArray[(suits * 13) + faces] = new Card(suits' faces + 1);  				}  			}
Magic Number,ConceptDevelopment.Net.Collections,Deck,C:\repos\xamarin_xamarin-forms-samples\SolitaireEncryption\Solitaire\Algorithm\Deck.cs,Deck,The following statement contains a magic number: for (int suits = 3; suits >= 0; suits--) {  				for (int faces = 12; faces >= 0; faces--){  					_cardArray[(suits * 13) + faces] = new Card(suits' faces + 1);  				}  			}
Magic Number,ConceptDevelopment.Net.Collections,Deck,C:\repos\xamarin_xamarin-forms-samples\SolitaireEncryption\Solitaire\Algorithm\Deck.cs,Deck,The following statement contains a magic number: _cardArray[52] = new Card(CardSuit.Joker' CardFace.Ace);
Magic Number,ConceptDevelopment.Net.Collections,Deck,C:\repos\xamarin_xamarin-forms-samples\SolitaireEncryption\Solitaire\Algorithm\Deck.cs,Deck,The following statement contains a magic number: _cardArray[53] = new Card(CardSuit.Joker' CardFace.Two);
Magic Number,ConceptDevelopment.Net.Collections,Deck,C:\repos\xamarin_xamarin-forms-samples\SolitaireEncryption\Solitaire\Algorithm\Deck.cs,Deck,The following statement contains a magic number: _numCards = 54;
Magic Number,ConceptDevelopment.Net.Collections,Deck,C:\repos\xamarin_xamarin-forms-samples\SolitaireEncryption\Solitaire\Algorithm\Deck.cs,Deck,The following statement contains a magic number: for (int suits = 0; suits <= 3; suits++) {  				for (int faces = 0; faces <= 12; faces++){  					_cardArray[(suits * 13) + faces] = new Card(suits' faces + 1);  				}  			}
Magic Number,ConceptDevelopment.Net.Collections,Deck,C:\repos\xamarin_xamarin-forms-samples\SolitaireEncryption\Solitaire\Algorithm\Deck.cs,Deck,The following statement contains a magic number: for (int suits = 0; suits <= 3; suits++) {  				for (int faces = 0; faces <= 12; faces++){  					_cardArray[(suits * 13) + faces] = new Card(suits' faces + 1);  				}  			}
Magic Number,ConceptDevelopment.Net.Collections,Deck,C:\repos\xamarin_xamarin-forms-samples\SolitaireEncryption\Solitaire\Algorithm\Deck.cs,Deck,The following statement contains a magic number: for (int suits = 0; suits <= 3; suits++) {  				for (int faces = 0; faces <= 12; faces++){  					_cardArray[(suits * 13) + faces] = new Card(suits' faces + 1);  				}  			}
Magic Number,ConceptDevelopment.Net.Collections,Deck,C:\repos\xamarin_xamarin-forms-samples\SolitaireEncryption\Solitaire\Algorithm\Deck.cs,Deck,The following statement contains a magic number: _cardArray[52] = new Card(CardSuit.Joker' CardFace.Ace);
Magic Number,ConceptDevelopment.Net.Collections,Deck,C:\repos\xamarin_xamarin-forms-samples\SolitaireEncryption\Solitaire\Algorithm\Deck.cs,Deck,The following statement contains a magic number: _cardArray[53] = new Card(CardSuit.Joker' CardFace.Two);
Magic Number,ConceptDevelopment.Net.Collections,Deck,C:\repos\xamarin_xamarin-forms-samples\SolitaireEncryption\Solitaire\Algorithm\Deck.cs,Shuffle,The following statement contains a magic number: for (int i = 0; i < _cardArray.GetUpperBound(0); i++) {  				int swap = rand.Next (0' 53);   				Card buffer = _cardArray[i];  				_cardArray[i] = _cardArray[swap];  				_cardArray[swap] = buffer;  			}
Magic Number,ConceptDevelopment.Net.Collections,Deck,C:\repos\xamarin_xamarin-forms-samples\SolitaireEncryption\Solitaire\Algorithm\Deck.cs,MoveDown,The following statement contains a magic number: while (count > 0) {  				MoveDown(position);  				if (position == _numCards){  					position = 2; // MoveDown(_numCards) puts the Card in position 1  					// so must skip this and go to position 2.  				} else {  					position++;  				}  				count--;  			}
Magic Number,ConceptDevelopment.Net.Collections,Deck,C:\repos\xamarin_xamarin-forms-samples\SolitaireEncryption\Solitaire\Algorithm\Deck.cs,ToHtml,The following statement contains a magic number: for (int i = 0; i < _cardArray.Length ; i++) {  				sReturn += _cardArray[i].ToHtml() + " ";  				sReturn += ((i+1) % 6 == 0 ? "<br>" : "");    			}
Magic Number,ConceptDevelopment.Net.Collections,Deck,C:\repos\xamarin_xamarin-forms-samples\SolitaireEncryption\Solitaire\Algorithm\Deck.cs,ToString,The following statement contains a magic number: for (int i = 0; i < _cardArray.Length ; i++) {  				sReturn += _cardArray[i].ToString() + " ";  				sReturn += ((i+1) % 13 == 0 ? "\n" : "");  			}
Magic Number,ConceptDevelopment.Net.Cryptography,PontifexSolitaire,C:\repos\xamarin_xamarin-forms-samples\SolitaireEncryption\Solitaire\Algorithm\PontifexSolitaire.cs,NextKeyStream,The following statement contains a magic number: _keyDeck.MoveDown(_keyDeck.FindTop(JokerB)' 2);
Magic Number,ConceptDevelopment.Net.Cryptography,PontifexSolitaire,C:\repos\xamarin_xamarin-forms-samples\SolitaireEncryption\Solitaire\Algorithm\PontifexSolitaire.cs,NextKeyStream,The following statement contains a magic number: if (result == 53 | result == 54) {  				_output += " (" + result + ")";  				return NextKeyStream();  			} else if (result > 26) {  				_output += " " + result;  				result = result - 26;  			}
Magic Number,ConceptDevelopment.Net.Cryptography,PontifexSolitaire,C:\repos\xamarin_xamarin-forms-samples\SolitaireEncryption\Solitaire\Algorithm\PontifexSolitaire.cs,NextKeyStream,The following statement contains a magic number: if (result == 53 | result == 54) {  				_output += " (" + result + ")";  				return NextKeyStream();  			} else if (result > 26) {  				_output += " " + result;  				result = result - 26;  			}
Magic Number,ConceptDevelopment.Net.Cryptography,PontifexSolitaire,C:\repos\xamarin_xamarin-forms-samples\SolitaireEncryption\Solitaire\Algorithm\PontifexSolitaire.cs,NextKeyStream,The following statement contains a magic number: if (result == 53 | result == 54) {  				_output += " (" + result + ")";  				return NextKeyStream();  			} else if (result > 26) {  				_output += " " + result;  				result = result - 26;  			}
Magic Number,ConceptDevelopment.Net.Cryptography,PontifexSolitaire,C:\repos\xamarin_xamarin-forms-samples\SolitaireEncryption\Solitaire\Algorithm\PontifexSolitaire.cs,NextKeyStream,The following statement contains a magic number: if (result == 53 | result == 54) {  				_output += " (" + result + ")";  				return NextKeyStream();  			} else if (result > 26) {  				_output += " " + result;  				result = result - 26;  			}
Magic Number,ConceptDevelopment.Net.Cryptography,PontifexSolitaire,C:\repos\xamarin_xamarin-forms-samples\SolitaireEncryption\Solitaire\Algorithm\PontifexSolitaire.cs,Decrypt,The following statement contains a magic number: for (int i = 0; i < ciphertext.Length; i++) {  				int plain = GetCharValue(ciphertextchar[i]);  				if (plain > 0) {  					plain -= NextKeyStream();  					if (plain < 1) plain += 26;  					buffer += (GetValueChar(plain));  				} // if (plain > 0)  			}
Magic Number,ConceptDevelopment.Net.Cryptography,PontifexSolitaire,C:\repos\xamarin_xamarin-forms-samples\SolitaireEncryption\Solitaire\Algorithm\PontifexSolitaire.cs,Encrypt,The following statement contains a magic number: for (int i = 0; i < plaintext.Length; i++) {  				int cipher = GetCharValue(plaintextchar[i]) ;  				if (cipher > 0) {  					cipher += NextKeyStream();  					if (cipher > 26) cipher -= 26;  					buffer += (GetValueChar(cipher));  				} // if (cipher > 0)  			}
Magic Number,ConceptDevelopment.Net.Cryptography,PontifexSolitaire,C:\repos\xamarin_xamarin-forms-samples\SolitaireEncryption\Solitaire\Algorithm\PontifexSolitaire.cs,Encrypt,The following statement contains a magic number: for (int i = 0; i < plaintext.Length; i++) {  				int cipher = GetCharValue(plaintextchar[i]) ;  				if (cipher > 0) {  					cipher += NextKeyStream();  					if (cipher > 26) cipher -= 26;  					buffer += (GetValueChar(cipher));  				} // if (cipher > 0)  			}
Magic Number,ConceptDevelopment.Net.Cryptography,PontifexSolitaire,C:\repos\xamarin_xamarin-forms-samples\SolitaireEncryption\Solitaire\Algorithm\PontifexSolitaire.cs,Encrypt,The following statement contains a magic number: if (padded) {  				while (buffer.Length % 5 != 0) {  					buffer += (Encrypt("X"' false));  				} // while buffer  			}
Magic Number,ConceptDevelopment.Net.Cryptography,PontifexSolitaire,C:\repos\xamarin_xamarin-forms-samples\SolitaireEncryption\Solitaire\Algorithm\PontifexSolitaire.cs,GetValueChar,The following statement contains a magic number: if (v >= 1 && v <= 26) {  				return (char)((v - 1) + (int)'A');  			} else {  				return '*';  			}
