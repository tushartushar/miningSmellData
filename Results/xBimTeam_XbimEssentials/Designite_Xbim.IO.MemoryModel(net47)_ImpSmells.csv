Implementation smell,Namespace,Class,File,Method,Description
Long Method,Xbim.IO.Xml,IfcXmlWriter3,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\IfcXmlWriter3.cs,WriteProperty,The method has 219 lines of code.
Long Method,Xbim.IO.Xml,XbimXmlReader3,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlReader3.cs,StartElement,The method has 152 lines of code.
Long Method,Xbim.IO.Xml,XbimXmlReader3,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlReader3.cs,EndElement,The method has 192 lines of code.
Long Method,Xbim.IO.Xml,XbimXmlReader3,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlReader3.cs,Read,The method has 146 lines of code.
Long Method,Xbim.IO.Xml,XbimXmlReader4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlReader4.cs,SetPropertyFromElement,The method has 184 lines of code.
Long Method,Xbim.IO.Xml,XbimXmlWriter4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlWriter4.cs,WriteProperty,The method has 159 lines of code.
Complex Method,Xbim.IO.Memory,MemoryModel,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\MemoryModel.cs,GetSchemaVersion,Cyclomatic complexity of the method is 11
Complex Method,Xbim.IO.Memory,MemoryModel,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\MemoryModel.cs,LoadXml,Cyclomatic complexity of the method is 8
Complex Method,Xbim.IO.Memory,MemoryModel,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\MemoryModel.cs,CalculateModelFactors,Cyclomatic complexity of the method is 17
Complex Method,Xbim.IO.Xml,IfcXmlWriter3,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\IfcXmlWriter3.cs,WriteProperty,Cyclomatic complexity of the method is 39
Complex Method,Xbim.IO.Xml,XbimXmlReader3,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlReader3.cs,StartElement,Cyclomatic complexity of the method is 33
Complex Method,Xbim.IO.Xml,XbimXmlReader3,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlReader3.cs,EndElement,Cyclomatic complexity of the method is 35
Complex Method,Xbim.IO.Xml,XbimXmlReader3,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlReader3.cs,SetValue,Cyclomatic complexity of the method is 14
Complex Method,Xbim.IO.Xml,XbimXmlReader3,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlReader3.cs,Read,Cyclomatic complexity of the method is 24
Complex Method,Xbim.IO.Xml,XbimXmlReader4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlReader4.cs,Read,Cyclomatic complexity of the method is 11
Complex Method,Xbim.IO.Xml,XbimXmlReader4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlReader4.cs,ReadEntity,Cyclomatic complexity of the method is 17
Complex Method,Xbim.IO.Xml,XbimXmlReader4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlReader4.cs,InitPropertyValue,Cyclomatic complexity of the method is 8
Complex Method,Xbim.IO.Xml,XbimXmlReader4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlReader4.cs,SetPropertyFromElement,Cyclomatic complexity of the method is 35
Complex Method,Xbim.IO.Xml,XbimXmlReader4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlReader4.cs,SetPropertyFromString,Cyclomatic complexity of the method is 16
Complex Method,Xbim.IO.Xml,XbimXmlReader4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlReader4.cs,ReadHeader,Cyclomatic complexity of the method is 11
Complex Method,Xbim.IO.Xml,XbimXmlReader4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlReader4.cs,ReadSchemaVersion,Cyclomatic complexity of the method is 9
Complex Method,Xbim.IO.Xml,XbimXmlWriter4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlWriter4.cs,WriteHeader,Cyclomatic complexity of the method is 9
Complex Method,Xbim.IO.Xml,XbimXmlWriter4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlWriter4.cs,WriteProperty,Cyclomatic complexity of the method is 27
Complex Method,Xbim.IO.Xml,XmlMetaProperty,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XmlMetaProperty.cs,SetAttributeValueHandler,Cyclomatic complexity of the method is 9
Long Parameter List,Xbim.IO,BaseModelProvider,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\BaseModelProvider.cs,Open,The method has 7 parameters. Parameters: data' dataType' schema' modelType' accessMode' progDelegate' codePageOverride
Long Parameter List,Xbim.IO,BaseModelProvider,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\BaseModelProvider.cs,Open,The method has 6 parameters. Parameters: path' schema' ifcDatabaseSizeThreshHold' progDelegate' accessMode' codePageOverride
Long Parameter List,Xbim.IO.Memory,MemoryModel,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\MemoryModel.cs,OpenReadStep21,The method has 5 parameters. Parameters: stream' logger' progressDel' ignoreTypes' allowMissingReferences
Long Parameter List,Xbim.IO.Memory,MemoryModel,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\MemoryModel.cs,SaveAsXml,The method has 5 parameters. Parameters: stream' xmlSettings' xbimSettings' configuration' progress
Long Parameter List,Xbim.IO.Memory,MemoryModel,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\MemoryModel.cs,SaveAsXMLZip,The method has 5 parameters. Parameters: stream' xmlSettings' xbimSettings' configuration' progress
Long Parameter List,Xbim.IO.Memory,MemoryModelProvider,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\MemoryModelProvider.cs,Open,The method has 7 parameters. Parameters: stream' dataType' schema' modelType' accessMode' progDelegate' codePageOverride
Long Parameter List,Xbim.IO.Memory,MemoryModelProvider,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\MemoryModelProvider.cs,Open,The method has 6 parameters. Parameters: path' schemaVersion' ifcDatabaseSizeThreshHold' progDelegate' accessMode' codePageOverride
Long Parameter List,Xbim.IO.Xml,IfcXmlWriter3,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\IfcXmlWriter3.cs,WriteInHeader,The method has 5 parameters. Parameters: output' prefix' localName' ns' value
Long Parameter List,Xbim.IO.Xml,IfcXmlWriter3,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\IfcXmlWriter3.cs,WriteProperty,The method has 7 parameters. Parameters: propName' propType' propVal' entity' output' pos' attr
Long Parameter List,Xbim.IO.Xml,XbimXmlReader4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlReader4.cs,SetPropertyFromElement,The method has 5 parameters. Parameters: property' entity' input' pos' valueType
Long Parameter List,Xbim.IO.Xml,XbimXmlReader4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlReader4.cs,SetPropertyFromString,The method has 5 parameters. Parameters: property' entity' value' pos' valueType
Long Parameter List,Xbim.IO.Xml,XbimXmlWriter4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlWriter4.cs,WriteEntity,The method has 5 parameters. Parameters: entity' output' onlyOnce' pos' name
Long Parameter List,Xbim.IO.Xml,XbimXmlWriter4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlWriter4.cs,WriteProperty,The method has 7 parameters. Parameters: propName' propType' propVal' output' pos' attr' wrap
Long Identifier,Xbim.IO.Memory,MemoryModel,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\MemoryModel.cs,CalculateModelFactors,The length of the parameter angleToRadiansConversionFactor is 30.
Long Identifier,Xbim.IO.Memory,MemoryModel,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\MemoryModel.cs,CalculateModelFactors,The length of the parameter lengthToMetresConversionFactor is 30.
Long Identifier,Xbim.IO.Memory,MemoryModel,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\MemoryModel.cs,SetWorkArounds,The length of the parameter surfaceOfLinearExtrusionVersion is 31.
Long Identifier,Xbim.IO.Xml.BsConf,attribute,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\BsConf\cnf.designer.cs,,The length of the parameter aggregatecontentFieldSpecified is 30.
Long Identifier,Xbim.IO.Xml.BsConf,schema,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\BsConf\cnf.designer.cs,,The length of the parameter elementFormDefaultFieldSpecified is 32.
Long Identifier,Xbim.IO.Xml.BsConf,schema,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\BsConf\cnf.designer.cs,,The length of the parameter attributeFormDefaultFieldSpecified is 34.
Long Statement,Xbim.IO.Memory,MemoryModel,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\MemoryModel.cs,LoadZip,The length of the statement  "                var zipContent = zipStream.Entries.FirstOrDefault(z => z.Name.IsStepTextFile() || z.Name.IsStepXmlFile()); //ignores xbim and zip files " is 135.
Long Statement,Xbim.IO.Memory,MemoryModel,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\MemoryModel.cs,CalculateModelFactors,The length of the statement  "            foreach (var gc in gcs.Where(g => !(g is IIfcGeometricRepresentationSubContext)).Where(gc => gc.ContextType.HasValue && string.Compare(gc.ContextType.Value' "model"' true) == 0).Where(gc => gc.Precision.HasValue)) " is 213.
Long Statement,Xbim.IO.Memory,MemoryModelProvider,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\MemoryModelProvider.cs,Open,The length of the statement  "                    if (storageType.HasFlag(StorageType.IfcZip) || storageType.HasFlag(StorageType.Zip) || storageType.HasFlag(StorageType.StpZip)) " is 127.
Long Statement,Xbim.IO.Xml.BsConf,configuration,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\BsConf\cnf.custom.cs,GetEntity,The length of the statement  "            return Items?.OfType<entity>().FirstOrDefault(e => string.Compare(e.EntityName' name' StringComparison.OrdinalIgnoreCase) == 0); " is 128.
Long Statement,Xbim.IO.Xml,IfcXmlWriter3,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\IfcXmlWriter3.cs,WriteProperty,The length of the statement  "                if (typeof(IExpressEnumerable).GetTypeInfo().IsAssignableFrom(propType) && attr.State == EntityAttributeState.Mandatory) " is 120.
Long Statement,Xbim.IO.Xml,IfcXmlWriter3,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\IfcXmlWriter3.cs,WriteProperty,The length of the statement  "            else if (propType.GetTypeInfo().IsValueType || propType == typeof(string) || propType == typeof(byte[])) //it might be an in-built value type double' string etc " is 160.
Long Statement,Xbim.IO.Xml,IfcXmlWriter3,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\IfcXmlWriter3.cs,WriteProperty,The length of the statement  "            //    throw new Exception(string.Format("Entity of type {0} has illegal property {1} of type {2}"' entity.GetType().ToString()' propType.Name' propType.Name)); " is 159.
Long Statement,Xbim.IO.Xml,XbimXmlReader3,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlReader3.cs,StartElement,The length of the statement  "                //if we have a completely empty element that is not a ref we need to make sure it is written to the database as EndElement will not be called " is 141.
Long Statement,Xbim.IO.Xml,XbimXmlReader3,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlReader3.cs,StartElement,The length of the statement  "                    //if (!(_currentNode is XmlUosCollection) && _currentNode is XmlCollectionProperty && !(_currentNode.Parent is XmlUosCollection)) " is 129.
Long Statement,Xbim.IO.Xml,XbimXmlReader3,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlReader3.cs,StartElement,The length of the statement  "                else if (!(_currentNode is XmlUosCollection) && _currentNode is XmlCollectionProperty && !(_currentNode.Parent is XmlUosCollection)) " is 132.
Long Statement,Xbim.IO.Xml,XbimXmlReader3,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlReader3.cs,IsIfcType,The length of the statement  "                if (elementName.Contains("-wrapper") && elementName.StartsWith(_expressNamespace) == false) // we have an inline type definition " is 128.
Long Statement,Xbim.IO.Xml,XbimXmlReader3,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlReader3.cs,GetId,The length of the statement  "            else if (IsIfcEntity(input.LocalName' out expressType) && !typeof(IExpressValueType).GetTypeInfo().IsAssignableFrom(expressType.Type)) //its a type with no identity' make one " is 174.
Long Statement,Xbim.IO.Xml,XbimXmlReader3,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlReader3.cs,EndElement,The length of the statement  "                        //if the generic type of the collection is different from the actualEntityType then we need to create an entity and call Ifc Parse " is 130.
Long Statement,Xbim.IO.Xml,XbimXmlReader3,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlReader3.cs,SetValue,The length of the statement  "                            if (typeof(IExpressValueType).GetTypeInfo().IsAssignableFrom(t) && !(typeof(IExpressComplexType).GetTypeInfo().IsAssignableFrom(t) )) " is 133.
Long Statement,Xbim.IO.Xml,XbimXmlReader3,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlReader3.cs,SetValue,The length of the statement  "                                    if(String.Compare(input.Value' "unknown"' StringComparison.OrdinalIgnoreCase) != 0) //do nothing with IfcLogicals that are undefined " is 132.
Long Statement,Xbim.IO.Xml,XbimXmlReader3,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlReader3.cs,Read,The length of the statement  "            //   using (var xmlInStream = new StreamReader(inputStream' Encoding.GetEncoding("ISO-8859-9"))) //this is a work around to ensure latin character sets are read " is 160.
Long Statement,Xbim.IO.Xml,XbimXmlReader3,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlReader3.cs,Read,The length of the statement  "                //IFC2x3 was the first IFC mapped to XML so IFC version wasn't explicit. So we need to put it in to keep the data complete " is 122.
Long Statement,Xbim.IO.Xml,XmlProperty,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlReader3.cs,SetValue,The length of the statement  "                if (parserType == StepParserType.Boolean && String.Compare(val' "unknown"' StringComparison.OrdinalIgnoreCase) == 0) //do nothing with IfcLogicals that are undefined " is 165.
Long Statement,Xbim.IO.Xml,XbimXmlReader4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlReader4.cs,Read,The length of the statement  "            //   using (var xmlInStream = new StreamReader(inputStream' Encoding.GetEncoding("ISO-8859-9"))) //this is a work around to ensure Latin character sets are read " is 160.
Long Statement,Xbim.IO.Xml,XbimXmlReader4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlReader4.cs,ReadSchemaInHeader,The length of the statement  "                    if (input.Value == "http://www.buildingsmart-tech.org/ifcXML/MVD4/IFC4" || input.Value == "http://www.buildingsmart-tech.org/ifcXML/IFC4/Add1") " is 143.
Long Statement,Xbim.IO.Xml,XbimXmlReader4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlReader4.cs,ReadEntity,The length of the statement  "                        Logger.LogWarning("Reference to element {0}' ref='{1}' is not empty. This is a wrong practise."' entity.ExpressType.Name' id); " is 126.
Long Statement,Xbim.IO.Xml,XbimXmlReader4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlReader4.cs,SetPropertyFromElement,The length of the statement  "                if (type == property.PropertyInfo.PropertyType && !(cType != null && typeof(IPersistEntity).GetTypeInfo().IsAssignableFrom(cType))) " is 131.
Long Statement,Xbim.IO.Xml,XbimXmlReader4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlReader4.cs,SetPropertyFromElement,The length of the statement  "                    (typeof(IEnumerable).IsAssignableFrom(type) && property.EntityAttribute.MaxCardinality != null && property.EntityAttribute.MaxCardinality[0] == 1) || " is 149.
Long Statement,Xbim.IO.Xml,XbimXmlReader4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlReader4.cs,SetPropertyFromString,The length of the statement  "                    var min = property.EntityAttribute.MaxCardinality != null ? property.EntityAttribute.MaxCardinality.LastOrDefault() : 0; " is 120.
Long Statement,Xbim.IO.Xml,XbimXmlReader4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlReader4.cs,SetPropertyFromString,The length of the statement  "                    var max = property.EntityAttribute.MinCardinality != null ? property.EntityAttribute.MinCardinality.LastOrDefault() : -1; " is 121.
Long Statement,Xbim.IO.Xml,XbimXmlReader4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlReader4.cs,GetId,The length of the statement  "            else if (!typeof(IExpressValueType).GetTypeInfo().IsAssignableFrom(expressType.Type)) //its a type with no identity' make one " is 125.
Long Statement,Xbim.IO.Xml,XbimXmlReader4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlReader4.cs,ReadSchemaVersion,The length of the statement  "                    if (string.Equals(input.Value' "http://www.buildingsmart-tech.org/ifcXML/MVD4/IFC"' StringComparison.OrdinalIgnoreCase) || " is 122.
Long Statement,Xbim.IO.Xml,XbimXmlReader4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlReader4.cs,ReadSchemaVersion,The length of the statement  "                    if (string.Equals(input.Value' "http://www.buildingsmart-tech.org/ifcXML/IFC4/final"' StringComparison.OrdinalIgnoreCase)) " is 122.
Long Statement,Xbim.IO.Xml,XbimXmlReader4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlReader4.cs,ReadSchemaVersion,The length of the statement  "                    if (string.Equals(input.Value' "http://www.buildingsmart-tech.org/ifcXML/IFC4/Add2"' StringComparison.OrdinalIgnoreCase)) " is 121.
Long Statement,Xbim.IO.Xml,XbimXmlWriter4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlWriter4.cs,WriteProperty,The length of the statement  "                if (attr.MaxCardinality != null && attr.MaxCardinality.Length == 1 && attr.MaxCardinality[0] == 1) //list which shouldn't have more than 1 element in is serialized as a single element " is 183.
Long Statement,Xbim.IO.Xml,XmlMetaProperty,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XmlMetaProperty.cs,IsStringCompatible,The length of the statement  "            var defTypeAttr = type.GetTypeInfo().GetCustomAttributes(typeof(DefinedTypeAttribute)' false).FirstOrDefault() as DefinedTypeAttribute; " is 135.
Complex Conditional,Xbim.IO.Xml,XbimXmlReader3,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlReader3.cs,EndElement,The conditional expression  "prevInputType == XmlNodeType.Element && prevInputName == input.LocalName &&                           _currentNode is XmlProperty && _currentNode.Parent is XmlEntity"  is complex.
Complex Conditional,Xbim.IO.Xml,XbimXmlReader4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlReader4.cs,SetPropertyFromElement,The conditional expression  "typeof(IPersistEntity).GetTypeInfo().IsAssignableFrom(type) ||                       (typeof(IEnumerable).IsAssignableFrom(type) && property.EntityAttribute.MaxCardinality != null && property.EntityAttribute.MaxCardinality[0] == 1) ||                      (typeof(IEnumerable).IsAssignableFrom(type) && input.GetAttribute("type"' _xsi) != null)"  is complex.
Magic Number,Xbim.IO.Memory,MemoryModel,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\MemoryModel.cs,CalculateModelFactors,The following statement contains a magic number: switch (siUnit.UnitType)                      {                          case IfcUnitEnum.LENGTHUNIT:                              lengthToMetresConversionFactor = value;                              break;                          case IfcUnitEnum.PLANEANGLEUNIT:                              planeAngleSpecified = true;                              angleToRadiansConversionFactor = value;                              //need to guarantee precision to avoid errors in Boolean operations                              if (Math.Abs(angleToRadiansConversionFactor - (Math.PI / 180)) < 1e-9)                                  angleToRadiansConversionFactor = Math.PI / 180;                              break;                      }
Magic Number,Xbim.IO.Memory,MemoryModel,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\MemoryModel.cs,CalculateModelFactors,The following statement contains a magic number: switch (siUnit.UnitType)                      {                          case IfcUnitEnum.LENGTHUNIT:                              lengthToMetresConversionFactor = value;                              break;                          case IfcUnitEnum.PLANEANGLEUNIT:                              planeAngleSpecified = true;                              angleToRadiansConversionFactor = value;                              //need to guarantee precision to avoid errors in Boolean operations                              if (Math.Abs(angleToRadiansConversionFactor - (Math.PI / 180)) < 1e-9)                                  angleToRadiansConversionFactor = Math.PI / 180;                              break;                      }
Magic Number,Xbim.IO.Memory,MemoryModel,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\MemoryModel.cs,CalculateModelFactors,The following statement contains a magic number: switch (siUnit.UnitType)                      {                          case IfcUnitEnum.LENGTHUNIT:                              lengthToMetresConversionFactor = value;                              break;                          case IfcUnitEnum.PLANEANGLEUNIT:                              planeAngleSpecified = true;                              angleToRadiansConversionFactor = value;                              //need to guarantee precision to avoid errors in Boolean operations                              if (Math.Abs(angleToRadiansConversionFactor - (Math.PI / 180)) < 1e-9)                                  angleToRadiansConversionFactor = Math.PI / 180;                              break;                      }
Magic Number,Xbim.IO.Memory,MemoryModel,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\MemoryModel.cs,CalculateModelFactors,The following statement contains a magic number: var defaultPrecision = 1e-5;
Magic Number,Xbim.IO.Memory,MemoryModel,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\MemoryModel.cs,CalculateModelFactors,The following statement contains a magic number: defaultPrecision = 1e-5;
Magic Number,Xbim.IO.Memory,MemoryModel,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\MemoryModel.cs,CalculateModelFactors,The following statement contains a magic number: defaultPrecision < 1e-7
Magic Number,Xbim.IO.Memory,MemoryModel,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\MemoryModel.cs,CalculateModelFactors,The following statement contains a magic number: angleToRadiansConversionFactor = Math.PI / 180;
Magic Number,Xbim.IO.Memory,MemoryModel,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\MemoryModel.cs,CalculateModelFactors,The following statement contains a magic number: trimmed.Where(trimmedCurve => trimmedCurve.MasterRepresentation == IfcTrimmingPreference.PARAMETER)                      .Any(trimmedCurve => trimmedCurve.Trim1.Concat(trimmedCurve.Trim2)                      .OfType<IfcParameterValue>()                      .Select(trim => (double)trim.Value)                      .Any(val => val > Math.PI * 2))
Magic Number,Xbim.IO.Memory,MemoryModel,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\MemoryModel.cs,CalculateModelFactors,The following statement contains a magic number: !planeAngleSpecified && Math.Abs(angleToRadiansConversionFactor - 1) < 1e-10
Magic Number,Xbim.IO.Memory,MemoryModel,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\MemoryModel.cs,SetWorkArounds,The following statement contains a magic number: var surfaceOfLinearExtrusionVersion = new Version(17' 2' 0' 0);
Magic Number,Xbim.IO.Memory,MemoryModel,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\MemoryModel.cs,SetWorkArounds,The following statement contains a magic number: var surfaceOfLinearExtrusionVersion = new Version(17' 2' 0' 0);
Magic Number,Xbim.IO.Memory,MemoryModel,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\MemoryModel.cs,SetWorkArounds,The following statement contains a magic number: matches[0].Groups.Count == 2
Magic Number,Xbim.IO.Xml,XbimXmlReader3,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlReader3.cs,Read,The following statement contains a magic number: var newPercentage = Convert.ToInt32(pos / _streamSize * 100.0);
Magic Number,Xbim.IO.Xml,XbimXmlReader3,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlReader3.cs,Read,The following statement contains a magic number: ProgressStatus(100' "Parsing");
Magic Number,Xbim.IO.Xml,XbimXmlReader4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlReader4.cs,Read,The following statement contains a magic number: var newPercentage = Convert.ToInt32(pos / _streamSize * 100.0);
Magic Number,Xbim.IO.Xml,XbimXmlReader4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlReader4.cs,Read,The following statement contains a magic number: ProgressStatus(100' "Parsing");
Magic Number,Xbim.IO.Xml,XbimXmlReader4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlReader4.cs,ReadSchemaVersion,The following statement contains a magic number: dist > 100
Missing Default,Xbim.IO.Memory,MemoryModel,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\MemoryModel.cs,GetSchemaVersion,The following switch statement is missing a default case: switch (schema)                                  {                                      case XmlSchemaVersion.Ifc2x3:                                          return XbimSchemaVersion.Ifc2X3;                                      case XmlSchemaVersion.Ifc4Add1:                                      case XmlSchemaVersion.Ifc4:                                          return XbimSchemaVersion.Ifc4;                                      case XmlSchemaVersion.Unknown:                                          return XbimSchemaVersion.Unsupported;                                  }
Missing Default,Xbim.IO.Memory,MemoryModel,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\MemoryModel.cs,CalculateModelFactors,The following switch statement is missing a default case: switch (siUnit.UnitType)                      {                          case IfcUnitEnum.LENGTHUNIT:                              lengthToMetresConversionFactor = value;                              break;                          case IfcUnitEnum.PLANEANGLEUNIT:                              planeAngleSpecified = true;                              angleToRadiansConversionFactor = value;                              //need to guarantee precision to avoid errors in Boolean operations                              if (Math.Abs(angleToRadiansConversionFactor - (Math.PI / 180)) < 1e-9)                                  angleToRadiansConversionFactor = Math.PI / 180;                              break;                      }
Missing Default,Xbim.IO.Xml,XbimXmlReader3,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlReader3.cs,Read,The following switch statement is missing a default case: switch (input.NodeType)                      {                          case XmlNodeType.Element:                              if (String.Compare(input.LocalName' "uos"' StringComparison.OrdinalIgnoreCase) == 0)                              {                                  _currentNode = new XmlUosCollection();                                }                              else if (                                  String.Compare(input.LocalName' "iso_10303_28"' StringComparison.OrdinalIgnoreCase) ==                                  0)                              {                                  foundHeader = true;                                    if (!string.IsNullOrWhiteSpace(input.Prefix))                                  {                                      _expressNamespace = input.Prefix;                                      _cTypeAttribute = _expressNamespace + ":cType";                                      _posAttribute = _expressNamespace + ":pos";                                      _expressNamespace += ":";                                  }                                  else                                  {                                      _cTypeAttribute = "cType";                                      _posAttribute = "pos";                                  } //correct the values if the namespace is defined correctly                                  while (input.MoveToNextAttribute())                                  {                                      if (input.Value == "urn:oid:1.0.10303.28.2.1.1" ||                                          input.Value ==                                          "urn:iso.org:standard:10303:part(28):version(2):xmlschema:common")                                      {                                          _expressNamespace = input.LocalName;                                          _cTypeAttribute = _expressNamespace + ":cType";                                          _posAttribute = _expressNamespace + ":pos";                                          _expressNamespace += ":";                                          break;                                      }                                  }                              }                              else                              {                                  headerId = input.LocalName.ToLower();                              }                              break;                          case XmlNodeType.Text:                              switch (headerId)                              {                                  case "name":                                      header.FileName.Name = input.Value;                                      break;                                  case "time_stamp":                                      header.FileName.TimeStamp = input.Value;                                      break;                                  case "author":                                      header.FileName.AuthorName.Add(input.Value);                                      break;                                  case "organization":                                      header.FileName.Organization.Add(input.Value);                                      break;                                  case "preprocessor_version":                                      header.FileName.PreprocessorVersion = input.Value;                                      break;                                  case "originating_system":                                      header.FileName.OriginatingSystem = input.Value;                                      break;                                  case "authorization":                                      header.FileName.AuthorizationName = input.Value;                                      break;                                  case "documentation":                                      header.FileDescription.Description.Add(input.Value);                                      break;                              }                              break;                      }
Missing Default,Xbim.IO.Xml,XbimXmlReader3,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlReader3.cs,Read,The following switch statement is missing a default case: switch (headerId)                              {                                  case "name":                                      header.FileName.Name = input.Value;                                      break;                                  case "time_stamp":                                      header.FileName.TimeStamp = input.Value;                                      break;                                  case "author":                                      header.FileName.AuthorName.Add(input.Value);                                      break;                                  case "organization":                                      header.FileName.Organization.Add(input.Value);                                      break;                                  case "preprocessor_version":                                      header.FileName.PreprocessorVersion = input.Value;                                      break;                                  case "originating_system":                                      header.FileName.OriginatingSystem = input.Value;                                      break;                                  case "authorization":                                      header.FileName.AuthorizationName = input.Value;                                      break;                                  case "documentation":                                      header.FileDescription.Description.Add(input.Value);                                      break;                              }
Missing Default,Xbim.IO.Xml,XbimXmlReader3,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlReader3.cs,Read,The following switch statement is missing a default case: switch (input.NodeType)                          {                              case XmlNodeType.Element:                                  StartElement(input);                                  break;                              case XmlNodeType.EndElement:                                  IPersistEntity toWrite;                                  //if toWrite has a value we have completed an Ifc Entity                                  EndElement(input' prevInputType' prevInputName' out toWrite);                                  if (toWrite != null)                                  {                                      _entitiesParsed++;                                      _finish(toWrite);                                  }                                  break;                              case XmlNodeType.Whitespace:                                  SetValue(input' prevInputType);                                  break;                              case XmlNodeType.Text:                                  SetValue(input' prevInputType);                                  break;                          }
Missing Default,Xbim.IO.Xml,XbimXmlReader4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Xbim.IO.MemoryModel\Xml\XbimXmlReader4.cs,ReadHeader,The following switch statement is missing a default case: switch (input.LocalName.ToLowerInvariant())                  {                      case "name":                          header.FileName.Name = GetTextFromElement(input);                          break;                      case "time_stamp":                          header.FileName.TimeStamp = GetTextFromElement(input);                          break;                      case "author":                          header.FileName.AuthorName.Add(GetTextFromElement(input));                          break;                      case "organization":                          header.FileName.Organization.Add(GetTextFromElement(input));                          break;                      case "preprocessor_version":                          header.FileName.PreprocessorVersion = GetTextFromElement(input);                          break;                      case "originating_system":                          header.FileName.OriginatingSystem = GetTextFromElement(input);                          break;                      case "authorization":                          header.FileName.AuthorizationName = GetTextFromElement(input);                          break;                      case "documentation":                          header.FileDescription.Description.Add(GetTextFromElement(input));                          break;                  }
