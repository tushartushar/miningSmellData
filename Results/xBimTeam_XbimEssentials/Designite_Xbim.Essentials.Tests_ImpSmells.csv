Implementation smell,Namespace,Class,File,Method,Description
Long Method,Xbim.Essentials.Tests,WexBIMTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\WexBIMTests.cs,ReadAndWriteWexBimFile,The method has 110 lines of code.
Complex Method,Xbim.Essentials.Tests,CommonTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\CommonTests.cs,Can_skip_entities_while_parsing,Cyclomatic complexity of the method is 29
Complex Method,Xbim.Essentials.Tests,WexBIMTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\WexBIMTests.cs,ReadAndWriteWexBimFile,Cyclomatic complexity of the method is 8
Long Identifier,Xbim.Essentials.Tests,IfcHeaderTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\IfcHeaderTests.cs,ReadPreProcessorTest,The length of the parameter surfaceOfLinearExtrusionVersion is 31.
Long Statement,Xbim.Essentials.Tests,BinaryDataTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\BinaryDataTests.cs,PixelTextureTestCode,The length of the statement  "            var data = new List<byte[]>() { new byte[] { 0' 0' 255' 255 }' new byte[] { 0' 255' 255' 255 }' new byte[] { 255' 0' 255' 255 }' new byte[] { 255' 0' 0' 255 } }; " is 161.
Long Statement,Xbim.Essentials.Tests,CommonTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\CommonTests.cs,StepFileHeaderVersionTest,The length of the statement  "            Assert.IsTrue(header.FileName.PreprocessorVersion == string.Format("Processor version {0}"' model.GetType().GetTypeInfo().Assembly.GetName().Version)); " is 151.
Long Statement,Xbim.Essentials.Tests,CommonTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\CommonTests.cs,Can_skip_entities_while_parsing,The length of the statement  "                var ifc2x3MetaData = ExpressMetaData.GetMetadata((new Xbim.Ifc2x3.EntityFactoryIfc2x3()).GetType().GetTypeInfo().Module); " is 121.
Long Statement,Xbim.Essentials.Tests,CommonTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\CommonTests.cs,Can_skip_entities_while_parsing,The length of the statement  "                    ifc2x3MetaData.Types().Where(et => typeof(IPersistEntity).IsAssignableFrom(et.Type) && !et.Type.IsAbstract ).Select(et => et.ExpressNameUpper) " is 142.
Long Statement,Xbim.Essentials.Tests,CommonTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\CommonTests.cs,Can_skip_entities_while_parsing,The length of the statement  "                    .Concat(ifc2x3MetaData.Types().Where(et => typeof(IPersistEntity).IsAssignableFrom(et.Type) && !et.Type.IsAbstract).Select(et => et.ExpressNameUpper))); " is 152.
Long Statement,Xbim.Essentials.Tests,CommonTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\CommonTests.cs,Can_skip_entities_while_parsing,The length of the statement  "                    foreach (var t in metadata.ExpressTypesImplementing(typeof(IIfcSystem)).Where(t => !typeof(IIfcStructuralAnalysisModel).IsAssignableFrom(t.Type))) requiredTypes.Add(t.ExpressNameUpper); " is 185.
Long Statement,Xbim.Essentials.Tests,CommonTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\CommonTests.cs,Can_skip_entities_while_parsing,The length of the statement  "                    foreach (var t in metadata.ExpressTypesImplementing(typeof(IIfcElement)).Where(t => !typeof(IIfcFeatureElement).IsAssignableFrom(t.Type) " is 136.
Long Statement,Xbim.Essentials.Tests,CommonTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\CommonTests.cs,Can_skip_entities_while_parsing,The length of the statement  "                    foreach (var t in metadata.ExpressTypesImplementing(typeof(IIfcPropertySetDefinitionSelect))) requiredTypes.Add(t.ExpressNameUpper); " is 132.
Long Statement,Xbim.Essentials.Tests,CommonTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\CommonTests.cs,Can_skip_entities_while_parsing,The length of the statement  "                    foreach (var t in metadata.ExpressTypesImplementing(typeof(IIfcRelDefinesByProperties))) requiredTypes.Add(t.ExpressNameUpper); " is 127.
Long Statement,Xbim.Essentials.Tests,CommonTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\CommonTests.cs,Can_skip_entities_while_parsing,The length of the statement  "                    foreach (var t in metadata.ExpressTypesImplementing(typeof(IIfcElementQuantity))) requiredTypes.Add(t.ExpressNameUpper); " is 120.
Long Statement,Xbim.Essentials.Tests,CommonTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\CommonTests.cs,Can_skip_entities_while_parsing,The length of the statement  "                    foreach (var t in metadata.ExpressTypesImplementing(typeof(IIfcPhysicalSimpleQuantity))) requiredTypes.Add(t.ExpressNameUpper); " is 127.
Long Statement,Xbim.Essentials.Tests,CommonTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\CommonTests.cs,Can_skip_entities_while_parsing,The length of the statement  "                    foreach (var t in metadata.ExpressTypesImplementing(typeof(IIfcRelDefinesByType))) requiredTypes.Add(t.ExpressNameUpper); " is 121.
Long Statement,Xbim.Essentials.Tests,CommonTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\CommonTests.cs,Can_skip_entities_while_parsing,The length of the statement  "                    foreach (var t in metadata.ExpressTypesImplementing(typeof(IIfcMeasureWithUnit))) requiredTypes.Add(t.ExpressNameUpper); " is 120.
Long Statement,Xbim.Essentials.Tests,CommonTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\CommonTests.cs,Can_skip_entities_while_parsing,The length of the statement  "                    foreach (var t in metadata.ExpressTypesImplementing(typeof(IIfcDimensionalExponents))) requiredTypes.Add(t.ExpressNameUpper); " is 125.
Long Statement,Xbim.Essentials.Tests,CommonTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\CommonTests.cs,Can_skip_entities_while_parsing,The length of the statement  "                    foreach (var t in metadata.ExpressTypesImplementing(typeof(IIfcRelAssociatesClassification))) requiredTypes.Add(t.ExpressNameUpper); " is 132.
Long Statement,Xbim.Essentials.Tests,CommonTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\CommonTests.cs,Can_skip_entities_while_parsing,The length of the statement  "                    foreach (var t in metadata.ExpressTypesImplementing(typeof(IIfcClassificationReference))) requiredTypes.Add(t.ExpressNameUpper); " is 128.
Long Statement,Xbim.Essentials.Tests,CommonTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\CommonTests.cs,Can_skip_entities_while_parsing,The length of the statement  "                    // foreach (var t in metadata.ExpressTypesImplementing(typeof(Xbim.Ifc2x3.DateTimeResource.IfcCalendarDate))) requiredTypes.Add(t.ExpressNameUpper); " is 148.
Long Statement,Xbim.Essentials.Tests,CrossAccessTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\CrossAccessTests.cs,SettingNamesTest,The length of the statement  "                    Assert.IsTrue(((IfcAirTerminalType)airTerminal).PredefinedType == Ifc2x3.HVACDomain.IfcAirTerminalTypeEnum.USERDEFINED); " is 120.
Long Statement,Xbim.Essentials.Tests,EditableInterfaces,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\EditableInterfaces.cs,ItemSetTest,The length of the statement  "                    Assert.IsTrue(point.Coordinates.SequenceEqual(new[] { new IfcLengthMeasure(1)' new IfcLengthMeasure(1)' new IfcLengthMeasure(1) })); " is 132.
Long Statement,Xbim.Essentials.Tests,IfcHeaderTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\IfcHeaderTests.cs,ReadPreProcessorTest,The length of the statement  "                            Assert.IsFalse(store.ModelFactors.ApplyWorkAround("#SurfaceOfLinearExtrusion")' "Work around should not be implemented"); " is 121.
Long Statement,Xbim.Essentials.Tests,InMemoryInsertionTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\InMemoryInsertionTests.cs,Ifc4InsertCopyTest,The length of the statement  "                       // Debug.WriteLine("Time to insert {0} walls (Overall {1} entities): {2}ms"' iWalls.Count' iModel.Instances.Count' w.ElapsedMilliseconds); " is 138.
Long Statement,Xbim.Essentials.Tests,InMemoryInsertionTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\InMemoryInsertionTests.cs,CopyWallsOver,The length of the statement  "                        Debug.WriteLine("Time to insert {0} walls (Overall {1} entities): {2}ms"' iWalls.Count' iModel.Instances.Count' w.ElapsedMilliseconds); " is 135.
Long Statement,Xbim.Essentials.Tests,InverseCacheTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\InverseCacheTests.cs,CacheCreation,The length of the statement  "            var c = model.Instances.Where<IIfcObject>(o => o.IsDefinedBy.OfType<IIfcTypeObject>().FirstOrDefault()?.Name?.ToString()?.ToLower().Contains("wall") ?? false).Count() == " is 169.
Long Statement,Xbim.Essentials.Tests,InverseCacheTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\InverseCacheTests.cs,CacheCreation,The length of the statement  "                    model.Instances.Where<IIfcObject>(o => o.IsDefinedBy.OfType<IIfcTypeObject>().FirstOrDefault()?.Name?.ToString()?.ToLower().Contains("wall") ?? false).Count() && " is 161.
Long Statement,Xbim.Essentials.Tests,InverseCacheTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\InverseCacheTests.cs,CacheCreation,The length of the statement  "                    model.Instances.Where<IIfcObject>(o => o.IsDefinedBy.OfType<IIfcTypeObject>().FirstOrDefault()?.Name?.ToString()?.ToLower().Contains("wall") ?? false).Count() == " is 161.
Long Statement,Xbim.Essentials.Tests,InverseCacheTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\InverseCacheTests.cs,CacheCreation,The length of the statement  "                    model.Instances.Where<IIfcObject>(o => o.IsDefinedBy.OfType<IIfcTypeObject>().FirstOrDefault()?.Name?.ToString()?.ToLower().Contains("wall") ?? false).Count(); " is 159.
Long Statement,Xbim.Essentials.Tests,InverseCacheTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\InverseCacheTests.cs,CacheCreation,The length of the statement  "                var a = model.Instances.Where<IIfcObject>(o => o.IsDefinedBy.OfType<IIfcTypeObject>().FirstOrDefault()?.Name?.ToString()?.ToLower().Contains("wall") ?? false).Count() == " is 169.
Long Statement,Xbim.Essentials.Tests,InverseCacheTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\InverseCacheTests.cs,CacheCreation,The length of the statement  "                        model.Instances.Where<IIfcObject>(o => o.IsDefinedBy.OfType<IIfcTypeObject>().FirstOrDefault()?.Name?.ToString()?.ToLower().Contains("wall") ?? false).Count() && " is 161.
Long Statement,Xbim.Essentials.Tests,InverseCacheTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\InverseCacheTests.cs,CacheCreation,The length of the statement  "                        model.Instances.Where<IIfcObject>(o => o.IsDefinedBy.OfType<IIfcTypeObject>().FirstOrDefault()?.Name?.ToString()?.ToLower().Contains("wall") ?? false).Count() == " is 161.
Long Statement,Xbim.Essentials.Tests,InverseCacheTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\InverseCacheTests.cs,CacheCreation,The length of the statement  "                        model.Instances.Where<IIfcObject>(o => o.IsDefinedBy.OfType<IIfcTypeObject>().FirstOrDefault()?.Name?.ToString()?.ToLower().Contains("wall") ?? false).Count(); " is 159.
Long Statement,Xbim.Essentials.Tests,ModelProviderTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\ModelProviderTests.cs,ByDefault_Creating_Unsupported_Schema_Throws,The length of the statement  "            Assert.Throws<NotSupportedException>(() => modelProvider.Create(XbimSchemaVersion.Unsupported' XbimStoreType.InMemoryModel) ); " is 126.
Long Statement,Xbim.Essentials.Tests,ParsingTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\ParsingTests.cs,DoubleBackSlashName,The length of the statement  "            // the problem does not occur if there's any text after the double backslash (i.e. 'TextEndingInEscapedBackslash\\MoreText'). " is 125.
Long Statement,Xbim.Essentials.Tests,ParsingTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\ParsingTests.cs,DoubleBackSlashName,The length of the statement  "                Assert.AreEqual(mat1.Name.ToString()' @"TextWithEscapedBackslash\MoreText"' "String containing escaped backslash is not parsed correctly"); " is 139.
Long Statement,Xbim.Essentials.Tests,ParsingTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\ParsingTests.cs,IfcStoreTransactionTest,The length of the statement  "                Assert.AreEqual(6' diffCount' "Unexpected number of elements created for new door."); //door plus all the owner history objects " is 127.
Long Statement,Xbim.Essentials.Tests,TransactionLogTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\TransactionLogTests.cs,PrintChanges,The length of the statement  "                Console.WriteLine(@"Entity: #{0}={1}' Change: {2}"' change.Entity.EntityLabel' change.Entity.GetType().Name' change.ChangeType); " is 128.
Long Statement,Xbim.Essentials.Tests,XmlTests2X3,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\XmlTests2x3.cs,ValidateIfc2X3,The length of the statement  "                Debug.WriteLine("Validation error: {0} \nLine: {1}' Position: {2}"' args.Message' args.Exception.LineNumber' args.Exception.LinePosition); " is 138.
Long Statement,Xbim.Essentials.Tests,XmlTests4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\XmlTests4.cs,ValidateIfc4,The length of the statement  "                        Debug.WriteLine("Validation {0}: {1} \nLine: {2}' Position: {3}"' args.Severity' args.Message' args.Exception.LineNumber' args.Exception.LinePosition); " is 151.
Long Statement,Xbim.Essentials.Tests,XmlTests4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\XmlTests4.cs,ValidateIfc4,The length of the statement  "                        logFile.WriteLine("Validation {0}: {1} \nLine: {2}' Position: {3}"' args.Severity' args.Message' args.Exception.LineNumber' args.Exception.LinePosition); " is 153.
Long Statement,Xbim.Essentials.Tests,StoreOpenForDebug,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\_StoreOpenForDebug.cs,NotAnUsefulTestJustDirtyWork,The length of the statement  "            var filename = ""; // "C:\\Users\\Claudio\\OneDrive\\IfcArchive\\Andre\\HaifaBridgeFixed_Classified_WithAxes_WithSystems_WithSpaces.ifc"; " is 137.
Long Statement,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,IfcStoreRegionWorldCoordTest,The length of the statement  "            XbimMatrix3D WorldCoord = new XbimMatrix3D(-0.228171504575237' -0.973620955248947' 0' 0' 0.973620955248947' -0.228171504575237' 0' 0' 0' 0' 1' 0' 543188712' 259041729' 16000' 1); " is 178.
Long Statement,Xbim.IO.Tests,IfcLogicalTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\IfcLogicalTests.cs,ValidationOfUnknown,The length of the statement  "                        l.AssignedItems.Add(store.Instances.New<IfcCartesianPoint>(p => p.Coordinates.AddRange(new IfcLengthMeasure[] { 0' 0' 0 }))); " is 125.
Magic Number,Xbim.Essentials.Tests,AngleTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\AngleTests.cs,ColinearityTest,The following statement contains a magic number: var b = new XbimVector3D(0.5' 0' 0);
Magic Number,Xbim.Essentials.Tests,AngleTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\AngleTests.cs,ColinearityTest,The following statement contains a magic number: Assert.AreEqual(0' ident' 1e-9);
Magic Number,Xbim.Essentials.Tests,AngleTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\AngleTests.cs,ColinearityTest,The following statement contains a magic number: Assert.AreEqual(0' angle' 1e-9);
Magic Number,Xbim.Essentials.Tests,AngleTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\AngleTests.cs,ColinearityTest,The following statement contains a magic number: Assert.AreEqual(Math.PI / 4.0' angle' 1e-9);
Magic Number,Xbim.Essentials.Tests,AngleTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\AngleTests.cs,ColinearityTest,The following statement contains a magic number: Assert.AreEqual(Math.PI / 4.0' angle' 1e-9);
Magic Number,Xbim.Essentials.Tests,AngleTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\AngleTests.cs,ColinearityTest,The following statement contains a magic number: Assert.AreEqual(Math.PI / 2.0' angle' 1e-9);
Magic Number,Xbim.Essentials.Tests,AngleTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\AngleTests.cs,ColinearityTest,The following statement contains a magic number: Assert.AreEqual(Math.PI / 2.0' angle' 1e-9);
Magic Number,Xbim.Essentials.Tests,AngleTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\AngleTests.cs,ColinearityTest,The following statement contains a magic number: Assert.AreEqual(Math.PI * 3.0 / 4.0' angle' 1e-9);
Magic Number,Xbim.Essentials.Tests,AngleTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\AngleTests.cs,ColinearityTest,The following statement contains a magic number: Assert.AreEqual(Math.PI * 3.0 / 4.0' angle' 1e-9);
Magic Number,Xbim.Essentials.Tests,AngleTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\AngleTests.cs,ColinearityTest,The following statement contains a magic number: Assert.AreEqual(Math.PI * 3.0 / 4.0' angle' 1e-9);
Magic Number,Xbim.Essentials.Tests,AngleTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\AngleTests.cs,ColinearityTest,The following statement contains a magic number: Assert.AreEqual(Math.PI' angle' 1e-9);
Magic Number,Xbim.Essentials.Tests,AngleTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\AngleTests.cs,ColinearityTest,The following statement contains a magic number: Assert.AreEqual(Math.PI / 4.0' angle' 1e-9);
Magic Number,Xbim.Essentials.Tests,AngleTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\AngleTests.cs,ColinearityTest,The following statement contains a magic number: Assert.AreEqual(Math.PI / 4.0' angle' 1e-9);
Magic Number,Xbim.Essentials.Tests,AngleTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\AngleTests.cs,ColinearityTest,The following statement contains a magic number: Assert.AreEqual(Math.PI * 3.0/4.0' angle' 1e-9);
Magic Number,Xbim.Essentials.Tests,AngleTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\AngleTests.cs,ColinearityTest,The following statement contains a magic number: Assert.AreEqual(Math.PI * 3.0/4.0' angle' 1e-9);
Magic Number,Xbim.Essentials.Tests,AngleTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\AngleTests.cs,ColinearityTest,The following statement contains a magic number: Assert.AreEqual(Math.PI * 3.0/4.0' angle' 1e-9);
Magic Number,Xbim.Essentials.Tests,BinaryDataTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\BinaryDataTests.cs,PixelTextureTestCode,The following statement contains a magic number: var data = new List<byte[]>() { new byte[] { 0' 0' 255' 255 }' new byte[] { 0' 255' 255' 255 }' new byte[] { 255' 0' 255' 255 }' new byte[] { 255' 0' 0' 255 } };
Magic Number,Xbim.Essentials.Tests,BinaryDataTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\BinaryDataTests.cs,PixelTextureTestCode,The following statement contains a magic number: var data = new List<byte[]>() { new byte[] { 0' 0' 255' 255 }' new byte[] { 0' 255' 255' 255 }' new byte[] { 255' 0' 255' 255 }' new byte[] { 255' 0' 0' 255 } };
Magic Number,Xbim.Essentials.Tests,BinaryDataTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\BinaryDataTests.cs,PixelTextureTestCode,The following statement contains a magic number: var data = new List<byte[]>() { new byte[] { 0' 0' 255' 255 }' new byte[] { 0' 255' 255' 255 }' new byte[] { 255' 0' 255' 255 }' new byte[] { 255' 0' 0' 255 } };
Magic Number,Xbim.Essentials.Tests,BinaryDataTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\BinaryDataTests.cs,PixelTextureTestCode,The following statement contains a magic number: var data = new List<byte[]>() { new byte[] { 0' 0' 255' 255 }' new byte[] { 0' 255' 255' 255 }' new byte[] { 255' 0' 255' 255 }' new byte[] { 255' 0' 0' 255 } };
Magic Number,Xbim.Essentials.Tests,BinaryDataTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\BinaryDataTests.cs,PixelTextureTestCode,The following statement contains a magic number: var data = new List<byte[]>() { new byte[] { 0' 0' 255' 255 }' new byte[] { 0' 255' 255' 255 }' new byte[] { 255' 0' 255' 255 }' new byte[] { 255' 0' 0' 255 } };
Magic Number,Xbim.Essentials.Tests,BinaryDataTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\BinaryDataTests.cs,PixelTextureTestCode,The following statement contains a magic number: var data = new List<byte[]>() { new byte[] { 0' 0' 255' 255 }' new byte[] { 0' 255' 255' 255 }' new byte[] { 255' 0' 255' 255 }' new byte[] { 255' 0' 0' 255 } };
Magic Number,Xbim.Essentials.Tests,BinaryDataTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\BinaryDataTests.cs,PixelTextureTestCode,The following statement contains a magic number: var data = new List<byte[]>() { new byte[] { 0' 0' 255' 255 }' new byte[] { 0' 255' 255' 255 }' new byte[] { 255' 0' 255' 255 }' new byte[] { 255' 0' 0' 255 } };
Magic Number,Xbim.Essentials.Tests,BinaryDataTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\BinaryDataTests.cs,PixelTextureTestCode,The following statement contains a magic number: var data = new List<byte[]>() { new byte[] { 0' 0' 255' 255 }' new byte[] { 0' 255' 255' 255 }' new byte[] { 255' 0' 255' 255 }' new byte[] { 255' 0' 0' 255 } };
Magic Number,Xbim.Essentials.Tests,BinaryDataTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\BinaryDataTests.cs,PixelTextureTestCode,The following statement contains a magic number: var data = new List<byte[]>() { new byte[] { 0' 0' 255' 255 }' new byte[] { 0' 255' 255' 255 }' new byte[] { 255' 0' 255' 255 }' new byte[] { 255' 0' 0' 255 } };
Magic Number,Xbim.Essentials.Tests,BinaryDataTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\BinaryDataTests.cs,PixelTextureTestCode,The following statement contains a magic number: var data = new List<byte[]>() { new byte[] { 0' 0' 255' 255 }' new byte[] { 0' 255' 255' 255 }' new byte[] { 255' 0' 255' 255 }' new byte[] { 255' 0' 0' 255 } };
Magic Number,Xbim.Essentials.Tests,BinaryDataTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\BinaryDataTests.cs,PixelTextureTestCode,The following statement contains a magic number: var pt = create.PixelTexture(t => {                          t.Height = 2;                          t.Width = 2;                          t.ColourComponents = 4;                          t.RepeatS = true;                          t.RepeatT = true;                          t.Pixel.AddRange(data.Select(d => new IfcBinary(d)));                      });
Magic Number,Xbim.Essentials.Tests,BinaryDataTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\BinaryDataTests.cs,PixelTextureTestCode,The following statement contains a magic number: var pt = create.PixelTexture(t => {                          t.Height = 2;                          t.Width = 2;                          t.ColourComponents = 4;                          t.RepeatS = true;                          t.RepeatT = true;                          t.Pixel.AddRange(data.Select(d => new IfcBinary(d)));                      });
Magic Number,Xbim.Essentials.Tests,BinaryDataTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\BinaryDataTests.cs,PixelTextureTestCode,The following statement contains a magic number: var pt = create.PixelTexture(t => {                          t.Height = 2;                          t.Width = 2;                          t.ColourComponents = 4;                          t.RepeatS = true;                          t.RepeatT = true;                          t.Pixel.AddRange(data.Select(d => new IfcBinary(d)));                      });
Magic Number,Xbim.Essentials.Tests,CommonTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\CommonTests.cs,PackedNormalRoundTripTest,The following statement contains a magic number: var tests = new[]              {                  new XbimVector3D(0.0749087609620539' 0.264167604633194' 0.961563390626687)'                  new XbimVector3D(-0.0535755113215756' 0.316639902069201' 0.947031592400295)'                  new XbimVector3D(-0.0403690470743153' -0.0845001599207948' 0.995605375142015)'                  new XbimVector3D(-0.170389413996118' 0.321003309980549' 0.931624560957681)              };
Magic Number,Xbim.Essentials.Tests,CommonTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\CommonTests.cs,PackedNormalRoundTripTest,The following statement contains a magic number: var tests = new[]              {                  new XbimVector3D(0.0749087609620539' 0.264167604633194' 0.961563390626687)'                  new XbimVector3D(-0.0535755113215756' 0.316639902069201' 0.947031592400295)'                  new XbimVector3D(-0.0403690470743153' -0.0845001599207948' 0.995605375142015)'                  new XbimVector3D(-0.170389413996118' 0.321003309980549' 0.931624560957681)              };
Magic Number,Xbim.Essentials.Tests,CommonTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\CommonTests.cs,PackedNormalRoundTripTest,The following statement contains a magic number: var tests = new[]              {                  new XbimVector3D(0.0749087609620539' 0.264167604633194' 0.961563390626687)'                  new XbimVector3D(-0.0535755113215756' 0.316639902069201' 0.947031592400295)'                  new XbimVector3D(-0.0403690470743153' -0.0845001599207948' 0.995605375142015)'                  new XbimVector3D(-0.170389413996118' 0.321003309980549' 0.931624560957681)              };
Magic Number,Xbim.Essentials.Tests,CommonTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\CommonTests.cs,PackedNormalRoundTripTest,The following statement contains a magic number: var tests = new[]              {                  new XbimVector3D(0.0749087609620539' 0.264167604633194' 0.961563390626687)'                  new XbimVector3D(-0.0535755113215756' 0.316639902069201' 0.947031592400295)'                  new XbimVector3D(-0.0403690470743153' -0.0845001599207948' 0.995605375142015)'                  new XbimVector3D(-0.170389413996118' 0.321003309980549' 0.931624560957681)              };
Magic Number,Xbim.Essentials.Tests,CommonTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\CommonTests.cs,PackedNormalRoundTripTest,The following statement contains a magic number: var tests = new[]              {                  new XbimVector3D(0.0749087609620539' 0.264167604633194' 0.961563390626687)'                  new XbimVector3D(-0.0535755113215756' 0.316639902069201' 0.947031592400295)'                  new XbimVector3D(-0.0403690470743153' -0.0845001599207948' 0.995605375142015)'                  new XbimVector3D(-0.170389413996118' 0.321003309980549' 0.931624560957681)              };
Magic Number,Xbim.Essentials.Tests,CommonTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\CommonTests.cs,PackedNormalRoundTripTest,The following statement contains a magic number: var tests = new[]              {                  new XbimVector3D(0.0749087609620539' 0.264167604633194' 0.961563390626687)'                  new XbimVector3D(-0.0535755113215756' 0.316639902069201' 0.947031592400295)'                  new XbimVector3D(-0.0403690470743153' -0.0845001599207948' 0.995605375142015)'                  new XbimVector3D(-0.170389413996118' 0.321003309980549' 0.931624560957681)              };
Magic Number,Xbim.Essentials.Tests,CommonTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\CommonTests.cs,PackedNormalRoundTripTest,The following statement contains a magic number: var tests = new[]              {                  new XbimVector3D(0.0749087609620539' 0.264167604633194' 0.961563390626687)'                  new XbimVector3D(-0.0535755113215756' 0.316639902069201' 0.947031592400295)'                  new XbimVector3D(-0.0403690470743153' -0.0845001599207948' 0.995605375142015)'                  new XbimVector3D(-0.170389413996118' 0.321003309980549' 0.931624560957681)              };
Magic Number,Xbim.Essentials.Tests,CommonTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\CommonTests.cs,PackedNormalRoundTripTest,The following statement contains a magic number: var tests = new[]              {                  new XbimVector3D(0.0749087609620539' 0.264167604633194' 0.961563390626687)'                  new XbimVector3D(-0.0535755113215756' 0.316639902069201' 0.947031592400295)'                  new XbimVector3D(-0.0403690470743153' -0.0845001599207948' 0.995605375142015)'                  new XbimVector3D(-0.170389413996118' 0.321003309980549' 0.931624560957681)              };
Magic Number,Xbim.Essentials.Tests,CommonTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\CommonTests.cs,PackedNormalRoundTripTest,The following statement contains a magic number: var tests = new[]              {                  new XbimVector3D(0.0749087609620539' 0.264167604633194' 0.961563390626687)'                  new XbimVector3D(-0.0535755113215756' 0.316639902069201' 0.947031592400295)'                  new XbimVector3D(-0.0403690470743153' -0.0845001599207948' 0.995605375142015)'                  new XbimVector3D(-0.170389413996118' 0.321003309980549' 0.931624560957681)              };
Magic Number,Xbim.Essentials.Tests,CommonTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\CommonTests.cs,PackedNormalRoundTripTest,The following statement contains a magic number: var tests = new[]              {                  new XbimVector3D(0.0749087609620539' 0.264167604633194' 0.961563390626687)'                  new XbimVector3D(-0.0535755113215756' 0.316639902069201' 0.947031592400295)'                  new XbimVector3D(-0.0403690470743153' -0.0845001599207948' 0.995605375142015)'                  new XbimVector3D(-0.170389413996118' 0.321003309980549' 0.931624560957681)              };
Magic Number,Xbim.Essentials.Tests,CommonTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\CommonTests.cs,PackedNormalRoundTripTest,The following statement contains a magic number: var tests = new[]              {                  new XbimVector3D(0.0749087609620539' 0.264167604633194' 0.961563390626687)'                  new XbimVector3D(-0.0535755113215756' 0.316639902069201' 0.947031592400295)'                  new XbimVector3D(-0.0403690470743153' -0.0845001599207948' 0.995605375142015)'                  new XbimVector3D(-0.170389413996118' 0.321003309980549' 0.931624560957681)              };
Magic Number,Xbim.Essentials.Tests,CommonTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\CommonTests.cs,PackedNormalRoundTripTest,The following statement contains a magic number: var tests = new[]              {                  new XbimVector3D(0.0749087609620539' 0.264167604633194' 0.961563390626687)'                  new XbimVector3D(-0.0535755113215756' 0.316639902069201' 0.947031592400295)'                  new XbimVector3D(-0.0403690470743153' -0.0845001599207948' 0.995605375142015)'                  new XbimVector3D(-0.170389413996118' 0.321003309980549' 0.931624560957681)              };
Magic Number,Xbim.Essentials.Tests,CommonTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\CommonTests.cs,PackedNormalRoundTripTest,The following statement contains a magic number: Trace.WriteLine($"vector: {vec}' angle: { angle * 180.0 / Math.PI:F3}");
Magic Number,Xbim.Essentials.Tests,CommonTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\CommonTests.cs,PackedNormalRoundTripTest,The following statement contains a magic number: angle > 0.1
Magic Number,Xbim.Essentials.Tests,CommonTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\CommonTests.cs,PackedNormalRoundTripTest,The following statement contains a magic number: Assert.IsTrue(angle < 0.13);
Magic Number,Xbim.Essentials.Tests,ComplexDefinedTypeTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\ComplexDefinedTypeTests.cs,CreateSerializeAndDeserialize,The following statement contains a magic number: var lat = new List<long> {45' 12' 79};
Magic Number,Xbim.Essentials.Tests,ComplexDefinedTypeTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\ComplexDefinedTypeTests.cs,CreateSerializeAndDeserialize,The following statement contains a magic number: var lat = new List<long> {45' 12' 79};
Magic Number,Xbim.Essentials.Tests,ComplexDefinedTypeTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\ComplexDefinedTypeTests.cs,CreateSerializeAndDeserialize,The following statement contains a magic number: var lat = new List<long> {45' 12' 79};
Magic Number,Xbim.Essentials.Tests,ComplexDefinedTypeTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\ComplexDefinedTypeTests.cs,CreateSerializeAndDeserialize,The following statement contains a magic number: var lon = new List<long> {2' 23' 80};
Magic Number,Xbim.Essentials.Tests,ComplexDefinedTypeTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\ComplexDefinedTypeTests.cs,CreateSerializeAndDeserialize,The following statement contains a magic number: var lon = new List<long> {2' 23' 80};
Magic Number,Xbim.Essentials.Tests,ComplexDefinedTypeTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\ComplexDefinedTypeTests.cs,CreateSerializeAndDeserialize,The following statement contains a magic number: var lon = new List<long> {2' 23' 80};
Magic Number,Xbim.Essentials.Tests,DateTimeTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\DateTimeTests.cs,IfcDateAndTimeToIfcDateTimeTest,The following statement contains a magic number: ifc2x3DateAndTime.DateComponent.YearComponent = 2015;
Magic Number,Xbim.Essentials.Tests,DateTimeTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\DateTimeTests.cs,IfcDateAndTimeToIfcDateTimeTest,The following statement contains a magic number: ifc2x3DateAndTime.DateComponent.MonthComponent = 11;
Magic Number,Xbim.Essentials.Tests,DateTimeTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\DateTimeTests.cs,IfcDateAndTimeToIfcDateTimeTest,The following statement contains a magic number: ifc2x3DateAndTime.DateComponent.DayComponent = 5;
Magic Number,Xbim.Essentials.Tests,DateTimeTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\DateTimeTests.cs,IfcDateAndTimeToIfcDateTimeTest,The following statement contains a magic number: ifc2x3DateAndTime.TimeComponent.HourComponent = 12;
Magic Number,Xbim.Essentials.Tests,DateTimeTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\DateTimeTests.cs,IfcDateAndTimeToIfcDateTimeTest,The following statement contains a magic number: ifc2x3DateAndTime.TimeComponent.MinuteComponent = 11;
Magic Number,Xbim.Essentials.Tests,DateTimeTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\DateTimeTests.cs,IfcDateAndTimeToIfcDateTimeTest,The following statement contains a magic number: ifc2x3DateAndTime.TimeComponent.SecondComponent = 32.123456789;
Magic Number,Xbim.Essentials.Tests,DateTimeTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\DateTimeTests.cs,IfcTimeMeasureToIfcDurationTest,The following statement contains a magic number: const double numSeconds = 3000501.32;
Magic Number,Xbim.Essentials.Tests,EditableInterfaces,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\EditableInterfaces.cs,ItemSetTest,The following statement contains a magic number: Assert.IsTrue(rel.RelatedObjects.Count == 4);
Magic Number,Xbim.Essentials.Tests,EditableInterfaces,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\EditableInterfaces.cs,ItemSetTest,The following statement contains a magic number: Assert.IsTrue(rel.RelatedObjects.Count == 5);
Magic Number,Xbim.Essentials.Tests,EqualityTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\EqualityTests.cs,EqualityTest,The following statement contains a magic number: var wall4 = f.New<IfcWall>(model2' 2' true);
Magic Number,Xbim.Essentials.Tests,EqualityTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\EqualityTests.cs,EqualityTest,The following statement contains a magic number: Assert.AreEqual(3' distinct.Count);
Magic Number,Xbim.Essentials.Tests,EqualityTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\EqualityTests.cs,EqualityTest,The following statement contains a magic number: Assert.AreEqual(3' distinctEntities.Count);
Magic Number,Xbim.Essentials.Tests,EsentHeaderPersistenceTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\EsentHeaderPersistenceTests.cs,TestHeaderPersistance,The following statement contains a magic number: Assert.AreEqual(3' called);
Magic Number,Xbim.Essentials.Tests,FederationPathTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\FederationPathTests.cs,CanFindRelativeFiles,The following statement contains a magic number: Assert.AreEqual(2' store.ReferencedModels.Count());
Magic Number,Xbim.Essentials.Tests,FederationTestsForIfcStore,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\FederationTestsForIfcStore.cs,TestFederation,The following statement contains a magic number: Assert.AreEqual(ifcStore.ReferencedModels.Count()' 2' "Should have two federated models.");
Magic Number,Xbim.Essentials.Tests,FederationTestsForIfcStore,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\FederationTestsForIfcStore.cs,CreateModels,The following statement contains a magic number: i < 3
Magic Number,Xbim.Essentials.Tests,GeometryCacheTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryCacheTests.cs,FileVersionIsCorrect,The following statement contains a magic number: Assert.AreEqual(2' m.GeometrySupportLevel' "GeometrySupportLevel for Monolith_v20 should be 2");
Magic Number,Xbim.Essentials.Tests,GeometryTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryTests.cs,PackedNormalTests,The following statement contains a magic number: var vectors = (List<XbimVector3D>)UniformPointsOnSphere(100);
Magic Number,Xbim.Essentials.Tests,GeometryTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryTests.cs,PackedNormalTests,The following statement contains a magic number: angle > 0.1
Magic Number,Xbim.Essentials.Tests,GeometryTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryTests.cs,PackedNormalTests,The following statement contains a magic number: Assert.IsTrue(angle < 0.13);
Magic Number,Xbim.Essentials.Tests,GeometryTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryTests.cs,PackedNormalTests,The following statement contains a magic number: Assert.IsTrue(angle < 1e-10);
Magic Number,Xbim.Essentials.Tests,GeometryTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryTests.cs,UniformPointsOnSphere,The following statement contains a magic number: var i = Math.PI * (3 - Math.Sqrt(5));
Magic Number,Xbim.Essentials.Tests,GeometryTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryTests.cs,UniformPointsOnSphere,The following statement contains a magic number: var i = Math.PI * (3 - Math.Sqrt(5));
Magic Number,Xbim.Essentials.Tests,GeometryTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryTests.cs,UniformPointsOnSphere,The following statement contains a magic number: var o = 2 / n;
Magic Number,Xbim.Essentials.Tests,GeometryTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryTests.cs,UniformPointsOnSphere,The following statement contains a magic number: var y = k * o - 1 + (o / 2);
Magic Number,Xbim.Essentials.Tests,GeometryTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryTests.cs,MatrixArrayConversion,The following statement contains a magic number: var m = XbimMatrix3D.CreateTranslation(10' 20' 30);
Magic Number,Xbim.Essentials.Tests,GeometryTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryTests.cs,MatrixArrayConversion,The following statement contains a magic number: var m = XbimMatrix3D.CreateTranslation(10' 20' 30);
Magic Number,Xbim.Essentials.Tests,GeometryTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryTests.cs,MatrixArrayConversion,The following statement contains a magic number: var m = XbimMatrix3D.CreateTranslation(10' 20' 30);
Magic Number,Xbim.Essentials.Tests,GeometryTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryTests.cs,MatrixArrayConversion,The following statement contains a magic number: m.RotateAroundXAxis(Math.PI / 4);
Magic Number,Xbim.Essentials.Tests,GeometryTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryTests.cs,MatrixArrayConversion,The following statement contains a magic number: m.Scale(.05);
Magic Number,Xbim.Essentials.Tests,Ifc4DateTimeTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\Ifc4DateTimeTests.cs,DateTimeTest,The following statement contains a magic number: var dt = new DateTime(2016' 3' 31' 10' 54' 2);
Magic Number,Xbim.Essentials.Tests,Ifc4DateTimeTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\Ifc4DateTimeTests.cs,DateTimeTest,The following statement contains a magic number: var dt = new DateTime(2016' 3' 31' 10' 54' 2);
Magic Number,Xbim.Essentials.Tests,Ifc4DateTimeTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\Ifc4DateTimeTests.cs,DateTimeTest,The following statement contains a magic number: var dt = new DateTime(2016' 3' 31' 10' 54' 2);
Magic Number,Xbim.Essentials.Tests,Ifc4DateTimeTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\Ifc4DateTimeTests.cs,DateTimeTest,The following statement contains a magic number: var dt = new DateTime(2016' 3' 31' 10' 54' 2);
Magic Number,Xbim.Essentials.Tests,Ifc4DateTimeTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\Ifc4DateTimeTests.cs,DateTimeTest,The following statement contains a magic number: var dt = new DateTime(2016' 3' 31' 10' 54' 2);
Magic Number,Xbim.Essentials.Tests,Ifc4DateTimeTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\Ifc4DateTimeTests.cs,DateTimeTest,The following statement contains a magic number: var dt = new DateTime(2016' 3' 31' 10' 54' 2);
Magic Number,Xbim.Essentials.Tests,Ifc4DateTimeTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\Ifc4DateTimeTests.cs,DateTimeTest,The following statement contains a magic number: Assert.AreEqual((DateTime)date' new DateTime(2016' 3' 31));
Magic Number,Xbim.Essentials.Tests,Ifc4DateTimeTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\Ifc4DateTimeTests.cs,DateTimeTest,The following statement contains a magic number: Assert.AreEqual((DateTime)date' new DateTime(2016' 3' 31));
Magic Number,Xbim.Essentials.Tests,Ifc4DateTimeTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\Ifc4DateTimeTests.cs,DateTimeTest,The following statement contains a magic number: Assert.AreEqual((DateTime)date' new DateTime(2016' 3' 31));
Magic Number,Xbim.Essentials.Tests,Ifc4DateTimeTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\Ifc4DateTimeTests.cs,DateTimeTest,The following statement contains a magic number: Assert.AreEqual((DateTime)date' new DateTime(2016' 3' 31));
Magic Number,Xbim.Essentials.Tests,Ifc4DateTimeTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\Ifc4DateTimeTests.cs,DateTimeTest,The following statement contains a magic number: Assert.AreEqual((DateTime)date' new DateTime(2016' 3' 31));
Magic Number,Xbim.Essentials.Tests,Ifc4DateTimeTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\Ifc4DateTimeTests.cs,DateTimeTest,The following statement contains a magic number: Assert.AreEqual((DateTime)date' new DateTime(2016' 3' 31));
Magic Number,Xbim.Essentials.Tests,Ifc4DateTimeTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\Ifc4DateTimeTests.cs,DateTimeTest,The following statement contains a magic number: Assert.AreEqual((TimeSpan)stamp' dt - new DateTime(1970' 1' 1' 0' 0' 0' 0' DateTimeKind.Utc));
Magic Number,Xbim.Essentials.Tests,Ifc4DateTimeTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\Ifc4DateTimeTests.cs,DateTimeTest,The following statement contains a magic number: var sTime = DateTime.Today.AddHours(10).AddMinutes(54).AddSeconds(2);
Magic Number,Xbim.Essentials.Tests,Ifc4DateTimeTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\Ifc4DateTimeTests.cs,DateTimeTest,The following statement contains a magic number: var sTime = DateTime.Today.AddHours(10).AddMinutes(54).AddSeconds(2);
Magic Number,Xbim.Essentials.Tests,Ifc4DateTimeTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\Ifc4DateTimeTests.cs,DateTimeTest,The following statement contains a magic number: var sTime = DateTime.Today.AddHours(10).AddMinutes(54).AddSeconds(2);
Magic Number,Xbim.Essentials.Tests,Ifc4DateTimeTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\Ifc4DateTimeTests.cs,DateTimeTest,The following statement contains a magic number: var span = new TimeSpan(9' 5' 32' 45' 12);
Magic Number,Xbim.Essentials.Tests,Ifc4DateTimeTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\Ifc4DateTimeTests.cs,DateTimeTest,The following statement contains a magic number: var span = new TimeSpan(9' 5' 32' 45' 12);
Magic Number,Xbim.Essentials.Tests,Ifc4DateTimeTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\Ifc4DateTimeTests.cs,DateTimeTest,The following statement contains a magic number: var span = new TimeSpan(9' 5' 32' 45' 12);
Magic Number,Xbim.Essentials.Tests,Ifc4DateTimeTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\Ifc4DateTimeTests.cs,DateTimeTest,The following statement contains a magic number: var span = new TimeSpan(9' 5' 32' 45' 12);
Magic Number,Xbim.Essentials.Tests,Ifc4DateTimeTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\Ifc4DateTimeTests.cs,DateTimeTest,The following statement contains a magic number: var span = new TimeSpan(9' 5' 32' 45' 12);
Magic Number,Xbim.Essentials.Tests,Ifc4DateTimeTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\Ifc4DateTimeTests.cs,DurationTest,The following statement contains a magic number: var durSpan = new TimeSpan(25' 15' 56' 12);
Magic Number,Xbim.Essentials.Tests,Ifc4DateTimeTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\Ifc4DateTimeTests.cs,DurationTest,The following statement contains a magic number: var durSpan = new TimeSpan(25' 15' 56' 12);
Magic Number,Xbim.Essentials.Tests,Ifc4DateTimeTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\Ifc4DateTimeTests.cs,DurationTest,The following statement contains a magic number: var durSpan = new TimeSpan(25' 15' 56' 12);
Magic Number,Xbim.Essentials.Tests,Ifc4DateTimeTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\Ifc4DateTimeTests.cs,DurationTest,The following statement contains a magic number: var durSpan = new TimeSpan(25' 15' 56' 12);
Magic Number,Xbim.Essentials.Tests,Ifc4DateTimeTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\Ifc4DateTimeTests.cs,DurationTest,The following statement contains a magic number: durSpan = new TimeSpan(-25' -15' -56' -12);
Magic Number,Xbim.Essentials.Tests,Ifc4DateTimeTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\Ifc4DateTimeTests.cs,DurationTest,The following statement contains a magic number: durSpan = new TimeSpan(-25' -15' -56' -12);
Magic Number,Xbim.Essentials.Tests,Ifc4DateTimeTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\Ifc4DateTimeTests.cs,DurationTest,The following statement contains a magic number: durSpan = new TimeSpan(-25' -15' -56' -12);
Magic Number,Xbim.Essentials.Tests,Ifc4DateTimeTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\Ifc4DateTimeTests.cs,DurationTest,The following statement contains a magic number: durSpan = new TimeSpan(-25' -15' -56' -12);
Magic Number,Xbim.Essentials.Tests,Ifc4GeometryTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\Ifc4GeometryTests.cs,IfcTriangulatedFaceSetTest,The following statement contains a magic number: var basinTess = store.Instances[501] as IIfcTriangulatedFaceSet;
Magic Number,Xbim.Essentials.Tests,Ifc4GeometryTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\Ifc4GeometryTests.cs,IfcTriangulatedFaceSetTest,The following statement contains a magic number: Assert.IsTrue((int)(geom.BoundingBox.Volume) == 23913891);
Magic Number,Xbim.Essentials.Tests,Ifc4GeometryTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\Ifc4GeometryTests.cs,IfcTriangulatedFaceSetWithNormalsTest,The following statement contains a magic number: var columnTess = store.Instances[288] as IIfcTriangulatedFaceSet;
Magic Number,Xbim.Essentials.Tests,Ifc4GeometryTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\Ifc4GeometryTests.cs,IfcTriangulatedFaceSetWithNormalsTest,The following statement contains a magic number: Assert.IsTrue((int)(geom.BoundingBox.Volume) == 7680);
Magic Number,Xbim.Essentials.Tests,Ifc4GeometryTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\Ifc4GeometryTests.cs,IfcTriangulatedFaceSetWithColoursTest,The following statement contains a magic number: Assert.IsTrue((int)(geom.BoundingBox.Volume) == 2000000000);
Magic Number,Xbim.Essentials.Tests,Ifc4GeometryTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\Ifc4GeometryTests.cs,IfcTriangulatedFaceSetComplexBinaryTest,The following statement contains a magic number: var triangulatedFaceSet = store.Instances[4373] as IIfcTriangulatedFaceSet;
Magic Number,Xbim.Essentials.Tests,IfcHeaderTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\IfcHeaderTests.cs,ReadPreProcessorTest,The following statement contains a magic number: var surfaceOfLinearExtrusionVersion = new Version(17' 0' 416' 0);
Magic Number,Xbim.Essentials.Tests,IfcHeaderTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\IfcHeaderTests.cs,ReadPreProcessorTest,The following statement contains a magic number: var surfaceOfLinearExtrusionVersion = new Version(17' 0' 416' 0);
Magic Number,Xbim.Essentials.Tests,IfcHeaderTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\IfcHeaderTests.cs,ReadPreProcessorTest,The following statement contains a magic number: Assert.IsTrue(matches[0].Groups.Count == 2' "Should only be two matches");
Magic Number,Xbim.Essentials.Tests,InMemoryInsertionTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\InMemoryInsertionTests.cs,Ifc4InsertCopyTest,The following statement contains a magic number: iModel.InsertCopy(model.Instances[61828]' new XbimInstanceHandleMap(model' iModel)' null' true' true);
Magic Number,Xbim.Essentials.Tests,InterfacesDataRetrieval,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\InterfacesDataRetrieval.cs,EsentDataRetrieval,The following statement contains a magic number: Assert.AreEqual(4' walls.Count());
Magic Number,Xbim.Essentials.Tests,InterfacesDataRetrieval,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\InterfacesDataRetrieval.cs,ShouldBeAbleToReadUnitDimensions,The following statement contains a magic number: var instance = model.Instances[53] as Ifc4.MeasureResource.IfcSIUnit;
Magic Number,Xbim.Essentials.Tests,InterfacesDataRetrieval,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\InterfacesDataRetrieval.cs,ShouldBeAbleToReadUnitDimensions,The following statement contains a magic number: var instance = model.Instances[51] as Ifc2x3.MeasureResource.IfcSIUnit;
Magic Number,Xbim.Essentials.Tests,InterfacesDataRetrieval,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\InterfacesDataRetrieval.cs,Ifc4InterfacesToIfc2X3,The following statement contains a magic number: Assert.AreEqual(4' walls.Count);
Magic Number,Xbim.Essentials.Tests,LinqTest,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\LinqTest.cs,TestingLinqWhere2,The following statement contains a magic number: var telecom = model1.Instances[28] as IIfcTelecomAddress;
Magic Number,Xbim.Essentials.Tests,ListOfListTest,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\ListOfListTest.cs,ReadListOfListFromIfcFile,The following statement contains a magic number: Assert.IsTrue(surface.ControlPointsList.Count==4);
Magic Number,Xbim.Essentials.Tests,ListOfListTest,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\ListOfListTest.cs,ReadListOfListFromIfcFile,The following statement contains a magic number: Assert.IsTrue(cpList.Count == 7);
Magic Number,Xbim.Essentials.Tests,ListOfListTest,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\ListOfListTest.cs,ReadListOfListFromIfcFile,The following statement contains a magic number: Assert.IsTrue(surface.ControlPoints.Count == 4);
Magic Number,Xbim.Essentials.Tests,ListOfListTest,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\ListOfListTest.cs,ReadListOfListFromIfcFile,The following statement contains a magic number: Assert.IsTrue(cpList.Count == 7);
Magic Number,Xbim.Essentials.Tests,ModelFilterTest,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\ModelFilterTest.cs,FileCompare,The following statement contains a magic number: var valuesSame = parts1.Zip(parts2' (a' b) => {                      if (isNumExp.IsMatch(a[0].ToString()) && isNumExp.IsMatch(b[0].ToString()))                      {                          var sA = numExp.Match(a).Value;                          var sB = numExp.Match(b).Value;                            // compare numbers                          var nA = double.Parse(sA' CultureInfo.InvariantCulture);                          var nB = double.Parse(sB' CultureInfo.InvariantCulture);                            var delta = Math.Abs(nA - nB);                          return delta < 1e-6;                      }                      return a == b;                  }).All(v => v);
Magic Number,Xbim.Essentials.Tests,PackedNormalTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\PackedNormalTests.cs,RoundTripTest,The following statement contains a magic number: var tests = new[]              {                  new XbimVector3D(0.0749087609620539' 0.264167604633194' 0.961563390626687)'                  new XbimVector3D(-0.0535755113215756' 0.316639902069201' 0.947031592400295)'                  new XbimVector3D(-0.0403690470743153' -0.0845001599207948' 0.995605375142015)'                  new XbimVector3D(-0.170389413996118' 0.321003309980549' 0.931624560957681)              };
Magic Number,Xbim.Essentials.Tests,PackedNormalTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\PackedNormalTests.cs,RoundTripTest,The following statement contains a magic number: var tests = new[]              {                  new XbimVector3D(0.0749087609620539' 0.264167604633194' 0.961563390626687)'                  new XbimVector3D(-0.0535755113215756' 0.316639902069201' 0.947031592400295)'                  new XbimVector3D(-0.0403690470743153' -0.0845001599207948' 0.995605375142015)'                  new XbimVector3D(-0.170389413996118' 0.321003309980549' 0.931624560957681)              };
Magic Number,Xbim.Essentials.Tests,PackedNormalTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\PackedNormalTests.cs,RoundTripTest,The following statement contains a magic number: var tests = new[]              {                  new XbimVector3D(0.0749087609620539' 0.264167604633194' 0.961563390626687)'                  new XbimVector3D(-0.0535755113215756' 0.316639902069201' 0.947031592400295)'                  new XbimVector3D(-0.0403690470743153' -0.0845001599207948' 0.995605375142015)'                  new XbimVector3D(-0.170389413996118' 0.321003309980549' 0.931624560957681)              };
Magic Number,Xbim.Essentials.Tests,PackedNormalTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\PackedNormalTests.cs,RoundTripTest,The following statement contains a magic number: var tests = new[]              {                  new XbimVector3D(0.0749087609620539' 0.264167604633194' 0.961563390626687)'                  new XbimVector3D(-0.0535755113215756' 0.316639902069201' 0.947031592400295)'                  new XbimVector3D(-0.0403690470743153' -0.0845001599207948' 0.995605375142015)'                  new XbimVector3D(-0.170389413996118' 0.321003309980549' 0.931624560957681)              };
Magic Number,Xbim.Essentials.Tests,PackedNormalTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\PackedNormalTests.cs,RoundTripTest,The following statement contains a magic number: var tests = new[]              {                  new XbimVector3D(0.0749087609620539' 0.264167604633194' 0.961563390626687)'                  new XbimVector3D(-0.0535755113215756' 0.316639902069201' 0.947031592400295)'                  new XbimVector3D(-0.0403690470743153' -0.0845001599207948' 0.995605375142015)'                  new XbimVector3D(-0.170389413996118' 0.321003309980549' 0.931624560957681)              };
Magic Number,Xbim.Essentials.Tests,PackedNormalTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\PackedNormalTests.cs,RoundTripTest,The following statement contains a magic number: var tests = new[]              {                  new XbimVector3D(0.0749087609620539' 0.264167604633194' 0.961563390626687)'                  new XbimVector3D(-0.0535755113215756' 0.316639902069201' 0.947031592400295)'                  new XbimVector3D(-0.0403690470743153' -0.0845001599207948' 0.995605375142015)'                  new XbimVector3D(-0.170389413996118' 0.321003309980549' 0.931624560957681)              };
Magic Number,Xbim.Essentials.Tests,PackedNormalTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\PackedNormalTests.cs,RoundTripTest,The following statement contains a magic number: var tests = new[]              {                  new XbimVector3D(0.0749087609620539' 0.264167604633194' 0.961563390626687)'                  new XbimVector3D(-0.0535755113215756' 0.316639902069201' 0.947031592400295)'                  new XbimVector3D(-0.0403690470743153' -0.0845001599207948' 0.995605375142015)'                  new XbimVector3D(-0.170389413996118' 0.321003309980549' 0.931624560957681)              };
Magic Number,Xbim.Essentials.Tests,PackedNormalTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\PackedNormalTests.cs,RoundTripTest,The following statement contains a magic number: var tests = new[]              {                  new XbimVector3D(0.0749087609620539' 0.264167604633194' 0.961563390626687)'                  new XbimVector3D(-0.0535755113215756' 0.316639902069201' 0.947031592400295)'                  new XbimVector3D(-0.0403690470743153' -0.0845001599207948' 0.995605375142015)'                  new XbimVector3D(-0.170389413996118' 0.321003309980549' 0.931624560957681)              };
Magic Number,Xbim.Essentials.Tests,PackedNormalTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\PackedNormalTests.cs,RoundTripTest,The following statement contains a magic number: var tests = new[]              {                  new XbimVector3D(0.0749087609620539' 0.264167604633194' 0.961563390626687)'                  new XbimVector3D(-0.0535755113215756' 0.316639902069201' 0.947031592400295)'                  new XbimVector3D(-0.0403690470743153' -0.0845001599207948' 0.995605375142015)'                  new XbimVector3D(-0.170389413996118' 0.321003309980549' 0.931624560957681)              };
Magic Number,Xbim.Essentials.Tests,PackedNormalTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\PackedNormalTests.cs,RoundTripTest,The following statement contains a magic number: var tests = new[]              {                  new XbimVector3D(0.0749087609620539' 0.264167604633194' 0.961563390626687)'                  new XbimVector3D(-0.0535755113215756' 0.316639902069201' 0.947031592400295)'                  new XbimVector3D(-0.0403690470743153' -0.0845001599207948' 0.995605375142015)'                  new XbimVector3D(-0.170389413996118' 0.321003309980549' 0.931624560957681)              };
Magic Number,Xbim.Essentials.Tests,PackedNormalTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\PackedNormalTests.cs,RoundTripTest,The following statement contains a magic number: var tests = new[]              {                  new XbimVector3D(0.0749087609620539' 0.264167604633194' 0.961563390626687)'                  new XbimVector3D(-0.0535755113215756' 0.316639902069201' 0.947031592400295)'                  new XbimVector3D(-0.0403690470743153' -0.0845001599207948' 0.995605375142015)'                  new XbimVector3D(-0.170389413996118' 0.321003309980549' 0.931624560957681)              };
Magic Number,Xbim.Essentials.Tests,PackedNormalTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\PackedNormalTests.cs,RoundTripTest,The following statement contains a magic number: var tests = new[]              {                  new XbimVector3D(0.0749087609620539' 0.264167604633194' 0.961563390626687)'                  new XbimVector3D(-0.0535755113215756' 0.316639902069201' 0.947031592400295)'                  new XbimVector3D(-0.0403690470743153' -0.0845001599207948' 0.995605375142015)'                  new XbimVector3D(-0.170389413996118' 0.321003309980549' 0.931624560957681)              };
Magic Number,Xbim.Essentials.Tests,PackedNormalTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\PackedNormalTests.cs,RoundTripTest,The following statement contains a magic number: Debug.WriteLine("vector: {0}' angle: {1:F3}"' vec' angle*180.0/Math.PI);
Magic Number,Xbim.Essentials.Tests,PackedNormalTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\PackedNormalTests.cs,RoundTripTest,The following statement contains a magic number: angle > 0.1
Magic Number,Xbim.Essentials.Tests,PackedNormalTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\PackedNormalTests.cs,RoundTripTest,The following statement contains a magic number: Assert.IsTrue(angle < 0.13);
Magic Number,Xbim.Essentials.Tests,ParsingTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\ParsingTests.cs,ToleratesFileWithAbstractClass,The following statement contains a magic number: var inst = store.Instances[1240086];
Magic Number,Xbim.Essentials.Tests,ParsingTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\ParsingTests.cs,ToleratesFileWithAbstractClass,The following statement contains a magic number: var inst2 = store.Instances[1240084];
Magic Number,Xbim.Essentials.Tests,ParsingTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\ParsingTests.cs,ToleratesFileWithAbstractClass,The following statement contains a magic number: var inst = store.Instances[1240086];
Magic Number,Xbim.Essentials.Tests,ParsingTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\ParsingTests.cs,ToleratesFileWithAbstractClass,The following statement contains a magic number: var inst2 = store.Instances[1240084];
Magic Number,Xbim.Essentials.Tests,ParsingTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\ParsingTests.cs,ToleratesFileWithInvalidTypeInList,The following statement contains a magic number: var inst = store.Instances[582800] as IIfcBuildingStorey;
Magic Number,Xbim.Essentials.Tests,ParsingTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\ParsingTests.cs,ToleratesFileWithInvalidTypeInList,The following statement contains a magic number: Assert.AreEqual(items.Count()' 2' "Should find two items");
Magic Number,Xbim.Essentials.Tests,ParsingTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\ParsingTests.cs,ToleratesFileWithInvalidEnumString,The following statement contains a magic number: var role = store.Instances[2] as IIfcActorRole;
Magic Number,Xbim.Essentials.Tests,ParsingTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\ParsingTests.cs,AcceptAFormallyIllegalFile,The following statement contains a magic number: var point = store.Instances[2] as IIfcCartesianPoint;
Magic Number,Xbim.Essentials.Tests,ParsingTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\ParsingTests.cs,DoubleBackSlashName,The following statement contains a magic number: var mat1 = (Ifc2x3.MaterialResource.IfcMaterial)store.Instances[417];
Magic Number,Xbim.Essentials.Tests,ParsingTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\ParsingTests.cs,DoubleBackSlashName,The following statement contains a magic number: var mat2 = (Ifc2x3.MaterialResource.IfcMaterial)store.Instances[418];
Magic Number,Xbim.Essentials.Tests,ParsingTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\ParsingTests.cs,DoubleBackSlashName,The following statement contains a magic number: var acc = (Ifc2x3.MaterialResource.IfcMaterial)store.Instances[419];
Magic Number,Xbim.Essentials.Tests,ParsingTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\ParsingTests.cs,DoubleBackSlashName,The following statement contains a magic number: acc = (Ifc2x3.MaterialResource.IfcMaterial)store.Instances[420];
Magic Number,Xbim.Essentials.Tests,ParsingTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\ParsingTests.cs,DoubleBackSlashName,The following statement contains a magic number: acc = (Ifc2x3.MaterialResource.IfcMaterial)store.Instances[421];
Magic Number,Xbim.Essentials.Tests,ParsingTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\ParsingTests.cs,DoubleBackSlashName,The following statement contains a magic number: var beam = (IfcBeam)store.Instances[432];
Magic Number,Xbim.Essentials.Tests,ParsingTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\ParsingTests.cs,IfcStoreSaveAndOpenIfcXml4Test,The following statement contains a magic number: Assert.IsTrue(percent == 100);
Magic Number,Xbim.Essentials.Tests,ParsingTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\ParsingTests.cs,IfcStoreTransactionTest,The following statement contains a magic number: Assert.AreEqual(6' diffCount' "Unexpected number of elements created for new door.");
Magic Number,Xbim.Essentials.Tests,ParsingTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\ParsingTests.cs,IfcStoreTransactionTest,The following statement contains a magic number: Assert.IsTrue(ifcStore.Instances.Count == count + 6);
Magic Number,Xbim.Essentials.Tests,PartialClassesTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\PartialClassesTests.cs,PartialMultiSchemaOk,The following statement contains a magic number: var instance = model.Instances[142] as IIfcWall;
Magic Number,Xbim.Essentials.Tests,Pure4Tests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\Pure4Tests.cs,CreateDataWithInitializers,The following statement contains a magic number: create.RelDefinesByProperties(r =>              {                  r.RelatedObjects.Add(wall);                  r.RelatingPropertyDefinition = create.PropertySet(ps =>                  {                      ps.HasProperties.AddRange(new[]                  {                              create.PropertySingleValue(p =>                              {                                  p.Name = "Single value";                                  p.NominalValue = new IfcLabel("Value of the single value property");                              })'                              create.PropertySingleValue(p =>                              {                                  p.Name = "Single length";                                  p.NominalValue = new IfcLengthMeasure(15.5);                              })'                              create.PropertySingleValue(p =>                              {                                  p.Name = "Single boolean";                                  p.NominalValue = new IfcBoolean(true);                              })'                      });                  });              });
Magic Number,Xbim.Essentials.Tests,ReadIfc4Test,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\ReadIFC4Test.cs,ReadingOfNestedLists,The following statement contains a magic number: Assert.AreEqual(3' pl.CoordList.Count);
Magic Number,Xbim.Essentials.Tests,ReadIfc4Test,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\ReadIFC4Test.cs,ReadingOfNestedLists,The following statement contains a magic number: Assert.AreEqual(9' pl.CoordList.SelectMany(c => c).Count());
Magic Number,Xbim.Essentials.Tests,SearchTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\SearchTests.cs,AssertModel,The following statement contains a magic number: Assert.AreEqual(5' model.Instances.OfType<IfcWall>().Count());
Magic Number,Xbim.Essentials.Tests,SearchTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\SearchTests.cs,AssertModel,The following statement contains a magic number: Assert.AreEqual(5' model.Instances.OfType<IIfcWall>().Count());
Magic Number,Xbim.Essentials.Tests,SearchTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\SearchTests.cs,AssertModel,The following statement contains a magic number: Assert.AreEqual(5' model.Instances.Where<IfcWall>(w => true).Count());
Magic Number,Xbim.Essentials.Tests,SearchTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\SearchTests.cs,AssertModel,The following statement contains a magic number: Assert.AreEqual(5' model.Instances.Where<IIfcWall>(w => true).Count());
Magic Number,Xbim.Essentials.Tests,UnitNameTest,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\UnitNameTest.cs,NamedUnitTest2X3,The following statement contains a magic number: unit.Dimensions.LengthExponent = 2;
Magic Number,Xbim.Essentials.Tests,UnitNameTest,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\UnitNameTest.cs,NamedUnitTest4,The following statement contains a magic number: unit.Dimensions.LengthExponent = 2;
Magic Number,Xbim.Essentials.Tests,ValidationTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\ValidationTests.cs,ValidatesEntity,The following statement contains a magic number: var e2 = v.Validate(model.Instances[202]);
Magic Number,Xbim.Essentials.Tests,ValidationTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\ValidationTests.cs,ValidatesSpecificElements2X4,The following statement contains a magic number: var e2 = v.Validate(model.Instances[9]);
Magic Number,Xbim.Essentials.Tests,ValidationTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\ValidationTests.cs,ValidatesSpecificElements2X3,The following statement contains a magic number: var item = model.Instances[100] as IfcCoilType;
Magic Number,Xbim.Essentials.Tests,ValidationTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\ValidationTests.cs,ValidatesSpecificElements2X3,The following statement contains a magic number: e2 = v.Validate(model.Instances[9]);
Magic Number,Xbim.Essentials.Tests,WexBIMTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\WexBIMTests.cs,ReadAndWriteWexBimFile,The following statement contains a magic number: var wall = m.Instances[1229] as IIfcWall;
Magic Number,Xbim.Essentials.Tests,WexBIMTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\WexBIMTests.cs,ReadAndWriteWexBimFile,The following statement contains a magic number: var brep = m.Instances[1213] as IIfcFacetedBrep;
Magic Number,Xbim.Essentials.Tests,WexBIMTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\WexBIMTests.cs,ReadAndWriteWexBimFile,The following statement contains a magic number: var repContext = m.Instances[100] as IIfcGeometricRepresentationContext;
Magic Number,Xbim.Essentials.Tests,WexBIMTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\WexBIMTests.cs,ReadAndWriteWexBimFile,The following statement contains a magic number: var boundsBytes = br.ReadBytes(6 * sizeof(float));
Magic Number,Xbim.Essentials.Tests,WexBIMTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\WexBIMTests.cs,ReadAndWriteWexBimFile,The following statement contains a magic number: var boxBytes = br.ReadBytes(6 * sizeof(float));
Magic Number,Xbim.Essentials.Tests,WexBIMTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\WexBIMTests.cs,ReadAndWriteWexBimFile,The following statement contains a magic number: var transform = XbimMatrix3D.FromArray(br.ReadBytes(sizeof(double) * 16));
Magic Number,Xbim.Essentials.Tests,XbimColourTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\XbimColourTests.cs,CanPersistColour,The following statement contains a magic number: var c = new XbimColour(0.3f' 0.4f' 0.5f' 0.6f);
Magic Number,Xbim.Essentials.Tests,XbimColourTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\XbimColourTests.cs,CanPersistColour,The following statement contains a magic number: var c = new XbimColour(0.3f' 0.4f' 0.5f' 0.6f);
Magic Number,Xbim.Essentials.Tests,XbimColourTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\XbimColourTests.cs,CanPersistColour,The following statement contains a magic number: var c = new XbimColour(0.3f' 0.4f' 0.5f' 0.6f);
Magic Number,Xbim.Essentials.Tests,XbimColourTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\XbimColourTests.cs,CanPersistColour,The following statement contains a magic number: var c = new XbimColour(0.3f' 0.4f' 0.5f' 0.6f);
Magic Number,Xbim.Essentials.Tests,XmlTests2X3,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\XmlTests2x3.cs,Ifc2X3XMLSerialization,The following statement contains a magic number: Assert.AreEqual(4' esent.Instances.CountOf<IfcWall>());
Magic Number,Xbim.Essentials.Tests,XmlTests4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\XmlTests4.cs,ListSerializationTests,The following statement contains a magic number: Assert.AreEqual(3' storeys.Count);
Magic Number,Xbim.Essentials.Tests,XmlTests4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\XmlTests4.cs,AttributesSerialization,The following statement contains a magic number: site.RefElevation = 100.0;
Magic Number,Xbim.Essentials.Tests,XmlTests4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\XmlTests4.cs,AttributesSerialization,The following statement contains a magic number: site.RefLatitude = new List<long> { 1' 2' 3' 4 };
Magic Number,Xbim.Essentials.Tests,XmlTests4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\XmlTests4.cs,AttributesSerialization,The following statement contains a magic number: site.RefLatitude = new List<long> { 1' 2' 3' 4 };
Magic Number,Xbim.Essentials.Tests,XmlTests4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\XmlTests4.cs,AttributesSerialization,The following statement contains a magic number: site.RefLatitude = new List<long> { 1' 2' 3' 4 };
Magic Number,Xbim.Essentials.Tests,XmlTests4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\XmlTests4.cs,SelectTypeSerialization,The following statement contains a magic number: pInteger.NominalValue = new IfcInteger(5);
Magic Number,Xbim.Essentials.Tests,XmlTests4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\XmlTests4.cs,SelectTypeSerialization,The following statement contains a magic number: pDouble.NominalValue = new IfcReal(5);
Magic Number,Xbim.Essentials.Tests,XmlTests4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\XmlTests4.cs,PropertySetDefinitionSetSerialization,The following statement contains a magic number: Assert.IsTrue(vals.Count == 3);
Magic Number,Xbim.Essentials.Tests,XmlTests4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\XmlTests4.cs,RectangularListSerialization,The following statement contains a magic number: var a3 = pl.CoordList.GetAt(2);
Magic Number,Xbim.Essentials.Tests,XmlTests4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\XmlTests4.cs,RectangularListSerialization,The following statement contains a magic number: a1.Add(2.0);
Magic Number,Xbim.Essentials.Tests,XmlTests4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\XmlTests4.cs,RectangularListSerialization,The following statement contains a magic number: a1.Add(3.0);
Magic Number,Xbim.Essentials.Tests,XmlTests4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\XmlTests4.cs,RectangularListSerialization,The following statement contains a magic number: a2.Add(4.0);
Magic Number,Xbim.Essentials.Tests,XmlTests4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\XmlTests4.cs,RectangularListSerialization,The following statement contains a magic number: a2.Add(5.0);
Magic Number,Xbim.Essentials.Tests,XmlTests4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\XmlTests4.cs,RectangularListSerialization,The following statement contains a magic number: a2.Add(6.0);
Magic Number,Xbim.Essentials.Tests,XmlTests4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\XmlTests4.cs,RectangularListSerialization,The following statement contains a magic number: a3.Add(7.0);
Magic Number,Xbim.Essentials.Tests,XmlTests4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\XmlTests4.cs,RectangularListSerialization,The following statement contains a magic number: a3.Add(8.0);
Magic Number,Xbim.Essentials.Tests,XmlTests4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\XmlTests4.cs,RectangularListSerialization,The following statement contains a magic number: a3.Add(9.0);
Magic Number,Xbim.Essentials.Tests,XmlTests4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\XmlTests4.cs,RectangularListSerialization,The following statement contains a magic number: Assert.AreEqual(3' list.CoordList.Count);
Magic Number,Xbim.Essentials.Tests,XmlTests4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\XmlTests4.cs,NonRectangularListSerialization,The following statement contains a magic number: var a3 = slc.Locations.GetAt(2);
Magic Number,Xbim.Essentials.Tests,XmlTests4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\XmlTests4.cs,NonRectangularListSerialization,The following statement contains a magic number: a1.Add(2.0);
Magic Number,Xbim.Essentials.Tests,XmlTests4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\XmlTests4.cs,NonRectangularListSerialization,The following statement contains a magic number: a2.Add(4.0);
Magic Number,Xbim.Essentials.Tests,XmlTests4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\XmlTests4.cs,NonRectangularListSerialization,The following statement contains a magic number: a2.Add(5.0);
Magic Number,Xbim.Essentials.Tests,XmlTests4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\XmlTests4.cs,NonRectangularListSerialization,The following statement contains a magic number: a3.Add(7.0);
Magic Number,Xbim.Essentials.Tests,XmlTests4,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\XmlTests4.cs,NonRectangularListSerialization,The following statement contains a magic number: a3.Add(8.0);
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,IfcStoreRegionWorldCoordTest,The following statement contains a magic number: XbimMatrix3D WorldCoord = new XbimMatrix3D(-0.228171504575237' -0.973620955248947' 0' 0' 0.973620955248947' -0.228171504575237' 0' 0' 0' 0' 1' 0' 543188712' 259041729' 16000' 1);
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,IfcStoreRegionWorldCoordTest,The following statement contains a magic number: XbimMatrix3D WorldCoord = new XbimMatrix3D(-0.228171504575237' -0.973620955248947' 0' 0' 0.973620955248947' -0.228171504575237' 0' 0' 0' 0' 1' 0' 543188712' 259041729' 16000' 1);
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,IfcStoreRegionWorldCoordTest,The following statement contains a magic number: XbimMatrix3D WorldCoord = new XbimMatrix3D(-0.228171504575237' -0.973620955248947' 0' 0' 0.973620955248947' -0.228171504575237' 0' 0' 0' 0' 1' 0' 543188712' 259041729' 16000' 1);
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,IfcStoreRegionWorldCoordTest,The following statement contains a magic number: XbimMatrix3D WorldCoord = new XbimMatrix3D(-0.228171504575237' -0.973620955248947' 0' 0' 0.973620955248947' -0.228171504575237' 0' 0' 0' 0' 1' 0' 543188712' 259041729' 16000' 1);
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,IfcStoreRegionWorldCoordTest,The following statement contains a magic number: XbimMatrix3D WorldCoord = new XbimMatrix3D(-0.228171504575237' -0.973620955248947' 0' 0' 0.973620955248947' -0.228171504575237' 0' 0' 0' 0' 1' 0' 543188712' 259041729' 16000' 1);
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,IfcStoreRegionWorldCoordTest,The following statement contains a magic number: XbimMatrix3D WorldCoord = new XbimMatrix3D(-0.228171504575237' -0.973620955248947' 0' 0' 0.973620955248947' -0.228171504575237' 0' 0' 0' 0' 1' 0' 543188712' 259041729' 16000' 1);
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,IfcStoreRegionWorldCoordTest,The following statement contains a magic number: XbimMatrix3D WorldCoord = new XbimMatrix3D(-0.228171504575237' -0.973620955248947' 0' 0' 0.973620955248947' -0.228171504575237' 0' 0' 0' 0' 1' 0' 543188712' 259041729' 16000' 1);
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,IfcStoreRegionWorldCoordTest,The following statement contains a magic number: regions.ContextLabel = 50;
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,IfcStoreRegionWorldCoordTest,The following statement contains a magic number: var bb = new XbimRect3D(new XbimPoint3D(1' 1' 1)' new XbimVector3D(10' 20' 30));
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,IfcStoreRegionWorldCoordTest,The following statement contains a magic number: var bb = new XbimRect3D(new XbimPoint3D(1' 1' 1)' new XbimVector3D(10' 20' 30));
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,IfcStoreRegionWorldCoordTest,The following statement contains a magic number: var bb = new XbimRect3D(new XbimPoint3D(1' 1' 1)' new XbimVector3D(10' 20' 30));
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,IfcStoreRegionWorldCoordTest,The following statement contains a magic number: regions.Add(new XbimRegion("region1"' bb' 100' WorldCoord));
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,EsentGeometryStoreReopenAddTest,The following statement contains a magic number: var shapeInstance = new XbimShapeInstance()                      {                          ShapeGeometryLabel = shapeGeomLabel'                          StyleLabel = 5'                          RepresentationContext = 50                        };
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,EsentGeometryStoreReopenAddTest,The following statement contains a magic number: var shapeInstance = new XbimShapeInstance()                      {                          ShapeGeometryLabel = shapeGeomLabel'                          StyleLabel = 5'                          RepresentationContext = 50                        };
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,EsentGeometryStoreReopenAddTest,The following statement contains a magic number: var regions = new XbimRegionCollection                      {                          ContextLabel = 50                      };
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,EsentGeometryStoreReopenAddTest,The following statement contains a magic number: var bb = new XbimRect3D(new XbimPoint3D(1' 1' 1)' new XbimVector3D(10' 20' 30));
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,EsentGeometryStoreReopenAddTest,The following statement contains a magic number: var bb = new XbimRect3D(new XbimPoint3D(1' 1' 1)' new XbimVector3D(10' 20' 30));
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,EsentGeometryStoreReopenAddTest,The following statement contains a magic number: var bb = new XbimRect3D(new XbimPoint3D(1' 1' 1)' new XbimVector3D(10' 20' 30));
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,EsentGeometryStoreReopenAddTest,The following statement contains a magic number: regions.Add(new XbimRegion("region1"' bb' 100' XbimMatrix3D.Identity));
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,IfcStoreGeometryStoreAddTest,The following statement contains a magic number: var shapeInstance = new XbimShapeInstance()                      {                          ShapeGeometryLabel = shapeGeomLabel'                          StyleLabel = 5'                          RepresentationContext = 50                        };
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,IfcStoreGeometryStoreAddTest,The following statement contains a magic number: var shapeInstance = new XbimShapeInstance()                      {                          ShapeGeometryLabel = shapeGeomLabel'                          StyleLabel = 5'                          RepresentationContext = 50                        };
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,IfcStoreGeometryStoreAddTest,The following statement contains a magic number: regions.ContextLabel = 50;
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,IfcStoreGeometryStoreAddTest,The following statement contains a magic number: var bb = new XbimRect3D(new XbimPoint3D(1' 1' 1)' new XbimVector3D(10' 20' 30));
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,IfcStoreGeometryStoreAddTest,The following statement contains a magic number: var bb = new XbimRect3D(new XbimPoint3D(1' 1' 1)' new XbimVector3D(10' 20' 30));
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,IfcStoreGeometryStoreAddTest,The following statement contains a magic number: var bb = new XbimRect3D(new XbimPoint3D(1' 1' 1)' new XbimVector3D(10' 20' 30));
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,IfcStoreGeometryStoreAddTest,The following statement contains a magic number: regions.Add(new XbimRegion("region1"' bb' 100' XbimMatrix3D.Identity));
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,IfcStoreGeometryStoreAddTest,The following statement contains a magic number: Assert.IsTrue(reader.ContextRegions.First().ContextLabel == 50);
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,ResourceReleaseTest,The following statement contains a magic number: var shapeInstance = new XbimShapeInstance()                      {                          ShapeGeometryLabel = shapeGeomLabel'                          StyleLabel = 5'                          RepresentationContext = 50                        };
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,ResourceReleaseTest,The following statement contains a magic number: var shapeInstance = new XbimShapeInstance()                      {                          ShapeGeometryLabel = shapeGeomLabel'                          StyleLabel = 5'                          RepresentationContext = 50                        };
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,ResourceReleaseTest,The following statement contains a magic number: regions.ContextLabel = 50;
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,ResourceReleaseTest,The following statement contains a magic number: var bb = new XbimRect3D(new XbimPoint3D(1' 1' 1)' new XbimVector3D(10' 20' 30));
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,ResourceReleaseTest,The following statement contains a magic number: var bb = new XbimRect3D(new XbimPoint3D(1' 1' 1)' new XbimVector3D(10' 20' 30));
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,ResourceReleaseTest,The following statement contains a magic number: var bb = new XbimRect3D(new XbimPoint3D(1' 1' 1)' new XbimVector3D(10' 20' 30));
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,ResourceReleaseTest,The following statement contains a magic number: regions.Add(new XbimRegion("region1"' bb' 100' XbimMatrix3D.Identity));
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,ResourceReleaseTest,The following statement contains a magic number: Thread.SpinWait(200);
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,EsentGeometryStoreBatchTest,The following statement contains a magic number: i < 100
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,EsentGeometryStoreBatchTest,The following statement contains a magic number: i < 100
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,EsentGeometryStoreBatchTest,The following statement contains a magic number: Assert.IsTrue(instanceId == i + 101);
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,EsentGeometryStoreBatchTest,The following statement contains a magic number: i < 100
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,EsentGeometryStoreBatchTest,The following statement contains a magic number: Assert.IsTrue(instanceId == i + 201);
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,EsentGeometryStoreBatchTest,The following statement contains a magic number: i < 100
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,EsentGeometryStoreBatchTest,The following statement contains a magic number: var regions = new XbimRegionCollection { ContextLabel = 50 };
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,EsentGeometryStoreBatchTest,The following statement contains a magic number: regions.Add(new XbimRegion("region1"' XbimRect3D.Empty' 100' XbimMatrix3D.Identity));
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,EsentGeometryStoreMultiThreadTest,The following statement contains a magic number: Parallel.For(0' 100' i =>                      {                          //ADD A GEOMETRY SHAPE                          var geomData = new XbimShapeGeometry()                          {                              IfcShapeLabel = 1'                              Format = XbimGeometryType.BoundingBox'                              GeometryHash = 0'                              LOD = XbimLOD.LOD100'                              ReferenceCount = 1'                              ShapeData = "2123"'                              BoundingBox = XbimRect3D.Empty                          };                          var shapeInstance = new XbimShapeInstance()                          {                              ShapeGeometryLabel = i + 1                          };                          var shapeGeomLabel = txn.AddShapeGeometry(geomData);                          var instanceId = txn.AddShapeInstance(shapeInstance' shapeGeomLabel);                      });
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,EsentGeometryStoreMultiThreadTest,The following statement contains a magic number: Parallel.For(0' 100' i =>                      {                          //ADD A SHAPE INSTANCE                          var shapeInstance = new XbimShapeInstance()                          {                              ShapeGeometryLabel = i + 1                          };                            var instanceId = txn.AddShapeInstance(shapeInstance' i + 1);                        });
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,EsentGeometryStoreMultiThreadTest,The following statement contains a magic number: var regions = new XbimRegionCollection { ContextLabel = 50 };
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,EsentGeometryStoreMultiThreadTest,The following statement contains a magic number: regions.Add(new XbimRegion("region1"' XbimRect3D.Empty' 100' XbimMatrix3D.Identity));
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,InMemoryGeometryStoreMultiThreadTest,The following statement contains a magic number: Parallel.For(0' 100' i =>                      {                          //ADD A GEOMETRY SHAPE                          var geomData = new XbimShapeGeometry()                          {                              IfcShapeLabel = 1'                              Format = XbimGeometryType.BoundingBox'                              GeometryHash = 0'                              LOD = XbimLOD.LOD100'                              ReferenceCount = 1'                              ShapeData = "2123"'                              BoundingBox = XbimRect3D.Empty                          };                          var shapeGeomLabel = txn.AddShapeGeometry(geomData);                      });
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,InMemoryGeometryStoreMultiThreadTest,The following statement contains a magic number: Parallel.For(0' 100' i =>                      {                          //ADD A SHAPE INSTANCE                          var shapeInstance = new XbimShapeInstance()                          {                              ShapeGeometryLabel = i + 1                          };                            var instanceId = txn.AddShapeInstance(shapeInstance' i + 1);                        });
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,InMemoryGeometryStoreMultiThreadTest,The following statement contains a magic number: var regions = new XbimRegionCollection { ContextLabel = 50 };
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,InMemoryGeometryStoreMultiThreadTest,The following statement contains a magic number: regions.Add(new XbimRegion("region1"' XbimRect3D.Empty' 100' XbimMatrix3D.Identity));
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,IfcStoreGeometryGeometryClearTest,The following statement contains a magic number: var regions = new XbimRegionCollection { ContextLabel = 50 };
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,IfcStoreGeometryGeometryClearTest,The following statement contains a magic number: regions.Add(new XbimRegion("region1"' XbimRect3D.Empty' 100' XbimMatrix3D.Identity));
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,IfcStoreGeometryGeometryClearTest,The following statement contains a magic number: var regions = new XbimRegionCollection { ContextLabel = 50 };
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,IfcStoreGeometryGeometryClearTest,The following statement contains a magic number: regions.Add(new XbimRegion("region1"' XbimRect3D.Empty' 100' XbimMatrix3D.Identity));
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,EsentGeometryStoreReadTest,The following statement contains a magic number: var shapeInstance = new XbimShapeInstance()                      {                          ShapeGeometryLabel = shapeGeomLabel'                          RepresentationContext = 50                      };
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,EsentGeometryStoreReadTest,The following statement contains a magic number: var regions = new XbimRegionCollection { ContextLabel = 50 };
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,EsentGeometryStoreReadTest,The following statement contains a magic number: regions.Add(new XbimRegion("region1"' XbimRect3D.Empty' 100' XbimMatrix3D.Identity));
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,EsentGeometryStoreReadTest,The following statement contains a magic number: regions = new XbimRegionCollection { ContextLabel = 51 };
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,EsentGeometryStoreReadTest,The following statement contains a magic number: regions.Add(new XbimRegion("region2"' XbimRect3D.Empty' 100' XbimMatrix3D.Identity));
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,EsentGeometryStoreReadTest,The following statement contains a magic number: Assert.IsTrue(reader.ContextRegions.Count() == 2' "Incorrect number of regions retrieved");
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,EsentGeometryStoreReadTest,The following statement contains a magic number: Assert.IsTrue(regionsList[i].ContextLabel == 50 + i);
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,EsentGeometryStoreReadTest,The following statement contains a magic number: Assert.IsTrue(contextIds[i] == 50 + i);
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,EsentGeometryStoreReadTest,The following statement contains a magic number: Assert.IsTrue(reader.ShapeInstances.First().RepresentationContext == 50);
Magic Number,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,EsentGeometryStoreReadTest,The following statement contains a magic number: Assert.IsTrue(reader.ShapeInstancesOfContext(50).Count() == 1);
Magic Number,Xbim.IO.Tests,TessellatorTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\TessellatorTests.cs,Test_PolygonalFaceSet_Tessellation,The following statement contains a magic number: Assert.AreEqual(8000000000000' shapeGeom.BoundingBox.Volume);
Magic Number,Xbim.IO.Tests,TessellatorTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\TessellatorTests.cs,TestBoundingBoxSize,The following statement contains a magic number: var shape = model.Instances[1192] as IIfcGeometricRepresentationItem;
Magic Number,Xbim.IO.Tests,TessellatorTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\TessellatorTests.cs,TestPnSize_Add2_Support,The following statement contains a magic number: var shape = model.Instances[48] as IIfcGeometricRepresentationItem;
Magic Number,Xbim.IfcCore.UnitTests,ModelReadingTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\ModelReadingTests.cs,OpenReadModelFactorPrecisionTest,The following statement contains a magic number: Assert.IsTrue(mm.ModelFactors.Precision == 0.01);
Magic Number,Xbim.IfcCore.UnitTests,ModelReadingTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\ModelReadingTests.cs,OpenReadIfc2x3StepFormatTest,The following statement contains a magic number: Assert.IsTrue(mm.Instances.Count == 579);
Magic Number,Xbim.IfcCore.UnitTests,ModelReadingTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\ModelReadingTests.cs,OpenReadStepFormatTest,The following statement contains a magic number: Assert.IsTrue(mm.Instances.Count == 579);
Magic Number,Xbim.IfcCore.UnitTests,ModelReadingTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\ModelReadingTests.cs,OpenReadIfc4StepFormatTest,The following statement contains a magic number: Assert.IsTrue(mm.Instances.Count == 52);
Magic Number,Xbim.IfcCore.UnitTests,ModelReadingTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\ModelReadingTests.cs,OpenReadIfc2x3StepZipFormatTest,The following statement contains a magic number: Assert.IsTrue(mm.Instances.Count == 579);
Magic Number,Xbim.IfcCore.UnitTests,ModelReadingTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\ModelReadingTests.cs,OpenReadIfc4StepZipFormatTest,The following statement contains a magic number: Assert.IsTrue(mm.Instances.Count == 52);
Magic Number,Xbim.IfcCore.UnitTests,ModelReadingTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\ModelReadingTests.cs,OpenReadIfc4XmlZipFormatTest,The following statement contains a magic number: Assert.AreEqual(163' mm.Instances.Count);
Magic Number,Xbim.IfcCore.UnitTests,ModelReadingTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\ModelReadingTests.cs,OpenReadIfc2x3XmlFormatTest,The following statement contains a magic number: Assert.IsTrue(mm.Instances.Count == 579);
Duplicate Code,Xbim.IO.Tests,GeometryStoreTests,D:\research\architectureSmells\repos\xBimTeam_XbimEssentials\Tests\GeometryStoreTests.cs,IfcStoreGeometryGeometryClearTest,The method contains a code clone-set at the following line numbers (starting from the method definition): ((8' 27)' (41' 60))
