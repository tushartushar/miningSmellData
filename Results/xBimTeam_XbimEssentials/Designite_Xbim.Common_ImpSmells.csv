Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Xbim.Common.Metadata,ExpressMetaData,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Metadata\ExpressMetaData.cs,ExpressMetaData,Cyclomatic complexity of the method is 9
Complex Method,Xbim.Common.Metadata,ExpressType,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Metadata\ExpressType.cs,ExpressType,Cyclomatic complexity of the method is 15
Long Parameter List,Xbim.Common.Collections,ExtendedSingleSet<TInner;TOuter>,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Collections\ExtendedSingleSet.cs,ExtendedSingleSet,The method has 5 parameters. Parameters: getter' setter' extended' toOut' toIn
Long Parameter List,Xbim.Common,PersistEntity,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\PersistEntity.cs,SetValue,The method has 5 parameters. Parameters: setter' oldValue' newValue' notifyPropertyName' propertyOrder
Long Parameter List,Xbim.Common,PlaceboTransaction,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\PlaceboTransaction.cs,DoReversibleAction,The method has 5 parameters. Parameters: doAction' undoAction' entity' changeType' property
Long Parameter List,Xbim.Common,EntityAttributeAttribute,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Attributes.cs,EntityAttributeAttribute,The method has 7 parameters. Parameters: order' state' entityType' memberType' minCardinality' maxCardinality' globalOrder
Long Parameter List,Xbim.Common,IModel,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\IModel.cs,InsertCopy,The method has 5 parameters. Parameters: toCopy' mappings' propTransform' includeInverses' keepLabels
Long Parameter List,Xbim.Common,ITransaction,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\ITransaction.cs,DoReversibleAction,The method has 5 parameters. Parameters: doAction' undoAction' entity' changeType' property
Long Parameter List,Xbim.Common.Geometry,XbimDimensionalExponents,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimDimensionalExponents.cs,XbimDimensionalExponents,The method has 7 parameters. Parameters: length' mass' time' elec' temp' substs' lumin
Long Parameter List,Xbim.Common.Geometry,XbimMatrix3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimMatrix3D.cs,XbimMatrix3D,The method has 16 parameters. Parameters: m11' m12' m13' m14' m21' m22' m23' m24' m31' m32' m33' m34' offsetX' offsetY' offsetZ' m44
Long Parameter List,Xbim.Common.Geometry,XbimRect3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimRect3D.cs,XbimRect3D,The method has 6 parameters. Parameters: x' y' z' sizeX' sizeY' sizeZ
Long Parameter List,Xbim.Common.Geometry,XbimGeometryData,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimGeometryData.cs,XbimGeometryData,The method has 9 parameters. Parameters: geometrylabel' productLabel' geomType' ifcTypeId' shape' dataArray2' geometryHash' styleLabel' counter
Long Parameter List,Xbim.Common.Geometry,XbimGeometryData,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimGeometryData.cs,XbimGeometryData,The method has 7 parameters. Parameters: geometrylabel' productLabel' geomType' ifcTypeId' shape' transform' styleLabel
Long Identifier,Xbim.Common,IModelFactors,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\IModel.cs,Initialise,The length of the parameter angleToRadiansConversionFactor is 30.
Long Identifier,Xbim.Common,IModelFactors,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\IModel.cs,Initialise,The length of the parameter lengthToMetresConversionFactor is 30.
Long Identifier,Xbim.Common.Metadata,ExpressMetaData,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Metadata\ExpressMetaData.cs,,The length of the parameter _persistNameToExpressTypeLookup is 31.
Long Identifier,Xbim.Common.Metadata,ExpressMetaData,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Metadata\ExpressMetaData.cs,,The length of the parameter _interfaceToExpressTypesLookup is 30.
Long Statement,Xbim.Common.Federation,FederatedModelInstances,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Federation\FederatedModelInstances.cs,CountOf,The length of the statement  "            return _model.ReferencingModel.Instances.CountOf<T>() + _model.ReferencedModels.Sum(refModel => refModel.Model.Instances.CountOf<T>()); " is 135.
Long Statement,Xbim.Common.Federation,FederatedModelInstances,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Federation\FederatedModelInstances.cs,GetEnumerator,The length of the statement  "            return _model.ReferencingModel.Instances.Concat(_model.ReferencedModels.SelectMany(rm => rm.Model.Instances)).GetEnumerator(); " is 126.
Long Statement,Xbim.Common,XbimModelFactors,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\IModel.cs,Initialise,The length of the statement  "            PrecisionBoolean = Math.Max(Precision' OneMilliMetre / 10); //might need to make it courser than point precision if precision is very fine " is 138.
Long Statement,Xbim.Common,XbimModelFactors,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\IModel.cs,Initialise,The length of the statement  "            Rounding = Math.Abs((int)Math.Log10(Precision * 100)); //default round all points to 100 times  precision' this is used in the hash functions " is 141.
Long Statement,Xbim.Common.Geometry,XbimShapeGeometry,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimShapeGeometry.cs,ToString,The length of the statement  "            return string.Format("{0}'{1}'{2}'{3}'{4}'{5}'{6}'{7}'{8}"' _shapeLabel' _ifcShapeLabel' _geometryHash' _shapeLabel' _referenceCount' LOD' _format' _boundingBox.ToString()' _shapeData); " is 185.
Long Statement,Xbim.Common.Geometry,XbimShapeInstance,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimShapeInstance.cs,ToString,The length of the statement  "            return string.Format("{0}'{1}'TypeId: {2}'{3}'{4}'{5}'{6}'{7}"'  _instanceLabel'_styleLabel' _expressTypeId' _shapeLabel'_ifcProductLabel'  _representationContext' _representationType' _transformation.ToString()); " is 213.
Long Statement,Xbim.Common.Geometry,XbimMatrix3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimMatrix3D.cs,Multiply,The length of the statement  "            return new XbimMatrix3D(mat1._m11 * mat2._m11 + mat1._m12 * mat2._m21 + mat1._m13 * mat2._m31 + mat1._m14 * mat2._offsetX' " is 122.
Long Statement,Xbim.Common.Geometry,XbimMatrix3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimMatrix3D.cs,CreateLookAt,The length of the statement  "                -XbimVector3D.DotProduct(vector2' cameraPosition)' -XbimVector3D.DotProduct(vector3' cameraPosition)' -XbimVector3D.DotProduct(vector' cameraPosition)' 1.0); " is 157.
Long Statement,Xbim.Common.Geometry,XbimMatrix3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimMatrix3D.cs,Decompose,The length of the statement  "            // via https://code.google.com/p/sharpdx/source/browse/Source/SharpDX/Matrix.cs?r=9f9e209b1be04f06f294bc6d72b06055ad6abdcc " is 122.
Long Statement,Xbim.Common.Geometry,XbimMatrix3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimMatrix3D.cs,Decompose,The length of the statement  "            scale = new XbimVector3D(Math.Sqrt(M11 * M11 + M12 * M12 + M13 * M13)' Math.Sqrt(M21 * M21 + M22 * M22 + M23 * M23)' Math.Sqrt(M31 * M31 + M32 * M32 + M33 * M33)); " is 163.
Long Statement,Xbim.Common.Geometry,XbimRect3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimRect3D.cs,FromArray,The length of the statement  "                double srXSz = bw.ReadSingle(); // all ToArray functions store position and size (bugfix: it was previously reading data as max) " is 128.
Long Statement,Xbim.Common.Geometry,XbimRect3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimRect3D.cs,FromArray,The length of the statement  "                double srXSz = bw.ReadDouble(); // all ToArray functions store position and size (bugfix: it was previously reading data as max) " is 128.
Long Statement,Xbim.Common.Geometry,XbimRect3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimRect3D.cs,Inflate,The length of the statement  "            XbimVector3D v = new XbimVector3D(original.SizeX + (inflate* 2)' original.SizeY + (inflate * 2)' original.SizeZ + (inflate * 2)); " is 129.
Long Statement,Xbim.Common.Geometry,XbimRect3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimRect3D.cs,ContainsCoords,The length of the statement  "            return (((((x >= this._x) && (x <= (this._x + this._sizeX))) && ((y >= this._y) && (y <= (this._y + this._sizeY)))) && (z >= this._z)) && (z <= (this._z + this._sizeZ))); " is 170.
Long Statement,Xbim.Common.Geometry,XbimRect3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimRect3D.cs,Intersects,The length of the statement  "            //Martin Cerny: I don't think this is correct as this will find only one specific intersection case but it is not general. " is 122.
Long Statement,Xbim.Common.Geometry,XbimRect3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimRect3D.cs,Intersects,The length of the statement  "            return (((((rect._x <= (this._x + this._sizeX)) && ((rect._x + rect._sizeX) >= this._x)) && ((rect._y <= (this._y + this._sizeY)) && ((rect._y + rect._sizeY) >= this._y))) && (rect._z <= (this._z + this._sizeZ))) && ((rect._z + rect._sizeZ) >= this._z)); " is 254.
Long Statement,Xbim.Common.Geometry,XbimGeometryData,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimGeometryData.cs,TransformBy,The length of the statement  "            return new XbimGeometryData(GeometryLabel' IfcProductLabel' GeometryType' IfcTypeId' ShapeData' t.ToArray()' GeometryHash' StyleLabel' Counter);" is 144.
Long Statement,System.Collections.Generic,Enumerator,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Collections\MultiValueDictionary.cs,MoveNext,The length of the statement  "                    current = new KeyValuePair<TKey' ICollection<TValue>>(enumerator.Current.Key' (ICollection<TValue>)enumerator.Current.Value); " is 125.
Long Statement,Xbim.Common.Metadata,ExpressMetaData,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Metadata\ExpressMetaData.cs,AddParent,The length of the statement  "            if (baseParent == null || typeof(object) == baseParent || typeof(ValueType) == baseParent || typeof(PersistEntity) == baseParent) " is 129.
Long Statement,Xbim.Common.Logging.Providers,Log4NetLogger,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Logging\Providers\Log4NetLogger.cs,DebugFormat,The length of the statement  "				_logger.Logger.Log(ThisDeclaringType' Level.Debug' new SystemStringFormat(CultureInfo.InvariantCulture' format' args)' null); " is 125.
Long Statement,Xbim.Common.Logging.Providers,Log4NetLogger,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Logging\Providers\Log4NetLogger.cs,InfoFormat,The length of the statement  "				_logger.Logger.Log(ThisDeclaringType' Level.Info' new SystemStringFormat(CultureInfo.InvariantCulture' format' args)' null); " is 124.
Long Statement,Xbim.Common.Logging.Providers,Log4NetLogger,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Logging\Providers\Log4NetLogger.cs,WarnFormat,The length of the statement  "				_logger.Logger.Log(ThisDeclaringType' Level.Warn' new SystemStringFormat(CultureInfo.InvariantCulture' format' args)' null); " is 124.
Long Statement,Xbim.Common.Logging.Providers,Log4NetLogger,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Logging\Providers\Log4NetLogger.cs,ErrorFormat,The length of the statement  "				_logger.Logger.Log(ThisDeclaringType' Level.Error' new SystemStringFormat(CultureInfo.InvariantCulture' format' args)' null); " is 125.
Long Statement,Xbim.Common.Logging.Providers,Log4NetLogger,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Logging\Providers\Log4NetLogger.cs,FatalFormat,The length of the statement  "				_logger.Logger.Log(ThisDeclaringType' Level.Fatal' new SystemStringFormat(CultureInfo.InvariantCulture' format' args)' null); " is 125.
Long Statement,Xbim.Common.Logging.Providers,Log4NetProvider,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Logging\Providers\Log4NetProvider.cs,Configure,The length of the statement  "            // Skip if already set - GlobalContext is global and Properties may be set by another part of the application. Don't over-write " is 127.
Long Statement,Xbim.Common.Logging.Providers,Log4NetProvider,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Logging\Providers\Log4NetProvider.cs,AttachMemoryLogger,The length of the statement  "            memoryAppender.Layout = new PatternLayout("%date{dd-MM-yyyy HH:mm:ss'fff} %5level [%2thread] %message (%logger{1}:%line)%n"); " is 125.
Complex Conditional,Xbim.Common.Metadata,ExpressMetaData,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Metadata\ExpressMetaData.cs,AddParent,The conditional expression  "baseParent == null || typeof(object) == baseParent || typeof(ValueType) == baseParent || typeof(PersistEntity) == baseParent"  is complex.
Empty Catch Block,Xbim.Common.Logging.Providers,Log4NetProvider,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Logging\Providers\Log4NetProvider.cs,Initialise,The method has an empty catch block.
Empty Catch Block,Xbim.Common.Logging.Providers,Log4NetProvider,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Logging\Providers\Log4NetProvider.cs,GetAssembly,The method has an empty catch block.
Empty Catch Block,Xbim.Common.Logging.Providers,Log4NetProvider,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Logging\Providers\Log4NetProvider.cs,DetatchMemoryLogger,The method has an empty catch block.
Magic Number,Xbim.Common.Collections,ItemSet<T>,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Collections\ItemSet.cs,CreateNestedSet,The following statement contains a magic number: var result = (T)Activator.CreateInstance(toCreate' BindingFlags.NonPublic | BindingFlags.Instance' null'                  new object[] { OwningEntity' 4' Property }' null);
Magic Number,Xbim.Common,XbimModelFactors,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\IModel.cs,Initialise,The following statement contains a magic number: SimplifyFaceCountThreshHold = 1000;
Magic Number,Xbim.Common,XbimModelFactors,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\IModel.cs,Initialise,The following statement contains a magic number: OneMilliMeter = OneMilliMetre = OneMeter / 1000.0;
Magic Number,Xbim.Common,XbimModelFactors,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\IModel.cs,Initialise,The following statement contains a magic number: OneKilometer = OneMeter * 1000.0;
Magic Number,Xbim.Common,XbimModelFactors,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\IModel.cs,Initialise,The following statement contains a magic number: OneFoot = OneMeter / 3.2808;
Magic Number,Xbim.Common,XbimModelFactors,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\IModel.cs,Initialise,The following statement contains a magic number: OneInch = OneMeter / 39.37;
Magic Number,Xbim.Common,XbimModelFactors,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\IModel.cs,Initialise,The following statement contains a magic number: OneMile = OneMeter * 1609.344;
Magic Number,Xbim.Common,XbimModelFactors,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\IModel.cs,Initialise,The following statement contains a magic number: DeflectionTolerance = OneMilliMetre * 5;
Magic Number,Xbim.Common,XbimModelFactors,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\IModel.cs,Initialise,The following statement contains a magic number: DeflectionAngle = 0.5;
Magic Number,Xbim.Common,XbimModelFactors,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\IModel.cs,Initialise,The following statement contains a magic number: VertexPointDiameter = OneMilliMetre * 10;
Magic Number,Xbim.Common,XbimModelFactors,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\IModel.cs,Initialise,The following statement contains a magic number: PrecisionMax = Math.Max(OneMilliMetre / 10' Precision*100);
Magic Number,Xbim.Common,XbimModelFactors,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\IModel.cs,Initialise,The following statement contains a magic number: PrecisionMax = Math.Max(OneMilliMetre / 10' Precision*100);
Magic Number,Xbim.Common,XbimModelFactors,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\IModel.cs,Initialise,The following statement contains a magic number: PrecisionBoolean = Math.Max(Precision' OneMilliMetre / 10);
Magic Number,Xbim.Common,XbimModelFactors,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\IModel.cs,Initialise,The following statement contains a magic number: PrecisionBooleanMax = Math.Max(OneMilliMetre * 100'Precision*100);
Magic Number,Xbim.Common,XbimModelFactors,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\IModel.cs,Initialise,The following statement contains a magic number: PrecisionBooleanMax = Math.Max(OneMilliMetre * 100'Precision*100);
Magic Number,Xbim.Common,XbimModelFactors,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\IModel.cs,Initialise,The following statement contains a magic number: Rounding = Math.Abs((int)Math.Log10(Precision * 100));
Magic Number,Xbim.Common,XbimModelFactors,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\IModel.cs,Initialise,The following statement contains a magic number: ShortestEdgeLength = 10 * OneMilliMetre;
Magic Number,Xbim.Common.Geometry,XbimDimensionalExponents,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimDimensionalExponents.cs,XbimDimensionalExponents,The following statement contains a magic number: _exponents = new long[7];
Magic Number,Xbim.Common.Geometry,XbimDimensionalExponents,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimDimensionalExponents.cs,XbimDimensionalExponents,The following statement contains a magic number: _exponents[2] = time;
Magic Number,Xbim.Common.Geometry,XbimDimensionalExponents,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimDimensionalExponents.cs,XbimDimensionalExponents,The following statement contains a magic number: _exponents[3] = elec;
Magic Number,Xbim.Common.Geometry,XbimDimensionalExponents,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimDimensionalExponents.cs,XbimDimensionalExponents,The following statement contains a magic number: _exponents[4] = temp;
Magic Number,Xbim.Common.Geometry,XbimDimensionalExponents,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimDimensionalExponents.cs,XbimDimensionalExponents,The following statement contains a magic number: _exponents[5] = substs;
Magic Number,Xbim.Common.Geometry,XbimDimensionalExponents,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimDimensionalExponents.cs,XbimDimensionalExponents,The following statement contains a magic number: _exponents[6] = lumin;
Magic Number,Xbim.Common.Geometry,XbimRegion,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimRegion.cs,ToXbimRect3D,The following statement contains a magic number: return new XbimRect3D(                  Centre - Size * 0.5'                  Size);
Magic Number,Xbim.Common.Geometry,XbimFaceTriangulation,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimFaceTriangulation.cs,XbimFaceTriangulation,The following statement contains a magic number: _indices = new List<int>(numTriangles * 3);
Magic Number,Xbim.Common.Geometry,XbimMatrix3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimMatrix3D.cs,FromString,The following statement contains a magic number: Debug.Assert(itms.Length == 16);
Magic Number,Xbim.Common.Geometry,XbimMatrix3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimMatrix3D.cs,FromString,The following statement contains a magic number: return new XbimMatrix3D(                  Convert.ToDouble(itms[0]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[1]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[2]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[3]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[4]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[5]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[6]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[7]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[8]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[9]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[10]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[11]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[12]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[13]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[14]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[15]' System.Globalization.CultureInfo.InvariantCulture));
Magic Number,Xbim.Common.Geometry,XbimMatrix3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimMatrix3D.cs,FromString,The following statement contains a magic number: return new XbimMatrix3D(                  Convert.ToDouble(itms[0]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[1]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[2]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[3]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[4]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[5]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[6]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[7]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[8]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[9]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[10]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[11]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[12]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[13]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[14]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[15]' System.Globalization.CultureInfo.InvariantCulture));
Magic Number,Xbim.Common.Geometry,XbimMatrix3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimMatrix3D.cs,FromString,The following statement contains a magic number: return new XbimMatrix3D(                  Convert.ToDouble(itms[0]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[1]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[2]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[3]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[4]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[5]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[6]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[7]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[8]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[9]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[10]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[11]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[12]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[13]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[14]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[15]' System.Globalization.CultureInfo.InvariantCulture));
Magic Number,Xbim.Common.Geometry,XbimMatrix3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimMatrix3D.cs,FromString,The following statement contains a magic number: return new XbimMatrix3D(                  Convert.ToDouble(itms[0]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[1]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[2]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[3]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[4]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[5]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[6]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[7]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[8]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[9]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[10]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[11]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[12]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[13]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[14]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[15]' System.Globalization.CultureInfo.InvariantCulture));
Magic Number,Xbim.Common.Geometry,XbimMatrix3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimMatrix3D.cs,FromString,The following statement contains a magic number: return new XbimMatrix3D(                  Convert.ToDouble(itms[0]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[1]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[2]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[3]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[4]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[5]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[6]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[7]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[8]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[9]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[10]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[11]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[12]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[13]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[14]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[15]' System.Globalization.CultureInfo.InvariantCulture));
Magic Number,Xbim.Common.Geometry,XbimMatrix3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimMatrix3D.cs,FromString,The following statement contains a magic number: return new XbimMatrix3D(                  Convert.ToDouble(itms[0]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[1]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[2]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[3]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[4]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[5]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[6]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[7]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[8]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[9]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[10]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[11]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[12]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[13]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[14]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[15]' System.Globalization.CultureInfo.InvariantCulture));
Magic Number,Xbim.Common.Geometry,XbimMatrix3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimMatrix3D.cs,FromString,The following statement contains a magic number: return new XbimMatrix3D(                  Convert.ToDouble(itms[0]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[1]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[2]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[3]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[4]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[5]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[6]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[7]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[8]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[9]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[10]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[11]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[12]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[13]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[14]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[15]' System.Globalization.CultureInfo.InvariantCulture));
Magic Number,Xbim.Common.Geometry,XbimMatrix3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimMatrix3D.cs,FromString,The following statement contains a magic number: return new XbimMatrix3D(                  Convert.ToDouble(itms[0]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[1]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[2]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[3]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[4]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[5]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[6]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[7]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[8]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[9]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[10]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[11]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[12]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[13]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[14]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[15]' System.Globalization.CultureInfo.InvariantCulture));
Magic Number,Xbim.Common.Geometry,XbimMatrix3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimMatrix3D.cs,FromString,The following statement contains a magic number: return new XbimMatrix3D(                  Convert.ToDouble(itms[0]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[1]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[2]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[3]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[4]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[5]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[6]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[7]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[8]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[9]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[10]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[11]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[12]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[13]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[14]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[15]' System.Globalization.CultureInfo.InvariantCulture));
Magic Number,Xbim.Common.Geometry,XbimMatrix3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimMatrix3D.cs,FromString,The following statement contains a magic number: return new XbimMatrix3D(                  Convert.ToDouble(itms[0]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[1]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[2]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[3]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[4]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[5]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[6]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[7]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[8]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[9]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[10]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[11]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[12]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[13]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[14]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[15]' System.Globalization.CultureInfo.InvariantCulture));
Magic Number,Xbim.Common.Geometry,XbimMatrix3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimMatrix3D.cs,FromString,The following statement contains a magic number: return new XbimMatrix3D(                  Convert.ToDouble(itms[0]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[1]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[2]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[3]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[4]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[5]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[6]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[7]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[8]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[9]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[10]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[11]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[12]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[13]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[14]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[15]' System.Globalization.CultureInfo.InvariantCulture));
Magic Number,Xbim.Common.Geometry,XbimMatrix3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimMatrix3D.cs,FromString,The following statement contains a magic number: return new XbimMatrix3D(                  Convert.ToDouble(itms[0]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[1]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[2]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[3]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[4]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[5]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[6]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[7]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[8]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[9]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[10]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[11]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[12]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[13]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[14]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[15]' System.Globalization.CultureInfo.InvariantCulture));
Magic Number,Xbim.Common.Geometry,XbimMatrix3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimMatrix3D.cs,FromString,The following statement contains a magic number: return new XbimMatrix3D(                  Convert.ToDouble(itms[0]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[1]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[2]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[3]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[4]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[5]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[6]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[7]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[8]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[9]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[10]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[11]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[12]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[13]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[14]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[15]' System.Globalization.CultureInfo.InvariantCulture));
Magic Number,Xbim.Common.Geometry,XbimMatrix3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimMatrix3D.cs,FromString,The following statement contains a magic number: return new XbimMatrix3D(                  Convert.ToDouble(itms[0]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[1]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[2]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[3]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[4]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[5]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[6]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[7]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[8]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[9]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[10]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[11]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[12]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[13]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[14]' System.Globalization.CultureInfo.InvariantCulture)'                  Convert.ToDouble(itms[15]' System.Globalization.CultureInfo.InvariantCulture));
Magic Number,Xbim.Common.Geometry,XbimMatrix3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimMatrix3D.cs,FromArray,The following statement contains a magic number: bool useDouble = array.Length > 16 * sizeof(Single);
Magic Number,Xbim.Common.Geometry,XbimMatrix3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimMatrix3D.cs,GetHashCode,The following statement contains a magic number: XbimPoint3D p = new XbimPoint3D(1' 3' 5);
Magic Number,Xbim.Common.Geometry,XbimMatrix3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimMatrix3D.cs,GetHashCode,The following statement contains a magic number: XbimPoint3D p = new XbimPoint3D(1' 3' 5);
Magic Number,Xbim.Common.Geometry,XbimMatrix3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimMatrix3D.cs,Decompose,The following statement contains a magic number: double ZeroTolerance = 0.000003;
Magic Number,Xbim.Common.Geometry,XbimMatrix3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimMatrix3D.cs,ToArray,The following statement contains a magic number: if (useDouble)              {                  Byte[] b = new Byte[16 * sizeof(double)];                  MemoryStream ms = new MemoryStream(b);                  BinaryWriter strm = new BinaryWriter(ms);                  strm.Write(M11);                  strm.Write(M12);                  strm.Write(M13);                  strm.Write(M14);                  strm.Write(M21);                  strm.Write(M22);                  strm.Write(M23);                  strm.Write(M24);                  strm.Write(M31);                  strm.Write(M32);                  strm.Write(M33);                  strm.Write(M34);                  strm.Write(OffsetX);                  strm.Write(OffsetY);                  strm.Write(OffsetZ);                  strm.Write(M44);                  return b;              }              else              {                  Byte[] b = new Byte[16 * sizeof(float)];                  MemoryStream ms = new MemoryStream(b);                  BinaryWriter strm = new BinaryWriter(ms);                  strm.Write((float)M11);                  strm.Write((float)M12);                  strm.Write((float)M13);                  strm.Write((float)M14);                  strm.Write((float)M21);                  strm.Write((float)M22);                  strm.Write((float)M23);                  strm.Write((float)M24);                  strm.Write((float)M31);                  strm.Write((float)M32);                  strm.Write((float)M33);                  strm.Write((float)M34);                  strm.Write((float)OffsetX);                  strm.Write((float)OffsetY);                  strm.Write((float)OffsetZ);                  strm.Write((float)M44);                  return b;              }
Magic Number,Xbim.Common.Geometry,XbimMatrix3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimMatrix3D.cs,ToArray,The following statement contains a magic number: if (useDouble)              {                  Byte[] b = new Byte[16 * sizeof(double)];                  MemoryStream ms = new MemoryStream(b);                  BinaryWriter strm = new BinaryWriter(ms);                  strm.Write(M11);                  strm.Write(M12);                  strm.Write(M13);                  strm.Write(M14);                  strm.Write(M21);                  strm.Write(M22);                  strm.Write(M23);                  strm.Write(M24);                  strm.Write(M31);                  strm.Write(M32);                  strm.Write(M33);                  strm.Write(M34);                  strm.Write(OffsetX);                  strm.Write(OffsetY);                  strm.Write(OffsetZ);                  strm.Write(M44);                  return b;              }              else              {                  Byte[] b = new Byte[16 * sizeof(float)];                  MemoryStream ms = new MemoryStream(b);                  BinaryWriter strm = new BinaryWriter(ms);                  strm.Write((float)M11);                  strm.Write((float)M12);                  strm.Write((float)M13);                  strm.Write((float)M14);                  strm.Write((float)M21);                  strm.Write((float)M22);                  strm.Write((float)M23);                  strm.Write((float)M24);                  strm.Write((float)M31);                  strm.Write((float)M32);                  strm.Write((float)M33);                  strm.Write((float)M34);                  strm.Write((float)OffsetX);                  strm.Write((float)OffsetY);                  strm.Write((float)OffsetZ);                  strm.Write((float)M44);                  return b;              }
Magic Number,Xbim.Common.Geometry,XbimPackedNormal,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimPackedNormal.cs,XbimPackedNormal,The following statement contains a magic number: _packedData = (ushort)(u << 8 | v);
Magic Number,Xbim.Common.Geometry,XbimPackedNormal,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimPackedNormal.cs,XbimPackedNormal,The following statement contains a magic number: const double tolerance = 1e-4;
Magic Number,Xbim.Common.Geometry,XbimPackedNormal,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimPackedNormal.cs,XbimPackedNormal,The following statement contains a magic number: if (Math.Abs(y - 1) < tolerance)              {                  _packedData = 0 << 8 | (byte)PackSize / 2;                  return;              }
Magic Number,Xbim.Common.Geometry,XbimPackedNormal,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimPackedNormal.cs,XbimPackedNormal,The following statement contains a magic number: if (Math.Abs(y - 1) < tolerance)              {                  _packedData = 0 << 8 | (byte)PackSize / 2;                  return;              }
Magic Number,Xbim.Common.Geometry,XbimPackedNormal,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimPackedNormal.cs,XbimPackedNormal,The following statement contains a magic number: if (Math.Abs(z - 1) < tolerance)              {                  lon = 0;                  lat = Math.PI/2;              }              else if (Math.Abs(z + 1) < tolerance)              {                  lon = Math.PI;                  lat = Math.PI / 2;              }              else if (Math.Abs(x - 1) < tolerance)              {                  lon = Math.PI/2;                  lat = Math.PI / 2;              }              else if (Math.Abs(x + 1) < tolerance)              {                  lon = Math.PI + Math.PI / 2;                  lat = Math.PI / 2;              }              else              {                  //Atan2 takes care for quadrants (goes from positive Z to positive X and around)                  lon = Math.Atan2(x'z);                  //latitude from 0 to PI starting at positive Y ending at negative Y                  lat = Math.Acos(y);              }
Magic Number,Xbim.Common.Geometry,XbimPackedNormal,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimPackedNormal.cs,XbimPackedNormal,The following statement contains a magic number: if (Math.Abs(z - 1) < tolerance)              {                  lon = 0;                  lat = Math.PI/2;              }              else if (Math.Abs(z + 1) < tolerance)              {                  lon = Math.PI;                  lat = Math.PI / 2;              }              else if (Math.Abs(x - 1) < tolerance)              {                  lon = Math.PI/2;                  lat = Math.PI / 2;              }              else if (Math.Abs(x + 1) < tolerance)              {                  lon = Math.PI + Math.PI / 2;                  lat = Math.PI / 2;              }              else              {                  //Atan2 takes care for quadrants (goes from positive Z to positive X and around)                  lon = Math.Atan2(x'z);                  //latitude from 0 to PI starting at positive Y ending at negative Y                  lat = Math.Acos(y);              }
Magic Number,Xbim.Common.Geometry,XbimPackedNormal,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimPackedNormal.cs,XbimPackedNormal,The following statement contains a magic number: if (Math.Abs(z - 1) < tolerance)              {                  lon = 0;                  lat = Math.PI/2;              }              else if (Math.Abs(z + 1) < tolerance)              {                  lon = Math.PI;                  lat = Math.PI / 2;              }              else if (Math.Abs(x - 1) < tolerance)              {                  lon = Math.PI/2;                  lat = Math.PI / 2;              }              else if (Math.Abs(x + 1) < tolerance)              {                  lon = Math.PI + Math.PI / 2;                  lat = Math.PI / 2;              }              else              {                  //Atan2 takes care for quadrants (goes from positive Z to positive X and around)                  lon = Math.Atan2(x'z);                  //latitude from 0 to PI starting at positive Y ending at negative Y                  lat = Math.Acos(y);              }
Magic Number,Xbim.Common.Geometry,XbimPackedNormal,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimPackedNormal.cs,XbimPackedNormal,The following statement contains a magic number: if (Math.Abs(z - 1) < tolerance)              {                  lon = 0;                  lat = Math.PI/2;              }              else if (Math.Abs(z + 1) < tolerance)              {                  lon = Math.PI;                  lat = Math.PI / 2;              }              else if (Math.Abs(x - 1) < tolerance)              {                  lon = Math.PI/2;                  lat = Math.PI / 2;              }              else if (Math.Abs(x + 1) < tolerance)              {                  lon = Math.PI + Math.PI / 2;                  lat = Math.PI / 2;              }              else              {                  //Atan2 takes care for quadrants (goes from positive Z to positive X and around)                  lon = Math.Atan2(x'z);                  //latitude from 0 to PI starting at positive Y ending at negative Y                  lat = Math.Acos(y);              }
Magic Number,Xbim.Common.Geometry,XbimPackedNormal,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimPackedNormal.cs,XbimPackedNormal,The following statement contains a magic number: if (Math.Abs(z - 1) < tolerance)              {                  lon = 0;                  lat = Math.PI/2;              }              else if (Math.Abs(z + 1) < tolerance)              {                  lon = Math.PI;                  lat = Math.PI / 2;              }              else if (Math.Abs(x - 1) < tolerance)              {                  lon = Math.PI/2;                  lat = Math.PI / 2;              }              else if (Math.Abs(x + 1) < tolerance)              {                  lon = Math.PI + Math.PI / 2;                  lat = Math.PI / 2;              }              else              {                  //Atan2 takes care for quadrants (goes from positive Z to positive X and around)                  lon = Math.Atan2(x'z);                  //latitude from 0 to PI starting at positive Y ending at negative Y                  lat = Math.Acos(y);              }
Magic Number,Xbim.Common.Geometry,XbimPackedNormal,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimPackedNormal.cs,XbimPackedNormal,The following statement contains a magic number: if (Math.Abs(z - 1) < tolerance)              {                  lon = 0;                  lat = Math.PI/2;              }              else if (Math.Abs(z + 1) < tolerance)              {                  lon = Math.PI;                  lat = Math.PI / 2;              }              else if (Math.Abs(x - 1) < tolerance)              {                  lon = Math.PI/2;                  lat = Math.PI / 2;              }              else if (Math.Abs(x + 1) < tolerance)              {                  lon = Math.PI + Math.PI / 2;                  lat = Math.PI / 2;              }              else              {                  //Atan2 takes care for quadrants (goes from positive Z to positive X and around)                  lon = Math.Atan2(x'z);                  //latitude from 0 to PI starting at positive Y ending at negative Y                  lat = Math.Acos(y);              }
Magic Number,Xbim.Common.Geometry,XbimPackedNormal,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimPackedNormal.cs,XbimPackedNormal,The following statement contains a magic number: lon = lon / (2 * Math.PI);
Magic Number,Xbim.Common.Geometry,XbimPackedNormal,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimPackedNormal.cs,XbimPackedNormal,The following statement contains a magic number: _packedData = (ushort)(u << 8 | v);
Magic Number,Xbim.Common.Geometry,XbimRect3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimRect3D.cs,FromArray,The following statement contains a magic number: if (array.Length == 6 * sizeof(float)) //it is in floats              {                  double srXmin = bw.ReadSingle();                  double srYmin = bw.ReadSingle();                  double srZmin = bw.ReadSingle();                  rect.Location = new XbimPoint3D(srXmin' srYmin' srZmin);                    double srXSz = bw.ReadSingle(); // all ToArray functions store position and size (bugfix: it was previously reading data as max)                  double srYSz = bw.ReadSingle();                  double srZSz = bw.ReadSingle();                  rect.SizeX = srXSz;                  rect.SizeY = srYSz;                  rect.SizeZ = srZSz;              }              else //go for doubles              {                  double srXmin = bw.ReadDouble();                  double srYmin = bw.ReadDouble();                  double srZmin = bw.ReadDouble();                  rect.Location = new XbimPoint3D(srXmin' srYmin' srZmin);                    double srXSz = bw.ReadDouble(); // all ToArray functions store position and size (bugfix: it was previously reading data as max)                  double srYSz = bw.ReadDouble();                  double srZSz = bw.ReadDouble();                  rect.SizeX = srXSz;                  rect.SizeY = srYSz;                  rect.SizeZ = srZSz;              }
Magic Number,Xbim.Common.Geometry,XbimRect3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimRect3D.cs,FromString,The following statement contains a magic number: Debug.Assert(itms.Length == 6);
Magic Number,Xbim.Common.Geometry,XbimRect3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimRect3D.cs,FromString,The following statement contains a magic number: _z = Convert.ToSingle(itms[2]' System.Globalization.CultureInfo.InvariantCulture);
Magic Number,Xbim.Common.Geometry,XbimRect3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimRect3D.cs,FromString,The following statement contains a magic number: _sizeX = Convert.ToSingle(itms[3]' System.Globalization.CultureInfo.InvariantCulture);
Magic Number,Xbim.Common.Geometry,XbimRect3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimRect3D.cs,FromString,The following statement contains a magic number: _sizeY = Convert.ToSingle(itms[4]' System.Globalization.CultureInfo.InvariantCulture);
Magic Number,Xbim.Common.Geometry,XbimRect3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimRect3D.cs,FromString,The following statement contains a magic number: _sizeZ = Convert.ToSingle(itms[5]' System.Globalization.CultureInfo.InvariantCulture);
Magic Number,Xbim.Common.Geometry,XbimRect3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimRect3D.cs,Parse,The following statement contains a magic number: Debug.Assert(itms.Length == 6);
Magic Number,Xbim.Common.Geometry,XbimRect3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimRect3D.cs,Parse,The following statement contains a magic number: return new XbimRect3D(Convert.ToDouble(itms[0]' System.Globalization.CultureInfo.InvariantCulture)'                                    Convert.ToDouble(itms[1]' System.Globalization.CultureInfo.InvariantCulture)'                                    Convert.ToDouble(itms[2]' System.Globalization.CultureInfo.InvariantCulture)'                                    Convert.ToDouble(itms[3]' System.Globalization.CultureInfo.InvariantCulture)'                                    Convert.ToDouble(itms[4]' System.Globalization.CultureInfo.InvariantCulture)'                                    Convert.ToDouble(itms[5]' System.Globalization.CultureInfo.InvariantCulture));
Magic Number,Xbim.Common.Geometry,XbimRect3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimRect3D.cs,Parse,The following statement contains a magic number: return new XbimRect3D(Convert.ToDouble(itms[0]' System.Globalization.CultureInfo.InvariantCulture)'                                    Convert.ToDouble(itms[1]' System.Globalization.CultureInfo.InvariantCulture)'                                    Convert.ToDouble(itms[2]' System.Globalization.CultureInfo.InvariantCulture)'                                    Convert.ToDouble(itms[3]' System.Globalization.CultureInfo.InvariantCulture)'                                    Convert.ToDouble(itms[4]' System.Globalization.CultureInfo.InvariantCulture)'                                    Convert.ToDouble(itms[5]' System.Globalization.CultureInfo.InvariantCulture));
Magic Number,Xbim.Common.Geometry,XbimRect3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimRect3D.cs,Parse,The following statement contains a magic number: return new XbimRect3D(Convert.ToDouble(itms[0]' System.Globalization.CultureInfo.InvariantCulture)'                                    Convert.ToDouble(itms[1]' System.Globalization.CultureInfo.InvariantCulture)'                                    Convert.ToDouble(itms[2]' System.Globalization.CultureInfo.InvariantCulture)'                                    Convert.ToDouble(itms[3]' System.Globalization.CultureInfo.InvariantCulture)'                                    Convert.ToDouble(itms[4]' System.Globalization.CultureInfo.InvariantCulture)'                                    Convert.ToDouble(itms[5]' System.Globalization.CultureInfo.InvariantCulture));
Magic Number,Xbim.Common.Geometry,XbimRect3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimRect3D.cs,Parse,The following statement contains a magic number: return new XbimRect3D(Convert.ToDouble(itms[0]' System.Globalization.CultureInfo.InvariantCulture)'                                    Convert.ToDouble(itms[1]' System.Globalization.CultureInfo.InvariantCulture)'                                    Convert.ToDouble(itms[2]' System.Globalization.CultureInfo.InvariantCulture)'                                    Convert.ToDouble(itms[3]' System.Globalization.CultureInfo.InvariantCulture)'                                    Convert.ToDouble(itms[4]' System.Globalization.CultureInfo.InvariantCulture)'                                    Convert.ToDouble(itms[5]' System.Globalization.CultureInfo.InvariantCulture));
Magic Number,Xbim.Common.Geometry,XbimRect3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimRect3D.cs,Inflate,The following statement contains a magic number: XbimVector3D v = new XbimVector3D(original.SizeX + (x * 2)' original.SizeY + (y * 2)' original.SizeZ +(z * 2));
Magic Number,Xbim.Common.Geometry,XbimRect3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimRect3D.cs,Inflate,The following statement contains a magic number: XbimVector3D v = new XbimVector3D(original.SizeX + (x * 2)' original.SizeY + (y * 2)' original.SizeZ +(z * 2));
Magic Number,Xbim.Common.Geometry,XbimRect3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimRect3D.cs,Inflate,The following statement contains a magic number: XbimVector3D v = new XbimVector3D(original.SizeX + (x * 2)' original.SizeY + (y * 2)' original.SizeZ +(z * 2));
Magic Number,Xbim.Common.Geometry,XbimRect3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimRect3D.cs,Inflate,The following statement contains a magic number: XbimVector3D v = new XbimVector3D(original.SizeX + (inflate* 2)' original.SizeY + (inflate * 2)' original.SizeZ + (inflate * 2));
Magic Number,Xbim.Common.Geometry,XbimRect3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimRect3D.cs,Inflate,The following statement contains a magic number: XbimVector3D v = new XbimVector3D(original.SizeX + (inflate* 2)' original.SizeY + (inflate * 2)' original.SizeZ + (inflate * 2));
Magic Number,Xbim.Common.Geometry,XbimRect3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimRect3D.cs,Inflate,The following statement contains a magic number: XbimVector3D v = new XbimVector3D(original.SizeX + (inflate* 2)' original.SizeY + (inflate * 2)' original.SizeZ + (inflate * 2));
Magic Number,Xbim.Common.Geometry,XbimRect3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimRect3D.cs,Centroid,The following statement contains a magic number: if (IsEmpty)                   return new XbimPoint3D(0' 0' 0);              else                  return new XbimPoint3D((X + SizeX / 2)' (Y + SizeY / 2)' (Z + SizeZ / 2));
Magic Number,Xbim.Common.Geometry,XbimRect3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimRect3D.cs,Centroid,The following statement contains a magic number: if (IsEmpty)                   return new XbimPoint3D(0' 0' 0);              else                  return new XbimPoint3D((X + SizeX / 2)' (Y + SizeY / 2)' (Z + SizeZ / 2));
Magic Number,Xbim.Common.Geometry,XbimRect3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimRect3D.cs,Centroid,The following statement contains a magic number: if (IsEmpty)                   return new XbimPoint3D(0' 0' 0);              else                  return new XbimPoint3D((X + SizeX / 2)' (Y + SizeY / 2)' (Z + SizeZ / 2));
Magic Number,Xbim.Common.Geometry,XbimRect3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimRect3D.cs,Radius,The following statement contains a magic number: if (len != 0)                  return  len / 2;              else                  return 0;
Magic Number,Xbim.Common.Geometry,XbimRect3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimRect3D.cs,IsSimilar,The following statement contains a magic number: double t2 = 2 * t;
Magic Number,Xbim.Common.Geometry,XbimVector3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimVector3D.cs,Angle,The following statement contains a magic number: if (cosinus > -0.70710678118655 && cosinus < 0.70710678118655)                  return Math.Acos(cosinus);
Magic Number,Xbim.Common.Geometry,XbimVector3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimVector3D.cs,Angle,The following statement contains a magic number: if (cosinus > -0.70710678118655 && cosinus < 0.70710678118655)                  return Math.Acos(cosinus);
Magic Number,Xbim.Common.Geometry,XbimVector3D,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimVector3D.cs,IsNormal,The following statement contains a magic number: var ang = Math.PI / 2.0 - Angle(other);
Magic Number,Xbim.Common.Geometry,XbimGeometryData,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimGeometryData.cs,GenerateGeometryHash,The following statement contains a magic number: unchecked             {                 const int p = 16777619;                 var hash = array.Aggregate((int) 2166136261' (current' t) => (current ^ t)*p);                  hash += hash << 13;                 hash ^= hash >> 7;                 hash += hash << 3;                 hash ^= hash >> 17;                 hash += hash << 5;                 return hash;             }
Magic Number,Xbim.Common.Geometry,XbimGeometryData,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimGeometryData.cs,GenerateGeometryHash,The following statement contains a magic number: unchecked             {                 const int p = 16777619;                 var hash = array.Aggregate((int) 2166136261' (current' t) => (current ^ t)*p);                  hash += hash << 13;                 hash ^= hash >> 7;                 hash += hash << 3;                 hash ^= hash >> 17;                 hash += hash << 5;                 return hash;             }
Magic Number,Xbim.Common.Geometry,XbimGeometryData,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimGeometryData.cs,GenerateGeometryHash,The following statement contains a magic number: unchecked             {                 const int p = 16777619;                 var hash = array.Aggregate((int) 2166136261' (current' t) => (current ^ t)*p);                  hash += hash << 13;                 hash ^= hash >> 7;                 hash += hash << 3;                 hash ^= hash >> 17;                 hash += hash << 5;                 return hash;             }
Magic Number,Xbim.Common.Geometry,XbimGeometryData,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimGeometryData.cs,GenerateGeometryHash,The following statement contains a magic number: unchecked             {                 const int p = 16777619;                 var hash = array.Aggregate((int) 2166136261' (current' t) => (current ^ t)*p);                  hash += hash << 13;                 hash ^= hash >> 7;                 hash += hash << 3;                 hash ^= hash >> 17;                 hash += hash << 5;                 return hash;             }
Magic Number,Xbim.Common.Geometry,XbimGeometryData,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimGeometryData.cs,GenerateGeometryHash,The following statement contains a magic number: unchecked             {                 const int p = 16777619;                 var hash = array.Aggregate((int) 2166136261' (current' t) => (current ^ t)*p);                  hash += hash << 13;                 hash ^= hash >> 7;                 hash += hash << 3;                 hash ^= hash >> 17;                 hash += hash << 5;                 return hash;             }
Magic Number,Xbim.Common.Geometry,XbimGeometryData,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimGeometryData.cs,GenerateGeometryHash,The following statement contains a magic number: unchecked             {                 const int p = 16777619;                 var hash = array.Aggregate((int) 2166136261' (current' t) => (current ^ t)*p);                  hash += hash << 13;                 hash ^= hash >> 7;                 hash += hash << 3;                 hash ^= hash >> 17;                 hash += hash << 5;                 return hash;             }
Magic Number,Xbim.Common.Geometry,XbimGeometryData,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Geometry\XbimGeometryData.cs,GenerateGeometryHash,The following statement contains a magic number: unchecked             {                 const int p = 16777619;                 var hash = array.Aggregate((int) 2166136261' (current' t) => (current ^ t)*p);                  hash += hash << 13;                 hash ^= hash >> 7;                 hash += hash << 3;                 hash ^= hash >> 17;                 hash += hash << 5;                 return hash;             }
Magic Number,Xbim.Common.Logging.Providers,Log4NetProvider,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Logging\Providers\Log4NetProvider.cs,GetAssembly,The following statement contains a magic number: if (mainAssembly == null)  			{  				try  				{  					System.Diagnostics.StackTrace stack =  new System.Diagnostics.StackTrace();  					// HACK: 6 stackframes up is typically the caller into the ILogger.  					mainAssembly = stack.GetFrame(6).GetMethod().DeclaringType.Assembly;  				}  				catch  				{ }  			}
Magic Number,Xbim.Common.Step21,StepFileName,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Step21\StepFileHeader.cs,Parse,The following statement contains a magic number: switch (propIndex)              {                  case 0:                      _name = value.StringVal;                      break;                  case 1:                      _timeStamp = value.StringVal;                      break;                  case 2:                      _authorName.Add(value.StringVal);                      break;                  case 3:                      _organization.Add(value.StringVal);                      break;                  case 4:                      _preprocessorVersion = value.StringVal;                      break;                  case 5:                      _originatingSystem = value.StringVal;                      break;                  case 6:                      _authorizationName = value.StringVal;                      break;                  case 7:                      _authorizationMailingAddress.Add(value.StringVal);                      break;                  default:                      this.HandleUnexpectedAttribute(propIndex' value); break;              }
Magic Number,Xbim.Common.Step21,StepFileName,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Step21\StepFileHeader.cs,Parse,The following statement contains a magic number: switch (propIndex)              {                  case 0:                      _name = value.StringVal;                      break;                  case 1:                      _timeStamp = value.StringVal;                      break;                  case 2:                      _authorName.Add(value.StringVal);                      break;                  case 3:                      _organization.Add(value.StringVal);                      break;                  case 4:                      _preprocessorVersion = value.StringVal;                      break;                  case 5:                      _originatingSystem = value.StringVal;                      break;                  case 6:                      _authorizationName = value.StringVal;                      break;                  case 7:                      _authorizationMailingAddress.Add(value.StringVal);                      break;                  default:                      this.HandleUnexpectedAttribute(propIndex' value); break;              }
Magic Number,Xbim.Common.Step21,StepFileName,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Step21\StepFileHeader.cs,Parse,The following statement contains a magic number: switch (propIndex)              {                  case 0:                      _name = value.StringVal;                      break;                  case 1:                      _timeStamp = value.StringVal;                      break;                  case 2:                      _authorName.Add(value.StringVal);                      break;                  case 3:                      _organization.Add(value.StringVal);                      break;                  case 4:                      _preprocessorVersion = value.StringVal;                      break;                  case 5:                      _originatingSystem = value.StringVal;                      break;                  case 6:                      _authorizationName = value.StringVal;                      break;                  case 7:                      _authorizationMailingAddress.Add(value.StringVal);                      break;                  default:                      this.HandleUnexpectedAttribute(propIndex' value); break;              }
Magic Number,Xbim.Common.Step21,StepFileName,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Step21\StepFileHeader.cs,Parse,The following statement contains a magic number: switch (propIndex)              {                  case 0:                      _name = value.StringVal;                      break;                  case 1:                      _timeStamp = value.StringVal;                      break;                  case 2:                      _authorName.Add(value.StringVal);                      break;                  case 3:                      _organization.Add(value.StringVal);                      break;                  case 4:                      _preprocessorVersion = value.StringVal;                      break;                  case 5:                      _originatingSystem = value.StringVal;                      break;                  case 6:                      _authorizationName = value.StringVal;                      break;                  case 7:                      _authorizationMailingAddress.Add(value.StringVal);                      break;                  default:                      this.HandleUnexpectedAttribute(propIndex' value); break;              }
Magic Number,Xbim.Common.Step21,StepFileName,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Step21\StepFileHeader.cs,Parse,The following statement contains a magic number: switch (propIndex)              {                  case 0:                      _name = value.StringVal;                      break;                  case 1:                      _timeStamp = value.StringVal;                      break;                  case 2:                      _authorName.Add(value.StringVal);                      break;                  case 3:                      _organization.Add(value.StringVal);                      break;                  case 4:                      _preprocessorVersion = value.StringVal;                      break;                  case 5:                      _originatingSystem = value.StringVal;                      break;                  case 6:                      _authorizationName = value.StringVal;                      break;                  case 7:                      _authorizationMailingAddress.Add(value.StringVal);                      break;                  default:                      this.HandleUnexpectedAttribute(propIndex' value); break;              }
Magic Number,Xbim.Common.Step21,StepFileName,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Step21\StepFileHeader.cs,Parse,The following statement contains a magic number: switch (propIndex)              {                  case 0:                      _name = value.StringVal;                      break;                  case 1:                      _timeStamp = value.StringVal;                      break;                  case 2:                      _authorName.Add(value.StringVal);                      break;                  case 3:                      _organization.Add(value.StringVal);                      break;                  case 4:                      _preprocessorVersion = value.StringVal;                      break;                  case 5:                      _originatingSystem = value.StringVal;                      break;                  case 6:                      _authorizationName = value.StringVal;                      break;                  case 7:                      _authorizationMailingAddress.Add(value.StringVal);                      break;                  default:                      this.HandleUnexpectedAttribute(propIndex' value); break;              }
Magic Number,Xbim.Common.Logging,LoggerFactory,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\Logging\LoggerFactory.cs,GetCallingType,The following statement contains a magic number: return stack.GetFrame(2).GetMethod().DeclaringType;
Magic Number,Xbim.Common.XbimExtensions,BinaryReaderExtensions,C:\repos\xBimTeam_XbimEssentials\Xbim.Common\XbimExtensions\BinaryReaderExtensions.cs,ReadShapeTriangulation,The following statement contains a magic number: for (var i = 0; i < numFaces; i++)              {                                    var numTrianglesInFace = br.ReadInt32();                  if (numTrianglesInFace == 0) continue;                  var isPlanar = numTrianglesInFace > 0;                  numTrianglesInFace = Math.Abs(numTrianglesInFace);                  if (isPlanar)                  {                       var faceTriangulation = new XbimFaceTriangulation(numTrianglesInFace' 1);                       faceTriangulation.AddNormal(br.ReadPackedNormal());                       for (var j = 0; j < numTrianglesInFace; j++)                       {                           faceTriangulation.AddIndex(br.ReadIndex(numVertices));//a                           faceTriangulation.AddIndex(br.ReadIndex(numVertices));//b                           faceTriangulation.AddIndex(br.ReadIndex(numVertices));//c                       }                       faces.Add(faceTriangulation);                  }                  else                  {                      var faceTriangulation = new XbimFaceTriangulation(numTrianglesInFace' numTrianglesInFace*3);                      for (var j = 0; j < numTrianglesInFace; j++)                      {                          faceTriangulation.AddIndex(br.ReadIndex(numVertices));//a                          faceTriangulation.AddNormal(br.ReadPackedNormal());                          faceTriangulation.AddIndex(br.ReadIndex(numVertices));//b                          faceTriangulation.AddNormal(br.ReadPackedNormal());                          faceTriangulation.AddIndex(br.ReadIndex(numVertices));//c                          faceTriangulation.AddNormal(br.ReadPackedNormal());                      }                      faces.Add(faceTriangulation);                  }              }
