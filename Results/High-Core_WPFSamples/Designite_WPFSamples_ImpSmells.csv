Implementation smell,Namespace,Class,File,Method,Description
Long Statement,MiscSamples,CalendarSample,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\CalendarSample.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/WPFSamples;component/samples/calendarsample.xaml"' System.UriKind.Relative); " is 122.
Long Statement,WPFSamples.Samples.ChessBoard,ChessBoard,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\ChessBoard\ChessBoard.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/WPFSamples;component/samples/chessboard/chessboard.xaml"' System.UriKind.Relative); " is 129.
Long Statement,WPFSamples.Samples.ComputerList,ComputerList,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\ComputerList\ComputerList.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/WPFSamples;component/samples/computerlist/computerlist.xaml"' System.UriKind.Relative); " is 133.
Long Statement,WPFSamples.Samples.DataGridConnectors,DataGridConnectors,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\DataGridConnectors\DataGridConnectors.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/WPFSamples;component/samples/datagridconnectors/datagridconnectors.xaml"' System.UriKind.Relative); " is 145.
Long Statement,WPFSamples.Samples.HousePlan,ButtonsPanel,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\HousePlan\Left Edition Panel\ButtonsPanel.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/WPFSamples;component/samples/houseplan/left%20edition%20panel/buttonspanel.xaml"' System.UriKind.Relative); " is 153.
Long Statement,WPFSamples.Samples.HousePlan,ConnectorPropertyEditor,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\HousePlan\Left Edition Panel\ConnectorPropertyEditor.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/WPFSamples;component/samples/houseplan/left%20edition%20panel/connectorpropertye" + " is 129.
Long Statement,WPFSamples.Samples.HousePlan,NodePropertyEditor,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\HousePlan\Left Edition Panel\NodePropertyEditor.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/WPFSamples;component/samples/houseplan/left%20edition%20panel/nodepropertyeditor" + " is 129.
Long Statement,WPFSamples.Samples.HousePlan,ParametersEditor,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\HousePlan\Left Edition Panel\ParametersEditor.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/WPFSamples;component/samples/houseplan/left%20edition%20panel/parameterseditor.x" + " is 129.
Long Statement,WPFSamples.Samples.HousePlan,SnapSpotPropertyEditor,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\HousePlan\Left Edition Panel\SnapSpotPropertyEditor.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/WPFSamples;component/samples/houseplan/left%20edition%20panel/snapspotpropertyed" + " is 129.
Long Statement,WPFSamples.Samples.HousePlan,SnapSpot,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\HousePlan\SnapSpot.cs,Recalculate,The length of the statement  "            Location.Value = Point.Add(Parent.Location.Value'new Vector((_lockX ?? Offset.X) * Parent.Size.X'(_lockY ?? Offset.Y) * Parent.Size.Y)); " is 136.
Long Statement,WPFSamples.HousePlan,HousePlan,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\HousePlan\HousePlan.xaml.cs,Snap_DragDelta,The length of the statement  "            snap.Offset.Value = Point.Add(snap.Offset.Value' new Vector(snap.LockX ? 0 : e.HorizontalChange / 1000' snap.LockY ? 0 : e.VerticalChange / 1000)); " is 147.
Long Statement,WPFSamples.HousePlan,HousePlan,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\HousePlan\HousePlan.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/WPFSamples;component/samples/houseplan/houseplan.xaml"' System.UriKind.Relative); " is 127.
Long Statement,WPFSamples.HousePlan,HousePlan,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\HousePlan\HousePlan.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.Primitives.Thumb)(target)).DragDelta += new System.Windows.Controls.Primitives.DragDeltaEventHandler(this.MidPoint_DragDelta); " is 152.
Long Statement,WPFSamples.HousePlan,HousePlan,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\HousePlan\HousePlan.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.ListBox)(target)).PreviewMouseMove += new System.Windows.Input.MouseEventHandler(this.ListBox_PreviewMouseMove); " is 138.
Long Statement,WPFSamples.HousePlan,HousePlan,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\HousePlan\HousePlan.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.ListBox)(target)).PreviewMouseDown += new System.Windows.Input.MouseButtonEventHandler(this.ListBox_PreviewMouseDown); " is 144.
Long Statement,WPFSamples.HousePlan,HousePlan,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\HousePlan\HousePlan.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.Primitives.Thumb)(target)).DragDelta += new System.Windows.Controls.Primitives.DragDeltaEventHandler(this.Thumb_Drag); " is 144.
Long Statement,WPFSamples.HousePlan,HousePlan,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\HousePlan\HousePlan.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.Primitives.Thumb)(target)).DragDelta += new System.Windows.Controls.Primitives.DragDeltaEventHandler(this.Snap_DragDelta); " is 148.
Long Statement,WPFSamples.Samples,VisualBrushTooltip,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\VisualBrushTooltip.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/WPFSamples;component/samples/visualbrushtooltip.xaml"' System.UriKind.Relative); " is 126.
Long Statement,WPFSamples.Samples.ImprovingWinformsPerformance,ImprovingWinformsPerformance,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\ImprovingWinformsPerformance\ImprovingWinformsPerformance.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/WPFSamples;component/samples/improvingwinformsperformance/improvingwinformsperfo" + " is 129.
Long Statement,WPFSamples.Samples.ListBoxAndUserControls,ListBoxAndUserControls,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\ListBoxAndUserControls\ListBoxAndUserControls.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/WPFSamples;component/samples/listboxandusercontrols/listboxandusercontrols.xaml"' System.UriKind.Relative); " is 153.
Long Statement,WPFSamples.Samples.ListBoxAndUserControls,UserControl1,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\ListBoxAndUserControls\UserControl1.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/WPFSamples;component/samples/listboxandusercontrols/usercontrol1.xaml"' System.UriKind.Relative); " is 143.
Long Statement,WPFSamples.Samples.ListBoxAndUserControls,UserControl2,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\ListBoxAndUserControls\UserControl2.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/WPFSamples;component/samples/listboxandusercontrols/usercontrol2.xaml"' System.UriKind.Relative); " is 143.
Long Statement,WPFSamples.Samples.ListBoxAndUserControls,UserControl3,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\ListBoxAndUserControls\UserControl3.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/WPFSamples;component/samples/listboxandusercontrols/usercontrol3.xaml"' System.UriKind.Relative); " is 143.
Long Statement,WPFSamples.Samples.MVVMDynamicCommands,MVVMDynamicCommands,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\MVVMDynamicCommands\MVVMDynamicCommands.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/WPFSamples;component/samples/mvvmdynamiccommands/mvvmdynamiccommands.xaml"' System.UriKind.Relative); " is 147.
Long Statement,WPFSamples.Samples.MVVMTabControl,MVVMTabControl,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\MVVMTabControl\MVVMTabControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/WPFSamples;component/samples/mvvmtabcontrol/mvvmtabcontrol.xaml"' System.UriKind.Relative); " is 137.
Long Statement,WPFSamples.Samples.NodesEditor,ButtonsPanel,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\NodesEditor\Left Edition Panel\ButtonsPanel.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/WPFSamples;component/samples/nodeseditor/left%20edition%20panel/buttonspanel.xam" + " is 129.
Long Statement,WPFSamples.Samples.NodesEditor,ConnectorPropertyEditor,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\NodesEditor\Left Edition Panel\ConnectorPropertyEditor.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/WPFSamples;component/samples/nodeseditor/left%20edition%20panel/connectorpropert" + " is 129.
Long Statement,WPFSamples.Samples.NodesEditor,NodePropertyEditor,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\NodesEditor\Left Edition Panel\NodePropertyEditor.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/WPFSamples;component/samples/nodeseditor/left%20edition%20panel/nodepropertyedit" + " is 129.
Long Statement,WPFSamples.Samples.NodesEditor,ParametersEditor,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\NodesEditor\Left Edition Panel\ParametersEditor.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/WPFSamples;component/samples/nodeseditor/left%20edition%20panel/parameterseditor" + " is 129.
Long Statement,WPFSamples.Samples.NodesEditor,NodesEditor,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\NodesEditor\NodesEditor.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/WPFSamples;component/samples/nodeseditor/nodeseditor.xaml"' System.UriKind.Relative); " is 131.
Long Statement,WPFSamples.Samples.NodesEditor,NodesEditor,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\NodesEditor\NodesEditor.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.ListBox)(target)).PreviewMouseMove += new System.Windows.Input.MouseEventHandler(this.ListBox_PreviewMouseMove); " is 138.
Long Statement,WPFSamples.Samples.NodesEditor,NodesEditor,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\NodesEditor\NodesEditor.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.ListBox)(target)).PreviewMouseDown += new System.Windows.Input.MouseButtonEventHandler(this.ListBox_PreviewMouseDown); " is 144.
Long Statement,WPFSamples.Samples.NodesEditor,NodesEditor,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\NodesEditor\NodesEditor.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.Primitives.Thumb)(target)).DragDelta += new System.Windows.Controls.Primitives.DragDeltaEventHandler(this.Thumb_Drag); " is 144.
Long Statement,WPFSamples.Samples.SamsGameSample,SamsGameSample,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\SamsGameSample\SamsGameSample.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/WPFSamples;component/samples/samsgamesample/samsgamesample.xaml"' System.UriKind.Relative); " is 137.
Long Statement,WPFSamples.Samples.StringToUI,StringToUI,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\StringToUI\StringToUI.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/WPFSamples;component/samples/stringtoui/stringtoui.xaml"' System.UriKind.Relative); " is 129.
Long Statement,WPFSamples.Samples.SudokuBoard,SudokuBoard,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\SudokuBoard\SudokuBoard.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/WPFSamples;component/samples/sudokuboard/sudokuboard.xaml"' System.UriKind.Relative); " is 131.
Long Statement,WPFSamples.Samples.TimerGauge,TimerGauge,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\TimerGauge\TimerGauge.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/WPFSamples;component/samples/timergauge/timergauge.xaml"' System.UriKind.Relative); " is 129.
Long Statement,WPFSamples.Samples.ToggleButtonGrid,ToggleButtonGrid,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\ToggleButtonGrid\ToggleButtonGrid.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/WPFSamples;component/samples/togglebuttongrid/togglebuttongrid.xaml"' System.UriKind.Relative); " is 141.
Long Statement,XamlGeneratedNamespace,GeneratedInternalTypeHelper,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\obj\Debug\GeneratedInternalTypeHelper.g.cs,CreateInstance,The length of the statement  "            return System.Activator.CreateInstance(type' ((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)  " is 128.
Magic Number,WPFSamples,MainWindow,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\MainWindow.xaml.cs,LoadSamples,The following statement contains a magic number: await Task.Delay(50);
Magic Number,WPFSamples.Samples.ChessBoard,ChessBoard,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\ChessBoard\ChessBoard.xaml.cs,CreateBoard,The following statement contains a magic number: var isBlack = row % 2 == 1;
Magic Number,WPFSamples.Samples.ChessBoard,ChessBoard,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\ChessBoard\ChessBoard.xaml.cs,NewGame,The following statement contains a magic number: Pieces.Add(new ChessPiece() { Row = 0' Column = 2' Type = ChessPieceTypes.Bishop' IsBlack = true });
Magic Number,WPFSamples.Samples.ChessBoard,ChessBoard,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\ChessBoard\ChessBoard.xaml.cs,NewGame,The following statement contains a magic number: Pieces.Add(new ChessPiece() { Row = 0' Column = 3' Type = ChessPieceTypes.Queen' IsBlack = true });
Magic Number,WPFSamples.Samples.ChessBoard,ChessBoard,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\ChessBoard\ChessBoard.xaml.cs,NewGame,The following statement contains a magic number: Pieces.Add(new ChessPiece() { Row = 0' Column = 4' Type = ChessPieceTypes.King' IsBlack = true });
Magic Number,WPFSamples.Samples.ChessBoard,ChessBoard,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\ChessBoard\ChessBoard.xaml.cs,NewGame,The following statement contains a magic number: Pieces.Add(new ChessPiece() { Row = 0' Column = 5' Type = ChessPieceTypes.Bishop' IsBlack = true });
Magic Number,WPFSamples.Samples.ChessBoard,ChessBoard,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\ChessBoard\ChessBoard.xaml.cs,NewGame,The following statement contains a magic number: Pieces.Add(new ChessPiece() { Row = 0' Column = 6' Type = ChessPieceTypes.Knight' IsBlack = true });
Magic Number,WPFSamples.Samples.ChessBoard,ChessBoard,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\ChessBoard\ChessBoard.xaml.cs,NewGame,The following statement contains a magic number: Pieces.Add(new ChessPiece() { Row = 0' Column = 7' Type = ChessPieceTypes.Tower' IsBlack = true });
Magic Number,WPFSamples.Samples.ChessBoard,ChessBoard,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\ChessBoard\ChessBoard.xaml.cs,NewGame,The following statement contains a magic number: Enumerable                  .Range(0' 8)                  .Select(x => new ChessPiece()                  {                      Row = 1'                      Column = x'                      IsBlack = true'                      Type = ChessPieceTypes.Pawn                  })                  .ToList()                  .ForEach(Pieces.Add);
Magic Number,WPFSamples.Samples.ChessBoard,ChessBoard,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\ChessBoard\ChessBoard.xaml.cs,NewGame,The following statement contains a magic number: Pieces.Add(new ChessPiece() { Row = 7' Column = 0' Type = ChessPieceTypes.Tower' IsBlack = false });
Magic Number,WPFSamples.Samples.ChessBoard,ChessBoard,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\ChessBoard\ChessBoard.xaml.cs,NewGame,The following statement contains a magic number: Pieces.Add(new ChessPiece() { Row = 7' Column = 1' Type = ChessPieceTypes.Knight' IsBlack = false });
Magic Number,WPFSamples.Samples.ChessBoard,ChessBoard,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\ChessBoard\ChessBoard.xaml.cs,NewGame,The following statement contains a magic number: Pieces.Add(new ChessPiece() { Row = 7' Column = 2' Type = ChessPieceTypes.Bishop' IsBlack = false });
Magic Number,WPFSamples.Samples.ChessBoard,ChessBoard,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\ChessBoard\ChessBoard.xaml.cs,NewGame,The following statement contains a magic number: Pieces.Add(new ChessPiece() { Row = 7' Column = 2' Type = ChessPieceTypes.Bishop' IsBlack = false });
Magic Number,WPFSamples.Samples.ChessBoard,ChessBoard,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\ChessBoard\ChessBoard.xaml.cs,NewGame,The following statement contains a magic number: Pieces.Add(new ChessPiece() { Row = 7' Column = 3' Type = ChessPieceTypes.Queen' IsBlack = false });
Magic Number,WPFSamples.Samples.ChessBoard,ChessBoard,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\ChessBoard\ChessBoard.xaml.cs,NewGame,The following statement contains a magic number: Pieces.Add(new ChessPiece() { Row = 7' Column = 3' Type = ChessPieceTypes.Queen' IsBlack = false });
Magic Number,WPFSamples.Samples.ChessBoard,ChessBoard,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\ChessBoard\ChessBoard.xaml.cs,NewGame,The following statement contains a magic number: Pieces.Add(new ChessPiece() { Row = 7' Column = 4' Type = ChessPieceTypes.King' IsBlack = false });
Magic Number,WPFSamples.Samples.ChessBoard,ChessBoard,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\ChessBoard\ChessBoard.xaml.cs,NewGame,The following statement contains a magic number: Pieces.Add(new ChessPiece() { Row = 7' Column = 4' Type = ChessPieceTypes.King' IsBlack = false });
Magic Number,WPFSamples.Samples.ChessBoard,ChessBoard,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\ChessBoard\ChessBoard.xaml.cs,NewGame,The following statement contains a magic number: Pieces.Add(new ChessPiece() { Row = 7' Column = 5' Type = ChessPieceTypes.Bishop' IsBlack = false });
Magic Number,WPFSamples.Samples.ChessBoard,ChessBoard,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\ChessBoard\ChessBoard.xaml.cs,NewGame,The following statement contains a magic number: Pieces.Add(new ChessPiece() { Row = 7' Column = 5' Type = ChessPieceTypes.Bishop' IsBlack = false });
Magic Number,WPFSamples.Samples.ChessBoard,ChessBoard,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\ChessBoard\ChessBoard.xaml.cs,NewGame,The following statement contains a magic number: Pieces.Add(new ChessPiece() { Row = 7' Column = 6' Type = ChessPieceTypes.Knight' IsBlack = false });
Magic Number,WPFSamples.Samples.ChessBoard,ChessBoard,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\ChessBoard\ChessBoard.xaml.cs,NewGame,The following statement contains a magic number: Pieces.Add(new ChessPiece() { Row = 7' Column = 6' Type = ChessPieceTypes.Knight' IsBlack = false });
Magic Number,WPFSamples.Samples.ChessBoard,ChessBoard,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\ChessBoard\ChessBoard.xaml.cs,NewGame,The following statement contains a magic number: Pieces.Add(new ChessPiece() { Row = 7' Column = 7' Type = ChessPieceTypes.Tower' IsBlack = false });
Magic Number,WPFSamples.Samples.ChessBoard,ChessBoard,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\ChessBoard\ChessBoard.xaml.cs,NewGame,The following statement contains a magic number: Pieces.Add(new ChessPiece() { Row = 7' Column = 7' Type = ChessPieceTypes.Tower' IsBlack = false });
Magic Number,WPFSamples.Samples.ChessBoard,ChessBoard,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\ChessBoard\ChessBoard.xaml.cs,NewGame,The following statement contains a magic number: Enumerable.Range(0' 8).Select(x => new ChessPiece()              {                  Row = 6'                  Column = x'                  IsBlack = false'                  Type = ChessPieceTypes.Pawn              }).ToList().ForEach(Pieces.Add);
Magic Number,WPFSamples.Samples.ChessBoard,ChessBoard,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\ChessBoard\ChessBoard.xaml.cs,NewGame,The following statement contains a magic number: Enumerable.Range(0' 8).Select(x => new ChessPiece()              {                  Row = 6'                  Column = x'                  IsBlack = false'                  Type = ChessPieceTypes.Pawn              }).ToList().ForEach(Pieces.Add);
Magic Number,WPFSamples.Samples.ComputerList,RandomConnectionAdder,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\ComputerList\RandomConnectionAdder.cs,RandomConnectionAdder,The following statement contains a magic number: timer = new Timer(x => AddConnection()' null' 5000' 2000);
Magic Number,WPFSamples.Samples.ComputerList,RandomConnectionAdder,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\ComputerList\RandomConnectionAdder.cs,RandomConnectionAdder,The following statement contains a magic number: timer = new Timer(x => AddConnection()' null' 5000' 2000);
Magic Number,WPFSamples.Samples.ComputerList,RandomConnectionAdder,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\ComputerList\RandomConnectionAdder.cs,AddConnection,The following statement contains a magic number: var computernumber = random.Next(1' 50);
Magic Number,WPFSamples.Samples.DataGridConnectors,DataGridConnectors,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\DataGridConnectors\DataGridConnectors.xaml.cs,DataGridConnectors,The following statement contains a magic number: Items1 = Enumerable.Range(0' 1000).Select(x => "Item1 - " + x.ToString()).ToList();
Magic Number,WPFSamples.Samples.DataGridConnectors,DataGridConnectors,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\DataGridConnectors\DataGridConnectors.xaml.cs,DataGridConnectors,The following statement contains a magic number: Items2 = Enumerable.Range(0' 1000).Select(x => "Item2 - " + x.ToString()).ToList();
Magic Number,WPFSamples.Samples.DataGridConnectors,DataGridConnectors,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\DataGridConnectors\DataGridConnectors.xaml.cs,scrollviewer_ScrollChanged,The following statement contains a magic number: connector.StartPoint = Point.Add(startrow.TransformToAncestor(Root).Transform(new Point(0' 0))'                                                        new Vector(startrow.ActualWidth + 5' (startrow.ActualHeight / 2)*-1));
Magic Number,WPFSamples.Samples.DataGridConnectors,DataGridConnectors,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\DataGridConnectors\DataGridConnectors.xaml.cs,scrollviewer_ScrollChanged,The following statement contains a magic number: connector.StartPoint = Point.Add(startrow.TransformToAncestor(Root).Transform(new Point(0' 0))'                                                        new Vector(startrow.ActualWidth + 5' (startrow.ActualHeight / 2)*-1));
Magic Number,WPFSamples.Samples.DataGridConnectors,DataGridConnectors,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\DataGridConnectors\DataGridConnectors.xaml.cs,scrollviewer_ScrollChanged,The following statement contains a magic number: connector.EndPoint = Point.Add(endrow.TransformToAncestor(Root).Transform(new Point(0' 0))'                                                     new Vector(-5'(endrow.ActualHeight / 2 ) * -1));
Magic Number,WPFSamples.Samples.DataGridConnectors,DataGridConnectors,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\DataGridConnectors\DataGridConnectors.xaml.cs,scrollviewer_ScrollChanged,The following statement contains a magic number: connector.EndPoint = Point.Add(endrow.TransformToAncestor(Root).Transform(new Point(0' 0))'                                                     new Vector(-5'(endrow.ActualHeight / 2 ) * -1));
Magic Number,WPFSamples.Samples.DataGridConnectors,DataGridConnectors,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\DataGridConnectors\DataGridConnectors.xaml.cs,Sequential_Click,The following statement contains a magic number: Enumerable.Range(0' 1000).Select(x => new DataItemConnector() { Start = Items1[x]' End = Items2[x] })                                      .ToList()                                      .ForEach(x => Connectors.Add(x));
Magic Number,WPFSamples.Samples.DataGridConnectors,DataGridConnectors,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\DataGridConnectors\DataGridConnectors.xaml.cs,Random_Click,The following statement contains a magic number: Enumerable.Range(500' random.Next(600' 1000))                        .Select(x => new DataItemConnector()                                      {                                          Start = Items1[random.Next(0' 999)]'                                          End = Items2[random.Next(0' 999)]                                      })                        .ToList()                        .ForEach(Connectors.Add);
Magic Number,WPFSamples.Samples.DataGridConnectors,DataGridConnectors,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\DataGridConnectors\DataGridConnectors.xaml.cs,Random_Click,The following statement contains a magic number: Enumerable.Range(500' random.Next(600' 1000))                        .Select(x => new DataItemConnector()                                      {                                          Start = Items1[random.Next(0' 999)]'                                          End = Items2[random.Next(0' 999)]                                      })                        .ToList()                        .ForEach(Connectors.Add);
Magic Number,WPFSamples.Samples.DataGridConnectors,DataGridConnectors,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\DataGridConnectors\DataGridConnectors.xaml.cs,Random_Click,The following statement contains a magic number: Enumerable.Range(500' random.Next(600' 1000))                        .Select(x => new DataItemConnector()                                      {                                          Start = Items1[random.Next(0' 999)]'                                          End = Items2[random.Next(0' 999)]                                      })                        .ToList()                        .ForEach(Connectors.Add);
Magic Number,WPFSamples.Samples.DataGridConnectors,DataGridConnectors,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\DataGridConnectors\DataGridConnectors.xaml.cs,Random_Click,The following statement contains a magic number: Enumerable.Range(500' random.Next(600' 1000))                        .Select(x => new DataItemConnector()                                      {                                          Start = Items1[random.Next(0' 999)]'                                          End = Items2[random.Next(0' 999)]                                      })                        .ToList()                        .ForEach(Connectors.Add);
Magic Number,WPFSamples.Samples.DataGridConnectors,DataGridConnectors,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\DataGridConnectors\DataGridConnectors.xaml.cs,Random_Click,The following statement contains a magic number: Enumerable.Range(500' random.Next(600' 1000))                        .Select(x => new DataItemConnector()                                      {                                          Start = Items1[random.Next(0' 999)]'                                          End = Items2[random.Next(0' 999)]                                      })                        .ToList()                        .ForEach(Connectors.Add);
Magic Number,WPFSamples.Samples.DataGridConnectors,DataGridConnectors,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\DataGridConnectors\DataGridConnectors.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Root = ((System.Windows.Controls.Grid)(target));              return;              case 2:              this.DG1 = ((System.Windows.Controls.DataGrid)(target));              return;              case 3:              this.DG2 = ((System.Windows.Controls.DataGrid)(target));              return;              case 4:                            #line 47 "..\..\..\..\Samples\DataGridConnectors\DataGridConnectors.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Sequential_Click);                            #line default              #line hidden              return;              case 5:                            #line 48 "..\..\..\..\Samples\DataGridConnectors\DataGridConnectors.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Random_Click);                            #line default              #line hidden              return;              }
Magic Number,WPFSamples.Samples.DataGridConnectors,DataGridConnectors,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\DataGridConnectors\DataGridConnectors.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Root = ((System.Windows.Controls.Grid)(target));              return;              case 2:              this.DG1 = ((System.Windows.Controls.DataGrid)(target));              return;              case 3:              this.DG2 = ((System.Windows.Controls.DataGrid)(target));              return;              case 4:                            #line 47 "..\..\..\..\Samples\DataGridConnectors\DataGridConnectors.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Sequential_Click);                            #line default              #line hidden              return;              case 5:                            #line 48 "..\..\..\..\Samples\DataGridConnectors\DataGridConnectors.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Random_Click);                            #line default              #line hidden              return;              }
Magic Number,WPFSamples.Samples.DataGridConnectors,DataGridConnectors,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\DataGridConnectors\DataGridConnectors.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Root = ((System.Windows.Controls.Grid)(target));              return;              case 2:              this.DG1 = ((System.Windows.Controls.DataGrid)(target));              return;              case 3:              this.DG2 = ((System.Windows.Controls.DataGrid)(target));              return;              case 4:                            #line 47 "..\..\..\..\Samples\DataGridConnectors\DataGridConnectors.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Sequential_Click);                            #line default              #line hidden              return;              case 5:                            #line 48 "..\..\..\..\Samples\DataGridConnectors\DataGridConnectors.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Random_Click);                            #line default              #line hidden              return;              }
Magic Number,WPFSamples.Samples.DataGridConnectors,DataGridConnectors,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\DataGridConnectors\DataGridConnectors.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Root = ((System.Windows.Controls.Grid)(target));              return;              case 2:              this.DG1 = ((System.Windows.Controls.DataGrid)(target));              return;              case 3:              this.DG2 = ((System.Windows.Controls.DataGrid)(target));              return;              case 4:                            #line 47 "..\..\..\..\Samples\DataGridConnectors\DataGridConnectors.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Sequential_Click);                            #line default              #line hidden              return;              case 5:                            #line 48 "..\..\..\..\Samples\DataGridConnectors\DataGridConnectors.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Random_Click);                            #line default              #line hidden              return;              }
Magic Number,WPFSamples.Samples.HousePlan,NodesDataSource,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\HousePlan\NodesDataSource.cs,GetRandomNode,The following statement contains a magic number: var nodenumber = random.Next(0' 100);
Magic Number,WPFSamples.Samples.HousePlan,NodesDataSource,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\HousePlan\NodesDataSource.cs,GetRandomNode,The following statement contains a magic number: var node = new Node                  {                      Size = {Value = new Point(150'120)}'                      Name = nodename'                      ShortName = "N" + nodenumber'                      Location = { Value = new Point(random.Next(0' 500)' random.Next(0' 500)) }'                      Color = Colors[random.Next(0' Colors.Count - 1)]'                  };
Magic Number,WPFSamples.Samples.HousePlan,NodesDataSource,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\HousePlan\NodesDataSource.cs,GetRandomNode,The following statement contains a magic number: var node = new Node                  {                      Size = {Value = new Point(150'120)}'                      Name = nodename'                      ShortName = "N" + nodenumber'                      Location = { Value = new Point(random.Next(0' 500)' random.Next(0' 500)) }'                      Color = Colors[random.Next(0' Colors.Count - 1)]'                  };
Magic Number,WPFSamples.Samples.HousePlan,NodesDataSource,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\HousePlan\NodesDataSource.cs,GetRandomNode,The following statement contains a magic number: var node = new Node                  {                      Size = {Value = new Point(150'120)}'                      Name = nodename'                      ShortName = "N" + nodenumber'                      Location = { Value = new Point(random.Next(0' 500)' random.Next(0' 500)) }'                      Color = Colors[random.Next(0' Colors.Count - 1)]'                  };
Magic Number,WPFSamples.Samples.HousePlan,NodesDataSource,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\HousePlan\NodesDataSource.cs,GetRandomNode,The following statement contains a magic number: var node = new Node                  {                      Size = {Value = new Point(150'120)}'                      Name = nodename'                      ShortName = "N" + nodenumber'                      Location = { Value = new Point(random.Next(0' 500)' random.Next(0' 500)) }'                      Color = Colors[random.Next(0' Colors.Count - 1)]'                  };
Magic Number,WPFSamples.Samples.HousePlan,NodesDataSource,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\HousePlan\NodesDataSource.cs,GetRandomNode,The following statement contains a magic number: node.Snaps.AddRange(new[]                                      {                                          new SnapSpot(node) {Offset = {X = 0' Y = .5}' Angle = -90' Name = "LeftSnap" + nodenumber' LockX = true}'                                          new SnapSpot(node) {Offset = {X = .5' Y = 0}' Angle = 0' Name = "TopSnap" + nodenumber' LockY = true}'                                          new SnapSpot(node) {Offset = {X = 1' Y = .5}' Angle = 90' Name = "RightSnap" + nodenumber' LockX = true}'                                          new SnapSpot(node) {Offset = {X = .5' Y = 1}' Angle = 180' Name = "BottomSnap" + nodenumber' LockY = true}'                                      });
Magic Number,WPFSamples.Samples.HousePlan,NodesDataSource,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\HousePlan\NodesDataSource.cs,GetRandomNode,The following statement contains a magic number: node.Snaps.AddRange(new[]                                      {                                          new SnapSpot(node) {Offset = {X = 0' Y = .5}' Angle = -90' Name = "LeftSnap" + nodenumber' LockX = true}'                                          new SnapSpot(node) {Offset = {X = .5' Y = 0}' Angle = 0' Name = "TopSnap" + nodenumber' LockY = true}'                                          new SnapSpot(node) {Offset = {X = 1' Y = .5}' Angle = 90' Name = "RightSnap" + nodenumber' LockX = true}'                                          new SnapSpot(node) {Offset = {X = .5' Y = 1}' Angle = 180' Name = "BottomSnap" + nodenumber' LockY = true}'                                      });
Magic Number,WPFSamples.Samples.HousePlan,NodesDataSource,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\HousePlan\NodesDataSource.cs,GetRandomNode,The following statement contains a magic number: node.Snaps.AddRange(new[]                                      {                                          new SnapSpot(node) {Offset = {X = 0' Y = .5}' Angle = -90' Name = "LeftSnap" + nodenumber' LockX = true}'                                          new SnapSpot(node) {Offset = {X = .5' Y = 0}' Angle = 0' Name = "TopSnap" + nodenumber' LockY = true}'                                          new SnapSpot(node) {Offset = {X = 1' Y = .5}' Angle = 90' Name = "RightSnap" + nodenumber' LockX = true}'                                          new SnapSpot(node) {Offset = {X = .5' Y = 1}' Angle = 180' Name = "BottomSnap" + nodenumber' LockY = true}'                                      });
Magic Number,WPFSamples.Samples.HousePlan,NodesDataSource,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\HousePlan\NodesDataSource.cs,GetRandomNode,The following statement contains a magic number: node.Snaps.AddRange(new[]                                      {                                          new SnapSpot(node) {Offset = {X = 0' Y = .5}' Angle = -90' Name = "LeftSnap" + nodenumber' LockX = true}'                                          new SnapSpot(node) {Offset = {X = .5' Y = 0}' Angle = 0' Name = "TopSnap" + nodenumber' LockY = true}'                                          new SnapSpot(node) {Offset = {X = 1' Y = .5}' Angle = 90' Name = "RightSnap" + nodenumber' LockX = true}'                                          new SnapSpot(node) {Offset = {X = .5' Y = 1}' Angle = 180' Name = "BottomSnap" + nodenumber' LockY = true}'                                      });
Magic Number,WPFSamples.Samples.HousePlan,NodesDataSource,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\HousePlan\NodesDataSource.cs,GetRandomNode,The following statement contains a magic number: node.Snaps.AddRange(new[]                                      {                                          new SnapSpot(node) {Offset = {X = 0' Y = .5}' Angle = -90' Name = "LeftSnap" + nodenumber' LockX = true}'                                          new SnapSpot(node) {Offset = {X = .5' Y = 0}' Angle = 0' Name = "TopSnap" + nodenumber' LockY = true}'                                          new SnapSpot(node) {Offset = {X = 1' Y = .5}' Angle = 90' Name = "RightSnap" + nodenumber' LockX = true}'                                          new SnapSpot(node) {Offset = {X = .5' Y = 1}' Angle = 180' Name = "BottomSnap" + nodenumber' LockY = true}'                                      });
Magic Number,WPFSamples.Samples.HousePlan,NodesDataSource,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\HousePlan\NodesDataSource.cs,GetRandomNode,The following statement contains a magic number: node.Snaps.AddRange(new[]                                      {                                          new SnapSpot(node) {Offset = {X = 0' Y = .5}' Angle = -90' Name = "LeftSnap" + nodenumber' LockX = true}'                                          new SnapSpot(node) {Offset = {X = .5' Y = 0}' Angle = 0' Name = "TopSnap" + nodenumber' LockY = true}'                                          new SnapSpot(node) {Offset = {X = 1' Y = .5}' Angle = 90' Name = "RightSnap" + nodenumber' LockX = true}'                                          new SnapSpot(node) {Offset = {X = .5' Y = 1}' Angle = 180' Name = "BottomSnap" + nodenumber' LockY = true}'                                      });
Magic Number,WPFSamples.Samples.HousePlan,NodesDataSource,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\HousePlan\NodesDataSource.cs,GetRandomNode,The following statement contains a magic number: node.Snaps.AddRange(new[]                                      {                                          new SnapSpot(node) {Offset = {X = 0' Y = .5}' Angle = -90' Name = "LeftSnap" + nodenumber' LockX = true}'                                          new SnapSpot(node) {Offset = {X = .5' Y = 0}' Angle = 0' Name = "TopSnap" + nodenumber' LockY = true}'                                          new SnapSpot(node) {Offset = {X = 1' Y = .5}' Angle = 90' Name = "RightSnap" + nodenumber' LockX = true}'                                          new SnapSpot(node) {Offset = {X = .5' Y = 1}' Angle = 180' Name = "BottomSnap" + nodenumber' LockY = true}'                                      });
Magic Number,WPFSamples.Samples.HousePlan,NodesDataSource,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\HousePlan\NodesDataSource.cs,GetRandomNodes,The following statement contains a magic number: return Enumerable.Range(5' random.Next(6' 10)).Select(x => GetRandomNode());
Magic Number,WPFSamples.Samples.HousePlan,NodesDataSource,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\HousePlan\NodesDataSource.cs,GetRandomNodes,The following statement contains a magic number: return Enumerable.Range(5' random.Next(6' 10)).Select(x => GetRandomNode());
Magic Number,WPFSamples.Samples.HousePlan,NodesDataSource,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\HousePlan\NodesDataSource.cs,GetRandomNodes,The following statement contains a magic number: return Enumerable.Range(5' random.Next(6' 10)).Select(x => GetRandomNode());
Magic Number,WPFSamples.Samples.HousePlan,NodesDataSource,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\HousePlan\NodesDataSource.cs,GetRandomConnectors,The following statement contains a magic number: result.Add(new Connector()                   {                      Start = nodes[i].Snaps[random.Next(0'3)]'                       End = nodes[i + 1].Snaps[random.Next(0'3)]'                      Name = "Connector" + random.Next(1' 100).ToString()'                      Color = Colors[random.Next(0' Colors.Count - 1)]'                  });
Magic Number,WPFSamples.Samples.HousePlan,NodesDataSource,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\HousePlan\NodesDataSource.cs,GetRandomConnectors,The following statement contains a magic number: result.Add(new Connector()                   {                      Start = nodes[i].Snaps[random.Next(0'3)]'                       End = nodes[i + 1].Snaps[random.Next(0'3)]'                      Name = "Connector" + random.Next(1' 100).ToString()'                      Color = Colors[random.Next(0' Colors.Count - 1)]'                  });
Magic Number,WPFSamples.Samples.HousePlan,NodesDataSource,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\HousePlan\NodesDataSource.cs,GetRandomConnectors,The following statement contains a magic number: result.Add(new Connector()                   {                      Start = nodes[i].Snaps[random.Next(0'3)]'                       End = nodes[i + 1].Snaps[random.Next(0'3)]'                      Name = "Connector" + random.Next(1' 100).ToString()'                      Color = Colors[random.Next(0' Colors.Count - 1)]'                  });
Magic Number,WPFSamples.HousePlan,HousePlan,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\HousePlan\HousePlan.xaml.cs,Snap_DragDelta,The following statement contains a magic number: snap.Offset.Value = Point.Add(snap.Offset.Value' new Vector(snap.LockX ? 0 : e.HorizontalChange / 1000' snap.LockY ? 0 : e.VerticalChange / 1000));
Magic Number,WPFSamples.HousePlan,HousePlan,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\HousePlan\HousePlan.xaml.cs,Snap_DragDelta,The following statement contains a magic number: snap.Offset.Value = Point.Add(snap.Offset.Value' new Vector(snap.LockX ? 0 : e.HorizontalChange / 1000' snap.LockY ? 0 : e.VerticalChange / 1000));
Magic Number,WPFSamples.HousePlan,HousePlan,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\HousePlan\HousePlan.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.view = ((WPFSamples.HousePlan.HousePlan)(target));              return;              case 2:                            #line 54 "..\..\..\..\Samples\HousePlan\HousePlan.xaml"              ((System.Windows.Controls.Primitives.Thumb)(target)).DragDelta += new System.Windows.Controls.Primitives.DragDeltaEventHandler(this.MidPoint_DragDelta);                            #line default              #line hidden              return;              case 5:                            #line 191 "..\..\..\..\Samples\HousePlan\HousePlan.xaml"              ((System.Windows.Controls.ListBox)(target)).PreviewMouseMove += new System.Windows.Input.MouseEventHandler(this.ListBox_PreviewMouseMove);                            #line default              #line hidden                            #line 192 "..\..\..\..\Samples\HousePlan\HousePlan.xaml"              ((System.Windows.Controls.ListBox)(target)).PreviewMouseDown += new System.Windows.Input.MouseButtonEventHandler(this.ListBox_PreviewMouseDown);                            #line default              #line hidden              return;              }
Magic Number,WPFSamples.HousePlan,HousePlan,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\HousePlan\HousePlan.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.view = ((WPFSamples.HousePlan.HousePlan)(target));              return;              case 2:                            #line 54 "..\..\..\..\Samples\HousePlan\HousePlan.xaml"              ((System.Windows.Controls.Primitives.Thumb)(target)).DragDelta += new System.Windows.Controls.Primitives.DragDeltaEventHandler(this.MidPoint_DragDelta);                            #line default              #line hidden              return;              case 5:                            #line 191 "..\..\..\..\Samples\HousePlan\HousePlan.xaml"              ((System.Windows.Controls.ListBox)(target)).PreviewMouseMove += new System.Windows.Input.MouseEventHandler(this.ListBox_PreviewMouseMove);                            #line default              #line hidden                            #line 192 "..\..\..\..\Samples\HousePlan\HousePlan.xaml"              ((System.Windows.Controls.ListBox)(target)).PreviewMouseDown += new System.Windows.Input.MouseButtonEventHandler(this.ListBox_PreviewMouseDown);                            #line default              #line hidden              return;              }
Magic Number,WPFSamples.HousePlan,HousePlan,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\HousePlan\HousePlan.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 3:                            #line 77 "..\..\..\..\Samples\HousePlan\HousePlan.xaml"              ((System.Windows.Controls.Primitives.Thumb)(target)).DragDelta += new System.Windows.Controls.Primitives.DragDeltaEventHandler(this.Thumb_Drag);                            #line default              #line hidden              break;              case 4:                            #line 165 "..\..\..\..\Samples\HousePlan\HousePlan.xaml"              ((System.Windows.Controls.Primitives.Thumb)(target)).DragDelta += new System.Windows.Controls.Primitives.DragDeltaEventHandler(this.Snap_DragDelta);                            #line default              #line hidden              break;              }
Magic Number,WPFSamples.HousePlan,HousePlan,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\HousePlan\HousePlan.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 3:                            #line 77 "..\..\..\..\Samples\HousePlan\HousePlan.xaml"              ((System.Windows.Controls.Primitives.Thumb)(target)).DragDelta += new System.Windows.Controls.Primitives.DragDeltaEventHandler(this.Thumb_Drag);                            #line default              #line hidden              break;              case 4:                            #line 165 "..\..\..\..\Samples\HousePlan\HousePlan.xaml"              ((System.Windows.Controls.Primitives.Thumb)(target)).DragDelta += new System.Windows.Controls.Primitives.DragDeltaEventHandler(this.Snap_DragDelta);                            #line default              #line hidden              break;              }
Magic Number,WPFSamples.Samples.LinesEditor,LinesDataSource,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\LinesEditor\LinesDataSource.cs,GetRandomLines,The following statement contains a magic number: return Enumerable.Range(0' rnd.Next(10' 20)).Select(GetRandomLine).ToList();
Magic Number,WPFSamples.Samples.LinesEditor,LinesDataSource,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\LinesEditor\LinesDataSource.cs,GetRandomLines,The following statement contains a magic number: return Enumerable.Range(0' rnd.Next(10' 20)).Select(GetRandomLine).ToList();
Magic Number,WPFSamples.Samples.LinesEditor,LinesDataSource,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\LinesEditor\LinesDataSource.cs,GetRandomLine,The following statement contains a magic number: return new LineViewModel()                  {                      Name = "Line" + index.ToString()'                      X1 = rnd.Next(0' 500)'                      X2 = rnd.Next(0' 500)'                      Y1 = rnd.Next(0' 500)'                      Y2 = rnd.Next(0' 500)'                      Opacity = .7'                      Color1 = colors[rnd.Next(0' colors.Count - 1)]'                      Color2 = colors[rnd.Next(0' colors.Count - 1)]'                      Thickness = rnd.Next(5' 10)'                      AnimationSpeed = 5'                      Animate = false                  };
Magic Number,WPFSamples.Samples.LinesEditor,LinesDataSource,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\LinesEditor\LinesDataSource.cs,GetRandomLine,The following statement contains a magic number: return new LineViewModel()                  {                      Name = "Line" + index.ToString()'                      X1 = rnd.Next(0' 500)'                      X2 = rnd.Next(0' 500)'                      Y1 = rnd.Next(0' 500)'                      Y2 = rnd.Next(0' 500)'                      Opacity = .7'                      Color1 = colors[rnd.Next(0' colors.Count - 1)]'                      Color2 = colors[rnd.Next(0' colors.Count - 1)]'                      Thickness = rnd.Next(5' 10)'                      AnimationSpeed = 5'                      Animate = false                  };
Magic Number,WPFSamples.Samples.LinesEditor,LinesDataSource,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\LinesEditor\LinesDataSource.cs,GetRandomLine,The following statement contains a magic number: return new LineViewModel()                  {                      Name = "Line" + index.ToString()'                      X1 = rnd.Next(0' 500)'                      X2 = rnd.Next(0' 500)'                      Y1 = rnd.Next(0' 500)'                      Y2 = rnd.Next(0' 500)'                      Opacity = .7'                      Color1 = colors[rnd.Next(0' colors.Count - 1)]'                      Color2 = colors[rnd.Next(0' colors.Count - 1)]'                      Thickness = rnd.Next(5' 10)'                      AnimationSpeed = 5'                      Animate = false                  };
Magic Number,WPFSamples.Samples.LinesEditor,LinesDataSource,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\LinesEditor\LinesDataSource.cs,GetRandomLine,The following statement contains a magic number: return new LineViewModel()                  {                      Name = "Line" + index.ToString()'                      X1 = rnd.Next(0' 500)'                      X2 = rnd.Next(0' 500)'                      Y1 = rnd.Next(0' 500)'                      Y2 = rnd.Next(0' 500)'                      Opacity = .7'                      Color1 = colors[rnd.Next(0' colors.Count - 1)]'                      Color2 = colors[rnd.Next(0' colors.Count - 1)]'                      Thickness = rnd.Next(5' 10)'                      AnimationSpeed = 5'                      Animate = false                  };
Magic Number,WPFSamples.Samples.LinesEditor,LinesDataSource,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\LinesEditor\LinesDataSource.cs,GetRandomLine,The following statement contains a magic number: return new LineViewModel()                  {                      Name = "Line" + index.ToString()'                      X1 = rnd.Next(0' 500)'                      X2 = rnd.Next(0' 500)'                      Y1 = rnd.Next(0' 500)'                      Y2 = rnd.Next(0' 500)'                      Opacity = .7'                      Color1 = colors[rnd.Next(0' colors.Count - 1)]'                      Color2 = colors[rnd.Next(0' colors.Count - 1)]'                      Thickness = rnd.Next(5' 10)'                      AnimationSpeed = 5'                      Animate = false                  };
Magic Number,WPFSamples.Samples.LinesEditor,LinesDataSource,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\LinesEditor\LinesDataSource.cs,GetRandomLine,The following statement contains a magic number: return new LineViewModel()                  {                      Name = "Line" + index.ToString()'                      X1 = rnd.Next(0' 500)'                      X2 = rnd.Next(0' 500)'                      Y1 = rnd.Next(0' 500)'                      Y2 = rnd.Next(0' 500)'                      Opacity = .7'                      Color1 = colors[rnd.Next(0' colors.Count - 1)]'                      Color2 = colors[rnd.Next(0' colors.Count - 1)]'                      Thickness = rnd.Next(5' 10)'                      AnimationSpeed = 5'                      Animate = false                  };
Magic Number,WPFSamples.Samples.LinesEditor,LinesDataSource,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\LinesEditor\LinesDataSource.cs,GetRandomLine,The following statement contains a magic number: return new LineViewModel()                  {                      Name = "Line" + index.ToString()'                      X1 = rnd.Next(0' 500)'                      X2 = rnd.Next(0' 500)'                      Y1 = rnd.Next(0' 500)'                      Y2 = rnd.Next(0' 500)'                      Opacity = .7'                      Color1 = colors[rnd.Next(0' colors.Count - 1)]'                      Color2 = colors[rnd.Next(0' colors.Count - 1)]'                      Thickness = rnd.Next(5' 10)'                      AnimationSpeed = 5'                      Animate = false                  };
Magic Number,WPFSamples.Samples.LinesEditor,LinesDataSource,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\LinesEditor\LinesDataSource.cs,GetRandomLine,The following statement contains a magic number: return new LineViewModel()                  {                      Name = "Line" + index.ToString()'                      X1 = rnd.Next(0' 500)'                      X2 = rnd.Next(0' 500)'                      Y1 = rnd.Next(0' 500)'                      Y2 = rnd.Next(0' 500)'                      Opacity = .7'                      Color1 = colors[rnd.Next(0' colors.Count - 1)]'                      Color2 = colors[rnd.Next(0' colors.Count - 1)]'                      Thickness = rnd.Next(5' 10)'                      AnimationSpeed = 5'                      Animate = false                  };
Magic Number,WPFSamples.Samples.LinesEditor,LinesEditor,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\LinesEditor\LinesEditor.xaml.cs,TextBox_MouseWheel,The following statement contains a magic number: txt.Text = (txtvalue + e.Delta / 10).ToString();
Magic Number,WPFSamples.Samples.LinesEditor,LineViewModel,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\LinesEditor\LineViewModel.cs,StartTimer,The following statement contains a magic number: Timer = new Timer(x => Timer_Tick()' null' 0' 100/AnimationSpeed);
Magic Number,WPFSamples.Samples.LinesEditor,LineViewModel,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\LinesEditor\LineViewModel.cs,Timer_Tick,The following statement contains a magic number: X1 = X1 + Rnd.Next(-2' 3);
Magic Number,WPFSamples.Samples.LinesEditor,LineViewModel,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\LinesEditor\LineViewModel.cs,Timer_Tick,The following statement contains a magic number: X1 = X1 + Rnd.Next(-2' 3);
Magic Number,WPFSamples.Samples.LinesEditor,LineViewModel,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\LinesEditor\LineViewModel.cs,Timer_Tick,The following statement contains a magic number: Y1 = Y1 + Rnd.Next(-2' 3);
Magic Number,WPFSamples.Samples.LinesEditor,LineViewModel,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\LinesEditor\LineViewModel.cs,Timer_Tick,The following statement contains a magic number: Y1 = Y1 + Rnd.Next(-2' 3);
Magic Number,WPFSamples.Samples.LinesEditor,LineViewModel,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\LinesEditor\LineViewModel.cs,Timer_Tick,The following statement contains a magic number: X2 = X2 + Rnd.Next(-2' 3);
Magic Number,WPFSamples.Samples.LinesEditor,LineViewModel,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\LinesEditor\LineViewModel.cs,Timer_Tick,The following statement contains a magic number: X2 = X2 + Rnd.Next(-2' 3);
Magic Number,WPFSamples.Samples.LinesEditor,LineViewModel,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\LinesEditor\LineViewModel.cs,Timer_Tick,The following statement contains a magic number: Y2 = Y2 + Rnd.Next(-2' 3);
Magic Number,WPFSamples.Samples.LinesEditor,LineViewModel,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\LinesEditor\LineViewModel.cs,Timer_Tick,The following statement contains a magic number: Y2 = Y2 + Rnd.Next(-2' 3);
Magic Number,WPFSamples.Samples.NodesEditor,NodesDataSource,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\NodesEditor\NodesDataSource.cs,GetRandomNode,The following statement contains a magic number: return new Node                  {                      Name = "Node" + random.Next(0'100)'                      X = random.Next(0'500)'                      Y = random.Next(0'500)                  };
Magic Number,WPFSamples.Samples.NodesEditor,NodesDataSource,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\NodesEditor\NodesDataSource.cs,GetRandomNode,The following statement contains a magic number: return new Node                  {                      Name = "Node" + random.Next(0'100)'                      X = random.Next(0'500)'                      Y = random.Next(0'500)                  };
Magic Number,WPFSamples.Samples.NodesEditor,NodesDataSource,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\NodesEditor\NodesDataSource.cs,GetRandomNode,The following statement contains a magic number: return new Node                  {                      Name = "Node" + random.Next(0'100)'                      X = random.Next(0'500)'                      Y = random.Next(0'500)                  };
Magic Number,WPFSamples.Samples.NodesEditor,NodesDataSource,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\NodesEditor\NodesDataSource.cs,GetRandomNodes,The following statement contains a magic number: return Enumerable.Range(5' random.Next(6' 10)).Select(x => GetRandomNode());
Magic Number,WPFSamples.Samples.NodesEditor,NodesDataSource,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\NodesEditor\NodesDataSource.cs,GetRandomNodes,The following statement contains a magic number: return Enumerable.Range(5' random.Next(6' 10)).Select(x => GetRandomNode());
Magic Number,WPFSamples.Samples.NodesEditor,NodesDataSource,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\NodesEditor\NodesDataSource.cs,GetRandomNodes,The following statement contains a magic number: return Enumerable.Range(5' random.Next(6' 10)).Select(x => GetRandomNode());
Magic Number,WPFSamples.Samples.NodesEditor,NodesDataSource,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\NodesEditor\NodesDataSource.cs,GetRandomConnectors,The following statement contains a magic number: result.Add(new Connector()                   {                      Start = nodes[i]'                       End = nodes[i + 1]'                      Name = "Connector" + random.Next(1' 100).ToString()                  });
Magic Number,WPFSamples.Samples.NodesEditor,NodesEditor,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\NodesEditor\NodesEditor.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.view = ((WPFSamples.Samples.NodesEditor.NodesEditor)(target));              return;              case 3:                            #line 136 "..\..\..\..\Samples\NodesEditor\NodesEditor.xaml"              ((System.Windows.Controls.ListBox)(target)).PreviewMouseMove += new System.Windows.Input.MouseEventHandler(this.ListBox_PreviewMouseMove);                            #line default              #line hidden                            #line 137 "..\..\..\..\Samples\NodesEditor\NodesEditor.xaml"              ((System.Windows.Controls.ListBox)(target)).PreviewMouseDown += new System.Windows.Input.MouseButtonEventHandler(this.ListBox_PreviewMouseDown);                            #line default              #line hidden              return;              }
Magic Number,WPFSamples.Samples.NodesEditor,NodesEditor,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\NodesEditor\NodesEditor.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 2:                            #line 53 "..\..\..\..\Samples\NodesEditor\NodesEditor.xaml"              ((System.Windows.Controls.Primitives.Thumb)(target)).DragDelta += new System.Windows.Controls.Primitives.DragDeltaEventHandler(this.Thumb_Drag);                            #line default              #line hidden              break;              }
Magic Number,WPFSamples.Samples.SamsGameSample,Enemy,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\SamsGameSample\Enemy.cs,Enemy,The following statement contains a magic number: Size = new Size(15' 15);
Magic Number,WPFSamples.Samples.SamsGameSample,Enemy,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\SamsGameSample\Enemy.cs,Enemy,The following statement contains a magic number: Size = new Size(15' 15);
Magic Number,WPFSamples.Samples.SamsGameSample,Enemy,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\SamsGameSample\Enemy.cs,Enemy,The following statement contains a magic number: MoveTimer = new Timer(x => Move()' null' 0' 50);
Magic Number,WPFSamples.Samples.SamsGameSample,Enemy,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\SamsGameSample\Enemy.cs,Move,The following statement contains a magic number: var newlocation = Point.Add(Location' new Vector()              {                  X = 10 * vector.X * MovementSpeed + (random.Next(-2' 2))'                  Y = 10 * vector.Y * MovementSpeed + (random.Next(-2' 2))              });
Magic Number,WPFSamples.Samples.SamsGameSample,Enemy,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\SamsGameSample\Enemy.cs,Move,The following statement contains a magic number: var newlocation = Point.Add(Location' new Vector()              {                  X = 10 * vector.X * MovementSpeed + (random.Next(-2' 2))'                  Y = 10 * vector.Y * MovementSpeed + (random.Next(-2' 2))              });
Magic Number,WPFSamples.Samples.SamsGameSample,Enemy,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\SamsGameSample\Enemy.cs,Move,The following statement contains a magic number: var newlocation = Point.Add(Location' new Vector()              {                  X = 10 * vector.X * MovementSpeed + (random.Next(-2' 2))'                  Y = 10 * vector.Y * MovementSpeed + (random.Next(-2' 2))              });
Magic Number,WPFSamples.Samples.SamsGameSample,Enemy,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\SamsGameSample\Enemy.cs,Move,The following statement contains a magic number: var newlocation = Point.Add(Location' new Vector()              {                  X = 10 * vector.X * MovementSpeed + (random.Next(-2' 2))'                  Y = 10 * vector.Y * MovementSpeed + (random.Next(-2' 2))              });
Magic Number,WPFSamples.Samples.SamsGameSample,Enemy,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\SamsGameSample\Enemy.cs,Move,The following statement contains a magic number: var newlocation = Point.Add(Location' new Vector()              {                  X = 10 * vector.X * MovementSpeed + (random.Next(-2' 2))'                  Y = 10 * vector.Y * MovementSpeed + (random.Next(-2' 2))              });
Magic Number,WPFSamples.Samples.SamsGameSample,Enemy,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\SamsGameSample\Enemy.cs,Move,The following statement contains a magic number: var newlocation = Point.Add(Location' new Vector()              {                  X = 10 * vector.X * MovementSpeed + (random.Next(-2' 2))'                  Y = 10 * vector.Y * MovementSpeed + (random.Next(-2' 2))              });
Magic Number,WPFSamples.Samples.SamsGameSample,MainViewModel,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\SamsGameSample\MainViewModel.cs,NewLevel,The following statement contains a magic number: Player = new Player()              {                  MovementSpeed = 1'                  Location = new Point(GameParameters.GameAreaWidth / 2' GameParameters.GameAreaHeight / 2)              };
Magic Number,WPFSamples.Samples.SamsGameSample,MainViewModel,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\SamsGameSample\MainViewModel.cs,NewLevel,The following statement contains a magic number: Player = new Player()              {                  MovementSpeed = 1'                  Location = new Point(GameParameters.GameAreaWidth / 2' GameParameters.GameAreaHeight / 2)              };
Magic Number,WPFSamples.Samples.SamsGameSample,MainViewModel,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\SamsGameSample\MainViewModel.cs,CreateEnemies,The following statement contains a magic number: Enumerable.Range(0' numberofEnemies).Select(x => new Enemy(Player)              {                  MovementSpeed = 0.5'                  Location = new Point                  {                      X = random.Next(-100' (int)GameParameters.GameAreaWidth + 100)'                      Y = random.Next(-100' (int)GameParameters.GameAreaHeight + 100)                  }'              }).ToList().ForEach(GameObjects.Add);
Magic Number,WPFSamples.Samples.SamsGameSample,MainViewModel,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\SamsGameSample\MainViewModel.cs,CreateEnemies,The following statement contains a magic number: Enumerable.Range(0' numberofEnemies).Select(x => new Enemy(Player)              {                  MovementSpeed = 0.5'                  Location = new Point                  {                      X = random.Next(-100' (int)GameParameters.GameAreaWidth + 100)'                      Y = random.Next(-100' (int)GameParameters.GameAreaHeight + 100)                  }'              }).ToList().ForEach(GameObjects.Add);
Magic Number,WPFSamples.Samples.SamsGameSample,MainViewModel,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\SamsGameSample\MainViewModel.cs,CreateEnemies,The following statement contains a magic number: Enumerable.Range(0' numberofEnemies).Select(x => new Enemy(Player)              {                  MovementSpeed = 0.5'                  Location = new Point                  {                      X = random.Next(-100' (int)GameParameters.GameAreaWidth + 100)'                      Y = random.Next(-100' (int)GameParameters.GameAreaHeight + 100)                  }'              }).ToList().ForEach(GameObjects.Add);
Magic Number,WPFSamples.Samples.SamsGameSample,MainViewModel,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\SamsGameSample\MainViewModel.cs,CreateEnemies,The following statement contains a magic number: Enumerable.Range(0' numberofEnemies).Select(x => new Enemy(Player)              {                  MovementSpeed = 0.5'                  Location = new Point                  {                      X = random.Next(-100' (int)GameParameters.GameAreaWidth + 100)'                      Y = random.Next(-100' (int)GameParameters.GameAreaHeight + 100)                  }'              }).ToList().ForEach(GameObjects.Add);
Magic Number,WPFSamples.Samples.SamsGameSample,MainViewModel,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\SamsGameSample\MainViewModel.cs,CreateEnemies,The following statement contains a magic number: Enumerable.Range(0' numberofEnemies).Select(x => new Enemy(Player)              {                  MovementSpeed = 0.5'                  Location = new Point                  {                      X = random.Next(-100' (int)GameParameters.GameAreaWidth + 100)'                      Y = random.Next(-100' (int)GameParameters.GameAreaHeight + 100)                  }'              }).ToList().ForEach(GameObjects.Add);
Magic Number,WPFSamples.Samples.SamsGameSample,Player,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\SamsGameSample\Player.cs,Player,The following statement contains a magic number: Size = new Size(30' 30);
Magic Number,WPFSamples.Samples.SamsGameSample,Player,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\SamsGameSample\Player.cs,Player,The following statement contains a magic number: Size = new Size(30' 30);
Magic Number,WPFSamples.Samples.SamsGameSample,Player,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\SamsGameSample\Player.cs,Player,The following statement contains a magic number: MoveTimer = new Timer(x => MovePlayer()' null' 0' 50);
Magic Number,WPFSamples.Samples.SamsGameSample,Player,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\SamsGameSample\Player.cs,MovePlayer,The following statement contains a magic number: verticaloffset = -10;
Magic Number,WPFSamples.Samples.SamsGameSample,Player,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\SamsGameSample\Player.cs,MovePlayer,The following statement contains a magic number: horizontaloffset = -10;
Magic Number,WPFSamples.Samples.SamsGameSample,SamsGameSample,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\SamsGameSample\SamsGameSample.xaml.cs,SamsGameSample,The following statement contains a magic number: Loaded += (x' e) => ViewModel.NewLevel(30);
Magic Number,WPFSamples.Samples.SudokuBoard,SudokuBoard,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\SudokuBoard\SudokuBoard.xaml.cs,SudokuBoard,The following statement contains a magic number: board.Add(new SudokuViewModel() { Row = i' Column = j' Value = random.Next(1' 20) });
Magic Number,WPFSamples.Samples.SudokuBoard,SudokuBoard,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\SudokuBoard\SudokuBoard.xaml.cs,SudokuBoard,The following statement contains a magic number: j < 9
Magic Number,WPFSamples.Samples.SudokuBoard,SudokuBoard,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\SudokuBoard\SudokuBoard.xaml.cs,SudokuBoard,The following statement contains a magic number: i < 9
Magic Number,WPFSamples.Samples.TimerGauge,ViewModel,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\TimerGauge\ViewModel.cs,NewValue,The following statement contains a magic number: Value = Value + (Rnd.Next(20) - 10);
Magic Number,WPFSamples.Samples.TimerGauge,ViewModel,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\TimerGauge\ViewModel.cs,NewValue,The following statement contains a magic number: Value = Value + (Rnd.Next(20) - 10);
Magic Number,WPFSamples.Samples.ToggleButtonGrid,ToggleButtonGrid,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\ToggleButtonGrid\ToggleButtonGrid.xaml.cs,ToggleButtonGrid,The following statement contains a magic number: DataContext = Enumerable.Range(0' 48).Select(x => new Square() {State = rnd.Next(0'5) > 3});
Magic Number,WPFSamples.Samples.ToggleButtonGrid,ToggleButtonGrid,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\ToggleButtonGrid\ToggleButtonGrid.xaml.cs,ToggleButtonGrid,The following statement contains a magic number: DataContext = Enumerable.Range(0' 48).Select(x => new Square() {State = rnd.Next(0'5) > 3});
Magic Number,WPFSamples.Samples.ToggleButtonGrid,ToggleButtonGrid,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\ToggleButtonGrid\ToggleButtonGrid.xaml.cs,ToggleButtonGrid,The following statement contains a magic number: DataContext = Enumerable.Range(0' 48).Select(x => new Square() {State = rnd.Next(0'5) > 3});
Missing Default,WPFSamples.Samples.ChessBoard,ChessBoard,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\ChessBoard\ChessBoard.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.SquaresGrid = ((System.Windows.Controls.Primitives.UniformGrid)(target));              return;              }
Missing Default,WPFSamples.Samples.ComputerList,ComputerList,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\ComputerList\ComputerList.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.DataGrid = ((System.Windows.Controls.DataGrid)(target));              return;              }
Missing Default,WPFSamples.Samples.DataGridConnectors,DataGridConnectors,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\DataGridConnectors\DataGridConnectors.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.Root = ((System.Windows.Controls.Grid)(target));              return;              case 2:              this.DG1 = ((System.Windows.Controls.DataGrid)(target));              return;              case 3:              this.DG2 = ((System.Windows.Controls.DataGrid)(target));              return;              case 4:                            #line 47 "..\..\..\..\Samples\DataGridConnectors\DataGridConnectors.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Sequential_Click);                            #line default              #line hidden              return;              case 5:                            #line 48 "..\..\..\..\Samples\DataGridConnectors\DataGridConnectors.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Random_Click);                            #line default              #line hidden              return;              }
Missing Default,WPFSamples.HousePlan,HousePlan,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\HousePlan\HousePlan.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.view = ((WPFSamples.HousePlan.HousePlan)(target));              return;              case 2:                            #line 54 "..\..\..\..\Samples\HousePlan\HousePlan.xaml"              ((System.Windows.Controls.Primitives.Thumb)(target)).DragDelta += new System.Windows.Controls.Primitives.DragDeltaEventHandler(this.MidPoint_DragDelta);                            #line default              #line hidden              return;              case 5:                            #line 191 "..\..\..\..\Samples\HousePlan\HousePlan.xaml"              ((System.Windows.Controls.ListBox)(target)).PreviewMouseMove += new System.Windows.Input.MouseEventHandler(this.ListBox_PreviewMouseMove);                            #line default              #line hidden                            #line 192 "..\..\..\..\Samples\HousePlan\HousePlan.xaml"              ((System.Windows.Controls.ListBox)(target)).PreviewMouseDown += new System.Windows.Input.MouseButtonEventHandler(this.ListBox_PreviewMouseDown);                            #line default              #line hidden              return;              }
Missing Default,WPFSamples.HousePlan,HousePlan,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\HousePlan\HousePlan.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 3:                            #line 77 "..\..\..\..\Samples\HousePlan\HousePlan.xaml"              ((System.Windows.Controls.Primitives.Thumb)(target)).DragDelta += new System.Windows.Controls.Primitives.DragDeltaEventHandler(this.Thumb_Drag);                            #line default              #line hidden              break;              case 4:                            #line 165 "..\..\..\..\Samples\HousePlan\HousePlan.xaml"              ((System.Windows.Controls.Primitives.Thumb)(target)).DragDelta += new System.Windows.Controls.Primitives.DragDeltaEventHandler(this.Snap_DragDelta);                            #line default              #line hidden              break;              }
Missing Default,WPFSamples.Samples.NodesEditor,NodesEditor,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\NodesEditor\NodesEditor.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.view = ((WPFSamples.Samples.NodesEditor.NodesEditor)(target));              return;              case 3:                            #line 136 "..\..\..\..\Samples\NodesEditor\NodesEditor.xaml"              ((System.Windows.Controls.ListBox)(target)).PreviewMouseMove += new System.Windows.Input.MouseEventHandler(this.ListBox_PreviewMouseMove);                            #line default              #line hidden                            #line 137 "..\..\..\..\Samples\NodesEditor\NodesEditor.xaml"              ((System.Windows.Controls.ListBox)(target)).PreviewMouseDown += new System.Windows.Input.MouseButtonEventHandler(this.ListBox_PreviewMouseDown);                            #line default              #line hidden              return;              }
Missing Default,WPFSamples.Samples.NodesEditor,NodesEditor,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\NodesEditor\NodesEditor.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 2:                            #line 53 "..\..\..\..\Samples\NodesEditor\NodesEditor.xaml"              ((System.Windows.Controls.Primitives.Thumb)(target)).DragDelta += new System.Windows.Controls.Primitives.DragDeltaEventHandler(this.Thumb_Drag);                            #line default              #line hidden              break;              }
Missing Default,WPFSamples.Samples.SamsGameSample,SamsGameSample,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\SamsGameSample\SamsGameSample.xaml.cs,Window_PreviewKeyDown,The following switch statement is missing a default case: switch (e.Key)              {                  case Key.Up:                      direction = MoveDirections.Up;                      break;                  case Key.Down:                      direction = MoveDirections.Down;                      break;                  case Key.Left:                      direction = MoveDirections.Left;                      break;                  case Key.Right:                      direction = MoveDirections.Right;                      break;              }
Missing Default,WPFSamples.Samples.SamsGameSample,SamsGameSample,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\SamsGameSample\SamsGameSample.xaml.cs,Window_PreviewKeyUp,The following switch statement is missing a default case: switch (e.Key)              {                  case Key.Up:                      direction = MoveDirections.Up;                      break;                  case Key.Down:                      direction = MoveDirections.Down;                      break;                  case Key.Left:                      direction = MoveDirections.Left;                      break;                  case Key.Right:                      direction = MoveDirections.Right;                      break;              }
Missing Default,WPFSamples.Samples.SamsGameSample,SamsGameSample,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\SamsGameSample\SamsGameSample.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.GameArea = ((System.Windows.Controls.ItemsControl)(target));              return;              }
Missing Default,WPFSamples.Samples.StringToUI,StringToUI,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\StringToUI\StringToUI.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.Lst = ((System.Windows.Controls.ListBox)(target));              return;              }
Missing Default,WPFSamples.Samples.TimerGauge,TimerGauge,D:\research\architectureSmells\repos\High-Core_WPFSamples\src\WPFSamples\Samples\TimerGauge\TimerGauge.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.Rotation = ((System.Windows.Media.RotateTransform)(target));              return;              }
