Implementation smell,Namespace,Class,File,Method,Description
Long Method,dnGREP.WPF,BaseMainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\BaseMainViewModel.cs,UpdateState,The method has 207 lines of code.
Long Method,dnGREP.WPF,MainForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\MainView.xaml.cs,Connect,The method has 230 lines of code.
Long Method,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The method has 144 lines of code.
Long Method,dnGREP.WPF,MainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\MainViewModel.cs,DoSearchReplace,The method has 145 lines of code.
Complex Method,dnGREP.WPF,BaseMainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\BaseMainViewModel.cs,UpdateState,Cyclomatic complexity of the method is 27
Complex Method,dnGREP.WPF,BaseMainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\BaseMainViewModel.cs,LoadSettings,Cyclomatic complexity of the method is 16
Complex Method,dnGREP.WPF,DiginesisHelpProvider,C:\repos\dnGrep_dnGrep\dnGREP.WPF\HelpProvider.cs,OnHelpExecuted,Cyclomatic complexity of the method is 9
Complex Method,dnGREP.WPF,MainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\MainViewModel.cs,DoSearchReplace,Cyclomatic complexity of the method is 18
Complex Method,dnGREP.WPF,MainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\MainViewModel.cs,search,Cyclomatic complexity of the method is 8
Complex Method,dnGREP.WPF,MainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\MainViewModel.cs,replace,Cyclomatic complexity of the method is 10
Complex Method,dnGREP.WPF,MainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\MainViewModel.cs,updateBookmarks,Cyclomatic complexity of the method is 16
Complex Method,dnGREP.WPF,MainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\MainViewModel.cs,GetSearchOptions,Cyclomatic complexity of the method is 19
Complex Method,dnGREP.WPF,ObservableGrepSearchResults,C:\repos\dnGrep_dnGrep\dnGREP.WPF\MVHelpers\ObservableGrepSearchResults.cs,ObservableGrepSearchResults_CollectionChanged,Cyclomatic complexity of the method is 10
Complex Method,dnGREP.WPF,FormattedGrepResult,C:\repos\dnGrep_dnGrep\dnGREP.WPF\MVHelpers\ObservableGrepSearchResults.cs,FormattedGrepResult,Cyclomatic complexity of the method is 8
Complex Method,dnGREP.WPF,TestPatternViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\TestPatternViewModel.cs,Search,Cyclomatic complexity of the method is 8
Complex Method,dnGREP.WPF.MVHelpers,LazyResultsList,C:\repos\dnGrep_dnGrep\dnGREP.WPF\MVHelpers\LazyResultsList.cs,Load,Cyclomatic complexity of the method is 8
Complex Method,dnGREP.WPF.UserControls,ResultsTree,C:\repos\dnGrep_dnGrep\dnGREP.WPF\UserControls\ResultsTree.xaml.cs,OpenFiles,Cyclomatic complexity of the method is 9
Complex Method,dnGREP.WPF.UserControls,ResultsTree,C:\repos\dnGrep_dnGrep\dnGREP.WPF\UserControls\ResultsTree.xaml.cs,GetSelectedFileNames,Cyclomatic complexity of the method is 8
Complex Method,dnGREP.WPF.UserControls,ResultsTree,C:\repos\dnGrep_dnGrep\dnGREP.WPF\UserControls\ResultsTree.xaml.cs,treeView_PreviewTouchMove,Cyclomatic complexity of the method is 10
Long Parameter List,dnGREP.WPF,SnippetLineNumber,C:\repos\dnGrep_dnGrep\dnGREP.WPF\MVHelpers\SnippetLineNumber.cs,createFormattedText,The method has 5 parameters. Parameters: element' text' typeface' emSize' foreground
Long Identifier,dnGREP.WPF.DesignTimeData,DesignTimeData,C:\repos\dnGrep_dnGrep\dnGREP.WPF\DesignTimeData\DesignTimeData.cs,,The length of the parameter dummyObservableGrepSearchResults is 32.
Long Statement,dnGREP.WPF,PixelBasedScrollingBehavior,C:\repos\dnGrep_dnGrep\dnGREP.WPF\MVHelpers\PixelBasedScrollingBehavior.cs,HandleIsEnabledChanged,The length of the statement  "            var property = typeof(VirtualizingStackPanel).GetProperty("IsPixelBased"' BindingFlags.NonPublic | BindingFlags.Instance); " is 122.
Long Statement,dnGREP.WPF,BaseMainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\BaseMainViewModel.cs,UpdateState,The length of the statement  "                    WindowTitle = string.Format("{0} in \"{1}\" - dnGREP"' (SearchFor == null ? "Empty" : SearchFor.Replace('\n'' ' ').Replace('\r'' ' '))' FileOrFolderPath); " is 154.
Long Statement,dnGREP.WPF,BaseMainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\BaseMainViewModel.cs,UpdateState,The length of the statement  "            if (name == "FileOrFolderPath" || name == "FilesFound" || name == "CurrentGrepOperation" || name == "SearchFor" || name == "IsSaveInProgress") " is 142.
Long Statement,dnGREP.WPF,OptionsViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\OptionsViewModel.cs,loadSetting,The length of the statement  "                StartupAccelerationTooltip = "Startup acceleration loads application libraries on machine start to improve application startup time."; " is 134.
Long Statement,dnGREP.WPF,OptionsViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\OptionsViewModel.cs,startupRegister,The length of the statement  "                    key.SetValue(SHELL_KEY_NAME' string.Format("\"{0}\" /warmUp"' Assembly.GetAssembly(typeof(OptionsView)).Location)' RegistryValueKind.ExpandString); " is 147.
Long Statement,dnGREP.WPF,MainForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\MainView.xaml.cs,cbEncoding_Initialized,The length of the statement  "            // SelectedIndex="0" isn't working on the XAML for cbEncoding' but this seems to work. It would be nice to get the XAML working' instead. " is 137.
Long Statement,dnGREP.WPF,MainForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\MainView.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.DockPanel)(target)).ManipulationBoundaryFeedback += new System.EventHandler<System.Windows.Input.ManipulationBoundaryFeedbackEventArgs>(this.ManipulationBoundaryFeedbackHandler); " is 204.
Long Statement,dnGREP.WPF,MainForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\MainView.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.Expander)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.Expander_SizeChanged); " is 130.
Long Statement,dnGREP.WPF,MainForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\MainView.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.WrapPanel)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.WrapPanel_SizeChanged); " is 132.
Long Statement,dnGREP.WPF,MainForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\MainView.xaml.cs,Connect,The length of the statement  "            this.tbFileSizeFrom.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput); " is 124.
Long Statement,dnGREP.WPF,MainForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\MainView.xaml.cs,Connect,The length of the statement  "            this.tbFileSizeFrom.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting)); " is 142.
Long Statement,dnGREP.WPF,MainForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\MainView.xaml.cs,Connect,The length of the statement  "            this.tbFileSizeTo.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput); " is 122.
Long Statement,dnGREP.WPF,MainForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\MainView.xaml.cs,Connect,The length of the statement  "            this.tbFileSizeTo.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting)); " is 140.
Long Statement,dnGREP.WPF,MainForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\MainView.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput); " is 148.
Long Statement,dnGREP.WPF,MainForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\MainView.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting)); " is 166.
Long Statement,dnGREP.WPF,MainForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\MainView.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput); " is 148.
Long Statement,dnGREP.WPF,MainForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\MainView.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting)); " is 166.
Long Statement,dnGREP.WPF,App,C:\repos\dnGrep_dnGrep\dnGREP.WPF\App.xaml.cs,Application_Startup,The length of the statement  "                MessageBox.Show("Something broke down in the program. See event log for details."' "Error"' MessageBoxButton.OK' MessageBoxImage.Error); " is 136.
Long Statement,dnGREP.WPF,App,C:\repos\dnGrep_dnGrep\dnGREP.WPF\App.xaml.cs,Application_Exit,The length of the statement  "                MessageBox.Show("Something broke down in the program. See event log for details."' "Error"' MessageBoxButton.OK' MessageBoxImage.Error); " is 136.
Long Statement,dnGREP.WPF,App,C:\repos\dnGrep_dnGrep\dnGREP.WPF\App.xaml.cs,Application_DispatcherUnhandledException,The length of the statement  "            MessageBox.Show("Something broke down in the program. See event log for details."' "Error"' MessageBoxButton.OK' MessageBoxImage.Error); " is 136.
Long Statement,dnGREP.WPF,App,C:\repos\dnGrep_dnGrep\dnGREP.WPF\App.xaml.cs,InitializeComponent,The length of the statement  "            this.DispatcherUnhandledException += new System.Windows.Threading.DispatcherUnhandledExceptionEventHandler(this.Application_DispatcherUnhandledException); " is 154.
Long Statement,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(AboutForm)); " is 129.
Long Statement,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The length of the statement  "            this.tableLayoutPanel.ColumnStyles.Add(new System.Windows.Forms.ColumnStyle(System.Windows.Forms.SizeType.Percent' 100F)); " is 122.
Long Statement,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The length of the statement  "            this.okButton.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 147.
Long Statement,dnGREP.WPF,MainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\MainViewModel.cs,OpenFile,The length of the statement  "                OpenFileArgs fileArg = new OpenFileArgs(result.GrepResult' result.GrepResult.Pattern' lineNumber' useCustomEditor' settings.Get<string>(GrepSettings.Key.CustomEditor)' settings.Get<string>(GrepSettings.Key.CustomEditorArgs)); " is 225.
Long Statement,dnGREP.WPF,MainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\MainViewModel.cs,OpenFile,The length of the statement  "                dnGREP.Engines.GrepEngineFactory.GetSearchEngine(result.GrepResult.FileNameReal' new GrepEngineInitParams(false' 0' 0' 0.5' false)' new FileFilter()).OpenFile(fileArg); " is 168.
Long Statement,dnGREP.WPF,MainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\MainViewModel.cs,OpenFile,The length of the statement  "                    Utils.OpenFile(new OpenFileArgs(result.GrepResult' result.GrepResult.Pattern' lineNumber' useCustomEditor' settings.Get<string>(GrepSettings.Key.CustomEditor)' settings.Get<string>(GrepSettings.Key.CustomEditorArgs))); " is 218.
Long Statement,dnGREP.WPF,MainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\MainViewModel.cs,OpenFile,The length of the statement  "                    MessageBox.Show("There was an error opening file by custom editor. \nCheck editor path via \"Options..\"."' "Failure"' MessageBoxButton.OK' MessageBoxImage.Error); " is 163.
Long Statement,dnGREP.WPF,MainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\MainViewModel.cs,OpenFile,The length of the statement  "                    MessageBox.Show("There was an error opening file. Please examine the error log."' "Failure"' MessageBoxButton.OK' MessageBoxImage.Error); " is 137.
Long Statement,dnGREP.WPF,MainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\MainViewModel.cs,OpenFile,The length of the statement  "                OpenFileArgs fileArg = new OpenFileArgs(result.GrepResult' result.GrepResult.Pattern' lineNumber' useCustomEditor' settings.Get<string>(GrepSettings.Key.CustomEditor)' settings.Get<string>(GrepSettings.Key.CustomEditorArgs)); " is 225.
Long Statement,dnGREP.WPF,MainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\MainViewModel.cs,OpenFile,The length of the statement  "                dnGREP.Engines.GrepEngineFactory.GetSearchEngine(result.GrepResult.FileNameReal' new GrepEngineInitParams(false' 0' 0' 0.5' false)' new FileFilter()).OpenFile(fileArg); " is 168.
Long Statement,dnGREP.WPF,MainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\MainViewModel.cs,OpenFile,The length of the statement  "                    Utils.OpenFile(new OpenFileArgs(result.GrepResult' result.GrepResult.Pattern' lineNumber' useCustomEditor' settings.Get<string>(GrepSettings.Key.CustomEditor)' settings.Get<string>(GrepSettings.Key.CustomEditorArgs))); " is 218.
Long Statement,dnGREP.WPF,MainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\MainViewModel.cs,OpenFile,The length of the statement  "                    MessageBox.Show("There was an error opening file by custom editor. \nCheck editor path via \"Options..\"."' "Failure"' MessageBoxButton.OK' MessageBoxImage.Error); " is 163.
Long Statement,dnGREP.WPF,MainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\MainViewModel.cs,OpenFile,The length of the statement  "                    MessageBox.Show("There was an error opening file. Please examine the error log."' "Failure"' MessageBoxButton.OK' MessageBoxImage.Error); " is 137.
Long Statement,dnGREP.WPF,MainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\MainViewModel.cs,DoSearchReplace,The length of the statement  "                        FileFilter fileParams = new FileFilter(FileOrFolderPath' filePatternInclude' filePatternExclude' param.TypeOfFileSearch == FileSearchType.Regex' param.IncludeSubfolder' " is 168.
Long Statement,dnGREP.WPF,MainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\MainViewModel.cs,DoSearchReplace,The length of the statement  "                                param.IncludeHidden' param.IncludeBinary' param.IncludeArchive' sizeFrom' sizeTo' param.UseFileDateFilter' startTime' endTime); " is 127.
Long Statement,dnGREP.WPF,MainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\MainViewModel.cs,SearchProgressChanged,The length of the statement  "                            result = string.Format("Searched {0} files. Found {1} matching files - processing {2}"' progress.ProcessedFiles' SearchResults.Count' progress.FileName); " is 153.
Long Statement,dnGREP.WPF,MainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\MainViewModel.cs,SearchComplete,The length of the statement  "                    MessageBox.Show("The following plugins failed to load:\n\n" + outdatedEngines + "\n\nDefault engine was used instead."' "Plugin Errors"' MessageBoxButton.OK' MessageBoxImage.Warning); " is 183.
Long Statement,dnGREP.WPF,MainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\MainViewModel.cs,ValidateFilePatterns,The length of the statement  "                        MessageBox.Show(string.Format("The file pattern '{0}' is not a valid regular expression:{1}{2}"' pattern' Environment.NewLine' msg)' " is 132.
Long Statement,dnGREP.WPF,MainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\MainViewModel.cs,ValidateFilePatterns,The length of the statement  "                        MessageBox.Show(string.Format("The file pattern '{0}' is not a valid regular expression:{1}{2}"' pattern' Environment.NewLine' msg)' " is 132.
Long Statement,dnGREP.WPF,MainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\MainViewModel.cs,replace,The length of the statement  "                    if (MessageBox.Show("Are you sure you want to replace search pattern with empty string?"' "Replace"' MessageBoxButton.YesNoCancel' MessageBoxImage.Question) != MessageBoxResult.Yes) " is 181.
Long Statement,dnGREP.WPF,MainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\MainViewModel.cs,replace,The length of the statement  "                    StringBuilder sb = new StringBuilder("Some of the files can not be modified. If you continue' these files will be skipped.\nWould you like to continue?\n\n"); " is 158.
Long Statement,dnGREP.WPF,MainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\MainViewModel.cs,replace,The length of the statement  "                    if (MessageBox.Show(sb.ToString()' "Replace"' MessageBoxButton.YesNoCancel' MessageBoxImage.Question) != MessageBoxResult.Yes) " is 126.
Long Statement,dnGREP.WPF,MainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\MainViewModel.cs,updateBookmarks,The length of the statement  "                int idx = FastSearchBookmarks.Select((x' n) => new { x' n }).Where(xn => xn.x == SearchFor).Select(xn => xn.n).Skip(1).FirstOrDefault(); " is 136.
Long Statement,dnGREP.WPF,MainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\MainViewModel.cs,updateBookmarks,The length of the statement  "                int idx = FastReplaceBookmarks.Select((x' n) => new { x' n }).Where(xn => xn.x == ReplaceWith).Select(xn => xn.n).Skip(1).FirstOrDefault(); " is 139.
Long Statement,dnGREP.WPF,MainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\MainViewModel.cs,updateBookmarks,The length of the statement  "                int idx = FastFileMatchBookmarks.Select((x' n) => new { x' n }).Where(xn => xn.x == FilePattern).Select(xn => xn.n).Skip(1).FirstOrDefault(); " is 141.
Long Statement,dnGREP.WPF,MainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\MainViewModel.cs,updateBookmarks,The length of the statement  "                int idx = FastFileNotMatchBookmarks.Select((x' n) => new { x' n }).Where(xn => xn.x == FilePatternIgnore).Select(xn => xn.n).Skip(1).FirstOrDefault(); " is 150.
Long Statement,dnGREP.WPF,MainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\MainViewModel.cs,updateBookmarks,The length of the statement  "                int idx = FastPathBookmarks.Select((x' n) => new { x' n }).Where(xn => xn.x == FileOrFolderPath).Select(xn => xn.n).Skip(1).FirstOrDefault(); " is 141.
Long Statement,dnGREP.WPF,MainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\MainViewModel.cs,undo,The length of the statement  "                MessageBoxResult response = MessageBox.Show("Undo will revert modified file(s) back to their original state. Any changes made to the file(s) after the replace will be overwritten. Are you sure you want to procede?"' " is 215.
Long Statement,dnGREP.WPF,MainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\MainViewModel.cs,undo,The length of the statement  "                        MessageBox.Show("There was an error reverting files. Please examine the error log."' "Failure"' MessageBoxButton.OK' MessageBoxImage.Error); " is 140.
Long Statement,dnGREP.WPF,MainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\MainViewModel.cs,copyFiles,The length of the statement  "                            MessageBox.Show("Attention' some of the files are located in the selected directory.\nPlease select another directory and try again."' "Attention"' MessageBoxButton.OK' MessageBoxImage.Warning); " is 194.
Long Statement,dnGREP.WPF,MainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\MainViewModel.cs,copyFiles,The length of the statement  "                        Utils.CopyFiles(SearchResults.GetList()' Utils.GetBaseFolder(FileOrFolderPath)' Utils.GetBaseFolder(fileFolderDialog.SelectedPath)' true); " is 138.
Long Statement,dnGREP.WPF,MainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\MainViewModel.cs,copyFiles,The length of the statement  "                        MessageBox.Show("There was an error copying files. Please examine the error log."' "Failure"' MessageBoxButton.OK' MessageBoxImage.Error); " is 138.
Long Statement,dnGREP.WPF,MainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\MainViewModel.cs,moveFiles,The length of the statement  "                            MessageBox.Show("Attention' some of the files are located in the selected directory.\nPlease select another directory and try again."' " is 134.
Long Statement,dnGREP.WPF,MainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\MainViewModel.cs,moveFiles,The length of the statement  "                        Utils.CopyFiles(SearchResults.GetList()' Utils.GetBaseFolder(FileOrFolderPath)' Utils.GetBaseFolder(fileFolderDialog.SelectedPath)' true); " is 138.
Long Statement,dnGREP.WPF,MainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\MainViewModel.cs,moveFiles,The length of the statement  "                        MessageBox.Show("There was an error moving files. Please examine the error log."' "Failure"' MessageBoxButton.OK' MessageBoxImage.Error); " is 137.
Long Statement,dnGREP.WPF,MainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\MainViewModel.cs,deleteFiles,The length of the statement  "                    if (MessageBox.Show("Attention' you are about to delete files found during search.\nAre you sure you want to procede?"' "Attention"' MessageBoxButton.YesNoCancel' MessageBoxImage.Warning) != MessageBoxResult.Yes) " is 212.
Long Statement,dnGREP.WPF,MainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\MainViewModel.cs,deleteFiles,The length of the statement  "                    MessageBox.Show("There was an error deleting files. Please examine the error log."' "Failure"' MessageBoxButton.OK' MessageBoxImage.Error); " is 139.
Long Statement,dnGREP.WPF,MainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\MainViewModel.cs,SaveResultsToFile,The length of the statement  "                        MessageBox.Show("There was an error creating the file. Please examine the error log."' "Failure"' MessageBoxButton.OK' MessageBoxImage.Error); " is 142.
Long Statement,dnGREP.WPF,MainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\MainViewModel.cs,test,The length of the statement  "                MessageBox.Show("There was an error running regex test. Please examine the error log."' "Failure"' MessageBoxButton.OK' MessageBoxImage.Error); " is 143.
Long Statement,dnGREP.WPF,MainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\MainViewModel.cs,CheckVersion,The length of the statement  "                                if (MessageBox.Show("New version of dnGREP (" + version + ") is available for download.\nWould you like to download it now?"' " is 125.
Long Statement,dnGREP.WPF,OptionsView,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\OptionsView.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput); " is 148.
Long Statement,dnGREP.WPF,OptionsView,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\OptionsView.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting)); " is 167.
Long Statement,dnGREP.WPF,OptionsView,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\OptionsView.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput); " is 148.
Long Statement,dnGREP.WPF,OptionsView,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\OptionsView.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting)); " is 167.
Long Statement,dnGREP.WPF,OptionsView,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\OptionsView.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput); " is 148.
Long Statement,dnGREP.WPF,OptionsView,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\OptionsView.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting)); " is 167.
Long Statement,dnGREP.WPF,Test,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\Test.xaml.cs,Connect,The length of the statement  "            this.cbHistory.PreviewMouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.cbHistory_MouseDown); " is 120.
Long Statement,dnGREP.WPF,Test,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\Test.xaml.cs,Connect,The length of the statement  "            this.button1.PreviewMouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.DragSource_PreviewMouseLeftButtonDown); " is 136.
Long Statement,dnGREP.WPF.MVHelpers,UIServices,C:\repos\dnGrep_dnGrep\dnGREP.WPF\MVHelpers\UIServices.cs,SetBusyState,The length of the statement  "                    new DispatcherTimer(TimeSpan.FromSeconds(0)' DispatcherPriority.ApplicationIdle' dispatcherTimer_Tick' Dispatcher.CurrentDispatcher); " is 133.
Long Statement,dnGREP.WPF.UserControls,MultiSelectTreeView,C:\repos\dnGrep_dnGrep\dnGREP.WPF\UserControls\MultiSelectTreeView.cs,OnTreeViewItemGotFocus,The length of the statement  "            if (Mouse.LeftButton == MouseButtonState.Pressed && GetIsItemSelected(treeViewItem) && Keyboard.Modifiers != ModifierKeys.Control) " is 130.
Long Statement,dnGREP.WPF.UserControls,BusyIndicator,C:\repos\dnGrep_dnGrep\dnGREP.WPF\UserControls\BusyIndicator.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/dnGREP;component/usercontrols/busyindicator.xaml"' System.UriKind.Relative); " is 122.
Long Statement,dnGREP.WPF.UserControls,ResultsTree,C:\repos\dnGrep_dnGrep\dnGREP.WPF\UserControls\ResultsTree.xaml.cs,treeView_MouseDoubleClick,The length of the statement  "                inputData.OpenFile(treeView.SelectedItem as FormattedGrepLine' GrepSettings.Instance.IsSet(GrepSettings.Key.CustomEditor)); " is 123.
Long Statement,dnGREP.WPF.UserControls,ResultsTree,C:\repos\dnGrep_dnGrep\dnGREP.WPF\UserControls\ResultsTree.xaml.cs,OnSelectedItemsChanged,The length of the statement  "            var rect = new System.Drawing.RectangleF { Height = (float)parentWindow.ActualHeight' Width = (float)parentWindow.ActualWidth' X = (float)parentWindow.Left' Y = (float)parentWindow.Top }; " is 187.
Long Statement,dnGREP.WPF.UserControls,ResultsTree,C:\repos\dnGrep_dnGrep\dnGREP.WPF\UserControls\ResultsTree.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/dnGREP;component/usercontrols/resultstree.xaml"' System.UriKind.Relative); " is 120.
Long Statement,dnGREP.WPF.UserControls,ResultsTree,C:\repos\dnGrep_dnGrep\dnGREP.WPF\UserControls\ResultsTree.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOpenFileCustomEditor_Click); " is 128.
Long Statement,dnGREP.WPF.UserControls,ResultsTree,C:\repos\dnGrep_dnGrep\dnGREP.WPF\UserControls\ResultsTree.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOpenContainingFolder_Click); " is 128.
Long Statement,dnGREP.WPF.UserControls,ResultsTree,C:\repos\dnGrep_dnGrep\dnGREP.WPF\UserControls\ResultsTree.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnShowFileProperties_Click); " is 126.
Long Statement,dnGREP.WPF.UserControls,ResultsTree,C:\repos\dnGrep_dnGrep\dnGREP.WPF\UserControls\ResultsTree.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyFileNames_Click); " is 121.
Long Statement,dnGREP.WPF.UserControls,ResultsTree,C:\repos\dnGrep_dnGrep\dnGREP.WPF\UserControls\ResultsTree.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyFullFilePath_Click); " is 124.
Long Statement,dnGREP.WPF.UserControls,ResultsTree,C:\repos\dnGrep_dnGrep\dnGREP.WPF\UserControls\ResultsTree.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyGrepLine_Click); " is 120.
Long Statement,XamlGeneratedNamespace,GeneratedInternalTypeHelper,C:\repos\dnGrep_dnGrep\dnGREP.WPF\obj\Debug\GeneratedInternalTypeHelper.g.cs,CreateInstance,The length of the statement  "            return System.Activator.CreateInstance(type' ((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)  " is 128.
Complex Conditional,dnGREP.WPF,BaseMainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\BaseMainViewModel.cs,UpdateState,The conditional expression  "name == "IncludeSubfolder" || name == "IncludeHidden" || name == "IncludeBinary" ||                  name == "UseFileSizeFilter" || name == "UseFileDateFilter""  is complex.
Complex Conditional,dnGREP.WPF,BaseMainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\BaseMainViewModel.cs,UpdateState,The conditional expression  "name == "FileOrFolderPath" || name == "SearchFor" || name == "FilePattern" || name == "FilePatternIgnore""  is complex.
Complex Conditional,dnGREP.WPF,BaseMainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\BaseMainViewModel.cs,UpdateState,The conditional expression  "name == "FileOrFolderPath" || name == "CurrentGrepOperation" || name == "SearchFor" || name == "IsSaveInProgress""  is complex.
Complex Conditional,dnGREP.WPF,BaseMainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\BaseMainViewModel.cs,UpdateState,The conditional expression  "Utils.IsPathValid(FileOrFolderPath) && CurrentGrepOperation == GrepOperation.None && !IsSaveInProgress &&                      (!string.IsNullOrEmpty(SearchFor) || settings.Get<bool>(GrepSettings.Key.AllowSearchingForFileNamePattern))"  is complex.
Complex Conditional,dnGREP.WPF,BaseMainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\BaseMainViewModel.cs,UpdateState,The conditional expression  "name == "FileOrFolderPath" || name == "FilesFound" || name == "CurrentGrepOperation" || name == "SearchFor" || name == "IsSaveInProgress""  is complex.
Complex Conditional,dnGREP.WPF,BaseMainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\BaseMainViewModel.cs,UpdateState,The conditional expression  "Utils.IsPathValid(FileOrFolderPath) && FilesFound && CurrentGrepOperation == GrepOperation.None &&                      !IsSaveInProgress && !string.IsNullOrEmpty(SearchFor)"  is complex.
Complex Conditional,dnGREP.WPF.MVHelpers,LazyResultsList,C:\repos\dnGrep_dnGrep\dnGREP.WPF\MVHelpers\LazyResultsList.cs,Load,The conditional expression  "this.Count > 0 && GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext) &&                          (currentLine != line.LineNumber && currentLine + 1 != line.LineNumber)"  is complex.
Complex Conditional,dnGREP.WPF.MVHelpers,LazyResultsList,C:\repos\dnGrep_dnGrep\dnGREP.WPF\MVHelpers\LazyResultsList.cs,Load,The conditional expression  "tempList.Count > 0 && GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext) &&                              (currentLine != line.LineNumber && currentLine + 1 != line.LineNumber)"  is complex.
Complex Conditional,dnGREP.WPF.UserControls,ResultsTree,C:\repos\dnGrep_dnGrep\dnGREP.WPF\UserControls\ResultsTree.xaml.cs,treeView_PreviewTouchMove,The conditional expression  "inputData != null && inputData.Count > 0 &&                  ctrl != null && touchIds.ContainsKey(e.TouchDevice.Id) && touchIds.Count == 2"  is complex.
Virtual Method Call from Constructor,dnGREP.WPF,BaseMainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\BaseMainViewModel.cs,BaseMainViewModel,The constructor "BaseMainViewModel" calls a virtual method "LoadSettings".
Empty Catch Block,dnGREP.WPF,PreviewHighlighter,C:\repos\dnGrep_dnGrep\dnGREP.WPF\MVHelpers\PreviewHighlighter.cs,ColorizeLine,The method has an empty catch block.
Empty Catch Block,dnGREP.WPF,MainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\MainViewModel.cs,browse,The method has an empty catch block.
Magic Number,dnGREP.WPF,SnippetLineNumber,C:\repos\dnGrep_dnGrep\dnGREP.WPF\MVHelpers\SnippetLineNumber.cs,OnDocumentChanged,The following statement contains a magic number: if (documentLineCount <= 0)                  documentLineCount = lineNumbers[lineNumbers.Length - 2];
Magic Number,dnGREP.WPF,SnippetLineNumber,C:\repos\dnGrep_dnGrep\dnGREP.WPF\MVHelpers\SnippetLineNumber.cs,OnDocumentChanged,The following statement contains a magic number: if (newLength < 2)                  newLength = 2;
Magic Number,dnGREP.WPF,SnippetLineNumber,C:\repos\dnGrep_dnGrep\dnGREP.WPF\MVHelpers\SnippetLineNumber.cs,OnDocumentChanged,The following statement contains a magic number: if (newLength < 2)                  newLength = 2;
Magic Number,dnGREP.WPF,PreviewViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\PreviewViewModel.cs,UpdateState,The following statement contains a magic number: if (name == "FilePath")              {                  if (!string.IsNullOrEmpty(filePath) &&                      File.Exists(FilePath))                  {                      // Set current definition                      var fileInfo = new FileInfo(FilePath);                      var definition = HighlightingManager.Instance.GetDefinitionByExtension(fileInfo.Extension);                      if (definition != null)                          CurrentSyntax = definition.Name;                      else                          CurrentSyntax = "None";                        // Do not preview files over 1MB or binary                      if (fileInfo.Length > 1024000 ||                          Utils.IsBinary(FilePath))                      {                          IsLargeOrBinary = System.Windows.Visibility.Visible;                      }                      else                      {                          IsLargeOrBinary = System.Windows.Visibility.Collapsed;                      }                        // Tell View to show window                      ShowPreview(this' new ShowEventArgs { ClearContent = true });                  }                  else                  {                      // Tell View to show window and clear content                      ShowPreview(this' new ShowEventArgs { ClearContent = true });                  }              }
Magic Number,dnGREP.WPF,MainForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\MainView.xaml.cs,Expander_SizeChanged,The following statement contains a magic number: var iconWidth = 40;
Magic Number,dnGREP.WPF,MainForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\MainView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.MainForm_Closing);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Activated += new System.EventHandler(this.Window_Activated);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).StateChanged += new System.EventHandler(this.Window_StateChanged);                            #line default              #line hidden              return;              case 2:                            #line 30 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.DockPanel)(target)).ManipulationBoundaryFeedback += new System.EventHandler<System.Windows.Input.ManipulationBoundaryFeedbackEventArgs>(this.ManipulationBoundaryFeedbackHandler);                            #line default              #line hidden              return;              case 3:              this.mnuMainMenu = ((System.Windows.Controls.Menu)(target));              return;              case 4:              this.SearchText = ((System.Windows.Controls.ComboBox)(target));              return;              case 5:                            #line 82 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Expander)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.Expander_SizeChanged);                            #line default              #line hidden              return;              case 6:              this.fileOptions = ((System.Windows.Controls.TextBlock)(target));              return;              case 7:                            #line 91 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.WrapPanel)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.WrapPanel_SizeChanged);                            #line default              #line hidden              return;              case 8:              this.LeftFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 9:              this.rbFilterAllSizes = ((System.Windows.Controls.RadioButton)(target));              return;              case 10:              this.rbFilterSpecificSize = ((System.Windows.Controls.RadioButton)(target));              return;              case 11:              this.tbFileSizeFrom = ((System.Windows.Controls.TextBox)(target));                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 12:              this.tbFileSizeTo = ((System.Windows.Controls.TextBox)(target));                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 13:              this.cbIncludeSubfolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 14:              this.cbIncludeHiddenFolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 15:              this.cbIncludeBinary = ((System.Windows.Controls.CheckBox)(target));              return;              case 16:              this.MiddleFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 17:                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 18:                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 19:              this.SpacerFileOptions = ((System.Windows.Controls.Border)(target));              return;              case 20:              this.RightFileOptions = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.rbFileRegex = ((System.Windows.Controls.RadioButton)(target));              return;              case 22:              this.rbFileAsterisk = ((System.Windows.Controls.RadioButton)(target));              return;              case 23:              this.cbEncoding = ((System.Windows.Controls.ComboBox)(target));                            #line 211 "..\..\..\Views\MainView.xaml"              this.cbEncoding.Initialized += new System.EventHandler(this.cbEncoding_Initialized);                            #line default              #line hidden              return;              case 24:              this.tbFilePattern = ((System.Windows.Controls.ComboBox)(target));                            #line 230 "..\..\..\Views\MainView.xaml"              this.tbFilePattern.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 25:              this.cbIncludeArchives = ((System.Windows.Controls.CheckBox)(target));              return;              case 26:              this.pathsToIgnoreLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 27:              this.tbFilePatternIgnore = ((System.Windows.Controls.ComboBox)(target));                            #line 244 "..\..\..\Views\MainView.xaml"              this.tbFilePatternIgnore.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 28:              this.tbSearchFor = ((System.Windows.Controls.ComboBox)(target));              return;              case 29:              this.tbReplaceWith = ((System.Windows.Controls.ComboBox)(target));              return;              case 30:                            #line 323 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOtherActions_Click);                            #line default              #line hidden              return;              case 31:              this.advanceContextMenu = ((System.Windows.Controls.ContextMenu)(target));              return;              }
Magic Number,dnGREP.WPF,MainForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\MainView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.MainForm_Closing);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Activated += new System.EventHandler(this.Window_Activated);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).StateChanged += new System.EventHandler(this.Window_StateChanged);                            #line default              #line hidden              return;              case 2:                            #line 30 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.DockPanel)(target)).ManipulationBoundaryFeedback += new System.EventHandler<System.Windows.Input.ManipulationBoundaryFeedbackEventArgs>(this.ManipulationBoundaryFeedbackHandler);                            #line default              #line hidden              return;              case 3:              this.mnuMainMenu = ((System.Windows.Controls.Menu)(target));              return;              case 4:              this.SearchText = ((System.Windows.Controls.ComboBox)(target));              return;              case 5:                            #line 82 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Expander)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.Expander_SizeChanged);                            #line default              #line hidden              return;              case 6:              this.fileOptions = ((System.Windows.Controls.TextBlock)(target));              return;              case 7:                            #line 91 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.WrapPanel)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.WrapPanel_SizeChanged);                            #line default              #line hidden              return;              case 8:              this.LeftFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 9:              this.rbFilterAllSizes = ((System.Windows.Controls.RadioButton)(target));              return;              case 10:              this.rbFilterSpecificSize = ((System.Windows.Controls.RadioButton)(target));              return;              case 11:              this.tbFileSizeFrom = ((System.Windows.Controls.TextBox)(target));                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 12:              this.tbFileSizeTo = ((System.Windows.Controls.TextBox)(target));                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 13:              this.cbIncludeSubfolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 14:              this.cbIncludeHiddenFolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 15:              this.cbIncludeBinary = ((System.Windows.Controls.CheckBox)(target));              return;              case 16:              this.MiddleFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 17:                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 18:                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 19:              this.SpacerFileOptions = ((System.Windows.Controls.Border)(target));              return;              case 20:              this.RightFileOptions = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.rbFileRegex = ((System.Windows.Controls.RadioButton)(target));              return;              case 22:              this.rbFileAsterisk = ((System.Windows.Controls.RadioButton)(target));              return;              case 23:              this.cbEncoding = ((System.Windows.Controls.ComboBox)(target));                            #line 211 "..\..\..\Views\MainView.xaml"              this.cbEncoding.Initialized += new System.EventHandler(this.cbEncoding_Initialized);                            #line default              #line hidden              return;              case 24:              this.tbFilePattern = ((System.Windows.Controls.ComboBox)(target));                            #line 230 "..\..\..\Views\MainView.xaml"              this.tbFilePattern.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 25:              this.cbIncludeArchives = ((System.Windows.Controls.CheckBox)(target));              return;              case 26:              this.pathsToIgnoreLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 27:              this.tbFilePatternIgnore = ((System.Windows.Controls.ComboBox)(target));                            #line 244 "..\..\..\Views\MainView.xaml"              this.tbFilePatternIgnore.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 28:              this.tbSearchFor = ((System.Windows.Controls.ComboBox)(target));              return;              case 29:              this.tbReplaceWith = ((System.Windows.Controls.ComboBox)(target));              return;              case 30:                            #line 323 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOtherActions_Click);                            #line default              #line hidden              return;              case 31:              this.advanceContextMenu = ((System.Windows.Controls.ContextMenu)(target));              return;              }
Magic Number,dnGREP.WPF,MainForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\MainView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.MainForm_Closing);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Activated += new System.EventHandler(this.Window_Activated);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).StateChanged += new System.EventHandler(this.Window_StateChanged);                            #line default              #line hidden              return;              case 2:                            #line 30 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.DockPanel)(target)).ManipulationBoundaryFeedback += new System.EventHandler<System.Windows.Input.ManipulationBoundaryFeedbackEventArgs>(this.ManipulationBoundaryFeedbackHandler);                            #line default              #line hidden              return;              case 3:              this.mnuMainMenu = ((System.Windows.Controls.Menu)(target));              return;              case 4:              this.SearchText = ((System.Windows.Controls.ComboBox)(target));              return;              case 5:                            #line 82 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Expander)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.Expander_SizeChanged);                            #line default              #line hidden              return;              case 6:              this.fileOptions = ((System.Windows.Controls.TextBlock)(target));              return;              case 7:                            #line 91 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.WrapPanel)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.WrapPanel_SizeChanged);                            #line default              #line hidden              return;              case 8:              this.LeftFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 9:              this.rbFilterAllSizes = ((System.Windows.Controls.RadioButton)(target));              return;              case 10:              this.rbFilterSpecificSize = ((System.Windows.Controls.RadioButton)(target));              return;              case 11:              this.tbFileSizeFrom = ((System.Windows.Controls.TextBox)(target));                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 12:              this.tbFileSizeTo = ((System.Windows.Controls.TextBox)(target));                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 13:              this.cbIncludeSubfolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 14:              this.cbIncludeHiddenFolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 15:              this.cbIncludeBinary = ((System.Windows.Controls.CheckBox)(target));              return;              case 16:              this.MiddleFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 17:                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 18:                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 19:              this.SpacerFileOptions = ((System.Windows.Controls.Border)(target));              return;              case 20:              this.RightFileOptions = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.rbFileRegex = ((System.Windows.Controls.RadioButton)(target));              return;              case 22:              this.rbFileAsterisk = ((System.Windows.Controls.RadioButton)(target));              return;              case 23:              this.cbEncoding = ((System.Windows.Controls.ComboBox)(target));                            #line 211 "..\..\..\Views\MainView.xaml"              this.cbEncoding.Initialized += new System.EventHandler(this.cbEncoding_Initialized);                            #line default              #line hidden              return;              case 24:              this.tbFilePattern = ((System.Windows.Controls.ComboBox)(target));                            #line 230 "..\..\..\Views\MainView.xaml"              this.tbFilePattern.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 25:              this.cbIncludeArchives = ((System.Windows.Controls.CheckBox)(target));              return;              case 26:              this.pathsToIgnoreLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 27:              this.tbFilePatternIgnore = ((System.Windows.Controls.ComboBox)(target));                            #line 244 "..\..\..\Views\MainView.xaml"              this.tbFilePatternIgnore.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 28:              this.tbSearchFor = ((System.Windows.Controls.ComboBox)(target));              return;              case 29:              this.tbReplaceWith = ((System.Windows.Controls.ComboBox)(target));              return;              case 30:                            #line 323 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOtherActions_Click);                            #line default              #line hidden              return;              case 31:              this.advanceContextMenu = ((System.Windows.Controls.ContextMenu)(target));              return;              }
Magic Number,dnGREP.WPF,MainForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\MainView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.MainForm_Closing);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Activated += new System.EventHandler(this.Window_Activated);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).StateChanged += new System.EventHandler(this.Window_StateChanged);                            #line default              #line hidden              return;              case 2:                            #line 30 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.DockPanel)(target)).ManipulationBoundaryFeedback += new System.EventHandler<System.Windows.Input.ManipulationBoundaryFeedbackEventArgs>(this.ManipulationBoundaryFeedbackHandler);                            #line default              #line hidden              return;              case 3:              this.mnuMainMenu = ((System.Windows.Controls.Menu)(target));              return;              case 4:              this.SearchText = ((System.Windows.Controls.ComboBox)(target));              return;              case 5:                            #line 82 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Expander)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.Expander_SizeChanged);                            #line default              #line hidden              return;              case 6:              this.fileOptions = ((System.Windows.Controls.TextBlock)(target));              return;              case 7:                            #line 91 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.WrapPanel)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.WrapPanel_SizeChanged);                            #line default              #line hidden              return;              case 8:              this.LeftFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 9:              this.rbFilterAllSizes = ((System.Windows.Controls.RadioButton)(target));              return;              case 10:              this.rbFilterSpecificSize = ((System.Windows.Controls.RadioButton)(target));              return;              case 11:              this.tbFileSizeFrom = ((System.Windows.Controls.TextBox)(target));                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 12:              this.tbFileSizeTo = ((System.Windows.Controls.TextBox)(target));                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 13:              this.cbIncludeSubfolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 14:              this.cbIncludeHiddenFolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 15:              this.cbIncludeBinary = ((System.Windows.Controls.CheckBox)(target));              return;              case 16:              this.MiddleFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 17:                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 18:                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 19:              this.SpacerFileOptions = ((System.Windows.Controls.Border)(target));              return;              case 20:              this.RightFileOptions = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.rbFileRegex = ((System.Windows.Controls.RadioButton)(target));              return;              case 22:              this.rbFileAsterisk = ((System.Windows.Controls.RadioButton)(target));              return;              case 23:              this.cbEncoding = ((System.Windows.Controls.ComboBox)(target));                            #line 211 "..\..\..\Views\MainView.xaml"              this.cbEncoding.Initialized += new System.EventHandler(this.cbEncoding_Initialized);                            #line default              #line hidden              return;              case 24:              this.tbFilePattern = ((System.Windows.Controls.ComboBox)(target));                            #line 230 "..\..\..\Views\MainView.xaml"              this.tbFilePattern.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 25:              this.cbIncludeArchives = ((System.Windows.Controls.CheckBox)(target));              return;              case 26:              this.pathsToIgnoreLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 27:              this.tbFilePatternIgnore = ((System.Windows.Controls.ComboBox)(target));                            #line 244 "..\..\..\Views\MainView.xaml"              this.tbFilePatternIgnore.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 28:              this.tbSearchFor = ((System.Windows.Controls.ComboBox)(target));              return;              case 29:              this.tbReplaceWith = ((System.Windows.Controls.ComboBox)(target));              return;              case 30:                            #line 323 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOtherActions_Click);                            #line default              #line hidden              return;              case 31:              this.advanceContextMenu = ((System.Windows.Controls.ContextMenu)(target));              return;              }
Magic Number,dnGREP.WPF,MainForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\MainView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.MainForm_Closing);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Activated += new System.EventHandler(this.Window_Activated);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).StateChanged += new System.EventHandler(this.Window_StateChanged);                            #line default              #line hidden              return;              case 2:                            #line 30 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.DockPanel)(target)).ManipulationBoundaryFeedback += new System.EventHandler<System.Windows.Input.ManipulationBoundaryFeedbackEventArgs>(this.ManipulationBoundaryFeedbackHandler);                            #line default              #line hidden              return;              case 3:              this.mnuMainMenu = ((System.Windows.Controls.Menu)(target));              return;              case 4:              this.SearchText = ((System.Windows.Controls.ComboBox)(target));              return;              case 5:                            #line 82 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Expander)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.Expander_SizeChanged);                            #line default              #line hidden              return;              case 6:              this.fileOptions = ((System.Windows.Controls.TextBlock)(target));              return;              case 7:                            #line 91 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.WrapPanel)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.WrapPanel_SizeChanged);                            #line default              #line hidden              return;              case 8:              this.LeftFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 9:              this.rbFilterAllSizes = ((System.Windows.Controls.RadioButton)(target));              return;              case 10:              this.rbFilterSpecificSize = ((System.Windows.Controls.RadioButton)(target));              return;              case 11:              this.tbFileSizeFrom = ((System.Windows.Controls.TextBox)(target));                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 12:              this.tbFileSizeTo = ((System.Windows.Controls.TextBox)(target));                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 13:              this.cbIncludeSubfolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 14:              this.cbIncludeHiddenFolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 15:              this.cbIncludeBinary = ((System.Windows.Controls.CheckBox)(target));              return;              case 16:              this.MiddleFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 17:                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 18:                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 19:              this.SpacerFileOptions = ((System.Windows.Controls.Border)(target));              return;              case 20:              this.RightFileOptions = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.rbFileRegex = ((System.Windows.Controls.RadioButton)(target));              return;              case 22:              this.rbFileAsterisk = ((System.Windows.Controls.RadioButton)(target));              return;              case 23:              this.cbEncoding = ((System.Windows.Controls.ComboBox)(target));                            #line 211 "..\..\..\Views\MainView.xaml"              this.cbEncoding.Initialized += new System.EventHandler(this.cbEncoding_Initialized);                            #line default              #line hidden              return;              case 24:              this.tbFilePattern = ((System.Windows.Controls.ComboBox)(target));                            #line 230 "..\..\..\Views\MainView.xaml"              this.tbFilePattern.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 25:              this.cbIncludeArchives = ((System.Windows.Controls.CheckBox)(target));              return;              case 26:              this.pathsToIgnoreLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 27:              this.tbFilePatternIgnore = ((System.Windows.Controls.ComboBox)(target));                            #line 244 "..\..\..\Views\MainView.xaml"              this.tbFilePatternIgnore.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 28:              this.tbSearchFor = ((System.Windows.Controls.ComboBox)(target));              return;              case 29:              this.tbReplaceWith = ((System.Windows.Controls.ComboBox)(target));              return;              case 30:                            #line 323 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOtherActions_Click);                            #line default              #line hidden              return;              case 31:              this.advanceContextMenu = ((System.Windows.Controls.ContextMenu)(target));              return;              }
Magic Number,dnGREP.WPF,MainForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\MainView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.MainForm_Closing);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Activated += new System.EventHandler(this.Window_Activated);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).StateChanged += new System.EventHandler(this.Window_StateChanged);                            #line default              #line hidden              return;              case 2:                            #line 30 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.DockPanel)(target)).ManipulationBoundaryFeedback += new System.EventHandler<System.Windows.Input.ManipulationBoundaryFeedbackEventArgs>(this.ManipulationBoundaryFeedbackHandler);                            #line default              #line hidden              return;              case 3:              this.mnuMainMenu = ((System.Windows.Controls.Menu)(target));              return;              case 4:              this.SearchText = ((System.Windows.Controls.ComboBox)(target));              return;              case 5:                            #line 82 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Expander)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.Expander_SizeChanged);                            #line default              #line hidden              return;              case 6:              this.fileOptions = ((System.Windows.Controls.TextBlock)(target));              return;              case 7:                            #line 91 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.WrapPanel)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.WrapPanel_SizeChanged);                            #line default              #line hidden              return;              case 8:              this.LeftFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 9:              this.rbFilterAllSizes = ((System.Windows.Controls.RadioButton)(target));              return;              case 10:              this.rbFilterSpecificSize = ((System.Windows.Controls.RadioButton)(target));              return;              case 11:              this.tbFileSizeFrom = ((System.Windows.Controls.TextBox)(target));                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 12:              this.tbFileSizeTo = ((System.Windows.Controls.TextBox)(target));                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 13:              this.cbIncludeSubfolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 14:              this.cbIncludeHiddenFolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 15:              this.cbIncludeBinary = ((System.Windows.Controls.CheckBox)(target));              return;              case 16:              this.MiddleFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 17:                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 18:                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 19:              this.SpacerFileOptions = ((System.Windows.Controls.Border)(target));              return;              case 20:              this.RightFileOptions = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.rbFileRegex = ((System.Windows.Controls.RadioButton)(target));              return;              case 22:              this.rbFileAsterisk = ((System.Windows.Controls.RadioButton)(target));              return;              case 23:              this.cbEncoding = ((System.Windows.Controls.ComboBox)(target));                            #line 211 "..\..\..\Views\MainView.xaml"              this.cbEncoding.Initialized += new System.EventHandler(this.cbEncoding_Initialized);                            #line default              #line hidden              return;              case 24:              this.tbFilePattern = ((System.Windows.Controls.ComboBox)(target));                            #line 230 "..\..\..\Views\MainView.xaml"              this.tbFilePattern.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 25:              this.cbIncludeArchives = ((System.Windows.Controls.CheckBox)(target));              return;              case 26:              this.pathsToIgnoreLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 27:              this.tbFilePatternIgnore = ((System.Windows.Controls.ComboBox)(target));                            #line 244 "..\..\..\Views\MainView.xaml"              this.tbFilePatternIgnore.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 28:              this.tbSearchFor = ((System.Windows.Controls.ComboBox)(target));              return;              case 29:              this.tbReplaceWith = ((System.Windows.Controls.ComboBox)(target));              return;              case 30:                            #line 323 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOtherActions_Click);                            #line default              #line hidden              return;              case 31:              this.advanceContextMenu = ((System.Windows.Controls.ContextMenu)(target));              return;              }
Magic Number,dnGREP.WPF,MainForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\MainView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.MainForm_Closing);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Activated += new System.EventHandler(this.Window_Activated);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).StateChanged += new System.EventHandler(this.Window_StateChanged);                            #line default              #line hidden              return;              case 2:                            #line 30 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.DockPanel)(target)).ManipulationBoundaryFeedback += new System.EventHandler<System.Windows.Input.ManipulationBoundaryFeedbackEventArgs>(this.ManipulationBoundaryFeedbackHandler);                            #line default              #line hidden              return;              case 3:              this.mnuMainMenu = ((System.Windows.Controls.Menu)(target));              return;              case 4:              this.SearchText = ((System.Windows.Controls.ComboBox)(target));              return;              case 5:                            #line 82 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Expander)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.Expander_SizeChanged);                            #line default              #line hidden              return;              case 6:              this.fileOptions = ((System.Windows.Controls.TextBlock)(target));              return;              case 7:                            #line 91 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.WrapPanel)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.WrapPanel_SizeChanged);                            #line default              #line hidden              return;              case 8:              this.LeftFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 9:              this.rbFilterAllSizes = ((System.Windows.Controls.RadioButton)(target));              return;              case 10:              this.rbFilterSpecificSize = ((System.Windows.Controls.RadioButton)(target));              return;              case 11:              this.tbFileSizeFrom = ((System.Windows.Controls.TextBox)(target));                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 12:              this.tbFileSizeTo = ((System.Windows.Controls.TextBox)(target));                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 13:              this.cbIncludeSubfolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 14:              this.cbIncludeHiddenFolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 15:              this.cbIncludeBinary = ((System.Windows.Controls.CheckBox)(target));              return;              case 16:              this.MiddleFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 17:                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 18:                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 19:              this.SpacerFileOptions = ((System.Windows.Controls.Border)(target));              return;              case 20:              this.RightFileOptions = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.rbFileRegex = ((System.Windows.Controls.RadioButton)(target));              return;              case 22:              this.rbFileAsterisk = ((System.Windows.Controls.RadioButton)(target));              return;              case 23:              this.cbEncoding = ((System.Windows.Controls.ComboBox)(target));                            #line 211 "..\..\..\Views\MainView.xaml"              this.cbEncoding.Initialized += new System.EventHandler(this.cbEncoding_Initialized);                            #line default              #line hidden              return;              case 24:              this.tbFilePattern = ((System.Windows.Controls.ComboBox)(target));                            #line 230 "..\..\..\Views\MainView.xaml"              this.tbFilePattern.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 25:              this.cbIncludeArchives = ((System.Windows.Controls.CheckBox)(target));              return;              case 26:              this.pathsToIgnoreLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 27:              this.tbFilePatternIgnore = ((System.Windows.Controls.ComboBox)(target));                            #line 244 "..\..\..\Views\MainView.xaml"              this.tbFilePatternIgnore.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 28:              this.tbSearchFor = ((System.Windows.Controls.ComboBox)(target));              return;              case 29:              this.tbReplaceWith = ((System.Windows.Controls.ComboBox)(target));              return;              case 30:                            #line 323 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOtherActions_Click);                            #line default              #line hidden              return;              case 31:              this.advanceContextMenu = ((System.Windows.Controls.ContextMenu)(target));              return;              }
Magic Number,dnGREP.WPF,MainForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\MainView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.MainForm_Closing);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Activated += new System.EventHandler(this.Window_Activated);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).StateChanged += new System.EventHandler(this.Window_StateChanged);                            #line default              #line hidden              return;              case 2:                            #line 30 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.DockPanel)(target)).ManipulationBoundaryFeedback += new System.EventHandler<System.Windows.Input.ManipulationBoundaryFeedbackEventArgs>(this.ManipulationBoundaryFeedbackHandler);                            #line default              #line hidden              return;              case 3:              this.mnuMainMenu = ((System.Windows.Controls.Menu)(target));              return;              case 4:              this.SearchText = ((System.Windows.Controls.ComboBox)(target));              return;              case 5:                            #line 82 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Expander)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.Expander_SizeChanged);                            #line default              #line hidden              return;              case 6:              this.fileOptions = ((System.Windows.Controls.TextBlock)(target));              return;              case 7:                            #line 91 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.WrapPanel)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.WrapPanel_SizeChanged);                            #line default              #line hidden              return;              case 8:              this.LeftFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 9:              this.rbFilterAllSizes = ((System.Windows.Controls.RadioButton)(target));              return;              case 10:              this.rbFilterSpecificSize = ((System.Windows.Controls.RadioButton)(target));              return;              case 11:              this.tbFileSizeFrom = ((System.Windows.Controls.TextBox)(target));                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 12:              this.tbFileSizeTo = ((System.Windows.Controls.TextBox)(target));                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 13:              this.cbIncludeSubfolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 14:              this.cbIncludeHiddenFolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 15:              this.cbIncludeBinary = ((System.Windows.Controls.CheckBox)(target));              return;              case 16:              this.MiddleFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 17:                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 18:                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 19:              this.SpacerFileOptions = ((System.Windows.Controls.Border)(target));              return;              case 20:              this.RightFileOptions = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.rbFileRegex = ((System.Windows.Controls.RadioButton)(target));              return;              case 22:              this.rbFileAsterisk = ((System.Windows.Controls.RadioButton)(target));              return;              case 23:              this.cbEncoding = ((System.Windows.Controls.ComboBox)(target));                            #line 211 "..\..\..\Views\MainView.xaml"              this.cbEncoding.Initialized += new System.EventHandler(this.cbEncoding_Initialized);                            #line default              #line hidden              return;              case 24:              this.tbFilePattern = ((System.Windows.Controls.ComboBox)(target));                            #line 230 "..\..\..\Views\MainView.xaml"              this.tbFilePattern.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 25:              this.cbIncludeArchives = ((System.Windows.Controls.CheckBox)(target));              return;              case 26:              this.pathsToIgnoreLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 27:              this.tbFilePatternIgnore = ((System.Windows.Controls.ComboBox)(target));                            #line 244 "..\..\..\Views\MainView.xaml"              this.tbFilePatternIgnore.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 28:              this.tbSearchFor = ((System.Windows.Controls.ComboBox)(target));              return;              case 29:              this.tbReplaceWith = ((System.Windows.Controls.ComboBox)(target));              return;              case 30:                            #line 323 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOtherActions_Click);                            #line default              #line hidden              return;              case 31:              this.advanceContextMenu = ((System.Windows.Controls.ContextMenu)(target));              return;              }
Magic Number,dnGREP.WPF,MainForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\MainView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.MainForm_Closing);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Activated += new System.EventHandler(this.Window_Activated);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).StateChanged += new System.EventHandler(this.Window_StateChanged);                            #line default              #line hidden              return;              case 2:                            #line 30 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.DockPanel)(target)).ManipulationBoundaryFeedback += new System.EventHandler<System.Windows.Input.ManipulationBoundaryFeedbackEventArgs>(this.ManipulationBoundaryFeedbackHandler);                            #line default              #line hidden              return;              case 3:              this.mnuMainMenu = ((System.Windows.Controls.Menu)(target));              return;              case 4:              this.SearchText = ((System.Windows.Controls.ComboBox)(target));              return;              case 5:                            #line 82 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Expander)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.Expander_SizeChanged);                            #line default              #line hidden              return;              case 6:              this.fileOptions = ((System.Windows.Controls.TextBlock)(target));              return;              case 7:                            #line 91 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.WrapPanel)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.WrapPanel_SizeChanged);                            #line default              #line hidden              return;              case 8:              this.LeftFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 9:              this.rbFilterAllSizes = ((System.Windows.Controls.RadioButton)(target));              return;              case 10:              this.rbFilterSpecificSize = ((System.Windows.Controls.RadioButton)(target));              return;              case 11:              this.tbFileSizeFrom = ((System.Windows.Controls.TextBox)(target));                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 12:              this.tbFileSizeTo = ((System.Windows.Controls.TextBox)(target));                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 13:              this.cbIncludeSubfolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 14:              this.cbIncludeHiddenFolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 15:              this.cbIncludeBinary = ((System.Windows.Controls.CheckBox)(target));              return;              case 16:              this.MiddleFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 17:                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 18:                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 19:              this.SpacerFileOptions = ((System.Windows.Controls.Border)(target));              return;              case 20:              this.RightFileOptions = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.rbFileRegex = ((System.Windows.Controls.RadioButton)(target));              return;              case 22:              this.rbFileAsterisk = ((System.Windows.Controls.RadioButton)(target));              return;              case 23:              this.cbEncoding = ((System.Windows.Controls.ComboBox)(target));                            #line 211 "..\..\..\Views\MainView.xaml"              this.cbEncoding.Initialized += new System.EventHandler(this.cbEncoding_Initialized);                            #line default              #line hidden              return;              case 24:              this.tbFilePattern = ((System.Windows.Controls.ComboBox)(target));                            #line 230 "..\..\..\Views\MainView.xaml"              this.tbFilePattern.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 25:              this.cbIncludeArchives = ((System.Windows.Controls.CheckBox)(target));              return;              case 26:              this.pathsToIgnoreLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 27:              this.tbFilePatternIgnore = ((System.Windows.Controls.ComboBox)(target));                            #line 244 "..\..\..\Views\MainView.xaml"              this.tbFilePatternIgnore.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 28:              this.tbSearchFor = ((System.Windows.Controls.ComboBox)(target));              return;              case 29:              this.tbReplaceWith = ((System.Windows.Controls.ComboBox)(target));              return;              case 30:                            #line 323 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOtherActions_Click);                            #line default              #line hidden              return;              case 31:              this.advanceContextMenu = ((System.Windows.Controls.ContextMenu)(target));              return;              }
Magic Number,dnGREP.WPF,MainForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\MainView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.MainForm_Closing);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Activated += new System.EventHandler(this.Window_Activated);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).StateChanged += new System.EventHandler(this.Window_StateChanged);                            #line default              #line hidden              return;              case 2:                            #line 30 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.DockPanel)(target)).ManipulationBoundaryFeedback += new System.EventHandler<System.Windows.Input.ManipulationBoundaryFeedbackEventArgs>(this.ManipulationBoundaryFeedbackHandler);                            #line default              #line hidden              return;              case 3:              this.mnuMainMenu = ((System.Windows.Controls.Menu)(target));              return;              case 4:              this.SearchText = ((System.Windows.Controls.ComboBox)(target));              return;              case 5:                            #line 82 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Expander)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.Expander_SizeChanged);                            #line default              #line hidden              return;              case 6:              this.fileOptions = ((System.Windows.Controls.TextBlock)(target));              return;              case 7:                            #line 91 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.WrapPanel)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.WrapPanel_SizeChanged);                            #line default              #line hidden              return;              case 8:              this.LeftFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 9:              this.rbFilterAllSizes = ((System.Windows.Controls.RadioButton)(target));              return;              case 10:              this.rbFilterSpecificSize = ((System.Windows.Controls.RadioButton)(target));              return;              case 11:              this.tbFileSizeFrom = ((System.Windows.Controls.TextBox)(target));                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 12:              this.tbFileSizeTo = ((System.Windows.Controls.TextBox)(target));                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 13:              this.cbIncludeSubfolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 14:              this.cbIncludeHiddenFolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 15:              this.cbIncludeBinary = ((System.Windows.Controls.CheckBox)(target));              return;              case 16:              this.MiddleFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 17:                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 18:                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 19:              this.SpacerFileOptions = ((System.Windows.Controls.Border)(target));              return;              case 20:              this.RightFileOptions = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.rbFileRegex = ((System.Windows.Controls.RadioButton)(target));              return;              case 22:              this.rbFileAsterisk = ((System.Windows.Controls.RadioButton)(target));              return;              case 23:              this.cbEncoding = ((System.Windows.Controls.ComboBox)(target));                            #line 211 "..\..\..\Views\MainView.xaml"              this.cbEncoding.Initialized += new System.EventHandler(this.cbEncoding_Initialized);                            #line default              #line hidden              return;              case 24:              this.tbFilePattern = ((System.Windows.Controls.ComboBox)(target));                            #line 230 "..\..\..\Views\MainView.xaml"              this.tbFilePattern.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 25:              this.cbIncludeArchives = ((System.Windows.Controls.CheckBox)(target));              return;              case 26:              this.pathsToIgnoreLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 27:              this.tbFilePatternIgnore = ((System.Windows.Controls.ComboBox)(target));                            #line 244 "..\..\..\Views\MainView.xaml"              this.tbFilePatternIgnore.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 28:              this.tbSearchFor = ((System.Windows.Controls.ComboBox)(target));              return;              case 29:              this.tbReplaceWith = ((System.Windows.Controls.ComboBox)(target));              return;              case 30:                            #line 323 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOtherActions_Click);                            #line default              #line hidden              return;              case 31:              this.advanceContextMenu = ((System.Windows.Controls.ContextMenu)(target));              return;              }
Magic Number,dnGREP.WPF,MainForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\MainView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.MainForm_Closing);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Activated += new System.EventHandler(this.Window_Activated);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).StateChanged += new System.EventHandler(this.Window_StateChanged);                            #line default              #line hidden              return;              case 2:                            #line 30 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.DockPanel)(target)).ManipulationBoundaryFeedback += new System.EventHandler<System.Windows.Input.ManipulationBoundaryFeedbackEventArgs>(this.ManipulationBoundaryFeedbackHandler);                            #line default              #line hidden              return;              case 3:              this.mnuMainMenu = ((System.Windows.Controls.Menu)(target));              return;              case 4:              this.SearchText = ((System.Windows.Controls.ComboBox)(target));              return;              case 5:                            #line 82 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Expander)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.Expander_SizeChanged);                            #line default              #line hidden              return;              case 6:              this.fileOptions = ((System.Windows.Controls.TextBlock)(target));              return;              case 7:                            #line 91 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.WrapPanel)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.WrapPanel_SizeChanged);                            #line default              #line hidden              return;              case 8:              this.LeftFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 9:              this.rbFilterAllSizes = ((System.Windows.Controls.RadioButton)(target));              return;              case 10:              this.rbFilterSpecificSize = ((System.Windows.Controls.RadioButton)(target));              return;              case 11:              this.tbFileSizeFrom = ((System.Windows.Controls.TextBox)(target));                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 12:              this.tbFileSizeTo = ((System.Windows.Controls.TextBox)(target));                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 13:              this.cbIncludeSubfolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 14:              this.cbIncludeHiddenFolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 15:              this.cbIncludeBinary = ((System.Windows.Controls.CheckBox)(target));              return;              case 16:              this.MiddleFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 17:                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 18:                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 19:              this.SpacerFileOptions = ((System.Windows.Controls.Border)(target));              return;              case 20:              this.RightFileOptions = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.rbFileRegex = ((System.Windows.Controls.RadioButton)(target));              return;              case 22:              this.rbFileAsterisk = ((System.Windows.Controls.RadioButton)(target));              return;              case 23:              this.cbEncoding = ((System.Windows.Controls.ComboBox)(target));                            #line 211 "..\..\..\Views\MainView.xaml"              this.cbEncoding.Initialized += new System.EventHandler(this.cbEncoding_Initialized);                            #line default              #line hidden              return;              case 24:              this.tbFilePattern = ((System.Windows.Controls.ComboBox)(target));                            #line 230 "..\..\..\Views\MainView.xaml"              this.tbFilePattern.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 25:              this.cbIncludeArchives = ((System.Windows.Controls.CheckBox)(target));              return;              case 26:              this.pathsToIgnoreLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 27:              this.tbFilePatternIgnore = ((System.Windows.Controls.ComboBox)(target));                            #line 244 "..\..\..\Views\MainView.xaml"              this.tbFilePatternIgnore.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 28:              this.tbSearchFor = ((System.Windows.Controls.ComboBox)(target));              return;              case 29:              this.tbReplaceWith = ((System.Windows.Controls.ComboBox)(target));              return;              case 30:                            #line 323 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOtherActions_Click);                            #line default              #line hidden              return;              case 31:              this.advanceContextMenu = ((System.Windows.Controls.ContextMenu)(target));              return;              }
Magic Number,dnGREP.WPF,MainForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\MainView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.MainForm_Closing);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Activated += new System.EventHandler(this.Window_Activated);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).StateChanged += new System.EventHandler(this.Window_StateChanged);                            #line default              #line hidden              return;              case 2:                            #line 30 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.DockPanel)(target)).ManipulationBoundaryFeedback += new System.EventHandler<System.Windows.Input.ManipulationBoundaryFeedbackEventArgs>(this.ManipulationBoundaryFeedbackHandler);                            #line default              #line hidden              return;              case 3:              this.mnuMainMenu = ((System.Windows.Controls.Menu)(target));              return;              case 4:              this.SearchText = ((System.Windows.Controls.ComboBox)(target));              return;              case 5:                            #line 82 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Expander)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.Expander_SizeChanged);                            #line default              #line hidden              return;              case 6:              this.fileOptions = ((System.Windows.Controls.TextBlock)(target));              return;              case 7:                            #line 91 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.WrapPanel)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.WrapPanel_SizeChanged);                            #line default              #line hidden              return;              case 8:              this.LeftFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 9:              this.rbFilterAllSizes = ((System.Windows.Controls.RadioButton)(target));              return;              case 10:              this.rbFilterSpecificSize = ((System.Windows.Controls.RadioButton)(target));              return;              case 11:              this.tbFileSizeFrom = ((System.Windows.Controls.TextBox)(target));                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 12:              this.tbFileSizeTo = ((System.Windows.Controls.TextBox)(target));                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 13:              this.cbIncludeSubfolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 14:              this.cbIncludeHiddenFolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 15:              this.cbIncludeBinary = ((System.Windows.Controls.CheckBox)(target));              return;              case 16:              this.MiddleFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 17:                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 18:                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 19:              this.SpacerFileOptions = ((System.Windows.Controls.Border)(target));              return;              case 20:              this.RightFileOptions = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.rbFileRegex = ((System.Windows.Controls.RadioButton)(target));              return;              case 22:              this.rbFileAsterisk = ((System.Windows.Controls.RadioButton)(target));              return;              case 23:              this.cbEncoding = ((System.Windows.Controls.ComboBox)(target));                            #line 211 "..\..\..\Views\MainView.xaml"              this.cbEncoding.Initialized += new System.EventHandler(this.cbEncoding_Initialized);                            #line default              #line hidden              return;              case 24:              this.tbFilePattern = ((System.Windows.Controls.ComboBox)(target));                            #line 230 "..\..\..\Views\MainView.xaml"              this.tbFilePattern.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 25:              this.cbIncludeArchives = ((System.Windows.Controls.CheckBox)(target));              return;              case 26:              this.pathsToIgnoreLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 27:              this.tbFilePatternIgnore = ((System.Windows.Controls.ComboBox)(target));                            #line 244 "..\..\..\Views\MainView.xaml"              this.tbFilePatternIgnore.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 28:              this.tbSearchFor = ((System.Windows.Controls.ComboBox)(target));              return;              case 29:              this.tbReplaceWith = ((System.Windows.Controls.ComboBox)(target));              return;              case 30:                            #line 323 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOtherActions_Click);                            #line default              #line hidden              return;              case 31:              this.advanceContextMenu = ((System.Windows.Controls.ContextMenu)(target));              return;              }
Magic Number,dnGREP.WPF,MainForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\MainView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.MainForm_Closing);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Activated += new System.EventHandler(this.Window_Activated);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).StateChanged += new System.EventHandler(this.Window_StateChanged);                            #line default              #line hidden              return;              case 2:                            #line 30 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.DockPanel)(target)).ManipulationBoundaryFeedback += new System.EventHandler<System.Windows.Input.ManipulationBoundaryFeedbackEventArgs>(this.ManipulationBoundaryFeedbackHandler);                            #line default              #line hidden              return;              case 3:              this.mnuMainMenu = ((System.Windows.Controls.Menu)(target));              return;              case 4:              this.SearchText = ((System.Windows.Controls.ComboBox)(target));              return;              case 5:                            #line 82 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Expander)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.Expander_SizeChanged);                            #line default              #line hidden              return;              case 6:              this.fileOptions = ((System.Windows.Controls.TextBlock)(target));              return;              case 7:                            #line 91 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.WrapPanel)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.WrapPanel_SizeChanged);                            #line default              #line hidden              return;              case 8:              this.LeftFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 9:              this.rbFilterAllSizes = ((System.Windows.Controls.RadioButton)(target));              return;              case 10:              this.rbFilterSpecificSize = ((System.Windows.Controls.RadioButton)(target));              return;              case 11:              this.tbFileSizeFrom = ((System.Windows.Controls.TextBox)(target));                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 12:              this.tbFileSizeTo = ((System.Windows.Controls.TextBox)(target));                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 13:              this.cbIncludeSubfolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 14:              this.cbIncludeHiddenFolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 15:              this.cbIncludeBinary = ((System.Windows.Controls.CheckBox)(target));              return;              case 16:              this.MiddleFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 17:                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 18:                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 19:              this.SpacerFileOptions = ((System.Windows.Controls.Border)(target));              return;              case 20:              this.RightFileOptions = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.rbFileRegex = ((System.Windows.Controls.RadioButton)(target));              return;              case 22:              this.rbFileAsterisk = ((System.Windows.Controls.RadioButton)(target));              return;              case 23:              this.cbEncoding = ((System.Windows.Controls.ComboBox)(target));                            #line 211 "..\..\..\Views\MainView.xaml"              this.cbEncoding.Initialized += new System.EventHandler(this.cbEncoding_Initialized);                            #line default              #line hidden              return;              case 24:              this.tbFilePattern = ((System.Windows.Controls.ComboBox)(target));                            #line 230 "..\..\..\Views\MainView.xaml"              this.tbFilePattern.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 25:              this.cbIncludeArchives = ((System.Windows.Controls.CheckBox)(target));              return;              case 26:              this.pathsToIgnoreLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 27:              this.tbFilePatternIgnore = ((System.Windows.Controls.ComboBox)(target));                            #line 244 "..\..\..\Views\MainView.xaml"              this.tbFilePatternIgnore.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 28:              this.tbSearchFor = ((System.Windows.Controls.ComboBox)(target));              return;              case 29:              this.tbReplaceWith = ((System.Windows.Controls.ComboBox)(target));              return;              case 30:                            #line 323 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOtherActions_Click);                            #line default              #line hidden              return;              case 31:              this.advanceContextMenu = ((System.Windows.Controls.ContextMenu)(target));              return;              }
Magic Number,dnGREP.WPF,MainForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\MainView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.MainForm_Closing);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Activated += new System.EventHandler(this.Window_Activated);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).StateChanged += new System.EventHandler(this.Window_StateChanged);                            #line default              #line hidden              return;              case 2:                            #line 30 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.DockPanel)(target)).ManipulationBoundaryFeedback += new System.EventHandler<System.Windows.Input.ManipulationBoundaryFeedbackEventArgs>(this.ManipulationBoundaryFeedbackHandler);                            #line default              #line hidden              return;              case 3:              this.mnuMainMenu = ((System.Windows.Controls.Menu)(target));              return;              case 4:              this.SearchText = ((System.Windows.Controls.ComboBox)(target));              return;              case 5:                            #line 82 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Expander)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.Expander_SizeChanged);                            #line default              #line hidden              return;              case 6:              this.fileOptions = ((System.Windows.Controls.TextBlock)(target));              return;              case 7:                            #line 91 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.WrapPanel)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.WrapPanel_SizeChanged);                            #line default              #line hidden              return;              case 8:              this.LeftFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 9:              this.rbFilterAllSizes = ((System.Windows.Controls.RadioButton)(target));              return;              case 10:              this.rbFilterSpecificSize = ((System.Windows.Controls.RadioButton)(target));              return;              case 11:              this.tbFileSizeFrom = ((System.Windows.Controls.TextBox)(target));                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 12:              this.tbFileSizeTo = ((System.Windows.Controls.TextBox)(target));                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 13:              this.cbIncludeSubfolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 14:              this.cbIncludeHiddenFolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 15:              this.cbIncludeBinary = ((System.Windows.Controls.CheckBox)(target));              return;              case 16:              this.MiddleFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 17:                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 18:                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 19:              this.SpacerFileOptions = ((System.Windows.Controls.Border)(target));              return;              case 20:              this.RightFileOptions = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.rbFileRegex = ((System.Windows.Controls.RadioButton)(target));              return;              case 22:              this.rbFileAsterisk = ((System.Windows.Controls.RadioButton)(target));              return;              case 23:              this.cbEncoding = ((System.Windows.Controls.ComboBox)(target));                            #line 211 "..\..\..\Views\MainView.xaml"              this.cbEncoding.Initialized += new System.EventHandler(this.cbEncoding_Initialized);                            #line default              #line hidden              return;              case 24:              this.tbFilePattern = ((System.Windows.Controls.ComboBox)(target));                            #line 230 "..\..\..\Views\MainView.xaml"              this.tbFilePattern.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 25:              this.cbIncludeArchives = ((System.Windows.Controls.CheckBox)(target));              return;              case 26:              this.pathsToIgnoreLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 27:              this.tbFilePatternIgnore = ((System.Windows.Controls.ComboBox)(target));                            #line 244 "..\..\..\Views\MainView.xaml"              this.tbFilePatternIgnore.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 28:              this.tbSearchFor = ((System.Windows.Controls.ComboBox)(target));              return;              case 29:              this.tbReplaceWith = ((System.Windows.Controls.ComboBox)(target));              return;              case 30:                            #line 323 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOtherActions_Click);                            #line default              #line hidden              return;              case 31:              this.advanceContextMenu = ((System.Windows.Controls.ContextMenu)(target));              return;              }
Magic Number,dnGREP.WPF,MainForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\MainView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.MainForm_Closing);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Activated += new System.EventHandler(this.Window_Activated);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).StateChanged += new System.EventHandler(this.Window_StateChanged);                            #line default              #line hidden              return;              case 2:                            #line 30 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.DockPanel)(target)).ManipulationBoundaryFeedback += new System.EventHandler<System.Windows.Input.ManipulationBoundaryFeedbackEventArgs>(this.ManipulationBoundaryFeedbackHandler);                            #line default              #line hidden              return;              case 3:              this.mnuMainMenu = ((System.Windows.Controls.Menu)(target));              return;              case 4:              this.SearchText = ((System.Windows.Controls.ComboBox)(target));              return;              case 5:                            #line 82 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Expander)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.Expander_SizeChanged);                            #line default              #line hidden              return;              case 6:              this.fileOptions = ((System.Windows.Controls.TextBlock)(target));              return;              case 7:                            #line 91 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.WrapPanel)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.WrapPanel_SizeChanged);                            #line default              #line hidden              return;              case 8:              this.LeftFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 9:              this.rbFilterAllSizes = ((System.Windows.Controls.RadioButton)(target));              return;              case 10:              this.rbFilterSpecificSize = ((System.Windows.Controls.RadioButton)(target));              return;              case 11:              this.tbFileSizeFrom = ((System.Windows.Controls.TextBox)(target));                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 12:              this.tbFileSizeTo = ((System.Windows.Controls.TextBox)(target));                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 13:              this.cbIncludeSubfolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 14:              this.cbIncludeHiddenFolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 15:              this.cbIncludeBinary = ((System.Windows.Controls.CheckBox)(target));              return;              case 16:              this.MiddleFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 17:                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 18:                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 19:              this.SpacerFileOptions = ((System.Windows.Controls.Border)(target));              return;              case 20:              this.RightFileOptions = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.rbFileRegex = ((System.Windows.Controls.RadioButton)(target));              return;              case 22:              this.rbFileAsterisk = ((System.Windows.Controls.RadioButton)(target));              return;              case 23:              this.cbEncoding = ((System.Windows.Controls.ComboBox)(target));                            #line 211 "..\..\..\Views\MainView.xaml"              this.cbEncoding.Initialized += new System.EventHandler(this.cbEncoding_Initialized);                            #line default              #line hidden              return;              case 24:              this.tbFilePattern = ((System.Windows.Controls.ComboBox)(target));                            #line 230 "..\..\..\Views\MainView.xaml"              this.tbFilePattern.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 25:              this.cbIncludeArchives = ((System.Windows.Controls.CheckBox)(target));              return;              case 26:              this.pathsToIgnoreLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 27:              this.tbFilePatternIgnore = ((System.Windows.Controls.ComboBox)(target));                            #line 244 "..\..\..\Views\MainView.xaml"              this.tbFilePatternIgnore.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 28:              this.tbSearchFor = ((System.Windows.Controls.ComboBox)(target));              return;              case 29:              this.tbReplaceWith = ((System.Windows.Controls.ComboBox)(target));              return;              case 30:                            #line 323 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOtherActions_Click);                            #line default              #line hidden              return;              case 31:              this.advanceContextMenu = ((System.Windows.Controls.ContextMenu)(target));              return;              }
Magic Number,dnGREP.WPF,MainForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\MainView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.MainForm_Closing);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Activated += new System.EventHandler(this.Window_Activated);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).StateChanged += new System.EventHandler(this.Window_StateChanged);                            #line default              #line hidden              return;              case 2:                            #line 30 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.DockPanel)(target)).ManipulationBoundaryFeedback += new System.EventHandler<System.Windows.Input.ManipulationBoundaryFeedbackEventArgs>(this.ManipulationBoundaryFeedbackHandler);                            #line default              #line hidden              return;              case 3:              this.mnuMainMenu = ((System.Windows.Controls.Menu)(target));              return;              case 4:              this.SearchText = ((System.Windows.Controls.ComboBox)(target));              return;              case 5:                            #line 82 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Expander)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.Expander_SizeChanged);                            #line default              #line hidden              return;              case 6:              this.fileOptions = ((System.Windows.Controls.TextBlock)(target));              return;              case 7:                            #line 91 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.WrapPanel)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.WrapPanel_SizeChanged);                            #line default              #line hidden              return;              case 8:              this.LeftFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 9:              this.rbFilterAllSizes = ((System.Windows.Controls.RadioButton)(target));              return;              case 10:              this.rbFilterSpecificSize = ((System.Windows.Controls.RadioButton)(target));              return;              case 11:              this.tbFileSizeFrom = ((System.Windows.Controls.TextBox)(target));                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 12:              this.tbFileSizeTo = ((System.Windows.Controls.TextBox)(target));                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 13:              this.cbIncludeSubfolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 14:              this.cbIncludeHiddenFolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 15:              this.cbIncludeBinary = ((System.Windows.Controls.CheckBox)(target));              return;              case 16:              this.MiddleFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 17:                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 18:                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 19:              this.SpacerFileOptions = ((System.Windows.Controls.Border)(target));              return;              case 20:              this.RightFileOptions = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.rbFileRegex = ((System.Windows.Controls.RadioButton)(target));              return;              case 22:              this.rbFileAsterisk = ((System.Windows.Controls.RadioButton)(target));              return;              case 23:              this.cbEncoding = ((System.Windows.Controls.ComboBox)(target));                            #line 211 "..\..\..\Views\MainView.xaml"              this.cbEncoding.Initialized += new System.EventHandler(this.cbEncoding_Initialized);                            #line default              #line hidden              return;              case 24:              this.tbFilePattern = ((System.Windows.Controls.ComboBox)(target));                            #line 230 "..\..\..\Views\MainView.xaml"              this.tbFilePattern.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 25:              this.cbIncludeArchives = ((System.Windows.Controls.CheckBox)(target));              return;              case 26:              this.pathsToIgnoreLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 27:              this.tbFilePatternIgnore = ((System.Windows.Controls.ComboBox)(target));                            #line 244 "..\..\..\Views\MainView.xaml"              this.tbFilePatternIgnore.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 28:              this.tbSearchFor = ((System.Windows.Controls.ComboBox)(target));              return;              case 29:              this.tbReplaceWith = ((System.Windows.Controls.ComboBox)(target));              return;              case 30:                            #line 323 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOtherActions_Click);                            #line default              #line hidden              return;              case 31:              this.advanceContextMenu = ((System.Windows.Controls.ContextMenu)(target));              return;              }
Magic Number,dnGREP.WPF,MainForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\MainView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.MainForm_Closing);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Activated += new System.EventHandler(this.Window_Activated);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).StateChanged += new System.EventHandler(this.Window_StateChanged);                            #line default              #line hidden              return;              case 2:                            #line 30 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.DockPanel)(target)).ManipulationBoundaryFeedback += new System.EventHandler<System.Windows.Input.ManipulationBoundaryFeedbackEventArgs>(this.ManipulationBoundaryFeedbackHandler);                            #line default              #line hidden              return;              case 3:              this.mnuMainMenu = ((System.Windows.Controls.Menu)(target));              return;              case 4:              this.SearchText = ((System.Windows.Controls.ComboBox)(target));              return;              case 5:                            #line 82 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Expander)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.Expander_SizeChanged);                            #line default              #line hidden              return;              case 6:              this.fileOptions = ((System.Windows.Controls.TextBlock)(target));              return;              case 7:                            #line 91 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.WrapPanel)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.WrapPanel_SizeChanged);                            #line default              #line hidden              return;              case 8:              this.LeftFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 9:              this.rbFilterAllSizes = ((System.Windows.Controls.RadioButton)(target));              return;              case 10:              this.rbFilterSpecificSize = ((System.Windows.Controls.RadioButton)(target));              return;              case 11:              this.tbFileSizeFrom = ((System.Windows.Controls.TextBox)(target));                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 12:              this.tbFileSizeTo = ((System.Windows.Controls.TextBox)(target));                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 13:              this.cbIncludeSubfolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 14:              this.cbIncludeHiddenFolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 15:              this.cbIncludeBinary = ((System.Windows.Controls.CheckBox)(target));              return;              case 16:              this.MiddleFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 17:                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 18:                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 19:              this.SpacerFileOptions = ((System.Windows.Controls.Border)(target));              return;              case 20:              this.RightFileOptions = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.rbFileRegex = ((System.Windows.Controls.RadioButton)(target));              return;              case 22:              this.rbFileAsterisk = ((System.Windows.Controls.RadioButton)(target));              return;              case 23:              this.cbEncoding = ((System.Windows.Controls.ComboBox)(target));                            #line 211 "..\..\..\Views\MainView.xaml"              this.cbEncoding.Initialized += new System.EventHandler(this.cbEncoding_Initialized);                            #line default              #line hidden              return;              case 24:              this.tbFilePattern = ((System.Windows.Controls.ComboBox)(target));                            #line 230 "..\..\..\Views\MainView.xaml"              this.tbFilePattern.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 25:              this.cbIncludeArchives = ((System.Windows.Controls.CheckBox)(target));              return;              case 26:              this.pathsToIgnoreLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 27:              this.tbFilePatternIgnore = ((System.Windows.Controls.ComboBox)(target));                            #line 244 "..\..\..\Views\MainView.xaml"              this.tbFilePatternIgnore.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 28:              this.tbSearchFor = ((System.Windows.Controls.ComboBox)(target));              return;              case 29:              this.tbReplaceWith = ((System.Windows.Controls.ComboBox)(target));              return;              case 30:                            #line 323 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOtherActions_Click);                            #line default              #line hidden              return;              case 31:              this.advanceContextMenu = ((System.Windows.Controls.ContextMenu)(target));              return;              }
Magic Number,dnGREP.WPF,MainForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\MainView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.MainForm_Closing);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Activated += new System.EventHandler(this.Window_Activated);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).StateChanged += new System.EventHandler(this.Window_StateChanged);                            #line default              #line hidden              return;              case 2:                            #line 30 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.DockPanel)(target)).ManipulationBoundaryFeedback += new System.EventHandler<System.Windows.Input.ManipulationBoundaryFeedbackEventArgs>(this.ManipulationBoundaryFeedbackHandler);                            #line default              #line hidden              return;              case 3:              this.mnuMainMenu = ((System.Windows.Controls.Menu)(target));              return;              case 4:              this.SearchText = ((System.Windows.Controls.ComboBox)(target));              return;              case 5:                            #line 82 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Expander)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.Expander_SizeChanged);                            #line default              #line hidden              return;              case 6:              this.fileOptions = ((System.Windows.Controls.TextBlock)(target));              return;              case 7:                            #line 91 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.WrapPanel)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.WrapPanel_SizeChanged);                            #line default              #line hidden              return;              case 8:              this.LeftFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 9:              this.rbFilterAllSizes = ((System.Windows.Controls.RadioButton)(target));              return;              case 10:              this.rbFilterSpecificSize = ((System.Windows.Controls.RadioButton)(target));              return;              case 11:              this.tbFileSizeFrom = ((System.Windows.Controls.TextBox)(target));                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 12:              this.tbFileSizeTo = ((System.Windows.Controls.TextBox)(target));                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 13:              this.cbIncludeSubfolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 14:              this.cbIncludeHiddenFolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 15:              this.cbIncludeBinary = ((System.Windows.Controls.CheckBox)(target));              return;              case 16:              this.MiddleFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 17:                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 18:                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 19:              this.SpacerFileOptions = ((System.Windows.Controls.Border)(target));              return;              case 20:              this.RightFileOptions = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.rbFileRegex = ((System.Windows.Controls.RadioButton)(target));              return;              case 22:              this.rbFileAsterisk = ((System.Windows.Controls.RadioButton)(target));              return;              case 23:              this.cbEncoding = ((System.Windows.Controls.ComboBox)(target));                            #line 211 "..\..\..\Views\MainView.xaml"              this.cbEncoding.Initialized += new System.EventHandler(this.cbEncoding_Initialized);                            #line default              #line hidden              return;              case 24:              this.tbFilePattern = ((System.Windows.Controls.ComboBox)(target));                            #line 230 "..\..\..\Views\MainView.xaml"              this.tbFilePattern.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 25:              this.cbIncludeArchives = ((System.Windows.Controls.CheckBox)(target));              return;              case 26:              this.pathsToIgnoreLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 27:              this.tbFilePatternIgnore = ((System.Windows.Controls.ComboBox)(target));                            #line 244 "..\..\..\Views\MainView.xaml"              this.tbFilePatternIgnore.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 28:              this.tbSearchFor = ((System.Windows.Controls.ComboBox)(target));              return;              case 29:              this.tbReplaceWith = ((System.Windows.Controls.ComboBox)(target));              return;              case 30:                            #line 323 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOtherActions_Click);                            #line default              #line hidden              return;              case 31:              this.advanceContextMenu = ((System.Windows.Controls.ContextMenu)(target));              return;              }
Magic Number,dnGREP.WPF,MainForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\MainView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.MainForm_Closing);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Activated += new System.EventHandler(this.Window_Activated);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).StateChanged += new System.EventHandler(this.Window_StateChanged);                            #line default              #line hidden              return;              case 2:                            #line 30 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.DockPanel)(target)).ManipulationBoundaryFeedback += new System.EventHandler<System.Windows.Input.ManipulationBoundaryFeedbackEventArgs>(this.ManipulationBoundaryFeedbackHandler);                            #line default              #line hidden              return;              case 3:              this.mnuMainMenu = ((System.Windows.Controls.Menu)(target));              return;              case 4:              this.SearchText = ((System.Windows.Controls.ComboBox)(target));              return;              case 5:                            #line 82 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Expander)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.Expander_SizeChanged);                            #line default              #line hidden              return;              case 6:              this.fileOptions = ((System.Windows.Controls.TextBlock)(target));              return;              case 7:                            #line 91 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.WrapPanel)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.WrapPanel_SizeChanged);                            #line default              #line hidden              return;              case 8:              this.LeftFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 9:              this.rbFilterAllSizes = ((System.Windows.Controls.RadioButton)(target));              return;              case 10:              this.rbFilterSpecificSize = ((System.Windows.Controls.RadioButton)(target));              return;              case 11:              this.tbFileSizeFrom = ((System.Windows.Controls.TextBox)(target));                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 12:              this.tbFileSizeTo = ((System.Windows.Controls.TextBox)(target));                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 13:              this.cbIncludeSubfolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 14:              this.cbIncludeHiddenFolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 15:              this.cbIncludeBinary = ((System.Windows.Controls.CheckBox)(target));              return;              case 16:              this.MiddleFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 17:                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 18:                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 19:              this.SpacerFileOptions = ((System.Windows.Controls.Border)(target));              return;              case 20:              this.RightFileOptions = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.rbFileRegex = ((System.Windows.Controls.RadioButton)(target));              return;              case 22:              this.rbFileAsterisk = ((System.Windows.Controls.RadioButton)(target));              return;              case 23:              this.cbEncoding = ((System.Windows.Controls.ComboBox)(target));                            #line 211 "..\..\..\Views\MainView.xaml"              this.cbEncoding.Initialized += new System.EventHandler(this.cbEncoding_Initialized);                            #line default              #line hidden              return;              case 24:              this.tbFilePattern = ((System.Windows.Controls.ComboBox)(target));                            #line 230 "..\..\..\Views\MainView.xaml"              this.tbFilePattern.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 25:              this.cbIncludeArchives = ((System.Windows.Controls.CheckBox)(target));              return;              case 26:              this.pathsToIgnoreLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 27:              this.tbFilePatternIgnore = ((System.Windows.Controls.ComboBox)(target));                            #line 244 "..\..\..\Views\MainView.xaml"              this.tbFilePatternIgnore.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 28:              this.tbSearchFor = ((System.Windows.Controls.ComboBox)(target));              return;              case 29:              this.tbReplaceWith = ((System.Windows.Controls.ComboBox)(target));              return;              case 30:                            #line 323 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOtherActions_Click);                            #line default              #line hidden              return;              case 31:              this.advanceContextMenu = ((System.Windows.Controls.ContextMenu)(target));              return;              }
Magic Number,dnGREP.WPF,MainForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\MainView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.MainForm_Closing);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Activated += new System.EventHandler(this.Window_Activated);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).StateChanged += new System.EventHandler(this.Window_StateChanged);                            #line default              #line hidden              return;              case 2:                            #line 30 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.DockPanel)(target)).ManipulationBoundaryFeedback += new System.EventHandler<System.Windows.Input.ManipulationBoundaryFeedbackEventArgs>(this.ManipulationBoundaryFeedbackHandler);                            #line default              #line hidden              return;              case 3:              this.mnuMainMenu = ((System.Windows.Controls.Menu)(target));              return;              case 4:              this.SearchText = ((System.Windows.Controls.ComboBox)(target));              return;              case 5:                            #line 82 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Expander)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.Expander_SizeChanged);                            #line default              #line hidden              return;              case 6:              this.fileOptions = ((System.Windows.Controls.TextBlock)(target));              return;              case 7:                            #line 91 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.WrapPanel)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.WrapPanel_SizeChanged);                            #line default              #line hidden              return;              case 8:              this.LeftFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 9:              this.rbFilterAllSizes = ((System.Windows.Controls.RadioButton)(target));              return;              case 10:              this.rbFilterSpecificSize = ((System.Windows.Controls.RadioButton)(target));              return;              case 11:              this.tbFileSizeFrom = ((System.Windows.Controls.TextBox)(target));                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 12:              this.tbFileSizeTo = ((System.Windows.Controls.TextBox)(target));                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 13:              this.cbIncludeSubfolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 14:              this.cbIncludeHiddenFolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 15:              this.cbIncludeBinary = ((System.Windows.Controls.CheckBox)(target));              return;              case 16:              this.MiddleFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 17:                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 18:                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 19:              this.SpacerFileOptions = ((System.Windows.Controls.Border)(target));              return;              case 20:              this.RightFileOptions = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.rbFileRegex = ((System.Windows.Controls.RadioButton)(target));              return;              case 22:              this.rbFileAsterisk = ((System.Windows.Controls.RadioButton)(target));              return;              case 23:              this.cbEncoding = ((System.Windows.Controls.ComboBox)(target));                            #line 211 "..\..\..\Views\MainView.xaml"              this.cbEncoding.Initialized += new System.EventHandler(this.cbEncoding_Initialized);                            #line default              #line hidden              return;              case 24:              this.tbFilePattern = ((System.Windows.Controls.ComboBox)(target));                            #line 230 "..\..\..\Views\MainView.xaml"              this.tbFilePattern.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 25:              this.cbIncludeArchives = ((System.Windows.Controls.CheckBox)(target));              return;              case 26:              this.pathsToIgnoreLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 27:              this.tbFilePatternIgnore = ((System.Windows.Controls.ComboBox)(target));                            #line 244 "..\..\..\Views\MainView.xaml"              this.tbFilePatternIgnore.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 28:              this.tbSearchFor = ((System.Windows.Controls.ComboBox)(target));              return;              case 29:              this.tbReplaceWith = ((System.Windows.Controls.ComboBox)(target));              return;              case 30:                            #line 323 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOtherActions_Click);                            #line default              #line hidden              return;              case 31:              this.advanceContextMenu = ((System.Windows.Controls.ContextMenu)(target));              return;              }
Magic Number,dnGREP.WPF,MainForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\MainView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.MainForm_Closing);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Activated += new System.EventHandler(this.Window_Activated);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).StateChanged += new System.EventHandler(this.Window_StateChanged);                            #line default              #line hidden              return;              case 2:                            #line 30 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.DockPanel)(target)).ManipulationBoundaryFeedback += new System.EventHandler<System.Windows.Input.ManipulationBoundaryFeedbackEventArgs>(this.ManipulationBoundaryFeedbackHandler);                            #line default              #line hidden              return;              case 3:              this.mnuMainMenu = ((System.Windows.Controls.Menu)(target));              return;              case 4:              this.SearchText = ((System.Windows.Controls.ComboBox)(target));              return;              case 5:                            #line 82 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Expander)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.Expander_SizeChanged);                            #line default              #line hidden              return;              case 6:              this.fileOptions = ((System.Windows.Controls.TextBlock)(target));              return;              case 7:                            #line 91 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.WrapPanel)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.WrapPanel_SizeChanged);                            #line default              #line hidden              return;              case 8:              this.LeftFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 9:              this.rbFilterAllSizes = ((System.Windows.Controls.RadioButton)(target));              return;              case 10:              this.rbFilterSpecificSize = ((System.Windows.Controls.RadioButton)(target));              return;              case 11:              this.tbFileSizeFrom = ((System.Windows.Controls.TextBox)(target));                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 12:              this.tbFileSizeTo = ((System.Windows.Controls.TextBox)(target));                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 13:              this.cbIncludeSubfolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 14:              this.cbIncludeHiddenFolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 15:              this.cbIncludeBinary = ((System.Windows.Controls.CheckBox)(target));              return;              case 16:              this.MiddleFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 17:                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 18:                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 19:              this.SpacerFileOptions = ((System.Windows.Controls.Border)(target));              return;              case 20:              this.RightFileOptions = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.rbFileRegex = ((System.Windows.Controls.RadioButton)(target));              return;              case 22:              this.rbFileAsterisk = ((System.Windows.Controls.RadioButton)(target));              return;              case 23:              this.cbEncoding = ((System.Windows.Controls.ComboBox)(target));                            #line 211 "..\..\..\Views\MainView.xaml"              this.cbEncoding.Initialized += new System.EventHandler(this.cbEncoding_Initialized);                            #line default              #line hidden              return;              case 24:              this.tbFilePattern = ((System.Windows.Controls.ComboBox)(target));                            #line 230 "..\..\..\Views\MainView.xaml"              this.tbFilePattern.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 25:              this.cbIncludeArchives = ((System.Windows.Controls.CheckBox)(target));              return;              case 26:              this.pathsToIgnoreLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 27:              this.tbFilePatternIgnore = ((System.Windows.Controls.ComboBox)(target));                            #line 244 "..\..\..\Views\MainView.xaml"              this.tbFilePatternIgnore.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 28:              this.tbSearchFor = ((System.Windows.Controls.ComboBox)(target));              return;              case 29:              this.tbReplaceWith = ((System.Windows.Controls.ComboBox)(target));              return;              case 30:                            #line 323 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOtherActions_Click);                            #line default              #line hidden              return;              case 31:              this.advanceContextMenu = ((System.Windows.Controls.ContextMenu)(target));              return;              }
Magic Number,dnGREP.WPF,MainForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\MainView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.MainForm_Closing);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Activated += new System.EventHandler(this.Window_Activated);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).StateChanged += new System.EventHandler(this.Window_StateChanged);                            #line default              #line hidden              return;              case 2:                            #line 30 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.DockPanel)(target)).ManipulationBoundaryFeedback += new System.EventHandler<System.Windows.Input.ManipulationBoundaryFeedbackEventArgs>(this.ManipulationBoundaryFeedbackHandler);                            #line default              #line hidden              return;              case 3:              this.mnuMainMenu = ((System.Windows.Controls.Menu)(target));              return;              case 4:              this.SearchText = ((System.Windows.Controls.ComboBox)(target));              return;              case 5:                            #line 82 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Expander)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.Expander_SizeChanged);                            #line default              #line hidden              return;              case 6:              this.fileOptions = ((System.Windows.Controls.TextBlock)(target));              return;              case 7:                            #line 91 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.WrapPanel)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.WrapPanel_SizeChanged);                            #line default              #line hidden              return;              case 8:              this.LeftFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 9:              this.rbFilterAllSizes = ((System.Windows.Controls.RadioButton)(target));              return;              case 10:              this.rbFilterSpecificSize = ((System.Windows.Controls.RadioButton)(target));              return;              case 11:              this.tbFileSizeFrom = ((System.Windows.Controls.TextBox)(target));                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 12:              this.tbFileSizeTo = ((System.Windows.Controls.TextBox)(target));                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 13:              this.cbIncludeSubfolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 14:              this.cbIncludeHiddenFolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 15:              this.cbIncludeBinary = ((System.Windows.Controls.CheckBox)(target));              return;              case 16:              this.MiddleFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 17:                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 18:                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 19:              this.SpacerFileOptions = ((System.Windows.Controls.Border)(target));              return;              case 20:              this.RightFileOptions = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.rbFileRegex = ((System.Windows.Controls.RadioButton)(target));              return;              case 22:              this.rbFileAsterisk = ((System.Windows.Controls.RadioButton)(target));              return;              case 23:              this.cbEncoding = ((System.Windows.Controls.ComboBox)(target));                            #line 211 "..\..\..\Views\MainView.xaml"              this.cbEncoding.Initialized += new System.EventHandler(this.cbEncoding_Initialized);                            #line default              #line hidden              return;              case 24:              this.tbFilePattern = ((System.Windows.Controls.ComboBox)(target));                            #line 230 "..\..\..\Views\MainView.xaml"              this.tbFilePattern.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 25:              this.cbIncludeArchives = ((System.Windows.Controls.CheckBox)(target));              return;              case 26:              this.pathsToIgnoreLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 27:              this.tbFilePatternIgnore = ((System.Windows.Controls.ComboBox)(target));                            #line 244 "..\..\..\Views\MainView.xaml"              this.tbFilePatternIgnore.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 28:              this.tbSearchFor = ((System.Windows.Controls.ComboBox)(target));              return;              case 29:              this.tbReplaceWith = ((System.Windows.Controls.ComboBox)(target));              return;              case 30:                            #line 323 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOtherActions_Click);                            #line default              #line hidden              return;              case 31:              this.advanceContextMenu = ((System.Windows.Controls.ContextMenu)(target));              return;              }
Magic Number,dnGREP.WPF,MainForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\MainView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.MainForm_Closing);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Activated += new System.EventHandler(this.Window_Activated);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).StateChanged += new System.EventHandler(this.Window_StateChanged);                            #line default              #line hidden              return;              case 2:                            #line 30 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.DockPanel)(target)).ManipulationBoundaryFeedback += new System.EventHandler<System.Windows.Input.ManipulationBoundaryFeedbackEventArgs>(this.ManipulationBoundaryFeedbackHandler);                            #line default              #line hidden              return;              case 3:              this.mnuMainMenu = ((System.Windows.Controls.Menu)(target));              return;              case 4:              this.SearchText = ((System.Windows.Controls.ComboBox)(target));              return;              case 5:                            #line 82 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Expander)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.Expander_SizeChanged);                            #line default              #line hidden              return;              case 6:              this.fileOptions = ((System.Windows.Controls.TextBlock)(target));              return;              case 7:                            #line 91 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.WrapPanel)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.WrapPanel_SizeChanged);                            #line default              #line hidden              return;              case 8:              this.LeftFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 9:              this.rbFilterAllSizes = ((System.Windows.Controls.RadioButton)(target));              return;              case 10:              this.rbFilterSpecificSize = ((System.Windows.Controls.RadioButton)(target));              return;              case 11:              this.tbFileSizeFrom = ((System.Windows.Controls.TextBox)(target));                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 12:              this.tbFileSizeTo = ((System.Windows.Controls.TextBox)(target));                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 13:              this.cbIncludeSubfolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 14:              this.cbIncludeHiddenFolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 15:              this.cbIncludeBinary = ((System.Windows.Controls.CheckBox)(target));              return;              case 16:              this.MiddleFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 17:                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 18:                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 19:              this.SpacerFileOptions = ((System.Windows.Controls.Border)(target));              return;              case 20:              this.RightFileOptions = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.rbFileRegex = ((System.Windows.Controls.RadioButton)(target));              return;              case 22:              this.rbFileAsterisk = ((System.Windows.Controls.RadioButton)(target));              return;              case 23:              this.cbEncoding = ((System.Windows.Controls.ComboBox)(target));                            #line 211 "..\..\..\Views\MainView.xaml"              this.cbEncoding.Initialized += new System.EventHandler(this.cbEncoding_Initialized);                            #line default              #line hidden              return;              case 24:              this.tbFilePattern = ((System.Windows.Controls.ComboBox)(target));                            #line 230 "..\..\..\Views\MainView.xaml"              this.tbFilePattern.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 25:              this.cbIncludeArchives = ((System.Windows.Controls.CheckBox)(target));              return;              case 26:              this.pathsToIgnoreLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 27:              this.tbFilePatternIgnore = ((System.Windows.Controls.ComboBox)(target));                            #line 244 "..\..\..\Views\MainView.xaml"              this.tbFilePatternIgnore.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 28:              this.tbSearchFor = ((System.Windows.Controls.ComboBox)(target));              return;              case 29:              this.tbReplaceWith = ((System.Windows.Controls.ComboBox)(target));              return;              case 30:                            #line 323 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOtherActions_Click);                            #line default              #line hidden              return;              case 31:              this.advanceContextMenu = ((System.Windows.Controls.ContextMenu)(target));              return;              }
Magic Number,dnGREP.WPF,MainForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\MainView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.MainForm_Closing);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Activated += new System.EventHandler(this.Window_Activated);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).StateChanged += new System.EventHandler(this.Window_StateChanged);                            #line default              #line hidden              return;              case 2:                            #line 30 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.DockPanel)(target)).ManipulationBoundaryFeedback += new System.EventHandler<System.Windows.Input.ManipulationBoundaryFeedbackEventArgs>(this.ManipulationBoundaryFeedbackHandler);                            #line default              #line hidden              return;              case 3:              this.mnuMainMenu = ((System.Windows.Controls.Menu)(target));              return;              case 4:              this.SearchText = ((System.Windows.Controls.ComboBox)(target));              return;              case 5:                            #line 82 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Expander)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.Expander_SizeChanged);                            #line default              #line hidden              return;              case 6:              this.fileOptions = ((System.Windows.Controls.TextBlock)(target));              return;              case 7:                            #line 91 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.WrapPanel)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.WrapPanel_SizeChanged);                            #line default              #line hidden              return;              case 8:              this.LeftFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 9:              this.rbFilterAllSizes = ((System.Windows.Controls.RadioButton)(target));              return;              case 10:              this.rbFilterSpecificSize = ((System.Windows.Controls.RadioButton)(target));              return;              case 11:              this.tbFileSizeFrom = ((System.Windows.Controls.TextBox)(target));                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 12:              this.tbFileSizeTo = ((System.Windows.Controls.TextBox)(target));                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 13:              this.cbIncludeSubfolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 14:              this.cbIncludeHiddenFolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 15:              this.cbIncludeBinary = ((System.Windows.Controls.CheckBox)(target));              return;              case 16:              this.MiddleFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 17:                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 18:                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 19:              this.SpacerFileOptions = ((System.Windows.Controls.Border)(target));              return;              case 20:              this.RightFileOptions = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.rbFileRegex = ((System.Windows.Controls.RadioButton)(target));              return;              case 22:              this.rbFileAsterisk = ((System.Windows.Controls.RadioButton)(target));              return;              case 23:              this.cbEncoding = ((System.Windows.Controls.ComboBox)(target));                            #line 211 "..\..\..\Views\MainView.xaml"              this.cbEncoding.Initialized += new System.EventHandler(this.cbEncoding_Initialized);                            #line default              #line hidden              return;              case 24:              this.tbFilePattern = ((System.Windows.Controls.ComboBox)(target));                            #line 230 "..\..\..\Views\MainView.xaml"              this.tbFilePattern.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 25:              this.cbIncludeArchives = ((System.Windows.Controls.CheckBox)(target));              return;              case 26:              this.pathsToIgnoreLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 27:              this.tbFilePatternIgnore = ((System.Windows.Controls.ComboBox)(target));                            #line 244 "..\..\..\Views\MainView.xaml"              this.tbFilePatternIgnore.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 28:              this.tbSearchFor = ((System.Windows.Controls.ComboBox)(target));              return;              case 29:              this.tbReplaceWith = ((System.Windows.Controls.ComboBox)(target));              return;              case 30:                            #line 323 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOtherActions_Click);                            #line default              #line hidden              return;              case 31:              this.advanceContextMenu = ((System.Windows.Controls.ContextMenu)(target));              return;              }
Magic Number,dnGREP.WPF,MainForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\MainView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.MainForm_Closing);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Activated += new System.EventHandler(this.Window_Activated);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).StateChanged += new System.EventHandler(this.Window_StateChanged);                            #line default              #line hidden              return;              case 2:                            #line 30 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.DockPanel)(target)).ManipulationBoundaryFeedback += new System.EventHandler<System.Windows.Input.ManipulationBoundaryFeedbackEventArgs>(this.ManipulationBoundaryFeedbackHandler);                            #line default              #line hidden              return;              case 3:              this.mnuMainMenu = ((System.Windows.Controls.Menu)(target));              return;              case 4:              this.SearchText = ((System.Windows.Controls.ComboBox)(target));              return;              case 5:                            #line 82 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Expander)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.Expander_SizeChanged);                            #line default              #line hidden              return;              case 6:              this.fileOptions = ((System.Windows.Controls.TextBlock)(target));              return;              case 7:                            #line 91 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.WrapPanel)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.WrapPanel_SizeChanged);                            #line default              #line hidden              return;              case 8:              this.LeftFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 9:              this.rbFilterAllSizes = ((System.Windows.Controls.RadioButton)(target));              return;              case 10:              this.rbFilterSpecificSize = ((System.Windows.Controls.RadioButton)(target));              return;              case 11:              this.tbFileSizeFrom = ((System.Windows.Controls.TextBox)(target));                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 12:              this.tbFileSizeTo = ((System.Windows.Controls.TextBox)(target));                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 13:              this.cbIncludeSubfolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 14:              this.cbIncludeHiddenFolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 15:              this.cbIncludeBinary = ((System.Windows.Controls.CheckBox)(target));              return;              case 16:              this.MiddleFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 17:                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 18:                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 19:              this.SpacerFileOptions = ((System.Windows.Controls.Border)(target));              return;              case 20:              this.RightFileOptions = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.rbFileRegex = ((System.Windows.Controls.RadioButton)(target));              return;              case 22:              this.rbFileAsterisk = ((System.Windows.Controls.RadioButton)(target));              return;              case 23:              this.cbEncoding = ((System.Windows.Controls.ComboBox)(target));                            #line 211 "..\..\..\Views\MainView.xaml"              this.cbEncoding.Initialized += new System.EventHandler(this.cbEncoding_Initialized);                            #line default              #line hidden              return;              case 24:              this.tbFilePattern = ((System.Windows.Controls.ComboBox)(target));                            #line 230 "..\..\..\Views\MainView.xaml"              this.tbFilePattern.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 25:              this.cbIncludeArchives = ((System.Windows.Controls.CheckBox)(target));              return;              case 26:              this.pathsToIgnoreLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 27:              this.tbFilePatternIgnore = ((System.Windows.Controls.ComboBox)(target));                            #line 244 "..\..\..\Views\MainView.xaml"              this.tbFilePatternIgnore.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 28:              this.tbSearchFor = ((System.Windows.Controls.ComboBox)(target));              return;              case 29:              this.tbReplaceWith = ((System.Windows.Controls.ComboBox)(target));              return;              case 30:                            #line 323 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOtherActions_Click);                            #line default              #line hidden              return;              case 31:              this.advanceContextMenu = ((System.Windows.Controls.ContextMenu)(target));              return;              }
Magic Number,dnGREP.WPF,MainForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\MainView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.MainForm_Closing);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Activated += new System.EventHandler(this.Window_Activated);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).StateChanged += new System.EventHandler(this.Window_StateChanged);                            #line default              #line hidden              return;              case 2:                            #line 30 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.DockPanel)(target)).ManipulationBoundaryFeedback += new System.EventHandler<System.Windows.Input.ManipulationBoundaryFeedbackEventArgs>(this.ManipulationBoundaryFeedbackHandler);                            #line default              #line hidden              return;              case 3:              this.mnuMainMenu = ((System.Windows.Controls.Menu)(target));              return;              case 4:              this.SearchText = ((System.Windows.Controls.ComboBox)(target));              return;              case 5:                            #line 82 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Expander)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.Expander_SizeChanged);                            #line default              #line hidden              return;              case 6:              this.fileOptions = ((System.Windows.Controls.TextBlock)(target));              return;              case 7:                            #line 91 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.WrapPanel)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.WrapPanel_SizeChanged);                            #line default              #line hidden              return;              case 8:              this.LeftFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 9:              this.rbFilterAllSizes = ((System.Windows.Controls.RadioButton)(target));              return;              case 10:              this.rbFilterSpecificSize = ((System.Windows.Controls.RadioButton)(target));              return;              case 11:              this.tbFileSizeFrom = ((System.Windows.Controls.TextBox)(target));                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 12:              this.tbFileSizeTo = ((System.Windows.Controls.TextBox)(target));                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 13:              this.cbIncludeSubfolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 14:              this.cbIncludeHiddenFolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 15:              this.cbIncludeBinary = ((System.Windows.Controls.CheckBox)(target));              return;              case 16:              this.MiddleFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 17:                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 18:                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 19:              this.SpacerFileOptions = ((System.Windows.Controls.Border)(target));              return;              case 20:              this.RightFileOptions = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.rbFileRegex = ((System.Windows.Controls.RadioButton)(target));              return;              case 22:              this.rbFileAsterisk = ((System.Windows.Controls.RadioButton)(target));              return;              case 23:              this.cbEncoding = ((System.Windows.Controls.ComboBox)(target));                            #line 211 "..\..\..\Views\MainView.xaml"              this.cbEncoding.Initialized += new System.EventHandler(this.cbEncoding_Initialized);                            #line default              #line hidden              return;              case 24:              this.tbFilePattern = ((System.Windows.Controls.ComboBox)(target));                            #line 230 "..\..\..\Views\MainView.xaml"              this.tbFilePattern.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 25:              this.cbIncludeArchives = ((System.Windows.Controls.CheckBox)(target));              return;              case 26:              this.pathsToIgnoreLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 27:              this.tbFilePatternIgnore = ((System.Windows.Controls.ComboBox)(target));                            #line 244 "..\..\..\Views\MainView.xaml"              this.tbFilePatternIgnore.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 28:              this.tbSearchFor = ((System.Windows.Controls.ComboBox)(target));              return;              case 29:              this.tbReplaceWith = ((System.Windows.Controls.ComboBox)(target));              return;              case 30:                            #line 323 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOtherActions_Click);                            #line default              #line hidden              return;              case 31:              this.advanceContextMenu = ((System.Windows.Controls.ContextMenu)(target));              return;              }
Magic Number,dnGREP.WPF,MainForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\MainView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.MainForm_Closing);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Activated += new System.EventHandler(this.Window_Activated);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).StateChanged += new System.EventHandler(this.Window_StateChanged);                            #line default              #line hidden              return;              case 2:                            #line 30 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.DockPanel)(target)).ManipulationBoundaryFeedback += new System.EventHandler<System.Windows.Input.ManipulationBoundaryFeedbackEventArgs>(this.ManipulationBoundaryFeedbackHandler);                            #line default              #line hidden              return;              case 3:              this.mnuMainMenu = ((System.Windows.Controls.Menu)(target));              return;              case 4:              this.SearchText = ((System.Windows.Controls.ComboBox)(target));              return;              case 5:                            #line 82 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Expander)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.Expander_SizeChanged);                            #line default              #line hidden              return;              case 6:              this.fileOptions = ((System.Windows.Controls.TextBlock)(target));              return;              case 7:                            #line 91 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.WrapPanel)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.WrapPanel_SizeChanged);                            #line default              #line hidden              return;              case 8:              this.LeftFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 9:              this.rbFilterAllSizes = ((System.Windows.Controls.RadioButton)(target));              return;              case 10:              this.rbFilterSpecificSize = ((System.Windows.Controls.RadioButton)(target));              return;              case 11:              this.tbFileSizeFrom = ((System.Windows.Controls.TextBox)(target));                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 12:              this.tbFileSizeTo = ((System.Windows.Controls.TextBox)(target));                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 13:              this.cbIncludeSubfolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 14:              this.cbIncludeHiddenFolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 15:              this.cbIncludeBinary = ((System.Windows.Controls.CheckBox)(target));              return;              case 16:              this.MiddleFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 17:                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 18:                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 19:              this.SpacerFileOptions = ((System.Windows.Controls.Border)(target));              return;              case 20:              this.RightFileOptions = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.rbFileRegex = ((System.Windows.Controls.RadioButton)(target));              return;              case 22:              this.rbFileAsterisk = ((System.Windows.Controls.RadioButton)(target));              return;              case 23:              this.cbEncoding = ((System.Windows.Controls.ComboBox)(target));                            #line 211 "..\..\..\Views\MainView.xaml"              this.cbEncoding.Initialized += new System.EventHandler(this.cbEncoding_Initialized);                            #line default              #line hidden              return;              case 24:              this.tbFilePattern = ((System.Windows.Controls.ComboBox)(target));                            #line 230 "..\..\..\Views\MainView.xaml"              this.tbFilePattern.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 25:              this.cbIncludeArchives = ((System.Windows.Controls.CheckBox)(target));              return;              case 26:              this.pathsToIgnoreLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 27:              this.tbFilePatternIgnore = ((System.Windows.Controls.ComboBox)(target));                            #line 244 "..\..\..\Views\MainView.xaml"              this.tbFilePatternIgnore.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 28:              this.tbSearchFor = ((System.Windows.Controls.ComboBox)(target));              return;              case 29:              this.tbReplaceWith = ((System.Windows.Controls.ComboBox)(target));              return;              case 30:                            #line 323 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOtherActions_Click);                            #line default              #line hidden              return;              case 31:              this.advanceContextMenu = ((System.Windows.Controls.ContextMenu)(target));              return;              }
Magic Number,dnGREP.WPF,MainForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\MainView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.MainForm_Closing);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Activated += new System.EventHandler(this.Window_Activated);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).StateChanged += new System.EventHandler(this.Window_StateChanged);                            #line default              #line hidden              return;              case 2:                            #line 30 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.DockPanel)(target)).ManipulationBoundaryFeedback += new System.EventHandler<System.Windows.Input.ManipulationBoundaryFeedbackEventArgs>(this.ManipulationBoundaryFeedbackHandler);                            #line default              #line hidden              return;              case 3:              this.mnuMainMenu = ((System.Windows.Controls.Menu)(target));              return;              case 4:              this.SearchText = ((System.Windows.Controls.ComboBox)(target));              return;              case 5:                            #line 82 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Expander)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.Expander_SizeChanged);                            #line default              #line hidden              return;              case 6:              this.fileOptions = ((System.Windows.Controls.TextBlock)(target));              return;              case 7:                            #line 91 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.WrapPanel)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.WrapPanel_SizeChanged);                            #line default              #line hidden              return;              case 8:              this.LeftFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 9:              this.rbFilterAllSizes = ((System.Windows.Controls.RadioButton)(target));              return;              case 10:              this.rbFilterSpecificSize = ((System.Windows.Controls.RadioButton)(target));              return;              case 11:              this.tbFileSizeFrom = ((System.Windows.Controls.TextBox)(target));                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 12:              this.tbFileSizeTo = ((System.Windows.Controls.TextBox)(target));                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 13:              this.cbIncludeSubfolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 14:              this.cbIncludeHiddenFolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 15:              this.cbIncludeBinary = ((System.Windows.Controls.CheckBox)(target));              return;              case 16:              this.MiddleFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 17:                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 18:                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 19:              this.SpacerFileOptions = ((System.Windows.Controls.Border)(target));              return;              case 20:              this.RightFileOptions = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.rbFileRegex = ((System.Windows.Controls.RadioButton)(target));              return;              case 22:              this.rbFileAsterisk = ((System.Windows.Controls.RadioButton)(target));              return;              case 23:              this.cbEncoding = ((System.Windows.Controls.ComboBox)(target));                            #line 211 "..\..\..\Views\MainView.xaml"              this.cbEncoding.Initialized += new System.EventHandler(this.cbEncoding_Initialized);                            #line default              #line hidden              return;              case 24:              this.tbFilePattern = ((System.Windows.Controls.ComboBox)(target));                            #line 230 "..\..\..\Views\MainView.xaml"              this.tbFilePattern.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 25:              this.cbIncludeArchives = ((System.Windows.Controls.CheckBox)(target));              return;              case 26:              this.pathsToIgnoreLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 27:              this.tbFilePatternIgnore = ((System.Windows.Controls.ComboBox)(target));                            #line 244 "..\..\..\Views\MainView.xaml"              this.tbFilePatternIgnore.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 28:              this.tbSearchFor = ((System.Windows.Controls.ComboBox)(target));              return;              case 29:              this.tbReplaceWith = ((System.Windows.Controls.ComboBox)(target));              return;              case 30:                            #line 323 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOtherActions_Click);                            #line default              #line hidden              return;              case 31:              this.advanceContextMenu = ((System.Windows.Controls.ContextMenu)(target));              return;              }
Magic Number,dnGREP.WPF,MainForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\MainView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.MainForm_Closing);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Activated += new System.EventHandler(this.Window_Activated);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).StateChanged += new System.EventHandler(this.Window_StateChanged);                            #line default              #line hidden              return;              case 2:                            #line 30 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.DockPanel)(target)).ManipulationBoundaryFeedback += new System.EventHandler<System.Windows.Input.ManipulationBoundaryFeedbackEventArgs>(this.ManipulationBoundaryFeedbackHandler);                            #line default              #line hidden              return;              case 3:              this.mnuMainMenu = ((System.Windows.Controls.Menu)(target));              return;              case 4:              this.SearchText = ((System.Windows.Controls.ComboBox)(target));              return;              case 5:                            #line 82 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Expander)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.Expander_SizeChanged);                            #line default              #line hidden              return;              case 6:              this.fileOptions = ((System.Windows.Controls.TextBlock)(target));              return;              case 7:                            #line 91 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.WrapPanel)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.WrapPanel_SizeChanged);                            #line default              #line hidden              return;              case 8:              this.LeftFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 9:              this.rbFilterAllSizes = ((System.Windows.Controls.RadioButton)(target));              return;              case 10:              this.rbFilterSpecificSize = ((System.Windows.Controls.RadioButton)(target));              return;              case 11:              this.tbFileSizeFrom = ((System.Windows.Controls.TextBox)(target));                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 12:              this.tbFileSizeTo = ((System.Windows.Controls.TextBox)(target));                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 13:              this.cbIncludeSubfolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 14:              this.cbIncludeHiddenFolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 15:              this.cbIncludeBinary = ((System.Windows.Controls.CheckBox)(target));              return;              case 16:              this.MiddleFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 17:                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 18:                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 19:              this.SpacerFileOptions = ((System.Windows.Controls.Border)(target));              return;              case 20:              this.RightFileOptions = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.rbFileRegex = ((System.Windows.Controls.RadioButton)(target));              return;              case 22:              this.rbFileAsterisk = ((System.Windows.Controls.RadioButton)(target));              return;              case 23:              this.cbEncoding = ((System.Windows.Controls.ComboBox)(target));                            #line 211 "..\..\..\Views\MainView.xaml"              this.cbEncoding.Initialized += new System.EventHandler(this.cbEncoding_Initialized);                            #line default              #line hidden              return;              case 24:              this.tbFilePattern = ((System.Windows.Controls.ComboBox)(target));                            #line 230 "..\..\..\Views\MainView.xaml"              this.tbFilePattern.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 25:              this.cbIncludeArchives = ((System.Windows.Controls.CheckBox)(target));              return;              case 26:              this.pathsToIgnoreLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 27:              this.tbFilePatternIgnore = ((System.Windows.Controls.ComboBox)(target));                            #line 244 "..\..\..\Views\MainView.xaml"              this.tbFilePatternIgnore.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 28:              this.tbSearchFor = ((System.Windows.Controls.ComboBox)(target));              return;              case 29:              this.tbReplaceWith = ((System.Windows.Controls.ComboBox)(target));              return;              case 30:                            #line 323 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOtherActions_Click);                            #line default              #line hidden              return;              case 31:              this.advanceContextMenu = ((System.Windows.Controls.ContextMenu)(target));              return;              }
Magic Number,dnGREP.WPF,MainForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\MainView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.MainForm_Closing);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Activated += new System.EventHandler(this.Window_Activated);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).StateChanged += new System.EventHandler(this.Window_StateChanged);                            #line default              #line hidden              return;              case 2:                            #line 30 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.DockPanel)(target)).ManipulationBoundaryFeedback += new System.EventHandler<System.Windows.Input.ManipulationBoundaryFeedbackEventArgs>(this.ManipulationBoundaryFeedbackHandler);                            #line default              #line hidden              return;              case 3:              this.mnuMainMenu = ((System.Windows.Controls.Menu)(target));              return;              case 4:              this.SearchText = ((System.Windows.Controls.ComboBox)(target));              return;              case 5:                            #line 82 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Expander)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.Expander_SizeChanged);                            #line default              #line hidden              return;              case 6:              this.fileOptions = ((System.Windows.Controls.TextBlock)(target));              return;              case 7:                            #line 91 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.WrapPanel)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.WrapPanel_SizeChanged);                            #line default              #line hidden              return;              case 8:              this.LeftFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 9:              this.rbFilterAllSizes = ((System.Windows.Controls.RadioButton)(target));              return;              case 10:              this.rbFilterSpecificSize = ((System.Windows.Controls.RadioButton)(target));              return;              case 11:              this.tbFileSizeFrom = ((System.Windows.Controls.TextBox)(target));                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 12:              this.tbFileSizeTo = ((System.Windows.Controls.TextBox)(target));                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 13:              this.cbIncludeSubfolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 14:              this.cbIncludeHiddenFolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 15:              this.cbIncludeBinary = ((System.Windows.Controls.CheckBox)(target));              return;              case 16:              this.MiddleFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 17:                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 18:                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 19:              this.SpacerFileOptions = ((System.Windows.Controls.Border)(target));              return;              case 20:              this.RightFileOptions = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.rbFileRegex = ((System.Windows.Controls.RadioButton)(target));              return;              case 22:              this.rbFileAsterisk = ((System.Windows.Controls.RadioButton)(target));              return;              case 23:              this.cbEncoding = ((System.Windows.Controls.ComboBox)(target));                            #line 211 "..\..\..\Views\MainView.xaml"              this.cbEncoding.Initialized += new System.EventHandler(this.cbEncoding_Initialized);                            #line default              #line hidden              return;              case 24:              this.tbFilePattern = ((System.Windows.Controls.ComboBox)(target));                            #line 230 "..\..\..\Views\MainView.xaml"              this.tbFilePattern.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 25:              this.cbIncludeArchives = ((System.Windows.Controls.CheckBox)(target));              return;              case 26:              this.pathsToIgnoreLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 27:              this.tbFilePatternIgnore = ((System.Windows.Controls.ComboBox)(target));                            #line 244 "..\..\..\Views\MainView.xaml"              this.tbFilePatternIgnore.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 28:              this.tbSearchFor = ((System.Windows.Controls.ComboBox)(target));              return;              case 29:              this.tbReplaceWith = ((System.Windows.Controls.ComboBox)(target));              return;              case 30:                            #line 323 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOtherActions_Click);                            #line default              #line hidden              return;              case 31:              this.advanceContextMenu = ((System.Windows.Controls.ContextMenu)(target));              return;              }
Magic Number,dnGREP.WPF,PreviewView,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\PreviewView.xaml.cs,OnPreviewMouseDown,The following statement contains a magic number: if (Keyboard.IsKeyDown(Key.LeftCtrl) ||                  Keyboard.IsKeyDown(Key.RightCtrl))              {                  if (args.MiddleButton == MouseButtonState.Pressed)                  {                      zoomSlider.Value = 12;                  }              }
Magic Number,dnGREP.WPF,App,C:\repos\dnGrep_dnGrep\dnGREP.WPF\App.xaml.cs,Application_Startup,The following statement contains a magic number: try              {                  string searchFor = null;                  Utils.DeleteTempFolder();                  if (e.Args != null && e.Args.Length > 0)                  {                      string searchPath = e.Args[0];                      if (e.Args.Length == 2)                          searchFor = e.Args[1];                      if (searchPath == "/warmUp")                      {                          this.MainWindow = new MainForm(false);                          this.MainWindow.Loaded += new RoutedEventHandler(MainWindow_Loaded);                      }                      else                      {                          if (searchPath.EndsWith(":\""))                              searchPath = searchPath.Substring(0' searchPath.Length - 1) + "\\";                          GrepSettings.Instance.Set<string>(GrepSettings.Key.SearchFolder' searchPath);                          if (searchFor != null)                          {                              GrepSettings.Instance.Set<string>(GrepSettings.Key.SearchFor' searchFor);                              GrepSettings.Instance.Set<SearchType>(GrepSettings.Key.TypeOfSearch' SearchType.Regex);                          }                      }                  }                  if (this.MainWindow == null)                      this.MainWindow = new MainForm();                    this.MainWindow.Show();                  if (searchFor != null && this.MainWindow.DataContext != null)                      ((MainViewModel)this.MainWindow.DataContext).SearchCommand.Execute(null);              }              catch (Exception ex)              {                  logger.Log<Exception>(LogLevel.Error' ex.Message' ex);                  MessageBox.Show("Something broke down in the program. See event log for details."' "Error"' MessageBoxButton.OK' MessageBoxImage.Error);              }
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.ColumnCount = 2;
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.Controls.Add(this.labelCopyright' 1' 3);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.Controls.Add(this.labelBuildDate' 1' 2);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.Controls.Add(this.textBoxDescription' 1' 4);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.Controls.Add(this.okButton' 1' 5);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.Location = new System.Drawing.Point(9' 9);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.Location = new System.Drawing.Point(9' 9);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.RowCount = 6;
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.Size = new System.Drawing.Size(394' 207);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.Size = new System.Drawing.Size(394' 207);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.logoPictureBox.Location = new System.Drawing.Point(3' 3);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.logoPictureBox.Location = new System.Drawing.Point(3' 3);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.SetRowSpan(this.logoPictureBox' 6);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.logoPictureBox.Size = new System.Drawing.Size(72' 77);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.logoPictureBox.Size = new System.Drawing.Size(72' 77);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.logoPictureBox.TabIndex = 12;
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.labelProductName.Location = new System.Drawing.Point(84' 0);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.labelProductName.Margin = new System.Windows.Forms.Padding(6' 0' 3' 0);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.labelProductName.Margin = new System.Windows.Forms.Padding(6' 0' 3' 0);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.labelProductName.MaximumSize = new System.Drawing.Size(0' 17);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.labelProductName.Size = new System.Drawing.Size(307' 17);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.labelProductName.Size = new System.Drawing.Size(307' 17);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.labelProductName.TabIndex = 19;
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.labelVersion.Location = new System.Drawing.Point(84' 22);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.labelVersion.Location = new System.Drawing.Point(84' 22);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.labelVersion.Margin = new System.Windows.Forms.Padding(6' 0' 3' 0);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.labelVersion.Margin = new System.Windows.Forms.Padding(6' 0' 3' 0);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.labelVersion.MaximumSize = new System.Drawing.Size(0' 17);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.labelVersion.Size = new System.Drawing.Size(307' 17);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.labelVersion.Size = new System.Drawing.Size(307' 17);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.labelCopyright.Location = new System.Drawing.Point(84' 66);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.labelCopyright.Location = new System.Drawing.Point(84' 66);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.labelCopyright.Margin = new System.Windows.Forms.Padding(6' 0' 3' 0);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.labelCopyright.Margin = new System.Windows.Forms.Padding(6' 0' 3' 0);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.labelCopyright.MaximumSize = new System.Drawing.Size(0' 17);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.labelCopyright.Size = new System.Drawing.Size(307' 17);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.labelCopyright.Size = new System.Drawing.Size(307' 17);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.labelCopyright.TabIndex = 21;
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.labelBuildDate.Location = new System.Drawing.Point(84' 44);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.labelBuildDate.Location = new System.Drawing.Point(84' 44);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.labelBuildDate.Margin = new System.Windows.Forms.Padding(6' 0' 3' 0);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.labelBuildDate.Margin = new System.Windows.Forms.Padding(6' 0' 3' 0);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.labelBuildDate.MaximumSize = new System.Drawing.Size(0' 17);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.labelBuildDate.Size = new System.Drawing.Size(307' 17);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.labelBuildDate.Size = new System.Drawing.Size(307' 17);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.labelBuildDate.TabIndex = 22;
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.textBoxDescription.Location = new System.Drawing.Point(84' 91);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.textBoxDescription.Location = new System.Drawing.Point(84' 91);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.textBoxDescription.Margin = new System.Windows.Forms.Padding(6' 3' 3' 3);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.textBoxDescription.Margin = new System.Windows.Forms.Padding(6' 3' 3' 3);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.textBoxDescription.Margin = new System.Windows.Forms.Padding(6' 3' 3' 3);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.textBoxDescription.Margin = new System.Windows.Forms.Padding(6' 3' 3' 3);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.textBoxDescription.Size = new System.Drawing.Size(307' 85);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.textBoxDescription.Size = new System.Drawing.Size(307' 85);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.textBoxDescription.TabIndex = 23;
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.okButton.Location = new System.Drawing.Point(316' 182);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.okButton.Location = new System.Drawing.Point(316' 182);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.okButton.Size = new System.Drawing.Size(75' 22);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.okButton.Size = new System.Drawing.Size(75' 22);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.okButton.TabIndex = 24;
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(412' 225);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(412' 225);
Magic Number,dnGREP.WPF,AboutForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.Padding = new System.Windows.Forms.Padding(9);
Magic Number,dnGREP.WPF,MainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\MainViewModel.cs,OpenFile,The following statement contains a magic number: try              {                  // Line was selected                  int lineNumber = selectedNode.GrepLine.LineNumber;                    FormattedGrepResult result = selectedNode.Parent;                  OpenFileArgs fileArg = new OpenFileArgs(result.GrepResult' result.GrepResult.Pattern' lineNumber' useCustomEditor' settings.Get<string>(GrepSettings.Key.CustomEditor)' settings.Get<string>(GrepSettings.Key.CustomEditorArgs));                  dnGREP.Engines.GrepEngineFactory.GetSearchEngine(result.GrepResult.FileNameReal' new GrepEngineInitParams(false' 0' 0' 0.5' false)' new FileFilter()).OpenFile(fileArg);                  if (fileArg.UseBaseEngine)                      Utils.OpenFile(new OpenFileArgs(result.GrepResult' result.GrepResult.Pattern' lineNumber' useCustomEditor' settings.Get<string>(GrepSettings.Key.CustomEditor)' settings.Get<string>(GrepSettings.Key.CustomEditorArgs)));              }              catch (Exception ex)              {                  logger.Log<Exception>(LogLevel.Error' "Failed to open file."' ex);                  if (useCustomEditor)                      MessageBox.Show("There was an error opening file by custom editor. \nCheck editor path via \"Options..\"."' "Failure"' MessageBoxButton.OK' MessageBoxImage.Error);                  else                      MessageBox.Show("There was an error opening file. Please examine the error log."' "Failure"' MessageBoxButton.OK' MessageBoxImage.Error);              }
Magic Number,dnGREP.WPF,MainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\MainViewModel.cs,OpenFile,The following statement contains a magic number: try              {                  // Line was selected                  int lineNumber = 0;                  OpenFileArgs fileArg = new OpenFileArgs(result.GrepResult' result.GrepResult.Pattern' lineNumber' useCustomEditor' settings.Get<string>(GrepSettings.Key.CustomEditor)' settings.Get<string>(GrepSettings.Key.CustomEditorArgs));                  dnGREP.Engines.GrepEngineFactory.GetSearchEngine(result.GrepResult.FileNameReal' new GrepEngineInitParams(false' 0' 0' 0.5' false)' new FileFilter()).OpenFile(fileArg);                  if (fileArg.UseBaseEngine)                      Utils.OpenFile(new OpenFileArgs(result.GrepResult' result.GrepResult.Pattern' lineNumber' useCustomEditor' settings.Get<string>(GrepSettings.Key.CustomEditor)' settings.Get<string>(GrepSettings.Key.CustomEditorArgs)));              }              catch (Exception ex)              {                  logger.Log<Exception>(LogLevel.Error' "Failed to open file."' ex);                  if (useCustomEditor)                      MessageBox.Show("There was an error opening file by custom editor. \nCheck editor path via \"Options..\"."' "Failure"' MessageBoxButton.OK' MessageBoxImage.Error);                  else                      MessageBox.Show("There was an error opening file. Please examine the error log."' "Failure"' MessageBoxButton.OK' MessageBoxImage.Error);              }
Magic Number,dnGREP.WPF,MainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\MainViewModel.cs,SaveResultsToFile,The following statement contains a magic number: if (FilesFound)              {                  SaveFileDialog dlg = new SaveFileDialog();                    dlg.Filter = "Report file format|*.txt|Results file format|*.txt|CSV file format|*.csv";                  dlg.DefaultExt = "*.txt";                  dlg.InitialDirectory = Utils.GetBaseFolder(FileOrFolderPath);                    var result = dlg.ShowDialog();                  if (result.HasValue && result.Value)                  {                      try                      {                          IsSaveInProgress = true;                          await Task.Run(() =>                          {                              switch (dlg.FilterIndex)                              {                                  case 1:                                      Utils.SaveResultsReport(SearchResults.GetList()' GetSearchOptions()' dlg.FileName);                                      break;                                  case 2:                                      Utils.SaveResultsAsText(SearchResults.GetList()' dlg.FileName);                                      break;                                  case 3:                                      Utils.SaveResultsAsCSV(SearchResults.GetList()' dlg.FileName);                                      break;                              }                          });                        }                      catch (Exception ex)                      {                          MessageBox.Show("There was an error creating the file. Please examine the error log."' "Failure"' MessageBoxButton.OK' MessageBoxImage.Error);                          logger.Log<Exception>(LogLevel.Error' "Error creating results file"' ex);                      }                      finally                      {                          IsSaveInProgress = false;                      }                  }              }
Magic Number,dnGREP.WPF,MainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\MainViewModel.cs,SaveResultsToFile,The following statement contains a magic number: if (FilesFound)              {                  SaveFileDialog dlg = new SaveFileDialog();                    dlg.Filter = "Report file format|*.txt|Results file format|*.txt|CSV file format|*.csv";                  dlg.DefaultExt = "*.txt";                  dlg.InitialDirectory = Utils.GetBaseFolder(FileOrFolderPath);                    var result = dlg.ShowDialog();                  if (result.HasValue && result.Value)                  {                      try                      {                          IsSaveInProgress = true;                          await Task.Run(() =>                          {                              switch (dlg.FilterIndex)                              {                                  case 1:                                      Utils.SaveResultsReport(SearchResults.GetList()' GetSearchOptions()' dlg.FileName);                                      break;                                  case 2:                                      Utils.SaveResultsAsText(SearchResults.GetList()' dlg.FileName);                                      break;                                  case 3:                                      Utils.SaveResultsAsCSV(SearchResults.GetList()' dlg.FileName);                                      break;                              }                          });                        }                      catch (Exception ex)                      {                          MessageBox.Show("There was an error creating the file. Please examine the error log."' "Failure"' MessageBoxButton.OK' MessageBoxImage.Error);                          logger.Log<Exception>(LogLevel.Error' "Error creating results file"' ex);                      }                      finally                      {                          IsSaveInProgress = false;                      }                  }              }
Magic Number,dnGREP.WPF,FormattedGrepLine,C:\repos\dnGrep_dnGrep\dnGREP.WPF\MVHelpers\ObservableGrepSearchResults.cs,formatLine,The following statement contains a magic number: const int MAX_LINE_LENGTH = 500;
Magic Number,dnGREP.WPF,FormattedGrepLine,C:\repos\dnGrep_dnGrep\dnGREP.WPF\MVHelpers\ObservableGrepSearchResults.cs,formatLine,The following statement contains a magic number: if (line.Matches.Count == 0)              {                  Run mainRun = new Run(fullLine);                  paragraph.Inlines.Add(mainRun);              }              else              {                  int counter = 0;                  GrepSearchResult.GrepMatch[] lineMatches = new GrepSearchResult.GrepMatch[line.Matches.Count];                  line.Matches.CopyTo(lineMatches);                  foreach (GrepSearchResult.GrepMatch m in lineMatches)                  {                      try                      {                          string regLine = null;                          string fmtLine = null;                          if (fullLine.Length < m.StartLocation + m.Length)                          {                              regLine = fullLine.Substring(counter' fullLine.Length - counter);                          }                          else                          {                              regLine = fullLine.Substring(counter' m.StartLocation - counter);                              fmtLine = fullLine.Substring(m.StartLocation' m.Length);                          }                            Run regularRun = new Run(regLine);                          paragraph.Inlines.Add(regularRun);                            if (fmtLine != null)                          {                              Run highlightedRun = new Run(fmtLine);                              highlightedRun.Background = Brushes.Yellow;                              paragraph.Inlines.Add(highlightedRun);                          }                          else                          {                              break;                          }                      }                      catch                      {                          Run regularRun = new Run(fullLine);                          paragraph.Inlines.Add(regularRun);                      }                      finally                      {                          counter = m.StartLocation + m.Length;                      }                  }                  if (counter < fullLine.Length)                  {                      try                      {                          string regLine = fullLine.Substring(counter);                          Run regularRun = new Run(regLine);                          paragraph.Inlines.Add(regularRun);                      }                      catch                      {                          Run regularRun = new Run(fullLine);                          paragraph.Inlines.Add(regularRun);                      }                  }                  if (line.LineText.Length > MAX_LINE_LENGTH)                  {                      string msg = string.Format("...(+{0:n0} characters)"' line.LineText.Length - MAX_LINE_LENGTH);                      Run run = new Run(msg);                      run.Background = Brushes.AliceBlue;                      paragraph.Inlines.Add(run);                        var hiddenMatches = line.Matches.Where(m => m.StartLocation > MAX_LINE_LENGTH).Select(m => m);                      int count = hiddenMatches.Count();                      if (count > 0)                          paragraph.Inlines.Add(new Run(" additional matches:"));                        // if close to getting them all' then take them all'                      // otherwise' stop at 20 and just show the remaining count                      int takeCount = count > 25 ? 20 : count;                        foreach (GrepSearchResult.GrepMatch m in hiddenMatches.Take(takeCount))                      {                          paragraph.Inlines.Add(new Run("  "));                          string fmtLine = line.LineText.Substring(m.StartLocation' m.Length);                          run = new Run(fmtLine);                          run.Background = Brushes.Yellow;                          paragraph.Inlines.Add(run);                            paragraph.Inlines.Add(new Run(string.Format(" at position {0}"' m.StartLocation)));                      }                        if (count > takeCount)                      {                          paragraph.Inlines.Add(new Run(string.Format("' +{0} more matches"' count - takeCount)));                      }                  }              }
Magic Number,dnGREP.WPF,FormattedGrepLine,C:\repos\dnGrep_dnGrep\dnGREP.WPF\MVHelpers\ObservableGrepSearchResults.cs,formatLine,The following statement contains a magic number: if (line.Matches.Count == 0)              {                  Run mainRun = new Run(fullLine);                  paragraph.Inlines.Add(mainRun);              }              else              {                  int counter = 0;                  GrepSearchResult.GrepMatch[] lineMatches = new GrepSearchResult.GrepMatch[line.Matches.Count];                  line.Matches.CopyTo(lineMatches);                  foreach (GrepSearchResult.GrepMatch m in lineMatches)                  {                      try                      {                          string regLine = null;                          string fmtLine = null;                          if (fullLine.Length < m.StartLocation + m.Length)                          {                              regLine = fullLine.Substring(counter' fullLine.Length - counter);                          }                          else                          {                              regLine = fullLine.Substring(counter' m.StartLocation - counter);                              fmtLine = fullLine.Substring(m.StartLocation' m.Length);                          }                            Run regularRun = new Run(regLine);                          paragraph.Inlines.Add(regularRun);                            if (fmtLine != null)                          {                              Run highlightedRun = new Run(fmtLine);                              highlightedRun.Background = Brushes.Yellow;                              paragraph.Inlines.Add(highlightedRun);                          }                          else                          {                              break;                          }                      }                      catch                      {                          Run regularRun = new Run(fullLine);                          paragraph.Inlines.Add(regularRun);                      }                      finally                      {                          counter = m.StartLocation + m.Length;                      }                  }                  if (counter < fullLine.Length)                  {                      try                      {                          string regLine = fullLine.Substring(counter);                          Run regularRun = new Run(regLine);                          paragraph.Inlines.Add(regularRun);                      }                      catch                      {                          Run regularRun = new Run(fullLine);                          paragraph.Inlines.Add(regularRun);                      }                  }                  if (line.LineText.Length > MAX_LINE_LENGTH)                  {                      string msg = string.Format("...(+{0:n0} characters)"' line.LineText.Length - MAX_LINE_LENGTH);                      Run run = new Run(msg);                      run.Background = Brushes.AliceBlue;                      paragraph.Inlines.Add(run);                        var hiddenMatches = line.Matches.Where(m => m.StartLocation > MAX_LINE_LENGTH).Select(m => m);                      int count = hiddenMatches.Count();                      if (count > 0)                          paragraph.Inlines.Add(new Run(" additional matches:"));                        // if close to getting them all' then take them all'                      // otherwise' stop at 20 and just show the remaining count                      int takeCount = count > 25 ? 20 : count;                        foreach (GrepSearchResult.GrepMatch m in hiddenMatches.Take(takeCount))                      {                          paragraph.Inlines.Add(new Run("  "));                          string fmtLine = line.LineText.Substring(m.StartLocation' m.Length);                          run = new Run(fmtLine);                          run.Background = Brushes.Yellow;                          paragraph.Inlines.Add(run);                            paragraph.Inlines.Add(new Run(string.Format(" at position {0}"' m.StartLocation)));                      }                        if (count > takeCount)                      {                          paragraph.Inlines.Add(new Run(string.Format("' +{0} more matches"' count - takeCount)));                      }                  }              }
Magic Number,dnGREP.WPF,OptionsView,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\OptionsView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.tbMainPanel = ((System.Windows.Controls.TabControl)(target));              return;              case 2:              this.tbGeneralTab = ((System.Windows.Controls.TabItem)(target));              return;              case 3:              this.grShell = ((System.Windows.Controls.GroupBox)(target));              return;              case 4:              this.cbRegisterShell = ((System.Windows.Controls.CheckBox)(target));              return;              case 5:              this.cbRegisterStartup = ((System.Windows.Controls.CheckBox)(target));              return;              case 6:              this.cbCheckForUpdates = ((System.Windows.Controls.CheckBox)(target));              return;              case 7:              this.tbUpdateInterval = ((System.Windows.Controls.TextBox)(target));              return;              case 8:              this.btnBrowse = ((System.Windows.Controls.Button)(target));              return;              case 9:              this.tbUserInterfaceTab = ((System.Windows.Controls.TabItem)(target));              return;              case 10:              this.cbShowPath = ((System.Windows.Controls.CheckBox)(target));              return;              case 11:              this.cbShowContext = ((System.Windows.Controls.CheckBox)(target));              return;              case 12:              this.cbSearchFileNameOnly = ((System.Windows.Controls.CheckBox)(target));              return;              case 13:              this.cbExpandResult = ((System.Windows.Controls.CheckBox)(target));              return;              case 14:              this.cbShowMatchVerbose = ((System.Windows.Controls.CheckBox)(target));              return;              case 15:                            #line 118 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 118 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 16:                            #line 123 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 123 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 17:                            #line 128 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 128 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 18:              this.btnClearPreviousSearches = ((System.Windows.Controls.Button)(target));              return;              case 19:              this.tbSearchOptionsTab = ((System.Windows.Controls.TabItem)(target));              return;              case 20:              this.tbFuzzyMatchThreshold = ((System.Windows.Controls.TextBox)(target));              return;              }
Magic Number,dnGREP.WPF,OptionsView,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\OptionsView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.tbMainPanel = ((System.Windows.Controls.TabControl)(target));              return;              case 2:              this.tbGeneralTab = ((System.Windows.Controls.TabItem)(target));              return;              case 3:              this.grShell = ((System.Windows.Controls.GroupBox)(target));              return;              case 4:              this.cbRegisterShell = ((System.Windows.Controls.CheckBox)(target));              return;              case 5:              this.cbRegisterStartup = ((System.Windows.Controls.CheckBox)(target));              return;              case 6:              this.cbCheckForUpdates = ((System.Windows.Controls.CheckBox)(target));              return;              case 7:              this.tbUpdateInterval = ((System.Windows.Controls.TextBox)(target));              return;              case 8:              this.btnBrowse = ((System.Windows.Controls.Button)(target));              return;              case 9:              this.tbUserInterfaceTab = ((System.Windows.Controls.TabItem)(target));              return;              case 10:              this.cbShowPath = ((System.Windows.Controls.CheckBox)(target));              return;              case 11:              this.cbShowContext = ((System.Windows.Controls.CheckBox)(target));              return;              case 12:              this.cbSearchFileNameOnly = ((System.Windows.Controls.CheckBox)(target));              return;              case 13:              this.cbExpandResult = ((System.Windows.Controls.CheckBox)(target));              return;              case 14:              this.cbShowMatchVerbose = ((System.Windows.Controls.CheckBox)(target));              return;              case 15:                            #line 118 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 118 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 16:                            #line 123 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 123 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 17:                            #line 128 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 128 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 18:              this.btnClearPreviousSearches = ((System.Windows.Controls.Button)(target));              return;              case 19:              this.tbSearchOptionsTab = ((System.Windows.Controls.TabItem)(target));              return;              case 20:              this.tbFuzzyMatchThreshold = ((System.Windows.Controls.TextBox)(target));              return;              }
Magic Number,dnGREP.WPF,OptionsView,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\OptionsView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.tbMainPanel = ((System.Windows.Controls.TabControl)(target));              return;              case 2:              this.tbGeneralTab = ((System.Windows.Controls.TabItem)(target));              return;              case 3:              this.grShell = ((System.Windows.Controls.GroupBox)(target));              return;              case 4:              this.cbRegisterShell = ((System.Windows.Controls.CheckBox)(target));              return;              case 5:              this.cbRegisterStartup = ((System.Windows.Controls.CheckBox)(target));              return;              case 6:              this.cbCheckForUpdates = ((System.Windows.Controls.CheckBox)(target));              return;              case 7:              this.tbUpdateInterval = ((System.Windows.Controls.TextBox)(target));              return;              case 8:              this.btnBrowse = ((System.Windows.Controls.Button)(target));              return;              case 9:              this.tbUserInterfaceTab = ((System.Windows.Controls.TabItem)(target));              return;              case 10:              this.cbShowPath = ((System.Windows.Controls.CheckBox)(target));              return;              case 11:              this.cbShowContext = ((System.Windows.Controls.CheckBox)(target));              return;              case 12:              this.cbSearchFileNameOnly = ((System.Windows.Controls.CheckBox)(target));              return;              case 13:              this.cbExpandResult = ((System.Windows.Controls.CheckBox)(target));              return;              case 14:              this.cbShowMatchVerbose = ((System.Windows.Controls.CheckBox)(target));              return;              case 15:                            #line 118 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 118 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 16:                            #line 123 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 123 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 17:                            #line 128 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 128 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 18:              this.btnClearPreviousSearches = ((System.Windows.Controls.Button)(target));              return;              case 19:              this.tbSearchOptionsTab = ((System.Windows.Controls.TabItem)(target));              return;              case 20:              this.tbFuzzyMatchThreshold = ((System.Windows.Controls.TextBox)(target));              return;              }
Magic Number,dnGREP.WPF,OptionsView,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\OptionsView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.tbMainPanel = ((System.Windows.Controls.TabControl)(target));              return;              case 2:              this.tbGeneralTab = ((System.Windows.Controls.TabItem)(target));              return;              case 3:              this.grShell = ((System.Windows.Controls.GroupBox)(target));              return;              case 4:              this.cbRegisterShell = ((System.Windows.Controls.CheckBox)(target));              return;              case 5:              this.cbRegisterStartup = ((System.Windows.Controls.CheckBox)(target));              return;              case 6:              this.cbCheckForUpdates = ((System.Windows.Controls.CheckBox)(target));              return;              case 7:              this.tbUpdateInterval = ((System.Windows.Controls.TextBox)(target));              return;              case 8:              this.btnBrowse = ((System.Windows.Controls.Button)(target));              return;              case 9:              this.tbUserInterfaceTab = ((System.Windows.Controls.TabItem)(target));              return;              case 10:              this.cbShowPath = ((System.Windows.Controls.CheckBox)(target));              return;              case 11:              this.cbShowContext = ((System.Windows.Controls.CheckBox)(target));              return;              case 12:              this.cbSearchFileNameOnly = ((System.Windows.Controls.CheckBox)(target));              return;              case 13:              this.cbExpandResult = ((System.Windows.Controls.CheckBox)(target));              return;              case 14:              this.cbShowMatchVerbose = ((System.Windows.Controls.CheckBox)(target));              return;              case 15:                            #line 118 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 118 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 16:                            #line 123 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 123 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 17:                            #line 128 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 128 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 18:              this.btnClearPreviousSearches = ((System.Windows.Controls.Button)(target));              return;              case 19:              this.tbSearchOptionsTab = ((System.Windows.Controls.TabItem)(target));              return;              case 20:              this.tbFuzzyMatchThreshold = ((System.Windows.Controls.TextBox)(target));              return;              }
Magic Number,dnGREP.WPF,OptionsView,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\OptionsView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.tbMainPanel = ((System.Windows.Controls.TabControl)(target));              return;              case 2:              this.tbGeneralTab = ((System.Windows.Controls.TabItem)(target));              return;              case 3:              this.grShell = ((System.Windows.Controls.GroupBox)(target));              return;              case 4:              this.cbRegisterShell = ((System.Windows.Controls.CheckBox)(target));              return;              case 5:              this.cbRegisterStartup = ((System.Windows.Controls.CheckBox)(target));              return;              case 6:              this.cbCheckForUpdates = ((System.Windows.Controls.CheckBox)(target));              return;              case 7:              this.tbUpdateInterval = ((System.Windows.Controls.TextBox)(target));              return;              case 8:              this.btnBrowse = ((System.Windows.Controls.Button)(target));              return;              case 9:              this.tbUserInterfaceTab = ((System.Windows.Controls.TabItem)(target));              return;              case 10:              this.cbShowPath = ((System.Windows.Controls.CheckBox)(target));              return;              case 11:              this.cbShowContext = ((System.Windows.Controls.CheckBox)(target));              return;              case 12:              this.cbSearchFileNameOnly = ((System.Windows.Controls.CheckBox)(target));              return;              case 13:              this.cbExpandResult = ((System.Windows.Controls.CheckBox)(target));              return;              case 14:              this.cbShowMatchVerbose = ((System.Windows.Controls.CheckBox)(target));              return;              case 15:                            #line 118 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 118 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 16:                            #line 123 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 123 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 17:                            #line 128 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 128 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 18:              this.btnClearPreviousSearches = ((System.Windows.Controls.Button)(target));              return;              case 19:              this.tbSearchOptionsTab = ((System.Windows.Controls.TabItem)(target));              return;              case 20:              this.tbFuzzyMatchThreshold = ((System.Windows.Controls.TextBox)(target));              return;              }
Magic Number,dnGREP.WPF,OptionsView,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\OptionsView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.tbMainPanel = ((System.Windows.Controls.TabControl)(target));              return;              case 2:              this.tbGeneralTab = ((System.Windows.Controls.TabItem)(target));              return;              case 3:              this.grShell = ((System.Windows.Controls.GroupBox)(target));              return;              case 4:              this.cbRegisterShell = ((System.Windows.Controls.CheckBox)(target));              return;              case 5:              this.cbRegisterStartup = ((System.Windows.Controls.CheckBox)(target));              return;              case 6:              this.cbCheckForUpdates = ((System.Windows.Controls.CheckBox)(target));              return;              case 7:              this.tbUpdateInterval = ((System.Windows.Controls.TextBox)(target));              return;              case 8:              this.btnBrowse = ((System.Windows.Controls.Button)(target));              return;              case 9:              this.tbUserInterfaceTab = ((System.Windows.Controls.TabItem)(target));              return;              case 10:              this.cbShowPath = ((System.Windows.Controls.CheckBox)(target));              return;              case 11:              this.cbShowContext = ((System.Windows.Controls.CheckBox)(target));              return;              case 12:              this.cbSearchFileNameOnly = ((System.Windows.Controls.CheckBox)(target));              return;              case 13:              this.cbExpandResult = ((System.Windows.Controls.CheckBox)(target));              return;              case 14:              this.cbShowMatchVerbose = ((System.Windows.Controls.CheckBox)(target));              return;              case 15:                            #line 118 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 118 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 16:                            #line 123 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 123 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 17:                            #line 128 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 128 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 18:              this.btnClearPreviousSearches = ((System.Windows.Controls.Button)(target));              return;              case 19:              this.tbSearchOptionsTab = ((System.Windows.Controls.TabItem)(target));              return;              case 20:              this.tbFuzzyMatchThreshold = ((System.Windows.Controls.TextBox)(target));              return;              }
Magic Number,dnGREP.WPF,OptionsView,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\OptionsView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.tbMainPanel = ((System.Windows.Controls.TabControl)(target));              return;              case 2:              this.tbGeneralTab = ((System.Windows.Controls.TabItem)(target));              return;              case 3:              this.grShell = ((System.Windows.Controls.GroupBox)(target));              return;              case 4:              this.cbRegisterShell = ((System.Windows.Controls.CheckBox)(target));              return;              case 5:              this.cbRegisterStartup = ((System.Windows.Controls.CheckBox)(target));              return;              case 6:              this.cbCheckForUpdates = ((System.Windows.Controls.CheckBox)(target));              return;              case 7:              this.tbUpdateInterval = ((System.Windows.Controls.TextBox)(target));              return;              case 8:              this.btnBrowse = ((System.Windows.Controls.Button)(target));              return;              case 9:              this.tbUserInterfaceTab = ((System.Windows.Controls.TabItem)(target));              return;              case 10:              this.cbShowPath = ((System.Windows.Controls.CheckBox)(target));              return;              case 11:              this.cbShowContext = ((System.Windows.Controls.CheckBox)(target));              return;              case 12:              this.cbSearchFileNameOnly = ((System.Windows.Controls.CheckBox)(target));              return;              case 13:              this.cbExpandResult = ((System.Windows.Controls.CheckBox)(target));              return;              case 14:              this.cbShowMatchVerbose = ((System.Windows.Controls.CheckBox)(target));              return;              case 15:                            #line 118 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 118 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 16:                            #line 123 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 123 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 17:                            #line 128 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 128 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 18:              this.btnClearPreviousSearches = ((System.Windows.Controls.Button)(target));              return;              case 19:              this.tbSearchOptionsTab = ((System.Windows.Controls.TabItem)(target));              return;              case 20:              this.tbFuzzyMatchThreshold = ((System.Windows.Controls.TextBox)(target));              return;              }
Magic Number,dnGREP.WPF,OptionsView,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\OptionsView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.tbMainPanel = ((System.Windows.Controls.TabControl)(target));              return;              case 2:              this.tbGeneralTab = ((System.Windows.Controls.TabItem)(target));              return;              case 3:              this.grShell = ((System.Windows.Controls.GroupBox)(target));              return;              case 4:              this.cbRegisterShell = ((System.Windows.Controls.CheckBox)(target));              return;              case 5:              this.cbRegisterStartup = ((System.Windows.Controls.CheckBox)(target));              return;              case 6:              this.cbCheckForUpdates = ((System.Windows.Controls.CheckBox)(target));              return;              case 7:              this.tbUpdateInterval = ((System.Windows.Controls.TextBox)(target));              return;              case 8:              this.btnBrowse = ((System.Windows.Controls.Button)(target));              return;              case 9:              this.tbUserInterfaceTab = ((System.Windows.Controls.TabItem)(target));              return;              case 10:              this.cbShowPath = ((System.Windows.Controls.CheckBox)(target));              return;              case 11:              this.cbShowContext = ((System.Windows.Controls.CheckBox)(target));              return;              case 12:              this.cbSearchFileNameOnly = ((System.Windows.Controls.CheckBox)(target));              return;              case 13:              this.cbExpandResult = ((System.Windows.Controls.CheckBox)(target));              return;              case 14:              this.cbShowMatchVerbose = ((System.Windows.Controls.CheckBox)(target));              return;              case 15:                            #line 118 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 118 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 16:                            #line 123 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 123 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 17:                            #line 128 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 128 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 18:              this.btnClearPreviousSearches = ((System.Windows.Controls.Button)(target));              return;              case 19:              this.tbSearchOptionsTab = ((System.Windows.Controls.TabItem)(target));              return;              case 20:              this.tbFuzzyMatchThreshold = ((System.Windows.Controls.TextBox)(target));              return;              }
Magic Number,dnGREP.WPF,OptionsView,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\OptionsView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.tbMainPanel = ((System.Windows.Controls.TabControl)(target));              return;              case 2:              this.tbGeneralTab = ((System.Windows.Controls.TabItem)(target));              return;              case 3:              this.grShell = ((System.Windows.Controls.GroupBox)(target));              return;              case 4:              this.cbRegisterShell = ((System.Windows.Controls.CheckBox)(target));              return;              case 5:              this.cbRegisterStartup = ((System.Windows.Controls.CheckBox)(target));              return;              case 6:              this.cbCheckForUpdates = ((System.Windows.Controls.CheckBox)(target));              return;              case 7:              this.tbUpdateInterval = ((System.Windows.Controls.TextBox)(target));              return;              case 8:              this.btnBrowse = ((System.Windows.Controls.Button)(target));              return;              case 9:              this.tbUserInterfaceTab = ((System.Windows.Controls.TabItem)(target));              return;              case 10:              this.cbShowPath = ((System.Windows.Controls.CheckBox)(target));              return;              case 11:              this.cbShowContext = ((System.Windows.Controls.CheckBox)(target));              return;              case 12:              this.cbSearchFileNameOnly = ((System.Windows.Controls.CheckBox)(target));              return;              case 13:              this.cbExpandResult = ((System.Windows.Controls.CheckBox)(target));              return;              case 14:              this.cbShowMatchVerbose = ((System.Windows.Controls.CheckBox)(target));              return;              case 15:                            #line 118 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 118 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 16:                            #line 123 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 123 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 17:                            #line 128 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 128 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 18:              this.btnClearPreviousSearches = ((System.Windows.Controls.Button)(target));              return;              case 19:              this.tbSearchOptionsTab = ((System.Windows.Controls.TabItem)(target));              return;              case 20:              this.tbFuzzyMatchThreshold = ((System.Windows.Controls.TextBox)(target));              return;              }
Magic Number,dnGREP.WPF,OptionsView,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\OptionsView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.tbMainPanel = ((System.Windows.Controls.TabControl)(target));              return;              case 2:              this.tbGeneralTab = ((System.Windows.Controls.TabItem)(target));              return;              case 3:              this.grShell = ((System.Windows.Controls.GroupBox)(target));              return;              case 4:              this.cbRegisterShell = ((System.Windows.Controls.CheckBox)(target));              return;              case 5:              this.cbRegisterStartup = ((System.Windows.Controls.CheckBox)(target));              return;              case 6:              this.cbCheckForUpdates = ((System.Windows.Controls.CheckBox)(target));              return;              case 7:              this.tbUpdateInterval = ((System.Windows.Controls.TextBox)(target));              return;              case 8:              this.btnBrowse = ((System.Windows.Controls.Button)(target));              return;              case 9:              this.tbUserInterfaceTab = ((System.Windows.Controls.TabItem)(target));              return;              case 10:              this.cbShowPath = ((System.Windows.Controls.CheckBox)(target));              return;              case 11:              this.cbShowContext = ((System.Windows.Controls.CheckBox)(target));              return;              case 12:              this.cbSearchFileNameOnly = ((System.Windows.Controls.CheckBox)(target));              return;              case 13:              this.cbExpandResult = ((System.Windows.Controls.CheckBox)(target));              return;              case 14:              this.cbShowMatchVerbose = ((System.Windows.Controls.CheckBox)(target));              return;              case 15:                            #line 118 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 118 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 16:                            #line 123 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 123 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 17:                            #line 128 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 128 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 18:              this.btnClearPreviousSearches = ((System.Windows.Controls.Button)(target));              return;              case 19:              this.tbSearchOptionsTab = ((System.Windows.Controls.TabItem)(target));              return;              case 20:              this.tbFuzzyMatchThreshold = ((System.Windows.Controls.TextBox)(target));              return;              }
Magic Number,dnGREP.WPF,OptionsView,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\OptionsView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.tbMainPanel = ((System.Windows.Controls.TabControl)(target));              return;              case 2:              this.tbGeneralTab = ((System.Windows.Controls.TabItem)(target));              return;              case 3:              this.grShell = ((System.Windows.Controls.GroupBox)(target));              return;              case 4:              this.cbRegisterShell = ((System.Windows.Controls.CheckBox)(target));              return;              case 5:              this.cbRegisterStartup = ((System.Windows.Controls.CheckBox)(target));              return;              case 6:              this.cbCheckForUpdates = ((System.Windows.Controls.CheckBox)(target));              return;              case 7:              this.tbUpdateInterval = ((System.Windows.Controls.TextBox)(target));              return;              case 8:              this.btnBrowse = ((System.Windows.Controls.Button)(target));              return;              case 9:              this.tbUserInterfaceTab = ((System.Windows.Controls.TabItem)(target));              return;              case 10:              this.cbShowPath = ((System.Windows.Controls.CheckBox)(target));              return;              case 11:              this.cbShowContext = ((System.Windows.Controls.CheckBox)(target));              return;              case 12:              this.cbSearchFileNameOnly = ((System.Windows.Controls.CheckBox)(target));              return;              case 13:              this.cbExpandResult = ((System.Windows.Controls.CheckBox)(target));              return;              case 14:              this.cbShowMatchVerbose = ((System.Windows.Controls.CheckBox)(target));              return;              case 15:                            #line 118 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 118 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 16:                            #line 123 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 123 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 17:                            #line 128 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 128 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 18:              this.btnClearPreviousSearches = ((System.Windows.Controls.Button)(target));              return;              case 19:              this.tbSearchOptionsTab = ((System.Windows.Controls.TabItem)(target));              return;              case 20:              this.tbFuzzyMatchThreshold = ((System.Windows.Controls.TextBox)(target));              return;              }
Magic Number,dnGREP.WPF,OptionsView,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\OptionsView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.tbMainPanel = ((System.Windows.Controls.TabControl)(target));              return;              case 2:              this.tbGeneralTab = ((System.Windows.Controls.TabItem)(target));              return;              case 3:              this.grShell = ((System.Windows.Controls.GroupBox)(target));              return;              case 4:              this.cbRegisterShell = ((System.Windows.Controls.CheckBox)(target));              return;              case 5:              this.cbRegisterStartup = ((System.Windows.Controls.CheckBox)(target));              return;              case 6:              this.cbCheckForUpdates = ((System.Windows.Controls.CheckBox)(target));              return;              case 7:              this.tbUpdateInterval = ((System.Windows.Controls.TextBox)(target));              return;              case 8:              this.btnBrowse = ((System.Windows.Controls.Button)(target));              return;              case 9:              this.tbUserInterfaceTab = ((System.Windows.Controls.TabItem)(target));              return;              case 10:              this.cbShowPath = ((System.Windows.Controls.CheckBox)(target));              return;              case 11:              this.cbShowContext = ((System.Windows.Controls.CheckBox)(target));              return;              case 12:              this.cbSearchFileNameOnly = ((System.Windows.Controls.CheckBox)(target));              return;              case 13:              this.cbExpandResult = ((System.Windows.Controls.CheckBox)(target));              return;              case 14:              this.cbShowMatchVerbose = ((System.Windows.Controls.CheckBox)(target));              return;              case 15:                            #line 118 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 118 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 16:                            #line 123 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 123 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 17:                            #line 128 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 128 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 18:              this.btnClearPreviousSearches = ((System.Windows.Controls.Button)(target));              return;              case 19:              this.tbSearchOptionsTab = ((System.Windows.Controls.TabItem)(target));              return;              case 20:              this.tbFuzzyMatchThreshold = ((System.Windows.Controls.TextBox)(target));              return;              }
Magic Number,dnGREP.WPF,OptionsView,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\OptionsView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.tbMainPanel = ((System.Windows.Controls.TabControl)(target));              return;              case 2:              this.tbGeneralTab = ((System.Windows.Controls.TabItem)(target));              return;              case 3:              this.grShell = ((System.Windows.Controls.GroupBox)(target));              return;              case 4:              this.cbRegisterShell = ((System.Windows.Controls.CheckBox)(target));              return;              case 5:              this.cbRegisterStartup = ((System.Windows.Controls.CheckBox)(target));              return;              case 6:              this.cbCheckForUpdates = ((System.Windows.Controls.CheckBox)(target));              return;              case 7:              this.tbUpdateInterval = ((System.Windows.Controls.TextBox)(target));              return;              case 8:              this.btnBrowse = ((System.Windows.Controls.Button)(target));              return;              case 9:              this.tbUserInterfaceTab = ((System.Windows.Controls.TabItem)(target));              return;              case 10:              this.cbShowPath = ((System.Windows.Controls.CheckBox)(target));              return;              case 11:              this.cbShowContext = ((System.Windows.Controls.CheckBox)(target));              return;              case 12:              this.cbSearchFileNameOnly = ((System.Windows.Controls.CheckBox)(target));              return;              case 13:              this.cbExpandResult = ((System.Windows.Controls.CheckBox)(target));              return;              case 14:              this.cbShowMatchVerbose = ((System.Windows.Controls.CheckBox)(target));              return;              case 15:                            #line 118 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 118 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 16:                            #line 123 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 123 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 17:                            #line 128 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 128 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 18:              this.btnClearPreviousSearches = ((System.Windows.Controls.Button)(target));              return;              case 19:              this.tbSearchOptionsTab = ((System.Windows.Controls.TabItem)(target));              return;              case 20:              this.tbFuzzyMatchThreshold = ((System.Windows.Controls.TextBox)(target));              return;              }
Magic Number,dnGREP.WPF,OptionsView,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\OptionsView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.tbMainPanel = ((System.Windows.Controls.TabControl)(target));              return;              case 2:              this.tbGeneralTab = ((System.Windows.Controls.TabItem)(target));              return;              case 3:              this.grShell = ((System.Windows.Controls.GroupBox)(target));              return;              case 4:              this.cbRegisterShell = ((System.Windows.Controls.CheckBox)(target));              return;              case 5:              this.cbRegisterStartup = ((System.Windows.Controls.CheckBox)(target));              return;              case 6:              this.cbCheckForUpdates = ((System.Windows.Controls.CheckBox)(target));              return;              case 7:              this.tbUpdateInterval = ((System.Windows.Controls.TextBox)(target));              return;              case 8:              this.btnBrowse = ((System.Windows.Controls.Button)(target));              return;              case 9:              this.tbUserInterfaceTab = ((System.Windows.Controls.TabItem)(target));              return;              case 10:              this.cbShowPath = ((System.Windows.Controls.CheckBox)(target));              return;              case 11:              this.cbShowContext = ((System.Windows.Controls.CheckBox)(target));              return;              case 12:              this.cbSearchFileNameOnly = ((System.Windows.Controls.CheckBox)(target));              return;              case 13:              this.cbExpandResult = ((System.Windows.Controls.CheckBox)(target));              return;              case 14:              this.cbShowMatchVerbose = ((System.Windows.Controls.CheckBox)(target));              return;              case 15:                            #line 118 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 118 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 16:                            #line 123 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 123 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 17:                            #line 128 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 128 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 18:              this.btnClearPreviousSearches = ((System.Windows.Controls.Button)(target));              return;              case 19:              this.tbSearchOptionsTab = ((System.Windows.Controls.TabItem)(target));              return;              case 20:              this.tbFuzzyMatchThreshold = ((System.Windows.Controls.TextBox)(target));              return;              }
Magic Number,dnGREP.WPF,OptionsView,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\OptionsView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.tbMainPanel = ((System.Windows.Controls.TabControl)(target));              return;              case 2:              this.tbGeneralTab = ((System.Windows.Controls.TabItem)(target));              return;              case 3:              this.grShell = ((System.Windows.Controls.GroupBox)(target));              return;              case 4:              this.cbRegisterShell = ((System.Windows.Controls.CheckBox)(target));              return;              case 5:              this.cbRegisterStartup = ((System.Windows.Controls.CheckBox)(target));              return;              case 6:              this.cbCheckForUpdates = ((System.Windows.Controls.CheckBox)(target));              return;              case 7:              this.tbUpdateInterval = ((System.Windows.Controls.TextBox)(target));              return;              case 8:              this.btnBrowse = ((System.Windows.Controls.Button)(target));              return;              case 9:              this.tbUserInterfaceTab = ((System.Windows.Controls.TabItem)(target));              return;              case 10:              this.cbShowPath = ((System.Windows.Controls.CheckBox)(target));              return;              case 11:              this.cbShowContext = ((System.Windows.Controls.CheckBox)(target));              return;              case 12:              this.cbSearchFileNameOnly = ((System.Windows.Controls.CheckBox)(target));              return;              case 13:              this.cbExpandResult = ((System.Windows.Controls.CheckBox)(target));              return;              case 14:              this.cbShowMatchVerbose = ((System.Windows.Controls.CheckBox)(target));              return;              case 15:                            #line 118 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 118 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 16:                            #line 123 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 123 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 17:                            #line 128 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 128 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 18:              this.btnClearPreviousSearches = ((System.Windows.Controls.Button)(target));              return;              case 19:              this.tbSearchOptionsTab = ((System.Windows.Controls.TabItem)(target));              return;              case 20:              this.tbFuzzyMatchThreshold = ((System.Windows.Controls.TextBox)(target));              return;              }
Magic Number,dnGREP.WPF,OptionsView,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\OptionsView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.tbMainPanel = ((System.Windows.Controls.TabControl)(target));              return;              case 2:              this.tbGeneralTab = ((System.Windows.Controls.TabItem)(target));              return;              case 3:              this.grShell = ((System.Windows.Controls.GroupBox)(target));              return;              case 4:              this.cbRegisterShell = ((System.Windows.Controls.CheckBox)(target));              return;              case 5:              this.cbRegisterStartup = ((System.Windows.Controls.CheckBox)(target));              return;              case 6:              this.cbCheckForUpdates = ((System.Windows.Controls.CheckBox)(target));              return;              case 7:              this.tbUpdateInterval = ((System.Windows.Controls.TextBox)(target));              return;              case 8:              this.btnBrowse = ((System.Windows.Controls.Button)(target));              return;              case 9:              this.tbUserInterfaceTab = ((System.Windows.Controls.TabItem)(target));              return;              case 10:              this.cbShowPath = ((System.Windows.Controls.CheckBox)(target));              return;              case 11:              this.cbShowContext = ((System.Windows.Controls.CheckBox)(target));              return;              case 12:              this.cbSearchFileNameOnly = ((System.Windows.Controls.CheckBox)(target));              return;              case 13:              this.cbExpandResult = ((System.Windows.Controls.CheckBox)(target));              return;              case 14:              this.cbShowMatchVerbose = ((System.Windows.Controls.CheckBox)(target));              return;              case 15:                            #line 118 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 118 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 16:                            #line 123 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 123 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 17:                            #line 128 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 128 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 18:              this.btnClearPreviousSearches = ((System.Windows.Controls.Button)(target));              return;              case 19:              this.tbSearchOptionsTab = ((System.Windows.Controls.TabItem)(target));              return;              case 20:              this.tbFuzzyMatchThreshold = ((System.Windows.Controls.TextBox)(target));              return;              }
Magic Number,dnGREP.WPF,OptionsView,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\OptionsView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.tbMainPanel = ((System.Windows.Controls.TabControl)(target));              return;              case 2:              this.tbGeneralTab = ((System.Windows.Controls.TabItem)(target));              return;              case 3:              this.grShell = ((System.Windows.Controls.GroupBox)(target));              return;              case 4:              this.cbRegisterShell = ((System.Windows.Controls.CheckBox)(target));              return;              case 5:              this.cbRegisterStartup = ((System.Windows.Controls.CheckBox)(target));              return;              case 6:              this.cbCheckForUpdates = ((System.Windows.Controls.CheckBox)(target));              return;              case 7:              this.tbUpdateInterval = ((System.Windows.Controls.TextBox)(target));              return;              case 8:              this.btnBrowse = ((System.Windows.Controls.Button)(target));              return;              case 9:              this.tbUserInterfaceTab = ((System.Windows.Controls.TabItem)(target));              return;              case 10:              this.cbShowPath = ((System.Windows.Controls.CheckBox)(target));              return;              case 11:              this.cbShowContext = ((System.Windows.Controls.CheckBox)(target));              return;              case 12:              this.cbSearchFileNameOnly = ((System.Windows.Controls.CheckBox)(target));              return;              case 13:              this.cbExpandResult = ((System.Windows.Controls.CheckBox)(target));              return;              case 14:              this.cbShowMatchVerbose = ((System.Windows.Controls.CheckBox)(target));              return;              case 15:                            #line 118 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 118 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 16:                            #line 123 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 123 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 17:                            #line 128 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 128 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 18:              this.btnClearPreviousSearches = ((System.Windows.Controls.Button)(target));              return;              case 19:              this.tbSearchOptionsTab = ((System.Windows.Controls.TabItem)(target));              return;              case 20:              this.tbFuzzyMatchThreshold = ((System.Windows.Controls.TextBox)(target));              return;              }
Magic Number,dnGREP.WPF,OptionsView,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\OptionsView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.tbMainPanel = ((System.Windows.Controls.TabControl)(target));              return;              case 2:              this.tbGeneralTab = ((System.Windows.Controls.TabItem)(target));              return;              case 3:              this.grShell = ((System.Windows.Controls.GroupBox)(target));              return;              case 4:              this.cbRegisterShell = ((System.Windows.Controls.CheckBox)(target));              return;              case 5:              this.cbRegisterStartup = ((System.Windows.Controls.CheckBox)(target));              return;              case 6:              this.cbCheckForUpdates = ((System.Windows.Controls.CheckBox)(target));              return;              case 7:              this.tbUpdateInterval = ((System.Windows.Controls.TextBox)(target));              return;              case 8:              this.btnBrowse = ((System.Windows.Controls.Button)(target));              return;              case 9:              this.tbUserInterfaceTab = ((System.Windows.Controls.TabItem)(target));              return;              case 10:              this.cbShowPath = ((System.Windows.Controls.CheckBox)(target));              return;              case 11:              this.cbShowContext = ((System.Windows.Controls.CheckBox)(target));              return;              case 12:              this.cbSearchFileNameOnly = ((System.Windows.Controls.CheckBox)(target));              return;              case 13:              this.cbExpandResult = ((System.Windows.Controls.CheckBox)(target));              return;              case 14:              this.cbShowMatchVerbose = ((System.Windows.Controls.CheckBox)(target));              return;              case 15:                            #line 118 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 118 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 16:                            #line 123 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 123 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 17:                            #line 128 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 128 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 18:              this.btnClearPreviousSearches = ((System.Windows.Controls.Button)(target));              return;              case 19:              this.tbSearchOptionsTab = ((System.Windows.Controls.TabItem)(target));              return;              case 20:              this.tbFuzzyMatchThreshold = ((System.Windows.Controls.TextBox)(target));              return;              }
Magic Number,dnGREP.WPF,OptionsView,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\OptionsView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.tbMainPanel = ((System.Windows.Controls.TabControl)(target));              return;              case 2:              this.tbGeneralTab = ((System.Windows.Controls.TabItem)(target));              return;              case 3:              this.grShell = ((System.Windows.Controls.GroupBox)(target));              return;              case 4:              this.cbRegisterShell = ((System.Windows.Controls.CheckBox)(target));              return;              case 5:              this.cbRegisterStartup = ((System.Windows.Controls.CheckBox)(target));              return;              case 6:              this.cbCheckForUpdates = ((System.Windows.Controls.CheckBox)(target));              return;              case 7:              this.tbUpdateInterval = ((System.Windows.Controls.TextBox)(target));              return;              case 8:              this.btnBrowse = ((System.Windows.Controls.Button)(target));              return;              case 9:              this.tbUserInterfaceTab = ((System.Windows.Controls.TabItem)(target));              return;              case 10:              this.cbShowPath = ((System.Windows.Controls.CheckBox)(target));              return;              case 11:              this.cbShowContext = ((System.Windows.Controls.CheckBox)(target));              return;              case 12:              this.cbSearchFileNameOnly = ((System.Windows.Controls.CheckBox)(target));              return;              case 13:              this.cbExpandResult = ((System.Windows.Controls.CheckBox)(target));              return;              case 14:              this.cbShowMatchVerbose = ((System.Windows.Controls.CheckBox)(target));              return;              case 15:                            #line 118 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 118 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 16:                            #line 123 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 123 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 17:                            #line 128 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 128 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 18:              this.btnClearPreviousSearches = ((System.Windows.Controls.Button)(target));              return;              case 19:              this.tbSearchOptionsTab = ((System.Windows.Controls.TabItem)(target));              return;              case 20:              this.tbFuzzyMatchThreshold = ((System.Windows.Controls.TextBox)(target));              return;              }
Magic Number,dnGREP.WPF,Test,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\Test.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.cbHistory = ((System.Windows.Controls.ComboBox)(target));                            #line 15 "..\..\..\Views\Test.xaml"              this.cbHistory.MouseDown += new System.Windows.Input.MouseButtonEventHandler(this.cbHistory_MouseDown);                            #line default              #line hidden                            #line 15 "..\..\..\Views\Test.xaml"              this.cbHistory.PreviewMouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.cbHistory_MouseDown);                            #line default              #line hidden              return;              case 2:              this.textBox1 = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.button1 = ((System.Windows.Controls.Button)(target));                            #line 32 "..\..\..\Views\Test.xaml"              this.button1.Click += new System.Windows.RoutedEventHandler(this.button1_Click);                            #line default              #line hidden                            #line 33 "..\..\..\Views\Test.xaml"              this.button1.PreviewMouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.DragSource_PreviewMouseLeftButtonDown);                            #line default              #line hidden                            #line 33 "..\..\..\Views\Test.xaml"              this.button1.PreviewMouseMove += new System.Windows.Input.MouseEventHandler(this.DragSource_PreviewMouseMove);                            #line default              #line hidden              return;              }
Magic Number,dnGREP.WPF,Test,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\Test.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.cbHistory = ((System.Windows.Controls.ComboBox)(target));                            #line 15 "..\..\..\Views\Test.xaml"              this.cbHistory.MouseDown += new System.Windows.Input.MouseButtonEventHandler(this.cbHistory_MouseDown);                            #line default              #line hidden                            #line 15 "..\..\..\Views\Test.xaml"              this.cbHistory.PreviewMouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.cbHistory_MouseDown);                            #line default              #line hidden              return;              case 2:              this.textBox1 = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.button1 = ((System.Windows.Controls.Button)(target));                            #line 32 "..\..\..\Views\Test.xaml"              this.button1.Click += new System.Windows.RoutedEventHandler(this.button1_Click);                            #line default              #line hidden                            #line 33 "..\..\..\Views\Test.xaml"              this.button1.PreviewMouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.DragSource_PreviewMouseLeftButtonDown);                            #line default              #line hidden                            #line 33 "..\..\..\Views\Test.xaml"              this.button1.PreviewMouseMove += new System.Windows.Input.MouseEventHandler(this.DragSource_PreviewMouseMove);                            #line default              #line hidden              return;              }
Magic Number,dnGREP.WPF,TestPattern,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\TestPatternView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 8 "..\..\..\Views\TestPatternView.xaml"              ((dnGREP.WPF.TestPattern)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 8 "..\..\..\Views\TestPatternView.xaml"              ((dnGREP.WPF.TestPattern)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.Window_Closing);                            #line default              #line hidden                            #line 8 "..\..\..\Views\TestPatternView.xaml"              ((dnGREP.WPF.TestPattern)(target)).KeyDown += new System.Windows.Input.KeyEventHandler(this.formKeyDown);                            #line default              #line hidden              return;              case 2:              this.rbRegex = ((System.Windows.Controls.RadioButton)(target));              return;              case 3:              this.rbXPath = ((System.Windows.Controls.RadioButton)(target));              return;              case 4:              this.rbText = ((System.Windows.Controls.RadioButton)(target));              return;              case 5:              this.rbSoundex = ((System.Windows.Controls.RadioButton)(target));              return;              case 6:              this.tbSearchFor = ((System.Windows.Controls.TextBox)(target));              return;              case 7:              this.tbReplaceWith = ((System.Windows.Controls.TextBox)(target));              return;              case 8:              this.cbCaseSensitive = ((System.Windows.Controls.CheckBox)(target));              return;              case 9:              this.cbWholeWord = ((System.Windows.Controls.CheckBox)(target));              return;              case 10:              this.cbMultiline = ((System.Windows.Controls.CheckBox)(target));              return;              case 11:              this.cbSingleline = ((System.Windows.Controls.CheckBox)(target));              return;              case 12:              this.tbTestInput = ((System.Windows.Controls.TextBox)(target));              return;              case 13:                            #line 120 "..\..\..\Views\TestPatternView.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyFile_Click);                            #line default              #line hidden              return;              case 14:              this.btnSearch = ((System.Windows.Controls.Button)(target));              return;              case 15:              this.btnReplace = ((System.Windows.Controls.Button)(target));              return;              case 16:              this.btnClose = ((System.Windows.Controls.Button)(target));                            #line 128 "..\..\..\Views\TestPatternView.xaml"              this.btnClose.Click += new System.Windows.RoutedEventHandler(this.btnClose_Click);                            #line default              #line hidden              return;              case 17:              this.lblStatus = ((System.Windows.Controls.TextBlock)(target));              return;              }
Magic Number,dnGREP.WPF,TestPattern,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\TestPatternView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 8 "..\..\..\Views\TestPatternView.xaml"              ((dnGREP.WPF.TestPattern)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 8 "..\..\..\Views\TestPatternView.xaml"              ((dnGREP.WPF.TestPattern)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.Window_Closing);                            #line default              #line hidden                            #line 8 "..\..\..\Views\TestPatternView.xaml"              ((dnGREP.WPF.TestPattern)(target)).KeyDown += new System.Windows.Input.KeyEventHandler(this.formKeyDown);                            #line default              #line hidden              return;              case 2:              this.rbRegex = ((System.Windows.Controls.RadioButton)(target));              return;              case 3:              this.rbXPath = ((System.Windows.Controls.RadioButton)(target));              return;              case 4:              this.rbText = ((System.Windows.Controls.RadioButton)(target));              return;              case 5:              this.rbSoundex = ((System.Windows.Controls.RadioButton)(target));              return;              case 6:              this.tbSearchFor = ((System.Windows.Controls.TextBox)(target));              return;              case 7:              this.tbReplaceWith = ((System.Windows.Controls.TextBox)(target));              return;              case 8:              this.cbCaseSensitive = ((System.Windows.Controls.CheckBox)(target));              return;              case 9:              this.cbWholeWord = ((System.Windows.Controls.CheckBox)(target));              return;              case 10:              this.cbMultiline = ((System.Windows.Controls.CheckBox)(target));              return;              case 11:              this.cbSingleline = ((System.Windows.Controls.CheckBox)(target));              return;              case 12:              this.tbTestInput = ((System.Windows.Controls.TextBox)(target));              return;              case 13:                            #line 120 "..\..\..\Views\TestPatternView.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyFile_Click);                            #line default              #line hidden              return;              case 14:              this.btnSearch = ((System.Windows.Controls.Button)(target));              return;              case 15:              this.btnReplace = ((System.Windows.Controls.Button)(target));              return;              case 16:              this.btnClose = ((System.Windows.Controls.Button)(target));                            #line 128 "..\..\..\Views\TestPatternView.xaml"              this.btnClose.Click += new System.Windows.RoutedEventHandler(this.btnClose_Click);                            #line default              #line hidden              return;              case 17:              this.lblStatus = ((System.Windows.Controls.TextBlock)(target));              return;              }
Magic Number,dnGREP.WPF,TestPattern,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\TestPatternView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 8 "..\..\..\Views\TestPatternView.xaml"              ((dnGREP.WPF.TestPattern)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 8 "..\..\..\Views\TestPatternView.xaml"              ((dnGREP.WPF.TestPattern)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.Window_Closing);                            #line default              #line hidden                            #line 8 "..\..\..\Views\TestPatternView.xaml"              ((dnGREP.WPF.TestPattern)(target)).KeyDown += new System.Windows.Input.KeyEventHandler(this.formKeyDown);                            #line default              #line hidden              return;              case 2:              this.rbRegex = ((System.Windows.Controls.RadioButton)(target));              return;              case 3:              this.rbXPath = ((System.Windows.Controls.RadioButton)(target));              return;              case 4:              this.rbText = ((System.Windows.Controls.RadioButton)(target));              return;              case 5:              this.rbSoundex = ((System.Windows.Controls.RadioButton)(target));              return;              case 6:              this.tbSearchFor = ((System.Windows.Controls.TextBox)(target));              return;              case 7:              this.tbReplaceWith = ((System.Windows.Controls.TextBox)(target));              return;              case 8:              this.cbCaseSensitive = ((System.Windows.Controls.CheckBox)(target));              return;              case 9:              this.cbWholeWord = ((System.Windows.Controls.CheckBox)(target));              return;              case 10:              this.cbMultiline = ((System.Windows.Controls.CheckBox)(target));              return;              case 11:              this.cbSingleline = ((System.Windows.Controls.CheckBox)(target));              return;              case 12:              this.tbTestInput = ((System.Windows.Controls.TextBox)(target));              return;              case 13:                            #line 120 "..\..\..\Views\TestPatternView.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyFile_Click);                            #line default              #line hidden              return;              case 14:              this.btnSearch = ((System.Windows.Controls.Button)(target));              return;              case 15:              this.btnReplace = ((System.Windows.Controls.Button)(target));              return;              case 16:              this.btnClose = ((System.Windows.Controls.Button)(target));                            #line 128 "..\..\..\Views\TestPatternView.xaml"              this.btnClose.Click += new System.Windows.RoutedEventHandler(this.btnClose_Click);                            #line default              #line hidden              return;              case 17:              this.lblStatus = ((System.Windows.Controls.TextBlock)(target));              return;              }
Magic Number,dnGREP.WPF,TestPattern,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\TestPatternView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 8 "..\..\..\Views\TestPatternView.xaml"              ((dnGREP.WPF.TestPattern)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 8 "..\..\..\Views\TestPatternView.xaml"              ((dnGREP.WPF.TestPattern)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.Window_Closing);                            #line default              #line hidden                            #line 8 "..\..\..\Views\TestPatternView.xaml"              ((dnGREP.WPF.TestPattern)(target)).KeyDown += new System.Windows.Input.KeyEventHandler(this.formKeyDown);                            #line default              #line hidden              return;              case 2:              this.rbRegex = ((System.Windows.Controls.RadioButton)(target));              return;              case 3:              this.rbXPath = ((System.Windows.Controls.RadioButton)(target));              return;              case 4:              this.rbText = ((System.Windows.Controls.RadioButton)(target));              return;              case 5:              this.rbSoundex = ((System.Windows.Controls.RadioButton)(target));              return;              case 6:              this.tbSearchFor = ((System.Windows.Controls.TextBox)(target));              return;              case 7:              this.tbReplaceWith = ((System.Windows.Controls.TextBox)(target));              return;              case 8:              this.cbCaseSensitive = ((System.Windows.Controls.CheckBox)(target));              return;              case 9:              this.cbWholeWord = ((System.Windows.Controls.CheckBox)(target));              return;              case 10:              this.cbMultiline = ((System.Windows.Controls.CheckBox)(target));              return;              case 11:              this.cbSingleline = ((System.Windows.Controls.CheckBox)(target));              return;              case 12:              this.tbTestInput = ((System.Windows.Controls.TextBox)(target));              return;              case 13:                            #line 120 "..\..\..\Views\TestPatternView.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyFile_Click);                            #line default              #line hidden              return;              case 14:              this.btnSearch = ((System.Windows.Controls.Button)(target));              return;              case 15:              this.btnReplace = ((System.Windows.Controls.Button)(target));              return;              case 16:              this.btnClose = ((System.Windows.Controls.Button)(target));                            #line 128 "..\..\..\Views\TestPatternView.xaml"              this.btnClose.Click += new System.Windows.RoutedEventHandler(this.btnClose_Click);                            #line default              #line hidden              return;              case 17:              this.lblStatus = ((System.Windows.Controls.TextBlock)(target));              return;              }
Magic Number,dnGREP.WPF,TestPattern,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\TestPatternView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 8 "..\..\..\Views\TestPatternView.xaml"              ((dnGREP.WPF.TestPattern)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 8 "..\..\..\Views\TestPatternView.xaml"              ((dnGREP.WPF.TestPattern)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.Window_Closing);                            #line default              #line hidden                            #line 8 "..\..\..\Views\TestPatternView.xaml"              ((dnGREP.WPF.TestPattern)(target)).KeyDown += new System.Windows.Input.KeyEventHandler(this.formKeyDown);                            #line default              #line hidden              return;              case 2:              this.rbRegex = ((System.Windows.Controls.RadioButton)(target));              return;              case 3:              this.rbXPath = ((System.Windows.Controls.RadioButton)(target));              return;              case 4:              this.rbText = ((System.Windows.Controls.RadioButton)(target));              return;              case 5:              this.rbSoundex = ((System.Windows.Controls.RadioButton)(target));              return;              case 6:              this.tbSearchFor = ((System.Windows.Controls.TextBox)(target));              return;              case 7:              this.tbReplaceWith = ((System.Windows.Controls.TextBox)(target));              return;              case 8:              this.cbCaseSensitive = ((System.Windows.Controls.CheckBox)(target));              return;              case 9:              this.cbWholeWord = ((System.Windows.Controls.CheckBox)(target));              return;              case 10:              this.cbMultiline = ((System.Windows.Controls.CheckBox)(target));              return;              case 11:              this.cbSingleline = ((System.Windows.Controls.CheckBox)(target));              return;              case 12:              this.tbTestInput = ((System.Windows.Controls.TextBox)(target));              return;              case 13:                            #line 120 "..\..\..\Views\TestPatternView.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyFile_Click);                            #line default              #line hidden              return;              case 14:              this.btnSearch = ((System.Windows.Controls.Button)(target));              return;              case 15:              this.btnReplace = ((System.Windows.Controls.Button)(target));              return;              case 16:              this.btnClose = ((System.Windows.Controls.Button)(target));                            #line 128 "..\..\..\Views\TestPatternView.xaml"              this.btnClose.Click += new System.Windows.RoutedEventHandler(this.btnClose_Click);                            #line default              #line hidden              return;              case 17:              this.lblStatus = ((System.Windows.Controls.TextBlock)(target));              return;              }
Magic Number,dnGREP.WPF,TestPattern,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\TestPatternView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 8 "..\..\..\Views\TestPatternView.xaml"              ((dnGREP.WPF.TestPattern)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 8 "..\..\..\Views\TestPatternView.xaml"              ((dnGREP.WPF.TestPattern)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.Window_Closing);                            #line default              #line hidden                            #line 8 "..\..\..\Views\TestPatternView.xaml"              ((dnGREP.WPF.TestPattern)(target)).KeyDown += new System.Windows.Input.KeyEventHandler(this.formKeyDown);                            #line default              #line hidden              return;              case 2:              this.rbRegex = ((System.Windows.Controls.RadioButton)(target));              return;              case 3:              this.rbXPath = ((System.Windows.Controls.RadioButton)(target));              return;              case 4:              this.rbText = ((System.Windows.Controls.RadioButton)(target));              return;              case 5:              this.rbSoundex = ((System.Windows.Controls.RadioButton)(target));              return;              case 6:              this.tbSearchFor = ((System.Windows.Controls.TextBox)(target));              return;              case 7:              this.tbReplaceWith = ((System.Windows.Controls.TextBox)(target));              return;              case 8:              this.cbCaseSensitive = ((System.Windows.Controls.CheckBox)(target));              return;              case 9:              this.cbWholeWord = ((System.Windows.Controls.CheckBox)(target));              return;              case 10:              this.cbMultiline = ((System.Windows.Controls.CheckBox)(target));              return;              case 11:              this.cbSingleline = ((System.Windows.Controls.CheckBox)(target));              return;              case 12:              this.tbTestInput = ((System.Windows.Controls.TextBox)(target));              return;              case 13:                            #line 120 "..\..\..\Views\TestPatternView.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyFile_Click);                            #line default              #line hidden              return;              case 14:              this.btnSearch = ((System.Windows.Controls.Button)(target));              return;              case 15:              this.btnReplace = ((System.Windows.Controls.Button)(target));              return;              case 16:              this.btnClose = ((System.Windows.Controls.Button)(target));                            #line 128 "..\..\..\Views\TestPatternView.xaml"              this.btnClose.Click += new System.Windows.RoutedEventHandler(this.btnClose_Click);                            #line default              #line hidden              return;              case 17:              this.lblStatus = ((System.Windows.Controls.TextBlock)(target));              return;              }
Magic Number,dnGREP.WPF,TestPattern,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\TestPatternView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 8 "..\..\..\Views\TestPatternView.xaml"              ((dnGREP.WPF.TestPattern)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 8 "..\..\..\Views\TestPatternView.xaml"              ((dnGREP.WPF.TestPattern)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.Window_Closing);                            #line default              #line hidden                            #line 8 "..\..\..\Views\TestPatternView.xaml"              ((dnGREP.WPF.TestPattern)(target)).KeyDown += new System.Windows.Input.KeyEventHandler(this.formKeyDown);                            #line default              #line hidden              return;              case 2:              this.rbRegex = ((System.Windows.Controls.RadioButton)(target));              return;              case 3:              this.rbXPath = ((System.Windows.Controls.RadioButton)(target));              return;              case 4:              this.rbText = ((System.Windows.Controls.RadioButton)(target));              return;              case 5:              this.rbSoundex = ((System.Windows.Controls.RadioButton)(target));              return;              case 6:              this.tbSearchFor = ((System.Windows.Controls.TextBox)(target));              return;              case 7:              this.tbReplaceWith = ((System.Windows.Controls.TextBox)(target));              return;              case 8:              this.cbCaseSensitive = ((System.Windows.Controls.CheckBox)(target));              return;              case 9:              this.cbWholeWord = ((System.Windows.Controls.CheckBox)(target));              return;              case 10:              this.cbMultiline = ((System.Windows.Controls.CheckBox)(target));              return;              case 11:              this.cbSingleline = ((System.Windows.Controls.CheckBox)(target));              return;              case 12:              this.tbTestInput = ((System.Windows.Controls.TextBox)(target));              return;              case 13:                            #line 120 "..\..\..\Views\TestPatternView.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyFile_Click);                            #line default              #line hidden              return;              case 14:              this.btnSearch = ((System.Windows.Controls.Button)(target));              return;              case 15:              this.btnReplace = ((System.Windows.Controls.Button)(target));              return;              case 16:              this.btnClose = ((System.Windows.Controls.Button)(target));                            #line 128 "..\..\..\Views\TestPatternView.xaml"              this.btnClose.Click += new System.Windows.RoutedEventHandler(this.btnClose_Click);                            #line default              #line hidden              return;              case 17:              this.lblStatus = ((System.Windows.Controls.TextBlock)(target));              return;              }
Magic Number,dnGREP.WPF,TestPattern,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\TestPatternView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 8 "..\..\..\Views\TestPatternView.xaml"              ((dnGREP.WPF.TestPattern)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 8 "..\..\..\Views\TestPatternView.xaml"              ((dnGREP.WPF.TestPattern)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.Window_Closing);                            #line default              #line hidden                            #line 8 "..\..\..\Views\TestPatternView.xaml"              ((dnGREP.WPF.TestPattern)(target)).KeyDown += new System.Windows.Input.KeyEventHandler(this.formKeyDown);                            #line default              #line hidden              return;              case 2:              this.rbRegex = ((System.Windows.Controls.RadioButton)(target));              return;              case 3:              this.rbXPath = ((System.Windows.Controls.RadioButton)(target));              return;              case 4:              this.rbText = ((System.Windows.Controls.RadioButton)(target));              return;              case 5:              this.rbSoundex = ((System.Windows.Controls.RadioButton)(target));              return;              case 6:              this.tbSearchFor = ((System.Windows.Controls.TextBox)(target));              return;              case 7:              this.tbReplaceWith = ((System.Windows.Controls.TextBox)(target));              return;              case 8:              this.cbCaseSensitive = ((System.Windows.Controls.CheckBox)(target));              return;              case 9:              this.cbWholeWord = ((System.Windows.Controls.CheckBox)(target));              return;              case 10:              this.cbMultiline = ((System.Windows.Controls.CheckBox)(target));              return;              case 11:              this.cbSingleline = ((System.Windows.Controls.CheckBox)(target));              return;              case 12:              this.tbTestInput = ((System.Windows.Controls.TextBox)(target));              return;              case 13:                            #line 120 "..\..\..\Views\TestPatternView.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyFile_Click);                            #line default              #line hidden              return;              case 14:              this.btnSearch = ((System.Windows.Controls.Button)(target));              return;              case 15:              this.btnReplace = ((System.Windows.Controls.Button)(target));              return;              case 16:              this.btnClose = ((System.Windows.Controls.Button)(target));                            #line 128 "..\..\..\Views\TestPatternView.xaml"              this.btnClose.Click += new System.Windows.RoutedEventHandler(this.btnClose_Click);                            #line default              #line hidden              return;              case 17:              this.lblStatus = ((System.Windows.Controls.TextBlock)(target));              return;              }
Magic Number,dnGREP.WPF,TestPattern,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\TestPatternView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 8 "..\..\..\Views\TestPatternView.xaml"              ((dnGREP.WPF.TestPattern)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 8 "..\..\..\Views\TestPatternView.xaml"              ((dnGREP.WPF.TestPattern)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.Window_Closing);                            #line default              #line hidden                            #line 8 "..\..\..\Views\TestPatternView.xaml"              ((dnGREP.WPF.TestPattern)(target)).KeyDown += new System.Windows.Input.KeyEventHandler(this.formKeyDown);                            #line default              #line hidden              return;              case 2:              this.rbRegex = ((System.Windows.Controls.RadioButton)(target));              return;              case 3:              this.rbXPath = ((System.Windows.Controls.RadioButton)(target));              return;              case 4:              this.rbText = ((System.Windows.Controls.RadioButton)(target));              return;              case 5:              this.rbSoundex = ((System.Windows.Controls.RadioButton)(target));              return;              case 6:              this.tbSearchFor = ((System.Windows.Controls.TextBox)(target));              return;              case 7:              this.tbReplaceWith = ((System.Windows.Controls.TextBox)(target));              return;              case 8:              this.cbCaseSensitive = ((System.Windows.Controls.CheckBox)(target));              return;              case 9:              this.cbWholeWord = ((System.Windows.Controls.CheckBox)(target));              return;              case 10:              this.cbMultiline = ((System.Windows.Controls.CheckBox)(target));              return;              case 11:              this.cbSingleline = ((System.Windows.Controls.CheckBox)(target));              return;              case 12:              this.tbTestInput = ((System.Windows.Controls.TextBox)(target));              return;              case 13:                            #line 120 "..\..\..\Views\TestPatternView.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyFile_Click);                            #line default              #line hidden              return;              case 14:              this.btnSearch = ((System.Windows.Controls.Button)(target));              return;              case 15:              this.btnReplace = ((System.Windows.Controls.Button)(target));              return;              case 16:              this.btnClose = ((System.Windows.Controls.Button)(target));                            #line 128 "..\..\..\Views\TestPatternView.xaml"              this.btnClose.Click += new System.Windows.RoutedEventHandler(this.btnClose_Click);                            #line default              #line hidden              return;              case 17:              this.lblStatus = ((System.Windows.Controls.TextBlock)(target));              return;              }
Magic Number,dnGREP.WPF,TestPattern,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\TestPatternView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 8 "..\..\..\Views\TestPatternView.xaml"              ((dnGREP.WPF.TestPattern)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 8 "..\..\..\Views\TestPatternView.xaml"              ((dnGREP.WPF.TestPattern)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.Window_Closing);                            #line default              #line hidden                            #line 8 "..\..\..\Views\TestPatternView.xaml"              ((dnGREP.WPF.TestPattern)(target)).KeyDown += new System.Windows.Input.KeyEventHandler(this.formKeyDown);                            #line default              #line hidden              return;              case 2:              this.rbRegex = ((System.Windows.Controls.RadioButton)(target));              return;              case 3:              this.rbXPath = ((System.Windows.Controls.RadioButton)(target));              return;              case 4:              this.rbText = ((System.Windows.Controls.RadioButton)(target));              return;              case 5:              this.rbSoundex = ((System.Windows.Controls.RadioButton)(target));              return;              case 6:              this.tbSearchFor = ((System.Windows.Controls.TextBox)(target));              return;              case 7:              this.tbReplaceWith = ((System.Windows.Controls.TextBox)(target));              return;              case 8:              this.cbCaseSensitive = ((System.Windows.Controls.CheckBox)(target));              return;              case 9:              this.cbWholeWord = ((System.Windows.Controls.CheckBox)(target));              return;              case 10:              this.cbMultiline = ((System.Windows.Controls.CheckBox)(target));              return;              case 11:              this.cbSingleline = ((System.Windows.Controls.CheckBox)(target));              return;              case 12:              this.tbTestInput = ((System.Windows.Controls.TextBox)(target));              return;              case 13:                            #line 120 "..\..\..\Views\TestPatternView.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyFile_Click);                            #line default              #line hidden              return;              case 14:              this.btnSearch = ((System.Windows.Controls.Button)(target));              return;              case 15:              this.btnReplace = ((System.Windows.Controls.Button)(target));              return;              case 16:              this.btnClose = ((System.Windows.Controls.Button)(target));                            #line 128 "..\..\..\Views\TestPatternView.xaml"              this.btnClose.Click += new System.Windows.RoutedEventHandler(this.btnClose_Click);                            #line default              #line hidden              return;              case 17:              this.lblStatus = ((System.Windows.Controls.TextBlock)(target));              return;              }
Magic Number,dnGREP.WPF,TestPattern,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\TestPatternView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 8 "..\..\..\Views\TestPatternView.xaml"              ((dnGREP.WPF.TestPattern)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 8 "..\..\..\Views\TestPatternView.xaml"              ((dnGREP.WPF.TestPattern)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.Window_Closing);                            #line default              #line hidden                            #line 8 "..\..\..\Views\TestPatternView.xaml"              ((dnGREP.WPF.TestPattern)(target)).KeyDown += new System.Windows.Input.KeyEventHandler(this.formKeyDown);                            #line default              #line hidden              return;              case 2:              this.rbRegex = ((System.Windows.Controls.RadioButton)(target));              return;              case 3:              this.rbXPath = ((System.Windows.Controls.RadioButton)(target));              return;              case 4:              this.rbText = ((System.Windows.Controls.RadioButton)(target));              return;              case 5:              this.rbSoundex = ((System.Windows.Controls.RadioButton)(target));              return;              case 6:              this.tbSearchFor = ((System.Windows.Controls.TextBox)(target));              return;              case 7:              this.tbReplaceWith = ((System.Windows.Controls.TextBox)(target));              return;              case 8:              this.cbCaseSensitive = ((System.Windows.Controls.CheckBox)(target));              return;              case 9:              this.cbWholeWord = ((System.Windows.Controls.CheckBox)(target));              return;              case 10:              this.cbMultiline = ((System.Windows.Controls.CheckBox)(target));              return;              case 11:              this.cbSingleline = ((System.Windows.Controls.CheckBox)(target));              return;              case 12:              this.tbTestInput = ((System.Windows.Controls.TextBox)(target));              return;              case 13:                            #line 120 "..\..\..\Views\TestPatternView.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyFile_Click);                            #line default              #line hidden              return;              case 14:              this.btnSearch = ((System.Windows.Controls.Button)(target));              return;              case 15:              this.btnReplace = ((System.Windows.Controls.Button)(target));              return;              case 16:              this.btnClose = ((System.Windows.Controls.Button)(target));                            #line 128 "..\..\..\Views\TestPatternView.xaml"              this.btnClose.Click += new System.Windows.RoutedEventHandler(this.btnClose_Click);                            #line default              #line hidden              return;              case 17:              this.lblStatus = ((System.Windows.Controls.TextBlock)(target));              return;              }
Magic Number,dnGREP.WPF,TestPattern,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\TestPatternView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 8 "..\..\..\Views\TestPatternView.xaml"              ((dnGREP.WPF.TestPattern)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 8 "..\..\..\Views\TestPatternView.xaml"              ((dnGREP.WPF.TestPattern)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.Window_Closing);                            #line default              #line hidden                            #line 8 "..\..\..\Views\TestPatternView.xaml"              ((dnGREP.WPF.TestPattern)(target)).KeyDown += new System.Windows.Input.KeyEventHandler(this.formKeyDown);                            #line default              #line hidden              return;              case 2:              this.rbRegex = ((System.Windows.Controls.RadioButton)(target));              return;              case 3:              this.rbXPath = ((System.Windows.Controls.RadioButton)(target));              return;              case 4:              this.rbText = ((System.Windows.Controls.RadioButton)(target));              return;              case 5:              this.rbSoundex = ((System.Windows.Controls.RadioButton)(target));              return;              case 6:              this.tbSearchFor = ((System.Windows.Controls.TextBox)(target));              return;              case 7:              this.tbReplaceWith = ((System.Windows.Controls.TextBox)(target));              return;              case 8:              this.cbCaseSensitive = ((System.Windows.Controls.CheckBox)(target));              return;              case 9:              this.cbWholeWord = ((System.Windows.Controls.CheckBox)(target));              return;              case 10:              this.cbMultiline = ((System.Windows.Controls.CheckBox)(target));              return;              case 11:              this.cbSingleline = ((System.Windows.Controls.CheckBox)(target));              return;              case 12:              this.tbTestInput = ((System.Windows.Controls.TextBox)(target));              return;              case 13:                            #line 120 "..\..\..\Views\TestPatternView.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyFile_Click);                            #line default              #line hidden              return;              case 14:              this.btnSearch = ((System.Windows.Controls.Button)(target));              return;              case 15:              this.btnReplace = ((System.Windows.Controls.Button)(target));              return;              case 16:              this.btnClose = ((System.Windows.Controls.Button)(target));                            #line 128 "..\..\..\Views\TestPatternView.xaml"              this.btnClose.Click += new System.Windows.RoutedEventHandler(this.btnClose_Click);                            #line default              #line hidden              return;              case 17:              this.lblStatus = ((System.Windows.Controls.TextBlock)(target));              return;              }
Magic Number,dnGREP.WPF,TestPattern,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\TestPatternView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 8 "..\..\..\Views\TestPatternView.xaml"              ((dnGREP.WPF.TestPattern)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 8 "..\..\..\Views\TestPatternView.xaml"              ((dnGREP.WPF.TestPattern)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.Window_Closing);                            #line default              #line hidden                            #line 8 "..\..\..\Views\TestPatternView.xaml"              ((dnGREP.WPF.TestPattern)(target)).KeyDown += new System.Windows.Input.KeyEventHandler(this.formKeyDown);                            #line default              #line hidden              return;              case 2:              this.rbRegex = ((System.Windows.Controls.RadioButton)(target));              return;              case 3:              this.rbXPath = ((System.Windows.Controls.RadioButton)(target));              return;              case 4:              this.rbText = ((System.Windows.Controls.RadioButton)(target));              return;              case 5:              this.rbSoundex = ((System.Windows.Controls.RadioButton)(target));              return;              case 6:              this.tbSearchFor = ((System.Windows.Controls.TextBox)(target));              return;              case 7:              this.tbReplaceWith = ((System.Windows.Controls.TextBox)(target));              return;              case 8:              this.cbCaseSensitive = ((System.Windows.Controls.CheckBox)(target));              return;              case 9:              this.cbWholeWord = ((System.Windows.Controls.CheckBox)(target));              return;              case 10:              this.cbMultiline = ((System.Windows.Controls.CheckBox)(target));              return;              case 11:              this.cbSingleline = ((System.Windows.Controls.CheckBox)(target));              return;              case 12:              this.tbTestInput = ((System.Windows.Controls.TextBox)(target));              return;              case 13:                            #line 120 "..\..\..\Views\TestPatternView.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyFile_Click);                            #line default              #line hidden              return;              case 14:              this.btnSearch = ((System.Windows.Controls.Button)(target));              return;              case 15:              this.btnReplace = ((System.Windows.Controls.Button)(target));              return;              case 16:              this.btnClose = ((System.Windows.Controls.Button)(target));                            #line 128 "..\..\..\Views\TestPatternView.xaml"              this.btnClose.Click += new System.Windows.RoutedEventHandler(this.btnClose_Click);                            #line default              #line hidden              return;              case 17:              this.lblStatus = ((System.Windows.Controls.TextBlock)(target));              return;              }
Magic Number,dnGREP.WPF,TestPattern,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\TestPatternView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 8 "..\..\..\Views\TestPatternView.xaml"              ((dnGREP.WPF.TestPattern)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 8 "..\..\..\Views\TestPatternView.xaml"              ((dnGREP.WPF.TestPattern)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.Window_Closing);                            #line default              #line hidden                            #line 8 "..\..\..\Views\TestPatternView.xaml"              ((dnGREP.WPF.TestPattern)(target)).KeyDown += new System.Windows.Input.KeyEventHandler(this.formKeyDown);                            #line default              #line hidden              return;              case 2:              this.rbRegex = ((System.Windows.Controls.RadioButton)(target));              return;              case 3:              this.rbXPath = ((System.Windows.Controls.RadioButton)(target));              return;              case 4:              this.rbText = ((System.Windows.Controls.RadioButton)(target));              return;              case 5:              this.rbSoundex = ((System.Windows.Controls.RadioButton)(target));              return;              case 6:              this.tbSearchFor = ((System.Windows.Controls.TextBox)(target));              return;              case 7:              this.tbReplaceWith = ((System.Windows.Controls.TextBox)(target));              return;              case 8:              this.cbCaseSensitive = ((System.Windows.Controls.CheckBox)(target));              return;              case 9:              this.cbWholeWord = ((System.Windows.Controls.CheckBox)(target));              return;              case 10:              this.cbMultiline = ((System.Windows.Controls.CheckBox)(target));              return;              case 11:              this.cbSingleline = ((System.Windows.Controls.CheckBox)(target));              return;              case 12:              this.tbTestInput = ((System.Windows.Controls.TextBox)(target));              return;              case 13:                            #line 120 "..\..\..\Views\TestPatternView.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyFile_Click);                            #line default              #line hidden              return;              case 14:              this.btnSearch = ((System.Windows.Controls.Button)(target));              return;              case 15:              this.btnReplace = ((System.Windows.Controls.Button)(target));              return;              case 16:              this.btnClose = ((System.Windows.Controls.Button)(target));                            #line 128 "..\..\..\Views\TestPatternView.xaml"              this.btnClose.Click += new System.Windows.RoutedEventHandler(this.btnClose_Click);                            #line default              #line hidden              return;              case 17:              this.lblStatus = ((System.Windows.Controls.TextBlock)(target));              return;              }
Magic Number,dnGREP.WPF,TestPattern,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\TestPatternView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 8 "..\..\..\Views\TestPatternView.xaml"              ((dnGREP.WPF.TestPattern)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 8 "..\..\..\Views\TestPatternView.xaml"              ((dnGREP.WPF.TestPattern)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.Window_Closing);                            #line default              #line hidden                            #line 8 "..\..\..\Views\TestPatternView.xaml"              ((dnGREP.WPF.TestPattern)(target)).KeyDown += new System.Windows.Input.KeyEventHandler(this.formKeyDown);                            #line default              #line hidden              return;              case 2:              this.rbRegex = ((System.Windows.Controls.RadioButton)(target));              return;              case 3:              this.rbXPath = ((System.Windows.Controls.RadioButton)(target));              return;              case 4:              this.rbText = ((System.Windows.Controls.RadioButton)(target));              return;              case 5:              this.rbSoundex = ((System.Windows.Controls.RadioButton)(target));              return;              case 6:              this.tbSearchFor = ((System.Windows.Controls.TextBox)(target));              return;              case 7:              this.tbReplaceWith = ((System.Windows.Controls.TextBox)(target));              return;              case 8:              this.cbCaseSensitive = ((System.Windows.Controls.CheckBox)(target));              return;              case 9:              this.cbWholeWord = ((System.Windows.Controls.CheckBox)(target));              return;              case 10:              this.cbMultiline = ((System.Windows.Controls.CheckBox)(target));              return;              case 11:              this.cbSingleline = ((System.Windows.Controls.CheckBox)(target));              return;              case 12:              this.tbTestInput = ((System.Windows.Controls.TextBox)(target));              return;              case 13:                            #line 120 "..\..\..\Views\TestPatternView.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyFile_Click);                            #line default              #line hidden              return;              case 14:              this.btnSearch = ((System.Windows.Controls.Button)(target));              return;              case 15:              this.btnReplace = ((System.Windows.Controls.Button)(target));              return;              case 16:              this.btnClose = ((System.Windows.Controls.Button)(target));                            #line 128 "..\..\..\Views\TestPatternView.xaml"              this.btnClose.Click += new System.Windows.RoutedEventHandler(this.btnClose_Click);                            #line default              #line hidden              return;              case 17:              this.lblStatus = ((System.Windows.Controls.TextBlock)(target));              return;              }
Magic Number,dnGREP.WPF,TestPattern,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\TestPatternView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 8 "..\..\..\Views\TestPatternView.xaml"              ((dnGREP.WPF.TestPattern)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 8 "..\..\..\Views\TestPatternView.xaml"              ((dnGREP.WPF.TestPattern)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.Window_Closing);                            #line default              #line hidden                            #line 8 "..\..\..\Views\TestPatternView.xaml"              ((dnGREP.WPF.TestPattern)(target)).KeyDown += new System.Windows.Input.KeyEventHandler(this.formKeyDown);                            #line default              #line hidden              return;              case 2:              this.rbRegex = ((System.Windows.Controls.RadioButton)(target));              return;              case 3:              this.rbXPath = ((System.Windows.Controls.RadioButton)(target));              return;              case 4:              this.rbText = ((System.Windows.Controls.RadioButton)(target));              return;              case 5:              this.rbSoundex = ((System.Windows.Controls.RadioButton)(target));              return;              case 6:              this.tbSearchFor = ((System.Windows.Controls.TextBox)(target));              return;              case 7:              this.tbReplaceWith = ((System.Windows.Controls.TextBox)(target));              return;              case 8:              this.cbCaseSensitive = ((System.Windows.Controls.CheckBox)(target));              return;              case 9:              this.cbWholeWord = ((System.Windows.Controls.CheckBox)(target));              return;              case 10:              this.cbMultiline = ((System.Windows.Controls.CheckBox)(target));              return;              case 11:              this.cbSingleline = ((System.Windows.Controls.CheckBox)(target));              return;              case 12:              this.tbTestInput = ((System.Windows.Controls.TextBox)(target));              return;              case 13:                            #line 120 "..\..\..\Views\TestPatternView.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyFile_Click);                            #line default              #line hidden              return;              case 14:              this.btnSearch = ((System.Windows.Controls.Button)(target));              return;              case 15:              this.btnReplace = ((System.Windows.Controls.Button)(target));              return;              case 16:              this.btnClose = ((System.Windows.Controls.Button)(target));                            #line 128 "..\..\..\Views\TestPatternView.xaml"              this.btnClose.Click += new System.Windows.RoutedEventHandler(this.btnClose_Click);                            #line default              #line hidden              return;              case 17:              this.lblStatus = ((System.Windows.Controls.TextBlock)(target));              return;              }
Magic Number,dnGREP.WPF.MVHelpers,LazyResultsList,C:\repos\dnGrep_dnGrep\dnGREP.WPF\MVHelpers\LazyResultsList.cs,LazyResultsList,The following statement contains a magic number: if ((result.Matches != null && result.Matches.Count > 0) || !result.IsSuccess)              {                  GrepSearchResult.GrepLine emptyLine = new GrepSearchResult.GrepLine(-1' ""' true' null);                  var dummyLine = new FormattedGrepLine(emptyLine' formattedResult' 30' false);                  Add(dummyLine);                  IsLoaded = false;              }
Magic Number,dnGREP.WPF.MVHelpers,LazyResultsList,C:\repos\dnGrep_dnGrep\dnGREP.WPF\MVHelpers\LazyResultsList.cs,Load,The following statement contains a magic number: if (!isAsync)              {                  int currentLine = -1;                  List<GrepSearchResult.GrepLine> linesWithContext = new List<GrepSearchResult.GrepLine>();                  if (GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext))                      linesWithContext = result.GetLinesWithContext(GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesBefore)'                      GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesAfter));                  else                      linesWithContext = result.GetLinesWithContext(0' 0);                    if (this.Count == 1 && this[0].GrepLine.LineNumber == -1)                  {                      this.Clear();                  }                    for (int i = 0; i < linesWithContext.Count; i++)                  {                      GrepSearchResult.GrepLine line = linesWithContext[i];                      bool isSectionBreak = false;                        // Adding separator                      if (this.Count > 0 && GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext) &&                          (currentLine != line.LineNumber && currentLine + 1 != line.LineNumber))                      {                          isSectionBreak = true;                      }                        currentLine = line.LineNumber;                      if (currentLine <= 999 && LineNumberColumnWidth < 30)                          LineNumberColumnWidth = 30;                      else if (currentLine > 999 && LineNumberColumnWidth < 35)                          LineNumberColumnWidth = 35;                      else if (currentLine > 9999 && LineNumberColumnWidth < 47)                          LineNumberColumnWidth = 47;                      else if (currentLine > 99999 && LineNumberColumnWidth < 50)                          LineNumberColumnWidth = 50;                        this.Add(new FormattedGrepLine(line' formattedResult' LineNumberColumnWidth' isSectionBreak));                  }                  IsLoaded = true;                  IsLoading = false;              }              else              {                  int currentLine = -1;                  var asyncTask = Task.Factory.StartNew<List<GrepSearchResult.GrepLine>>(() =>                  {                      List<GrepSearchResult.GrepLine> linesWithContext = new List<GrepSearchResult.GrepLine>();                      if (GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext))                          linesWithContext = result.GetLinesWithContext(GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesBefore)'                          GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesAfter));                      else                          linesWithContext = result.GetLinesWithContext(0' 0);                        return linesWithContext;                  }).ContinueWith(task =>                  {                      if (this.Count == 1 && this[0].GrepLine.LineNumber == -1)                      {                          if (Application.Current != null)                              Application.Current.Dispatcher.Invoke(new Action(() =>                                  this.Clear()                              ));                      }                        List<GrepSearchResult.GrepLine> linesWithContext = task.Result;                      List<FormattedGrepLine> tempList = new List<FormattedGrepLine>();                      for (int i = 0; i < linesWithContext.Count; i++)                      {                          GrepSearchResult.GrepLine line = linesWithContext[i];                          bool isSectionBreak = false;                            // Adding separator                          if (tempList.Count > 0 && GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext) &&                              (currentLine != line.LineNumber && currentLine + 1 != line.LineNumber))                          {                              isSectionBreak = true;                          }                            currentLine = line.LineNumber;                          if (currentLine <= 999 && LineNumberColumnWidth < 30)                              LineNumberColumnWidth = 30;                          else if (currentLine > 999 && LineNumberColumnWidth < 35)                              LineNumberColumnWidth = 35;                          else if (currentLine > 9999 && LineNumberColumnWidth < 47)                              LineNumberColumnWidth = 47;                          else if (currentLine > 99999 && LineNumberColumnWidth < 50)                              LineNumberColumnWidth = 50;                          tempList.Add(new FormattedGrepLine(line' formattedResult' LineNumberColumnWidth' isSectionBreak));                      }                        if (Application.Current != null)                          Application.Current.Dispatcher.Invoke(new Action(() =>                          {                              foreach (var l in tempList) this.Add(l);                          }                      ));                      IsLoaded = true;                      IsLoading = false;                      LoadFinished(this' EventArgs.Empty);                  });              }
Magic Number,dnGREP.WPF.MVHelpers,LazyResultsList,C:\repos\dnGrep_dnGrep\dnGREP.WPF\MVHelpers\LazyResultsList.cs,Load,The following statement contains a magic number: if (!isAsync)              {                  int currentLine = -1;                  List<GrepSearchResult.GrepLine> linesWithContext = new List<GrepSearchResult.GrepLine>();                  if (GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext))                      linesWithContext = result.GetLinesWithContext(GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesBefore)'                      GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesAfter));                  else                      linesWithContext = result.GetLinesWithContext(0' 0);                    if (this.Count == 1 && this[0].GrepLine.LineNumber == -1)                  {                      this.Clear();                  }                    for (int i = 0; i < linesWithContext.Count; i++)                  {                      GrepSearchResult.GrepLine line = linesWithContext[i];                      bool isSectionBreak = false;                        // Adding separator                      if (this.Count > 0 && GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext) &&                          (currentLine != line.LineNumber && currentLine + 1 != line.LineNumber))                      {                          isSectionBreak = true;                      }                        currentLine = line.LineNumber;                      if (currentLine <= 999 && LineNumberColumnWidth < 30)                          LineNumberColumnWidth = 30;                      else if (currentLine > 999 && LineNumberColumnWidth < 35)                          LineNumberColumnWidth = 35;                      else if (currentLine > 9999 && LineNumberColumnWidth < 47)                          LineNumberColumnWidth = 47;                      else if (currentLine > 99999 && LineNumberColumnWidth < 50)                          LineNumberColumnWidth = 50;                        this.Add(new FormattedGrepLine(line' formattedResult' LineNumberColumnWidth' isSectionBreak));                  }                  IsLoaded = true;                  IsLoading = false;              }              else              {                  int currentLine = -1;                  var asyncTask = Task.Factory.StartNew<List<GrepSearchResult.GrepLine>>(() =>                  {                      List<GrepSearchResult.GrepLine> linesWithContext = new List<GrepSearchResult.GrepLine>();                      if (GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext))                          linesWithContext = result.GetLinesWithContext(GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesBefore)'                          GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesAfter));                      else                          linesWithContext = result.GetLinesWithContext(0' 0);                        return linesWithContext;                  }).ContinueWith(task =>                  {                      if (this.Count == 1 && this[0].GrepLine.LineNumber == -1)                      {                          if (Application.Current != null)                              Application.Current.Dispatcher.Invoke(new Action(() =>                                  this.Clear()                              ));                      }                        List<GrepSearchResult.GrepLine> linesWithContext = task.Result;                      List<FormattedGrepLine> tempList = new List<FormattedGrepLine>();                      for (int i = 0; i < linesWithContext.Count; i++)                      {                          GrepSearchResult.GrepLine line = linesWithContext[i];                          bool isSectionBreak = false;                            // Adding separator                          if (tempList.Count > 0 && GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext) &&                              (currentLine != line.LineNumber && currentLine + 1 != line.LineNumber))                          {                              isSectionBreak = true;                          }                            currentLine = line.LineNumber;                          if (currentLine <= 999 && LineNumberColumnWidth < 30)                              LineNumberColumnWidth = 30;                          else if (currentLine > 999 && LineNumberColumnWidth < 35)                              LineNumberColumnWidth = 35;                          else if (currentLine > 9999 && LineNumberColumnWidth < 47)                              LineNumberColumnWidth = 47;                          else if (currentLine > 99999 && LineNumberColumnWidth < 50)                              LineNumberColumnWidth = 50;                          tempList.Add(new FormattedGrepLine(line' formattedResult' LineNumberColumnWidth' isSectionBreak));                      }                        if (Application.Current != null)                          Application.Current.Dispatcher.Invoke(new Action(() =>                          {                              foreach (var l in tempList) this.Add(l);                          }                      ));                      IsLoaded = true;                      IsLoading = false;                      LoadFinished(this' EventArgs.Empty);                  });              }
Magic Number,dnGREP.WPF.MVHelpers,LazyResultsList,C:\repos\dnGrep_dnGrep\dnGREP.WPF\MVHelpers\LazyResultsList.cs,Load,The following statement contains a magic number: if (!isAsync)              {                  int currentLine = -1;                  List<GrepSearchResult.GrepLine> linesWithContext = new List<GrepSearchResult.GrepLine>();                  if (GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext))                      linesWithContext = result.GetLinesWithContext(GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesBefore)'                      GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesAfter));                  else                      linesWithContext = result.GetLinesWithContext(0' 0);                    if (this.Count == 1 && this[0].GrepLine.LineNumber == -1)                  {                      this.Clear();                  }                    for (int i = 0; i < linesWithContext.Count; i++)                  {                      GrepSearchResult.GrepLine line = linesWithContext[i];                      bool isSectionBreak = false;                        // Adding separator                      if (this.Count > 0 && GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext) &&                          (currentLine != line.LineNumber && currentLine + 1 != line.LineNumber))                      {                          isSectionBreak = true;                      }                        currentLine = line.LineNumber;                      if (currentLine <= 999 && LineNumberColumnWidth < 30)                          LineNumberColumnWidth = 30;                      else if (currentLine > 999 && LineNumberColumnWidth < 35)                          LineNumberColumnWidth = 35;                      else if (currentLine > 9999 && LineNumberColumnWidth < 47)                          LineNumberColumnWidth = 47;                      else if (currentLine > 99999 && LineNumberColumnWidth < 50)                          LineNumberColumnWidth = 50;                        this.Add(new FormattedGrepLine(line' formattedResult' LineNumberColumnWidth' isSectionBreak));                  }                  IsLoaded = true;                  IsLoading = false;              }              else              {                  int currentLine = -1;                  var asyncTask = Task.Factory.StartNew<List<GrepSearchResult.GrepLine>>(() =>                  {                      List<GrepSearchResult.GrepLine> linesWithContext = new List<GrepSearchResult.GrepLine>();                      if (GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext))                          linesWithContext = result.GetLinesWithContext(GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesBefore)'                          GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesAfter));                      else                          linesWithContext = result.GetLinesWithContext(0' 0);                        return linesWithContext;                  }).ContinueWith(task =>                  {                      if (this.Count == 1 && this[0].GrepLine.LineNumber == -1)                      {                          if (Application.Current != null)                              Application.Current.Dispatcher.Invoke(new Action(() =>                                  this.Clear()                              ));                      }                        List<GrepSearchResult.GrepLine> linesWithContext = task.Result;                      List<FormattedGrepLine> tempList = new List<FormattedGrepLine>();                      for (int i = 0; i < linesWithContext.Count; i++)                      {                          GrepSearchResult.GrepLine line = linesWithContext[i];                          bool isSectionBreak = false;                            // Adding separator                          if (tempList.Count > 0 && GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext) &&                              (currentLine != line.LineNumber && currentLine + 1 != line.LineNumber))                          {                              isSectionBreak = true;                          }                            currentLine = line.LineNumber;                          if (currentLine <= 999 && LineNumberColumnWidth < 30)                              LineNumberColumnWidth = 30;                          else if (currentLine > 999 && LineNumberColumnWidth < 35)                              LineNumberColumnWidth = 35;                          else if (currentLine > 9999 && LineNumberColumnWidth < 47)                              LineNumberColumnWidth = 47;                          else if (currentLine > 99999 && LineNumberColumnWidth < 50)                              LineNumberColumnWidth = 50;                          tempList.Add(new FormattedGrepLine(line' formattedResult' LineNumberColumnWidth' isSectionBreak));                      }                        if (Application.Current != null)                          Application.Current.Dispatcher.Invoke(new Action(() =>                          {                              foreach (var l in tempList) this.Add(l);                          }                      ));                      IsLoaded = true;                      IsLoading = false;                      LoadFinished(this' EventArgs.Empty);                  });              }
Magic Number,dnGREP.WPF.MVHelpers,LazyResultsList,C:\repos\dnGrep_dnGrep\dnGREP.WPF\MVHelpers\LazyResultsList.cs,Load,The following statement contains a magic number: if (!isAsync)              {                  int currentLine = -1;                  List<GrepSearchResult.GrepLine> linesWithContext = new List<GrepSearchResult.GrepLine>();                  if (GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext))                      linesWithContext = result.GetLinesWithContext(GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesBefore)'                      GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesAfter));                  else                      linesWithContext = result.GetLinesWithContext(0' 0);                    if (this.Count == 1 && this[0].GrepLine.LineNumber == -1)                  {                      this.Clear();                  }                    for (int i = 0; i < linesWithContext.Count; i++)                  {                      GrepSearchResult.GrepLine line = linesWithContext[i];                      bool isSectionBreak = false;                        // Adding separator                      if (this.Count > 0 && GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext) &&                          (currentLine != line.LineNumber && currentLine + 1 != line.LineNumber))                      {                          isSectionBreak = true;                      }                        currentLine = line.LineNumber;                      if (currentLine <= 999 && LineNumberColumnWidth < 30)                          LineNumberColumnWidth = 30;                      else if (currentLine > 999 && LineNumberColumnWidth < 35)                          LineNumberColumnWidth = 35;                      else if (currentLine > 9999 && LineNumberColumnWidth < 47)                          LineNumberColumnWidth = 47;                      else if (currentLine > 99999 && LineNumberColumnWidth < 50)                          LineNumberColumnWidth = 50;                        this.Add(new FormattedGrepLine(line' formattedResult' LineNumberColumnWidth' isSectionBreak));                  }                  IsLoaded = true;                  IsLoading = false;              }              else              {                  int currentLine = -1;                  var asyncTask = Task.Factory.StartNew<List<GrepSearchResult.GrepLine>>(() =>                  {                      List<GrepSearchResult.GrepLine> linesWithContext = new List<GrepSearchResult.GrepLine>();                      if (GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext))                          linesWithContext = result.GetLinesWithContext(GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesBefore)'                          GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesAfter));                      else                          linesWithContext = result.GetLinesWithContext(0' 0);                        return linesWithContext;                  }).ContinueWith(task =>                  {                      if (this.Count == 1 && this[0].GrepLine.LineNumber == -1)                      {                          if (Application.Current != null)                              Application.Current.Dispatcher.Invoke(new Action(() =>                                  this.Clear()                              ));                      }                        List<GrepSearchResult.GrepLine> linesWithContext = task.Result;                      List<FormattedGrepLine> tempList = new List<FormattedGrepLine>();                      for (int i = 0; i < linesWithContext.Count; i++)                      {                          GrepSearchResult.GrepLine line = linesWithContext[i];                          bool isSectionBreak = false;                            // Adding separator                          if (tempList.Count > 0 && GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext) &&                              (currentLine != line.LineNumber && currentLine + 1 != line.LineNumber))                          {                              isSectionBreak = true;                          }                            currentLine = line.LineNumber;                          if (currentLine <= 999 && LineNumberColumnWidth < 30)                              LineNumberColumnWidth = 30;                          else if (currentLine > 999 && LineNumberColumnWidth < 35)                              LineNumberColumnWidth = 35;                          else if (currentLine > 9999 && LineNumberColumnWidth < 47)                              LineNumberColumnWidth = 47;                          else if (currentLine > 99999 && LineNumberColumnWidth < 50)                              LineNumberColumnWidth = 50;                          tempList.Add(new FormattedGrepLine(line' formattedResult' LineNumberColumnWidth' isSectionBreak));                      }                        if (Application.Current != null)                          Application.Current.Dispatcher.Invoke(new Action(() =>                          {                              foreach (var l in tempList) this.Add(l);                          }                      ));                      IsLoaded = true;                      IsLoading = false;                      LoadFinished(this' EventArgs.Empty);                  });              }
Magic Number,dnGREP.WPF.MVHelpers,LazyResultsList,C:\repos\dnGrep_dnGrep\dnGREP.WPF\MVHelpers\LazyResultsList.cs,Load,The following statement contains a magic number: if (!isAsync)              {                  int currentLine = -1;                  List<GrepSearchResult.GrepLine> linesWithContext = new List<GrepSearchResult.GrepLine>();                  if (GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext))                      linesWithContext = result.GetLinesWithContext(GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesBefore)'                      GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesAfter));                  else                      linesWithContext = result.GetLinesWithContext(0' 0);                    if (this.Count == 1 && this[0].GrepLine.LineNumber == -1)                  {                      this.Clear();                  }                    for (int i = 0; i < linesWithContext.Count; i++)                  {                      GrepSearchResult.GrepLine line = linesWithContext[i];                      bool isSectionBreak = false;                        // Adding separator                      if (this.Count > 0 && GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext) &&                          (currentLine != line.LineNumber && currentLine + 1 != line.LineNumber))                      {                          isSectionBreak = true;                      }                        currentLine = line.LineNumber;                      if (currentLine <= 999 && LineNumberColumnWidth < 30)                          LineNumberColumnWidth = 30;                      else if (currentLine > 999 && LineNumberColumnWidth < 35)                          LineNumberColumnWidth = 35;                      else if (currentLine > 9999 && LineNumberColumnWidth < 47)                          LineNumberColumnWidth = 47;                      else if (currentLine > 99999 && LineNumberColumnWidth < 50)                          LineNumberColumnWidth = 50;                        this.Add(new FormattedGrepLine(line' formattedResult' LineNumberColumnWidth' isSectionBreak));                  }                  IsLoaded = true;                  IsLoading = false;              }              else              {                  int currentLine = -1;                  var asyncTask = Task.Factory.StartNew<List<GrepSearchResult.GrepLine>>(() =>                  {                      List<GrepSearchResult.GrepLine> linesWithContext = new List<GrepSearchResult.GrepLine>();                      if (GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext))                          linesWithContext = result.GetLinesWithContext(GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesBefore)'                          GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesAfter));                      else                          linesWithContext = result.GetLinesWithContext(0' 0);                        return linesWithContext;                  }).ContinueWith(task =>                  {                      if (this.Count == 1 && this[0].GrepLine.LineNumber == -1)                      {                          if (Application.Current != null)                              Application.Current.Dispatcher.Invoke(new Action(() =>                                  this.Clear()                              ));                      }                        List<GrepSearchResult.GrepLine> linesWithContext = task.Result;                      List<FormattedGrepLine> tempList = new List<FormattedGrepLine>();                      for (int i = 0; i < linesWithContext.Count; i++)                      {                          GrepSearchResult.GrepLine line = linesWithContext[i];                          bool isSectionBreak = false;                            // Adding separator                          if (tempList.Count > 0 && GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext) &&                              (currentLine != line.LineNumber && currentLine + 1 != line.LineNumber))                          {                              isSectionBreak = true;                          }                            currentLine = line.LineNumber;                          if (currentLine <= 999 && LineNumberColumnWidth < 30)                              LineNumberColumnWidth = 30;                          else if (currentLine > 999 && LineNumberColumnWidth < 35)                              LineNumberColumnWidth = 35;                          else if (currentLine > 9999 && LineNumberColumnWidth < 47)                              LineNumberColumnWidth = 47;                          else if (currentLine > 99999 && LineNumberColumnWidth < 50)                              LineNumberColumnWidth = 50;                          tempList.Add(new FormattedGrepLine(line' formattedResult' LineNumberColumnWidth' isSectionBreak));                      }                        if (Application.Current != null)                          Application.Current.Dispatcher.Invoke(new Action(() =>                          {                              foreach (var l in tempList) this.Add(l);                          }                      ));                      IsLoaded = true;                      IsLoading = false;                      LoadFinished(this' EventArgs.Empty);                  });              }
Magic Number,dnGREP.WPF.MVHelpers,LazyResultsList,C:\repos\dnGrep_dnGrep\dnGREP.WPF\MVHelpers\LazyResultsList.cs,Load,The following statement contains a magic number: if (!isAsync)              {                  int currentLine = -1;                  List<GrepSearchResult.GrepLine> linesWithContext = new List<GrepSearchResult.GrepLine>();                  if (GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext))                      linesWithContext = result.GetLinesWithContext(GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesBefore)'                      GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesAfter));                  else                      linesWithContext = result.GetLinesWithContext(0' 0);                    if (this.Count == 1 && this[0].GrepLine.LineNumber == -1)                  {                      this.Clear();                  }                    for (int i = 0; i < linesWithContext.Count; i++)                  {                      GrepSearchResult.GrepLine line = linesWithContext[i];                      bool isSectionBreak = false;                        // Adding separator                      if (this.Count > 0 && GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext) &&                          (currentLine != line.LineNumber && currentLine + 1 != line.LineNumber))                      {                          isSectionBreak = true;                      }                        currentLine = line.LineNumber;                      if (currentLine <= 999 && LineNumberColumnWidth < 30)                          LineNumberColumnWidth = 30;                      else if (currentLine > 999 && LineNumberColumnWidth < 35)                          LineNumberColumnWidth = 35;                      else if (currentLine > 9999 && LineNumberColumnWidth < 47)                          LineNumberColumnWidth = 47;                      else if (currentLine > 99999 && LineNumberColumnWidth < 50)                          LineNumberColumnWidth = 50;                        this.Add(new FormattedGrepLine(line' formattedResult' LineNumberColumnWidth' isSectionBreak));                  }                  IsLoaded = true;                  IsLoading = false;              }              else              {                  int currentLine = -1;                  var asyncTask = Task.Factory.StartNew<List<GrepSearchResult.GrepLine>>(() =>                  {                      List<GrepSearchResult.GrepLine> linesWithContext = new List<GrepSearchResult.GrepLine>();                      if (GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext))                          linesWithContext = result.GetLinesWithContext(GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesBefore)'                          GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesAfter));                      else                          linesWithContext = result.GetLinesWithContext(0' 0);                        return linesWithContext;                  }).ContinueWith(task =>                  {                      if (this.Count == 1 && this[0].GrepLine.LineNumber == -1)                      {                          if (Application.Current != null)                              Application.Current.Dispatcher.Invoke(new Action(() =>                                  this.Clear()                              ));                      }                        List<GrepSearchResult.GrepLine> linesWithContext = task.Result;                      List<FormattedGrepLine> tempList = new List<FormattedGrepLine>();                      for (int i = 0; i < linesWithContext.Count; i++)                      {                          GrepSearchResult.GrepLine line = linesWithContext[i];                          bool isSectionBreak = false;                            // Adding separator                          if (tempList.Count > 0 && GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext) &&                              (currentLine != line.LineNumber && currentLine + 1 != line.LineNumber))                          {                              isSectionBreak = true;                          }                            currentLine = line.LineNumber;                          if (currentLine <= 999 && LineNumberColumnWidth < 30)                              LineNumberColumnWidth = 30;                          else if (currentLine > 999 && LineNumberColumnWidth < 35)                              LineNumberColumnWidth = 35;                          else if (currentLine > 9999 && LineNumberColumnWidth < 47)                              LineNumberColumnWidth = 47;                          else if (currentLine > 99999 && LineNumberColumnWidth < 50)                              LineNumberColumnWidth = 50;                          tempList.Add(new FormattedGrepLine(line' formattedResult' LineNumberColumnWidth' isSectionBreak));                      }                        if (Application.Current != null)                          Application.Current.Dispatcher.Invoke(new Action(() =>                          {                              foreach (var l in tempList) this.Add(l);                          }                      ));                      IsLoaded = true;                      IsLoading = false;                      LoadFinished(this' EventArgs.Empty);                  });              }
Magic Number,dnGREP.WPF.MVHelpers,LazyResultsList,C:\repos\dnGrep_dnGrep\dnGREP.WPF\MVHelpers\LazyResultsList.cs,Load,The following statement contains a magic number: if (!isAsync)              {                  int currentLine = -1;                  List<GrepSearchResult.GrepLine> linesWithContext = new List<GrepSearchResult.GrepLine>();                  if (GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext))                      linesWithContext = result.GetLinesWithContext(GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesBefore)'                      GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesAfter));                  else                      linesWithContext = result.GetLinesWithContext(0' 0);                    if (this.Count == 1 && this[0].GrepLine.LineNumber == -1)                  {                      this.Clear();                  }                    for (int i = 0; i < linesWithContext.Count; i++)                  {                      GrepSearchResult.GrepLine line = linesWithContext[i];                      bool isSectionBreak = false;                        // Adding separator                      if (this.Count > 0 && GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext) &&                          (currentLine != line.LineNumber && currentLine + 1 != line.LineNumber))                      {                          isSectionBreak = true;                      }                        currentLine = line.LineNumber;                      if (currentLine <= 999 && LineNumberColumnWidth < 30)                          LineNumberColumnWidth = 30;                      else if (currentLine > 999 && LineNumberColumnWidth < 35)                          LineNumberColumnWidth = 35;                      else if (currentLine > 9999 && LineNumberColumnWidth < 47)                          LineNumberColumnWidth = 47;                      else if (currentLine > 99999 && LineNumberColumnWidth < 50)                          LineNumberColumnWidth = 50;                        this.Add(new FormattedGrepLine(line' formattedResult' LineNumberColumnWidth' isSectionBreak));                  }                  IsLoaded = true;                  IsLoading = false;              }              else              {                  int currentLine = -1;                  var asyncTask = Task.Factory.StartNew<List<GrepSearchResult.GrepLine>>(() =>                  {                      List<GrepSearchResult.GrepLine> linesWithContext = new List<GrepSearchResult.GrepLine>();                      if (GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext))                          linesWithContext = result.GetLinesWithContext(GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesBefore)'                          GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesAfter));                      else                          linesWithContext = result.GetLinesWithContext(0' 0);                        return linesWithContext;                  }).ContinueWith(task =>                  {                      if (this.Count == 1 && this[0].GrepLine.LineNumber == -1)                      {                          if (Application.Current != null)                              Application.Current.Dispatcher.Invoke(new Action(() =>                                  this.Clear()                              ));                      }                        List<GrepSearchResult.GrepLine> linesWithContext = task.Result;                      List<FormattedGrepLine> tempList = new List<FormattedGrepLine>();                      for (int i = 0; i < linesWithContext.Count; i++)                      {                          GrepSearchResult.GrepLine line = linesWithContext[i];                          bool isSectionBreak = false;                            // Adding separator                          if (tempList.Count > 0 && GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext) &&                              (currentLine != line.LineNumber && currentLine + 1 != line.LineNumber))                          {                              isSectionBreak = true;                          }                            currentLine = line.LineNumber;                          if (currentLine <= 999 && LineNumberColumnWidth < 30)                              LineNumberColumnWidth = 30;                          else if (currentLine > 999 && LineNumberColumnWidth < 35)                              LineNumberColumnWidth = 35;                          else if (currentLine > 9999 && LineNumberColumnWidth < 47)                              LineNumberColumnWidth = 47;                          else if (currentLine > 99999 && LineNumberColumnWidth < 50)                              LineNumberColumnWidth = 50;                          tempList.Add(new FormattedGrepLine(line' formattedResult' LineNumberColumnWidth' isSectionBreak));                      }                        if (Application.Current != null)                          Application.Current.Dispatcher.Invoke(new Action(() =>                          {                              foreach (var l in tempList) this.Add(l);                          }                      ));                      IsLoaded = true;                      IsLoading = false;                      LoadFinished(this' EventArgs.Empty);                  });              }
Magic Number,dnGREP.WPF.MVHelpers,LazyResultsList,C:\repos\dnGrep_dnGrep\dnGREP.WPF\MVHelpers\LazyResultsList.cs,Load,The following statement contains a magic number: if (!isAsync)              {                  int currentLine = -1;                  List<GrepSearchResult.GrepLine> linesWithContext = new List<GrepSearchResult.GrepLine>();                  if (GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext))                      linesWithContext = result.GetLinesWithContext(GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesBefore)'                      GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesAfter));                  else                      linesWithContext = result.GetLinesWithContext(0' 0);                    if (this.Count == 1 && this[0].GrepLine.LineNumber == -1)                  {                      this.Clear();                  }                    for (int i = 0; i < linesWithContext.Count; i++)                  {                      GrepSearchResult.GrepLine line = linesWithContext[i];                      bool isSectionBreak = false;                        // Adding separator                      if (this.Count > 0 && GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext) &&                          (currentLine != line.LineNumber && currentLine + 1 != line.LineNumber))                      {                          isSectionBreak = true;                      }                        currentLine = line.LineNumber;                      if (currentLine <= 999 && LineNumberColumnWidth < 30)                          LineNumberColumnWidth = 30;                      else if (currentLine > 999 && LineNumberColumnWidth < 35)                          LineNumberColumnWidth = 35;                      else if (currentLine > 9999 && LineNumberColumnWidth < 47)                          LineNumberColumnWidth = 47;                      else if (currentLine > 99999 && LineNumberColumnWidth < 50)                          LineNumberColumnWidth = 50;                        this.Add(new FormattedGrepLine(line' formattedResult' LineNumberColumnWidth' isSectionBreak));                  }                  IsLoaded = true;                  IsLoading = false;              }              else              {                  int currentLine = -1;                  var asyncTask = Task.Factory.StartNew<List<GrepSearchResult.GrepLine>>(() =>                  {                      List<GrepSearchResult.GrepLine> linesWithContext = new List<GrepSearchResult.GrepLine>();                      if (GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext))                          linesWithContext = result.GetLinesWithContext(GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesBefore)'                          GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesAfter));                      else                          linesWithContext = result.GetLinesWithContext(0' 0);                        return linesWithContext;                  }).ContinueWith(task =>                  {                      if (this.Count == 1 && this[0].GrepLine.LineNumber == -1)                      {                          if (Application.Current != null)                              Application.Current.Dispatcher.Invoke(new Action(() =>                                  this.Clear()                              ));                      }                        List<GrepSearchResult.GrepLine> linesWithContext = task.Result;                      List<FormattedGrepLine> tempList = new List<FormattedGrepLine>();                      for (int i = 0; i < linesWithContext.Count; i++)                      {                          GrepSearchResult.GrepLine line = linesWithContext[i];                          bool isSectionBreak = false;                            // Adding separator                          if (tempList.Count > 0 && GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext) &&                              (currentLine != line.LineNumber && currentLine + 1 != line.LineNumber))                          {                              isSectionBreak = true;                          }                            currentLine = line.LineNumber;                          if (currentLine <= 999 && LineNumberColumnWidth < 30)                              LineNumberColumnWidth = 30;                          else if (currentLine > 999 && LineNumberColumnWidth < 35)                              LineNumberColumnWidth = 35;                          else if (currentLine > 9999 && LineNumberColumnWidth < 47)                              LineNumberColumnWidth = 47;                          else if (currentLine > 99999 && LineNumberColumnWidth < 50)                              LineNumberColumnWidth = 50;                          tempList.Add(new FormattedGrepLine(line' formattedResult' LineNumberColumnWidth' isSectionBreak));                      }                        if (Application.Current != null)                          Application.Current.Dispatcher.Invoke(new Action(() =>                          {                              foreach (var l in tempList) this.Add(l);                          }                      ));                      IsLoaded = true;                      IsLoading = false;                      LoadFinished(this' EventArgs.Empty);                  });              }
Magic Number,dnGREP.WPF.MVHelpers,LazyResultsList,C:\repos\dnGrep_dnGrep\dnGREP.WPF\MVHelpers\LazyResultsList.cs,Load,The following statement contains a magic number: if (!isAsync)              {                  int currentLine = -1;                  List<GrepSearchResult.GrepLine> linesWithContext = new List<GrepSearchResult.GrepLine>();                  if (GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext))                      linesWithContext = result.GetLinesWithContext(GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesBefore)'                      GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesAfter));                  else                      linesWithContext = result.GetLinesWithContext(0' 0);                    if (this.Count == 1 && this[0].GrepLine.LineNumber == -1)                  {                      this.Clear();                  }                    for (int i = 0; i < linesWithContext.Count; i++)                  {                      GrepSearchResult.GrepLine line = linesWithContext[i];                      bool isSectionBreak = false;                        // Adding separator                      if (this.Count > 0 && GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext) &&                          (currentLine != line.LineNumber && currentLine + 1 != line.LineNumber))                      {                          isSectionBreak = true;                      }                        currentLine = line.LineNumber;                      if (currentLine <= 999 && LineNumberColumnWidth < 30)                          LineNumberColumnWidth = 30;                      else if (currentLine > 999 && LineNumberColumnWidth < 35)                          LineNumberColumnWidth = 35;                      else if (currentLine > 9999 && LineNumberColumnWidth < 47)                          LineNumberColumnWidth = 47;                      else if (currentLine > 99999 && LineNumberColumnWidth < 50)                          LineNumberColumnWidth = 50;                        this.Add(new FormattedGrepLine(line' formattedResult' LineNumberColumnWidth' isSectionBreak));                  }                  IsLoaded = true;                  IsLoading = false;              }              else              {                  int currentLine = -1;                  var asyncTask = Task.Factory.StartNew<List<GrepSearchResult.GrepLine>>(() =>                  {                      List<GrepSearchResult.GrepLine> linesWithContext = new List<GrepSearchResult.GrepLine>();                      if (GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext))                          linesWithContext = result.GetLinesWithContext(GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesBefore)'                          GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesAfter));                      else                          linesWithContext = result.GetLinesWithContext(0' 0);                        return linesWithContext;                  }).ContinueWith(task =>                  {                      if (this.Count == 1 && this[0].GrepLine.LineNumber == -1)                      {                          if (Application.Current != null)                              Application.Current.Dispatcher.Invoke(new Action(() =>                                  this.Clear()                              ));                      }                        List<GrepSearchResult.GrepLine> linesWithContext = task.Result;                      List<FormattedGrepLine> tempList = new List<FormattedGrepLine>();                      for (int i = 0; i < linesWithContext.Count; i++)                      {                          GrepSearchResult.GrepLine line = linesWithContext[i];                          bool isSectionBreak = false;                            // Adding separator                          if (tempList.Count > 0 && GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext) &&                              (currentLine != line.LineNumber && currentLine + 1 != line.LineNumber))                          {                              isSectionBreak = true;                          }                            currentLine = line.LineNumber;                          if (currentLine <= 999 && LineNumberColumnWidth < 30)                              LineNumberColumnWidth = 30;                          else if (currentLine > 999 && LineNumberColumnWidth < 35)                              LineNumberColumnWidth = 35;                          else if (currentLine > 9999 && LineNumberColumnWidth < 47)                              LineNumberColumnWidth = 47;                          else if (currentLine > 99999 && LineNumberColumnWidth < 50)                              LineNumberColumnWidth = 50;                          tempList.Add(new FormattedGrepLine(line' formattedResult' LineNumberColumnWidth' isSectionBreak));                      }                        if (Application.Current != null)                          Application.Current.Dispatcher.Invoke(new Action(() =>                          {                              foreach (var l in tempList) this.Add(l);                          }                      ));                      IsLoaded = true;                      IsLoading = false;                      LoadFinished(this' EventArgs.Empty);                  });              }
Magic Number,dnGREP.WPF.MVHelpers,LazyResultsList,C:\repos\dnGrep_dnGrep\dnGREP.WPF\MVHelpers\LazyResultsList.cs,Load,The following statement contains a magic number: if (!isAsync)              {                  int currentLine = -1;                  List<GrepSearchResult.GrepLine> linesWithContext = new List<GrepSearchResult.GrepLine>();                  if (GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext))                      linesWithContext = result.GetLinesWithContext(GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesBefore)'                      GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesAfter));                  else                      linesWithContext = result.GetLinesWithContext(0' 0);                    if (this.Count == 1 && this[0].GrepLine.LineNumber == -1)                  {                      this.Clear();                  }                    for (int i = 0; i < linesWithContext.Count; i++)                  {                      GrepSearchResult.GrepLine line = linesWithContext[i];                      bool isSectionBreak = false;                        // Adding separator                      if (this.Count > 0 && GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext) &&                          (currentLine != line.LineNumber && currentLine + 1 != line.LineNumber))                      {                          isSectionBreak = true;                      }                        currentLine = line.LineNumber;                      if (currentLine <= 999 && LineNumberColumnWidth < 30)                          LineNumberColumnWidth = 30;                      else if (currentLine > 999 && LineNumberColumnWidth < 35)                          LineNumberColumnWidth = 35;                      else if (currentLine > 9999 && LineNumberColumnWidth < 47)                          LineNumberColumnWidth = 47;                      else if (currentLine > 99999 && LineNumberColumnWidth < 50)                          LineNumberColumnWidth = 50;                        this.Add(new FormattedGrepLine(line' formattedResult' LineNumberColumnWidth' isSectionBreak));                  }                  IsLoaded = true;                  IsLoading = false;              }              else              {                  int currentLine = -1;                  var asyncTask = Task.Factory.StartNew<List<GrepSearchResult.GrepLine>>(() =>                  {                      List<GrepSearchResult.GrepLine> linesWithContext = new List<GrepSearchResult.GrepLine>();                      if (GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext))                          linesWithContext = result.GetLinesWithContext(GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesBefore)'                          GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesAfter));                      else                          linesWithContext = result.GetLinesWithContext(0' 0);                        return linesWithContext;                  }).ContinueWith(task =>                  {                      if (this.Count == 1 && this[0].GrepLine.LineNumber == -1)                      {                          if (Application.Current != null)                              Application.Current.Dispatcher.Invoke(new Action(() =>                                  this.Clear()                              ));                      }                        List<GrepSearchResult.GrepLine> linesWithContext = task.Result;                      List<FormattedGrepLine> tempList = new List<FormattedGrepLine>();                      for (int i = 0; i < linesWithContext.Count; i++)                      {                          GrepSearchResult.GrepLine line = linesWithContext[i];                          bool isSectionBreak = false;                            // Adding separator                          if (tempList.Count > 0 && GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext) &&                              (currentLine != line.LineNumber && currentLine + 1 != line.LineNumber))                          {                              isSectionBreak = true;                          }                            currentLine = line.LineNumber;                          if (currentLine <= 999 && LineNumberColumnWidth < 30)                              LineNumberColumnWidth = 30;                          else if (currentLine > 999 && LineNumberColumnWidth < 35)                              LineNumberColumnWidth = 35;                          else if (currentLine > 9999 && LineNumberColumnWidth < 47)                              LineNumberColumnWidth = 47;                          else if (currentLine > 99999 && LineNumberColumnWidth < 50)                              LineNumberColumnWidth = 50;                          tempList.Add(new FormattedGrepLine(line' formattedResult' LineNumberColumnWidth' isSectionBreak));                      }                        if (Application.Current != null)                          Application.Current.Dispatcher.Invoke(new Action(() =>                          {                              foreach (var l in tempList) this.Add(l);                          }                      ));                      IsLoaded = true;                      IsLoading = false;                      LoadFinished(this' EventArgs.Empty);                  });              }
Magic Number,dnGREP.WPF.MVHelpers,LazyResultsList,C:\repos\dnGrep_dnGrep\dnGREP.WPF\MVHelpers\LazyResultsList.cs,Load,The following statement contains a magic number: if (!isAsync)              {                  int currentLine = -1;                  List<GrepSearchResult.GrepLine> linesWithContext = new List<GrepSearchResult.GrepLine>();                  if (GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext))                      linesWithContext = result.GetLinesWithContext(GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesBefore)'                      GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesAfter));                  else                      linesWithContext = result.GetLinesWithContext(0' 0);                    if (this.Count == 1 && this[0].GrepLine.LineNumber == -1)                  {                      this.Clear();                  }                    for (int i = 0; i < linesWithContext.Count; i++)                  {                      GrepSearchResult.GrepLine line = linesWithContext[i];                      bool isSectionBreak = false;                        // Adding separator                      if (this.Count > 0 && GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext) &&                          (currentLine != line.LineNumber && currentLine + 1 != line.LineNumber))                      {                          isSectionBreak = true;                      }                        currentLine = line.LineNumber;                      if (currentLine <= 999 && LineNumberColumnWidth < 30)                          LineNumberColumnWidth = 30;                      else if (currentLine > 999 && LineNumberColumnWidth < 35)                          LineNumberColumnWidth = 35;                      else if (currentLine > 9999 && LineNumberColumnWidth < 47)                          LineNumberColumnWidth = 47;                      else if (currentLine > 99999 && LineNumberColumnWidth < 50)                          LineNumberColumnWidth = 50;                        this.Add(new FormattedGrepLine(line' formattedResult' LineNumberColumnWidth' isSectionBreak));                  }                  IsLoaded = true;                  IsLoading = false;              }              else              {                  int currentLine = -1;                  var asyncTask = Task.Factory.StartNew<List<GrepSearchResult.GrepLine>>(() =>                  {                      List<GrepSearchResult.GrepLine> linesWithContext = new List<GrepSearchResult.GrepLine>();                      if (GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext))                          linesWithContext = result.GetLinesWithContext(GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesBefore)'                          GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesAfter));                      else                          linesWithContext = result.GetLinesWithContext(0' 0);                        return linesWithContext;                  }).ContinueWith(task =>                  {                      if (this.Count == 1 && this[0].GrepLine.LineNumber == -1)                      {                          if (Application.Current != null)                              Application.Current.Dispatcher.Invoke(new Action(() =>                                  this.Clear()                              ));                      }                        List<GrepSearchResult.GrepLine> linesWithContext = task.Result;                      List<FormattedGrepLine> tempList = new List<FormattedGrepLine>();                      for (int i = 0; i < linesWithContext.Count; i++)                      {                          GrepSearchResult.GrepLine line = linesWithContext[i];                          bool isSectionBreak = false;                            // Adding separator                          if (tempList.Count > 0 && GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext) &&                              (currentLine != line.LineNumber && currentLine + 1 != line.LineNumber))                          {                              isSectionBreak = true;                          }                            currentLine = line.LineNumber;                          if (currentLine <= 999 && LineNumberColumnWidth < 30)                              LineNumberColumnWidth = 30;                          else if (currentLine > 999 && LineNumberColumnWidth < 35)                              LineNumberColumnWidth = 35;                          else if (currentLine > 9999 && LineNumberColumnWidth < 47)                              LineNumberColumnWidth = 47;                          else if (currentLine > 99999 && LineNumberColumnWidth < 50)                              LineNumberColumnWidth = 50;                          tempList.Add(new FormattedGrepLine(line' formattedResult' LineNumberColumnWidth' isSectionBreak));                      }                        if (Application.Current != null)                          Application.Current.Dispatcher.Invoke(new Action(() =>                          {                              foreach (var l in tempList) this.Add(l);                          }                      ));                      IsLoaded = true;                      IsLoading = false;                      LoadFinished(this' EventArgs.Empty);                  });              }
Magic Number,dnGREP.WPF.MVHelpers,LazyResultsList,C:\repos\dnGrep_dnGrep\dnGREP.WPF\MVHelpers\LazyResultsList.cs,Load,The following statement contains a magic number: if (!isAsync)              {                  int currentLine = -1;                  List<GrepSearchResult.GrepLine> linesWithContext = new List<GrepSearchResult.GrepLine>();                  if (GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext))                      linesWithContext = result.GetLinesWithContext(GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesBefore)'                      GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesAfter));                  else                      linesWithContext = result.GetLinesWithContext(0' 0);                    if (this.Count == 1 && this[0].GrepLine.LineNumber == -1)                  {                      this.Clear();                  }                    for (int i = 0; i < linesWithContext.Count; i++)                  {                      GrepSearchResult.GrepLine line = linesWithContext[i];                      bool isSectionBreak = false;                        // Adding separator                      if (this.Count > 0 && GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext) &&                          (currentLine != line.LineNumber && currentLine + 1 != line.LineNumber))                      {                          isSectionBreak = true;                      }                        currentLine = line.LineNumber;                      if (currentLine <= 999 && LineNumberColumnWidth < 30)                          LineNumberColumnWidth = 30;                      else if (currentLine > 999 && LineNumberColumnWidth < 35)                          LineNumberColumnWidth = 35;                      else if (currentLine > 9999 && LineNumberColumnWidth < 47)                          LineNumberColumnWidth = 47;                      else if (currentLine > 99999 && LineNumberColumnWidth < 50)                          LineNumberColumnWidth = 50;                        this.Add(new FormattedGrepLine(line' formattedResult' LineNumberColumnWidth' isSectionBreak));                  }                  IsLoaded = true;                  IsLoading = false;              }              else              {                  int currentLine = -1;                  var asyncTask = Task.Factory.StartNew<List<GrepSearchResult.GrepLine>>(() =>                  {                      List<GrepSearchResult.GrepLine> linesWithContext = new List<GrepSearchResult.GrepLine>();                      if (GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext))                          linesWithContext = result.GetLinesWithContext(GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesBefore)'                          GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesAfter));                      else                          linesWithContext = result.GetLinesWithContext(0' 0);                        return linesWithContext;                  }).ContinueWith(task =>                  {                      if (this.Count == 1 && this[0].GrepLine.LineNumber == -1)                      {                          if (Application.Current != null)                              Application.Current.Dispatcher.Invoke(new Action(() =>                                  this.Clear()                              ));                      }                        List<GrepSearchResult.GrepLine> linesWithContext = task.Result;                      List<FormattedGrepLine> tempList = new List<FormattedGrepLine>();                      for (int i = 0; i < linesWithContext.Count; i++)                      {                          GrepSearchResult.GrepLine line = linesWithContext[i];                          bool isSectionBreak = false;                            // Adding separator                          if (tempList.Count > 0 && GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext) &&                              (currentLine != line.LineNumber && currentLine + 1 != line.LineNumber))                          {                              isSectionBreak = true;                          }                            currentLine = line.LineNumber;                          if (currentLine <= 999 && LineNumberColumnWidth < 30)                              LineNumberColumnWidth = 30;                          else if (currentLine > 999 && LineNumberColumnWidth < 35)                              LineNumberColumnWidth = 35;                          else if (currentLine > 9999 && LineNumberColumnWidth < 47)                              LineNumberColumnWidth = 47;                          else if (currentLine > 99999 && LineNumberColumnWidth < 50)                              LineNumberColumnWidth = 50;                          tempList.Add(new FormattedGrepLine(line' formattedResult' LineNumberColumnWidth' isSectionBreak));                      }                        if (Application.Current != null)                          Application.Current.Dispatcher.Invoke(new Action(() =>                          {                              foreach (var l in tempList) this.Add(l);                          }                      ));                      IsLoaded = true;                      IsLoading = false;                      LoadFinished(this' EventArgs.Empty);                  });              }
Magic Number,dnGREP.WPF.MVHelpers,LazyResultsList,C:\repos\dnGrep_dnGrep\dnGREP.WPF\MVHelpers\LazyResultsList.cs,Load,The following statement contains a magic number: if (!isAsync)              {                  int currentLine = -1;                  List<GrepSearchResult.GrepLine> linesWithContext = new List<GrepSearchResult.GrepLine>();                  if (GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext))                      linesWithContext = result.GetLinesWithContext(GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesBefore)'                      GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesAfter));                  else                      linesWithContext = result.GetLinesWithContext(0' 0);                    if (this.Count == 1 && this[0].GrepLine.LineNumber == -1)                  {                      this.Clear();                  }                    for (int i = 0; i < linesWithContext.Count; i++)                  {                      GrepSearchResult.GrepLine line = linesWithContext[i];                      bool isSectionBreak = false;                        // Adding separator                      if (this.Count > 0 && GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext) &&                          (currentLine != line.LineNumber && currentLine + 1 != line.LineNumber))                      {                          isSectionBreak = true;                      }                        currentLine = line.LineNumber;                      if (currentLine <= 999 && LineNumberColumnWidth < 30)                          LineNumberColumnWidth = 30;                      else if (currentLine > 999 && LineNumberColumnWidth < 35)                          LineNumberColumnWidth = 35;                      else if (currentLine > 9999 && LineNumberColumnWidth < 47)                          LineNumberColumnWidth = 47;                      else if (currentLine > 99999 && LineNumberColumnWidth < 50)                          LineNumberColumnWidth = 50;                        this.Add(new FormattedGrepLine(line' formattedResult' LineNumberColumnWidth' isSectionBreak));                  }                  IsLoaded = true;                  IsLoading = false;              }              else              {                  int currentLine = -1;                  var asyncTask = Task.Factory.StartNew<List<GrepSearchResult.GrepLine>>(() =>                  {                      List<GrepSearchResult.GrepLine> linesWithContext = new List<GrepSearchResult.GrepLine>();                      if (GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext))                          linesWithContext = result.GetLinesWithContext(GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesBefore)'                          GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesAfter));                      else                          linesWithContext = result.GetLinesWithContext(0' 0);                        return linesWithContext;                  }).ContinueWith(task =>                  {                      if (this.Count == 1 && this[0].GrepLine.LineNumber == -1)                      {                          if (Application.Current != null)                              Application.Current.Dispatcher.Invoke(new Action(() =>                                  this.Clear()                              ));                      }                        List<GrepSearchResult.GrepLine> linesWithContext = task.Result;                      List<FormattedGrepLine> tempList = new List<FormattedGrepLine>();                      for (int i = 0; i < linesWithContext.Count; i++)                      {                          GrepSearchResult.GrepLine line = linesWithContext[i];                          bool isSectionBreak = false;                            // Adding separator                          if (tempList.Count > 0 && GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext) &&                              (currentLine != line.LineNumber && currentLine + 1 != line.LineNumber))                          {                              isSectionBreak = true;                          }                            currentLine = line.LineNumber;                          if (currentLine <= 999 && LineNumberColumnWidth < 30)                              LineNumberColumnWidth = 30;                          else if (currentLine > 999 && LineNumberColumnWidth < 35)                              LineNumberColumnWidth = 35;                          else if (currentLine > 9999 && LineNumberColumnWidth < 47)                              LineNumberColumnWidth = 47;                          else if (currentLine > 99999 && LineNumberColumnWidth < 50)                              LineNumberColumnWidth = 50;                          tempList.Add(new FormattedGrepLine(line' formattedResult' LineNumberColumnWidth' isSectionBreak));                      }                        if (Application.Current != null)                          Application.Current.Dispatcher.Invoke(new Action(() =>                          {                              foreach (var l in tempList) this.Add(l);                          }                      ));                      IsLoaded = true;                      IsLoading = false;                      LoadFinished(this' EventArgs.Empty);                  });              }
Magic Number,dnGREP.WPF.MVHelpers,LazyResultsList,C:\repos\dnGrep_dnGrep\dnGREP.WPF\MVHelpers\LazyResultsList.cs,Load,The following statement contains a magic number: if (!isAsync)              {                  int currentLine = -1;                  List<GrepSearchResult.GrepLine> linesWithContext = new List<GrepSearchResult.GrepLine>();                  if (GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext))                      linesWithContext = result.GetLinesWithContext(GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesBefore)'                      GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesAfter));                  else                      linesWithContext = result.GetLinesWithContext(0' 0);                    if (this.Count == 1 && this[0].GrepLine.LineNumber == -1)                  {                      this.Clear();                  }                    for (int i = 0; i < linesWithContext.Count; i++)                  {                      GrepSearchResult.GrepLine line = linesWithContext[i];                      bool isSectionBreak = false;                        // Adding separator                      if (this.Count > 0 && GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext) &&                          (currentLine != line.LineNumber && currentLine + 1 != line.LineNumber))                      {                          isSectionBreak = true;                      }                        currentLine = line.LineNumber;                      if (currentLine <= 999 && LineNumberColumnWidth < 30)                          LineNumberColumnWidth = 30;                      else if (currentLine > 999 && LineNumberColumnWidth < 35)                          LineNumberColumnWidth = 35;                      else if (currentLine > 9999 && LineNumberColumnWidth < 47)                          LineNumberColumnWidth = 47;                      else if (currentLine > 99999 && LineNumberColumnWidth < 50)                          LineNumberColumnWidth = 50;                        this.Add(new FormattedGrepLine(line' formattedResult' LineNumberColumnWidth' isSectionBreak));                  }                  IsLoaded = true;                  IsLoading = false;              }              else              {                  int currentLine = -1;                  var asyncTask = Task.Factory.StartNew<List<GrepSearchResult.GrepLine>>(() =>                  {                      List<GrepSearchResult.GrepLine> linesWithContext = new List<GrepSearchResult.GrepLine>();                      if (GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext))                          linesWithContext = result.GetLinesWithContext(GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesBefore)'                          GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesAfter));                      else                          linesWithContext = result.GetLinesWithContext(0' 0);                        return linesWithContext;                  }).ContinueWith(task =>                  {                      if (this.Count == 1 && this[0].GrepLine.LineNumber == -1)                      {                          if (Application.Current != null)                              Application.Current.Dispatcher.Invoke(new Action(() =>                                  this.Clear()                              ));                      }                        List<GrepSearchResult.GrepLine> linesWithContext = task.Result;                      List<FormattedGrepLine> tempList = new List<FormattedGrepLine>();                      for (int i = 0; i < linesWithContext.Count; i++)                      {                          GrepSearchResult.GrepLine line = linesWithContext[i];                          bool isSectionBreak = false;                            // Adding separator                          if (tempList.Count > 0 && GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext) &&                              (currentLine != line.LineNumber && currentLine + 1 != line.LineNumber))                          {                              isSectionBreak = true;                          }                            currentLine = line.LineNumber;                          if (currentLine <= 999 && LineNumberColumnWidth < 30)                              LineNumberColumnWidth = 30;                          else if (currentLine > 999 && LineNumberColumnWidth < 35)                              LineNumberColumnWidth = 35;                          else if (currentLine > 9999 && LineNumberColumnWidth < 47)                              LineNumberColumnWidth = 47;                          else if (currentLine > 99999 && LineNumberColumnWidth < 50)                              LineNumberColumnWidth = 50;                          tempList.Add(new FormattedGrepLine(line' formattedResult' LineNumberColumnWidth' isSectionBreak));                      }                        if (Application.Current != null)                          Application.Current.Dispatcher.Invoke(new Action(() =>                          {                              foreach (var l in tempList) this.Add(l);                          }                      ));                      IsLoaded = true;                      IsLoading = false;                      LoadFinished(this' EventArgs.Empty);                  });              }
Magic Number,dnGREP.WPF.MVHelpers,LazyResultsList,C:\repos\dnGrep_dnGrep\dnGREP.WPF\MVHelpers\LazyResultsList.cs,Load,The following statement contains a magic number: if (!isAsync)              {                  int currentLine = -1;                  List<GrepSearchResult.GrepLine> linesWithContext = new List<GrepSearchResult.GrepLine>();                  if (GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext))                      linesWithContext = result.GetLinesWithContext(GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesBefore)'                      GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesAfter));                  else                      linesWithContext = result.GetLinesWithContext(0' 0);                    if (this.Count == 1 && this[0].GrepLine.LineNumber == -1)                  {                      this.Clear();                  }                    for (int i = 0; i < linesWithContext.Count; i++)                  {                      GrepSearchResult.GrepLine line = linesWithContext[i];                      bool isSectionBreak = false;                        // Adding separator                      if (this.Count > 0 && GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext) &&                          (currentLine != line.LineNumber && currentLine + 1 != line.LineNumber))                      {                          isSectionBreak = true;                      }                        currentLine = line.LineNumber;                      if (currentLine <= 999 && LineNumberColumnWidth < 30)                          LineNumberColumnWidth = 30;                      else if (currentLine > 999 && LineNumberColumnWidth < 35)                          LineNumberColumnWidth = 35;                      else if (currentLine > 9999 && LineNumberColumnWidth < 47)                          LineNumberColumnWidth = 47;                      else if (currentLine > 99999 && LineNumberColumnWidth < 50)                          LineNumberColumnWidth = 50;                        this.Add(new FormattedGrepLine(line' formattedResult' LineNumberColumnWidth' isSectionBreak));                  }                  IsLoaded = true;                  IsLoading = false;              }              else              {                  int currentLine = -1;                  var asyncTask = Task.Factory.StartNew<List<GrepSearchResult.GrepLine>>(() =>                  {                      List<GrepSearchResult.GrepLine> linesWithContext = new List<GrepSearchResult.GrepLine>();                      if (GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext))                          linesWithContext = result.GetLinesWithContext(GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesBefore)'                          GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesAfter));                      else                          linesWithContext = result.GetLinesWithContext(0' 0);                        return linesWithContext;                  }).ContinueWith(task =>                  {                      if (this.Count == 1 && this[0].GrepLine.LineNumber == -1)                      {                          if (Application.Current != null)                              Application.Current.Dispatcher.Invoke(new Action(() =>                                  this.Clear()                              ));                      }                        List<GrepSearchResult.GrepLine> linesWithContext = task.Result;                      List<FormattedGrepLine> tempList = new List<FormattedGrepLine>();                      for (int i = 0; i < linesWithContext.Count; i++)                      {                          GrepSearchResult.GrepLine line = linesWithContext[i];                          bool isSectionBreak = false;                            // Adding separator                          if (tempList.Count > 0 && GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext) &&                              (currentLine != line.LineNumber && currentLine + 1 != line.LineNumber))                          {                              isSectionBreak = true;                          }                            currentLine = line.LineNumber;                          if (currentLine <= 999 && LineNumberColumnWidth < 30)                              LineNumberColumnWidth = 30;                          else if (currentLine > 999 && LineNumberColumnWidth < 35)                              LineNumberColumnWidth = 35;                          else if (currentLine > 9999 && LineNumberColumnWidth < 47)                              LineNumberColumnWidth = 47;                          else if (currentLine > 99999 && LineNumberColumnWidth < 50)                              LineNumberColumnWidth = 50;                          tempList.Add(new FormattedGrepLine(line' formattedResult' LineNumberColumnWidth' isSectionBreak));                      }                        if (Application.Current != null)                          Application.Current.Dispatcher.Invoke(new Action(() =>                          {                              foreach (var l in tempList) this.Add(l);                          }                      ));                      IsLoaded = true;                      IsLoading = false;                      LoadFinished(this' EventArgs.Empty);                  });              }
Magic Number,dnGREP.WPF.MVHelpers,LazyResultsList,C:\repos\dnGrep_dnGrep\dnGREP.WPF\MVHelpers\LazyResultsList.cs,Load,The following statement contains a magic number: if (!isAsync)              {                  int currentLine = -1;                  List<GrepSearchResult.GrepLine> linesWithContext = new List<GrepSearchResult.GrepLine>();                  if (GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext))                      linesWithContext = result.GetLinesWithContext(GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesBefore)'                      GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesAfter));                  else                      linesWithContext = result.GetLinesWithContext(0' 0);                    if (this.Count == 1 && this[0].GrepLine.LineNumber == -1)                  {                      this.Clear();                  }                    for (int i = 0; i < linesWithContext.Count; i++)                  {                      GrepSearchResult.GrepLine line = linesWithContext[i];                      bool isSectionBreak = false;                        // Adding separator                      if (this.Count > 0 && GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext) &&                          (currentLine != line.LineNumber && currentLine + 1 != line.LineNumber))                      {                          isSectionBreak = true;                      }                        currentLine = line.LineNumber;                      if (currentLine <= 999 && LineNumberColumnWidth < 30)                          LineNumberColumnWidth = 30;                      else if (currentLine > 999 && LineNumberColumnWidth < 35)                          LineNumberColumnWidth = 35;                      else if (currentLine > 9999 && LineNumberColumnWidth < 47)                          LineNumberColumnWidth = 47;                      else if (currentLine > 99999 && LineNumberColumnWidth < 50)                          LineNumberColumnWidth = 50;                        this.Add(new FormattedGrepLine(line' formattedResult' LineNumberColumnWidth' isSectionBreak));                  }                  IsLoaded = true;                  IsLoading = false;              }              else              {                  int currentLine = -1;                  var asyncTask = Task.Factory.StartNew<List<GrepSearchResult.GrepLine>>(() =>                  {                      List<GrepSearchResult.GrepLine> linesWithContext = new List<GrepSearchResult.GrepLine>();                      if (GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext))                          linesWithContext = result.GetLinesWithContext(GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesBefore)'                          GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesAfter));                      else                          linesWithContext = result.GetLinesWithContext(0' 0);                        return linesWithContext;                  }).ContinueWith(task =>                  {                      if (this.Count == 1 && this[0].GrepLine.LineNumber == -1)                      {                          if (Application.Current != null)                              Application.Current.Dispatcher.Invoke(new Action(() =>                                  this.Clear()                              ));                      }                        List<GrepSearchResult.GrepLine> linesWithContext = task.Result;                      List<FormattedGrepLine> tempList = new List<FormattedGrepLine>();                      for (int i = 0; i < linesWithContext.Count; i++)                      {                          GrepSearchResult.GrepLine line = linesWithContext[i];                          bool isSectionBreak = false;                            // Adding separator                          if (tempList.Count > 0 && GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext) &&                              (currentLine != line.LineNumber && currentLine + 1 != line.LineNumber))                          {                              isSectionBreak = true;                          }                            currentLine = line.LineNumber;                          if (currentLine <= 999 && LineNumberColumnWidth < 30)                              LineNumberColumnWidth = 30;                          else if (currentLine > 999 && LineNumberColumnWidth < 35)                              LineNumberColumnWidth = 35;                          else if (currentLine > 9999 && LineNumberColumnWidth < 47)                              LineNumberColumnWidth = 47;                          else if (currentLine > 99999 && LineNumberColumnWidth < 50)                              LineNumberColumnWidth = 50;                          tempList.Add(new FormattedGrepLine(line' formattedResult' LineNumberColumnWidth' isSectionBreak));                      }                        if (Application.Current != null)                          Application.Current.Dispatcher.Invoke(new Action(() =>                          {                              foreach (var l in tempList) this.Add(l);                          }                      ));                      IsLoaded = true;                      IsLoading = false;                      LoadFinished(this' EventArgs.Empty);                  });              }
Magic Number,dnGREP.WPF.MVHelpers,LazyResultsList,C:\repos\dnGrep_dnGrep\dnGREP.WPF\MVHelpers\LazyResultsList.cs,Load,The following statement contains a magic number: if (!isAsync)              {                  int currentLine = -1;                  List<GrepSearchResult.GrepLine> linesWithContext = new List<GrepSearchResult.GrepLine>();                  if (GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext))                      linesWithContext = result.GetLinesWithContext(GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesBefore)'                      GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesAfter));                  else                      linesWithContext = result.GetLinesWithContext(0' 0);                    if (this.Count == 1 && this[0].GrepLine.LineNumber == -1)                  {                      this.Clear();                  }                    for (int i = 0; i < linesWithContext.Count; i++)                  {                      GrepSearchResult.GrepLine line = linesWithContext[i];                      bool isSectionBreak = false;                        // Adding separator                      if (this.Count > 0 && GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext) &&                          (currentLine != line.LineNumber && currentLine + 1 != line.LineNumber))                      {                          isSectionBreak = true;                      }                        currentLine = line.LineNumber;                      if (currentLine <= 999 && LineNumberColumnWidth < 30)                          LineNumberColumnWidth = 30;                      else if (currentLine > 999 && LineNumberColumnWidth < 35)                          LineNumberColumnWidth = 35;                      else if (currentLine > 9999 && LineNumberColumnWidth < 47)                          LineNumberColumnWidth = 47;                      else if (currentLine > 99999 && LineNumberColumnWidth < 50)                          LineNumberColumnWidth = 50;                        this.Add(new FormattedGrepLine(line' formattedResult' LineNumberColumnWidth' isSectionBreak));                  }                  IsLoaded = true;                  IsLoading = false;              }              else              {                  int currentLine = -1;                  var asyncTask = Task.Factory.StartNew<List<GrepSearchResult.GrepLine>>(() =>                  {                      List<GrepSearchResult.GrepLine> linesWithContext = new List<GrepSearchResult.GrepLine>();                      if (GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext))                          linesWithContext = result.GetLinesWithContext(GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesBefore)'                          GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesAfter));                      else                          linesWithContext = result.GetLinesWithContext(0' 0);                        return linesWithContext;                  }).ContinueWith(task =>                  {                      if (this.Count == 1 && this[0].GrepLine.LineNumber == -1)                      {                          if (Application.Current != null)                              Application.Current.Dispatcher.Invoke(new Action(() =>                                  this.Clear()                              ));                      }                        List<GrepSearchResult.GrepLine> linesWithContext = task.Result;                      List<FormattedGrepLine> tempList = new List<FormattedGrepLine>();                      for (int i = 0; i < linesWithContext.Count; i++)                      {                          GrepSearchResult.GrepLine line = linesWithContext[i];                          bool isSectionBreak = false;                            // Adding separator                          if (tempList.Count > 0 && GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext) &&                              (currentLine != line.LineNumber && currentLine + 1 != line.LineNumber))                          {                              isSectionBreak = true;                          }                            currentLine = line.LineNumber;                          if (currentLine <= 999 && LineNumberColumnWidth < 30)                              LineNumberColumnWidth = 30;                          else if (currentLine > 999 && LineNumberColumnWidth < 35)                              LineNumberColumnWidth = 35;                          else if (currentLine > 9999 && LineNumberColumnWidth < 47)                              LineNumberColumnWidth = 47;                          else if (currentLine > 99999 && LineNumberColumnWidth < 50)                              LineNumberColumnWidth = 50;                          tempList.Add(new FormattedGrepLine(line' formattedResult' LineNumberColumnWidth' isSectionBreak));                      }                        if (Application.Current != null)                          Application.Current.Dispatcher.Invoke(new Action(() =>                          {                              foreach (var l in tempList) this.Add(l);                          }                      ));                      IsLoaded = true;                      IsLoading = false;                      LoadFinished(this' EventArgs.Empty);                  });              }
Magic Number,dnGREP.WPF.MVHelpers,LazyResultsList,C:\repos\dnGrep_dnGrep\dnGREP.WPF\MVHelpers\LazyResultsList.cs,Load,The following statement contains a magic number: if (!isAsync)              {                  int currentLine = -1;                  List<GrepSearchResult.GrepLine> linesWithContext = new List<GrepSearchResult.GrepLine>();                  if (GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext))                      linesWithContext = result.GetLinesWithContext(GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesBefore)'                      GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesAfter));                  else                      linesWithContext = result.GetLinesWithContext(0' 0);                    if (this.Count == 1 && this[0].GrepLine.LineNumber == -1)                  {                      this.Clear();                  }                    for (int i = 0; i < linesWithContext.Count; i++)                  {                      GrepSearchResult.GrepLine line = linesWithContext[i];                      bool isSectionBreak = false;                        // Adding separator                      if (this.Count > 0 && GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext) &&                          (currentLine != line.LineNumber && currentLine + 1 != line.LineNumber))                      {                          isSectionBreak = true;                      }                        currentLine = line.LineNumber;                      if (currentLine <= 999 && LineNumberColumnWidth < 30)                          LineNumberColumnWidth = 30;                      else if (currentLine > 999 && LineNumberColumnWidth < 35)                          LineNumberColumnWidth = 35;                      else if (currentLine > 9999 && LineNumberColumnWidth < 47)                          LineNumberColumnWidth = 47;                      else if (currentLine > 99999 && LineNumberColumnWidth < 50)                          LineNumberColumnWidth = 50;                        this.Add(new FormattedGrepLine(line' formattedResult' LineNumberColumnWidth' isSectionBreak));                  }                  IsLoaded = true;                  IsLoading = false;              }              else              {                  int currentLine = -1;                  var asyncTask = Task.Factory.StartNew<List<GrepSearchResult.GrepLine>>(() =>                  {                      List<GrepSearchResult.GrepLine> linesWithContext = new List<GrepSearchResult.GrepLine>();                      if (GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext))                          linesWithContext = result.GetLinesWithContext(GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesBefore)'                          GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesAfter));                      else                          linesWithContext = result.GetLinesWithContext(0' 0);                        return linesWithContext;                  }).ContinueWith(task =>                  {                      if (this.Count == 1 && this[0].GrepLine.LineNumber == -1)                      {                          if (Application.Current != null)                              Application.Current.Dispatcher.Invoke(new Action(() =>                                  this.Clear()                              ));                      }                        List<GrepSearchResult.GrepLine> linesWithContext = task.Result;                      List<FormattedGrepLine> tempList = new List<FormattedGrepLine>();                      for (int i = 0; i < linesWithContext.Count; i++)                      {                          GrepSearchResult.GrepLine line = linesWithContext[i];                          bool isSectionBreak = false;                            // Adding separator                          if (tempList.Count > 0 && GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext) &&                              (currentLine != line.LineNumber && currentLine + 1 != line.LineNumber))                          {                              isSectionBreak = true;                          }                            currentLine = line.LineNumber;                          if (currentLine <= 999 && LineNumberColumnWidth < 30)                              LineNumberColumnWidth = 30;                          else if (currentLine > 999 && LineNumberColumnWidth < 35)                              LineNumberColumnWidth = 35;                          else if (currentLine > 9999 && LineNumberColumnWidth < 47)                              LineNumberColumnWidth = 47;                          else if (currentLine > 99999 && LineNumberColumnWidth < 50)                              LineNumberColumnWidth = 50;                          tempList.Add(new FormattedGrepLine(line' formattedResult' LineNumberColumnWidth' isSectionBreak));                      }                        if (Application.Current != null)                          Application.Current.Dispatcher.Invoke(new Action(() =>                          {                              foreach (var l in tempList) this.Add(l);                          }                      ));                      IsLoaded = true;                      IsLoading = false;                      LoadFinished(this' EventArgs.Empty);                  });              }
Magic Number,dnGREP.WPF.MVHelpers,LazyResultsList,C:\repos\dnGrep_dnGrep\dnGREP.WPF\MVHelpers\LazyResultsList.cs,Load,The following statement contains a magic number: if (!isAsync)              {                  int currentLine = -1;                  List<GrepSearchResult.GrepLine> linesWithContext = new List<GrepSearchResult.GrepLine>();                  if (GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext))                      linesWithContext = result.GetLinesWithContext(GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesBefore)'                      GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesAfter));                  else                      linesWithContext = result.GetLinesWithContext(0' 0);                    if (this.Count == 1 && this[0].GrepLine.LineNumber == -1)                  {                      this.Clear();                  }                    for (int i = 0; i < linesWithContext.Count; i++)                  {                      GrepSearchResult.GrepLine line = linesWithContext[i];                      bool isSectionBreak = false;                        // Adding separator                      if (this.Count > 0 && GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext) &&                          (currentLine != line.LineNumber && currentLine + 1 != line.LineNumber))                      {                          isSectionBreak = true;                      }                        currentLine = line.LineNumber;                      if (currentLine <= 999 && LineNumberColumnWidth < 30)                          LineNumberColumnWidth = 30;                      else if (currentLine > 999 && LineNumberColumnWidth < 35)                          LineNumberColumnWidth = 35;                      else if (currentLine > 9999 && LineNumberColumnWidth < 47)                          LineNumberColumnWidth = 47;                      else if (currentLine > 99999 && LineNumberColumnWidth < 50)                          LineNumberColumnWidth = 50;                        this.Add(new FormattedGrepLine(line' formattedResult' LineNumberColumnWidth' isSectionBreak));                  }                  IsLoaded = true;                  IsLoading = false;              }              else              {                  int currentLine = -1;                  var asyncTask = Task.Factory.StartNew<List<GrepSearchResult.GrepLine>>(() =>                  {                      List<GrepSearchResult.GrepLine> linesWithContext = new List<GrepSearchResult.GrepLine>();                      if (GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext))                          linesWithContext = result.GetLinesWithContext(GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesBefore)'                          GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesAfter));                      else                          linesWithContext = result.GetLinesWithContext(0' 0);                        return linesWithContext;                  }).ContinueWith(task =>                  {                      if (this.Count == 1 && this[0].GrepLine.LineNumber == -1)                      {                          if (Application.Current != null)                              Application.Current.Dispatcher.Invoke(new Action(() =>                                  this.Clear()                              ));                      }                        List<GrepSearchResult.GrepLine> linesWithContext = task.Result;                      List<FormattedGrepLine> tempList = new List<FormattedGrepLine>();                      for (int i = 0; i < linesWithContext.Count; i++)                      {                          GrepSearchResult.GrepLine line = linesWithContext[i];                          bool isSectionBreak = false;                            // Adding separator                          if (tempList.Count > 0 && GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext) &&                              (currentLine != line.LineNumber && currentLine + 1 != line.LineNumber))                          {                              isSectionBreak = true;                          }                            currentLine = line.LineNumber;                          if (currentLine <= 999 && LineNumberColumnWidth < 30)                              LineNumberColumnWidth = 30;                          else if (currentLine > 999 && LineNumberColumnWidth < 35)                              LineNumberColumnWidth = 35;                          else if (currentLine > 9999 && LineNumberColumnWidth < 47)                              LineNumberColumnWidth = 47;                          else if (currentLine > 99999 && LineNumberColumnWidth < 50)                              LineNumberColumnWidth = 50;                          tempList.Add(new FormattedGrepLine(line' formattedResult' LineNumberColumnWidth' isSectionBreak));                      }                        if (Application.Current != null)                          Application.Current.Dispatcher.Invoke(new Action(() =>                          {                              foreach (var l in tempList) this.Add(l);                          }                      ));                      IsLoaded = true;                      IsLoading = false;                      LoadFinished(this' EventArgs.Empty);                  });              }
Magic Number,dnGREP.WPF.MVHelpers,LazyResultsList,C:\repos\dnGrep_dnGrep\dnGREP.WPF\MVHelpers\LazyResultsList.cs,Load,The following statement contains a magic number: if (!isAsync)              {                  int currentLine = -1;                  List<GrepSearchResult.GrepLine> linesWithContext = new List<GrepSearchResult.GrepLine>();                  if (GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext))                      linesWithContext = result.GetLinesWithContext(GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesBefore)'                      GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesAfter));                  else                      linesWithContext = result.GetLinesWithContext(0' 0);                    if (this.Count == 1 && this[0].GrepLine.LineNumber == -1)                  {                      this.Clear();                  }                    for (int i = 0; i < linesWithContext.Count; i++)                  {                      GrepSearchResult.GrepLine line = linesWithContext[i];                      bool isSectionBreak = false;                        // Adding separator                      if (this.Count > 0 && GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext) &&                          (currentLine != line.LineNumber && currentLine + 1 != line.LineNumber))                      {                          isSectionBreak = true;                      }                        currentLine = line.LineNumber;                      if (currentLine <= 999 && LineNumberColumnWidth < 30)                          LineNumberColumnWidth = 30;                      else if (currentLine > 999 && LineNumberColumnWidth < 35)                          LineNumberColumnWidth = 35;                      else if (currentLine > 9999 && LineNumberColumnWidth < 47)                          LineNumberColumnWidth = 47;                      else if (currentLine > 99999 && LineNumberColumnWidth < 50)                          LineNumberColumnWidth = 50;                        this.Add(new FormattedGrepLine(line' formattedResult' LineNumberColumnWidth' isSectionBreak));                  }                  IsLoaded = true;                  IsLoading = false;              }              else              {                  int currentLine = -1;                  var asyncTask = Task.Factory.StartNew<List<GrepSearchResult.GrepLine>>(() =>                  {                      List<GrepSearchResult.GrepLine> linesWithContext = new List<GrepSearchResult.GrepLine>();                      if (GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext))                          linesWithContext = result.GetLinesWithContext(GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesBefore)'                          GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesAfter));                      else                          linesWithContext = result.GetLinesWithContext(0' 0);                        return linesWithContext;                  }).ContinueWith(task =>                  {                      if (this.Count == 1 && this[0].GrepLine.LineNumber == -1)                      {                          if (Application.Current != null)                              Application.Current.Dispatcher.Invoke(new Action(() =>                                  this.Clear()                              ));                      }                        List<GrepSearchResult.GrepLine> linesWithContext = task.Result;                      List<FormattedGrepLine> tempList = new List<FormattedGrepLine>();                      for (int i = 0; i < linesWithContext.Count; i++)                      {                          GrepSearchResult.GrepLine line = linesWithContext[i];                          bool isSectionBreak = false;                            // Adding separator                          if (tempList.Count > 0 && GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext) &&                              (currentLine != line.LineNumber && currentLine + 1 != line.LineNumber))                          {                              isSectionBreak = true;                          }                            currentLine = line.LineNumber;                          if (currentLine <= 999 && LineNumberColumnWidth < 30)                              LineNumberColumnWidth = 30;                          else if (currentLine > 999 && LineNumberColumnWidth < 35)                              LineNumberColumnWidth = 35;                          else if (currentLine > 9999 && LineNumberColumnWidth < 47)                              LineNumberColumnWidth = 47;                          else if (currentLine > 99999 && LineNumberColumnWidth < 50)                              LineNumberColumnWidth = 50;                          tempList.Add(new FormattedGrepLine(line' formattedResult' LineNumberColumnWidth' isSectionBreak));                      }                        if (Application.Current != null)                          Application.Current.Dispatcher.Invoke(new Action(() =>                          {                              foreach (var l in tempList) this.Add(l);                          }                      ));                      IsLoaded = true;                      IsLoading = false;                      LoadFinished(this' EventArgs.Empty);                  });              }
Magic Number,dnGREP.WPF.MVHelpers,LazyResultsList,C:\repos\dnGrep_dnGrep\dnGREP.WPF\MVHelpers\LazyResultsList.cs,Load,The following statement contains a magic number: if (!isAsync)              {                  int currentLine = -1;                  List<GrepSearchResult.GrepLine> linesWithContext = new List<GrepSearchResult.GrepLine>();                  if (GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext))                      linesWithContext = result.GetLinesWithContext(GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesBefore)'                      GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesAfter));                  else                      linesWithContext = result.GetLinesWithContext(0' 0);                    if (this.Count == 1 && this[0].GrepLine.LineNumber == -1)                  {                      this.Clear();                  }                    for (int i = 0; i < linesWithContext.Count; i++)                  {                      GrepSearchResult.GrepLine line = linesWithContext[i];                      bool isSectionBreak = false;                        // Adding separator                      if (this.Count > 0 && GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext) &&                          (currentLine != line.LineNumber && currentLine + 1 != line.LineNumber))                      {                          isSectionBreak = true;                      }                        currentLine = line.LineNumber;                      if (currentLine <= 999 && LineNumberColumnWidth < 30)                          LineNumberColumnWidth = 30;                      else if (currentLine > 999 && LineNumberColumnWidth < 35)                          LineNumberColumnWidth = 35;                      else if (currentLine > 9999 && LineNumberColumnWidth < 47)                          LineNumberColumnWidth = 47;                      else if (currentLine > 99999 && LineNumberColumnWidth < 50)                          LineNumberColumnWidth = 50;                        this.Add(new FormattedGrepLine(line' formattedResult' LineNumberColumnWidth' isSectionBreak));                  }                  IsLoaded = true;                  IsLoading = false;              }              else              {                  int currentLine = -1;                  var asyncTask = Task.Factory.StartNew<List<GrepSearchResult.GrepLine>>(() =>                  {                      List<GrepSearchResult.GrepLine> linesWithContext = new List<GrepSearchResult.GrepLine>();                      if (GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext))                          linesWithContext = result.GetLinesWithContext(GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesBefore)'                          GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesAfter));                      else                          linesWithContext = result.GetLinesWithContext(0' 0);                        return linesWithContext;                  }).ContinueWith(task =>                  {                      if (this.Count == 1 && this[0].GrepLine.LineNumber == -1)                      {                          if (Application.Current != null)                              Application.Current.Dispatcher.Invoke(new Action(() =>                                  this.Clear()                              ));                      }                        List<GrepSearchResult.GrepLine> linesWithContext = task.Result;                      List<FormattedGrepLine> tempList = new List<FormattedGrepLine>();                      for (int i = 0; i < linesWithContext.Count; i++)                      {                          GrepSearchResult.GrepLine line = linesWithContext[i];                          bool isSectionBreak = false;                            // Adding separator                          if (tempList.Count > 0 && GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext) &&                              (currentLine != line.LineNumber && currentLine + 1 != line.LineNumber))                          {                              isSectionBreak = true;                          }                            currentLine = line.LineNumber;                          if (currentLine <= 999 && LineNumberColumnWidth < 30)                              LineNumberColumnWidth = 30;                          else if (currentLine > 999 && LineNumberColumnWidth < 35)                              LineNumberColumnWidth = 35;                          else if (currentLine > 9999 && LineNumberColumnWidth < 47)                              LineNumberColumnWidth = 47;                          else if (currentLine > 99999 && LineNumberColumnWidth < 50)                              LineNumberColumnWidth = 50;                          tempList.Add(new FormattedGrepLine(line' formattedResult' LineNumberColumnWidth' isSectionBreak));                      }                        if (Application.Current != null)                          Application.Current.Dispatcher.Invoke(new Action(() =>                          {                              foreach (var l in tempList) this.Add(l);                          }                      ));                      IsLoaded = true;                      IsLoading = false;                      LoadFinished(this' EventArgs.Empty);                  });              }
Magic Number,dnGREP.WPF.MVHelpers,LazyResultsList,C:\repos\dnGrep_dnGrep\dnGREP.WPF\MVHelpers\LazyResultsList.cs,Load,The following statement contains a magic number: if (!isAsync)              {                  int currentLine = -1;                  List<GrepSearchResult.GrepLine> linesWithContext = new List<GrepSearchResult.GrepLine>();                  if (GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext))                      linesWithContext = result.GetLinesWithContext(GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesBefore)'                      GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesAfter));                  else                      linesWithContext = result.GetLinesWithContext(0' 0);                    if (this.Count == 1 && this[0].GrepLine.LineNumber == -1)                  {                      this.Clear();                  }                    for (int i = 0; i < linesWithContext.Count; i++)                  {                      GrepSearchResult.GrepLine line = linesWithContext[i];                      bool isSectionBreak = false;                        // Adding separator                      if (this.Count > 0 && GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext) &&                          (currentLine != line.LineNumber && currentLine + 1 != line.LineNumber))                      {                          isSectionBreak = true;                      }                        currentLine = line.LineNumber;                      if (currentLine <= 999 && LineNumberColumnWidth < 30)                          LineNumberColumnWidth = 30;                      else if (currentLine > 999 && LineNumberColumnWidth < 35)                          LineNumberColumnWidth = 35;                      else if (currentLine > 9999 && LineNumberColumnWidth < 47)                          LineNumberColumnWidth = 47;                      else if (currentLine > 99999 && LineNumberColumnWidth < 50)                          LineNumberColumnWidth = 50;                        this.Add(new FormattedGrepLine(line' formattedResult' LineNumberColumnWidth' isSectionBreak));                  }                  IsLoaded = true;                  IsLoading = false;              }              else              {                  int currentLine = -1;                  var asyncTask = Task.Factory.StartNew<List<GrepSearchResult.GrepLine>>(() =>                  {                      List<GrepSearchResult.GrepLine> linesWithContext = new List<GrepSearchResult.GrepLine>();                      if (GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext))                          linesWithContext = result.GetLinesWithContext(GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesBefore)'                          GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesAfter));                      else                          linesWithContext = result.GetLinesWithContext(0' 0);                        return linesWithContext;                  }).ContinueWith(task =>                  {                      if (this.Count == 1 && this[0].GrepLine.LineNumber == -1)                      {                          if (Application.Current != null)                              Application.Current.Dispatcher.Invoke(new Action(() =>                                  this.Clear()                              ));                      }                        List<GrepSearchResult.GrepLine> linesWithContext = task.Result;                      List<FormattedGrepLine> tempList = new List<FormattedGrepLine>();                      for (int i = 0; i < linesWithContext.Count; i++)                      {                          GrepSearchResult.GrepLine line = linesWithContext[i];                          bool isSectionBreak = false;                            // Adding separator                          if (tempList.Count > 0 && GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext) &&                              (currentLine != line.LineNumber && currentLine + 1 != line.LineNumber))                          {                              isSectionBreak = true;                          }                            currentLine = line.LineNumber;                          if (currentLine <= 999 && LineNumberColumnWidth < 30)                              LineNumberColumnWidth = 30;                          else if (currentLine > 999 && LineNumberColumnWidth < 35)                              LineNumberColumnWidth = 35;                          else if (currentLine > 9999 && LineNumberColumnWidth < 47)                              LineNumberColumnWidth = 47;                          else if (currentLine > 99999 && LineNumberColumnWidth < 50)                              LineNumberColumnWidth = 50;                          tempList.Add(new FormattedGrepLine(line' formattedResult' LineNumberColumnWidth' isSectionBreak));                      }                        if (Application.Current != null)                          Application.Current.Dispatcher.Invoke(new Action(() =>                          {                              foreach (var l in tempList) this.Add(l);                          }                      ));                      IsLoaded = true;                      IsLoading = false;                      LoadFinished(this' EventArgs.Empty);                  });              }
Magic Number,dnGREP.WPF.MVHelpers,LazyResultsList,C:\repos\dnGrep_dnGrep\dnGREP.WPF\MVHelpers\LazyResultsList.cs,Load,The following statement contains a magic number: if (!isAsync)              {                  int currentLine = -1;                  List<GrepSearchResult.GrepLine> linesWithContext = new List<GrepSearchResult.GrepLine>();                  if (GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext))                      linesWithContext = result.GetLinesWithContext(GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesBefore)'                      GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesAfter));                  else                      linesWithContext = result.GetLinesWithContext(0' 0);                    if (this.Count == 1 && this[0].GrepLine.LineNumber == -1)                  {                      this.Clear();                  }                    for (int i = 0; i < linesWithContext.Count; i++)                  {                      GrepSearchResult.GrepLine line = linesWithContext[i];                      bool isSectionBreak = false;                        // Adding separator                      if (this.Count > 0 && GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext) &&                          (currentLine != line.LineNumber && currentLine + 1 != line.LineNumber))                      {                          isSectionBreak = true;                      }                        currentLine = line.LineNumber;                      if (currentLine <= 999 && LineNumberColumnWidth < 30)                          LineNumberColumnWidth = 30;                      else if (currentLine > 999 && LineNumberColumnWidth < 35)                          LineNumberColumnWidth = 35;                      else if (currentLine > 9999 && LineNumberColumnWidth < 47)                          LineNumberColumnWidth = 47;                      else if (currentLine > 99999 && LineNumberColumnWidth < 50)                          LineNumberColumnWidth = 50;                        this.Add(new FormattedGrepLine(line' formattedResult' LineNumberColumnWidth' isSectionBreak));                  }                  IsLoaded = true;                  IsLoading = false;              }              else              {                  int currentLine = -1;                  var asyncTask = Task.Factory.StartNew<List<GrepSearchResult.GrepLine>>(() =>                  {                      List<GrepSearchResult.GrepLine> linesWithContext = new List<GrepSearchResult.GrepLine>();                      if (GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext))                          linesWithContext = result.GetLinesWithContext(GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesBefore)'                          GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesAfter));                      else                          linesWithContext = result.GetLinesWithContext(0' 0);                        return linesWithContext;                  }).ContinueWith(task =>                  {                      if (this.Count == 1 && this[0].GrepLine.LineNumber == -1)                      {                          if (Application.Current != null)                              Application.Current.Dispatcher.Invoke(new Action(() =>                                  this.Clear()                              ));                      }                        List<GrepSearchResult.GrepLine> linesWithContext = task.Result;                      List<FormattedGrepLine> tempList = new List<FormattedGrepLine>();                      for (int i = 0; i < linesWithContext.Count; i++)                      {                          GrepSearchResult.GrepLine line = linesWithContext[i];                          bool isSectionBreak = false;                            // Adding separator                          if (tempList.Count > 0 && GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext) &&                              (currentLine != line.LineNumber && currentLine + 1 != line.LineNumber))                          {                              isSectionBreak = true;                          }                            currentLine = line.LineNumber;                          if (currentLine <= 999 && LineNumberColumnWidth < 30)                              LineNumberColumnWidth = 30;                          else if (currentLine > 999 && LineNumberColumnWidth < 35)                              LineNumberColumnWidth = 35;                          else if (currentLine > 9999 && LineNumberColumnWidth < 47)                              LineNumberColumnWidth = 47;                          else if (currentLine > 99999 && LineNumberColumnWidth < 50)                              LineNumberColumnWidth = 50;                          tempList.Add(new FormattedGrepLine(line' formattedResult' LineNumberColumnWidth' isSectionBreak));                      }                        if (Application.Current != null)                          Application.Current.Dispatcher.Invoke(new Action(() =>                          {                              foreach (var l in tempList) this.Add(l);                          }                      ));                      IsLoaded = true;                      IsLoading = false;                      LoadFinished(this' EventArgs.Empty);                  });              }
Magic Number,dnGREP.WPF.MVHelpers,LazyResultsList,C:\repos\dnGrep_dnGrep\dnGREP.WPF\MVHelpers\LazyResultsList.cs,Load,The following statement contains a magic number: if (!isAsync)              {                  int currentLine = -1;                  List<GrepSearchResult.GrepLine> linesWithContext = new List<GrepSearchResult.GrepLine>();                  if (GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext))                      linesWithContext = result.GetLinesWithContext(GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesBefore)'                      GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesAfter));                  else                      linesWithContext = result.GetLinesWithContext(0' 0);                    if (this.Count == 1 && this[0].GrepLine.LineNumber == -1)                  {                      this.Clear();                  }                    for (int i = 0; i < linesWithContext.Count; i++)                  {                      GrepSearchResult.GrepLine line = linesWithContext[i];                      bool isSectionBreak = false;                        // Adding separator                      if (this.Count > 0 && GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext) &&                          (currentLine != line.LineNumber && currentLine + 1 != line.LineNumber))                      {                          isSectionBreak = true;                      }                        currentLine = line.LineNumber;                      if (currentLine <= 999 && LineNumberColumnWidth < 30)                          LineNumberColumnWidth = 30;                      else if (currentLine > 999 && LineNumberColumnWidth < 35)                          LineNumberColumnWidth = 35;                      else if (currentLine > 9999 && LineNumberColumnWidth < 47)                          LineNumberColumnWidth = 47;                      else if (currentLine > 99999 && LineNumberColumnWidth < 50)                          LineNumberColumnWidth = 50;                        this.Add(new FormattedGrepLine(line' formattedResult' LineNumberColumnWidth' isSectionBreak));                  }                  IsLoaded = true;                  IsLoading = false;              }              else              {                  int currentLine = -1;                  var asyncTask = Task.Factory.StartNew<List<GrepSearchResult.GrepLine>>(() =>                  {                      List<GrepSearchResult.GrepLine> linesWithContext = new List<GrepSearchResult.GrepLine>();                      if (GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext))                          linesWithContext = result.GetLinesWithContext(GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesBefore)'                          GrepSettings.Instance.Get<int>(GrepSettings.Key.ContextLinesAfter));                      else                          linesWithContext = result.GetLinesWithContext(0' 0);                        return linesWithContext;                  }).ContinueWith(task =>                  {                      if (this.Count == 1 && this[0].GrepLine.LineNumber == -1)                      {                          if (Application.Current != null)                              Application.Current.Dispatcher.Invoke(new Action(() =>                                  this.Clear()                              ));                      }                        List<GrepSearchResult.GrepLine> linesWithContext = task.Result;                      List<FormattedGrepLine> tempList = new List<FormattedGrepLine>();                      for (int i = 0; i < linesWithContext.Count; i++)                      {                          GrepSearchResult.GrepLine line = linesWithContext[i];                          bool isSectionBreak = false;                            // Adding separator                          if (tempList.Count > 0 && GrepSettings.Instance.Get<bool>(GrepSettings.Key.ShowLinesInContext) &&                              (currentLine != line.LineNumber && currentLine + 1 != line.LineNumber))                          {                              isSectionBreak = true;                          }                            currentLine = line.LineNumber;                          if (currentLine <= 999 && LineNumberColumnWidth < 30)                              LineNumberColumnWidth = 30;                          else if (currentLine > 999 && LineNumberColumnWidth < 35)                              LineNumberColumnWidth = 35;                          else if (currentLine > 9999 && LineNumberColumnWidth < 47)                              LineNumberColumnWidth = 47;                          else if (currentLine > 99999 && LineNumberColumnWidth < 50)                              LineNumberColumnWidth = 50;                          tempList.Add(new FormattedGrepLine(line' formattedResult' LineNumberColumnWidth' isSectionBreak));                      }                        if (Application.Current != null)                          Application.Current.Dispatcher.Invoke(new Action(() =>                          {                              foreach (var l in tempList) this.Add(l);                          }                      ));                      IsLoaded = true;                      IsLoading = false;                      LoadFinished(this' EventArgs.Empty);                  });              }
Magic Number,dnGREP.WPF.UserControls,MultiSelectTreeView,C:\repos\dnGrep_dnGrep\dnGREP.WPF\UserControls\MultiSelectTreeView.cs,OnTreeViewItemPreviewMouseDown,The following statement contains a magic number: if (treeViewItem == null && treeView != null)              {                  // it is possible to click *between* tree view items' so hit test a point                  // below the current point to see if there is a tree view item just below it                  var pt = e.GetPosition(treeView);                  pt.Offset(0' 10);                  var hitTest = VisualTreeHelper.HitTest(treeView' pt);                  if (hitTest != null && hitTest.VisualHit != null)                  {                      treeViewItem = FindAncestor<TreeViewItem>(hitTest.VisualHit);                      if (treeViewItem == null)                      {                          DeSelectAllItems(treeView' null);                      }                  }              }
Magic Number,dnGREP.WPF.UserControls,BusyIndicator,C:\repos\dnGrep_dnGrep\dnGREP.WPF\UserControls\BusyIndicator.xaml.cs,OnLoaded,The following statement contains a magic number: timer = new Timer(100);
Magic Number,dnGREP.WPF.UserControls,BusyIndicator,C:\repos\dnGrep_dnGrep\dnGREP.WPF\UserControls\BusyIndicator.xaml.cs,OnTimerElapsed,The following statement contains a magic number: rotationCanvas.Dispatcher.Invoke              (                  new VoidDelegete(                      delegate                      {                          SpinnerRotate.Angle += 30;                          if (SpinnerRotate.Angle == 360)                          {                              SpinnerRotate.Angle = 0;                          }                      }                      )'                  null              );
Magic Number,dnGREP.WPF.UserControls,BusyIndicator,C:\repos\dnGrep_dnGrep\dnGREP.WPF\UserControls\BusyIndicator.xaml.cs,OnTimerElapsed,The following statement contains a magic number: rotationCanvas.Dispatcher.Invoke              (                  new VoidDelegete(                      delegate                      {                          SpinnerRotate.Angle += 30;                          if (SpinnerRotate.Angle == 360)                          {                              SpinnerRotate.Angle = 0;                          }                      }                      )'                  null              );
Magic Number,dnGREP.WPF.UserControls,BusyIndicator,C:\repos\dnGrep_dnGrep\dnGREP.WPF\UserControls\BusyIndicator.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.rotationCanvas = ((System.Windows.Controls.Canvas)(target));              return;              case 2:              this.SpinnerRotate = ((System.Windows.Media.RotateTransform)(target));              return;              }
Magic Number,dnGREP.WPF.UserControls,ResultsTree,C:\repos\dnGrep_dnGrep\dnGREP.WPF\UserControls\ResultsTree.xaml.cs,treeView_PreviewTouchMove,The following statement contains a magic number: if (inputData != null && inputData.Count > 0 &&                  ctrl != null && touchIds.ContainsKey(e.TouchDevice.Id) && touchIds.Count == 2)              {                  var pNew = e.GetTouchPoint(ctrl).Position;                    var otherTouchId = touchIds.Keys.Where(k => k != e.TouchDevice.Id).FirstOrDefault();                  var p0 = touchIds[otherTouchId];                  var p1 = touchIds[e.TouchDevice.Id];                    var dx = p1.X - p0.X;                  var dy = p1.Y - p0.Y;                  var dist1 = dx * dx + dy * dy;                    dx = pNew.X - p0.X;                  dy = pNew.Y - p0.Y;                  var dist2 = dx * dx + dy * dy;                    if (Math.Abs(dist2 - dist1) > 200)                  {                      if (dist1 < dist2 && inputData.ResultsScale < 2.0)                      {                          inputData.ResultsScale *= 1.005;                      }                        if (dist1 > dist2 && inputData.ResultsScale > 0.8)                      {                          inputData.ResultsScale /= 1.005;                      }                        if (dist1 < dist2 && inputData.ResultsMenuScale < 1.5)                      {                          inputData.ResultsMenuScale *= 1.0025;                      }                        if (dist1 > dist2 && inputData.ResultsMenuScale > 1.0)                      {                          inputData.ResultsMenuScale /= 1.0025;                      }                        e.Handled = true;                  }                    // and update position for this touch                  touchIds[e.TouchDevice.Id] = pNew;              }
Magic Number,dnGREP.WPF.UserControls,ResultsTree,C:\repos\dnGrep_dnGrep\dnGREP.WPF\UserControls\ResultsTree.xaml.cs,treeView_PreviewTouchMove,The following statement contains a magic number: if (inputData != null && inputData.Count > 0 &&                  ctrl != null && touchIds.ContainsKey(e.TouchDevice.Id) && touchIds.Count == 2)              {                  var pNew = e.GetTouchPoint(ctrl).Position;                    var otherTouchId = touchIds.Keys.Where(k => k != e.TouchDevice.Id).FirstOrDefault();                  var p0 = touchIds[otherTouchId];                  var p1 = touchIds[e.TouchDevice.Id];                    var dx = p1.X - p0.X;                  var dy = p1.Y - p0.Y;                  var dist1 = dx * dx + dy * dy;                    dx = pNew.X - p0.X;                  dy = pNew.Y - p0.Y;                  var dist2 = dx * dx + dy * dy;                    if (Math.Abs(dist2 - dist1) > 200)                  {                      if (dist1 < dist2 && inputData.ResultsScale < 2.0)                      {                          inputData.ResultsScale *= 1.005;                      }                        if (dist1 > dist2 && inputData.ResultsScale > 0.8)                      {                          inputData.ResultsScale /= 1.005;                      }                        if (dist1 < dist2 && inputData.ResultsMenuScale < 1.5)                      {                          inputData.ResultsMenuScale *= 1.0025;                      }                        if (dist1 > dist2 && inputData.ResultsMenuScale > 1.0)                      {                          inputData.ResultsMenuScale /= 1.0025;                      }                        e.Handled = true;                  }                    // and update position for this touch                  touchIds[e.TouchDevice.Id] = pNew;              }
Magic Number,dnGREP.WPF.UserControls,ResultsTree,C:\repos\dnGrep_dnGrep\dnGREP.WPF\UserControls\ResultsTree.xaml.cs,treeView_PreviewTouchMove,The following statement contains a magic number: if (inputData != null && inputData.Count > 0 &&                  ctrl != null && touchIds.ContainsKey(e.TouchDevice.Id) && touchIds.Count == 2)              {                  var pNew = e.GetTouchPoint(ctrl).Position;                    var otherTouchId = touchIds.Keys.Where(k => k != e.TouchDevice.Id).FirstOrDefault();                  var p0 = touchIds[otherTouchId];                  var p1 = touchIds[e.TouchDevice.Id];                    var dx = p1.X - p0.X;                  var dy = p1.Y - p0.Y;                  var dist1 = dx * dx + dy * dy;                    dx = pNew.X - p0.X;                  dy = pNew.Y - p0.Y;                  var dist2 = dx * dx + dy * dy;                    if (Math.Abs(dist2 - dist1) > 200)                  {                      if (dist1 < dist2 && inputData.ResultsScale < 2.0)                      {                          inputData.ResultsScale *= 1.005;                      }                        if (dist1 > dist2 && inputData.ResultsScale > 0.8)                      {                          inputData.ResultsScale /= 1.005;                      }                        if (dist1 < dist2 && inputData.ResultsMenuScale < 1.5)                      {                          inputData.ResultsMenuScale *= 1.0025;                      }                        if (dist1 > dist2 && inputData.ResultsMenuScale > 1.0)                      {                          inputData.ResultsMenuScale /= 1.0025;                      }                        e.Handled = true;                  }                    // and update position for this touch                  touchIds[e.TouchDevice.Id] = pNew;              }
Magic Number,dnGREP.WPF.UserControls,ResultsTree,C:\repos\dnGrep_dnGrep\dnGREP.WPF\UserControls\ResultsTree.xaml.cs,treeView_PreviewTouchMove,The following statement contains a magic number: if (inputData != null && inputData.Count > 0 &&                  ctrl != null && touchIds.ContainsKey(e.TouchDevice.Id) && touchIds.Count == 2)              {                  var pNew = e.GetTouchPoint(ctrl).Position;                    var otherTouchId = touchIds.Keys.Where(k => k != e.TouchDevice.Id).FirstOrDefault();                  var p0 = touchIds[otherTouchId];                  var p1 = touchIds[e.TouchDevice.Id];                    var dx = p1.X - p0.X;                  var dy = p1.Y - p0.Y;                  var dist1 = dx * dx + dy * dy;                    dx = pNew.X - p0.X;                  dy = pNew.Y - p0.Y;                  var dist2 = dx * dx + dy * dy;                    if (Math.Abs(dist2 - dist1) > 200)                  {                      if (dist1 < dist2 && inputData.ResultsScale < 2.0)                      {                          inputData.ResultsScale *= 1.005;                      }                        if (dist1 > dist2 && inputData.ResultsScale > 0.8)                      {                          inputData.ResultsScale /= 1.005;                      }                        if (dist1 < dist2 && inputData.ResultsMenuScale < 1.5)                      {                          inputData.ResultsMenuScale *= 1.0025;                      }                        if (dist1 > dist2 && inputData.ResultsMenuScale > 1.0)                      {                          inputData.ResultsMenuScale /= 1.0025;                      }                        e.Handled = true;                  }                    // and update position for this touch                  touchIds[e.TouchDevice.Id] = pNew;              }
Magic Number,dnGREP.WPF.UserControls,ResultsTree,C:\repos\dnGrep_dnGrep\dnGREP.WPF\UserControls\ResultsTree.xaml.cs,treeView_PreviewTouchMove,The following statement contains a magic number: if (inputData != null && inputData.Count > 0 &&                  ctrl != null && touchIds.ContainsKey(e.TouchDevice.Id) && touchIds.Count == 2)              {                  var pNew = e.GetTouchPoint(ctrl).Position;                    var otherTouchId = touchIds.Keys.Where(k => k != e.TouchDevice.Id).FirstOrDefault();                  var p0 = touchIds[otherTouchId];                  var p1 = touchIds[e.TouchDevice.Id];                    var dx = p1.X - p0.X;                  var dy = p1.Y - p0.Y;                  var dist1 = dx * dx + dy * dy;                    dx = pNew.X - p0.X;                  dy = pNew.Y - p0.Y;                  var dist2 = dx * dx + dy * dy;                    if (Math.Abs(dist2 - dist1) > 200)                  {                      if (dist1 < dist2 && inputData.ResultsScale < 2.0)                      {                          inputData.ResultsScale *= 1.005;                      }                        if (dist1 > dist2 && inputData.ResultsScale > 0.8)                      {                          inputData.ResultsScale /= 1.005;                      }                        if (dist1 < dist2 && inputData.ResultsMenuScale < 1.5)                      {                          inputData.ResultsMenuScale *= 1.0025;                      }                        if (dist1 > dist2 && inputData.ResultsMenuScale > 1.0)                      {                          inputData.ResultsMenuScale /= 1.0025;                      }                        e.Handled = true;                  }                    // and update position for this touch                  touchIds[e.TouchDevice.Id] = pNew;              }
Magic Number,dnGREP.WPF.UserControls,ResultsTree,C:\repos\dnGrep_dnGrep\dnGREP.WPF\UserControls\ResultsTree.xaml.cs,treeView_PreviewTouchMove,The following statement contains a magic number: if (inputData != null && inputData.Count > 0 &&                  ctrl != null && touchIds.ContainsKey(e.TouchDevice.Id) && touchIds.Count == 2)              {                  var pNew = e.GetTouchPoint(ctrl).Position;                    var otherTouchId = touchIds.Keys.Where(k => k != e.TouchDevice.Id).FirstOrDefault();                  var p0 = touchIds[otherTouchId];                  var p1 = touchIds[e.TouchDevice.Id];                    var dx = p1.X - p0.X;                  var dy = p1.Y - p0.Y;                  var dist1 = dx * dx + dy * dy;                    dx = pNew.X - p0.X;                  dy = pNew.Y - p0.Y;                  var dist2 = dx * dx + dy * dy;                    if (Math.Abs(dist2 - dist1) > 200)                  {                      if (dist1 < dist2 && inputData.ResultsScale < 2.0)                      {                          inputData.ResultsScale *= 1.005;                      }                        if (dist1 > dist2 && inputData.ResultsScale > 0.8)                      {                          inputData.ResultsScale /= 1.005;                      }                        if (dist1 < dist2 && inputData.ResultsMenuScale < 1.5)                      {                          inputData.ResultsMenuScale *= 1.0025;                      }                        if (dist1 > dist2 && inputData.ResultsMenuScale > 1.0)                      {                          inputData.ResultsMenuScale /= 1.0025;                      }                        e.Handled = true;                  }                    // and update position for this touch                  touchIds[e.TouchDevice.Id] = pNew;              }
Magic Number,dnGREP.WPF.UserControls,ResultsTree,C:\repos\dnGrep_dnGrep\dnGREP.WPF\UserControls\ResultsTree.xaml.cs,treeView_PreviewTouchMove,The following statement contains a magic number: if (inputData != null && inputData.Count > 0 &&                  ctrl != null && touchIds.ContainsKey(e.TouchDevice.Id) && touchIds.Count == 2)              {                  var pNew = e.GetTouchPoint(ctrl).Position;                    var otherTouchId = touchIds.Keys.Where(k => k != e.TouchDevice.Id).FirstOrDefault();                  var p0 = touchIds[otherTouchId];                  var p1 = touchIds[e.TouchDevice.Id];                    var dx = p1.X - p0.X;                  var dy = p1.Y - p0.Y;                  var dist1 = dx * dx + dy * dy;                    dx = pNew.X - p0.X;                  dy = pNew.Y - p0.Y;                  var dist2 = dx * dx + dy * dy;                    if (Math.Abs(dist2 - dist1) > 200)                  {                      if (dist1 < dist2 && inputData.ResultsScale < 2.0)                      {                          inputData.ResultsScale *= 1.005;                      }                        if (dist1 > dist2 && inputData.ResultsScale > 0.8)                      {                          inputData.ResultsScale /= 1.005;                      }                        if (dist1 < dist2 && inputData.ResultsMenuScale < 1.5)                      {                          inputData.ResultsMenuScale *= 1.0025;                      }                        if (dist1 > dist2 && inputData.ResultsMenuScale > 1.0)                      {                          inputData.ResultsMenuScale /= 1.0025;                      }                        e.Handled = true;                  }                    // and update position for this touch                  touchIds[e.TouchDevice.Id] = pNew;              }
Magic Number,dnGREP.WPF.UserControls,ResultsTree,C:\repos\dnGrep_dnGrep\dnGREP.WPF\UserControls\ResultsTree.xaml.cs,treeView_PreviewTouchMove,The following statement contains a magic number: if (inputData != null && inputData.Count > 0 &&                  ctrl != null && touchIds.ContainsKey(e.TouchDevice.Id) && touchIds.Count == 2)              {                  var pNew = e.GetTouchPoint(ctrl).Position;                    var otherTouchId = touchIds.Keys.Where(k => k != e.TouchDevice.Id).FirstOrDefault();                  var p0 = touchIds[otherTouchId];                  var p1 = touchIds[e.TouchDevice.Id];                    var dx = p1.X - p0.X;                  var dy = p1.Y - p0.Y;                  var dist1 = dx * dx + dy * dy;                    dx = pNew.X - p0.X;                  dy = pNew.Y - p0.Y;                  var dist2 = dx * dx + dy * dy;                    if (Math.Abs(dist2 - dist1) > 200)                  {                      if (dist1 < dist2 && inputData.ResultsScale < 2.0)                      {                          inputData.ResultsScale *= 1.005;                      }                        if (dist1 > dist2 && inputData.ResultsScale > 0.8)                      {                          inputData.ResultsScale /= 1.005;                      }                        if (dist1 < dist2 && inputData.ResultsMenuScale < 1.5)                      {                          inputData.ResultsMenuScale *= 1.0025;                      }                        if (dist1 > dist2 && inputData.ResultsMenuScale > 1.0)                      {                          inputData.ResultsMenuScale /= 1.0025;                      }                        e.Handled = true;                  }                    // and update position for this touch                  touchIds[e.TouchDevice.Id] = pNew;              }
Magic Number,dnGREP.WPF.UserControls,ResultsTree,C:\repos\dnGrep_dnGrep\dnGREP.WPF\UserControls\ResultsTree.xaml.cs,treeView_PreviewTouchMove,The following statement contains a magic number: if (inputData != null && inputData.Count > 0 &&                  ctrl != null && touchIds.ContainsKey(e.TouchDevice.Id) && touchIds.Count == 2)              {                  var pNew = e.GetTouchPoint(ctrl).Position;                    var otherTouchId = touchIds.Keys.Where(k => k != e.TouchDevice.Id).FirstOrDefault();                  var p0 = touchIds[otherTouchId];                  var p1 = touchIds[e.TouchDevice.Id];                    var dx = p1.X - p0.X;                  var dy = p1.Y - p0.Y;                  var dist1 = dx * dx + dy * dy;                    dx = pNew.X - p0.X;                  dy = pNew.Y - p0.Y;                  var dist2 = dx * dx + dy * dy;                    if (Math.Abs(dist2 - dist1) > 200)                  {                      if (dist1 < dist2 && inputData.ResultsScale < 2.0)                      {                          inputData.ResultsScale *= 1.005;                      }                        if (dist1 > dist2 && inputData.ResultsScale > 0.8)                      {                          inputData.ResultsScale /= 1.005;                      }                        if (dist1 < dist2 && inputData.ResultsMenuScale < 1.5)                      {                          inputData.ResultsMenuScale *= 1.0025;                      }                        if (dist1 > dist2 && inputData.ResultsMenuScale > 1.0)                      {                          inputData.ResultsMenuScale /= 1.0025;                      }                        e.Handled = true;                  }                    // and update position for this touch                  touchIds[e.TouchDevice.Id] = pNew;              }
Magic Number,dnGREP.WPF.UserControls,ResultsTree,C:\repos\dnGrep_dnGrep\dnGREP.WPF\UserControls\ResultsTree.xaml.cs,treeView_PreviewMouseWheel,The following statement contains a magic number: if (e.Delta > 0 && inputData.ResultsScale < 2.0)              {                  inputData.ResultsScale *= 1.05;              }
Magic Number,dnGREP.WPF.UserControls,ResultsTree,C:\repos\dnGrep_dnGrep\dnGREP.WPF\UserControls\ResultsTree.xaml.cs,treeView_PreviewMouseWheel,The following statement contains a magic number: if (e.Delta > 0 && inputData.ResultsScale < 2.0)              {                  inputData.ResultsScale *= 1.05;              }
Magic Number,dnGREP.WPF.UserControls,ResultsTree,C:\repos\dnGrep_dnGrep\dnGREP.WPF\UserControls\ResultsTree.xaml.cs,treeView_PreviewMouseWheel,The following statement contains a magic number: if (e.Delta < 0 && inputData.ResultsScale > 0.8)              {                  inputData.ResultsScale /= 1.05;              }
Magic Number,dnGREP.WPF.UserControls,ResultsTree,C:\repos\dnGrep_dnGrep\dnGREP.WPF\UserControls\ResultsTree.xaml.cs,treeView_PreviewMouseWheel,The following statement contains a magic number: if (e.Delta < 0 && inputData.ResultsScale > 0.8)              {                  inputData.ResultsScale /= 1.05;              }
Magic Number,dnGREP.WPF.UserControls,ResultsTree,C:\repos\dnGrep_dnGrep\dnGREP.WPF\UserControls\ResultsTree.xaml.cs,treeView_PreviewMouseWheel,The following statement contains a magic number: if (e.Delta > 0 && inputData.ResultsMenuScale < 1.5)              {                  inputData.ResultsMenuScale *= 1.025;              }
Magic Number,dnGREP.WPF.UserControls,ResultsTree,C:\repos\dnGrep_dnGrep\dnGREP.WPF\UserControls\ResultsTree.xaml.cs,treeView_PreviewMouseWheel,The following statement contains a magic number: if (e.Delta > 0 && inputData.ResultsMenuScale < 1.5)              {                  inputData.ResultsMenuScale *= 1.025;              }
Magic Number,dnGREP.WPF.UserControls,ResultsTree,C:\repos\dnGrep_dnGrep\dnGREP.WPF\UserControls\ResultsTree.xaml.cs,treeView_PreviewMouseWheel,The following statement contains a magic number: if (e.Delta < 0 && inputData.ResultsMenuScale > 1.0)              {                  inputData.ResultsMenuScale /= 1.025;              }
Magic Number,dnGREP.WPF.UserControls,ResultsTree,C:\repos\dnGrep_dnGrep\dnGREP.WPF\UserControls\ResultsTree.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.treeView = ((dnGREP.WPF.UserControls.MultiSelectTreeView)(target));              return;              case 2:                            #line 86 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOpenFile_Click);                            #line default              #line hidden              return;              case 3:                            #line 87 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOpenFileCustomEditor_Click);                            #line default              #line hidden              return;              case 4:                            #line 89 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOpenContainingFolder_Click);                            #line default              #line hidden              return;              case 5:                            #line 90 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnShowFileProperties_Click);                            #line default              #line hidden              return;              case 6:                            #line 92 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyFileNames_Click);                            #line default              #line hidden              return;              case 7:                            #line 93 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyFullFilePath_Click);                            #line default              #line hidden              return;              case 8:                            #line 94 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyGrepLine_Click);                            #line default              #line hidden              return;              case 9:                            #line 96 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnExclude_Click);                            #line default              #line hidden              return;              case 10:                            #line 97 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnExpandAll_Click);                            #line default              #line hidden              return;              case 11:                            #line 98 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCollapseAll_Click);                            #line default              #line hidden              return;              case 12:                            #line 99 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnResetZoom_Click);                            #line default              #line hidden              return;              }
Magic Number,dnGREP.WPF.UserControls,ResultsTree,C:\repos\dnGrep_dnGrep\dnGREP.WPF\UserControls\ResultsTree.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.treeView = ((dnGREP.WPF.UserControls.MultiSelectTreeView)(target));              return;              case 2:                            #line 86 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOpenFile_Click);                            #line default              #line hidden              return;              case 3:                            #line 87 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOpenFileCustomEditor_Click);                            #line default              #line hidden              return;              case 4:                            #line 89 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOpenContainingFolder_Click);                            #line default              #line hidden              return;              case 5:                            #line 90 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnShowFileProperties_Click);                            #line default              #line hidden              return;              case 6:                            #line 92 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyFileNames_Click);                            #line default              #line hidden              return;              case 7:                            #line 93 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyFullFilePath_Click);                            #line default              #line hidden              return;              case 8:                            #line 94 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyGrepLine_Click);                            #line default              #line hidden              return;              case 9:                            #line 96 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnExclude_Click);                            #line default              #line hidden              return;              case 10:                            #line 97 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnExpandAll_Click);                            #line default              #line hidden              return;              case 11:                            #line 98 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCollapseAll_Click);                            #line default              #line hidden              return;              case 12:                            #line 99 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnResetZoom_Click);                            #line default              #line hidden              return;              }
Magic Number,dnGREP.WPF.UserControls,ResultsTree,C:\repos\dnGrep_dnGrep\dnGREP.WPF\UserControls\ResultsTree.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.treeView = ((dnGREP.WPF.UserControls.MultiSelectTreeView)(target));              return;              case 2:                            #line 86 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOpenFile_Click);                            #line default              #line hidden              return;              case 3:                            #line 87 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOpenFileCustomEditor_Click);                            #line default              #line hidden              return;              case 4:                            #line 89 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOpenContainingFolder_Click);                            #line default              #line hidden              return;              case 5:                            #line 90 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnShowFileProperties_Click);                            #line default              #line hidden              return;              case 6:                            #line 92 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyFileNames_Click);                            #line default              #line hidden              return;              case 7:                            #line 93 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyFullFilePath_Click);                            #line default              #line hidden              return;              case 8:                            #line 94 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyGrepLine_Click);                            #line default              #line hidden              return;              case 9:                            #line 96 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnExclude_Click);                            #line default              #line hidden              return;              case 10:                            #line 97 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnExpandAll_Click);                            #line default              #line hidden              return;              case 11:                            #line 98 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCollapseAll_Click);                            #line default              #line hidden              return;              case 12:                            #line 99 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnResetZoom_Click);                            #line default              #line hidden              return;              }
Magic Number,dnGREP.WPF.UserControls,ResultsTree,C:\repos\dnGrep_dnGrep\dnGREP.WPF\UserControls\ResultsTree.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.treeView = ((dnGREP.WPF.UserControls.MultiSelectTreeView)(target));              return;              case 2:                            #line 86 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOpenFile_Click);                            #line default              #line hidden              return;              case 3:                            #line 87 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOpenFileCustomEditor_Click);                            #line default              #line hidden              return;              case 4:                            #line 89 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOpenContainingFolder_Click);                            #line default              #line hidden              return;              case 5:                            #line 90 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnShowFileProperties_Click);                            #line default              #line hidden              return;              case 6:                            #line 92 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyFileNames_Click);                            #line default              #line hidden              return;              case 7:                            #line 93 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyFullFilePath_Click);                            #line default              #line hidden              return;              case 8:                            #line 94 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyGrepLine_Click);                            #line default              #line hidden              return;              case 9:                            #line 96 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnExclude_Click);                            #line default              #line hidden              return;              case 10:                            #line 97 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnExpandAll_Click);                            #line default              #line hidden              return;              case 11:                            #line 98 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCollapseAll_Click);                            #line default              #line hidden              return;              case 12:                            #line 99 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnResetZoom_Click);                            #line default              #line hidden              return;              }
Magic Number,dnGREP.WPF.UserControls,ResultsTree,C:\repos\dnGrep_dnGrep\dnGREP.WPF\UserControls\ResultsTree.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.treeView = ((dnGREP.WPF.UserControls.MultiSelectTreeView)(target));              return;              case 2:                            #line 86 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOpenFile_Click);                            #line default              #line hidden              return;              case 3:                            #line 87 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOpenFileCustomEditor_Click);                            #line default              #line hidden              return;              case 4:                            #line 89 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOpenContainingFolder_Click);                            #line default              #line hidden              return;              case 5:                            #line 90 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnShowFileProperties_Click);                            #line default              #line hidden              return;              case 6:                            #line 92 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyFileNames_Click);                            #line default              #line hidden              return;              case 7:                            #line 93 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyFullFilePath_Click);                            #line default              #line hidden              return;              case 8:                            #line 94 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyGrepLine_Click);                            #line default              #line hidden              return;              case 9:                            #line 96 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnExclude_Click);                            #line default              #line hidden              return;              case 10:                            #line 97 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnExpandAll_Click);                            #line default              #line hidden              return;              case 11:                            #line 98 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCollapseAll_Click);                            #line default              #line hidden              return;              case 12:                            #line 99 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnResetZoom_Click);                            #line default              #line hidden              return;              }
Magic Number,dnGREP.WPF.UserControls,ResultsTree,C:\repos\dnGrep_dnGrep\dnGREP.WPF\UserControls\ResultsTree.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.treeView = ((dnGREP.WPF.UserControls.MultiSelectTreeView)(target));              return;              case 2:                            #line 86 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOpenFile_Click);                            #line default              #line hidden              return;              case 3:                            #line 87 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOpenFileCustomEditor_Click);                            #line default              #line hidden              return;              case 4:                            #line 89 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOpenContainingFolder_Click);                            #line default              #line hidden              return;              case 5:                            #line 90 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnShowFileProperties_Click);                            #line default              #line hidden              return;              case 6:                            #line 92 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyFileNames_Click);                            #line default              #line hidden              return;              case 7:                            #line 93 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyFullFilePath_Click);                            #line default              #line hidden              return;              case 8:                            #line 94 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyGrepLine_Click);                            #line default              #line hidden              return;              case 9:                            #line 96 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnExclude_Click);                            #line default              #line hidden              return;              case 10:                            #line 97 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnExpandAll_Click);                            #line default              #line hidden              return;              case 11:                            #line 98 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCollapseAll_Click);                            #line default              #line hidden              return;              case 12:                            #line 99 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnResetZoom_Click);                            #line default              #line hidden              return;              }
Magic Number,dnGREP.WPF.UserControls,ResultsTree,C:\repos\dnGrep_dnGrep\dnGREP.WPF\UserControls\ResultsTree.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.treeView = ((dnGREP.WPF.UserControls.MultiSelectTreeView)(target));              return;              case 2:                            #line 86 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOpenFile_Click);                            #line default              #line hidden              return;              case 3:                            #line 87 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOpenFileCustomEditor_Click);                            #line default              #line hidden              return;              case 4:                            #line 89 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOpenContainingFolder_Click);                            #line default              #line hidden              return;              case 5:                            #line 90 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnShowFileProperties_Click);                            #line default              #line hidden              return;              case 6:                            #line 92 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyFileNames_Click);                            #line default              #line hidden              return;              case 7:                            #line 93 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyFullFilePath_Click);                            #line default              #line hidden              return;              case 8:                            #line 94 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyGrepLine_Click);                            #line default              #line hidden              return;              case 9:                            #line 96 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnExclude_Click);                            #line default              #line hidden              return;              case 10:                            #line 97 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnExpandAll_Click);                            #line default              #line hidden              return;              case 11:                            #line 98 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCollapseAll_Click);                            #line default              #line hidden              return;              case 12:                            #line 99 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnResetZoom_Click);                            #line default              #line hidden              return;              }
Magic Number,dnGREP.WPF.UserControls,ResultsTree,C:\repos\dnGrep_dnGrep\dnGREP.WPF\UserControls\ResultsTree.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.treeView = ((dnGREP.WPF.UserControls.MultiSelectTreeView)(target));              return;              case 2:                            #line 86 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOpenFile_Click);                            #line default              #line hidden              return;              case 3:                            #line 87 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOpenFileCustomEditor_Click);                            #line default              #line hidden              return;              case 4:                            #line 89 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOpenContainingFolder_Click);                            #line default              #line hidden              return;              case 5:                            #line 90 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnShowFileProperties_Click);                            #line default              #line hidden              return;              case 6:                            #line 92 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyFileNames_Click);                            #line default              #line hidden              return;              case 7:                            #line 93 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyFullFilePath_Click);                            #line default              #line hidden              return;              case 8:                            #line 94 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyGrepLine_Click);                            #line default              #line hidden              return;              case 9:                            #line 96 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnExclude_Click);                            #line default              #line hidden              return;              case 10:                            #line 97 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnExpandAll_Click);                            #line default              #line hidden              return;              case 11:                            #line 98 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCollapseAll_Click);                            #line default              #line hidden              return;              case 12:                            #line 99 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnResetZoom_Click);                            #line default              #line hidden              return;              }
Magic Number,dnGREP.WPF.UserControls,ResultsTree,C:\repos\dnGrep_dnGrep\dnGREP.WPF\UserControls\ResultsTree.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.treeView = ((dnGREP.WPF.UserControls.MultiSelectTreeView)(target));              return;              case 2:                            #line 86 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOpenFile_Click);                            #line default              #line hidden              return;              case 3:                            #line 87 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOpenFileCustomEditor_Click);                            #line default              #line hidden              return;              case 4:                            #line 89 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOpenContainingFolder_Click);                            #line default              #line hidden              return;              case 5:                            #line 90 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnShowFileProperties_Click);                            #line default              #line hidden              return;              case 6:                            #line 92 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyFileNames_Click);                            #line default              #line hidden              return;              case 7:                            #line 93 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyFullFilePath_Click);                            #line default              #line hidden              return;              case 8:                            #line 94 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyGrepLine_Click);                            #line default              #line hidden              return;              case 9:                            #line 96 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnExclude_Click);                            #line default              #line hidden              return;              case 10:                            #line 97 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnExpandAll_Click);                            #line default              #line hidden              return;              case 11:                            #line 98 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCollapseAll_Click);                            #line default              #line hidden              return;              case 12:                            #line 99 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnResetZoom_Click);                            #line default              #line hidden              return;              }
Magic Number,dnGREP.WPF.UserControls,ResultsTree,C:\repos\dnGrep_dnGrep\dnGREP.WPF\UserControls\ResultsTree.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.treeView = ((dnGREP.WPF.UserControls.MultiSelectTreeView)(target));              return;              case 2:                            #line 86 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOpenFile_Click);                            #line default              #line hidden              return;              case 3:                            #line 87 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOpenFileCustomEditor_Click);                            #line default              #line hidden              return;              case 4:                            #line 89 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOpenContainingFolder_Click);                            #line default              #line hidden              return;              case 5:                            #line 90 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnShowFileProperties_Click);                            #line default              #line hidden              return;              case 6:                            #line 92 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyFileNames_Click);                            #line default              #line hidden              return;              case 7:                            #line 93 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyFullFilePath_Click);                            #line default              #line hidden              return;              case 8:                            #line 94 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyGrepLine_Click);                            #line default              #line hidden              return;              case 9:                            #line 96 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnExclude_Click);                            #line default              #line hidden              return;              case 10:                            #line 97 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnExpandAll_Click);                            #line default              #line hidden              return;              case 11:                            #line 98 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCollapseAll_Click);                            #line default              #line hidden              return;              case 12:                            #line 99 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnResetZoom_Click);                            #line default              #line hidden              return;              }
Magic Number,dnGREP.WPF.UserControls,ResultsTree,C:\repos\dnGrep_dnGrep\dnGREP.WPF\UserControls\ResultsTree.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.treeView = ((dnGREP.WPF.UserControls.MultiSelectTreeView)(target));              return;              case 2:                            #line 86 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOpenFile_Click);                            #line default              #line hidden              return;              case 3:                            #line 87 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOpenFileCustomEditor_Click);                            #line default              #line hidden              return;              case 4:                            #line 89 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOpenContainingFolder_Click);                            #line default              #line hidden              return;              case 5:                            #line 90 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnShowFileProperties_Click);                            #line default              #line hidden              return;              case 6:                            #line 92 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyFileNames_Click);                            #line default              #line hidden              return;              case 7:                            #line 93 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyFullFilePath_Click);                            #line default              #line hidden              return;              case 8:                            #line 94 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyGrepLine_Click);                            #line default              #line hidden              return;              case 9:                            #line 96 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnExclude_Click);                            #line default              #line hidden              return;              case 10:                            #line 97 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnExpandAll_Click);                            #line default              #line hidden              return;              case 11:                            #line 98 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCollapseAll_Click);                            #line default              #line hidden              return;              case 12:                            #line 99 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnResetZoom_Click);                            #line default              #line hidden              return;              }
Magic Number,dnGREP.WPF.UserControls,ResultsTree,C:\repos\dnGrep_dnGrep\dnGREP.WPF\UserControls\ResultsTree.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 13:              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseRightButtonDownEvent;                            #line 107 "..\..\..\UserControls\ResultsTree.xaml"              eventSetter.Handler = new System.Windows.Input.MouseButtonEventHandler(this.treeView_MouseDown);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.PreviewMouseLeftButtonDownEvent;                            #line 110 "..\..\..\UserControls\ResultsTree.xaml"              eventSetter.Handler = new System.Windows.Input.MouseButtonEventHandler(this.treeView_PreviewMouseLeftButtonDown);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.PreviewMouseMoveEvent;                            #line 113 "..\..\..\UserControls\ResultsTree.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.treeView_PreviewMouseMove);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.FrameworkElement.RequestBringIntoViewEvent;                            #line 116 "..\..\..\UserControls\ResultsTree.xaml"              eventSetter.Handler = new System.Windows.RequestBringIntoViewEventHandler(this.treeView_RequestBringIntoView);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              break;              }
Missing Default,dnGREP.WPF,BaseMainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\BaseMainViewModel.cs,UpdateState,The following switch statement is missing a default case: switch (name)              {                  case "Multiline":                  case "Singleline":                  case "WholeWord":                  case "CaseSensitive":                  case "StopAfterFirstMatch":                      if (Multiline)                          TextBoxStyle = "{StaticResource ExpandedTextbox}";                      else                          TextBoxStyle = "";                        CanReplace = false;                      break;                    case "UseFileSizeFilter":                      IsSizeFilterSet = UseFileSizeFilter == FileSizeFilter.Yes;                      break;                    case "UseFileDateFilter":                      IsDateFilterSet = UseFileDateFilter != FileDateFilter.None;                      IsDatesRangeSet = IsDateFilterSet && TypeOfTimeRangeFilter == FileTimeRange.Dates;                      IsHoursRangeSet = IsDateFilterSet && TypeOfTimeRangeFilter == FileTimeRange.Hours;                      if (!IsDateFilterSet)                          TypeOfTimeRangeFilter = FileTimeRange.None;                      else if (TypeOfTimeRangeFilter == FileTimeRange.None)                          TypeOfTimeRangeFilter = FileTimeRange.Dates;                      break;                    case "TypeOfTimeRangeFilter":                      IsDatesRangeSet = IsDateFilterSet && TypeOfTimeRangeFilter == FileTimeRange.Dates;                      IsHoursRangeSet = IsDateFilterSet && TypeOfTimeRangeFilter == FileTimeRange.Hours;                      break;              }
Missing Default,dnGREP.WPF,MainForm,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\MainView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.MainForm_Closing);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).Activated += new System.EventHandler(this.Window_Activated);                            #line default              #line hidden                            #line 12 "..\..\..\Views\MainView.xaml"              ((dnGREP.WPF.MainForm)(target)).StateChanged += new System.EventHandler(this.Window_StateChanged);                            #line default              #line hidden              return;              case 2:                            #line 30 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.DockPanel)(target)).ManipulationBoundaryFeedback += new System.EventHandler<System.Windows.Input.ManipulationBoundaryFeedbackEventArgs>(this.ManipulationBoundaryFeedbackHandler);                            #line default              #line hidden              return;              case 3:              this.mnuMainMenu = ((System.Windows.Controls.Menu)(target));              return;              case 4:              this.SearchText = ((System.Windows.Controls.ComboBox)(target));              return;              case 5:                            #line 82 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Expander)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.Expander_SizeChanged);                            #line default              #line hidden              return;              case 6:              this.fileOptions = ((System.Windows.Controls.TextBlock)(target));              return;              case 7:                            #line 91 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.WrapPanel)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.WrapPanel_SizeChanged);                            #line default              #line hidden              return;              case 8:              this.LeftFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 9:              this.rbFilterAllSizes = ((System.Windows.Controls.RadioButton)(target));              return;              case 10:              this.rbFilterSpecificSize = ((System.Windows.Controls.RadioButton)(target));              return;              case 11:              this.tbFileSizeFrom = ((System.Windows.Controls.TextBox)(target));                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 100 "..\..\..\Views\MainView.xaml"              this.tbFileSizeFrom.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 12:              this.tbFileSizeTo = ((System.Windows.Controls.TextBox)(target));                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 111 "..\..\..\Views\MainView.xaml"              this.tbFileSizeTo.AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 13:              this.cbIncludeSubfolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 14:              this.cbIncludeHiddenFolders = ((System.Windows.Controls.CheckBox)(target));              return;              case 15:              this.cbIncludeBinary = ((System.Windows.Controls.CheckBox)(target));              return;              case 16:              this.MiddleFileOptions = ((System.Windows.Controls.StackPanel)(target));              return;              case 17:                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 167 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 18:                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 172 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBoxPasting));                            #line default              #line hidden              return;              case 19:              this.SpacerFileOptions = ((System.Windows.Controls.Border)(target));              return;              case 20:              this.RightFileOptions = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.rbFileRegex = ((System.Windows.Controls.RadioButton)(target));              return;              case 22:              this.rbFileAsterisk = ((System.Windows.Controls.RadioButton)(target));              return;              case 23:              this.cbEncoding = ((System.Windows.Controls.ComboBox)(target));                            #line 211 "..\..\..\Views\MainView.xaml"              this.cbEncoding.Initialized += new System.EventHandler(this.cbEncoding_Initialized);                            #line default              #line hidden              return;              case 24:              this.tbFilePattern = ((System.Windows.Controls.ComboBox)(target));                            #line 230 "..\..\..\Views\MainView.xaml"              this.tbFilePattern.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 25:              this.cbIncludeArchives = ((System.Windows.Controls.CheckBox)(target));              return;              case 26:              this.pathsToIgnoreLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 27:              this.tbFilePatternIgnore = ((System.Windows.Controls.ComboBox)(target));                            #line 244 "..\..\..\Views\MainView.xaml"              this.tbFilePatternIgnore.GotFocus += new System.Windows.RoutedEventHandler(this.TextBoxFocus);                            #line default              #line hidden              return;              case 28:              this.tbSearchFor = ((System.Windows.Controls.ComboBox)(target));              return;              case 29:              this.tbReplaceWith = ((System.Windows.Controls.ComboBox)(target));              return;              case 30:                            #line 323 "..\..\..\Views\MainView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOtherActions_Click);                            #line default              #line hidden              return;              case 31:              this.advanceContextMenu = ((System.Windows.Controls.ContextMenu)(target));              return;              }
Missing Default,dnGREP.WPF,MainViewModel,C:\repos\dnGrep_dnGrep\dnGREP.WPF\ViewModels\MainViewModel.cs,SaveResultsToFile,The following switch statement is missing a default case: switch (dlg.FilterIndex)                              {                                  case 1:                                      Utils.SaveResultsReport(SearchResults.GetList()' GetSearchOptions()' dlg.FileName);                                      break;                                  case 2:                                      Utils.SaveResultsAsText(SearchResults.GetList()' dlg.FileName);                                      break;                                  case 3:                                      Utils.SaveResultsAsCSV(SearchResults.GetList()' dlg.FileName);                                      break;                              }
Missing Default,dnGREP.WPF,OptionsView,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\OptionsView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.tbMainPanel = ((System.Windows.Controls.TabControl)(target));              return;              case 2:              this.tbGeneralTab = ((System.Windows.Controls.TabItem)(target));              return;              case 3:              this.grShell = ((System.Windows.Controls.GroupBox)(target));              return;              case 4:              this.cbRegisterShell = ((System.Windows.Controls.CheckBox)(target));              return;              case 5:              this.cbRegisterStartup = ((System.Windows.Controls.CheckBox)(target));              return;              case 6:              this.cbCheckForUpdates = ((System.Windows.Controls.CheckBox)(target));              return;              case 7:              this.tbUpdateInterval = ((System.Windows.Controls.TextBox)(target));              return;              case 8:              this.btnBrowse = ((System.Windows.Controls.Button)(target));              return;              case 9:              this.tbUserInterfaceTab = ((System.Windows.Controls.TabItem)(target));              return;              case 10:              this.cbShowPath = ((System.Windows.Controls.CheckBox)(target));              return;              case 11:              this.cbShowContext = ((System.Windows.Controls.CheckBox)(target));              return;              case 12:              this.cbSearchFileNameOnly = ((System.Windows.Controls.CheckBox)(target));              return;              case 13:              this.cbExpandResult = ((System.Windows.Controls.CheckBox)(target));              return;              case 14:              this.cbShowMatchVerbose = ((System.Windows.Controls.CheckBox)(target));              return;              case 15:                            #line 118 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 118 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 16:                            #line 123 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 123 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 17:                            #line 128 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewTextInput += new System.Windows.Input.TextCompositionEventHandler(this.TextBox_PreviewTextInput);                            #line default              #line hidden                            #line 128 "..\..\..\Views\OptionsView.xaml"              ((System.Windows.Controls.TextBox)(target)).AddHandler(System.Windows.DataObject.PastingEvent' new System.Windows.DataObjectPastingEventHandler(this.TextBox_Pasting));                            #line default              #line hidden              return;              case 18:              this.btnClearPreviousSearches = ((System.Windows.Controls.Button)(target));              return;              case 19:              this.tbSearchOptionsTab = ((System.Windows.Controls.TabItem)(target));              return;              case 20:              this.tbFuzzyMatchThreshold = ((System.Windows.Controls.TextBox)(target));              return;              }
Missing Default,dnGREP.WPF,Test,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\Test.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.cbHistory = ((System.Windows.Controls.ComboBox)(target));                            #line 15 "..\..\..\Views\Test.xaml"              this.cbHistory.MouseDown += new System.Windows.Input.MouseButtonEventHandler(this.cbHistory_MouseDown);                            #line default              #line hidden                            #line 15 "..\..\..\Views\Test.xaml"              this.cbHistory.PreviewMouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.cbHistory_MouseDown);                            #line default              #line hidden              return;              case 2:              this.textBox1 = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.button1 = ((System.Windows.Controls.Button)(target));                            #line 32 "..\..\..\Views\Test.xaml"              this.button1.Click += new System.Windows.RoutedEventHandler(this.button1_Click);                            #line default              #line hidden                            #line 33 "..\..\..\Views\Test.xaml"              this.button1.PreviewMouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.DragSource_PreviewMouseLeftButtonDown);                            #line default              #line hidden                            #line 33 "..\..\..\Views\Test.xaml"              this.button1.PreviewMouseMove += new System.Windows.Input.MouseEventHandler(this.DragSource_PreviewMouseMove);                            #line default              #line hidden              return;              }
Missing Default,dnGREP.WPF,TestPattern,C:\repos\dnGrep_dnGrep\dnGREP.WPF\Views\TestPatternView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 8 "..\..\..\Views\TestPatternView.xaml"              ((dnGREP.WPF.TestPattern)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 8 "..\..\..\Views\TestPatternView.xaml"              ((dnGREP.WPF.TestPattern)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.Window_Closing);                            #line default              #line hidden                            #line 8 "..\..\..\Views\TestPatternView.xaml"              ((dnGREP.WPF.TestPattern)(target)).KeyDown += new System.Windows.Input.KeyEventHandler(this.formKeyDown);                            #line default              #line hidden              return;              case 2:              this.rbRegex = ((System.Windows.Controls.RadioButton)(target));              return;              case 3:              this.rbXPath = ((System.Windows.Controls.RadioButton)(target));              return;              case 4:              this.rbText = ((System.Windows.Controls.RadioButton)(target));              return;              case 5:              this.rbSoundex = ((System.Windows.Controls.RadioButton)(target));              return;              case 6:              this.tbSearchFor = ((System.Windows.Controls.TextBox)(target));              return;              case 7:              this.tbReplaceWith = ((System.Windows.Controls.TextBox)(target));              return;              case 8:              this.cbCaseSensitive = ((System.Windows.Controls.CheckBox)(target));              return;              case 9:              this.cbWholeWord = ((System.Windows.Controls.CheckBox)(target));              return;              case 10:              this.cbMultiline = ((System.Windows.Controls.CheckBox)(target));              return;              case 11:              this.cbSingleline = ((System.Windows.Controls.CheckBox)(target));              return;              case 12:              this.tbTestInput = ((System.Windows.Controls.TextBox)(target));              return;              case 13:                            #line 120 "..\..\..\Views\TestPatternView.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyFile_Click);                            #line default              #line hidden              return;              case 14:              this.btnSearch = ((System.Windows.Controls.Button)(target));              return;              case 15:              this.btnReplace = ((System.Windows.Controls.Button)(target));              return;              case 16:              this.btnClose = ((System.Windows.Controls.Button)(target));                            #line 128 "..\..\..\Views\TestPatternView.xaml"              this.btnClose.Click += new System.Windows.RoutedEventHandler(this.btnClose_Click);                            #line default              #line hidden              return;              case 17:              this.lblStatus = ((System.Windows.Controls.TextBlock)(target));              return;              }
Missing Default,dnGREP.WPF.UserControls,BusyIndicator,C:\repos\dnGrep_dnGrep\dnGREP.WPF\UserControls\BusyIndicator.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.rotationCanvas = ((System.Windows.Controls.Canvas)(target));              return;              case 2:              this.SpinnerRotate = ((System.Windows.Media.RotateTransform)(target));              return;              }
Missing Default,dnGREP.WPF.UserControls,ResultsTree,C:\repos\dnGrep_dnGrep\dnGREP.WPF\UserControls\ResultsTree.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.treeView = ((dnGREP.WPF.UserControls.MultiSelectTreeView)(target));              return;              case 2:                            #line 86 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOpenFile_Click);                            #line default              #line hidden              return;              case 3:                            #line 87 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOpenFileCustomEditor_Click);                            #line default              #line hidden              return;              case 4:                            #line 89 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnOpenContainingFolder_Click);                            #line default              #line hidden              return;              case 5:                            #line 90 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnShowFileProperties_Click);                            #line default              #line hidden              return;              case 6:                            #line 92 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyFileNames_Click);                            #line default              #line hidden              return;              case 7:                            #line 93 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyFullFilePath_Click);                            #line default              #line hidden              return;              case 8:                            #line 94 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCopyGrepLine_Click);                            #line default              #line hidden              return;              case 9:                            #line 96 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnExclude_Click);                            #line default              #line hidden              return;              case 10:                            #line 97 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnExpandAll_Click);                            #line default              #line hidden              return;              case 11:                            #line 98 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnCollapseAll_Click);                            #line default              #line hidden              return;              case 12:                            #line 99 "..\..\..\UserControls\ResultsTree.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.btnResetZoom_Click);                            #line default              #line hidden              return;              }
Missing Default,dnGREP.WPF.UserControls,ResultsTree,C:\repos\dnGrep_dnGrep\dnGREP.WPF\UserControls\ResultsTree.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 13:              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseRightButtonDownEvent;                            #line 107 "..\..\..\UserControls\ResultsTree.xaml"              eventSetter.Handler = new System.Windows.Input.MouseButtonEventHandler(this.treeView_MouseDown);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.PreviewMouseLeftButtonDownEvent;                            #line 110 "..\..\..\UserControls\ResultsTree.xaml"              eventSetter.Handler = new System.Windows.Input.MouseButtonEventHandler(this.treeView_PreviewMouseLeftButtonDown);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.PreviewMouseMoveEvent;                            #line 113 "..\..\..\UserControls\ResultsTree.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.treeView_PreviewMouseMove);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.FrameworkElement.RequestBringIntoViewEvent;                            #line 116 "..\..\..\UserControls\ResultsTree.xaml"              eventSetter.Handler = new System.Windows.RequestBringIntoViewEventHandler(this.treeView_RequestBringIntoView);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              break;              }
