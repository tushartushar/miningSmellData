Implementation smell,Namespace,Class,File,Method,Description
Complex Method,DBus,ServerBus,C:\repos\mono_dbus-sharp\src\ServerBus.cs,RemoveConnection,Cyclomatic complexity of the method is 10
Complex Method,DBus,ServerBus,C:\repos\mono_dbus-sharp\src\ServerBus.cs,HandleMessage,Cyclomatic complexity of the method is 12
Complex Method,DBus,ServerConnection,C:\repos\mono_dbus-sharp\src\ServerBus.cs,HandleMessage,Cyclomatic complexity of the method is 8
Long Statement,DBus,ServerBus,C:\repos\mono_dbus-sharp\src\ServerBus.cs,RemoveConnection,The length of the statement  "				//((ICollection<System.Collections.Generic.KeyValuePair<MatchRule'List<Connection>>>)Rules).Remove<KeyValuePair<MatchRule'List<Connection>>> (pair); " is 148.
Long Statement,DBus,ServerBus,C:\repos\mono_dbus-sharp\src\ServerBus.cs,RequestName,The length of the statement  "				throw new ArgumentException (String.Format ("Connection \"{0}\" is not allowed to own the name \"{1}\" because it is reserved for D-Bus' use only"' Caller.UniqueName ?? "(inactive)"' name)' "name"); " is 198.
Long Statement,DBus,ServerBus,C:\repos\mono_dbus-sharp\src\ServerBus.cs,ReleaseName,The length of the statement  "				throw new ArgumentException (String.Format ("Cannot release the \"{0}\" name because it is owned by the bus"' name)' "name"); " is 125.
Long Statement,DBus,ServerBus,C:\repos\mono_dbus-sharp\src\ServerBus.cs,HandleMessage,The length of the statement  "				else if (destination != DBusBusName && !destination.StartsWith (":") && (msg.Header.Flags & HeaderFlag.NoAutoStart) != HeaderFlag.NoAutoStart) { " is 144.
Long Statement,DBus,ServerBus,C:\repos\mono_dbus-sharp\src\ServerBus.cs,GetConnectionSELinuxSecurityContext,The length of the statement  "			throw new DBusException ("SELinuxSecurityContextUnknown"' "Could not determine security context for '{0}'"' connection_name); " is 125.
Long Statement,DBus,UnixServer,C:\repos\mono_dbus-sharp\src\Server.cs,Listen,The length of the statement  "			byte[] sa = isAbstract ? UnixNativeTransport.GetSockAddrAbstract (unixPath) : UnixNativeTransport.GetSockAddr (unixPath); " is 121.
Magic Number,DBus,ServerBus,C:\repos\mono_dbus-sharp\src\ServerBus.cs,ScanServices,The following statement contains a magic number: foreach (string svc in svcs) {  				string fname = System.IO.Path.Combine (svcPath' svc);  				using (TextReader r = new StreamReader (fname)) {  					string ln;  					string cmd = null;  					string name = null;  					while ((ln = r.ReadLine ()) != null) {  						if (ln.StartsWith ("Exec="))  							cmd = ln.Remove (0' 5);  						else if (ln.StartsWith ("Name="))  							name = ln.Remove (0' 5);  					}    					// TODO: use XdgNet  					// TODO: Validate names and trim strings  					if (name != null && cmd != null)  						services[name] = cmd;  				}  			}
Magic Number,DBus,ServerBus,C:\repos\mono_dbus-sharp\src\ServerBus.cs,ScanServices,The following statement contains a magic number: foreach (string svc in svcs) {  				string fname = System.IO.Path.Combine (svcPath' svc);  				using (TextReader r = new StreamReader (fname)) {  					string ln;  					string cmd = null;  					string name = null;  					while ((ln = r.ReadLine ()) != null) {  						if (ln.StartsWith ("Exec="))  							cmd = ln.Remove (0' 5);  						else if (ln.StartsWith ("Name="))  							name = ln.Remove (0' 5);  					}    					// TODO: use XdgNet  					// TODO: Validate names and trim strings  					if (name != null && cmd != null)  						services[name] = cmd;  				}  			}
Magic Number,DBus,UnixServer,C:\repos\mono_dbus-sharp\src\Server.cs,Listen,The following statement contains a magic number: usock.Listen (50);
Missing Default,DBus,Server,C:\repos\mono_dbus-sharp\src\Server.cs,ListenAt,The following switch statement is missing a default case: switch (entry.Method) {  						case "tcp":  							return new TcpServer (entry.ToString ());  						case "unix":  							return new UnixServer (entry.ToString ());  #if ENABLE_PIPES  						case "win":  							return new WinServer (entry.ToString ());  #endif  					}
