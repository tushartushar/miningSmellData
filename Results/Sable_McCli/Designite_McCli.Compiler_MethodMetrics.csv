Method,LOC,CC,PC
AssemblyEmitter:Emit,32,6,5
FunctionEmitter:FunctionEmitter,54,8,6
FunctionEmitter:Emit,8,1,3
FunctionEmitter:EmitBody,24,5,0
FunctionEmitter:EmitCloneInputs,11,5,0
FunctionEmitter:EmitStatements,20,6,1
FunctionEmitter:IsLiteral,3,1,1
FunctionEmitter:EmitLoad,14,4,1
FunctionEmitter:IsByRef,3,1,1
FunctionEmitter:BeginEmitStore,5,2,1
FunctionEmitter:EndEmitStore,8,2,1
FunctionEmitter:EmitLoadConstant,16,5,2
FunctionEmitter:EmitConvert,81,15,2
FunctionEmitter:EmitLoadAndConvert,4,1,2
FunctionEmitter:EmitBoxScalar,3,1,1
FunctionEmitter:GetLocation,9,2,1
MethodFactories:Dynamic,9,3,4
MethodFactories:FromTypeBuilder,11,1,6
MethodFactories:GetTypeArray,6,3,1
PortableClassLibrary:AddPortableFrameworkAttribute,16,1,1
PortableClassLibrary:PatchReflectionEmitAssembly,109,14,1
PortableClassLibrary:FillMetadataTableInfos,51,3,2
PortableClassLibrary:GetIndexSize,13,4,2
PortableClassLibrary:GetIndexSize,3,1,2
PortableClassLibrary:VirtualAddressToFilePosition,8,2,2
PortableClassLibrary:ReadStruct,11,1,1
PortableClassLibrary:WriteStruct,11,1,2
PortableClassLibrary:ReadBytes,5,1,2
PortableClassLibrary:ReadAll,9,3,4
PortableClassLibrary:ReadNullPaddedString,8,2,2
PortableClassLibrary:ReadPaddedNullTerminatedString,19,6,2
PortableClassLibrary:Equals,8,3,2
FunctionMethod:FunctionMethod,5,1,1
FunctionMethod:FunctionMethod,6,1,2
FunctionMethod:ToString,3,1,0
FunctionSignature:FunctionSignature,6,1,2
FunctionSignature:FunctionSignature,20,4,2
FunctionSignature:GetParameterCliTypes,9,5,0
FunctionSignature:ToString,21,6,0
FunctionTable:AddMethodsFromAssembly,6,4,1
FunctionTable:AddMethodsFromType,6,4,1
FunctionTable:AddMethod,12,4,1
FunctionTable:AddFunction,10,2,1
FunctionTable:Lookup,34,8,2
FunctionTable:GetCoercion,37,8,2
FunctionTable:InstantiateGenericMethod,19,5,1
CompilationUnit:CompilationUnit,8,2,3
Copy:Copy,6,1,2
Copy:GetTarget,3,1,1
Copy:Accept,3,1,1
Copy:ToDebugString,3,1,0
IndexArgument:IndexArgument,4,1,1
IndexArgument:ToString,3,1,0
RangeFor:RangeFor,10,1,5
RangeFor:RangeFor,2,1,5
RangeFor:Accept,3,1,1
RangeFor:ToDebugString,3,1,0
Jump:Jump,3,1,1
Jump:Accept,3,1,1
Jump:ToDebugString,3,1,0
StoreParenthesized:StoreParenthesized,7,1,3
StoreParenthesized:GetTarget,3,1,1
StoreParenthesized:Accept,3,1,1
StoreParenthesized:ToDebugString,3,1,0
Expression:GetTarget,1,1,1
LoadParenthesized:LoadParenthesized,6,1,3
LoadParenthesized:GetTarget,3,1,1
LoadParenthesized:Accept,3,1,1
LoadParenthesized:ToDebugString,9,3,0
Function:Function,7,1,4
Function:Accept,3,1,1
Function:ToDebugString,7,2,0
If:If,6,1,3
If:Accept,3,1,1
If:ToDebugString,6,2,0
Literal:Literal,5,1,2
Literal:Literal,6,1,2
Literal:GetTarget,3,1,1
Literal:Accept,3,1,1
Literal:ToDebugString,3,1,0
StaticCall:StaticCall,6,1,3
StaticCall:GetTarget,3,1,1
StaticCall:Accept,3,1,1
StaticCall:ToDebugString,9,3,0
TamerXmlReader:Read,21,5,1
TamerXmlReader:ReadFunction,19,3,2
TamerXmlReader:ReadVariable,27,6,1
TamerXmlReader:ReadStatements,6,4,2
TamerXmlReader:ReadStatement,28,13,2
TamerXmlReader:ReadArrayGet,6,1,2
TamerXmlReader:ReadArraySet,6,1,2
TamerXmlReader:ReadCall,6,1,2
TamerXmlReader:ReadCopy,5,1,2
TamerXmlReader:ReadFor,8,1,2
TamerXmlReader:ReadIf,17,4,2
TamerXmlReader:ReadLiteral,12,4,2
TamerXmlReader:ReadWhile,5,1,2
TamerXmlReader:ReadVariable,5,1,2
TamerXmlReader:ReadIndexArguments,10,3,2
TamerXmlReader:ReadVariables,12,2,2
TamerXmlReader:ResolveVariable,8,2,2
Variable:Variable,6,1,3
Variable:Variable,7,1,4
Variable:ToString,12,2,0
Node:Accept,1,1,1
Node:ToDebugString,1,1,0
Node:ToString,3,1,0
Node:CommaSeparate,13,5,1
Node:CommaSeparate,13,5,1
Visitor:VisitCopy,3,1,1
Visitor:VisitRangeFor,3,1,1
Visitor:VisitFunction,3,1,1
Visitor:VisitIf,3,1,1
Visitor:VisitJump,3,1,1
Visitor:VisitLiteral,3,1,1
Visitor:VisitLoadParenthesized,3,1,1
Visitor:VisitStaticCall,3,1,1
Visitor:VisitStoreParenthesized,3,1,1
Visitor:VisitWhile,3,1,1
Visitor:VisitControlFlow,3,1,1
Visitor:VisitExpression,3,1,1
Visitor:VisitNode,1,1,1
While:While,5,1,2
While:While,2,1,2
While:Accept,3,1,1
While:ToDebugString,3,1,0
