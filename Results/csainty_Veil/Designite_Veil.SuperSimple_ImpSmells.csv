Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Veil.SuperSimple,SuperSimpleExpressionParser,C:\repos\csainty_Veil\src\Veil.SuperSimple\SuperSimpleExpressionParser.cs,ParseAgainstModel,The length of the statement  "                    ParseAgainstModel(originalExpression' expression.Substring(subModelIndex + 1)' new SuperSimpleTemplateParserScope { Block = scope.Block' ModelType = subModel.ResultType }' ExpressionScope.CurrentModelOnStack) " is 208.
Long Statement,Veil.SuperSimple,SuperSimpleExpressionParser,C:\repos\csainty_Veil\src\Veil.SuperSimple\SuperSimpleExpressionParser.cs,ParseAgainstModel,The length of the statement  "            if (IsLateBoundAcceptingType(scope.ModelType)) return SyntaxTreeExpression.LateBound(expression' true' expressionScope); " is 120.
Magic Number,Veil.SuperSimple,SuperSimpleExpressionParser,C:\repos\csainty_Veil\src\Veil.SuperSimple\SuperSimpleExpressionParser.cs,Parse,The following statement contains a magic number: if (expression.StartsWith("Current."))              {                  expression = expression.Substring(8);              }              else if (expression.StartsWith("Model."))              {                  expression = expression.Substring(6);                  chosenScope = scopes.Last.Value;                  expressionScope = ExpressionScope.RootModel;              }
Magic Number,Veil.SuperSimple,SuperSimpleExpressionParser,C:\repos\csainty_Veil\src\Veil.SuperSimple\SuperSimpleExpressionParser.cs,Parse,The following statement contains a magic number: if (expression.StartsWith("Current."))              {                  expression = expression.Substring(8);              }              else if (expression.StartsWith("Model."))              {                  expression = expression.Substring(6);                  chosenScope = scopes.Last.Value;                  expressionScope = ExpressionScope.RootModel;              }
Magic Number,Veil.SuperSimple,SuperSimpleExpressionParser,C:\repos\csainty_Veil\src\Veil.SuperSimple\SuperSimpleExpressionParser.cs,ParseAgainstModel,The following statement contains a magic number: if (expression.StartsWith("Has"))              {                  var collectionExpression = ParseAgainstModel(originalExpression' expression.Substring(3)' scope' expressionScope);                  return SyntaxTreeExpression.HasItems(collectionExpression);              }
Magic Number,Veil.SuperSimple,SuperSimpleTemplateParserState,C:\repos\csainty_Veil\src\Veil.SuperSimple\SuperSimpleTemplateParserState.cs,GetParentBlock,The following statement contains a magic number: if (this.scopeStack.Count < 2) return null;
