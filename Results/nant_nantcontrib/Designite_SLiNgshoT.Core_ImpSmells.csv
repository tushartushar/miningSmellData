Implementation smell,Namespace,Class,File,Method,Description
Long Method,SLiNgshoT.Core,Driver,C:\research\architectureSmells\repos\nant_nantcontrib\Tools\SLiNgshoT\SLiNgshoT.Core\Driver.cs,WriteSolution,The method has 175 lines of code.
Complex Method,SLiNgshoT.Core,Driver,C:\research\architectureSmells\repos\nant_nantcontrib\Tools\SLiNgshoT\SLiNgshoT.Core\Driver.cs,WriteSolution,Cyclomatic complexity of the method is 29
Complex Method,SLiNgshoT.Core,NAntWriter,C:\research\architectureSmells\repos\nant_nantcontrib\Tools\SLiNgshoT\SLiNgshoT.Core\NAntWriter.cs,WriteStartProject,Cyclomatic complexity of the method is 8
Complex Method,SLiNgshoT.Core,NMakeWriter,C:\research\architectureSmells\repos\nant_nantcontrib\Tools\SLiNgshoT\SLiNgshoT.Core\NMakeWriter.cs,WriteStartSolution,Cyclomatic complexity of the method is 8
Complex Method,SLiNgshoT.Core,Solution,C:\research\architectureSmells\repos\nant_nantcontrib\Tools\SLiNgshoT\SLiNgshoT.Core\Solution.cs,Read,Cyclomatic complexity of the method is 8
Long Parameter List,SLiNgshoT.Core,Driver,C:\research\architectureSmells\repos\nant_nantcontrib\Tools\SLiNgshoT\SLiNgshoT.Core\Driver.cs,ParseArgs,The method has 5 parameters. Parameters: args' format' solution' parameters' uriMap
Long Parameter List,SLiNgshoT.Core,Driver,C:\research\architectureSmells\repos\nant_nantcontrib\Tools\SLiNgshoT\SLiNgshoT.Core\Driver.cs,WriteSolution,The method has 5 parameters. Parameters: writer' textWriter' sln' parameters' uriMap
Long Statement,SLiNgshoT.Core,Driver,C:\research\architectureSmells\repos\nant_nantcontrib\Tools\SLiNgshoT\SLiNgshoT.Core\Driver.cs,GetOutputFormats,The length of the statement  "                    OutputFormatAttribute outputFormat = Attribute.GetCustomAttribute(type' typeof(OutputFormatAttribute)) as OutputFormatAttribute;" is 128.
Long Statement,SLiNgshoT.Core,Driver,C:\research\architectureSmells\repos\nant_nantcontrib\Tools\SLiNgshoT\SLiNgshoT.Core\Driver.cs,GetSolutionWriterImplementation,The length of the statement  "                    OutputFormatAttribute outputFormat = Attribute.GetCustomAttribute(type' typeof(OutputFormatAttribute)) as OutputFormatAttribute;" is 128.
Long Statement,SLiNgshoT.Core,NAntWriter,C:\research\architectureSmells\repos\nant_nantcontrib\Tools\SLiNgshoT\SLiNgshoT.Core\NAntWriter.cs,WriteStartProject,The length of the statement  "                WriteProperty("output"' "${build.dir}\\" + Path.GetFileName(project.GetRelativeOutputPathForConfiguration(configuration.Name)));" is 128.
Long Statement,SLiNgshoT.Core,NAntWriter,C:\research\architectureSmells\repos\nant_nantcontrib\Tools\SLiNgshoT\SLiNgshoT.Core\NAntWriter.cs,WriteStartProject,The length of the statement  "                    WriteProperty("doc"' "${build.dir}\\" + Path.GetFileName(project.GetRelativePathToDocumentationFile(configuration.Name)));" is 122.
Long Statement,SLiNgshoT.Core,NMakeWriter,C:\research\architectureSmells\repos\nant_nantcontrib\Tools\SLiNgshoT\SLiNgshoT.Core\NMakeWriter.cs,WriteEndProjectDependencies,The length of the statement  "            writer.WriteLine("\tif not exist $(" + GetProjectName(project) + "_DIRECTORY) md $(" + GetProjectName(project) + "_DIRECTORY)");" is 128.
Long Statement,SLiNgshoT.Core,Project,C:\research\architectureSmells\repos\nant_nantcontrib\Tools\SLiNgshoT\SLiNgshoT.Core\Project.cs,GetReferencedProjects,The length of the statement  "                        throw new ApplicationException("Project '" + this.Name + "' contains reference to unknown project '" + reference.Value + "'.");" is 127.
Complex Conditional,SLiNgshoT.Core,Solution,C:\research\architectureSmells\repos\nant_nantcontrib\Tools\SLiNgshoT\SLiNgshoT.Core\Solution.cs,AddProject,The conditional expression  "project.ProjectType == "C# Local" ||                         project.ProjectType == "C# Web" ||                         project.ProjectType == "VB Local" ||                         project.ProjectType == "VB Web""  is complex.
Magic Number,SLiNgshoT.Core,Driver,C:\research\architectureSmells\repos\nant_nantcontrib\Tools\SLiNgshoT\SLiNgshoT.Core\Driver.cs,ParseArgs,The following statement contains a magic number: switch (argName) {                         case "sln":                             solution = args[++i];                             break;                         case "map":                             if (i + 2 < args.Length) {                                 string uriPrefix = args[++i];                                 string filePrefix = args[++i];                                 uriMap.Add(uriPrefix' filePrefix);                             }                             else {                                 Console.Error.WriteLine("not enough arguments left for -map option");                             }                             break;                         default:                             format = argName;                             break;                     }
