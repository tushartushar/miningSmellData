Implementation smell,Namespace,Class,File,Method,Description
Complex Method,DnDHelper,Rules,C:\repos\macper_dndhelper\DnDHelperLib\Rules.cs,GetThrowTable,Cyclomatic complexity of the method is 13
Complex Method,DnDHelper,SpellDefinition,C:\repos\macper_dndhelper\DnDHelperLib\Spell.cs,ConvertToString,Cyclomatic complexity of the method is 8
Complex Method,DnDHelper,Stats,C:\repos\macper_dndhelper\DnDHelperLib\Stats.cs,IncreaseMainSkill,Cyclomatic complexity of the method is 12
Long Statement,DnDHelper,Helper,C:\repos\macper_dndhelper\DnDHelperLib\Helper.cs,GetVersionServer,The length of the statement  "	FTPVersionServer.VersionServer server = new FTPVersionServer.VersionServer (appSett ["FTPServer"]' appSett ["FTPUser"]' appSett ["FTPPassword"]' appSett ["FTPAppDir"]); " is 168.
Long Statement,DnDHelper,Item,C:\repos\macper_dndhelper\DnDHelperLib\Item.cs,ToString,The length of the statement  "			return string.Format ("{0} - +{1}KP' Max. ZR {2}' Kary -{3} {4}"' Name' AC.ToString ()' MaxDexterityBonus.ToString ()' Panalty.ToString ()' Specials); " is 150.
Long Statement,DnDHelper,SpellDefinition,C:\repos\macper_dndhelper\DnDHelperLib\Spell.cs,ToString,The length of the statement  "{4}"' Name' ConvertTypesToString ()' Level.ToString ()' ConvertToString (SpellShool)' Description' ConvertToString (Range)' Duration); " is 134.
Empty Catch Block,DnDHelper,Helper,C:\repos\macper_dndhelper\DnDHelperLib\Helper.cs,GetVersionFromServer,The method has an empty catch block.
Empty Catch Block,DnDHelper,Stats,C:\repos\macper_dndhelper\DnDHelperLib\Stats.cs,MoveObsolete,The method has an empty catch block.
Magic Number,DnDHelper,Battle,C:\repos\macper_dndhelper\DnDHelperLib\Battle.cs,NextMember,The following statement contains a magic number: if (!ActiveMember.IsAlive && ActiveMember.CurrentStats.HP < -10) {  	NextMember ();  }  
Magic Number,DnDHelper,Battle,C:\repos\macper_dndhelper\DnDHelperLib\Battle.cs,NewTurn,The following statement contains a magic number: _helper.CurrentTime.AddSeconds (6);  
Magic Number,DnDHelper,Rules,C:\repos\macper_dndhelper\DnDHelperLib\Rules.cs,GetStandardBonus,The following statement contains a magic number: return (int)((value - 10) / 2);  
Magic Number,DnDHelper,Rules,C:\repos\macper_dndhelper\DnDHelperLib\Rules.cs,GetStandardBonus,The following statement contains a magic number: return (int)((value - 10) / 2);  
Magic Number,DnDHelper,Rules,C:\repos\macper_dndhelper\DnDHelperLib\Rules.cs,GetBaseAttack,The following statement contains a magic number: switch (skillRate) {  case SkillRate.High:  	return level;  case SkillRate.Medium:  	return (int)Math.Ceiling (level * 0.75);  case SkillRate.Low:  	return (int)(level * 0.5);  default:  	throw new NotImplementedException ();  }  
Magic Number,DnDHelper,Rules,C:\repos\macper_dndhelper\DnDHelperLib\Rules.cs,GetBaseAttack,The following statement contains a magic number: switch (skillRate) {  case SkillRate.High:  	return level;  case SkillRate.Medium:  	return (int)Math.Ceiling (level * 0.75);  case SkillRate.Low:  	return (int)(level * 0.5);  default:  	throw new NotImplementedException ();  }  
Magic Number,DnDHelper,Rules,C:\repos\macper_dndhelper\DnDHelperLib\Rules.cs,GetBaseAttack,The following statement contains a magic number: return (int)Math.Ceiling (level * 0.75);  
Magic Number,DnDHelper,Rules,C:\repos\macper_dndhelper\DnDHelperLib\Rules.cs,GetBaseAttack,The following statement contains a magic number: return (int)(level * 0.5);  
Magic Number,DnDHelper,Rules,C:\repos\macper_dndhelper\DnDHelperLib\Rules.cs,GetThrowTable,The following statement contains a magic number: if (highEndurance)  	currentThrow.EnduranceThrow = 2;  
Magic Number,DnDHelper,Rules,C:\repos\macper_dndhelper\DnDHelperLib\Rules.cs,GetThrowTable,The following statement contains a magic number: currentThrow.EnduranceThrow = 2;  
Magic Number,DnDHelper,Rules,C:\repos\macper_dndhelper\DnDHelperLib\Rules.cs,GetThrowTable,The following statement contains a magic number: if (highReflex)  	currentThrow.ReflexThrow = 2;  
Magic Number,DnDHelper,Rules,C:\repos\macper_dndhelper\DnDHelperLib\Rules.cs,GetThrowTable,The following statement contains a magic number: currentThrow.ReflexThrow = 2;  
Magic Number,DnDHelper,Rules,C:\repos\macper_dndhelper\DnDHelperLib\Rules.cs,GetThrowTable,The following statement contains a magic number: if (highWill)  	currentThrow.WillThrow = 2;  
Magic Number,DnDHelper,Rules,C:\repos\macper_dndhelper\DnDHelperLib\Rules.cs,GetThrowTable,The following statement contains a magic number: currentThrow.WillThrow = 2;  
Magic Number,DnDHelper,Rules,C:\repos\macper_dndhelper\DnDHelperLib\Rules.cs,GetThrowTable,The following statement contains a magic number: while (level <= 20) {  	if (level % 2 == 0) {  		if (highEndurance)  			currentThrow.EnduranceThrow++;  		if (highReflex)  			currentThrow.ReflexThrow++;  		if (highWill)  			currentThrow.WillThrow++;  	}  	if (level % 3 == 0) {  		if (!highEndurance)  			currentThrow.EnduranceThrow++;  		if (!highReflex)  			currentThrow.ReflexThrow++;  		if (!highWill)  			currentThrow.WillThrow++;  	}  	dict [level] = new Throw () {  		EnduranceThrow = currentThrow.EnduranceThrow'  		ReflexThrow = currentThrow.ReflexThrow'  		WillThrow = currentThrow.WillThrow  	};  	level++;  }  
Magic Number,DnDHelper,Rules,C:\repos\macper_dndhelper\DnDHelperLib\Rules.cs,GetThrowTable,The following statement contains a magic number: while (level <= 20) {  	if (level % 2 == 0) {  		if (highEndurance)  			currentThrow.EnduranceThrow++;  		if (highReflex)  			currentThrow.ReflexThrow++;  		if (highWill)  			currentThrow.WillThrow++;  	}  	if (level % 3 == 0) {  		if (!highEndurance)  			currentThrow.EnduranceThrow++;  		if (!highReflex)  			currentThrow.ReflexThrow++;  		if (!highWill)  			currentThrow.WillThrow++;  	}  	dict [level] = new Throw () {  		EnduranceThrow = currentThrow.EnduranceThrow'  		ReflexThrow = currentThrow.ReflexThrow'  		WillThrow = currentThrow.WillThrow  	};  	level++;  }  
Magic Number,DnDHelper,Rules,C:\repos\macper_dndhelper\DnDHelperLib\Rules.cs,GetThrowTable,The following statement contains a magic number: while (level <= 20) {  	if (level % 2 == 0) {  		if (highEndurance)  			currentThrow.EnduranceThrow++;  		if (highReflex)  			currentThrow.ReflexThrow++;  		if (highWill)  			currentThrow.WillThrow++;  	}  	if (level % 3 == 0) {  		if (!highEndurance)  			currentThrow.EnduranceThrow++;  		if (!highReflex)  			currentThrow.ReflexThrow++;  		if (!highWill)  			currentThrow.WillThrow++;  	}  	dict [level] = new Throw () {  		EnduranceThrow = currentThrow.EnduranceThrow'  		ReflexThrow = currentThrow.ReflexThrow'  		WillThrow = currentThrow.WillThrow  	};  	level++;  }  
Magic Number,DnDHelper,Rules,C:\repos\macper_dndhelper\DnDHelperLib\Rules.cs,GetThrowTable,The following statement contains a magic number: if (level % 2 == 0) {  	if (highEndurance)  		currentThrow.EnduranceThrow++;  	if (highReflex)  		currentThrow.ReflexThrow++;  	if (highWill)  		currentThrow.WillThrow++;  }  
Magic Number,DnDHelper,Rules,C:\repos\macper_dndhelper\DnDHelperLib\Rules.cs,GetThrowTable,The following statement contains a magic number: if (level % 3 == 0) {  	if (!highEndurance)  		currentThrow.EnduranceThrow++;  	if (!highReflex)  		currentThrow.ReflexThrow++;  	if (!highWill)  		currentThrow.WillThrow++;  }  
Magic Number,DnDHelper,Stats,C:\repos\macper_dndhelper\DnDHelperLib\Stats.cs,Stats,The following statement contains a magic number: Strength = Dexterity = Constitution = Wisdom = Inteligence = 10;  
Missing Default,DnDHelper,SpellDefinition,C:\repos\macper_dndhelper\DnDHelperLib\Spell.cs,ConvertToString,The following switch statement is missing a default case: switch (shool) {  case SpellShool.Abjuration:  	return "Odrzucanie";  case SpellShool.Conjuration:  	return "Wywoływanie";  case SpellShool.Divination:  	return "Poznanie";  case SpellShool.Enchantment:  	return "Uroki";  case SpellShool.Illusion:  	return "Iluzje";  case SpellShool.Necromancy:  	return "Nekromancja";  case SpellShool.Transmutation:  	return "Przemiany";  case SpellShool.Summoning:  	return "Przywoływanie";  }  
Missing Default,DnDHelper,SpellDefinition,C:\repos\macper_dndhelper\DnDHelperLib\Spell.cs,ConvertToString,The following switch statement is missing a default case: switch (range) {  case SpellRange.Close:  	return "Bliski";  case SpellRange.Infinite:  	return "Nieskończony";  case SpellRange.Long:  	return "Daleki";  case SpellRange.Medium:  	return "Średni";  case SpellRange.Special:  	return "Specjalny";  case SpellRange.Touch:  	return "Dotyk";  case SpellRange.OnlyCaster:  	return "Tylko na siebie";  }  
Missing Default,DnDHelper,Stats,C:\repos\macper_dndhelper\DnDHelperLib\Stats.cs,IncreaseMainSkill,The following switch statement is missing a default case: switch (skill) {  case BaseAttribute.Charisma:  	Charisma += value;  	return;  case BaseAttribute.Constitution:  	Constitution += value;  	return;  case BaseAttribute.Dexterity:  	Dexterity += value;  	return;  case BaseAttribute.Inteligence:  	Inteligence += value;  	return;  case BaseAttribute.Strength:  	Strength += value;  	return;  case BaseAttribute.Wisdom:  	Wisdom += value;  	return;  }  
