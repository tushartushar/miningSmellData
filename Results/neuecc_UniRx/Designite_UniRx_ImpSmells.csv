Implementation smell,Namespace,Class,File,Method,Description
Long Method,RuntimeUnitTestToolkit,ObservableEventsTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEvent,The method has 109 lines of code.
Complex Method,RuntimeUnitTestToolkit,UnitTestRunner,C:\repos\neuecc_UniRx\Assets\Scripts\RuntimeUnitTestToolkit\UnitTestRunner.cs,RunTestInCoroutine,Cyclomatic complexity of the method is 9
Complex Method,RuntimeUnitTestToolkit,MicroCoroutineTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\Container.cs,EnumerationCycleRandom,Cyclomatic complexity of the method is 10
Long Statement,RuntimeUnitTestToolkit,Assert,C:\repos\neuecc_UniRx\Assets\Scripts\RuntimeUnitTestToolkit\Assert.cs,AreEqual,The length of the statement  "                throw new AssertFailedException(string.Format("AreEqual Failed. expected:{0} actual:{1} message:{2}"' expected' actual' message)); " is 130.
Long Statement,RuntimeUnitTestToolkit,Assert,C:\repos\neuecc_UniRx\Assets\Scripts\RuntimeUnitTestToolkit\Assert.cs,AreNotEqual,The length of the statement  "                throw new AssertFailedException(string.Format("AreNotEqual Failed. notExpected:{0} actual:{1} message:{2}"' notExpected' actual' message)); " is 139.
Long Statement,RuntimeUnitTestToolkit,Assert,C:\repos\neuecc_UniRx\Assets\Scripts\RuntimeUnitTestToolkit\Assert.cs,AreSame,The length of the statement  "                throw new AssertFailedException(string.Format("AreSame Failed. expected:{0} actual:{1} message:{2}"' expected' actual' message)); " is 129.
Long Statement,RuntimeUnitTestToolkit,Assert,C:\repos\neuecc_UniRx\Assets\Scripts\RuntimeUnitTestToolkit\Assert.cs,AreNotSame,The length of the statement  "                throw new AssertFailedException(string.Format("AreNotSame Failed. notExpected:{0} actual:{1} message:{2}"' notExpected' actual' message)); " is 138.
Long Statement,RuntimeUnitTestToolkit,Assert,C:\repos\neuecc_UniRx\Assets\Scripts\RuntimeUnitTestToolkit\Assert.cs,IsInstanceOfType,The length of the statement  "                throw new AssertFailedException(string.Format("IsInstanceOfType Failed. valueType:{0} expectedType:{1} message:{2}"' (value == null) ? null : value.GetType()' expectedType' message)); " is 183.
Long Statement,RuntimeUnitTestToolkit,Assert,C:\repos\neuecc_UniRx\Assets\Scripts\RuntimeUnitTestToolkit\Assert.cs,IsNotInstanceOfType,The length of the statement  "                throw new AssertFailedException(string.Format("IsNotInstanceOfType Failed. valueType:{0} expectedType:{1} message:{2}"' (value == null) ? null : value.GetType()' expectedType' message)); " is 186.
Long Statement,RuntimeUnitTestToolkit,Assert,C:\repos\neuecc_UniRx\Assets\Scripts\RuntimeUnitTestToolkit\Assert.cs,DoesNotThrow,The length of the statement  "                var formatted = string.Format("Failed DoesNotThrow. Catched:{0}{1}"' exception.GetType().Name' string.IsNullOrEmpty(message) ? "" : "' " + message); " is 148.
Long Statement,RuntimeUnitTestToolkit,CollectionAssert,C:\repos\neuecc_UniRx\Assets\Scripts\RuntimeUnitTestToolkit\Assert.cs,AreEqual,The length of the statement  "                        if (!object.Equals(c1' c2)) throw new AssertFailedException(string.Format("not equal index:{0} expected:{1} actual:{2} message:{3}"' index' c1' c2' message)); " is 158.
Long Statement,RuntimeUnitTestToolkit,CollectionAssert,C:\repos\neuecc_UniRx\Assets\Scripts\RuntimeUnitTestToolkit\Assert.cs,AreEqual,The length of the statement  "                        if (comparer.Compare(c1' c2) != 0) throw new AssertFailedException(string.Format("not equal index:{0} expected:{1} actual:{2} message:{3}"' index' c1' c2' message)); " is 165.
Long Statement,RuntimeUnitTestToolkit,CollectionAssert,C:\repos\neuecc_UniRx\Assets\Scripts\RuntimeUnitTestToolkit\Assert.cs,AreNotEqual,The length of the statement  "                        if (object.Equals(c1' c2)) throw new AssertFailedException(string.Format("equal index:{0} expected:{1} actual:{2} message:{3}"' index' c1' c2' message)); " is 153.
Long Statement,RuntimeUnitTestToolkit,CollectionAssert,C:\repos\neuecc_UniRx\Assets\Scripts\RuntimeUnitTestToolkit\Assert.cs,AreNotEqual,The length of the statement  "                        if (comparer.Compare(c1' c2) == 0) throw new AssertFailedException(string.Format("equal index:{0} expected:{1} actual:{2} message:{3}"' index' c1' c2' message)); " is 161.
Long Statement,RuntimeUnitTestToolkit,AssertExtensions,C:\repos\neuecc_UniRx\Assets\Scripts\RuntimeUnitTestToolkit\ChainingAssertion.Unity.cs,IsCollection,The length of the statement  "            CollectionAssert.AreEqual(expected.ToArray()' actual.ToArray()' new ComparisonComparer<T>(equalityComparison)' message); " is 120.
Long Statement,RuntimeUnitTestToolkit,AssertExtensions,C:\repos\neuecc_UniRx\Assets\Scripts\RuntimeUnitTestToolkit\ChainingAssertion.Unity.cs,IsNotCollection,The length of the statement  "            CollectionAssert.AreNotEqual(notExpected.ToArray()' actual.ToArray()' new ComparisonComparer<T>(equalityComparison)' message); " is 126.
Long Statement,RuntimeUnitTestToolkit,UnitTestRunner,C:\repos\neuecc_UniRx\Assets\Scripts\RuntimeUnitTestToolkit\UnitTestRunner.cs,RunTestInCoroutine,The length of the statement  "                    var line = string.Join("\n"' exception.StackTrace.Split('\n').Where(x => x.Contains(actionList.Key) || x.Contains(item2.Key)).ToArray()); " is 137.
Long Statement,RuntimeUnitTestToolkit,MicroCoroutineTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\Container.cs,FindLast,The length of the statement  "            var coroutines = mc.GetType().GetField("coroutines"' BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.GetField | BindingFlags.Instance); " is 147.
Long Statement,RuntimeUnitTestToolkit,MicroCoroutineTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\Container.cs,GetTailDynamic,The length of the statement  "            var tail = mc.GetType().GetField("tail"' BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.GetField | BindingFlags.Instance); " is 135.
Long Statement,RuntimeUnitTestToolkit,MicroCoroutineTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\Container.cs,EnumerationCycleFull,The length of the statement  "            coroutines.OrderBy(x => x.OriginalCount).Select(x => x.Count).IsCollection(0' 0' 0' 0' 0' 0' 0' 0' 0' 0' 0' 0' 0' 0' 0' 0); " is 123.
Long Statement,RuntimeUnitTestToolkit,MicroCoroutineTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\Container.cs,EnumerationCycleFull,The length of the statement  "            coroutines.OrderBy(x => x.OriginalCount).Select(x => x.Count).IsCollection(-1' -1' -1' -1' -1' -1' -1' -1' -1' -1' -1' -1' -1' -1' -1' -1); " is 139.
Long Statement,RuntimeUnitTestToolkit,AssertEx,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\Shim.cs,DoesNotThrow,The length of the statement  "                var formatted = string.Format("Failed DoesNotThrow. Catched:{0}{1}"' exception.GetType().Name' string.IsNullOrEmpty(message) ? "" : "' " + message); " is 148.
Long Statement,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Do,The length of the statement  "            Observable.Range(1' 5).Concat(Observable.Throw<int>(new Exception())).Do(x => list.Add(x)' ex => list.Add(100)' () => list.Add(1000)).Subscribe(_ => { }' _ => { }' () => { }); " is 175.
Long Statement,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoObserver,The length of the statement  "            Observable.Range(1' 5).Concat(Observable.Throw<int>(new Exception())).Do(observer).Subscribe(_ => { }' _ => { }' () => { }); " is 124.
Long Statement,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnCompleted,The length of the statement  "            Observable.Range(1' 5).Concat(Observable.Throw<int>(new Exception())).DoOnCompleted(() => list.Add(1000)).Subscribe(_ => { }' _ => { }' () => { }); " is 147.
Long Statement,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnError,The length of the statement  "            Observable.Range(1' 5).Concat(Observable.Throw<int>(new Exception())).DoOnError(_ => list.Add(100)).Subscribe(_ => { }' _ => { }' () => { }); " is 141.
Long Statement,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnTerminate,The length of the statement  "            Observable.Range(1' 5).Concat(Observable.Throw<int>(new Exception())).DoOnTerminate(() => list.Add(1000)).Subscribe(_ => { }' _ => { }' () => { }); " is 147.
Long Statement,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventPattern,The length of the statement  "                var d = Observable.FromEventPattern<EventHandler<MyEventArgs>' MyEventArgs>((h) => h.Invoke' h => tester.genericEventHandler += h' h => tester.genericEventHandler -= h) " is 168.
Long Statement,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventUnityLike,The length of the statement  "                var d = Observable.FromEvent<LikeUnityAction<int>' int>(h => new LikeUnityAction<int>(h)' h => tester.intUnityAction += h' h => tester.intUnityAction -= h) " is 155.
Long Statement,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventUnityLike,The length of the statement  "                var d = Observable.FromEvent<LikeUnityAction>(h => new LikeUnityAction(h)' h => tester.unityAction += h' h => tester.unityAction -= h) " is 134.
Long Statement,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The length of the statement  "            seq.StartWith(Scheduler.ThreadPool' Enumerable.Range(100' 3)).ToArray().Wait().IsCollection(100' 101' 102' 1' 2' 3' 4' 5); " is 122.
Long Statement,RuntimeUnitTestToolkit,ObservableGeneratorTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Return,The length of the statement  "            Observable.Return(100).Materialize().ToArray().Wait().IsCollection(Notification.CreateOnNext(100)' Notification.CreateOnCompleted<int>()); " is 138.
Long Statement,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelectorEnumerable,The length of the statement  "                list.IsCollection("OnNext((10' 1))"' "OnNext((10' 2))"' "OnNext((10' 3))"' "OnNext((100' 10))"' "OnNext((100' 10))"' "OnNext((100' 10))"' "OnCompleted()"); " is 155.
Long Statement,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelectorEnumerable,The length of the statement  "                list.IsCollection("OnNext((10' 1))"' "OnNext((10' 2))"' "OnNext((10' 3))"' "OnNext((100' 10))"' "OnNext((100' 10))"' "OnNext((100' 10))"' "OnError(System.Exception)"); " is 167.
Long Statement,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelectorEnumerableWithIndex,The length of the statement  "                a.SelectMany((x' i) => (x == 10) ? Enumerable.Range(i' 3) : Enumerable.Repeat(i' 3)' (x' i1' y' i2) => Tuple.Create(x' i1' y' i2)) " is 130.
Long Statement,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelectorEnumerableWithIndex,The length of the statement  "                list.IsCollection("OnNext((10' 0' 0' 0))"' "OnNext((10' 0' 1' 1))"' "OnNext((10' 0' 2' 2))"' "OnNext((100' 1' 1' 0))"' "OnNext((100' 1' 1' 1))"' "OnNext((100' 1' 1' 2))"' "OnCompleted()"); " is 188.
Long Statement,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelectorEnumerableWithIndex,The length of the statement  "                a.SelectMany((x' i) => (x == 10) ? Enumerable.Range(i' 3) : Enumerable.Repeat(i' 3)' (x' i1' y' i2) => Tuple.Create(x' i1' y' i2)) " is 130.
Long Statement,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelectorEnumerableWithIndex,The length of the statement  "                list.IsCollection("OnNext((10' 0' 0' 0))"' "OnNext((10' 0' 1' 1))"' "OnNext((10' 0' 2' 2))"' "OnNext((100' 1' 1' 0))"' "OnNext((100' 1' 1' 1))"' "OnNext((100' 1' 1' 2))"' "OnError(System.Exception)"); " is 200.
Long Statement,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelectorWithIndex,The length of the statement  "                a.SelectMany((x' i) => (x == 10) ? b.Select(y => Tuple.Create(y' i)) : c.Select(y => Tuple.Create(y' i))' (x' i1' y' i2) => Tuple.Create(x' i1' y.Item1' y.Item2' i2)) " is 166.
Long Statement,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelectorWithIndex,The length of the statement  "                list.IsCollection("OnNext((10' 0' 200' 0' 0))"' "OnNext((100' 1' 300' 1' 0))"' "OnNext((100' 1' 400' 1' 1))"' "OnCompleted()"); " is 127.
Long Statement,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelectorWithIndex,The length of the statement  "                a.SelectMany((x' i) => (x == 10) ? b.Select(y => Tuple.Create(y' i)) : c.Select(y => Tuple.Create(y' i))' (x' i1' y' i2) => Tuple.Create(x' i1' y.Item1' y.Item2' i2)) " is 166.
Long Statement,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelectorWithIndex,The length of the statement  "                a.SelectMany((x' i) => (x == 10) ? b.Select(y => Tuple.Create(y' i)) : c.Select(y => Tuple.Create(y' i))' (x' i1' y' i2) => Tuple.Create(x' i1' y.Item1' y.Item2' i2)) " is 166.
Long Statement,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectorEnumerable,The length of the statement  "                list.IsCollection("OnNext(1)"' "OnNext(2)"' "OnNext(3)"' "OnNext(10)"' "OnNext(10)"' "OnNext(10)"' "OnError(System.Exception)"); " is 128.
Long Statement,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectorEnumerableWithIndex,The length of the statement  "                list.IsCollection("OnNext(0)"' "OnNext(1)"' "OnNext(2)"' "OnNext(1)"' "OnNext(1)"' "OnNext(1)"' "OnError(System.Exception)"); " is 125.
Long Statement,Microsoft.VisualStudio.TestTools.UnitTesting,AssertEx,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\Shim.cs,DoesNotThrow,The length of the statement  "                var formatted = string.Format("Failed DoesNotThrow. Catched:{0}{1}"' exception.GetType().Name' string.IsNullOrEmpty(message) ? "" : "' " + message); " is 148.
Empty Catch Block,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Durability,The method has an empty catch block.
Empty Catch Block,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Durability,The method has an empty catch block.
Empty Catch Block,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Durability,The method has an empty catch block.
Empty Catch Block,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Durability,The method has an empty catch block.
Empty Catch Block,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Durability,The method has an empty catch block.
Empty Catch Block,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Durability,The method has an empty catch block.
Empty Catch Block,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventPattern,The method has an empty catch block.
Empty Catch Block,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventPattern,The method has an empty catch block.
Empty Catch Block,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventPattern,The method has an empty catch block.
Empty Catch Block,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventUnity,The method has an empty catch block.
Empty Catch Block,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventUnity,The method has an empty catch block.
Empty Catch Block,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventUnity,The method has an empty catch block.
Empty Catch Block,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventUnity,The method has an empty catch block.
Empty Catch Block,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventUnity,The method has an empty catch block.
Empty Catch Block,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventUnity,The method has an empty catch block.
Empty Catch Block,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventUnityLike,The method has an empty catch block.
Empty Catch Block,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventUnityLike,The method has an empty catch block.
Empty Catch Block,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventUnityLike,The method has an empty catch block.
Empty Catch Block,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventUnityLike,The method has an empty catch block.
Empty Catch Block,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventUnityLike,The method has an empty catch block.
Empty Catch Block,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventUnityLike,The method has an empty catch block.
Empty Catch Block,RuntimeUnitTestToolkit,ErrorHandlingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Finally,The method has an empty catch block.
Magic Number,RuntimeUnitTestToolkit,UnitTestRunner,C:\repos\neuecc_UniRx\Assets\Scripts\RuntimeUnitTestToolkit\UnitTestRunner.cs,Start,The following statement contains a magic number: clearButton.gameObject.GetComponent<Image>().color = new Color(170 / 255f' 170 / 255f' 170 / 255f' 1);
Magic Number,RuntimeUnitTestToolkit,UnitTestRunner,C:\repos\neuecc_UniRx\Assets\Scripts\RuntimeUnitTestToolkit\UnitTestRunner.cs,Start,The following statement contains a magic number: clearButton.gameObject.GetComponent<Image>().color = new Color(170 / 255f' 170 / 255f' 170 / 255f' 1);
Magic Number,RuntimeUnitTestToolkit,UnitTestRunner,C:\repos\neuecc_UniRx\Assets\Scripts\RuntimeUnitTestToolkit\UnitTestRunner.cs,Start,The following statement contains a magic number: clearButton.gameObject.GetComponent<Image>().color = new Color(170 / 255f' 170 / 255f' 170 / 255f' 1);
Magic Number,RuntimeUnitTestToolkit,UnitTestRunner,C:\repos\neuecc_UniRx\Assets\Scripts\RuntimeUnitTestToolkit\UnitTestRunner.cs,Start,The following statement contains a magic number: executeAllButton.gameObject.GetComponent<Image>().color = new Color(250 / 255f' 150 / 255f' 150 / 255f' 1);
Magic Number,RuntimeUnitTestToolkit,UnitTestRunner,C:\repos\neuecc_UniRx\Assets\Scripts\RuntimeUnitTestToolkit\UnitTestRunner.cs,Start,The following statement contains a magic number: executeAllButton.gameObject.GetComponent<Image>().color = new Color(250 / 255f' 150 / 255f' 150 / 255f' 1);
Magic Number,RuntimeUnitTestToolkit,UnitTestRunner,C:\repos\neuecc_UniRx\Assets\Scripts\RuntimeUnitTestToolkit\UnitTestRunner.cs,Start,The following statement contains a magic number: executeAllButton.gameObject.GetComponent<Image>().color = new Color(250 / 255f' 150 / 255f' 150 / 255f' 1);
Magic Number,RuntimeUnitTestToolkit,UnitTestRunner,C:\repos\neuecc_UniRx\Assets\Scripts\RuntimeUnitTestToolkit\UnitTestRunner.cs,Start,The following statement contains a magic number: clearButton.onClick.AddListener(() =>              {                  logText.text = "";                  foreach (var btn in list.GetComponentsInChildren<Button>())                  {                      btn.interactable = true;                      btn.GetComponent<Image>().color = normalColor;                  }                  executeAllButton.gameObject.GetComponent<Image>().color = new Color(250 / 255f' 150 / 255f' 150 / 255f' 1);              });
Magic Number,RuntimeUnitTestToolkit,UnitTestRunner,C:\repos\neuecc_UniRx\Assets\Scripts\RuntimeUnitTestToolkit\UnitTestRunner.cs,Start,The following statement contains a magic number: clearButton.onClick.AddListener(() =>              {                  logText.text = "";                  foreach (var btn in list.GetComponentsInChildren<Button>())                  {                      btn.interactable = true;                      btn.GetComponent<Image>().color = normalColor;                  }                  executeAllButton.gameObject.GetComponent<Image>().color = new Color(250 / 255f' 150 / 255f' 150 / 255f' 1);              });
Magic Number,RuntimeUnitTestToolkit,UnitTestRunner,C:\repos\neuecc_UniRx\Assets\Scripts\RuntimeUnitTestToolkit\UnitTestRunner.cs,Start,The following statement contains a magic number: clearButton.onClick.AddListener(() =>              {                  logText.text = "";                  foreach (var btn in list.GetComponentsInChildren<Button>())                  {                      btn.interactable = true;                      btn.GetComponent<Image>().color = normalColor;                  }                  executeAllButton.gameObject.GetComponent<Image>().color = new Color(250 / 255f' 150 / 255f' 150 / 255f' 1);              });
Magic Number,RuntimeUnitTestToolkit,SchedulerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\Container.cs,CurrentThread2,The following statement contains a magic number: scheduler.Schedule(() =>              {                  list.Add("one");                  scheduler.Schedule(TimeSpan.FromSeconds(3)' () =>                  {                      list.Add("after 3");                  });                  scheduler.Schedule(TimeSpan.FromSeconds(1)' () =>                  {                      list.Add("after 1");                  });              });
Magic Number,RuntimeUnitTestToolkit,SchedulerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\Container.cs,CurrentThread3,The following statement contains a magic number: scheduler.Schedule(() =>              {                  list.Add("one");                  var cancel = scheduler.Schedule(TimeSpan.FromSeconds(3)' () =>                  {                      list.Add("after 3");                  });                  scheduler.Schedule(TimeSpan.FromSeconds(1)' () =>                  {                      list.Add("after 1");                      cancel.Dispose();                  });              });
Magic Number,RuntimeUnitTestToolkit,MicroCoroutineTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\Container.cs,EnumerationCycle,The following statement contains a magic number: var coroutines = new[]              {                  new DecrementEnumerator(1)'                  new DecrementEnumerator(2)'                  new DecrementEnumerator(3)'                  new DecrementEnumerator(4)'                  new DecrementEnumerator(5)'              };
Magic Number,RuntimeUnitTestToolkit,MicroCoroutineTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\Container.cs,EnumerationCycle,The following statement contains a magic number: var coroutines = new[]              {                  new DecrementEnumerator(1)'                  new DecrementEnumerator(2)'                  new DecrementEnumerator(3)'                  new DecrementEnumerator(4)'                  new DecrementEnumerator(5)'              };
Magic Number,RuntimeUnitTestToolkit,MicroCoroutineTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\Container.cs,EnumerationCycle,The following statement contains a magic number: var coroutines = new[]              {                  new DecrementEnumerator(1)'                  new DecrementEnumerator(2)'                  new DecrementEnumerator(3)'                  new DecrementEnumerator(4)'                  new DecrementEnumerator(5)'              };
Magic Number,RuntimeUnitTestToolkit,MicroCoroutineTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\Container.cs,EnumerationCycle,The following statement contains a magic number: var coroutines = new[]              {                  new DecrementEnumerator(1)'                  new DecrementEnumerator(2)'                  new DecrementEnumerator(3)'                  new DecrementEnumerator(4)'                  new DecrementEnumerator(5)'              };
Magic Number,RuntimeUnitTestToolkit,MicroCoroutineTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\Container.cs,EnumerationCycle,The following statement contains a magic number: GetTailDynamic(mc).Is(5);
Magic Number,RuntimeUnitTestToolkit,MicroCoroutineTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\Container.cs,EnumerationCycle,The following statement contains a magic number: coroutines.OrderBy(x => x.OriginalCount).Select(x => x.Count).IsCollection(0' 1' 2' 3' 4);
Magic Number,RuntimeUnitTestToolkit,MicroCoroutineTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\Container.cs,EnumerationCycle,The following statement contains a magic number: coroutines.OrderBy(x => x.OriginalCount).Select(x => x.Count).IsCollection(0' 1' 2' 3' 4);
Magic Number,RuntimeUnitTestToolkit,MicroCoroutineTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\Container.cs,EnumerationCycle,The following statement contains a magic number: coroutines.OrderBy(x => x.OriginalCount).Select(x => x.Count).IsCollection(0' 1' 2' 3' 4);
Magic Number,RuntimeUnitTestToolkit,MicroCoroutineTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\Container.cs,EnumerationCycle,The following statement contains a magic number: GetTailDynamic(mc).Is(4);
Magic Number,RuntimeUnitTestToolkit,MicroCoroutineTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\Container.cs,EnumerationCycle,The following statement contains a magic number: coroutines.OrderBy(x => x.OriginalCount).Select(x => x.Count).IsCollection(-1' 0' 1' 2' 3);
Magic Number,RuntimeUnitTestToolkit,MicroCoroutineTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\Container.cs,EnumerationCycle,The following statement contains a magic number: coroutines.OrderBy(x => x.OriginalCount).Select(x => x.Count).IsCollection(-1' 0' 1' 2' 3);
Magic Number,RuntimeUnitTestToolkit,MicroCoroutineTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\Container.cs,EnumerationCycle,The following statement contains a magic number: GetTailDynamic(mc).Is(3);
Magic Number,RuntimeUnitTestToolkit,MicroCoroutineTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\Container.cs,EnumerationCycle,The following statement contains a magic number: coroutines.OrderBy(x => x.OriginalCount).Select(x => x.Count).IsCollection(-1' -1' 0' 1' 2);
Magic Number,RuntimeUnitTestToolkit,MicroCoroutineTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\Container.cs,EnumerationCycle,The following statement contains a magic number: GetTailDynamic(mc).Is(2);
Magic Number,RuntimeUnitTestToolkit,MicroCoroutineTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\Container.cs,EnumerationCycleBlank,The following statement contains a magic number: GetTailDynamic(mc).Is(5);
Magic Number,RuntimeUnitTestToolkit,MicroCoroutineTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\Container.cs,EnumerationCycleFull,The following statement contains a magic number: GetTailDynamic(mc).Is(16);
Magic Number,RuntimeUnitTestToolkit,MicroCoroutineTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\Container.cs,EnumerationCycleFull,The following statement contains a magic number: GetTailDynamic(mc).Is(16);
Magic Number,RuntimeUnitTestToolkit,MicroCoroutineTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\Container.cs,EnumerationCycleRandom,The following statement contains a magic number: {                  for (int i = 0; i < 1000; i++)                  {                      var expectedTail = rand.Next(1' 100);                      var coroutines = Enumerable.Range(1' expectedTail)                          .Select(x => new DecrementEnumerator(rand.Next(0' 100)))                          .ToArray();                      var mc = Create();                      foreach (var item in coroutines)                      {                          mc.AddCoroutine(item);                      }                      var maxRunCount = coroutines.Max(x => x.OriginalCount);                      var expected = coroutines.OrderBy(x => x.OriginalCount).Select(x => x.Count).ToArray();                      for (int j = 0; j < maxRunCount + 1; j++)                      {                          mc.Run();                          // validate                          expected = expected.Select(x => (x == -1) ? -1 : (x - 1)).ToArray();                          coroutines.OrderBy(x => x.OriginalCount).Select(x => x.Count).IsCollection(expected);                          var tail = FindLast(mc);                          GetTailDynamic(mc).Is(tail);                      }                      GetTailDynamic(mc).Is(0);                  }              }
Magic Number,RuntimeUnitTestToolkit,MicroCoroutineTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\Container.cs,EnumerationCycleRandom,The following statement contains a magic number: {                  for (int i = 0; i < 1000; i++)                  {                      var expectedTail = rand.Next(1' 100);                      var coroutines = Enumerable.Range(1' expectedTail)                          .Select(x => new DecrementEnumerator(rand.Next(0' 100)))                          .ToArray();                      var mc = Create();                      foreach (var item in coroutines)                      {                          mc.AddCoroutine(item);                      }                      var maxRunCount = coroutines.Max(x => x.OriginalCount);                      var expected = coroutines.OrderBy(x => x.OriginalCount).Select(x => x.Count).ToArray();                      for (int j = 0; j < maxRunCount + 1; j++)                      {                          mc.Run();                          // validate                          expected = expected.Select(x => (x == -1) ? -1 : (x - 1)).ToArray();                          coroutines.OrderBy(x => x.OriginalCount).Select(x => x.Count).IsCollection(expected);                          var tail = FindLast(mc);                          GetTailDynamic(mc).Is(tail);                      }                      GetTailDynamic(mc).Is(0);                  }              }
Magic Number,RuntimeUnitTestToolkit,MicroCoroutineTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\Container.cs,EnumerationCycleRandom,The following statement contains a magic number: {                  for (int i = 0; i < 1000; i++)                  {                      var expectedTail = rand.Next(1' 100);                      var coroutines = Enumerable.Range(1' expectedTail)                          .Select(x => new DecrementEnumerator(rand.Next(0' 100)))                          .ToArray();                      var mc = Create();                      foreach (var item in coroutines)                      {                          mc.AddCoroutine(item);                      }                      var maxRunCount = coroutines.Max(x => x.OriginalCount);                      var expected = coroutines.OrderBy(x => x.OriginalCount).Select(x => x.Count).ToArray();                      for (int j = 0; j < maxRunCount + 1; j++)                      {                          mc.Run();                          // validate                          expected = expected.Select(x => (x == -1) ? -1 : (x - 1)).ToArray();                          coroutines.OrderBy(x => x.OriginalCount).Select(x => x.Count).IsCollection(expected);                          var tail = FindLast(mc);                          GetTailDynamic(mc).Is(tail);                      }                      GetTailDynamic(mc).Is(0);                  }              }
Magic Number,RuntimeUnitTestToolkit,MicroCoroutineTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\Container.cs,EnumerationCycleRandom,The following statement contains a magic number: {                  // small case                  for (int i = 0; i < 1000; i++)                  {                      var expectedTail = rand.Next(1' 100);                      var coroutines = Enumerable.Range(1' expectedTail)                          .Select(x => new DecrementEnumerator(rand.Next(0' 5)))                          .ToArray();                      var mc = Create();                      foreach (var item in coroutines)                      {                          mc.AddCoroutine(item);                      }                      var maxRunCount = coroutines.Max(x => x.OriginalCount);                      var expected = coroutines.OrderBy(x => x.OriginalCount).Select(x => x.Count).ToArray();                      for (int j = 0; j < maxRunCount + 1; j++)                      {                          mc.Run();                          // validate                          expected = expected.Select(x => (x == -1) ? -1 : (x - 1)).ToArray();                          coroutines.OrderBy(x => x.OriginalCount).Select(x => x.Count).IsCollection(expected);                          var tail = FindLast(mc);                          GetTailDynamic(mc).Is(tail);                      }                      GetTailDynamic(mc).Is(0);                  }              }
Magic Number,RuntimeUnitTestToolkit,MicroCoroutineTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\Container.cs,EnumerationCycleRandom,The following statement contains a magic number: {                  // small case                  for (int i = 0; i < 1000; i++)                  {                      var expectedTail = rand.Next(1' 100);                      var coroutines = Enumerable.Range(1' expectedTail)                          .Select(x => new DecrementEnumerator(rand.Next(0' 5)))                          .ToArray();                      var mc = Create();                      foreach (var item in coroutines)                      {                          mc.AddCoroutine(item);                      }                      var maxRunCount = coroutines.Max(x => x.OriginalCount);                      var expected = coroutines.OrderBy(x => x.OriginalCount).Select(x => x.Count).ToArray();                      for (int j = 0; j < maxRunCount + 1; j++)                      {                          mc.Run();                          // validate                          expected = expected.Select(x => (x == -1) ? -1 : (x - 1)).ToArray();                          coroutines.OrderBy(x => x.OriginalCount).Select(x => x.Count).IsCollection(expected);                          var tail = FindLast(mc);                          GetTailDynamic(mc).Is(tail);                      }                      GetTailDynamic(mc).Is(0);                  }              }
Magic Number,RuntimeUnitTestToolkit,MicroCoroutineTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\Container.cs,EnumerationCycleRandom,The following statement contains a magic number: {                  // small case                  for (int i = 0; i < 1000; i++)                  {                      var expectedTail = rand.Next(1' 100);                      var coroutines = Enumerable.Range(1' expectedTail)                          .Select(x => new DecrementEnumerator(rand.Next(0' 5)))                          .ToArray();                      var mc = Create();                      foreach (var item in coroutines)                      {                          mc.AddCoroutine(item);                      }                      var maxRunCount = coroutines.Max(x => x.OriginalCount);                      var expected = coroutines.OrderBy(x => x.OriginalCount).Select(x => x.Count).ToArray();                      for (int j = 0; j < maxRunCount + 1; j++)                      {                          mc.Run();                          // validate                          expected = expected.Select(x => (x == -1) ? -1 : (x - 1)).ToArray();                          coroutines.OrderBy(x => x.OriginalCount).Select(x => x.Count).IsCollection(expected);                          var tail = FindLast(mc);                          GetTailDynamic(mc).Is(tail);                      }                      GetTailDynamic(mc).Is(0);                  }              }
Magic Number,RuntimeUnitTestToolkit,MicroCoroutineTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\Container.cs,EnumerationCycleRandom,The following statement contains a magic number: {                  // small case2                  for (int i = 0; i < 1000; i++)                  {                      var expectedTail = rand.Next(1' 10);                      var coroutines = Enumerable.Range(1' expectedTail)                          .Select(x => new DecrementEnumerator(rand.Next(0' 5)))                          .ToArray();                      var mc = Create();                      foreach (var item in coroutines)                      {                          mc.AddCoroutine(item);                      }                      var maxRunCount = coroutines.Max(x => x.OriginalCount);                      var expected = coroutines.OrderBy(x => x.OriginalCount).Select(x => x.Count).ToArray();                      for (int j = 0; j < maxRunCount + 1; j++)                      {                          mc.Run();                          // validate                          expected = expected.Select(x => (x == -1) ? -1 : (x - 1)).ToArray();                          coroutines.OrderBy(x => x.OriginalCount).Select(x => x.Count).IsCollection(expected);                          var tail = FindLast(mc);                          GetTailDynamic(mc).Is(tail);                      }                      GetTailDynamic(mc).Is(0);                  }              }
Magic Number,RuntimeUnitTestToolkit,MicroCoroutineTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\Container.cs,EnumerationCycleRandom,The following statement contains a magic number: {                  // small case2                  for (int i = 0; i < 1000; i++)                  {                      var expectedTail = rand.Next(1' 10);                      var coroutines = Enumerable.Range(1' expectedTail)                          .Select(x => new DecrementEnumerator(rand.Next(0' 5)))                          .ToArray();                      var mc = Create();                      foreach (var item in coroutines)                      {                          mc.AddCoroutine(item);                      }                      var maxRunCount = coroutines.Max(x => x.OriginalCount);                      var expected = coroutines.OrderBy(x => x.OriginalCount).Select(x => x.Count).ToArray();                      for (int j = 0; j < maxRunCount + 1; j++)                      {                          mc.Run();                          // validate                          expected = expected.Select(x => (x == -1) ? -1 : (x - 1)).ToArray();                          coroutines.OrderBy(x => x.OriginalCount).Select(x => x.Count).IsCollection(expected);                          var tail = FindLast(mc);                          GetTailDynamic(mc).Is(tail);                      }                      GetTailDynamic(mc).Is(0);                  }              }
Magic Number,RuntimeUnitTestToolkit,MicroCoroutineTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\Container.cs,EnumerationCycleRandom,The following statement contains a magic number: {                  // small case2                  for (int i = 0; i < 1000; i++)                  {                      var expectedTail = rand.Next(1' 10);                      var coroutines = Enumerable.Range(1' expectedTail)                          .Select(x => new DecrementEnumerator(rand.Next(0' 5)))                          .ToArray();                      var mc = Create();                      foreach (var item in coroutines)                      {                          mc.AddCoroutine(item);                      }                      var maxRunCount = coroutines.Max(x => x.OriginalCount);                      var expected = coroutines.OrderBy(x => x.OriginalCount).Select(x => x.Count).ToArray();                      for (int j = 0; j < maxRunCount + 1; j++)                      {                          mc.Run();                          // validate                          expected = expected.Select(x => (x == -1) ? -1 : (x - 1)).ToArray();                          coroutines.OrderBy(x => x.OriginalCount).Select(x => x.Count).IsCollection(expected);                          var tail = FindLast(mc);                          GetTailDynamic(mc).Is(tail);                      }                      GetTailDynamic(mc).Is(0);                  }              }
Magic Number,RuntimeUnitTestToolkit,EventTestesr,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\Container.cs,Fire,The following statement contains a magic number: switch (num)              {                  case 1:                      if (Event1 == null) return;                      Event1(this' new EventArgs());                      break;                  case 2:                      if (Event2 == null) return;                      Event2(this' new MyEventArgs());                      break;                  case 3:                      if (Event3 == null) return;                      Event3(this' new MyEventArgs());                      break;                  case 4:                      if (Event4 == null) return;                      Event4();                      break;                  case 5:                      if (Event5 == null) return;                      Event5(100);                      break;                  case 6:                      if (Event6 == null) return;                      Event6(100' "hogehoge");                      break;                  default:                      break;              }
Magic Number,RuntimeUnitTestToolkit,EventTestesr,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\Container.cs,Fire,The following statement contains a magic number: switch (num)              {                  case 1:                      if (Event1 == null) return;                      Event1(this' new EventArgs());                      break;                  case 2:                      if (Event2 == null) return;                      Event2(this' new MyEventArgs());                      break;                  case 3:                      if (Event3 == null) return;                      Event3(this' new MyEventArgs());                      break;                  case 4:                      if (Event4 == null) return;                      Event4();                      break;                  case 5:                      if (Event5 == null) return;                      Event5(100);                      break;                  case 6:                      if (Event6 == null) return;                      Event6(100' "hogehoge");                      break;                  default:                      break;              }
Magic Number,RuntimeUnitTestToolkit,EventTestesr,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\Container.cs,Fire,The following statement contains a magic number: switch (num)              {                  case 1:                      if (Event1 == null) return;                      Event1(this' new EventArgs());                      break;                  case 2:                      if (Event2 == null) return;                      Event2(this' new MyEventArgs());                      break;                  case 3:                      if (Event3 == null) return;                      Event3(this' new MyEventArgs());                      break;                  case 4:                      if (Event4 == null) return;                      Event4();                      break;                  case 5:                      if (Event5 == null) return;                      Event5(100);                      break;                  case 6:                      if (Event6 == null) return;                      Event6(100' "hogehoge");                      break;                  default:                      break;              }
Magic Number,RuntimeUnitTestToolkit,EventTestesr,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\Container.cs,Fire,The following statement contains a magic number: switch (num)              {                  case 1:                      if (Event1 == null) return;                      Event1(this' new EventArgs());                      break;                  case 2:                      if (Event2 == null) return;                      Event2(this' new MyEventArgs());                      break;                  case 3:                      if (Event3 == null) return;                      Event3(this' new MyEventArgs());                      break;                  case 4:                      if (Event4 == null) return;                      Event4();                      break;                  case 5:                      if (Event5 == null) return;                      Event5(100);                      break;                  case 6:                      if (Event6 == null) return;                      Event6(100' "hogehoge");                      break;                  default:                      break;              }
Magic Number,RuntimeUnitTestToolkit,EventTestesr,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\Container.cs,Fire,The following statement contains a magic number: switch (num)              {                  case 1:                      if (Event1 == null) return;                      Event1(this' new EventArgs());                      break;                  case 2:                      if (Event2 == null) return;                      Event2(this' new MyEventArgs());                      break;                  case 3:                      if (Event3 == null) return;                      Event3(this' new MyEventArgs());                      break;                  case 4:                      if (Event4 == null) return;                      Event4();                      break;                  case 5:                      if (Event5 == null) return;                      Event5(100);                      break;                  case 6:                      if (Event6 == null) return;                      Event6(100' "hogehoge");                      break;                  default:                      break;              }
Magic Number,RuntimeUnitTestToolkit,EventTestesr,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\Container.cs,Fire,The following statement contains a magic number: switch (num)              {                  case 1:                      if (Event1 == null) return;                      Event1(this' new EventArgs());                      break;                  case 2:                      if (Event2 == null) return;                      Event2(this' new MyEventArgs());                      break;                  case 3:                      if (Event3 == null) return;                      Event3(this' new MyEventArgs());                      break;                  case 4:                      if (Event4 == null) return;                      Event4();                      break;                  case 5:                      if (Event5 == null) return;                      Event5(100);                      break;                  case 6:                      if (Event6 == null) return;                      Event6(100' "hogehoge");                      break;                  default:                      break;              }
Magic Number,RuntimeUnitTestToolkit,EventTestesr,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\Container.cs,Fire,The following statement contains a magic number: switch (num)              {                  case 1:                      if (Event1 == null) return;                      Event1(this' new EventArgs());                      break;                  case 2:                      if (Event2 == null) return;                      Event2(this' new MyEventArgs());                      break;                  case 3:                      if (Event3 == null) return;                      Event3(this' new MyEventArgs());                      break;                  case 4:                      if (Event4 == null) return;                      Event4();                      break;                  case 5:                      if (Event5 == null) return;                      Event5(100);                      break;                  case 6:                      if (Event6 == null) return;                      Event6(100' "hogehoge");                      break;                  default:                      break;              }
Magic Number,RuntimeUnitTestToolkit,ListObserver,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\Container.cs,OnCompleted,The following statement contains a magic number: list.Add(1000);
Magic Number,RuntimeUnitTestToolkit,ListObserver,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\Container.cs,OnError,The following statement contains a magic number: list.Add(100);
Magic Number,RuntimeUnitTestToolkit,AggregateTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Aggregate,The following statement contains a magic number: Observable.Range(1' 5).Aggregate((x' y) => x + y).Wait().Is(15);
Magic Number,RuntimeUnitTestToolkit,AggregateTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Aggregate,The following statement contains a magic number: Observable.Range(1' 5).Aggregate((x' y) => x + y).Wait().Is(15);
Magic Number,RuntimeUnitTestToolkit,AggregateTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Aggregate,The following statement contains a magic number: Observable.Empty<int>().Aggregate(100' (x' y) => x + y).Wait().Is(100);
Magic Number,RuntimeUnitTestToolkit,AggregateTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Aggregate,The following statement contains a magic number: Observable.Empty<int>().Aggregate(100' (x' y) => x + y).Wait().Is(100);
Magic Number,RuntimeUnitTestToolkit,AggregateTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Aggregate,The following statement contains a magic number: Observable.Range(1' 5).Aggregate(100' (x' y) => x + y).Wait().Is(115);
Magic Number,RuntimeUnitTestToolkit,AggregateTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Aggregate,The following statement contains a magic number: Observable.Range(1' 5).Aggregate(100' (x' y) => x + y).Wait().Is(115);
Magic Number,RuntimeUnitTestToolkit,AggregateTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Aggregate,The following statement contains a magic number: Observable.Range(1' 5).Aggregate(100' (x' y) => x + y).Wait().Is(115);
Magic Number,RuntimeUnitTestToolkit,AggregateTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Aggregate,The following statement contains a magic number: Observable.Empty<int>().Aggregate(100' (x' y) => x + y' x => x + x).Wait().Is(200);
Magic Number,RuntimeUnitTestToolkit,AggregateTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Aggregate,The following statement contains a magic number: Observable.Empty<int>().Aggregate(100' (x' y) => x + y' x => x + x).Wait().Is(200);
Magic Number,RuntimeUnitTestToolkit,AggregateTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Aggregate,The following statement contains a magic number: Observable.Range(1' 5).Aggregate(100' (x' y) => x + y' x => x + x).Wait().Is(230);
Magic Number,RuntimeUnitTestToolkit,AggregateTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Aggregate,The following statement contains a magic number: Observable.Range(1' 5).Aggregate(100' (x' y) => x + y' x => x + x).Wait().Is(230);
Magic Number,RuntimeUnitTestToolkit,AggregateTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Aggregate,The following statement contains a magic number: Observable.Range(1' 5).Aggregate(100' (x' y) => x + y' x => x + x).Wait().Is(230);
Magic Number,RuntimeUnitTestToolkit,AggregateTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Scan,The following statement contains a magic number: var range = Observable.Range(1' 5);
Magic Number,RuntimeUnitTestToolkit,AggregateTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Scan,The following statement contains a magic number: range.Scan((x' y) => x + y).ToArrayWait().IsCollection(1' 3' 6' 10' 15);
Magic Number,RuntimeUnitTestToolkit,AggregateTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Scan,The following statement contains a magic number: range.Scan((x' y) => x + y).ToArrayWait().IsCollection(1' 3' 6' 10' 15);
Magic Number,RuntimeUnitTestToolkit,AggregateTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Scan,The following statement contains a magic number: range.Scan((x' y) => x + y).ToArrayWait().IsCollection(1' 3' 6' 10' 15);
Magic Number,RuntimeUnitTestToolkit,AggregateTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Scan,The following statement contains a magic number: range.Scan((x' y) => x + y).ToArrayWait().IsCollection(1' 3' 6' 10' 15);
Magic Number,RuntimeUnitTestToolkit,AggregateTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Scan,The following statement contains a magic number: range.Scan(100' (x' y) => x + y).ToArrayWait().IsCollection(101' 103' 106' 110' 115);
Magic Number,RuntimeUnitTestToolkit,AggregateTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Scan,The following statement contains a magic number: range.Scan(100' (x' y) => x + y).ToArrayWait().IsCollection(101' 103' 106' 110' 115);
Magic Number,RuntimeUnitTestToolkit,AggregateTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Scan,The following statement contains a magic number: range.Scan(100' (x' y) => x + y).ToArrayWait().IsCollection(101' 103' 106' 110' 115);
Magic Number,RuntimeUnitTestToolkit,AggregateTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Scan,The following statement contains a magic number: range.Scan(100' (x' y) => x + y).ToArrayWait().IsCollection(101' 103' 106' 110' 115);
Magic Number,RuntimeUnitTestToolkit,AggregateTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Scan,The following statement contains a magic number: range.Scan(100' (x' y) => x + y).ToArrayWait().IsCollection(101' 103' 106' 110' 115);
Magic Number,RuntimeUnitTestToolkit,AggregateTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Scan,The following statement contains a magic number: range.Scan(100' (x' y) => x + y).ToArrayWait().IsCollection(101' 103' 106' 110' 115);
Magic Number,RuntimeUnitTestToolkit,AggregateTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Scan,The following statement contains a magic number: Observable.Empty<int>().Scan(100' (x' y) => x + y).ToArrayWait().IsCollection();
Magic Number,RuntimeUnitTestToolkit,ContinueWithTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ContinueWith,The following statement contains a magic number: subject.OnNext(10);
Magic Number,RuntimeUnitTestToolkit,ContinueWithTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ContinueWith,The following statement contains a magic number: subject.OnNext(100);
Magic Number,RuntimeUnitTestToolkit,ContinueWithTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ContinueWith,The following statement contains a magic number: record.Values[0].Is(100);
Magic Number,RuntimeUnitTestToolkit,ContinueWithTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ContinueWith2,The following statement contains a magic number: var record = subject.ContinueWith(x => Observable.Return(x).Delay(TimeSpan.FromMilliseconds(100))).Record();
Magic Number,RuntimeUnitTestToolkit,ContinueWithTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ContinueWith2,The following statement contains a magic number: subject.OnNext(10);
Magic Number,RuntimeUnitTestToolkit,ContinueWithTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ContinueWith2,The following statement contains a magic number: subject.OnNext(100);
Magic Number,RuntimeUnitTestToolkit,ContinueWithTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ContinueWith2,The following statement contains a magic number: Thread.Sleep(TimeSpan.FromMilliseconds(200));
Magic Number,RuntimeUnitTestToolkit,ContinueWithTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ContinueWith2,The following statement contains a magic number: record.Values[0].Is(100);
Magic Number,RuntimeUnitTestToolkit,ConversionTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AsObservable,The following statement contains a magic number: Observable.Range(1' 10).AsObservable().ToArrayWait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ConversionTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AsObservable,The following statement contains a magic number: Observable.Range(1' 10).AsObservable().ToArrayWait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ConversionTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AsObservable,The following statement contains a magic number: Observable.Range(1' 10).AsObservable().ToArrayWait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ConversionTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AsObservable,The following statement contains a magic number: Observable.Range(1' 10).AsObservable().ToArrayWait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ConversionTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AsObservable,The following statement contains a magic number: Observable.Range(1' 10).AsObservable().ToArrayWait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ConversionTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AsObservable,The following statement contains a magic number: Observable.Range(1' 10).AsObservable().ToArrayWait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ConversionTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AsObservable,The following statement contains a magic number: Observable.Range(1' 10).AsObservable().ToArrayWait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ConversionTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AsObservable,The following statement contains a magic number: Observable.Range(1' 10).AsObservable().ToArrayWait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ConversionTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AsObservable,The following statement contains a magic number: Observable.Range(1' 10).AsObservable().ToArrayWait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ConversionTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AsObservable,The following statement contains a magic number: Observable.Range(1' 10).AsObservable().ToArrayWait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ConversionTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AsSingleUnitObservable,The following statement contains a magic number: subject.OnNext(100);
Magic Number,RuntimeUnitTestToolkit,ConversionTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AsUnitObservable,The following statement contains a magic number: Observable.Range(1' 3).AsUnitObservable().ToArrayWait().IsCollection(Unit.Default' Unit.Default' Unit.Default);
Magic Number,RuntimeUnitTestToolkit,ConversionTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Cast,The following statement contains a magic number: Observable.Range(1' 3).Cast<int' object>().ToArrayWait().IsCollection(1' 2' 3);
Magic Number,RuntimeUnitTestToolkit,ConversionTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Cast,The following statement contains a magic number: Observable.Range(1' 3).Cast<int' object>().ToArrayWait().IsCollection(1' 2' 3);
Magic Number,RuntimeUnitTestToolkit,ConversionTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Cast,The following statement contains a magic number: Observable.Range(1' 3).Cast<int' object>().ToArrayWait().IsCollection(1' 2' 3);
Magic Number,RuntimeUnitTestToolkit,ConversionTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,OfType,The following statement contains a magic number: subject.OnNext(2);
Magic Number,RuntimeUnitTestToolkit,ConversionTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,OfType,The following statement contains a magic number: subject.OnNext(3);
Magic Number,RuntimeUnitTestToolkit,ConversionTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,OfType,The following statement contains a magic number: list.IsCollection(1' 2' 3);
Magic Number,RuntimeUnitTestToolkit,ConversionTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,OfType,The following statement contains a magic number: list.IsCollection(1' 2' 3);
Magic Number,RuntimeUnitTestToolkit,ConversionTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToObservable,The following statement contains a magic number: Enumerable.Range(1' 3).ToObservable(Scheduler.CurrentThread).ToArrayWait().IsCollection(1' 2' 3);
Magic Number,RuntimeUnitTestToolkit,ConversionTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToObservable,The following statement contains a magic number: Enumerable.Range(1' 3).ToObservable(Scheduler.CurrentThread).ToArrayWait().IsCollection(1' 2' 3);
Magic Number,RuntimeUnitTestToolkit,ConversionTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToObservable,The following statement contains a magic number: Enumerable.Range(1' 3).ToObservable(Scheduler.CurrentThread).ToArrayWait().IsCollection(1' 2' 3);
Magic Number,RuntimeUnitTestToolkit,ConversionTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToObservable,The following statement contains a magic number: Enumerable.Range(1' 3).ToObservable(Scheduler.ThreadPool).ToArrayWait().IsCollection(1' 2' 3);
Magic Number,RuntimeUnitTestToolkit,ConversionTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToObservable,The following statement contains a magic number: Enumerable.Range(1' 3).ToObservable(Scheduler.ThreadPool).ToArrayWait().IsCollection(1' 2' 3);
Magic Number,RuntimeUnitTestToolkit,ConversionTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToObservable,The following statement contains a magic number: Enumerable.Range(1' 3).ToObservable(Scheduler.ThreadPool).ToArrayWait().IsCollection(1' 2' 3);
Magic Number,RuntimeUnitTestToolkit,ConversionTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToObservable,The following statement contains a magic number: Enumerable.Range(1' 3).ToObservable(Scheduler.Immediate).ToArrayWait().IsCollection(1' 2' 3);
Magic Number,RuntimeUnitTestToolkit,ConversionTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToObservable,The following statement contains a magic number: Enumerable.Range(1' 3).ToObservable(Scheduler.Immediate).ToArrayWait().IsCollection(1' 2' 3);
Magic Number,RuntimeUnitTestToolkit,ConversionTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToObservable,The following statement contains a magic number: Enumerable.Range(1' 3).ToObservable(Scheduler.Immediate).ToArrayWait().IsCollection(1' 2' 3);
Magic Number,RuntimeUnitTestToolkit,DisposableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,MultipleAssignment,The following statement contains a magic number: var id2 = new IdDisp(2);
Magic Number,RuntimeUnitTestToolkit,DisposableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,MultipleAssignment,The following statement contains a magic number: var id3 = new IdDisp(3);
Magic Number,RuntimeUnitTestToolkit,DisposableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,MultipleAssignment,The following statement contains a magic number: id2 = new IdDisp(2);
Magic Number,RuntimeUnitTestToolkit,DisposableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,MultipleAssignment,The following statement contains a magic number: id3 = new IdDisp(3);
Magic Number,RuntimeUnitTestToolkit,DisposableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,MultipleAssignment,The following statement contains a magic number: id2 = new IdDisp(2);
Magic Number,RuntimeUnitTestToolkit,DisposableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,MultipleAssignment,The following statement contains a magic number: id3 = new IdDisp(3);
Magic Number,RuntimeUnitTestToolkit,DisposableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Serial,The following statement contains a magic number: var id2 = new IdDisp(2);
Magic Number,RuntimeUnitTestToolkit,DisposableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Serial,The following statement contains a magic number: var id3 = new IdDisp(3);
Magic Number,RuntimeUnitTestToolkit,DisposableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Serial,The following statement contains a magic number: id2 = new IdDisp(2);
Magic Number,RuntimeUnitTestToolkit,DisposableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Serial,The following statement contains a magic number: id3 = new IdDisp(3);
Magic Number,RuntimeUnitTestToolkit,DisposableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Serial,The following statement contains a magic number: id2 = new IdDisp(2);
Magic Number,RuntimeUnitTestToolkit,DisposableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Serial,The following statement contains a magic number: id3 = new IdDisp(3);
Magic Number,RuntimeUnitTestToolkit,DisposableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SingleAssignment,The following statement contains a magic number: var id2 = new IdDisp(2);
Magic Number,RuntimeUnitTestToolkit,DisposableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SingleAssignment,The following statement contains a magic number: var id3 = new IdDisp(3);
Magic Number,RuntimeUnitTestToolkit,DisposableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SingleAssignment,The following statement contains a magic number: id2 = new IdDisp(2);
Magic Number,RuntimeUnitTestToolkit,DisposableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SingleAssignment,The following statement contains a magic number: id3 = new IdDisp(3);
Magic Number,RuntimeUnitTestToolkit,DisposableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SingleAssignment,The following statement contains a magic number: id2 = new IdDisp(2);
Magic Number,RuntimeUnitTestToolkit,DisposableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SingleAssignment,The following statement contains a magic number: id3 = new IdDisp(3);
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Do,The following statement contains a magic number: Observable.Empty<int>().Do(x => list.Add(x)' ex => list.Add(100)' () => list.Add(1000)).DefaultIfEmpty().Wait();
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Do,The following statement contains a magic number: Observable.Empty<int>().Do(x => list.Add(x)' ex => list.Add(100)' () => list.Add(1000)).DefaultIfEmpty().Wait();
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Do,The following statement contains a magic number: list.IsCollection(1000);
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Do,The following statement contains a magic number: Observable.Range(1' 5).Do(x => list.Add(x)' ex => list.Add(100)' () => list.Add(1000)).Wait();
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Do,The following statement contains a magic number: Observable.Range(1' 5).Do(x => list.Add(x)' ex => list.Add(100)' () => list.Add(1000)).Wait();
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Do,The following statement contains a magic number: Observable.Range(1' 5).Do(x => list.Add(x)' ex => list.Add(100)' () => list.Add(1000)).Wait();
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Do,The following statement contains a magic number: list.IsCollection(1' 2' 3' 4' 5' 1000);
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Do,The following statement contains a magic number: list.IsCollection(1' 2' 3' 4' 5' 1000);
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Do,The following statement contains a magic number: list.IsCollection(1' 2' 3' 4' 5' 1000);
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Do,The following statement contains a magic number: list.IsCollection(1' 2' 3' 4' 5' 1000);
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Do,The following statement contains a magic number: list.IsCollection(1' 2' 3' 4' 5' 1000);
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Do,The following statement contains a magic number: Observable.Range(1' 5).Concat(Observable.Throw<int>(new Exception())).Do(x => list.Add(x)' ex => list.Add(100)' () => list.Add(1000)).Subscribe(_ => { }' _ => { }' () => { });
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Do,The following statement contains a magic number: Observable.Range(1' 5).Concat(Observable.Throw<int>(new Exception())).Do(x => list.Add(x)' ex => list.Add(100)' () => list.Add(1000)).Subscribe(_ => { }' _ => { }' () => { });
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Do,The following statement contains a magic number: Observable.Range(1' 5).Concat(Observable.Throw<int>(new Exception())).Do(x => list.Add(x)' ex => list.Add(100)' () => list.Add(1000)).Subscribe(_ => { }' _ => { }' () => { });
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Do,The following statement contains a magic number: list.IsCollection(1' 2' 3' 4' 5' 100);
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Do,The following statement contains a magic number: list.IsCollection(1' 2' 3' 4' 5' 100);
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Do,The following statement contains a magic number: list.IsCollection(1' 2' 3' 4' 5' 100);
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Do,The following statement contains a magic number: list.IsCollection(1' 2' 3' 4' 5' 100);
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Do,The following statement contains a magic number: list.IsCollection(1' 2' 3' 4' 5' 100);
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoObserver,The following statement contains a magic number: observer.list.IsCollection(1000);
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoObserver,The following statement contains a magic number: Observable.Range(1' 5).Do(observer).Wait();
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoObserver,The following statement contains a magic number: observer.list.IsCollection(1' 2' 3' 4' 5' 1000);
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoObserver,The following statement contains a magic number: observer.list.IsCollection(1' 2' 3' 4' 5' 1000);
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoObserver,The following statement contains a magic number: observer.list.IsCollection(1' 2' 3' 4' 5' 1000);
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoObserver,The following statement contains a magic number: observer.list.IsCollection(1' 2' 3' 4' 5' 1000);
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoObserver,The following statement contains a magic number: observer.list.IsCollection(1' 2' 3' 4' 5' 1000);
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoObserver,The following statement contains a magic number: Observable.Range(1' 5).Concat(Observable.Throw<int>(new Exception())).Do(observer).Subscribe(_ => { }' _ => { }' () => { });
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoObserver,The following statement contains a magic number: observer.list.IsCollection(1' 2' 3' 4' 5' 100);
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoObserver,The following statement contains a magic number: observer.list.IsCollection(1' 2' 3' 4' 5' 100);
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoObserver,The following statement contains a magic number: observer.list.IsCollection(1' 2' 3' 4' 5' 100);
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoObserver,The following statement contains a magic number: observer.list.IsCollection(1' 2' 3' 4' 5' 100);
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoObserver,The following statement contains a magic number: observer.list.IsCollection(1' 2' 3' 4' 5' 100);
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnCancel,The following statement contains a magic number: Observable.Empty<int>()                  .Do(x => list.Add(x)' ex => list.Add(100)' () => list.Add(1000))                  .DoOnCancel(() => list.Add(5000))                  .DoOnCancel(() => list.Add(10000))                  .DefaultIfEmpty()                  .Subscribe(_ => { }' _ => { }' () => { });
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnCancel,The following statement contains a magic number: Observable.Empty<int>()                  .Do(x => list.Add(x)' ex => list.Add(100)' () => list.Add(1000))                  .DoOnCancel(() => list.Add(5000))                  .DoOnCancel(() => list.Add(10000))                  .DefaultIfEmpty()                  .Subscribe(_ => { }' _ => { }' () => { });
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnCancel,The following statement contains a magic number: Observable.Empty<int>()                  .Do(x => list.Add(x)' ex => list.Add(100)' () => list.Add(1000))                  .DoOnCancel(() => list.Add(5000))                  .DoOnCancel(() => list.Add(10000))                  .DefaultIfEmpty()                  .Subscribe(_ => { }' _ => { }' () => { });
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnCancel,The following statement contains a magic number: Observable.Empty<int>()                  .Do(x => list.Add(x)' ex => list.Add(100)' () => list.Add(1000))                  .DoOnCancel(() => list.Add(5000))                  .DoOnCancel(() => list.Add(10000))                  .DefaultIfEmpty()                  .Subscribe(_ => { }' _ => { }' () => { });
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnCancel,The following statement contains a magic number: list.IsCollection(1000);
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnCancel,The following statement contains a magic number: Observable.Throw<int>(new Exception())                  .Do(x => list.Add(x)' ex => list.Add(100)' () => list.Add(1000))                  .DoOnCancel(() => list.Add(5000))                  .DoOnCancel(() => list.Add(10000))                  .DefaultIfEmpty()                  .Subscribe(_ => { }' _ => { }' () => { });
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnCancel,The following statement contains a magic number: Observable.Throw<int>(new Exception())                  .Do(x => list.Add(x)' ex => list.Add(100)' () => list.Add(1000))                  .DoOnCancel(() => list.Add(5000))                  .DoOnCancel(() => list.Add(10000))                  .DefaultIfEmpty()                  .Subscribe(_ => { }' _ => { }' () => { });
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnCancel,The following statement contains a magic number: Observable.Throw<int>(new Exception())                  .Do(x => list.Add(x)' ex => list.Add(100)' () => list.Add(1000))                  .DoOnCancel(() => list.Add(5000))                  .DoOnCancel(() => list.Add(10000))                  .DefaultIfEmpty()                  .Subscribe(_ => { }' _ => { }' () => { });
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnCancel,The following statement contains a magic number: Observable.Throw<int>(new Exception())                  .Do(x => list.Add(x)' ex => list.Add(100)' () => list.Add(1000))                  .DoOnCancel(() => list.Add(5000))                  .DoOnCancel(() => list.Add(10000))                  .DefaultIfEmpty()                  .Subscribe(_ => { }' _ => { }' () => { });
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnCancel,The following statement contains a magic number: list.IsCollection(100);
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnCancel,The following statement contains a magic number: var subscription = Observable.Timer(TimeSpan.FromMilliseconds(1000)).Select(x => (int)x)                  .Do(x => list.Add(x)' ex => list.Add(100)' () => list.Add(1000))                  .DoOnCancel(() => list.Add(5000))                  .DoOnCancel(() => list.Add(10000))                  .Subscribe();
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnCancel,The following statement contains a magic number: var subscription = Observable.Timer(TimeSpan.FromMilliseconds(1000)).Select(x => (int)x)                  .Do(x => list.Add(x)' ex => list.Add(100)' () => list.Add(1000))                  .DoOnCancel(() => list.Add(5000))                  .DoOnCancel(() => list.Add(10000))                  .Subscribe();
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnCancel,The following statement contains a magic number: var subscription = Observable.Timer(TimeSpan.FromMilliseconds(1000)).Select(x => (int)x)                  .Do(x => list.Add(x)' ex => list.Add(100)' () => list.Add(1000))                  .DoOnCancel(() => list.Add(5000))                  .DoOnCancel(() => list.Add(10000))                  .Subscribe();
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnCancel,The following statement contains a magic number: var subscription = Observable.Timer(TimeSpan.FromMilliseconds(1000)).Select(x => (int)x)                  .Do(x => list.Add(x)' ex => list.Add(100)' () => list.Add(1000))                  .DoOnCancel(() => list.Add(5000))                  .DoOnCancel(() => list.Add(10000))                  .Subscribe();
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnCancel,The following statement contains a magic number: var subscription = Observable.Timer(TimeSpan.FromMilliseconds(1000)).Select(x => (int)x)                  .Do(x => list.Add(x)' ex => list.Add(100)' () => list.Add(1000))                  .DoOnCancel(() => list.Add(5000))                  .DoOnCancel(() => list.Add(10000))                  .Subscribe();
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnCancel,The following statement contains a magic number: list.IsCollection(5000' 10000);
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnCancel,The following statement contains a magic number: list.IsCollection(5000' 10000);
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnCompleted,The following statement contains a magic number: Observable.Empty<int>().DoOnCompleted(() => list.Add(1000)).DefaultIfEmpty().Wait();
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnCompleted,The following statement contains a magic number: list.IsCollection(1000);
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnCompleted,The following statement contains a magic number: Observable.Range(1' 5).DoOnCompleted(() => list.Add(1000)).Wait();
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnCompleted,The following statement contains a magic number: Observable.Range(1' 5).DoOnCompleted(() => list.Add(1000)).Wait();
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnCompleted,The following statement contains a magic number: list.IsCollection(1000);
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnCompleted,The following statement contains a magic number: Observable.Range(1' 5).Concat(Observable.Throw<int>(new Exception())).DoOnCompleted(() => list.Add(1000)).Subscribe(_ => { }' _ => { }' () => { });
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnCompleted,The following statement contains a magic number: Observable.Range(1' 5).Concat(Observable.Throw<int>(new Exception())).DoOnCompleted(() => list.Add(1000)).Subscribe(_ => { }' _ => { }' () => { });
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnError,The following statement contains a magic number: Observable.Empty<int>().DoOnError(_ => list.Add(100)).DefaultIfEmpty().Wait();
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnError,The following statement contains a magic number: Observable.Range(1' 5).DoOnError(_ => list.Add(100)).Wait();
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnError,The following statement contains a magic number: Observable.Range(1' 5).DoOnError(_ => list.Add(100)).Wait();
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnError,The following statement contains a magic number: Observable.Range(1' 5).Concat(Observable.Throw<int>(new Exception())).DoOnError(_ => list.Add(100)).Subscribe(_ => { }' _ => { }' () => { });
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnError,The following statement contains a magic number: Observable.Range(1' 5).Concat(Observable.Throw<int>(new Exception())).DoOnError(_ => list.Add(100)).Subscribe(_ => { }' _ => { }' () => { });
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnError,The following statement contains a magic number: list.IsCollection(100);
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnSubscribe,The following statement contains a magic number: Observable.Empty<int>()                  .Do(x => list.Add(x)' ex => list.Add(100)' () => list.Add(1000))                  .DoOnSubscribe(() => list.Add(10000)).DefaultIfEmpty().Wait();
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnSubscribe,The following statement contains a magic number: Observable.Empty<int>()                  .Do(x => list.Add(x)' ex => list.Add(100)' () => list.Add(1000))                  .DoOnSubscribe(() => list.Add(10000)).DefaultIfEmpty().Wait();
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnSubscribe,The following statement contains a magic number: Observable.Empty<int>()                  .Do(x => list.Add(x)' ex => list.Add(100)' () => list.Add(1000))                  .DoOnSubscribe(() => list.Add(10000)).DefaultIfEmpty().Wait();
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnSubscribe,The following statement contains a magic number: list.IsCollection(10000' 1000);
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnSubscribe,The following statement contains a magic number: list.IsCollection(10000' 1000);
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnSubscribe,The following statement contains a magic number: Observable.Range(1' 5)                  .Do(x => list.Add(x)' ex => list.Add(100)' () => list.Add(1000))                  .DoOnSubscribe(() => list.Add(10000)).Wait();
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnSubscribe,The following statement contains a magic number: Observable.Range(1' 5)                  .Do(x => list.Add(x)' ex => list.Add(100)' () => list.Add(1000))                  .DoOnSubscribe(() => list.Add(10000)).Wait();
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnSubscribe,The following statement contains a magic number: Observable.Range(1' 5)                  .Do(x => list.Add(x)' ex => list.Add(100)' () => list.Add(1000))                  .DoOnSubscribe(() => list.Add(10000)).Wait();
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnSubscribe,The following statement contains a magic number: Observable.Range(1' 5)                  .Do(x => list.Add(x)' ex => list.Add(100)' () => list.Add(1000))                  .DoOnSubscribe(() => list.Add(10000)).Wait();
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnSubscribe,The following statement contains a magic number: list.IsCollection(10000' 1' 2' 3' 4' 5' 1000);
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnSubscribe,The following statement contains a magic number: list.IsCollection(10000' 1' 2' 3' 4' 5' 1000);
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnSubscribe,The following statement contains a magic number: list.IsCollection(10000' 1' 2' 3' 4' 5' 1000);
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnSubscribe,The following statement contains a magic number: list.IsCollection(10000' 1' 2' 3' 4' 5' 1000);
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnSubscribe,The following statement contains a magic number: list.IsCollection(10000' 1' 2' 3' 4' 5' 1000);
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnSubscribe,The following statement contains a magic number: list.IsCollection(10000' 1' 2' 3' 4' 5' 1000);
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnSubscribe,The following statement contains a magic number: Observable.Range(1' 5).Concat(Observable.Throw<int>(new Exception()))                  .Do(x => list.Add(x)' ex => list.Add(100)' () => list.Add(1000))                  .DoOnSubscribe(() => list.Add(10000)).Subscribe(_ => { }' _ => { }' () => { });
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnSubscribe,The following statement contains a magic number: Observable.Range(1' 5).Concat(Observable.Throw<int>(new Exception()))                  .Do(x => list.Add(x)' ex => list.Add(100)' () => list.Add(1000))                  .DoOnSubscribe(() => list.Add(10000)).Subscribe(_ => { }' _ => { }' () => { });
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnSubscribe,The following statement contains a magic number: Observable.Range(1' 5).Concat(Observable.Throw<int>(new Exception()))                  .Do(x => list.Add(x)' ex => list.Add(100)' () => list.Add(1000))                  .DoOnSubscribe(() => list.Add(10000)).Subscribe(_ => { }' _ => { }' () => { });
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnSubscribe,The following statement contains a magic number: Observable.Range(1' 5).Concat(Observable.Throw<int>(new Exception()))                  .Do(x => list.Add(x)' ex => list.Add(100)' () => list.Add(1000))                  .DoOnSubscribe(() => list.Add(10000)).Subscribe(_ => { }' _ => { }' () => { });
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnSubscribe,The following statement contains a magic number: list.IsCollection(10000' 1' 2' 3' 4' 5' 100);
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnSubscribe,The following statement contains a magic number: list.IsCollection(10000' 1' 2' 3' 4' 5' 100);
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnSubscribe,The following statement contains a magic number: list.IsCollection(10000' 1' 2' 3' 4' 5' 100);
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnSubscribe,The following statement contains a magic number: list.IsCollection(10000' 1' 2' 3' 4' 5' 100);
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnSubscribe,The following statement contains a magic number: list.IsCollection(10000' 1' 2' 3' 4' 5' 100);
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnSubscribe,The following statement contains a magic number: list.IsCollection(10000' 1' 2' 3' 4' 5' 100);
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnTerminate,The following statement contains a magic number: Observable.Empty<int>().DoOnTerminate(() => list.Add(1000)).DefaultIfEmpty().Wait();
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnTerminate,The following statement contains a magic number: list.IsCollection(1000);
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnTerminate,The following statement contains a magic number: Observable.Range(1' 5).DoOnTerminate(() => list.Add(1000)).Wait();
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnTerminate,The following statement contains a magic number: Observable.Range(1' 5).DoOnTerminate(() => list.Add(1000)).Wait();
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnTerminate,The following statement contains a magic number: list.IsCollection(1000);
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnTerminate,The following statement contains a magic number: Observable.Range(1' 5).Concat(Observable.Throw<int>(new Exception())).DoOnTerminate(() => list.Add(1000)).Subscribe(_ => { }' _ => { }' () => { });
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnTerminate,The following statement contains a magic number: Observable.Range(1' 5).Concat(Observable.Throw<int>(new Exception())).DoOnTerminate(() => list.Add(1000)).Subscribe(_ => { }' _ => { }' () => { });
Magic Number,RuntimeUnitTestToolkit,DoTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DoOnTerminate,The following statement contains a magic number: list.IsCollection(1000);
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Durability,The following statement contains a magic number: {                  var s1 = new Subject<int>();                  var list = new List<int>();                  var d = s1.Subscribe(xx =>                  {                      list.Add(xx);                      Observable.Return(xx)                          .Do(x => { if (x == 1) throw new Exception(); })                          .Subscribe(x => list.Add(x));                  });                  try { s1.OnNext(5); } catch { }                  try { s1.OnNext(1); } catch { }                  try { s1.OnNext(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  s1.OnNext(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Durability,The following statement contains a magic number: {                  var s1 = new Subject<int>();                  var list = new List<int>();                  var d = s1.Subscribe(xx =>                  {                      list.Add(xx);                      Observable.Return(xx)                          .Do(x => { if (x == 1) throw new Exception(); })                          .Subscribe(x => list.Add(x));                  });                  try { s1.OnNext(5); } catch { }                  try { s1.OnNext(1); } catch { }                  try { s1.OnNext(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  s1.OnNext(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Durability,The following statement contains a magic number: {                  var s1 = new Subject<int>();                  var list = new List<int>();                  var d = s1.Subscribe(xx =>                  {                      list.Add(xx);                      Observable.Return(xx)                          .Do(x => { if (x == 1) throw new Exception(); })                          .Subscribe(x => list.Add(x));                  });                  try { s1.OnNext(5); } catch { }                  try { s1.OnNext(1); } catch { }                  try { s1.OnNext(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  s1.OnNext(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Durability,The following statement contains a magic number: {                  var s1 = new Subject<int>();                  var list = new List<int>();                  var d = s1.Subscribe(xx =>                  {                      list.Add(xx);                      Observable.Return(xx)                          .Do(x => { if (x == 1) throw new Exception(); })                          .Subscribe(x => list.Add(x));                  });                  try { s1.OnNext(5); } catch { }                  try { s1.OnNext(1); } catch { }                  try { s1.OnNext(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  s1.OnNext(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Durability,The following statement contains a magic number: {                  var s1 = new Subject<int>();                  var list = new List<int>();                  var d = s1.Subscribe(xx =>                  {                      list.Add(xx);                      Observable.Return(xx)                          .Do(x => { if (x == 1) throw new Exception(); })                          .Subscribe(x => list.Add(x));                  });                  try { s1.OnNext(5); } catch { }                  try { s1.OnNext(1); } catch { }                  try { s1.OnNext(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  s1.OnNext(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Durability,The following statement contains a magic number: {                  var s1 = new Subject<int>();                  var list = new List<int>();                  var d = s1.Subscribe(xx =>                  {                      list.Add(xx);                      Observable.Return(xx)                          .Do(x => { if (x == 1) throw new Exception(); })                          .Subscribe(x => list.Add(x));                  });                  try { s1.OnNext(5); } catch { }                  try { s1.OnNext(1); } catch { }                  try { s1.OnNext(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  s1.OnNext(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Durability,The following statement contains a magic number: {                  var s1 = new Subject<int>();                  var list = new List<int>();                  var d = s1.Subscribe(xx =>                  {                      list.Add(xx);                      Observable.Return(xx)                          .Do(x => { if (x == 1) throw new Exception(); })                          .Subscribe(x => list.Add(x));                  });                  try { s1.OnNext(5); } catch { }                  try { s1.OnNext(1); } catch { }                  try { s1.OnNext(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  s1.OnNext(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Durability,The following statement contains a magic number: {                  var s1 = new Subject<int>();                  var list = new List<int>();                  var d = s1.Subscribe(xx =>                  {                      list.Add(xx);                      Observable.Return(xx)                          .Do(x => { if (x == 1) throw new Exception(); })                          .Subscribe(x => list.Add(x));                  });                  try { s1.OnNext(5); } catch { }                  try { s1.OnNext(1); } catch { }                  try { s1.OnNext(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  s1.OnNext(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Durability,The following statement contains a magic number: {                  var s1 = new Subject<int>();                  var list = new List<int>();                  var d = s1.Select(x => x).Take(1000).Subscribe(xx =>                  {                      list.Add(xx);                      Observable.Return(xx)                          .Do(x => { if (x == 1) throw new Exception(); })                          .Subscribe(x => list.Add(x));                  });                  try { s1.OnNext(5); } catch { }                  try { s1.OnNext(1); } catch { }                  try { s1.OnNext(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  s1.OnNext(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Durability,The following statement contains a magic number: {                  var s1 = new Subject<int>();                  var list = new List<int>();                  var d = s1.Select(x => x).Take(1000).Subscribe(xx =>                  {                      list.Add(xx);                      Observable.Return(xx)                          .Do(x => { if (x == 1) throw new Exception(); })                          .Subscribe(x => list.Add(x));                  });                  try { s1.OnNext(5); } catch { }                  try { s1.OnNext(1); } catch { }                  try { s1.OnNext(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  s1.OnNext(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Durability,The following statement contains a magic number: {                  var s1 = new Subject<int>();                  var list = new List<int>();                  var d = s1.Select(x => x).Take(1000).Subscribe(xx =>                  {                      list.Add(xx);                      Observable.Return(xx)                          .Do(x => { if (x == 1) throw new Exception(); })                          .Subscribe(x => list.Add(x));                  });                  try { s1.OnNext(5); } catch { }                  try { s1.OnNext(1); } catch { }                  try { s1.OnNext(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  s1.OnNext(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Durability,The following statement contains a magic number: {                  var s1 = new Subject<int>();                  var list = new List<int>();                  var d = s1.Select(x => x).Take(1000).Subscribe(xx =>                  {                      list.Add(xx);                      Observable.Return(xx)                          .Do(x => { if (x == 1) throw new Exception(); })                          .Subscribe(x => list.Add(x));                  });                  try { s1.OnNext(5); } catch { }                  try { s1.OnNext(1); } catch { }                  try { s1.OnNext(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  s1.OnNext(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Durability,The following statement contains a magic number: {                  var s1 = new Subject<int>();                  var list = new List<int>();                  var d = s1.Select(x => x).Take(1000).Subscribe(xx =>                  {                      list.Add(xx);                      Observable.Return(xx)                          .Do(x => { if (x == 1) throw new Exception(); })                          .Subscribe(x => list.Add(x));                  });                  try { s1.OnNext(5); } catch { }                  try { s1.OnNext(1); } catch { }                  try { s1.OnNext(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  s1.OnNext(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Durability,The following statement contains a magic number: {                  var s1 = new Subject<int>();                  var list = new List<int>();                  var d = s1.Select(x => x).Take(1000).Subscribe(xx =>                  {                      list.Add(xx);                      Observable.Return(xx)                          .Do(x => { if (x == 1) throw new Exception(); })                          .Subscribe(x => list.Add(x));                  });                  try { s1.OnNext(5); } catch { }                  try { s1.OnNext(1); } catch { }                  try { s1.OnNext(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  s1.OnNext(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Durability,The following statement contains a magic number: {                  var s1 = new Subject<int>();                  var list = new List<int>();                  var d = s1.Select(x => x).Take(1000).Subscribe(xx =>                  {                      list.Add(xx);                      Observable.Return(xx)                          .Do(x => { if (x == 1) throw new Exception(); })                          .Subscribe(x => list.Add(x));                  });                  try { s1.OnNext(5); } catch { }                  try { s1.OnNext(1); } catch { }                  try { s1.OnNext(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  s1.OnNext(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Durability,The following statement contains a magic number: {                  var s1 = new Subject<int>();                  var list = new List<int>();                  var d = s1.Select(x => x).Take(1000).Subscribe(xx =>                  {                      list.Add(xx);                      Observable.Return(xx)                          .Do(x => { if (x == 1) throw new Exception(); })                          .Subscribe(x => list.Add(x));                  });                  try { s1.OnNext(5); } catch { }                  try { s1.OnNext(1); } catch { }                  try { s1.OnNext(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  s1.OnNext(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Durability,The following statement contains a magic number: {                  var s1 = new Subject<int>();                  var list = new List<int>();                  var d = s1.Select(x => x).Take(1000).Subscribe(xx =>                  {                      list.Add(xx);                      Observable.Return(xx)                          .Do(x => { if (x == 1) throw new Exception(); })                          .Subscribe(x => list.Add(x));                  });                  try { s1.OnNext(5); } catch { }                  try { s1.OnNext(1); } catch { }                  try { s1.OnNext(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  s1.OnNext(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventPattern,The following statement contains a magic number: {                  var list = new List<int>();                  var d = Observable.FromEventPattern<EventHandler<MyEventArgs>' MyEventArgs>((h) => h.Invoke' h => tester.genericEventHandler += h' h => tester.genericEventHandler -= h)                      .Subscribe(xx =>                      {                          list.Add(xx.EventArgs.MyProperty);                          Observable.Return(xx.EventArgs.MyProperty)                              .Do(x => { if (x == 1) throw new Exception(); })                              .Subscribe(x => list.Add(x));                      });                  try { tester.Fire(5); } catch { }                  try { tester.Fire(1); } catch { }                  try { tester.Fire(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  tester.Fire(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventPattern,The following statement contains a magic number: {                  var list = new List<int>();                  var d = Observable.FromEventPattern<EventHandler<MyEventArgs>' MyEventArgs>((h) => h.Invoke' h => tester.genericEventHandler += h' h => tester.genericEventHandler -= h)                      .Subscribe(xx =>                      {                          list.Add(xx.EventArgs.MyProperty);                          Observable.Return(xx.EventArgs.MyProperty)                              .Do(x => { if (x == 1) throw new Exception(); })                              .Subscribe(x => list.Add(x));                      });                  try { tester.Fire(5); } catch { }                  try { tester.Fire(1); } catch { }                  try { tester.Fire(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  tester.Fire(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventPattern,The following statement contains a magic number: {                  var list = new List<int>();                  var d = Observable.FromEventPattern<EventHandler<MyEventArgs>' MyEventArgs>((h) => h.Invoke' h => tester.genericEventHandler += h' h => tester.genericEventHandler -= h)                      .Subscribe(xx =>                      {                          list.Add(xx.EventArgs.MyProperty);                          Observable.Return(xx.EventArgs.MyProperty)                              .Do(x => { if (x == 1) throw new Exception(); })                              .Subscribe(x => list.Add(x));                      });                  try { tester.Fire(5); } catch { }                  try { tester.Fire(1); } catch { }                  try { tester.Fire(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  tester.Fire(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventPattern,The following statement contains a magic number: {                  var list = new List<int>();                  var d = Observable.FromEventPattern<EventHandler<MyEventArgs>' MyEventArgs>((h) => h.Invoke' h => tester.genericEventHandler += h' h => tester.genericEventHandler -= h)                      .Subscribe(xx =>                      {                          list.Add(xx.EventArgs.MyProperty);                          Observable.Return(xx.EventArgs.MyProperty)                              .Do(x => { if (x == 1) throw new Exception(); })                              .Subscribe(x => list.Add(x));                      });                  try { tester.Fire(5); } catch { }                  try { tester.Fire(1); } catch { }                  try { tester.Fire(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  tester.Fire(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventPattern,The following statement contains a magic number: {                  var list = new List<int>();                  var d = Observable.FromEventPattern<EventHandler<MyEventArgs>' MyEventArgs>((h) => h.Invoke' h => tester.genericEventHandler += h' h => tester.genericEventHandler -= h)                      .Subscribe(xx =>                      {                          list.Add(xx.EventArgs.MyProperty);                          Observable.Return(xx.EventArgs.MyProperty)                              .Do(x => { if (x == 1) throw new Exception(); })                              .Subscribe(x => list.Add(x));                      });                  try { tester.Fire(5); } catch { }                  try { tester.Fire(1); } catch { }                  try { tester.Fire(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  tester.Fire(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventPattern,The following statement contains a magic number: {                  var list = new List<int>();                  var d = Observable.FromEventPattern<EventHandler<MyEventArgs>' MyEventArgs>((h) => h.Invoke' h => tester.genericEventHandler += h' h => tester.genericEventHandler -= h)                      .Subscribe(xx =>                      {                          list.Add(xx.EventArgs.MyProperty);                          Observable.Return(xx.EventArgs.MyProperty)                              .Do(x => { if (x == 1) throw new Exception(); })                              .Subscribe(x => list.Add(x));                      });                  try { tester.Fire(5); } catch { }                  try { tester.Fire(1); } catch { }                  try { tester.Fire(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  tester.Fire(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventPattern,The following statement contains a magic number: {                  var list = new List<int>();                  var d = Observable.FromEventPattern<EventHandler<MyEventArgs>' MyEventArgs>((h) => h.Invoke' h => tester.genericEventHandler += h' h => tester.genericEventHandler -= h)                      .Subscribe(xx =>                      {                          list.Add(xx.EventArgs.MyProperty);                          Observable.Return(xx.EventArgs.MyProperty)                              .Do(x => { if (x == 1) throw new Exception(); })                              .Subscribe(x => list.Add(x));                      });                  try { tester.Fire(5); } catch { }                  try { tester.Fire(1); } catch { }                  try { tester.Fire(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  tester.Fire(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventPattern,The following statement contains a magic number: {                  var list = new List<int>();                  var d = Observable.FromEventPattern<EventHandler<MyEventArgs>' MyEventArgs>((h) => h.Invoke' h => tester.genericEventHandler += h' h => tester.genericEventHandler -= h)                      .Subscribe(xx =>                      {                          list.Add(xx.EventArgs.MyProperty);                          Observable.Return(xx.EventArgs.MyProperty)                              .Do(x => { if (x == 1) throw new Exception(); })                              .Subscribe(x => list.Add(x));                      });                  try { tester.Fire(5); } catch { }                  try { tester.Fire(1); } catch { }                  try { tester.Fire(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  tester.Fire(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventUnity,The following statement contains a magic number: {                  var list = new List<int>();                  var d = Observable.FromEvent<int>(h => tester.intAction += h' h => tester.intAction -= h)                      .Subscribe(xx =>                      {                          list.Add(xx);                          Observable.Return(xx)                              .Do(x => { if (x == 1) throw new Exception(); })                              .Subscribe(x => list.Add(x));                      });                  try { tester.Fire(5); } catch { }                  try { tester.Fire(1); } catch { }                  try { tester.Fire(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  tester.Fire(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventUnity,The following statement contains a magic number: {                  var list = new List<int>();                  var d = Observable.FromEvent<int>(h => tester.intAction += h' h => tester.intAction -= h)                      .Subscribe(xx =>                      {                          list.Add(xx);                          Observable.Return(xx)                              .Do(x => { if (x == 1) throw new Exception(); })                              .Subscribe(x => list.Add(x));                      });                  try { tester.Fire(5); } catch { }                  try { tester.Fire(1); } catch { }                  try { tester.Fire(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  tester.Fire(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventUnity,The following statement contains a magic number: {                  var list = new List<int>();                  var d = Observable.FromEvent<int>(h => tester.intAction += h' h => tester.intAction -= h)                      .Subscribe(xx =>                      {                          list.Add(xx);                          Observable.Return(xx)                              .Do(x => { if (x == 1) throw new Exception(); })                              .Subscribe(x => list.Add(x));                      });                  try { tester.Fire(5); } catch { }                  try { tester.Fire(1); } catch { }                  try { tester.Fire(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  tester.Fire(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventUnity,The following statement contains a magic number: {                  var list = new List<int>();                  var d = Observable.FromEvent<int>(h => tester.intAction += h' h => tester.intAction -= h)                      .Subscribe(xx =>                      {                          list.Add(xx);                          Observable.Return(xx)                              .Do(x => { if (x == 1) throw new Exception(); })                              .Subscribe(x => list.Add(x));                      });                  try { tester.Fire(5); } catch { }                  try { tester.Fire(1); } catch { }                  try { tester.Fire(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  tester.Fire(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventUnity,The following statement contains a magic number: {                  var list = new List<int>();                  var d = Observable.FromEvent<int>(h => tester.intAction += h' h => tester.intAction -= h)                      .Subscribe(xx =>                      {                          list.Add(xx);                          Observable.Return(xx)                              .Do(x => { if (x == 1) throw new Exception(); })                              .Subscribe(x => list.Add(x));                      });                  try { tester.Fire(5); } catch { }                  try { tester.Fire(1); } catch { }                  try { tester.Fire(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  tester.Fire(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventUnity,The following statement contains a magic number: {                  var list = new List<int>();                  var d = Observable.FromEvent<int>(h => tester.intAction += h' h => tester.intAction -= h)                      .Subscribe(xx =>                      {                          list.Add(xx);                          Observable.Return(xx)                              .Do(x => { if (x == 1) throw new Exception(); })                              .Subscribe(x => list.Add(x));                      });                  try { tester.Fire(5); } catch { }                  try { tester.Fire(1); } catch { }                  try { tester.Fire(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  tester.Fire(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventUnity,The following statement contains a magic number: {                  var list = new List<int>();                  var d = Observable.FromEvent<int>(h => tester.intAction += h' h => tester.intAction -= h)                      .Subscribe(xx =>                      {                          list.Add(xx);                          Observable.Return(xx)                              .Do(x => { if (x == 1) throw new Exception(); })                              .Subscribe(x => list.Add(x));                      });                  try { tester.Fire(5); } catch { }                  try { tester.Fire(1); } catch { }                  try { tester.Fire(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  tester.Fire(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventUnity,The following statement contains a magic number: {                  var list = new List<int>();                  var d = Observable.FromEvent<int>(h => tester.intAction += h' h => tester.intAction -= h)                      .Subscribe(xx =>                      {                          list.Add(xx);                          Observable.Return(xx)                              .Do(x => { if (x == 1) throw new Exception(); })                              .Subscribe(x => list.Add(x));                      });                  try { tester.Fire(5); } catch { }                  try { tester.Fire(1); } catch { }                  try { tester.Fire(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  tester.Fire(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventUnity,The following statement contains a magic number: {                  var i = 0;                  var list = new List<int>();                  var d = Observable.FromEvent(h => tester.unitAction += h' h => tester.unitAction -= h)                      .Subscribe(xx =>                      {                          list.Add(i);                          Observable.Return(i)                              .Do(x => { if (x == 1) throw new Exception(); })                              .Subscribe(x => list.Add(i));                      });                  try { i = 5; tester.Fire(5); } catch { }                  try { i = 1; tester.Fire(1); } catch { }                  try { i = 10; tester.Fire(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  tester.Fire(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventUnity,The following statement contains a magic number: {                  var i = 0;                  var list = new List<int>();                  var d = Observable.FromEvent(h => tester.unitAction += h' h => tester.unitAction -= h)                      .Subscribe(xx =>                      {                          list.Add(i);                          Observable.Return(i)                              .Do(x => { if (x == 1) throw new Exception(); })                              .Subscribe(x => list.Add(i));                      });                  try { i = 5; tester.Fire(5); } catch { }                  try { i = 1; tester.Fire(1); } catch { }                  try { i = 10; tester.Fire(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  tester.Fire(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventUnity,The following statement contains a magic number: {                  var i = 0;                  var list = new List<int>();                  var d = Observable.FromEvent(h => tester.unitAction += h' h => tester.unitAction -= h)                      .Subscribe(xx =>                      {                          list.Add(i);                          Observable.Return(i)                              .Do(x => { if (x == 1) throw new Exception(); })                              .Subscribe(x => list.Add(i));                      });                  try { i = 5; tester.Fire(5); } catch { }                  try { i = 1; tester.Fire(1); } catch { }                  try { i = 10; tester.Fire(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  tester.Fire(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventUnity,The following statement contains a magic number: {                  var i = 0;                  var list = new List<int>();                  var d = Observable.FromEvent(h => tester.unitAction += h' h => tester.unitAction -= h)                      .Subscribe(xx =>                      {                          list.Add(i);                          Observable.Return(i)                              .Do(x => { if (x == 1) throw new Exception(); })                              .Subscribe(x => list.Add(i));                      });                  try { i = 5; tester.Fire(5); } catch { }                  try { i = 1; tester.Fire(1); } catch { }                  try { i = 10; tester.Fire(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  tester.Fire(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventUnity,The following statement contains a magic number: {                  var i = 0;                  var list = new List<int>();                  var d = Observable.FromEvent(h => tester.unitAction += h' h => tester.unitAction -= h)                      .Subscribe(xx =>                      {                          list.Add(i);                          Observable.Return(i)                              .Do(x => { if (x == 1) throw new Exception(); })                              .Subscribe(x => list.Add(i));                      });                  try { i = 5; tester.Fire(5); } catch { }                  try { i = 1; tester.Fire(1); } catch { }                  try { i = 10; tester.Fire(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  tester.Fire(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventUnity,The following statement contains a magic number: {                  var i = 0;                  var list = new List<int>();                  var d = Observable.FromEvent(h => tester.unitAction += h' h => tester.unitAction -= h)                      .Subscribe(xx =>                      {                          list.Add(i);                          Observable.Return(i)                              .Do(x => { if (x == 1) throw new Exception(); })                              .Subscribe(x => list.Add(i));                      });                  try { i = 5; tester.Fire(5); } catch { }                  try { i = 1; tester.Fire(1); } catch { }                  try { i = 10; tester.Fire(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  tester.Fire(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventUnity,The following statement contains a magic number: {                  var i = 0;                  var list = new List<int>();                  var d = Observable.FromEvent(h => tester.unitAction += h' h => tester.unitAction -= h)                      .Subscribe(xx =>                      {                          list.Add(i);                          Observable.Return(i)                              .Do(x => { if (x == 1) throw new Exception(); })                              .Subscribe(x => list.Add(i));                      });                  try { i = 5; tester.Fire(5); } catch { }                  try { i = 1; tester.Fire(1); } catch { }                  try { i = 10; tester.Fire(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  tester.Fire(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventUnity,The following statement contains a magic number: {                  var i = 0;                  var list = new List<int>();                  var d = Observable.FromEvent(h => tester.unitAction += h' h => tester.unitAction -= h)                      .Subscribe(xx =>                      {                          list.Add(i);                          Observable.Return(i)                              .Do(x => { if (x == 1) throw new Exception(); })                              .Subscribe(x => list.Add(i));                      });                  try { i = 5; tester.Fire(5); } catch { }                  try { i = 1; tester.Fire(1); } catch { }                  try { i = 10; tester.Fire(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  tester.Fire(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventUnity,The following statement contains a magic number: {                  var i = 0;                  var list = new List<int>();                  var d = Observable.FromEvent(h => tester.unitAction += h' h => tester.unitAction -= h)                      .Subscribe(xx =>                      {                          list.Add(i);                          Observable.Return(i)                              .Do(x => { if (x == 1) throw new Exception(); })                              .Subscribe(x => list.Add(i));                      });                  try { i = 5; tester.Fire(5); } catch { }                  try { i = 1; tester.Fire(1); } catch { }                  try { i = 10; tester.Fire(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  tester.Fire(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventUnity,The following statement contains a magic number: {                  var i = 0;                  var list = new List<int>();                  var d = Observable.FromEvent(h => tester.unitAction += h' h => tester.unitAction -= h)                      .Subscribe(xx =>                      {                          list.Add(i);                          Observable.Return(i)                              .Do(x => { if (x == 1) throw new Exception(); })                              .Subscribe(x => list.Add(i));                      });                  try { i = 5; tester.Fire(5); } catch { }                  try { i = 1; tester.Fire(1); } catch { }                  try { i = 10; tester.Fire(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  tester.Fire(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventUnityLike,The following statement contains a magic number: {                  var list = new List<int>();                  var d = Observable.FromEvent<LikeUnityAction<int>' int>(h => new LikeUnityAction<int>(h)' h => tester.intUnityAction += h' h => tester.intUnityAction -= h)                      .Subscribe(xx =>                      {                          list.Add(xx);                          Observable.Return(xx)                              .Do(x => { if (x == 1) throw new Exception(); })                              .Subscribe(x => list.Add(x));                      });                  try { tester.Fire(5); } catch { }                  try { tester.Fire(1); } catch { }                  try { tester.Fire(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  tester.Fire(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventUnityLike,The following statement contains a magic number: {                  var list = new List<int>();                  var d = Observable.FromEvent<LikeUnityAction<int>' int>(h => new LikeUnityAction<int>(h)' h => tester.intUnityAction += h' h => tester.intUnityAction -= h)                      .Subscribe(xx =>                      {                          list.Add(xx);                          Observable.Return(xx)                              .Do(x => { if (x == 1) throw new Exception(); })                              .Subscribe(x => list.Add(x));                      });                  try { tester.Fire(5); } catch { }                  try { tester.Fire(1); } catch { }                  try { tester.Fire(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  tester.Fire(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventUnityLike,The following statement contains a magic number: {                  var list = new List<int>();                  var d = Observable.FromEvent<LikeUnityAction<int>' int>(h => new LikeUnityAction<int>(h)' h => tester.intUnityAction += h' h => tester.intUnityAction -= h)                      .Subscribe(xx =>                      {                          list.Add(xx);                          Observable.Return(xx)                              .Do(x => { if (x == 1) throw new Exception(); })                              .Subscribe(x => list.Add(x));                      });                  try { tester.Fire(5); } catch { }                  try { tester.Fire(1); } catch { }                  try { tester.Fire(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  tester.Fire(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventUnityLike,The following statement contains a magic number: {                  var list = new List<int>();                  var d = Observable.FromEvent<LikeUnityAction<int>' int>(h => new LikeUnityAction<int>(h)' h => tester.intUnityAction += h' h => tester.intUnityAction -= h)                      .Subscribe(xx =>                      {                          list.Add(xx);                          Observable.Return(xx)                              .Do(x => { if (x == 1) throw new Exception(); })                              .Subscribe(x => list.Add(x));                      });                  try { tester.Fire(5); } catch { }                  try { tester.Fire(1); } catch { }                  try { tester.Fire(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  tester.Fire(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventUnityLike,The following statement contains a magic number: {                  var list = new List<int>();                  var d = Observable.FromEvent<LikeUnityAction<int>' int>(h => new LikeUnityAction<int>(h)' h => tester.intUnityAction += h' h => tester.intUnityAction -= h)                      .Subscribe(xx =>                      {                          list.Add(xx);                          Observable.Return(xx)                              .Do(x => { if (x == 1) throw new Exception(); })                              .Subscribe(x => list.Add(x));                      });                  try { tester.Fire(5); } catch { }                  try { tester.Fire(1); } catch { }                  try { tester.Fire(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  tester.Fire(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventUnityLike,The following statement contains a magic number: {                  var list = new List<int>();                  var d = Observable.FromEvent<LikeUnityAction<int>' int>(h => new LikeUnityAction<int>(h)' h => tester.intUnityAction += h' h => tester.intUnityAction -= h)                      .Subscribe(xx =>                      {                          list.Add(xx);                          Observable.Return(xx)                              .Do(x => { if (x == 1) throw new Exception(); })                              .Subscribe(x => list.Add(x));                      });                  try { tester.Fire(5); } catch { }                  try { tester.Fire(1); } catch { }                  try { tester.Fire(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  tester.Fire(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventUnityLike,The following statement contains a magic number: {                  var list = new List<int>();                  var d = Observable.FromEvent<LikeUnityAction<int>' int>(h => new LikeUnityAction<int>(h)' h => tester.intUnityAction += h' h => tester.intUnityAction -= h)                      .Subscribe(xx =>                      {                          list.Add(xx);                          Observable.Return(xx)                              .Do(x => { if (x == 1) throw new Exception(); })                              .Subscribe(x => list.Add(x));                      });                  try { tester.Fire(5); } catch { }                  try { tester.Fire(1); } catch { }                  try { tester.Fire(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  tester.Fire(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventUnityLike,The following statement contains a magic number: {                  var list = new List<int>();                  var d = Observable.FromEvent<LikeUnityAction<int>' int>(h => new LikeUnityAction<int>(h)' h => tester.intUnityAction += h' h => tester.intUnityAction -= h)                      .Subscribe(xx =>                      {                          list.Add(xx);                          Observable.Return(xx)                              .Do(x => { if (x == 1) throw new Exception(); })                              .Subscribe(x => list.Add(x));                      });                  try { tester.Fire(5); } catch { }                  try { tester.Fire(1); } catch { }                  try { tester.Fire(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  tester.Fire(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventUnityLike,The following statement contains a magic number: {                  var i = 0;                  var list = new List<int>();                  var d = Observable.FromEvent<LikeUnityAction>(h => new LikeUnityAction(h)' h => tester.unityAction += h' h => tester.unityAction -= h)                      .Subscribe(xx =>                      {                          list.Add(i);                          Observable.Return(i)                              .Do(x => { if (x == 1) throw new Exception(); })                              .Subscribe(x => list.Add(i));                      });                  try { i = 5; tester.Fire(5); } catch { }                  try { i = 1; tester.Fire(1); } catch { }                  try { i = 10; tester.Fire(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  tester.Fire(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventUnityLike,The following statement contains a magic number: {                  var i = 0;                  var list = new List<int>();                  var d = Observable.FromEvent<LikeUnityAction>(h => new LikeUnityAction(h)' h => tester.unityAction += h' h => tester.unityAction -= h)                      .Subscribe(xx =>                      {                          list.Add(i);                          Observable.Return(i)                              .Do(x => { if (x == 1) throw new Exception(); })                              .Subscribe(x => list.Add(i));                      });                  try { i = 5; tester.Fire(5); } catch { }                  try { i = 1; tester.Fire(1); } catch { }                  try { i = 10; tester.Fire(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  tester.Fire(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventUnityLike,The following statement contains a magic number: {                  var i = 0;                  var list = new List<int>();                  var d = Observable.FromEvent<LikeUnityAction>(h => new LikeUnityAction(h)' h => tester.unityAction += h' h => tester.unityAction -= h)                      .Subscribe(xx =>                      {                          list.Add(i);                          Observable.Return(i)                              .Do(x => { if (x == 1) throw new Exception(); })                              .Subscribe(x => list.Add(i));                      });                  try { i = 5; tester.Fire(5); } catch { }                  try { i = 1; tester.Fire(1); } catch { }                  try { i = 10; tester.Fire(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  tester.Fire(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventUnityLike,The following statement contains a magic number: {                  var i = 0;                  var list = new List<int>();                  var d = Observable.FromEvent<LikeUnityAction>(h => new LikeUnityAction(h)' h => tester.unityAction += h' h => tester.unityAction -= h)                      .Subscribe(xx =>                      {                          list.Add(i);                          Observable.Return(i)                              .Do(x => { if (x == 1) throw new Exception(); })                              .Subscribe(x => list.Add(i));                      });                  try { i = 5; tester.Fire(5); } catch { }                  try { i = 1; tester.Fire(1); } catch { }                  try { i = 10; tester.Fire(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  tester.Fire(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventUnityLike,The following statement contains a magic number: {                  var i = 0;                  var list = new List<int>();                  var d = Observable.FromEvent<LikeUnityAction>(h => new LikeUnityAction(h)' h => tester.unityAction += h' h => tester.unityAction -= h)                      .Subscribe(xx =>                      {                          list.Add(i);                          Observable.Return(i)                              .Do(x => { if (x == 1) throw new Exception(); })                              .Subscribe(x => list.Add(i));                      });                  try { i = 5; tester.Fire(5); } catch { }                  try { i = 1; tester.Fire(1); } catch { }                  try { i = 10; tester.Fire(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  tester.Fire(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventUnityLike,The following statement contains a magic number: {                  var i = 0;                  var list = new List<int>();                  var d = Observable.FromEvent<LikeUnityAction>(h => new LikeUnityAction(h)' h => tester.unityAction += h' h => tester.unityAction -= h)                      .Subscribe(xx =>                      {                          list.Add(i);                          Observable.Return(i)                              .Do(x => { if (x == 1) throw new Exception(); })                              .Subscribe(x => list.Add(i));                      });                  try { i = 5; tester.Fire(5); } catch { }                  try { i = 1; tester.Fire(1); } catch { }                  try { i = 10; tester.Fire(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  tester.Fire(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventUnityLike,The following statement contains a magic number: {                  var i = 0;                  var list = new List<int>();                  var d = Observable.FromEvent<LikeUnityAction>(h => new LikeUnityAction(h)' h => tester.unityAction += h' h => tester.unityAction -= h)                      .Subscribe(xx =>                      {                          list.Add(i);                          Observable.Return(i)                              .Do(x => { if (x == 1) throw new Exception(); })                              .Subscribe(x => list.Add(i));                      });                  try { i = 5; tester.Fire(5); } catch { }                  try { i = 1; tester.Fire(1); } catch { }                  try { i = 10; tester.Fire(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  tester.Fire(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventUnityLike,The following statement contains a magic number: {                  var i = 0;                  var list = new List<int>();                  var d = Observable.FromEvent<LikeUnityAction>(h => new LikeUnityAction(h)' h => tester.unityAction += h' h => tester.unityAction -= h)                      .Subscribe(xx =>                      {                          list.Add(i);                          Observable.Return(i)                              .Do(x => { if (x == 1) throw new Exception(); })                              .Subscribe(x => list.Add(i));                      });                  try { i = 5; tester.Fire(5); } catch { }                  try { i = 1; tester.Fire(1); } catch { }                  try { i = 10; tester.Fire(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  tester.Fire(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventUnityLike,The following statement contains a magic number: {                  var i = 0;                  var list = new List<int>();                  var d = Observable.FromEvent<LikeUnityAction>(h => new LikeUnityAction(h)' h => tester.unityAction += h' h => tester.unityAction -= h)                      .Subscribe(xx =>                      {                          list.Add(i);                          Observable.Return(i)                              .Do(x => { if (x == 1) throw new Exception(); })                              .Subscribe(x => list.Add(i));                      });                  try { i = 5; tester.Fire(5); } catch { }                  try { i = 1; tester.Fire(1); } catch { }                  try { i = 10; tester.Fire(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  tester.Fire(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,DurabilityTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventUnityLike,The following statement contains a magic number: {                  var i = 0;                  var list = new List<int>();                  var d = Observable.FromEvent<LikeUnityAction>(h => new LikeUnityAction(h)' h => tester.unityAction += h' h => tester.unityAction -= h)                      .Subscribe(xx =>                      {                          list.Add(i);                          Observable.Return(i)                              .Do(x => { if (x == 1) throw new Exception(); })                              .Subscribe(x => list.Add(i));                      });                  try { i = 5; tester.Fire(5); } catch { }                  try { i = 1; tester.Fire(1); } catch { }                  try { i = 10; tester.Fire(10); } catch { }                  list.IsCollection(5' 5' 1' 10' 10);                  d.Dispose();                  tester.Fire(1000);                  list.Count.Is(5);              }
Magic Number,RuntimeUnitTestToolkit,ErrorHandlingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Catch,The following statement contains a magic number: var xs = Observable.Return(2' Scheduler.ThreadPool).Concat(Observable.Throw<int>(new InvalidOperationException()))                  .Catch((InvalidOperationException ex) =>                  {                      return Observable.Range(1' 3);                  })                  .ToArrayWait();
Magic Number,RuntimeUnitTestToolkit,ErrorHandlingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Catch,The following statement contains a magic number: var xs = Observable.Return(2' Scheduler.ThreadPool).Concat(Observable.Throw<int>(new InvalidOperationException()))                  .Catch((InvalidOperationException ex) =>                  {                      return Observable.Range(1' 3);                  })                  .ToArrayWait();
Magic Number,RuntimeUnitTestToolkit,ErrorHandlingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Catch,The following statement contains a magic number: xs.IsCollection(2' 1' 2' 3);
Magic Number,RuntimeUnitTestToolkit,ErrorHandlingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Catch,The following statement contains a magic number: xs.IsCollection(2' 1' 2' 3);
Magic Number,RuntimeUnitTestToolkit,ErrorHandlingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Catch,The following statement contains a magic number: xs.IsCollection(2' 1' 2' 3);
Magic Number,RuntimeUnitTestToolkit,ErrorHandlingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CatchEnumerable,The following statement contains a magic number: {                  var xs = new[]                  {                      Observable.Return(2).Concat(Observable.Throw<int>(new Exception()))'                      Observable.Return(99).Concat(Observable.Throw<int>(new Exception()))'                      Observable.Range(10'2)                  }                  .Catch()                  .Materialize()                  .ToArrayWait();                  xs[0].Value.Is(2);                  xs[1].Value.Is(99);                  xs[2].Value.Is(10);                  xs[3].Value.Is(11);                  xs[4].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ErrorHandlingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CatchEnumerable,The following statement contains a magic number: {                  var xs = new[]                  {                      Observable.Return(2).Concat(Observable.Throw<int>(new Exception()))'                      Observable.Return(99).Concat(Observable.Throw<int>(new Exception()))'                      Observable.Range(10'2)                  }                  .Catch()                  .Materialize()                  .ToArrayWait();                  xs[0].Value.Is(2);                  xs[1].Value.Is(99);                  xs[2].Value.Is(10);                  xs[3].Value.Is(11);                  xs[4].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ErrorHandlingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CatchEnumerable,The following statement contains a magic number: {                  var xs = new[]                  {                      Observable.Return(2).Concat(Observable.Throw<int>(new Exception()))'                      Observable.Return(99).Concat(Observable.Throw<int>(new Exception()))'                      Observable.Range(10'2)                  }                  .Catch()                  .Materialize()                  .ToArrayWait();                  xs[0].Value.Is(2);                  xs[1].Value.Is(99);                  xs[2].Value.Is(10);                  xs[3].Value.Is(11);                  xs[4].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ErrorHandlingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CatchEnumerable,The following statement contains a magic number: {                  var xs = new[]                  {                      Observable.Return(2).Concat(Observable.Throw<int>(new Exception()))'                      Observable.Return(99).Concat(Observable.Throw<int>(new Exception()))'                      Observable.Range(10'2)                  }                  .Catch()                  .Materialize()                  .ToArrayWait();                  xs[0].Value.Is(2);                  xs[1].Value.Is(99);                  xs[2].Value.Is(10);                  xs[3].Value.Is(11);                  xs[4].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ErrorHandlingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CatchEnumerable,The following statement contains a magic number: {                  var xs = new[]                  {                      Observable.Return(2).Concat(Observable.Throw<int>(new Exception()))'                      Observable.Return(99).Concat(Observable.Throw<int>(new Exception()))'                      Observable.Range(10'2)                  }                  .Catch()                  .Materialize()                  .ToArrayWait();                  xs[0].Value.Is(2);                  xs[1].Value.Is(99);                  xs[2].Value.Is(10);                  xs[3].Value.Is(11);                  xs[4].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ErrorHandlingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CatchEnumerable,The following statement contains a magic number: {                  var xs = new[]                  {                      Observable.Return(2).Concat(Observable.Throw<int>(new Exception()))'                      Observable.Return(99).Concat(Observable.Throw<int>(new Exception()))'                      Observable.Range(10'2)                  }                  .Catch()                  .Materialize()                  .ToArrayWait();                  xs[0].Value.Is(2);                  xs[1].Value.Is(99);                  xs[2].Value.Is(10);                  xs[3].Value.Is(11);                  xs[4].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ErrorHandlingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CatchEnumerable,The following statement contains a magic number: {                  var xs = new[]                  {                      Observable.Return(2).Concat(Observable.Throw<int>(new Exception()))'                      Observable.Return(99).Concat(Observable.Throw<int>(new Exception()))'                      Observable.Range(10'2)                  }                  .Catch()                  .Materialize()                  .ToArrayWait();                  xs[0].Value.Is(2);                  xs[1].Value.Is(99);                  xs[2].Value.Is(10);                  xs[3].Value.Is(11);                  xs[4].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ErrorHandlingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CatchEnumerable,The following statement contains a magic number: {                  var xs = new[]                  {                      Observable.Return(2).Concat(Observable.Throw<int>(new Exception()))'                      Observable.Return(99).Concat(Observable.Throw<int>(new Exception()))'                      Observable.Range(10'2)                  }                  .Catch()                  .Materialize()                  .ToArrayWait();                  xs[0].Value.Is(2);                  xs[1].Value.Is(99);                  xs[2].Value.Is(10);                  xs[3].Value.Is(11);                  xs[4].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ErrorHandlingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CatchEnumerable,The following statement contains a magic number: {                  var xs = new[]                  {                      Observable.Return(2).Concat(Observable.Throw<int>(new Exception()))'                      Observable.Return(99).Concat(Observable.Throw<int>(new Exception()))'                      Observable.Range(10'2)                  }                  .Catch()                  .Materialize()                  .ToArrayWait();                  xs[0].Value.Is(2);                  xs[1].Value.Is(99);                  xs[2].Value.Is(10);                  xs[3].Value.Is(11);                  xs[4].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ErrorHandlingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CatchEnumerable,The following statement contains a magic number: {                  var xs = new[]                  {                      Observable.Return(2).Concat(Observable.Throw<int>(new Exception()))'                      Observable.Return(99).Concat(Observable.Throw<int>(new Exception()))'                      Observable.Range(10'2)                  }                  .Catch()                  .Materialize()                  .ToArrayWait();                  xs[0].Value.Is(2);                  xs[1].Value.Is(99);                  xs[2].Value.Is(10);                  xs[3].Value.Is(11);                  xs[4].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ErrorHandlingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CatchEnumerable,The following statement contains a magic number: {                  var xs = new[]                  {                      Observable.Return(2).Concat(Observable.Throw<int>(new Exception()))'                      Observable.Return(99).Concat(Observable.Throw<int>(new Exception()))'                      Observable.Range(10'2)                  }                  .Catch()                  .Materialize()                  .ToArrayWait();                  xs[0].Value.Is(2);                  xs[1].Value.Is(99);                  xs[2].Value.Is(10);                  xs[3].Value.Is(11);                  xs[4].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ErrorHandlingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CatchEnumerable,The following statement contains a magic number: {                  var xs = new[]                  {                      Observable.Return(2).Concat(Observable.Throw<int>(new Exception()))'                      Observable.Return(99).Concat(Observable.Throw<int>(new Exception()))                  }                  .Catch()                  .Materialize()                  .ToArrayWait();                  xs[0].Value.Is(2);                  xs[1].Value.Is(99);                  xs[2].Kind.Is(NotificationKind.OnError);              }
Magic Number,RuntimeUnitTestToolkit,ErrorHandlingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CatchEnumerable,The following statement contains a magic number: {                  var xs = new[]                  {                      Observable.Return(2).Concat(Observable.Throw<int>(new Exception()))'                      Observable.Return(99).Concat(Observable.Throw<int>(new Exception()))                  }                  .Catch()                  .Materialize()                  .ToArrayWait();                  xs[0].Value.Is(2);                  xs[1].Value.Is(99);                  xs[2].Kind.Is(NotificationKind.OnError);              }
Magic Number,RuntimeUnitTestToolkit,ErrorHandlingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CatchEnumerable,The following statement contains a magic number: {                  var xs = new[]                  {                      Observable.Return(2).Concat(Observable.Throw<int>(new Exception()))'                      Observable.Return(99).Concat(Observable.Throw<int>(new Exception()))                  }                  .Catch()                  .Materialize()                  .ToArrayWait();                  xs[0].Value.Is(2);                  xs[1].Value.Is(99);                  xs[2].Kind.Is(NotificationKind.OnError);              }
Magic Number,RuntimeUnitTestToolkit,ErrorHandlingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CatchEnumerable,The following statement contains a magic number: {                  var xs = new[]                  {                      Observable.Return(2).Concat(Observable.Throw<int>(new Exception()))'                      Observable.Return(99).Concat(Observable.Throw<int>(new Exception()))                  }                  .Catch()                  .Materialize()                  .ToArrayWait();                  xs[0].Value.Is(2);                  xs[1].Value.Is(99);                  xs[2].Kind.Is(NotificationKind.OnError);              }
Magic Number,RuntimeUnitTestToolkit,ErrorHandlingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CatchEnumerable,The following statement contains a magic number: {                  var xs = new[]                  {                      Observable.Return(2).Concat(Observable.Throw<int>(new Exception()))'                      Observable.Return(99).Concat(Observable.Throw<int>(new Exception()))                  }                  .Catch()                  .Materialize()                  .ToArrayWait();                  xs[0].Value.Is(2);                  xs[1].Value.Is(99);                  xs[2].Kind.Is(NotificationKind.OnError);              }
Magic Number,RuntimeUnitTestToolkit,ErrorHandlingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Finally,The following statement contains a magic number: try              {                  Observable.Range(1' 10' Scheduler.Immediate)                      .Do(x => { throw new Exception(); })                      .Finally(() => called = true)                      .Subscribe();              }              catch              {              }              finally              {                  called.IsTrue();              }
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatest,The following statement contains a magic number: a.OnNext(10);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatest,The following statement contains a magic number: b.OnNext(20);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatest,The following statement contains a magic number: a.OnNext(1000);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatest,The following statement contains a magic number: b.OnNext(2000);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatest,The following statement contains a magic number: l[0].Value.Is(new { x = 1000' y = 2000 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatest,The following statement contains a magic number: l[0].Value.Is(new { x = 1000' y = 2000 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatest,The following statement contains a magic number: b.OnNext(3000);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatest,The following statement contains a magic number: l[1].Value.Is(new { x = 1000' y = 3000 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatest,The following statement contains a magic number: l[1].Value.Is(new { x = 1000' y = 3000 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatest,The following statement contains a magic number: a.OnNext(5000);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatest,The following statement contains a magic number: l[2].Value.Is(new { x = 5000' y = 3000 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatest,The following statement contains a magic number: l[2].Value.Is(new { x = 5000' y = 3000 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatest,The following statement contains a magic number: l[2].Value.Is(new { x = 5000' y = 3000 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatest,The following statement contains a magic number: l.Count.Is(3);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatest,The following statement contains a magic number: a.OnNext(1001);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatest,The following statement contains a magic number: l.Count.Is(3);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatest,The following statement contains a magic number: b.OnNext(5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatest,The following statement contains a magic number: l[3].Value.Is(new { x = 5000' y = 5 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatest,The following statement contains a magic number: l[3].Value.Is(new { x = 5000' y = 5 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatest,The following statement contains a magic number: l[3].Value.Is(new { x = 5000' y = 5 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatest,The following statement contains a magic number: b.OnNext(500);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatest,The following statement contains a magic number: l[4].Value.Is(new { x = 5000' y = 500 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatest,The following statement contains a magic number: l[4].Value.Is(new { x = 5000' y = 500 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatest,The following statement contains a magic number: l[4].Value.Is(new { x = 5000' y = 500 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatest,The following statement contains a magic number: l[5].Kind.Is(NotificationKind.OnCompleted);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatest2,The following statement contains a magic number: a.OnNext(10);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatest2,The following statement contains a magic number: b.OnNext(20);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatest2,The following statement contains a magic number: b.OnNext(2000);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatest2,The following statement contains a magic number: b.OnNext(30);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatest3,The following statement contains a magic number: a.OnNext(10);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatest3,The following statement contains a magic number: b.OnNext(20);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatest3,The following statement contains a magic number: a.OnNext(2000);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatest3,The following statement contains a magic number: a.OnNext(30);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatest4,The following statement contains a magic number: a.OnNext(10);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatest4,The following statement contains a magic number: b.OnNext(20);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatest4,The following statement contains a magic number: a.OnNext(30);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatestMulti,The following statement contains a magic number: a.OnNext(10);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatestMulti,The following statement contains a magic number: b.OnNext(20);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatestMulti,The following statement contains a magic number: a.OnNext(1000);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatestMulti,The following statement contains a magic number: b.OnNext(2000);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatestMulti,The following statement contains a magic number: l[0].Value.Is(new { x = 1000' y = 2000 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatestMulti,The following statement contains a magic number: l[0].Value.Is(new { x = 1000' y = 2000 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatestMulti,The following statement contains a magic number: b.OnNext(3000);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatestMulti,The following statement contains a magic number: l[1].Value.Is(new { x = 1000' y = 3000 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatestMulti,The following statement contains a magic number: l[1].Value.Is(new { x = 1000' y = 3000 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatestMulti,The following statement contains a magic number: a.OnNext(5000);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatestMulti,The following statement contains a magic number: l[2].Value.Is(new { x = 5000' y = 3000 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatestMulti,The following statement contains a magic number: l[2].Value.Is(new { x = 5000' y = 3000 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatestMulti,The following statement contains a magic number: l[2].Value.Is(new { x = 5000' y = 3000 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatestMulti,The following statement contains a magic number: l.Count.Is(3);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatestMulti,The following statement contains a magic number: a.OnNext(1001);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatestMulti,The following statement contains a magic number: l.Count.Is(3);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatestMulti,The following statement contains a magic number: b.OnNext(5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatestMulti,The following statement contains a magic number: l[3].Value.Is(new { x = 5000' y = 5 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatestMulti,The following statement contains a magic number: l[3].Value.Is(new { x = 5000' y = 5 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatestMulti,The following statement contains a magic number: l[3].Value.Is(new { x = 5000' y = 5 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatestMulti,The following statement contains a magic number: b.OnNext(500);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatestMulti,The following statement contains a magic number: l[4].Value.Is(new { x = 5000' y = 500 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatestMulti,The following statement contains a magic number: l[4].Value.Is(new { x = 5000' y = 500 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatestMulti,The following statement contains a magic number: l[4].Value.Is(new { x = 5000' y = 500 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatestMulti,The following statement contains a magic number: l[5].Kind.Is(NotificationKind.OnCompleted);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatestMulti2,The following statement contains a magic number: b.OnNext(2000);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatestMulti2,The following statement contains a magic number: b.OnNext(30);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatestMulti3,The following statement contains a magic number: a.OnNext(10);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatestMulti3,The following statement contains a magic number: b.OnNext(20);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatestMulti3,The following statement contains a magic number: a.OnNext(2000);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatestMulti3,The following statement contains a magic number: a.OnNext(30);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatestMulti4,The following statement contains a magic number: a.OnNext(10);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatestMulti4,The following statement contains a magic number: b.OnNext(20);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,CombineLatestMulti4,The following statement contains a magic number: a.OnNext(30);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Concat,The following statement contains a magic number: var a = Observable.Range(1' 5' Scheduler.ThreadPool);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Concat,The following statement contains a magic number: var b = Observable.Range(10' 3' Scheduler.ThreadPool);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Concat,The following statement contains a magic number: var b = Observable.Range(10' 3' Scheduler.ThreadPool);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Concat,The following statement contains a magic number: var c = Observable.Return(300' Scheduler.ThreadPool);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Concat,The following statement contains a magic number: Observable.Concat(a' b' c).ToArray().Wait().IsCollection(1' 2' 3' 4' 5' 10' 11' 12' 300);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Concat,The following statement contains a magic number: Observable.Concat(a' b' c).ToArray().Wait().IsCollection(1' 2' 3' 4' 5' 10' 11' 12' 300);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Concat,The following statement contains a magic number: Observable.Concat(a' b' c).ToArray().Wait().IsCollection(1' 2' 3' 4' 5' 10' 11' 12' 300);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Concat,The following statement contains a magic number: Observable.Concat(a' b' c).ToArray().Wait().IsCollection(1' 2' 3' 4' 5' 10' 11' 12' 300);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Concat,The following statement contains a magic number: Observable.Concat(a' b' c).ToArray().Wait().IsCollection(1' 2' 3' 4' 5' 10' 11' 12' 300);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Concat,The following statement contains a magic number: Observable.Concat(a' b' c).ToArray().Wait().IsCollection(1' 2' 3' 4' 5' 10' 11' 12' 300);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Concat,The following statement contains a magic number: Observable.Concat(a' b' c).ToArray().Wait().IsCollection(1' 2' 3' 4' 5' 10' 11' 12' 300);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Concat,The following statement contains a magic number: Observable.Concat(a' b' c).ToArray().Wait().IsCollection(1' 2' 3' 4' 5' 10' 11' 12' 300);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Merge,The following statement contains a magic number: s1.OnNext(10);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Merge,The following statement contains a magic number: s1.OnNext(20);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Merge,The following statement contains a magic number: s3.OnNext(100);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Merge,The following statement contains a magic number: s2.OnNext(50);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Merge,The following statement contains a magic number: list.IsCollection(10' 20' 100' 50);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Merge,The following statement contains a magic number: list.IsCollection(10' 20' 100' 50);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Merge,The following statement contains a magic number: list.IsCollection(10' 20' 100' 50);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Merge,The following statement contains a magic number: list.IsCollection(10' 20' 100' 50);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Merge,The following statement contains a magic number: s3.OnNext(500);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,MergeConcurrent,The following statement contains a magic number: Observable.Merge(new[] { s1' s2' s3 }' maxConcurrent: 2).Subscribe(list.Add' () => complete = true);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,MergeConcurrent,The following statement contains a magic number: s1.OnNext(10);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,MergeConcurrent,The following statement contains a magic number: s1.OnNext(20);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,MergeConcurrent,The following statement contains a magic number: s3.OnNext(100);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,MergeConcurrent,The following statement contains a magic number: s2.OnNext(50);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,MergeConcurrent,The following statement contains a magic number: list.IsCollection(10' 20' 50);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,MergeConcurrent,The following statement contains a magic number: list.IsCollection(10' 20' 50);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,MergeConcurrent,The following statement contains a magic number: list.IsCollection(10' 20' 50);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,MergeConcurrent,The following statement contains a magic number: s3.OnNext(500);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,MergeConcurrent,The following statement contains a magic number: list.IsCollection(500);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: var seq = Observable.Range(1' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(100).ToArray().Wait().IsCollection(100' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(100).ToArray().Wait().IsCollection(100' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(100).ToArray().Wait().IsCollection(100' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(100).ToArray().Wait().IsCollection(100' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(100).ToArray().Wait().IsCollection(100' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(100).ToArray().Wait().IsCollection(100' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(() => 100).ToArray().Wait().IsCollection(100' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(() => 100).ToArray().Wait().IsCollection(100' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(() => 100).ToArray().Wait().IsCollection(100' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(() => 100).ToArray().Wait().IsCollection(100' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(() => 100).ToArray().Wait().IsCollection(100' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(() => 100).ToArray().Wait().IsCollection(100' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(100' 1000' 10000).ToArray().Wait().IsCollection(100' 1000' 10000' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(100' 1000' 10000).ToArray().Wait().IsCollection(100' 1000' 10000' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(100' 1000' 10000).ToArray().Wait().IsCollection(100' 1000' 10000' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(100' 1000' 10000).ToArray().Wait().IsCollection(100' 1000' 10000' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(100' 1000' 10000).ToArray().Wait().IsCollection(100' 1000' 10000' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(100' 1000' 10000).ToArray().Wait().IsCollection(100' 1000' 10000' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(100' 1000' 10000).ToArray().Wait().IsCollection(100' 1000' 10000' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(100' 1000' 10000).ToArray().Wait().IsCollection(100' 1000' 10000' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(100' 1000' 10000).ToArray().Wait().IsCollection(100' 1000' 10000' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(100' 1000' 10000).ToArray().Wait().IsCollection(100' 1000' 10000' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(Enumerable.Range(100' 3)).ToArray().Wait().IsCollection(100' 101' 102' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(Enumerable.Range(100' 3)).ToArray().Wait().IsCollection(100' 101' 102' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(Enumerable.Range(100' 3)).ToArray().Wait().IsCollection(100' 101' 102' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(Enumerable.Range(100' 3)).ToArray().Wait().IsCollection(100' 101' 102' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(Enumerable.Range(100' 3)).ToArray().Wait().IsCollection(100' 101' 102' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(Enumerable.Range(100' 3)).ToArray().Wait().IsCollection(100' 101' 102' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(Enumerable.Range(100' 3)).ToArray().Wait().IsCollection(100' 101' 102' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(Enumerable.Range(100' 3)).ToArray().Wait().IsCollection(100' 101' 102' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(Enumerable.Range(100' 3)).ToArray().Wait().IsCollection(100' 101' 102' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(Scheduler.ThreadPool' 100).ToArray().Wait().IsCollection(100' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(Scheduler.ThreadPool' 100).ToArray().Wait().IsCollection(100' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(Scheduler.ThreadPool' 100).ToArray().Wait().IsCollection(100' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(Scheduler.ThreadPool' 100).ToArray().Wait().IsCollection(100' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(Scheduler.ThreadPool' 100).ToArray().Wait().IsCollection(100' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(Scheduler.ThreadPool' 100).ToArray().Wait().IsCollection(100' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(Scheduler.ThreadPool' 100' 1000' 10000).ToArray().Wait().IsCollection(100' 1000' 10000' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(Scheduler.ThreadPool' 100' 1000' 10000).ToArray().Wait().IsCollection(100' 1000' 10000' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(Scheduler.ThreadPool' 100' 1000' 10000).ToArray().Wait().IsCollection(100' 1000' 10000' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(Scheduler.ThreadPool' 100' 1000' 10000).ToArray().Wait().IsCollection(100' 1000' 10000' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(Scheduler.ThreadPool' 100' 1000' 10000).ToArray().Wait().IsCollection(100' 1000' 10000' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(Scheduler.ThreadPool' 100' 1000' 10000).ToArray().Wait().IsCollection(100' 1000' 10000' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(Scheduler.ThreadPool' 100' 1000' 10000).ToArray().Wait().IsCollection(100' 1000' 10000' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(Scheduler.ThreadPool' 100' 1000' 10000).ToArray().Wait().IsCollection(100' 1000' 10000' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(Scheduler.ThreadPool' 100' 1000' 10000).ToArray().Wait().IsCollection(100' 1000' 10000' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(Scheduler.ThreadPool' 100' 1000' 10000).ToArray().Wait().IsCollection(100' 1000' 10000' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(Scheduler.ThreadPool' Enumerable.Range(100' 3)).ToArray().Wait().IsCollection(100' 101' 102' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(Scheduler.ThreadPool' Enumerable.Range(100' 3)).ToArray().Wait().IsCollection(100' 101' 102' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(Scheduler.ThreadPool' Enumerable.Range(100' 3)).ToArray().Wait().IsCollection(100' 101' 102' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(Scheduler.ThreadPool' Enumerable.Range(100' 3)).ToArray().Wait().IsCollection(100' 101' 102' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(Scheduler.ThreadPool' Enumerable.Range(100' 3)).ToArray().Wait().IsCollection(100' 101' 102' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(Scheduler.ThreadPool' Enumerable.Range(100' 3)).ToArray().Wait().IsCollection(100' 101' 102' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(Scheduler.ThreadPool' Enumerable.Range(100' 3)).ToArray().Wait().IsCollection(100' 101' 102' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(Scheduler.ThreadPool' Enumerable.Range(100' 3)).ToArray().Wait().IsCollection(100' 101' 102' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,StartWith,The following statement contains a magic number: seq.StartWith(Scheduler.ThreadPool' Enumerable.Range(100' 3)).ToArray().Wait().IsCollection(100' 101' 102' 1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Switch,The following statement contains a magic number: s1.OnNext(100);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Switch,The following statement contains a magic number: s1.OnNext(2000);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Switch,The following statement contains a magic number: s1.OnNext(3000);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Switch,The following statement contains a magic number: s2.OnNext(5000);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Switch,The following statement contains a magic number: s2.OnNext(900000);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Switch,The following statement contains a magic number: list.IsCollection(100' 2000' 5000' 900000);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Switch,The following statement contains a magic number: list.IsCollection(100' 2000' 5000' 900000);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Switch,The following statement contains a magic number: list.IsCollection(100' 2000' 5000' 900000);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Switch,The following statement contains a magic number: list.IsCollection(100' 2000' 5000' 900000);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhenAll,The following statement contains a magic number: a.OnNext(10);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhenAll,The following statement contains a magic number: b.OnNext(20);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhenAll,The following statement contains a magic number: a.OnNext(1000);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhenAll,The following statement contains a magic number: a.OnNext(1500);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhenAll,The following statement contains a magic number: b.OnNext(2000);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhenAll,The following statement contains a magic number: a.OnNext(1001);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhenAll,The following statement contains a magic number: b.OnNext(5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhenAll,The following statement contains a magic number: l.Count.Is(2);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhenAll,The following statement contains a magic number: l[0].Value.x.Is(1500);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhenAll,The following statement contains a magic number: l[0].Value.y.Is(5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WithLatestFrom,The following statement contains a magic number: b.OnNext(2);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WithLatestFrom,The following statement contains a magic number: b.OnNext(3);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WithLatestFrom,The following statement contains a magic number: b.OnNext(4);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WithLatestFrom,The following statement contains a magic number: b.OnNext(5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WithLatestFrom,The following statement contains a magic number: b.OnNext(6);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WithLatestFrom,The following statement contains a magic number: b.OnNext(7);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WithLatestFrom,The following statement contains a magic number: a.OnNext(2);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WithLatestFrom,The following statement contains a magic number: b.OnNext(8);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WithLatestFrom,The following statement contains a magic number: b.OnNext(9);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WithLatestFrom,The following statement contains a magic number: b.OnNext(10);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WithLatestFrom,The following statement contains a magic number: a.OnNext(3);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WithLatestFrom,The following statement contains a magic number: record.Values.IsCollection(                  new { x = 0' y = 1 }'                  new { x = 1' y = 4 }'                  new { x = 2' y = 7 }'                  new { x = 3' y = 10 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WithLatestFrom,The following statement contains a magic number: record.Values.IsCollection(                  new { x = 0' y = 1 }'                  new { x = 1' y = 4 }'                  new { x = 2' y = 7 }'                  new { x = 3' y = 10 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WithLatestFrom,The following statement contains a magic number: record.Values.IsCollection(                  new { x = 0' y = 1 }'                  new { x = 1' y = 4 }'                  new { x = 2' y = 7 }'                  new { x = 3' y = 10 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WithLatestFrom,The following statement contains a magic number: record.Values.IsCollection(                  new { x = 0' y = 1 }'                  new { x = 1' y = 4 }'                  new { x = 2' y = 7 }'                  new { x = 3' y = 10 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WithLatestFrom,The following statement contains a magic number: record.Values.IsCollection(                  new { x = 0' y = 1 }'                  new { x = 1' y = 4 }'                  new { x = 2' y = 7 }'                  new { x = 3' y = 10 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Zip,The following statement contains a magic number: a.OnNext(10);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Zip,The following statement contains a magic number: b.OnNext(20);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Zip,The following statement contains a magic number: a.OnNext(1000);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Zip,The following statement contains a magic number: b.OnNext(2000);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Zip,The following statement contains a magic number: a.OnNext(1001);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Zip,The following statement contains a magic number: b.OnNext(5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Zip,The following statement contains a magic number: l.Count.Is(2);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Zip2,The following statement contains a magic number: a.OnNext(10);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Zip2,The following statement contains a magic number: b.OnNext(20);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Zip2,The following statement contains a magic number: a.OnNext(1000);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Zip2,The following statement contains a magic number: b.OnNext(2000);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Zip2,The following statement contains a magic number: l.Count.Is(2);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatest,The following statement contains a magic number: a.OnNext(10);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatest,The following statement contains a magic number: b.OnNext(20);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatest,The following statement contains a magic number: a.OnNext(1000);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatest,The following statement contains a magic number: b.OnNext(2000);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatest,The following statement contains a magic number: l[0].Value.Is(new { x = 1000' y = 2000 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatest,The following statement contains a magic number: l[0].Value.Is(new { x = 1000' y = 2000 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatest,The following statement contains a magic number: b.OnNext(3000);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatest,The following statement contains a magic number: a.OnNext(5000);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatest,The following statement contains a magic number: l[1].Value.Is(new { x = 5000' y = 3000 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatest,The following statement contains a magic number: l[1].Value.Is(new { x = 5000' y = 3000 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatest,The following statement contains a magic number: l.Count.Is(2);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatest,The following statement contains a magic number: a.OnNext(1001);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatest,The following statement contains a magic number: l.Count.Is(2);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatest,The following statement contains a magic number: b.OnNext(5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatest,The following statement contains a magic number: l.Count.Is(3);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatest,The following statement contains a magic number: l[2].Kind.Is(NotificationKind.OnCompleted);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatest2,The following statement contains a magic number: a.OnNext(10);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatest2,The following statement contains a magic number: b.OnNext(20);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatest2,The following statement contains a magic number: a.OnNext(1000);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatest2,The following statement contains a magic number: b.OnNext(2000);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatest2,The following statement contains a magic number: l[0].Value.Is(new { x = 1000' y = 2000 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatest2,The following statement contains a magic number: l[0].Value.Is(new { x = 1000' y = 2000 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatest2,The following statement contains a magic number: b.OnNext(3000);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatest2,The following statement contains a magic number: a.OnNext(5000);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatest2,The following statement contains a magic number: l[1].Value.Is(new { x = 5000' y = 3000 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatest2,The following statement contains a magic number: l[1].Value.Is(new { x = 5000' y = 3000 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatest2,The following statement contains a magic number: a.OnNext(9999);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatest2,The following statement contains a magic number: l.Count.Is(2);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatest2,The following statement contains a magic number: a.OnNext(1001);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatest2,The following statement contains a magic number: l.Count.Is(2);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatest2,The following statement contains a magic number: b.OnNext(5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatest2,The following statement contains a magic number: l.Count.Is(4);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatest2,The following statement contains a magic number: l[2].Value.Is(new { x = 9999' y = 5 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatest2,The following statement contains a magic number: l[2].Value.Is(new { x = 9999' y = 5 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatest2,The following statement contains a magic number: l[2].Value.Is(new { x = 9999' y = 5 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatest2,The following statement contains a magic number: l[3].Kind.Is(NotificationKind.OnCompleted);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatest2Ex,The following statement contains a magic number: a.OnNext(10);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatest2Ex,The following statement contains a magic number: b.OnNext(20);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatest2Ex,The following statement contains a magic number: b.OnNext(2000);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatest2Ex,The following statement contains a magic number: b.OnNext(30);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatestMulti,The following statement contains a magic number: a.OnNext(1000);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatestMulti,The following statement contains a magic number: b.OnNext(2000);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatestMulti,The following statement contains a magic number: l[0].Value.Is(new { x = 1000' y = 2000 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatestMulti,The following statement contains a magic number: l[0].Value.Is(new { x = 1000' y = 2000 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatestMulti,The following statement contains a magic number: b.OnNext(3000);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatestMulti,The following statement contains a magic number: a.OnNext(5000);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatestMulti,The following statement contains a magic number: l[1].Value.Is(new { x = 5000' y = 3000 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatestMulti,The following statement contains a magic number: l[1].Value.Is(new { x = 5000' y = 3000 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatestMulti,The following statement contains a magic number: l.Count.Is(2);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatestMulti,The following statement contains a magic number: b.OnNext(5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatestMulti,The following statement contains a magic number: l[2].Kind.Is(NotificationKind.OnCompleted);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatestMulti2,The following statement contains a magic number: a.OnNext(1000);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatestMulti2,The following statement contains a magic number: b.OnNext(2000);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatestMulti2,The following statement contains a magic number: l[0].Value.Is(new { x = 1000' y = 2000 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatestMulti2,The following statement contains a magic number: l[0].Value.Is(new { x = 1000' y = 2000 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatestMulti2,The following statement contains a magic number: b.OnNext(3000);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatestMulti2,The following statement contains a magic number: a.OnNext(5000);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatestMulti2,The following statement contains a magic number: l[1].Value.Is(new { x = 5000' y = 3000 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatestMulti2,The following statement contains a magic number: l[1].Value.Is(new { x = 5000' y = 3000 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatestMulti2,The following statement contains a magic number: a.OnNext(900);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatestMulti2,The following statement contains a magic number: l.Count.Is(2);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatestMulti2,The following statement contains a magic number: b.OnNext(5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatestMulti2,The following statement contains a magic number: l[2].Value.Is(new { x = 900' y = 5 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatestMulti2,The following statement contains a magic number: l[2].Value.Is(new { x = 900' y = 5 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatestMulti2,The following statement contains a magic number: l[2].Value.Is(new { x = 900' y = 5 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatestMulti2,The following statement contains a magic number: l[3].Kind.Is(NotificationKind.OnCompleted);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatestNth,The following statement contains a magic number: b.OnNext(2);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatestNth,The following statement contains a magic number: c.OnNext(3);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatestNth,The following statement contains a magic number: d.OnNext(4);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatestNth,The following statement contains a magic number: record.Values[0].Is(new { x = 1' y = 2' z = 3' w = 4 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatestNth,The following statement contains a magic number: record.Values[0].Is(new { x = 1' y = 2' z = 3' w = 4 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatestNth,The following statement contains a magic number: record.Values[0].Is(new { x = 1' y = 2' z = 3' w = 4 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatestNth,The following statement contains a magic number: a.OnNext(10);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatestNth,The following statement contains a magic number: b.OnNext(20);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatestNth,The following statement contains a magic number: c.OnNext(30);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatestNth,The following statement contains a magic number: d.OnNext(40);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatestNth,The following statement contains a magic number: record.Values[1].Is(new { x = 10' y = 20' z = 30' w = 40 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatestNth,The following statement contains a magic number: record.Values[1].Is(new { x = 10' y = 20' z = 30' w = 40 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatestNth,The following statement contains a magic number: record.Values[1].Is(new { x = 10' y = 20' z = 30' w = 40 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatestNth,The following statement contains a magic number: record.Values[1].Is(new { x = 10' y = 20' z = 30' w = 40 });
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatestNth,The following statement contains a magic number: record.Notifications.Count.Is(2);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatestNth,The following statement contains a magic number: b.OnNext(200);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipLatestNth,The following statement contains a magic number: record.Notifications.Count.Is(3);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipMulti,The following statement contains a magic number: a.OnNext(10);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipMulti,The following statement contains a magic number: b.OnNext(20);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipMulti,The following statement contains a magic number: a.OnNext(1000);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipMulti,The following statement contains a magic number: b.OnNext(2000);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipMulti,The following statement contains a magic number: a.OnNext(1001);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipMulti,The following statement contains a magic number: b.OnNext(5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipMulti,The following statement contains a magic number: l.Count.Is(2);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipMulti2,The following statement contains a magic number: a.OnNext(10);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipMulti2,The following statement contains a magic number: b.OnNext(20);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipMulti2,The following statement contains a magic number: a.OnNext(1000);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipMulti2,The following statement contains a magic number: b.OnNext(2000);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipMulti2,The following statement contains a magic number: l.Count.Is(2);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipNth,The following statement contains a magic number: a.OnNext(1000);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipNth,The following statement contains a magic number: b.OnNext(2000);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipNth,The following statement contains a magic number: c.OnNext(3000);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipNth,The following statement contains a magic number: b.OnNext(1001);
Magic Number,RuntimeUnitTestToolkit,ObservableConcatTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ZipNth,The following statement contains a magic number: l.Count.Is(2);
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AmbMultiTest,The following statement contains a magic number: var xs = Observable.Return(10).Delay(TimeSpan.FromSeconds(5)).Concat(Observable.Range(1' 3));
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AmbMultiTest,The following statement contains a magic number: var xs = Observable.Return(10).Delay(TimeSpan.FromSeconds(5)).Concat(Observable.Range(1' 3));
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AmbMultiTest,The following statement contains a magic number: var xs = Observable.Return(10).Delay(TimeSpan.FromSeconds(5)).Concat(Observable.Range(1' 3));
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AmbMultiTest,The following statement contains a magic number: var ys = Observable.Return(30).Delay(TimeSpan.FromSeconds(1)).Concat(Observable.Range(5' 3));
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AmbMultiTest,The following statement contains a magic number: var ys = Observable.Return(30).Delay(TimeSpan.FromSeconds(1)).Concat(Observable.Range(5' 3));
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AmbMultiTest,The following statement contains a magic number: var ys = Observable.Return(30).Delay(TimeSpan.FromSeconds(1)).Concat(Observable.Range(5' 3));
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AmbMultiTest,The following statement contains a magic number: var zs = Observable.Return(50).Delay(TimeSpan.FromSeconds(3)).Concat(Observable.Range(9' 3));
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AmbMultiTest,The following statement contains a magic number: var zs = Observable.Return(50).Delay(TimeSpan.FromSeconds(3)).Concat(Observable.Range(9' 3));
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AmbMultiTest,The following statement contains a magic number: var zs = Observable.Return(50).Delay(TimeSpan.FromSeconds(3)).Concat(Observable.Range(9' 3));
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AmbMultiTest,The following statement contains a magic number: var zs = Observable.Return(50).Delay(TimeSpan.FromSeconds(3)).Concat(Observable.Range(9' 3));
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AmbMultiTest,The following statement contains a magic number: result[0].Is(30);
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AmbMultiTest,The following statement contains a magic number: result[1].Is(5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AmbMultiTest,The following statement contains a magic number: result[2].Is(6);
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AmbMultiTest,The following statement contains a magic number: result[2].Is(6);
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AmbMultiTest,The following statement contains a magic number: result[3].Is(7);
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AmbMultiTest,The following statement contains a magic number: result[3].Is(7);
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AmbMultiTest,The following statement contains a magic number: result[0].Is(30);
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AmbMultiTest,The following statement contains a magic number: result[1].Is(5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AmbMultiTest,The following statement contains a magic number: result[2].Is(6);
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AmbMultiTest,The following statement contains a magic number: result[2].Is(6);
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AmbMultiTest,The following statement contains a magic number: result[3].Is(7);
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AmbMultiTest,The following statement contains a magic number: result[3].Is(7);
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AmbMultiTest,The following statement contains a magic number: result[0].Is(30);
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AmbMultiTest,The following statement contains a magic number: result[1].Is(5);
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AmbMultiTest,The following statement contains a magic number: result[2].Is(6);
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AmbMultiTest,The following statement contains a magic number: result[2].Is(6);
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AmbMultiTest,The following statement contains a magic number: result[3].Is(7);
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AmbMultiTest,The following statement contains a magic number: result[3].Is(7);
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AmbTest,The following statement contains a magic number: var xs = Observable.Return(10).Delay(TimeSpan.FromSeconds(1)).Concat(Observable.Range(1' 3));
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AmbTest,The following statement contains a magic number: var xs = Observable.Return(10).Delay(TimeSpan.FromSeconds(1)).Concat(Observable.Range(1' 3));
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AmbTest,The following statement contains a magic number: var xss = Observable.Return(10).Concat(Observable.Range(1' 3));
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AmbTest,The following statement contains a magic number: var xss = Observable.Return(10).Concat(Observable.Range(1' 3));
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AmbTest,The following statement contains a magic number: var ys = Observable.Return(30).Delay(TimeSpan.FromSeconds(2)).Concat(Observable.Range(5' 3));
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AmbTest,The following statement contains a magic number: var ys = Observable.Return(30).Delay(TimeSpan.FromSeconds(2)).Concat(Observable.Range(5' 3));
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AmbTest,The following statement contains a magic number: var ys = Observable.Return(30).Delay(TimeSpan.FromSeconds(2)).Concat(Observable.Range(5' 3));
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AmbTest,The following statement contains a magic number: var ys = Observable.Return(30).Delay(TimeSpan.FromSeconds(2)).Concat(Observable.Range(5' 3));
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AmbTest,The following statement contains a magic number: result[0].Is(10);
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AmbTest,The following statement contains a magic number: result[2].Is(2);
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AmbTest,The following statement contains a magic number: result[2].Is(2);
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AmbTest,The following statement contains a magic number: result[3].Is(3);
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AmbTest,The following statement contains a magic number: result[3].Is(3);
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AmbTest,The following statement contains a magic number: result[0].Is(10);
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AmbTest,The following statement contains a magic number: result[2].Is(2);
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AmbTest,The following statement contains a magic number: result[2].Is(2);
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AmbTest,The following statement contains a magic number: result[3].Is(3);
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AmbTest,The following statement contains a magic number: result[3].Is(3);
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ObserveOnTest,The following statement contains a magic number: var xs = Observable.Range(1' 10)                  .ObserveOn(Scheduler.ThreadPool)                  .ToArrayWait();
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ObserveOnTest,The following statement contains a magic number: xs.OrderBy(x => x).IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ObserveOnTest,The following statement contains a magic number: xs.OrderBy(x => x).IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ObserveOnTest,The following statement contains a magic number: xs.OrderBy(x => x).IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ObserveOnTest,The following statement contains a magic number: xs.OrderBy(x => x).IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ObserveOnTest,The following statement contains a magic number: xs.OrderBy(x => x).IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ObserveOnTest,The following statement contains a magic number: xs.OrderBy(x => x).IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ObserveOnTest,The following statement contains a magic number: xs.OrderBy(x => x).IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ObserveOnTest,The following statement contains a magic number: xs.OrderBy(x => x).IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ObservableConcurrencyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ObserveOnTest,The following statement contains a magic number: xs.OrderBy(x => x).IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ObservableEventsTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEvent,The following statement contains a magic number: {                  var isRaised = false;                  var d = Observable.FromEvent<EventHandler<MyEventArgs>' MyEventArgs>(                      h => (sender' e) => h.Invoke(e)'                      h => test.Event2 += h' h => test.Event2 -= h)                      .Subscribe(x => isRaised = true);                  test.Fire(2);                  isRaised.IsTrue();                  isRaised = false;                  d.Dispose();                  test.Fire(2);                  isRaised.IsFalse();              }
Magic Number,RuntimeUnitTestToolkit,ObservableEventsTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEvent,The following statement contains a magic number: {                  var isRaised = false;                  var d = Observable.FromEvent<EventHandler<MyEventArgs>' MyEventArgs>(                      h => (sender' e) => h.Invoke(e)'                      h => test.Event2 += h' h => test.Event2 -= h)                      .Subscribe(x => isRaised = true);                  test.Fire(2);                  isRaised.IsTrue();                  isRaised = false;                  d.Dispose();                  test.Fire(2);                  isRaised.IsFalse();              }
Magic Number,RuntimeUnitTestToolkit,ObservableEventsTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEvent,The following statement contains a magic number: {                  var isRaised = false;                  var d = Observable.FromEvent<MyEventHandler' MyEventArgs>(                      h => (sender' e) => h.Invoke(e)'                      h => test.Event3 += h' h => test.Event3 -= h)                      .Subscribe(x => isRaised = true);                  test.Fire(3);                  isRaised.IsTrue();                  isRaised = false;                  d.Dispose();                  test.Fire(3);                  isRaised.IsFalse();              }
Magic Number,RuntimeUnitTestToolkit,ObservableEventsTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEvent,The following statement contains a magic number: {                  var isRaised = false;                  var d = Observable.FromEvent<MyEventHandler' MyEventArgs>(                      h => (sender' e) => h.Invoke(e)'                      h => test.Event3 += h' h => test.Event3 -= h)                      .Subscribe(x => isRaised = true);                  test.Fire(3);                  isRaised.IsTrue();                  isRaised = false;                  d.Dispose();                  test.Fire(3);                  isRaised.IsFalse();              }
Magic Number,RuntimeUnitTestToolkit,ObservableEventsTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEvent,The following statement contains a magic number: {                  var isRaised = false;                  var d = Observable.FromEvent<Action' Unit>(                      h => () => h(Unit.Default)'                      h => test.Event4 += h' h => test.Event4 -= h)                      .Subscribe(x => isRaised = true);                  test.Fire(4);                  isRaised.IsTrue();                  isRaised = false;                  d.Dispose();                  test.Fire(4);                  isRaised.IsFalse();              }
Magic Number,RuntimeUnitTestToolkit,ObservableEventsTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEvent,The following statement contains a magic number: {                  var isRaised = false;                  var d = Observable.FromEvent<Action' Unit>(                      h => () => h(Unit.Default)'                      h => test.Event4 += h' h => test.Event4 -= h)                      .Subscribe(x => isRaised = true);                  test.Fire(4);                  isRaised.IsTrue();                  isRaised = false;                  d.Dispose();                  test.Fire(4);                  isRaised.IsFalse();              }
Magic Number,RuntimeUnitTestToolkit,ObservableEventsTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEvent,The following statement contains a magic number: {                  var isRaised = false;                  var d = Observable.FromEvent(                      h => test.Event4 += h' h => test.Event4 -= h)                      .Subscribe(x => isRaised = true);                  test.Fire(4);                  isRaised.IsTrue();                  isRaised = false;                  d.Dispose();                  test.Fire(4);                  isRaised.IsFalse();              }
Magic Number,RuntimeUnitTestToolkit,ObservableEventsTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEvent,The following statement contains a magic number: {                  var isRaised = false;                  var d = Observable.FromEvent(                      h => test.Event4 += h' h => test.Event4 -= h)                      .Subscribe(x => isRaised = true);                  test.Fire(4);                  isRaised.IsTrue();                  isRaised = false;                  d.Dispose();                  test.Fire(4);                  isRaised.IsFalse();              }
Magic Number,RuntimeUnitTestToolkit,ObservableEventsTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEvent,The following statement contains a magic number: {                  var isRaised = false;                  var d = Observable.FromEvent<Action<int>' int>(                      h => h'                      h => test.Event5 += h' h => test.Event5 -= h)                      .Subscribe(x => isRaised = true);                  test.Fire(5);                  isRaised.IsTrue();                  isRaised = false;                  d.Dispose();                  test.Fire(5);                  isRaised.IsFalse();              }
Magic Number,RuntimeUnitTestToolkit,ObservableEventsTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEvent,The following statement contains a magic number: {                  var isRaised = false;                  var d = Observable.FromEvent<Action<int>' int>(                      h => h'                      h => test.Event5 += h' h => test.Event5 -= h)                      .Subscribe(x => isRaised = true);                  test.Fire(5);                  isRaised.IsTrue();                  isRaised = false;                  d.Dispose();                  test.Fire(5);                  isRaised.IsFalse();              }
Magic Number,RuntimeUnitTestToolkit,ObservableEventsTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEvent,The following statement contains a magic number: {                  var isRaised = false;                  var d = Observable.FromEvent<int>(                      h => test.Event5 += h' h => test.Event5 -= h)                      .Subscribe(x => isRaised = true);                  test.Fire(5);                  isRaised.IsTrue();                  isRaised = false;                  d.Dispose();                  test.Fire(5);                  isRaised.IsFalse();              }
Magic Number,RuntimeUnitTestToolkit,ObservableEventsTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEvent,The following statement contains a magic number: {                  var isRaised = false;                  var d = Observable.FromEvent<int>(                      h => test.Event5 += h' h => test.Event5 -= h)                      .Subscribe(x => isRaised = true);                  test.Fire(5);                  isRaised.IsTrue();                  isRaised = false;                  d.Dispose();                  test.Fire(5);                  isRaised.IsFalse();              }
Magic Number,RuntimeUnitTestToolkit,ObservableEventsTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEvent,The following statement contains a magic number: {                  var isRaised = false;                  var d = Observable.FromEvent<Action<int' string>' Tuple<int' string>>(                      h => (x' y) => h(Tuple.Create(x' y))'                      h => test.Event6 += h' h => test.Event6 -= h)                      .Subscribe(x => isRaised = true);                  test.Fire(6);                  isRaised.IsTrue();                  isRaised = false;                  d.Dispose();                  test.Fire(6);                  isRaised.IsFalse();              }
Magic Number,RuntimeUnitTestToolkit,ObservableEventsTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEvent,The following statement contains a magic number: {                  var isRaised = false;                  var d = Observable.FromEvent<Action<int' string>' Tuple<int' string>>(                      h => (x' y) => h(Tuple.Create(x' y))'                      h => test.Event6 += h' h => test.Event6 -= h)                      .Subscribe(x => isRaised = true);                  test.Fire(6);                  isRaised.IsTrue();                  isRaised = false;                  d.Dispose();                  test.Fire(6);                  isRaised.IsFalse();              }
Magic Number,RuntimeUnitTestToolkit,ObservableEventsTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventPattern,The following statement contains a magic number: {                  var isRaised = false;                  var d = Observable.FromEventPattern<EventHandler<MyEventArgs>' MyEventArgs>(                      h => h.Invoke'                      h => test.Event2 += h' h => test.Event2 -= h)                      .Subscribe(x => isRaised = true);                  test.Fire(2);                  isRaised.IsTrue();                  isRaised = false;                  d.Dispose();                  test.Fire(2);                  isRaised.IsFalse();              }
Magic Number,RuntimeUnitTestToolkit,ObservableEventsTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventPattern,The following statement contains a magic number: {                  var isRaised = false;                  var d = Observable.FromEventPattern<EventHandler<MyEventArgs>' MyEventArgs>(                      h => h.Invoke'                      h => test.Event2 += h' h => test.Event2 -= h)                      .Subscribe(x => isRaised = true);                  test.Fire(2);                  isRaised.IsTrue();                  isRaised = false;                  d.Dispose();                  test.Fire(2);                  isRaised.IsFalse();              }
Magic Number,RuntimeUnitTestToolkit,ObservableEventsTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventPattern,The following statement contains a magic number: {                  var isRaised = false;                  var d = Observable.FromEventPattern<MyEventHandler' MyEventArgs>(                      h => h.Invoke'                      h => test.Event3 += h' h => test.Event3 -= h)                      .Subscribe(x => isRaised = true);                  test.Fire(3);                  isRaised.IsTrue();                  isRaised = false;                  d.Dispose();                  test.Fire(3);                  isRaised.IsFalse();              }
Magic Number,RuntimeUnitTestToolkit,ObservableEventsTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FromEventPattern,The following statement contains a magic number: {                  var isRaised = false;                  var d = Observable.FromEventPattern<MyEventHandler' MyEventArgs>(                      h => h.Invoke'                      h => test.Event3 += h' h => test.Event3 -= h)                      .Subscribe(x => isRaised = true);                  test.Fire(3);                  isRaised.IsTrue();                  isRaised = false;                  d.Dispose();                  test.Fire(3);                  isRaised.IsFalse();              }
Magic Number,RuntimeUnitTestToolkit,ObservableGeneratorTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Never,The following statement contains a magic number: AssertEx.Catch<TimeoutException>(() =>                  Observable.Never<Unit>().Materialize().ToArray().Wait(TimeSpan.FromMilliseconds(10)));
Magic Number,RuntimeUnitTestToolkit,ObservableGeneratorTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,OptimizeReturnTest,The following statement contains a magic number: for (int i = -1; i <= 9; i++)              {                  var r = Observable.Return(i);                  var xs = r.Record();                  xs.Values[0].Is(i);                  r.GetType().FullName.Contains("ImmutableReturnInt32Observable").IsTrue();              }
Magic Number,RuntimeUnitTestToolkit,ObservableGeneratorTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,OptimizeReturnTest,The following statement contains a magic number: foreach (var i in new[] { -2' 10' 100 })              {                  var r = Observable.Return(i);                  r.Record().Values[0].Is(i);                  r.GetType().FullName.Contains("ImmediateReturnObservable").IsTrue();              }
Magic Number,RuntimeUnitTestToolkit,ObservableGeneratorTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,OptimizeReturnTest,The following statement contains a magic number: foreach (var i in new[] { -2' 10' 100 })              {                  var r = Observable.Return(i);                  r.Record().Values[0].Is(i);                  r.GetType().FullName.Contains("ImmediateReturnObservable").IsTrue();              }
Magic Number,RuntimeUnitTestToolkit,ObservableGeneratorTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,OptimizeReturnTest,The following statement contains a magic number: foreach (var i in new[] { -2' 10' 100 })              {                  var r = Observable.Return(i);                  r.Record().Values[0].Is(i);                  r.GetType().FullName.Contains("ImmediateReturnObservable").IsTrue();              }
Magic Number,RuntimeUnitTestToolkit,ObservableGeneratorTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Range,The following statement contains a magic number: Observable.Range(1' 5).ToArray().Wait().IsCollection(1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableGeneratorTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Range,The following statement contains a magic number: Observable.Range(1' 5).ToArray().Wait().IsCollection(1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableGeneratorTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Range,The following statement contains a magic number: Observable.Range(1' 5).ToArray().Wait().IsCollection(1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableGeneratorTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Range,The following statement contains a magic number: Observable.Range(1' 5).ToArray().Wait().IsCollection(1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableGeneratorTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Range,The following statement contains a magic number: Observable.Range(1' 5).ToArray().Wait().IsCollection(1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableGeneratorTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Repeat,The following statement contains a magic number: var xs = Observable.Range(1' 3' Scheduler.CurrentThread)                  .Concat(Observable.Return(100))                  .Repeat()                  .Take(10)                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableGeneratorTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Repeat,The following statement contains a magic number: var xs = Observable.Range(1' 3' Scheduler.CurrentThread)                  .Concat(Observable.Return(100))                  .Repeat()                  .Take(10)                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableGeneratorTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Repeat,The following statement contains a magic number: var xs = Observable.Range(1' 3' Scheduler.CurrentThread)                  .Concat(Observable.Return(100))                  .Repeat()                  .Take(10)                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableGeneratorTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Repeat,The following statement contains a magic number: xs.IsCollection(1' 2' 3' 100' 1' 2' 3' 100' 1' 2);
Magic Number,RuntimeUnitTestToolkit,ObservableGeneratorTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Repeat,The following statement contains a magic number: xs.IsCollection(1' 2' 3' 100' 1' 2' 3' 100' 1' 2);
Magic Number,RuntimeUnitTestToolkit,ObservableGeneratorTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Repeat,The following statement contains a magic number: xs.IsCollection(1' 2' 3' 100' 1' 2' 3' 100' 1' 2);
Magic Number,RuntimeUnitTestToolkit,ObservableGeneratorTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Repeat,The following statement contains a magic number: xs.IsCollection(1' 2' 3' 100' 1' 2' 3' 100' 1' 2);
Magic Number,RuntimeUnitTestToolkit,ObservableGeneratorTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Repeat,The following statement contains a magic number: xs.IsCollection(1' 2' 3' 100' 1' 2' 3' 100' 1' 2);
Magic Number,RuntimeUnitTestToolkit,ObservableGeneratorTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Repeat,The following statement contains a magic number: xs.IsCollection(1' 2' 3' 100' 1' 2' 3' 100' 1' 2);
Magic Number,RuntimeUnitTestToolkit,ObservableGeneratorTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Repeat,The following statement contains a magic number: xs.IsCollection(1' 2' 3' 100' 1' 2' 3' 100' 1' 2);
Magic Number,RuntimeUnitTestToolkit,ObservableGeneratorTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Repeat,The following statement contains a magic number: Observable.Repeat(100).Take(5).ToArray().Wait().IsCollection(100' 100' 100' 100' 100);
Magic Number,RuntimeUnitTestToolkit,ObservableGeneratorTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Repeat,The following statement contains a magic number: Observable.Repeat(100).Take(5).ToArray().Wait().IsCollection(100' 100' 100' 100' 100);
Magic Number,RuntimeUnitTestToolkit,ObservableGeneratorTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Repeat,The following statement contains a magic number: Observable.Repeat(100).Take(5).ToArray().Wait().IsCollection(100' 100' 100' 100' 100);
Magic Number,RuntimeUnitTestToolkit,ObservableGeneratorTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Repeat,The following statement contains a magic number: Observable.Repeat(100).Take(5).ToArray().Wait().IsCollection(100' 100' 100' 100' 100);
Magic Number,RuntimeUnitTestToolkit,ObservableGeneratorTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Repeat,The following statement contains a magic number: Observable.Repeat(100).Take(5).ToArray().Wait().IsCollection(100' 100' 100' 100' 100);
Magic Number,RuntimeUnitTestToolkit,ObservableGeneratorTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Repeat,The following statement contains a magic number: Observable.Repeat(100).Take(5).ToArray().Wait().IsCollection(100' 100' 100' 100' 100);
Magic Number,RuntimeUnitTestToolkit,ObservableGeneratorTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Repeat,The following statement contains a magic number: Observable.Repeat(100).Take(5).ToArray().Wait().IsCollection(100' 100' 100' 100' 100);
Magic Number,RuntimeUnitTestToolkit,ObservableGeneratorTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Repeat2,The following statement contains a magic number: Observable.Repeat("a"' 5' Scheduler.Immediate).ToArrayWait().IsCollection("a"' "a"' "a"' "a"' "a");
Magic Number,RuntimeUnitTestToolkit,ObservableGeneratorTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,RepeatStatic,The following statement contains a magic number: var xss = Observable.Repeat(5' 3).ToArray().Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableGeneratorTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,RepeatStatic,The following statement contains a magic number: var xss = Observable.Repeat(5' 3).ToArray().Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableGeneratorTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,RepeatStatic,The following statement contains a magic number: xss.IsCollection(5' 5' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableGeneratorTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,RepeatStatic,The following statement contains a magic number: xss.IsCollection(5' 5' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableGeneratorTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,RepeatStatic,The following statement contains a magic number: xss.IsCollection(5' 5' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableGeneratorTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Return,The following statement contains a magic number: Observable.Return(100).Materialize().ToArray().Wait().IsCollection(Notification.CreateOnNext(100)' Notification.CreateOnCompleted<int>());
Magic Number,RuntimeUnitTestToolkit,ObservableGeneratorTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Return,The following statement contains a magic number: Observable.Return(100).Materialize().ToArray().Wait().IsCollection(Notification.CreateOnNext(100)' Notification.CreateOnCompleted<int>());
Magic Number,RuntimeUnitTestToolkit,ObservableGeneratorTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToObservable,The following statement contains a magic number: {                  var msgs = new List<string>();                  new[] { 1' 10' 100' 1000' 10000' 20000 }.ToObservable(Scheduler.CurrentThread)                      .Do(i => msgs.Add("DO:" + i))                      .Scan((x' y) =>                      {                          if (y == 100) throw new Exception("exception");                          msgs.Add("x:" + x + " y:" + y);                          return x + y;                      })                      .Subscribe(x => msgs.Add(x.ToString())' e => msgs.Add(e.Message)' () => msgs.Add("comp"));                  msgs.IsCollection("DO:1"' "1"' "DO:10"' "x:1 y:10"' "11"' "DO:100"' "exception");              }
Magic Number,RuntimeUnitTestToolkit,ObservableGeneratorTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToObservable,The following statement contains a magic number: {                  var msgs = new List<string>();                  new[] { 1' 10' 100' 1000' 10000' 20000 }.ToObservable(Scheduler.CurrentThread)                      .Do(i => msgs.Add("DO:" + i))                      .Scan((x' y) =>                      {                          if (y == 100) throw new Exception("exception");                          msgs.Add("x:" + x + " y:" + y);                          return x + y;                      })                      .Subscribe(x => msgs.Add(x.ToString())' e => msgs.Add(e.Message)' () => msgs.Add("comp"));                  msgs.IsCollection("DO:1"' "1"' "DO:10"' "x:1 y:10"' "11"' "DO:100"' "exception");              }
Magic Number,RuntimeUnitTestToolkit,ObservableGeneratorTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToObservable,The following statement contains a magic number: {                  var msgs = new List<string>();                  new[] { 1' 10' 100' 1000' 10000' 20000 }.ToObservable(Scheduler.CurrentThread)                      .Do(i => msgs.Add("DO:" + i))                      .Scan((x' y) =>                      {                          if (y == 100) throw new Exception("exception");                          msgs.Add("x:" + x + " y:" + y);                          return x + y;                      })                      .Subscribe(x => msgs.Add(x.ToString())' e => msgs.Add(e.Message)' () => msgs.Add("comp"));                  msgs.IsCollection("DO:1"' "1"' "DO:10"' "x:1 y:10"' "11"' "DO:100"' "exception");              }
Magic Number,RuntimeUnitTestToolkit,ObservableGeneratorTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToObservable,The following statement contains a magic number: {                  var msgs = new List<string>();                  new[] { 1' 10' 100' 1000' 10000' 20000 }.ToObservable(Scheduler.CurrentThread)                      .Do(i => msgs.Add("DO:" + i))                      .Scan((x' y) =>                      {                          if (y == 100) throw new Exception("exception");                          msgs.Add("x:" + x + " y:" + y);                          return x + y;                      })                      .Subscribe(x => msgs.Add(x.ToString())' e => msgs.Add(e.Message)' () => msgs.Add("comp"));                  msgs.IsCollection("DO:1"' "1"' "DO:10"' "x:1 y:10"' "11"' "DO:100"' "exception");              }
Magic Number,RuntimeUnitTestToolkit,ObservableGeneratorTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToObservable,The following statement contains a magic number: {                  var msgs = new List<string>();                  new[] { 1' 10' 100' 1000' 10000' 20000 }.ToObservable(Scheduler.CurrentThread)                      .Do(i => msgs.Add("DO:" + i))                      .Scan((x' y) =>                      {                          if (y == 100) throw new Exception("exception");                          msgs.Add("x:" + x + " y:" + y);                          return x + y;                      })                      .Subscribe(x => msgs.Add(x.ToString())' e => msgs.Add(e.Message)' () => msgs.Add("comp"));                  msgs.IsCollection("DO:1"' "1"' "DO:10"' "x:1 y:10"' "11"' "DO:100"' "exception");              }
Magic Number,RuntimeUnitTestToolkit,ObservableGeneratorTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToObservable,The following statement contains a magic number: {                  var msgs = new List<string>();                  new[] { 1' 10' 100' 1000' 10000' 20000 }.ToObservable(Scheduler.CurrentThread)                      .Do(i => msgs.Add("DO:" + i))                      .Scan((x' y) =>                      {                          if (y == 100) throw new Exception("exception");                          msgs.Add("x:" + x + " y:" + y);                          return x + y;                      })                      .Subscribe(x => msgs.Add(x.ToString())' e => msgs.Add(e.Message)' () => msgs.Add("comp"));                  msgs.IsCollection("DO:1"' "1"' "DO:10"' "x:1 y:10"' "11"' "DO:100"' "exception");              }
Magic Number,RuntimeUnitTestToolkit,ObservableGeneratorTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToObservable,The following statement contains a magic number: {                  var msgs = new List<string>();                  new[] { 1' 10' 100' 1000' 10000' 20000 }.ToObservable(Scheduler.Immediate)                      .Do(i => msgs.Add("DO:" + i))                      .Scan((x' y) =>                      {                          if (y == 100) throw new Exception("exception");                          msgs.Add("x:" + x + " y:" + y);                          return x + y;                      })                      .Subscribe(x => msgs.Add(x.ToString())' e => msgs.Add(e.Message)' () => msgs.Add("comp"));                  msgs.IsCollection("DO:1"' "1"' "DO:10"' "x:1 y:10"' "11"' "DO:100"' "exception"'                      "DO:1000"' "x:11 y:1000"'                      "DO:10000"' "x:1011 y:10000"'                      "DO:20000"' "x:11011 y:20000"                      );              }
Magic Number,RuntimeUnitTestToolkit,ObservableGeneratorTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToObservable,The following statement contains a magic number: {                  var msgs = new List<string>();                  new[] { 1' 10' 100' 1000' 10000' 20000 }.ToObservable(Scheduler.Immediate)                      .Do(i => msgs.Add("DO:" + i))                      .Scan((x' y) =>                      {                          if (y == 100) throw new Exception("exception");                          msgs.Add("x:" + x + " y:" + y);                          return x + y;                      })                      .Subscribe(x => msgs.Add(x.ToString())' e => msgs.Add(e.Message)' () => msgs.Add("comp"));                  msgs.IsCollection("DO:1"' "1"' "DO:10"' "x:1 y:10"' "11"' "DO:100"' "exception"'                      "DO:1000"' "x:11 y:1000"'                      "DO:10000"' "x:1011 y:10000"'                      "DO:20000"' "x:11011 y:20000"                      );              }
Magic Number,RuntimeUnitTestToolkit,ObservableGeneratorTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToObservable,The following statement contains a magic number: {                  var msgs = new List<string>();                  new[] { 1' 10' 100' 1000' 10000' 20000 }.ToObservable(Scheduler.Immediate)                      .Do(i => msgs.Add("DO:" + i))                      .Scan((x' y) =>                      {                          if (y == 100) throw new Exception("exception");                          msgs.Add("x:" + x + " y:" + y);                          return x + y;                      })                      .Subscribe(x => msgs.Add(x.ToString())' e => msgs.Add(e.Message)' () => msgs.Add("comp"));                  msgs.IsCollection("DO:1"' "1"' "DO:10"' "x:1 y:10"' "11"' "DO:100"' "exception"'                      "DO:1000"' "x:11 y:1000"'                      "DO:10000"' "x:1011 y:10000"'                      "DO:20000"' "x:11011 y:20000"                      );              }
Magic Number,RuntimeUnitTestToolkit,ObservableGeneratorTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToObservable,The following statement contains a magic number: {                  var msgs = new List<string>();                  new[] { 1' 10' 100' 1000' 10000' 20000 }.ToObservable(Scheduler.Immediate)                      .Do(i => msgs.Add("DO:" + i))                      .Scan((x' y) =>                      {                          if (y == 100) throw new Exception("exception");                          msgs.Add("x:" + x + " y:" + y);                          return x + y;                      })                      .Subscribe(x => msgs.Add(x.ToString())' e => msgs.Add(e.Message)' () => msgs.Add("comp"));                  msgs.IsCollection("DO:1"' "1"' "DO:10"' "x:1 y:10"' "11"' "DO:100"' "exception"'                      "DO:1000"' "x:11 y:1000"'                      "DO:10000"' "x:1011 y:10000"'                      "DO:20000"' "x:11011 y:20000"                      );              }
Magic Number,RuntimeUnitTestToolkit,ObservableGeneratorTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToObservable,The following statement contains a magic number: {                  var msgs = new List<string>();                  new[] { 1' 10' 100' 1000' 10000' 20000 }.ToObservable(Scheduler.Immediate)                      .Do(i => msgs.Add("DO:" + i))                      .Scan((x' y) =>                      {                          if (y == 100) throw new Exception("exception");                          msgs.Add("x:" + x + " y:" + y);                          return x + y;                      })                      .Subscribe(x => msgs.Add(x.ToString())' e => msgs.Add(e.Message)' () => msgs.Add("comp"));                  msgs.IsCollection("DO:1"' "1"' "DO:10"' "x:1 y:10"' "11"' "DO:100"' "exception"'                      "DO:1000"' "x:11 y:1000"'                      "DO:10000"' "x:1011 y:10000"'                      "DO:20000"' "x:11011 y:20000"                      );              }
Magic Number,RuntimeUnitTestToolkit,ObservableGeneratorTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToObservable,The following statement contains a magic number: {                  var msgs = new List<string>();                  new[] { 1' 10' 100' 1000' 10000' 20000 }.ToObservable(Scheduler.Immediate)                      .Do(i => msgs.Add("DO:" + i))                      .Scan((x' y) =>                      {                          if (y == 100) throw new Exception("exception");                          msgs.Add("x:" + x + " y:" + y);                          return x + y;                      })                      .Subscribe(x => msgs.Add(x.ToString())' e => msgs.Add(e.Message)' () => msgs.Add("comp"));                  msgs.IsCollection("DO:1"' "1"' "DO:10"' "x:1 y:10"' "11"' "DO:100"' "exception"'                      "DO:1000"' "x:11 y:1000"'                      "DO:10000"' "x:1011 y:10000"'                      "DO:20000"' "x:11011 y:20000"                      );              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Buffer,The following statement contains a magic number: var xs = Observable.Range(1' 10)                  .Buffer(3)                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Buffer,The following statement contains a magic number: var xs = Observable.Range(1' 10)                  .Buffer(3)                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Buffer,The following statement contains a magic number: xs[0].IsCollection(1' 2' 3);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Buffer,The following statement contains a magic number: xs[0].IsCollection(1' 2' 3);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Buffer,The following statement contains a magic number: xs[1].IsCollection(4' 5' 6);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Buffer,The following statement contains a magic number: xs[1].IsCollection(4' 5' 6);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Buffer,The following statement contains a magic number: xs[1].IsCollection(4' 5' 6);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Buffer,The following statement contains a magic number: xs[2].IsCollection(7' 8' 9);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Buffer,The following statement contains a magic number: xs[2].IsCollection(7' 8' 9);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Buffer,The following statement contains a magic number: xs[2].IsCollection(7' 8' 9);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Buffer,The following statement contains a magic number: xs[2].IsCollection(7' 8' 9);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Buffer,The following statement contains a magic number: xs[3].IsCollection(10);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Buffer,The following statement contains a magic number: xs[3].IsCollection(10);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Buffer3,The following statement contains a magic number: var xs = Observable.Empty<int>()                  .Buffer(1' 2)                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferComplete2,The following statement contains a magic number: var xs = Observable.Range(1' 2)                  .Buffer(2)                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferComplete2,The following statement contains a magic number: var xs = Observable.Range(1' 2)                  .Buffer(2)                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferComplete2,The following statement contains a magic number: xs[0].IsCollection(1' 2);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferEmpty,The following statement contains a magic number: var xs = Observable.Empty<int>()                  .Buffer(10)                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 10).Buffer(3' 1)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(2' 3' 4);                  xs[2].IsCollection(3' 4' 5);                  xs[3].IsCollection(4' 5' 6);                  xs[4].IsCollection(5' 6' 7);                  xs[5].IsCollection(6' 7' 8);                  xs[6].IsCollection(7' 8' 9);                  xs[7].IsCollection(8' 9' 10);                  xs[8].IsCollection(9' 10);                  xs[9].IsCollection(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 10).Buffer(3' 1)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(2' 3' 4);                  xs[2].IsCollection(3' 4' 5);                  xs[3].IsCollection(4' 5' 6);                  xs[4].IsCollection(5' 6' 7);                  xs[5].IsCollection(6' 7' 8);                  xs[6].IsCollection(7' 8' 9);                  xs[7].IsCollection(8' 9' 10);                  xs[8].IsCollection(9' 10);                  xs[9].IsCollection(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 10).Buffer(3' 1)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(2' 3' 4);                  xs[2].IsCollection(3' 4' 5);                  xs[3].IsCollection(4' 5' 6);                  xs[4].IsCollection(5' 6' 7);                  xs[5].IsCollection(6' 7' 8);                  xs[6].IsCollection(7' 8' 9);                  xs[7].IsCollection(8' 9' 10);                  xs[8].IsCollection(9' 10);                  xs[9].IsCollection(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 10).Buffer(3' 1)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(2' 3' 4);                  xs[2].IsCollection(3' 4' 5);                  xs[3].IsCollection(4' 5' 6);                  xs[4].IsCollection(5' 6' 7);                  xs[5].IsCollection(6' 7' 8);                  xs[6].IsCollection(7' 8' 9);                  xs[7].IsCollection(8' 9' 10);                  xs[8].IsCollection(9' 10);                  xs[9].IsCollection(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 10).Buffer(3' 1)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(2' 3' 4);                  xs[2].IsCollection(3' 4' 5);                  xs[3].IsCollection(4' 5' 6);                  xs[4].IsCollection(5' 6' 7);                  xs[5].IsCollection(6' 7' 8);                  xs[6].IsCollection(7' 8' 9);                  xs[7].IsCollection(8' 9' 10);                  xs[8].IsCollection(9' 10);                  xs[9].IsCollection(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 10).Buffer(3' 1)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(2' 3' 4);                  xs[2].IsCollection(3' 4' 5);                  xs[3].IsCollection(4' 5' 6);                  xs[4].IsCollection(5' 6' 7);                  xs[5].IsCollection(6' 7' 8);                  xs[6].IsCollection(7' 8' 9);                  xs[7].IsCollection(8' 9' 10);                  xs[8].IsCollection(9' 10);                  xs[9].IsCollection(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 10).Buffer(3' 1)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(2' 3' 4);                  xs[2].IsCollection(3' 4' 5);                  xs[3].IsCollection(4' 5' 6);                  xs[4].IsCollection(5' 6' 7);                  xs[5].IsCollection(6' 7' 8);                  xs[6].IsCollection(7' 8' 9);                  xs[7].IsCollection(8' 9' 10);                  xs[8].IsCollection(9' 10);                  xs[9].IsCollection(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 10).Buffer(3' 1)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(2' 3' 4);                  xs[2].IsCollection(3' 4' 5);                  xs[3].IsCollection(4' 5' 6);                  xs[4].IsCollection(5' 6' 7);                  xs[5].IsCollection(6' 7' 8);                  xs[6].IsCollection(7' 8' 9);                  xs[7].IsCollection(8' 9' 10);                  xs[8].IsCollection(9' 10);                  xs[9].IsCollection(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 10).Buffer(3' 1)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(2' 3' 4);                  xs[2].IsCollection(3' 4' 5);                  xs[3].IsCollection(4' 5' 6);                  xs[4].IsCollection(5' 6' 7);                  xs[5].IsCollection(6' 7' 8);                  xs[6].IsCollection(7' 8' 9);                  xs[7].IsCollection(8' 9' 10);                  xs[8].IsCollection(9' 10);                  xs[9].IsCollection(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 10).Buffer(3' 1)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(2' 3' 4);                  xs[2].IsCollection(3' 4' 5);                  xs[3].IsCollection(4' 5' 6);                  xs[4].IsCollection(5' 6' 7);                  xs[5].IsCollection(6' 7' 8);                  xs[6].IsCollection(7' 8' 9);                  xs[7].IsCollection(8' 9' 10);                  xs[8].IsCollection(9' 10);                  xs[9].IsCollection(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 10).Buffer(3' 1)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(2' 3' 4);                  xs[2].IsCollection(3' 4' 5);                  xs[3].IsCollection(4' 5' 6);                  xs[4].IsCollection(5' 6' 7);                  xs[5].IsCollection(6' 7' 8);                  xs[6].IsCollection(7' 8' 9);                  xs[7].IsCollection(8' 9' 10);                  xs[8].IsCollection(9' 10);                  xs[9].IsCollection(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 10).Buffer(3' 1)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(2' 3' 4);                  xs[2].IsCollection(3' 4' 5);                  xs[3].IsCollection(4' 5' 6);                  xs[4].IsCollection(5' 6' 7);                  xs[5].IsCollection(6' 7' 8);                  xs[6].IsCollection(7' 8' 9);                  xs[7].IsCollection(8' 9' 10);                  xs[8].IsCollection(9' 10);                  xs[9].IsCollection(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 10).Buffer(3' 1)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(2' 3' 4);                  xs[2].IsCollection(3' 4' 5);                  xs[3].IsCollection(4' 5' 6);                  xs[4].IsCollection(5' 6' 7);                  xs[5].IsCollection(6' 7' 8);                  xs[6].IsCollection(7' 8' 9);                  xs[7].IsCollection(8' 9' 10);                  xs[8].IsCollection(9' 10);                  xs[9].IsCollection(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 10).Buffer(3' 1)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(2' 3' 4);                  xs[2].IsCollection(3' 4' 5);                  xs[3].IsCollection(4' 5' 6);                  xs[4].IsCollection(5' 6' 7);                  xs[5].IsCollection(6' 7' 8);                  xs[6].IsCollection(7' 8' 9);                  xs[7].IsCollection(8' 9' 10);                  xs[8].IsCollection(9' 10);                  xs[9].IsCollection(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 10).Buffer(3' 1)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(2' 3' 4);                  xs[2].IsCollection(3' 4' 5);                  xs[3].IsCollection(4' 5' 6);                  xs[4].IsCollection(5' 6' 7);                  xs[5].IsCollection(6' 7' 8);                  xs[6].IsCollection(7' 8' 9);                  xs[7].IsCollection(8' 9' 10);                  xs[8].IsCollection(9' 10);                  xs[9].IsCollection(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 10).Buffer(3' 1)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(2' 3' 4);                  xs[2].IsCollection(3' 4' 5);                  xs[3].IsCollection(4' 5' 6);                  xs[4].IsCollection(5' 6' 7);                  xs[5].IsCollection(6' 7' 8);                  xs[6].IsCollection(7' 8' 9);                  xs[7].IsCollection(8' 9' 10);                  xs[8].IsCollection(9' 10);                  xs[9].IsCollection(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 10).Buffer(3' 1)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(2' 3' 4);                  xs[2].IsCollection(3' 4' 5);                  xs[3].IsCollection(4' 5' 6);                  xs[4].IsCollection(5' 6' 7);                  xs[5].IsCollection(6' 7' 8);                  xs[6].IsCollection(7' 8' 9);                  xs[7].IsCollection(8' 9' 10);                  xs[8].IsCollection(9' 10);                  xs[9].IsCollection(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 10).Buffer(3' 1)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(2' 3' 4);                  xs[2].IsCollection(3' 4' 5);                  xs[3].IsCollection(4' 5' 6);                  xs[4].IsCollection(5' 6' 7);                  xs[5].IsCollection(6' 7' 8);                  xs[6].IsCollection(7' 8' 9);                  xs[7].IsCollection(8' 9' 10);                  xs[8].IsCollection(9' 10);                  xs[9].IsCollection(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 10).Buffer(3' 1)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(2' 3' 4);                  xs[2].IsCollection(3' 4' 5);                  xs[3].IsCollection(4' 5' 6);                  xs[4].IsCollection(5' 6' 7);                  xs[5].IsCollection(6' 7' 8);                  xs[6].IsCollection(7' 8' 9);                  xs[7].IsCollection(8' 9' 10);                  xs[8].IsCollection(9' 10);                  xs[9].IsCollection(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 10).Buffer(3' 1)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(2' 3' 4);                  xs[2].IsCollection(3' 4' 5);                  xs[3].IsCollection(4' 5' 6);                  xs[4].IsCollection(5' 6' 7);                  xs[5].IsCollection(6' 7' 8);                  xs[6].IsCollection(7' 8' 9);                  xs[7].IsCollection(8' 9' 10);                  xs[8].IsCollection(9' 10);                  xs[9].IsCollection(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 10).Buffer(3' 1)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(2' 3' 4);                  xs[2].IsCollection(3' 4' 5);                  xs[3].IsCollection(4' 5' 6);                  xs[4].IsCollection(5' 6' 7);                  xs[5].IsCollection(6' 7' 8);                  xs[6].IsCollection(7' 8' 9);                  xs[7].IsCollection(8' 9' 10);                  xs[8].IsCollection(9' 10);                  xs[9].IsCollection(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 10).Buffer(3' 1)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(2' 3' 4);                  xs[2].IsCollection(3' 4' 5);                  xs[3].IsCollection(4' 5' 6);                  xs[4].IsCollection(5' 6' 7);                  xs[5].IsCollection(6' 7' 8);                  xs[6].IsCollection(7' 8' 9);                  xs[7].IsCollection(8' 9' 10);                  xs[8].IsCollection(9' 10);                  xs[9].IsCollection(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 10).Buffer(3' 1)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(2' 3' 4);                  xs[2].IsCollection(3' 4' 5);                  xs[3].IsCollection(4' 5' 6);                  xs[4].IsCollection(5' 6' 7);                  xs[5].IsCollection(6' 7' 8);                  xs[6].IsCollection(7' 8' 9);                  xs[7].IsCollection(8' 9' 10);                  xs[8].IsCollection(9' 10);                  xs[9].IsCollection(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 10).Buffer(3' 1)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(2' 3' 4);                  xs[2].IsCollection(3' 4' 5);                  xs[3].IsCollection(4' 5' 6);                  xs[4].IsCollection(5' 6' 7);                  xs[5].IsCollection(6' 7' 8);                  xs[6].IsCollection(7' 8' 9);                  xs[7].IsCollection(8' 9' 10);                  xs[8].IsCollection(9' 10);                  xs[9].IsCollection(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 10).Buffer(3' 1)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(2' 3' 4);                  xs[2].IsCollection(3' 4' 5);                  xs[3].IsCollection(4' 5' 6);                  xs[4].IsCollection(5' 6' 7);                  xs[5].IsCollection(6' 7' 8);                  xs[6].IsCollection(7' 8' 9);                  xs[7].IsCollection(8' 9' 10);                  xs[8].IsCollection(9' 10);                  xs[9].IsCollection(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 10).Buffer(3' 1)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(2' 3' 4);                  xs[2].IsCollection(3' 4' 5);                  xs[3].IsCollection(4' 5' 6);                  xs[4].IsCollection(5' 6' 7);                  xs[5].IsCollection(6' 7' 8);                  xs[6].IsCollection(7' 8' 9);                  xs[7].IsCollection(8' 9' 10);                  xs[8].IsCollection(9' 10);                  xs[9].IsCollection(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 10).Buffer(3' 1)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(2' 3' 4);                  xs[2].IsCollection(3' 4' 5);                  xs[3].IsCollection(4' 5' 6);                  xs[4].IsCollection(5' 6' 7);                  xs[5].IsCollection(6' 7' 8);                  xs[6].IsCollection(7' 8' 9);                  xs[7].IsCollection(8' 9' 10);                  xs[8].IsCollection(9' 10);                  xs[9].IsCollection(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 10).Buffer(3' 1)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(2' 3' 4);                  xs[2].IsCollection(3' 4' 5);                  xs[3].IsCollection(4' 5' 6);                  xs[4].IsCollection(5' 6' 7);                  xs[5].IsCollection(6' 7' 8);                  xs[6].IsCollection(7' 8' 9);                  xs[7].IsCollection(8' 9' 10);                  xs[8].IsCollection(9' 10);                  xs[9].IsCollection(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 10).Buffer(3' 1)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(2' 3' 4);                  xs[2].IsCollection(3' 4' 5);                  xs[3].IsCollection(4' 5' 6);                  xs[4].IsCollection(5' 6' 7);                  xs[5].IsCollection(6' 7' 8);                  xs[6].IsCollection(7' 8' 9);                  xs[7].IsCollection(8' 9' 10);                  xs[8].IsCollection(9' 10);                  xs[9].IsCollection(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 10).Buffer(3' 1)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(2' 3' 4);                  xs[2].IsCollection(3' 4' 5);                  xs[3].IsCollection(4' 5' 6);                  xs[4].IsCollection(5' 6' 7);                  xs[5].IsCollection(6' 7' 8);                  xs[6].IsCollection(7' 8' 9);                  xs[7].IsCollection(8' 9' 10);                  xs[8].IsCollection(9' 10);                  xs[9].IsCollection(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 10).Buffer(3' 1)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(2' 3' 4);                  xs[2].IsCollection(3' 4' 5);                  xs[3].IsCollection(4' 5' 6);                  xs[4].IsCollection(5' 6' 7);                  xs[5].IsCollection(6' 7' 8);                  xs[6].IsCollection(7' 8' 9);                  xs[7].IsCollection(8' 9' 10);                  xs[8].IsCollection(9' 10);                  xs[9].IsCollection(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 10).Buffer(3' 1)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(2' 3' 4);                  xs[2].IsCollection(3' 4' 5);                  xs[3].IsCollection(4' 5' 6);                  xs[4].IsCollection(5' 6' 7);                  xs[5].IsCollection(6' 7' 8);                  xs[6].IsCollection(7' 8' 9);                  xs[7].IsCollection(8' 9' 10);                  xs[8].IsCollection(9' 10);                  xs[9].IsCollection(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 10).Buffer(3' 1)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(2' 3' 4);                  xs[2].IsCollection(3' 4' 5);                  xs[3].IsCollection(4' 5' 6);                  xs[4].IsCollection(5' 6' 7);                  xs[5].IsCollection(6' 7' 8);                  xs[6].IsCollection(7' 8' 9);                  xs[7].IsCollection(8' 9' 10);                  xs[8].IsCollection(9' 10);                  xs[9].IsCollection(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 10).Buffer(3' 1)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(2' 3' 4);                  xs[2].IsCollection(3' 4' 5);                  xs[3].IsCollection(4' 5' 6);                  xs[4].IsCollection(5' 6' 7);                  xs[5].IsCollection(6' 7' 8);                  xs[6].IsCollection(7' 8' 9);                  xs[7].IsCollection(8' 9' 10);                  xs[8].IsCollection(9' 10);                  xs[9].IsCollection(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 10).Buffer(3' 1)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(2' 3' 4);                  xs[2].IsCollection(3' 4' 5);                  xs[3].IsCollection(4' 5' 6);                  xs[4].IsCollection(5' 6' 7);                  xs[5].IsCollection(6' 7' 8);                  xs[6].IsCollection(7' 8' 9);                  xs[7].IsCollection(8' 9' 10);                  xs[8].IsCollection(9' 10);                  xs[9].IsCollection(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 10).Buffer(3' 1)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(2' 3' 4);                  xs[2].IsCollection(3' 4' 5);                  xs[3].IsCollection(4' 5' 6);                  xs[4].IsCollection(5' 6' 7);                  xs[5].IsCollection(6' 7' 8);                  xs[6].IsCollection(7' 8' 9);                  xs[7].IsCollection(8' 9' 10);                  xs[8].IsCollection(9' 10);                  xs[9].IsCollection(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 10).Buffer(3' 3)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(4' 5' 6);                  xs[2].IsCollection(7' 8' 9);                  xs[3].IsCollection(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 10).Buffer(3' 3)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(4' 5' 6);                  xs[2].IsCollection(7' 8' 9);                  xs[3].IsCollection(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 10).Buffer(3' 3)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(4' 5' 6);                  xs[2].IsCollection(7' 8' 9);                  xs[3].IsCollection(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 10).Buffer(3' 3)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(4' 5' 6);                  xs[2].IsCollection(7' 8' 9);                  xs[3].IsCollection(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 10).Buffer(3' 3)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(4' 5' 6);                  xs[2].IsCollection(7' 8' 9);                  xs[3].IsCollection(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 10).Buffer(3' 3)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(4' 5' 6);                  xs[2].IsCollection(7' 8' 9);                  xs[3].IsCollection(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 10).Buffer(3' 3)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(4' 5' 6);                  xs[2].IsCollection(7' 8' 9);                  xs[3].IsCollection(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 10).Buffer(3' 3)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(4' 5' 6);                  xs[2].IsCollection(7' 8' 9);                  xs[3].IsCollection(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 10).Buffer(3' 3)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(4' 5' 6);                  xs[2].IsCollection(7' 8' 9);                  xs[3].IsCollection(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 10).Buffer(3' 3)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(4' 5' 6);                  xs[2].IsCollection(7' 8' 9);                  xs[3].IsCollection(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 10).Buffer(3' 3)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(4' 5' 6);                  xs[2].IsCollection(7' 8' 9);                  xs[3].IsCollection(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 10).Buffer(3' 3)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(4' 5' 6);                  xs[2].IsCollection(7' 8' 9);                  xs[3].IsCollection(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 10).Buffer(3' 3)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(4' 5' 6);                  xs[2].IsCollection(7' 8' 9);                  xs[3].IsCollection(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 10).Buffer(3' 3)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(4' 5' 6);                  xs[2].IsCollection(7' 8' 9);                  xs[3].IsCollection(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 20).Buffer(3' 5)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(6' 7' 8);                  xs[2].IsCollection(11' 12' 13);                  xs[3].IsCollection(16' 17' 18);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 20).Buffer(3' 5)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(6' 7' 8);                  xs[2].IsCollection(11' 12' 13);                  xs[3].IsCollection(16' 17' 18);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 20).Buffer(3' 5)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(6' 7' 8);                  xs[2].IsCollection(11' 12' 13);                  xs[3].IsCollection(16' 17' 18);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 20).Buffer(3' 5)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(6' 7' 8);                  xs[2].IsCollection(11' 12' 13);                  xs[3].IsCollection(16' 17' 18);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 20).Buffer(3' 5)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(6' 7' 8);                  xs[2].IsCollection(11' 12' 13);                  xs[3].IsCollection(16' 17' 18);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 20).Buffer(3' 5)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(6' 7' 8);                  xs[2].IsCollection(11' 12' 13);                  xs[3].IsCollection(16' 17' 18);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 20).Buffer(3' 5)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(6' 7' 8);                  xs[2].IsCollection(11' 12' 13);                  xs[3].IsCollection(16' 17' 18);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 20).Buffer(3' 5)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(6' 7' 8);                  xs[2].IsCollection(11' 12' 13);                  xs[3].IsCollection(16' 17' 18);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 20).Buffer(3' 5)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(6' 7' 8);                  xs[2].IsCollection(11' 12' 13);                  xs[3].IsCollection(16' 17' 18);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 20).Buffer(3' 5)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(6' 7' 8);                  xs[2].IsCollection(11' 12' 13);                  xs[3].IsCollection(16' 17' 18);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 20).Buffer(3' 5)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(6' 7' 8);                  xs[2].IsCollection(11' 12' 13);                  xs[3].IsCollection(16' 17' 18);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 20).Buffer(3' 5)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(6' 7' 8);                  xs[2].IsCollection(11' 12' 13);                  xs[3].IsCollection(16' 17' 18);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 20).Buffer(3' 5)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(6' 7' 8);                  xs[2].IsCollection(11' 12' 13);                  xs[3].IsCollection(16' 17' 18);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 20).Buffer(3' 5)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(6' 7' 8);                  xs[2].IsCollection(11' 12' 13);                  xs[3].IsCollection(16' 17' 18);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 20).Buffer(3' 5)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(6' 7' 8);                  xs[2].IsCollection(11' 12' 13);                  xs[3].IsCollection(16' 17' 18);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferSkip,The following statement contains a magic number: {                  var xs = Observable.Range(1' 20).Buffer(3' 5)                      .ToArray()                      .Wait();                  xs[0].IsCollection(1' 2' 3);                  xs[1].IsCollection(6' 7' 8);                  xs[2].IsCollection(11' 12' 13);                  xs[3].IsCollection(16' 17' 18);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTime,The following statement contains a magic number: var hoge = Observable.Return(1000).Delay(TimeSpan.FromSeconds(4));
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTime,The following statement contains a magic number: var hoge = Observable.Return(1000).Delay(TimeSpan.FromSeconds(4));
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTime,The following statement contains a magic number: var xs = Observable.Range(1' 10)                  .Concat(hoge)                  .Buffer(TimeSpan.FromSeconds(3))                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTime,The following statement contains a magic number: var xs = Observable.Range(1' 10)                  .Concat(hoge)                  .Buffer(TimeSpan.FromSeconds(3))                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTime,The following statement contains a magic number: xs[0].IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTime,The following statement contains a magic number: xs[0].IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTime,The following statement contains a magic number: xs[0].IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTime,The following statement contains a magic number: xs[0].IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTime,The following statement contains a magic number: xs[0].IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTime,The following statement contains a magic number: xs[0].IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTime,The following statement contains a magic number: xs[0].IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTime,The following statement contains a magic number: xs[0].IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTime,The following statement contains a magic number: xs[0].IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTime,The following statement contains a magic number: xs[1].IsCollection(1000);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeAndCount,The following statement contains a magic number: {                  var xs = Observable.Return(1000)                      .Concat(Observable.Return(99).Delay(TimeSpan.FromMilliseconds(1500)))                      .Concat(Observable.Range(1' 7))                      .Buffer(TimeSpan.FromSeconds(1)' 5)                      .ToArray()                      .Wait();                  xs.Length.Is(3);                  xs[0].IsCollection(1000); // 1sec                  xs[1].IsCollection(99' 1' 2' 3' 4); // 1.5sec -> buffer                  xs[2].IsCollection(5' 6' 7); // next 1sec              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeAndCount,The following statement contains a magic number: {                  var xs = Observable.Return(1000)                      .Concat(Observable.Return(99).Delay(TimeSpan.FromMilliseconds(1500)))                      .Concat(Observable.Range(1' 7))                      .Buffer(TimeSpan.FromSeconds(1)' 5)                      .ToArray()                      .Wait();                  xs.Length.Is(3);                  xs[0].IsCollection(1000); // 1sec                  xs[1].IsCollection(99' 1' 2' 3' 4); // 1.5sec -> buffer                  xs[2].IsCollection(5' 6' 7); // next 1sec              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeAndCount,The following statement contains a magic number: {                  var xs = Observable.Return(1000)                      .Concat(Observable.Return(99).Delay(TimeSpan.FromMilliseconds(1500)))                      .Concat(Observable.Range(1' 7))                      .Buffer(TimeSpan.FromSeconds(1)' 5)                      .ToArray()                      .Wait();                  xs.Length.Is(3);                  xs[0].IsCollection(1000); // 1sec                  xs[1].IsCollection(99' 1' 2' 3' 4); // 1.5sec -> buffer                  xs[2].IsCollection(5' 6' 7); // next 1sec              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeAndCount,The following statement contains a magic number: {                  var xs = Observable.Return(1000)                      .Concat(Observable.Return(99).Delay(TimeSpan.FromMilliseconds(1500)))                      .Concat(Observable.Range(1' 7))                      .Buffer(TimeSpan.FromSeconds(1)' 5)                      .ToArray()                      .Wait();                  xs.Length.Is(3);                  xs[0].IsCollection(1000); // 1sec                  xs[1].IsCollection(99' 1' 2' 3' 4); // 1.5sec -> buffer                  xs[2].IsCollection(5' 6' 7); // next 1sec              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeAndCount,The following statement contains a magic number: {                  var xs = Observable.Return(1000)                      .Concat(Observable.Return(99).Delay(TimeSpan.FromMilliseconds(1500)))                      .Concat(Observable.Range(1' 7))                      .Buffer(TimeSpan.FromSeconds(1)' 5)                      .ToArray()                      .Wait();                  xs.Length.Is(3);                  xs[0].IsCollection(1000); // 1sec                  xs[1].IsCollection(99' 1' 2' 3' 4); // 1.5sec -> buffer                  xs[2].IsCollection(5' 6' 7); // next 1sec              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeAndCount,The following statement contains a magic number: {                  var xs = Observable.Return(1000)                      .Concat(Observable.Return(99).Delay(TimeSpan.FromMilliseconds(1500)))                      .Concat(Observable.Range(1' 7))                      .Buffer(TimeSpan.FromSeconds(1)' 5)                      .ToArray()                      .Wait();                  xs.Length.Is(3);                  xs[0].IsCollection(1000); // 1sec                  xs[1].IsCollection(99' 1' 2' 3' 4); // 1.5sec -> buffer                  xs[2].IsCollection(5' 6' 7); // next 1sec              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeAndCount,The following statement contains a magic number: {                  var xs = Observable.Return(1000)                      .Concat(Observable.Return(99).Delay(TimeSpan.FromMilliseconds(1500)))                      .Concat(Observable.Range(1' 7))                      .Buffer(TimeSpan.FromSeconds(1)' 5)                      .ToArray()                      .Wait();                  xs.Length.Is(3);                  xs[0].IsCollection(1000); // 1sec                  xs[1].IsCollection(99' 1' 2' 3' 4); // 1.5sec -> buffer                  xs[2].IsCollection(5' 6' 7); // next 1sec              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeAndCount,The following statement contains a magic number: {                  var xs = Observable.Return(1000)                      .Concat(Observable.Return(99).Delay(TimeSpan.FromMilliseconds(1500)))                      .Concat(Observable.Range(1' 7))                      .Buffer(TimeSpan.FromSeconds(1)' 5)                      .ToArray()                      .Wait();                  xs.Length.Is(3);                  xs[0].IsCollection(1000); // 1sec                  xs[1].IsCollection(99' 1' 2' 3' 4); // 1.5sec -> buffer                  xs[2].IsCollection(5' 6' 7); // next 1sec              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeAndCount,The following statement contains a magic number: {                  var xs = Observable.Return(1000)                      .Concat(Observable.Return(99).Delay(TimeSpan.FromMilliseconds(1500)))                      .Concat(Observable.Range(1' 7))                      .Buffer(TimeSpan.FromSeconds(1)' 5)                      .ToArray()                      .Wait();                  xs.Length.Is(3);                  xs[0].IsCollection(1000); // 1sec                  xs[1].IsCollection(99' 1' 2' 3' 4); // 1.5sec -> buffer                  xs[2].IsCollection(5' 6' 7); // next 1sec              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeAndCount,The following statement contains a magic number: {                  var xs = Observable.Return(1000)                      .Concat(Observable.Return(99).Delay(TimeSpan.FromMilliseconds(1500)))                      .Concat(Observable.Range(1' 7))                      .Buffer(TimeSpan.FromSeconds(1)' 5)                      .ToArray()                      .Wait();                  xs.Length.Is(3);                  xs[0].IsCollection(1000); // 1sec                  xs[1].IsCollection(99' 1' 2' 3' 4); // 1.5sec -> buffer                  xs[2].IsCollection(5' 6' 7); // next 1sec              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeAndCount,The following statement contains a magic number: {                  var xs = Observable.Return(1000)                      .Concat(Observable.Return(99).Delay(TimeSpan.FromMilliseconds(1500)))                      .Concat(Observable.Range(1' 7))                      .Buffer(TimeSpan.FromSeconds(1)' 5)                      .ToArray()                      .Wait();                  xs.Length.Is(3);                  xs[0].IsCollection(1000); // 1sec                  xs[1].IsCollection(99' 1' 2' 3' 4); // 1.5sec -> buffer                  xs[2].IsCollection(5' 6' 7); // next 1sec              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeAndCount,The following statement contains a magic number: {                  var xs = Observable.Return(1000)                      .Concat(Observable.Return(99).Delay(TimeSpan.FromMilliseconds(1500)))                      .Concat(Observable.Range(1' 7))                      .Buffer(TimeSpan.FromSeconds(1)' 5)                      .ToArray()                      .Wait();                  xs.Length.Is(3);                  xs[0].IsCollection(1000); // 1sec                  xs[1].IsCollection(99' 1' 2' 3' 4); // 1.5sec -> buffer                  xs[2].IsCollection(5' 6' 7); // next 1sec              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeAndCount,The following statement contains a magic number: {                  var xs = Observable.Return(1000)                      .Concat(Observable.Return(99).Delay(TimeSpan.FromMilliseconds(1500)))                      .Concat(Observable.Range(1' 7))                      .Buffer(TimeSpan.FromSeconds(1)' 5)                      .ToArray()                      .Wait();                  xs.Length.Is(3);                  xs[0].IsCollection(1000); // 1sec                  xs[1].IsCollection(99' 1' 2' 3' 4); // 1.5sec -> buffer                  xs[2].IsCollection(5' 6' 7); // next 1sec              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeAndCount,The following statement contains a magic number: {                  var xs = Observable.Return(1000)                      .Concat(Observable.Return(99).Delay(TimeSpan.FromMilliseconds(1500)))                      .Concat(Observable.Range(1' 7))                      .Buffer(TimeSpan.FromSeconds(1)' 5)                      .ToArray()                      .Wait();                  xs.Length.Is(3);                  xs[0].IsCollection(1000); // 1sec                  xs[1].IsCollection(99' 1' 2' 3' 4); // 1.5sec -> buffer                  xs[2].IsCollection(5' 6' 7); // next 1sec              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeAndCount,The following statement contains a magic number: {                  var xs = Observable.Return(1000)                      .Concat(Observable.Return(99).Delay(TimeSpan.FromMilliseconds(1500)))                      .Concat(Observable.Range(1' 7))                      .Buffer(TimeSpan.FromSeconds(1)' 5)                      .ToArray()                      .Wait();                  xs.Length.Is(3);                  xs[0].IsCollection(1000); // 1sec                  xs[1].IsCollection(99' 1' 2' 3' 4); // 1.5sec -> buffer                  xs[2].IsCollection(5' 6' 7); // next 1sec              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeAndCount,The following statement contains a magic number: {                  var xs = Observable.Return(1000)                      .Concat(Observable.Return(99).Delay(TimeSpan.FromMilliseconds(1500)))                      .Concat(Observable.Range(1' 7))                      .Concat(Observable.Never<int>())                      .Buffer(TimeSpan.FromSeconds(1)' 5)                      .Take(3)                      .ToArray()                      .Wait();                  xs.Length.Is(3);                  xs[0].IsCollection(1000); // 1sec                  xs[1].IsCollection(99' 1' 2' 3' 4); // 1.5sec -> buffer                  xs[2].IsCollection(5' 6' 7); // next 1sec              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeAndCount,The following statement contains a magic number: {                  var xs = Observable.Return(1000)                      .Concat(Observable.Return(99).Delay(TimeSpan.FromMilliseconds(1500)))                      .Concat(Observable.Range(1' 7))                      .Concat(Observable.Never<int>())                      .Buffer(TimeSpan.FromSeconds(1)' 5)                      .Take(3)                      .ToArray()                      .Wait();                  xs.Length.Is(3);                  xs[0].IsCollection(1000); // 1sec                  xs[1].IsCollection(99' 1' 2' 3' 4); // 1.5sec -> buffer                  xs[2].IsCollection(5' 6' 7); // next 1sec              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeAndCount,The following statement contains a magic number: {                  var xs = Observable.Return(1000)                      .Concat(Observable.Return(99).Delay(TimeSpan.FromMilliseconds(1500)))                      .Concat(Observable.Range(1' 7))                      .Concat(Observable.Never<int>())                      .Buffer(TimeSpan.FromSeconds(1)' 5)                      .Take(3)                      .ToArray()                      .Wait();                  xs.Length.Is(3);                  xs[0].IsCollection(1000); // 1sec                  xs[1].IsCollection(99' 1' 2' 3' 4); // 1.5sec -> buffer                  xs[2].IsCollection(5' 6' 7); // next 1sec              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeAndCount,The following statement contains a magic number: {                  var xs = Observable.Return(1000)                      .Concat(Observable.Return(99).Delay(TimeSpan.FromMilliseconds(1500)))                      .Concat(Observable.Range(1' 7))                      .Concat(Observable.Never<int>())                      .Buffer(TimeSpan.FromSeconds(1)' 5)                      .Take(3)                      .ToArray()                      .Wait();                  xs.Length.Is(3);                  xs[0].IsCollection(1000); // 1sec                  xs[1].IsCollection(99' 1' 2' 3' 4); // 1.5sec -> buffer                  xs[2].IsCollection(5' 6' 7); // next 1sec              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeAndCount,The following statement contains a magic number: {                  var xs = Observable.Return(1000)                      .Concat(Observable.Return(99).Delay(TimeSpan.FromMilliseconds(1500)))                      .Concat(Observable.Range(1' 7))                      .Concat(Observable.Never<int>())                      .Buffer(TimeSpan.FromSeconds(1)' 5)                      .Take(3)                      .ToArray()                      .Wait();                  xs.Length.Is(3);                  xs[0].IsCollection(1000); // 1sec                  xs[1].IsCollection(99' 1' 2' 3' 4); // 1.5sec -> buffer                  xs[2].IsCollection(5' 6' 7); // next 1sec              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeAndCount,The following statement contains a magic number: {                  var xs = Observable.Return(1000)                      .Concat(Observable.Return(99).Delay(TimeSpan.FromMilliseconds(1500)))                      .Concat(Observable.Range(1' 7))                      .Concat(Observable.Never<int>())                      .Buffer(TimeSpan.FromSeconds(1)' 5)                      .Take(3)                      .ToArray()                      .Wait();                  xs.Length.Is(3);                  xs[0].IsCollection(1000); // 1sec                  xs[1].IsCollection(99' 1' 2' 3' 4); // 1.5sec -> buffer                  xs[2].IsCollection(5' 6' 7); // next 1sec              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeAndCount,The following statement contains a magic number: {                  var xs = Observable.Return(1000)                      .Concat(Observable.Return(99).Delay(TimeSpan.FromMilliseconds(1500)))                      .Concat(Observable.Range(1' 7))                      .Concat(Observable.Never<int>())                      .Buffer(TimeSpan.FromSeconds(1)' 5)                      .Take(3)                      .ToArray()                      .Wait();                  xs.Length.Is(3);                  xs[0].IsCollection(1000); // 1sec                  xs[1].IsCollection(99' 1' 2' 3' 4); // 1.5sec -> buffer                  xs[2].IsCollection(5' 6' 7); // next 1sec              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeAndCount,The following statement contains a magic number: {                  var xs = Observable.Return(1000)                      .Concat(Observable.Return(99).Delay(TimeSpan.FromMilliseconds(1500)))                      .Concat(Observable.Range(1' 7))                      .Concat(Observable.Never<int>())                      .Buffer(TimeSpan.FromSeconds(1)' 5)                      .Take(3)                      .ToArray()                      .Wait();                  xs.Length.Is(3);                  xs[0].IsCollection(1000); // 1sec                  xs[1].IsCollection(99' 1' 2' 3' 4); // 1.5sec -> buffer                  xs[2].IsCollection(5' 6' 7); // next 1sec              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeAndCount,The following statement contains a magic number: {                  var xs = Observable.Return(1000)                      .Concat(Observable.Return(99).Delay(TimeSpan.FromMilliseconds(1500)))                      .Concat(Observable.Range(1' 7))                      .Concat(Observable.Never<int>())                      .Buffer(TimeSpan.FromSeconds(1)' 5)                      .Take(3)                      .ToArray()                      .Wait();                  xs.Length.Is(3);                  xs[0].IsCollection(1000); // 1sec                  xs[1].IsCollection(99' 1' 2' 3' 4); // 1.5sec -> buffer                  xs[2].IsCollection(5' 6' 7); // next 1sec              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeAndCount,The following statement contains a magic number: {                  var xs = Observable.Return(1000)                      .Concat(Observable.Return(99).Delay(TimeSpan.FromMilliseconds(1500)))                      .Concat(Observable.Range(1' 7))                      .Concat(Observable.Never<int>())                      .Buffer(TimeSpan.FromSeconds(1)' 5)                      .Take(3)                      .ToArray()                      .Wait();                  xs.Length.Is(3);                  xs[0].IsCollection(1000); // 1sec                  xs[1].IsCollection(99' 1' 2' 3' 4); // 1.5sec -> buffer                  xs[2].IsCollection(5' 6' 7); // next 1sec              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeAndCount,The following statement contains a magic number: {                  var xs = Observable.Return(1000)                      .Concat(Observable.Return(99).Delay(TimeSpan.FromMilliseconds(1500)))                      .Concat(Observable.Range(1' 7))                      .Concat(Observable.Never<int>())                      .Buffer(TimeSpan.FromSeconds(1)' 5)                      .Take(3)                      .ToArray()                      .Wait();                  xs.Length.Is(3);                  xs[0].IsCollection(1000); // 1sec                  xs[1].IsCollection(99' 1' 2' 3' 4); // 1.5sec -> buffer                  xs[2].IsCollection(5' 6' 7); // next 1sec              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeAndCount,The following statement contains a magic number: {                  var xs = Observable.Return(1000)                      .Concat(Observable.Return(99).Delay(TimeSpan.FromMilliseconds(1500)))                      .Concat(Observable.Range(1' 7))                      .Concat(Observable.Never<int>())                      .Buffer(TimeSpan.FromSeconds(1)' 5)                      .Take(3)                      .ToArray()                      .Wait();                  xs.Length.Is(3);                  xs[0].IsCollection(1000); // 1sec                  xs[1].IsCollection(99' 1' 2' 3' 4); // 1.5sec -> buffer                  xs[2].IsCollection(5' 6' 7); // next 1sec              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeAndCount,The following statement contains a magic number: {                  var xs = Observable.Return(1000)                      .Concat(Observable.Return(99).Delay(TimeSpan.FromMilliseconds(1500)))                      .Concat(Observable.Range(1' 7))                      .Concat(Observable.Never<int>())                      .Buffer(TimeSpan.FromSeconds(1)' 5)                      .Take(3)                      .ToArray()                      .Wait();                  xs.Length.Is(3);                  xs[0].IsCollection(1000); // 1sec                  xs[1].IsCollection(99' 1' 2' 3' 4); // 1.5sec -> buffer                  xs[2].IsCollection(5' 6' 7); // next 1sec              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeAndCount,The following statement contains a magic number: {                  var xs = Observable.Return(1000)                      .Concat(Observable.Return(99).Delay(TimeSpan.FromMilliseconds(1500)))                      .Concat(Observable.Range(1' 7))                      .Concat(Observable.Never<int>())                      .Buffer(TimeSpan.FromSeconds(1)' 5)                      .Take(3)                      .ToArray()                      .Wait();                  xs.Length.Is(3);                  xs[0].IsCollection(1000); // 1sec                  xs[1].IsCollection(99' 1' 2' 3' 4); // 1.5sec -> buffer                  xs[2].IsCollection(5' 6' 7); // next 1sec              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeAndCount,The following statement contains a magic number: {                  var xs = Observable.Return(1000)                      .Concat(Observable.Return(99).Delay(TimeSpan.FromMilliseconds(1500)))                      .Concat(Observable.Range(1' 7))                      .Concat(Observable.Never<int>())                      .Buffer(TimeSpan.FromSeconds(1)' 5)                      .Take(3)                      .ToArray()                      .Wait();                  xs.Length.Is(3);                  xs[0].IsCollection(1000); // 1sec                  xs[1].IsCollection(99' 1' 2' 3' 4); // 1.5sec -> buffer                  xs[2].IsCollection(5' 6' 7); // next 1sec              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeAndCount,The following statement contains a magic number: {                  var xs = Observable.Return(1000)                      .Concat(Observable.Return(99).Delay(TimeSpan.FromMilliseconds(1500)))                      .Concat(Observable.Range(1' 7))                      .Concat(Observable.Never<int>())                      .Buffer(TimeSpan.FromSeconds(1)' 5)                      .Take(3)                      .ToArray()                      .Wait();                  xs.Length.Is(3);                  xs[0].IsCollection(1000); // 1sec                  xs[1].IsCollection(99' 1' 2' 3' 4); // 1.5sec -> buffer                  xs[2].IsCollection(5' 6' 7); // next 1sec              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeAndCount,The following statement contains a magic number: {                  var start = DateTime.Now;                  var result = Observable.Return(10).Delay(TimeSpan.FromSeconds(2))                      .Concat(Observable.Range(1' 2))                      .Concat(Observable.Return(1000).Delay(TimeSpan.FromSeconds(2)))                      .Concat(Observable.Never<int>())                      .Buffer(TimeSpan.FromSeconds(3)' 3)                      .Take(2)                      .Select(xs =>                      {                          var currentSpan = DateTime.Now - start;                          return new { currentSpan' xs };                      })                      .ToArray()                      .Wait();                  // after 2 seconds' buffer is flush by count                  result[0].xs.IsCollection(10' 1' 2);                  result[0].currentSpan.Is(x => TimeSpan.FromMilliseconds(1800) <= x && x <= TimeSpan.FromMilliseconds(2200));                  // after 3 seconds' buffer is flush by time                  result[1].xs.IsCollection(1000);                  result[1].currentSpan.Is(x => TimeSpan.FromMilliseconds(4800) <= x && x <= TimeSpan.FromMilliseconds(5200));              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeAndCount,The following statement contains a magic number: {                  var start = DateTime.Now;                  var result = Observable.Return(10).Delay(TimeSpan.FromSeconds(2))                      .Concat(Observable.Range(1' 2))                      .Concat(Observable.Return(1000).Delay(TimeSpan.FromSeconds(2)))                      .Concat(Observable.Never<int>())                      .Buffer(TimeSpan.FromSeconds(3)' 3)                      .Take(2)                      .Select(xs =>                      {                          var currentSpan = DateTime.Now - start;                          return new { currentSpan' xs };                      })                      .ToArray()                      .Wait();                  // after 2 seconds' buffer is flush by count                  result[0].xs.IsCollection(10' 1' 2);                  result[0].currentSpan.Is(x => TimeSpan.FromMilliseconds(1800) <= x && x <= TimeSpan.FromMilliseconds(2200));                  // after 3 seconds' buffer is flush by time                  result[1].xs.IsCollection(1000);                  result[1].currentSpan.Is(x => TimeSpan.FromMilliseconds(4800) <= x && x <= TimeSpan.FromMilliseconds(5200));              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeAndCount,The following statement contains a magic number: {                  var start = DateTime.Now;                  var result = Observable.Return(10).Delay(TimeSpan.FromSeconds(2))                      .Concat(Observable.Range(1' 2))                      .Concat(Observable.Return(1000).Delay(TimeSpan.FromSeconds(2)))                      .Concat(Observable.Never<int>())                      .Buffer(TimeSpan.FromSeconds(3)' 3)                      .Take(2)                      .Select(xs =>                      {                          var currentSpan = DateTime.Now - start;                          return new { currentSpan' xs };                      })                      .ToArray()                      .Wait();                  // after 2 seconds' buffer is flush by count                  result[0].xs.IsCollection(10' 1' 2);                  result[0].currentSpan.Is(x => TimeSpan.FromMilliseconds(1800) <= x && x <= TimeSpan.FromMilliseconds(2200));                  // after 3 seconds' buffer is flush by time                  result[1].xs.IsCollection(1000);                  result[1].currentSpan.Is(x => TimeSpan.FromMilliseconds(4800) <= x && x <= TimeSpan.FromMilliseconds(5200));              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeAndCount,The following statement contains a magic number: {                  var start = DateTime.Now;                  var result = Observable.Return(10).Delay(TimeSpan.FromSeconds(2))                      .Concat(Observable.Range(1' 2))                      .Concat(Observable.Return(1000).Delay(TimeSpan.FromSeconds(2)))                      .Concat(Observable.Never<int>())                      .Buffer(TimeSpan.FromSeconds(3)' 3)                      .Take(2)                      .Select(xs =>                      {                          var currentSpan = DateTime.Now - start;                          return new { currentSpan' xs };                      })                      .ToArray()                      .Wait();                  // after 2 seconds' buffer is flush by count                  result[0].xs.IsCollection(10' 1' 2);                  result[0].currentSpan.Is(x => TimeSpan.FromMilliseconds(1800) <= x && x <= TimeSpan.FromMilliseconds(2200));                  // after 3 seconds' buffer is flush by time                  result[1].xs.IsCollection(1000);                  result[1].currentSpan.Is(x => TimeSpan.FromMilliseconds(4800) <= x && x <= TimeSpan.FromMilliseconds(5200));              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeAndCount,The following statement contains a magic number: {                  var start = DateTime.Now;                  var result = Observable.Return(10).Delay(TimeSpan.FromSeconds(2))                      .Concat(Observable.Range(1' 2))                      .Concat(Observable.Return(1000).Delay(TimeSpan.FromSeconds(2)))                      .Concat(Observable.Never<int>())                      .Buffer(TimeSpan.FromSeconds(3)' 3)                      .Take(2)                      .Select(xs =>                      {                          var currentSpan = DateTime.Now - start;                          return new { currentSpan' xs };                      })                      .ToArray()                      .Wait();                  // after 2 seconds' buffer is flush by count                  result[0].xs.IsCollection(10' 1' 2);                  result[0].currentSpan.Is(x => TimeSpan.FromMilliseconds(1800) <= x && x <= TimeSpan.FromMilliseconds(2200));                  // after 3 seconds' buffer is flush by time                  result[1].xs.IsCollection(1000);                  result[1].currentSpan.Is(x => TimeSpan.FromMilliseconds(4800) <= x && x <= TimeSpan.FromMilliseconds(5200));              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeAndCount,The following statement contains a magic number: {                  var start = DateTime.Now;                  var result = Observable.Return(10).Delay(TimeSpan.FromSeconds(2))                      .Concat(Observable.Range(1' 2))                      .Concat(Observable.Return(1000).Delay(TimeSpan.FromSeconds(2)))                      .Concat(Observable.Never<int>())                      .Buffer(TimeSpan.FromSeconds(3)' 3)                      .Take(2)                      .Select(xs =>                      {                          var currentSpan = DateTime.Now - start;                          return new { currentSpan' xs };                      })                      .ToArray()                      .Wait();                  // after 2 seconds' buffer is flush by count                  result[0].xs.IsCollection(10' 1' 2);                  result[0].currentSpan.Is(x => TimeSpan.FromMilliseconds(1800) <= x && x <= TimeSpan.FromMilliseconds(2200));                  // after 3 seconds' buffer is flush by time                  result[1].xs.IsCollection(1000);                  result[1].currentSpan.Is(x => TimeSpan.FromMilliseconds(4800) <= x && x <= TimeSpan.FromMilliseconds(5200));              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeAndCount,The following statement contains a magic number: {                  var start = DateTime.Now;                  var result = Observable.Return(10).Delay(TimeSpan.FromSeconds(2))                      .Concat(Observable.Range(1' 2))                      .Concat(Observable.Return(1000).Delay(TimeSpan.FromSeconds(2)))                      .Concat(Observable.Never<int>())                      .Buffer(TimeSpan.FromSeconds(3)' 3)                      .Take(2)                      .Select(xs =>                      {                          var currentSpan = DateTime.Now - start;                          return new { currentSpan' xs };                      })                      .ToArray()                      .Wait();                  // after 2 seconds' buffer is flush by count                  result[0].xs.IsCollection(10' 1' 2);                  result[0].currentSpan.Is(x => TimeSpan.FromMilliseconds(1800) <= x && x <= TimeSpan.FromMilliseconds(2200));                  // after 3 seconds' buffer is flush by time                  result[1].xs.IsCollection(1000);                  result[1].currentSpan.Is(x => TimeSpan.FromMilliseconds(4800) <= x && x <= TimeSpan.FromMilliseconds(5200));              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeAndCount,The following statement contains a magic number: {                  var start = DateTime.Now;                  var result = Observable.Return(10).Delay(TimeSpan.FromSeconds(2))                      .Concat(Observable.Range(1' 2))                      .Concat(Observable.Return(1000).Delay(TimeSpan.FromSeconds(2)))                      .Concat(Observable.Never<int>())                      .Buffer(TimeSpan.FromSeconds(3)' 3)                      .Take(2)                      .Select(xs =>                      {                          var currentSpan = DateTime.Now - start;                          return new { currentSpan' xs };                      })                      .ToArray()                      .Wait();                  // after 2 seconds' buffer is flush by count                  result[0].xs.IsCollection(10' 1' 2);                  result[0].currentSpan.Is(x => TimeSpan.FromMilliseconds(1800) <= x && x <= TimeSpan.FromMilliseconds(2200));                  // after 3 seconds' buffer is flush by time                  result[1].xs.IsCollection(1000);                  result[1].currentSpan.Is(x => TimeSpan.FromMilliseconds(4800) <= x && x <= TimeSpan.FromMilliseconds(5200));              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeAndCount,The following statement contains a magic number: {                  var start = DateTime.Now;                  var result = Observable.Return(10).Delay(TimeSpan.FromSeconds(2))                      .Concat(Observable.Range(1' 2))                      .Concat(Observable.Return(1000).Delay(TimeSpan.FromSeconds(2)))                      .Concat(Observable.Never<int>())                      .Buffer(TimeSpan.FromSeconds(3)' 3)                      .Take(2)                      .Select(xs =>                      {                          var currentSpan = DateTime.Now - start;                          return new { currentSpan' xs };                      })                      .ToArray()                      .Wait();                  // after 2 seconds' buffer is flush by count                  result[0].xs.IsCollection(10' 1' 2);                  result[0].currentSpan.Is(x => TimeSpan.FromMilliseconds(1800) <= x && x <= TimeSpan.FromMilliseconds(2200));                  // after 3 seconds' buffer is flush by time                  result[1].xs.IsCollection(1000);                  result[1].currentSpan.Is(x => TimeSpan.FromMilliseconds(4800) <= x && x <= TimeSpan.FromMilliseconds(5200));              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeAndCount,The following statement contains a magic number: {                  var start = DateTime.Now;                  var result = Observable.Return(10).Delay(TimeSpan.FromSeconds(2))                      .Concat(Observable.Range(1' 2))                      .Concat(Observable.Return(1000).Delay(TimeSpan.FromSeconds(2)))                      .Concat(Observable.Never<int>())                      .Buffer(TimeSpan.FromSeconds(3)' 3)                      .Take(2)                      .Select(xs =>                      {                          var currentSpan = DateTime.Now - start;                          return new { currentSpan' xs };                      })                      .ToArray()                      .Wait();                  // after 2 seconds' buffer is flush by count                  result[0].xs.IsCollection(10' 1' 2);                  result[0].currentSpan.Is(x => TimeSpan.FromMilliseconds(1800) <= x && x <= TimeSpan.FromMilliseconds(2200));                  // after 3 seconds' buffer is flush by time                  result[1].xs.IsCollection(1000);                  result[1].currentSpan.Is(x => TimeSpan.FromMilliseconds(4800) <= x && x <= TimeSpan.FromMilliseconds(5200));              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeAndCount,The following statement contains a magic number: {                  var start = DateTime.Now;                  var result = Observable.Return(10).Delay(TimeSpan.FromSeconds(2))                      .Concat(Observable.Range(1' 2))                      .Concat(Observable.Return(1000).Delay(TimeSpan.FromSeconds(2)))                      .Concat(Observable.Never<int>())                      .Buffer(TimeSpan.FromSeconds(3)' 3)                      .Take(2)                      .Select(xs =>                      {                          var currentSpan = DateTime.Now - start;                          return new { currentSpan' xs };                      })                      .ToArray()                      .Wait();                  // after 2 seconds' buffer is flush by count                  result[0].xs.IsCollection(10' 1' 2);                  result[0].currentSpan.Is(x => TimeSpan.FromMilliseconds(1800) <= x && x <= TimeSpan.FromMilliseconds(2200));                  // after 3 seconds' buffer is flush by time                  result[1].xs.IsCollection(1000);                  result[1].currentSpan.Is(x => TimeSpan.FromMilliseconds(4800) <= x && x <= TimeSpan.FromMilliseconds(5200));              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeAndCount,The following statement contains a magic number: {                  var start = DateTime.Now;                  var result = Observable.Return(10).Delay(TimeSpan.FromSeconds(2))                      .Concat(Observable.Range(1' 2))                      .Concat(Observable.Return(1000).Delay(TimeSpan.FromSeconds(2)))                      .Concat(Observable.Never<int>())                      .Buffer(TimeSpan.FromSeconds(3)' 3)                      .Take(2)                      .Select(xs =>                      {                          var currentSpan = DateTime.Now - start;                          return new { currentSpan' xs };                      })                      .ToArray()                      .Wait();                  // after 2 seconds' buffer is flush by count                  result[0].xs.IsCollection(10' 1' 2);                  result[0].currentSpan.Is(x => TimeSpan.FromMilliseconds(1800) <= x && x <= TimeSpan.FromMilliseconds(2200));                  // after 3 seconds' buffer is flush by time                  result[1].xs.IsCollection(1000);                  result[1].currentSpan.Is(x => TimeSpan.FromMilliseconds(4800) <= x && x <= TimeSpan.FromMilliseconds(5200));              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeAndCount,The following statement contains a magic number: {                  var start = DateTime.Now;                  var result = Observable.Return(10).Delay(TimeSpan.FromSeconds(2))                      .Concat(Observable.Range(1' 2))                      .Concat(Observable.Return(1000).Delay(TimeSpan.FromSeconds(2)))                      .Concat(Observable.Never<int>())                      .Buffer(TimeSpan.FromSeconds(3)' 3)                      .Take(2)                      .Select(xs =>                      {                          var currentSpan = DateTime.Now - start;                          return new { currentSpan' xs };                      })                      .ToArray()                      .Wait();                  // after 2 seconds' buffer is flush by count                  result[0].xs.IsCollection(10' 1' 2);                  result[0].currentSpan.Is(x => TimeSpan.FromMilliseconds(1800) <= x && x <= TimeSpan.FromMilliseconds(2200));                  // after 3 seconds' buffer is flush by time                  result[1].xs.IsCollection(1000);                  result[1].currentSpan.Is(x => TimeSpan.FromMilliseconds(4800) <= x && x <= TimeSpan.FromMilliseconds(5200));              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeAndCount,The following statement contains a magic number: {                  var start = DateTime.Now;                  var result = Observable.Return(10).Delay(TimeSpan.FromSeconds(2))                      .Concat(Observable.Range(1' 2))                      .Concat(Observable.Return(1000).Delay(TimeSpan.FromSeconds(2)))                      .Concat(Observable.Never<int>())                      .Buffer(TimeSpan.FromSeconds(3)' 3)                      .Take(2)                      .Select(xs =>                      {                          var currentSpan = DateTime.Now - start;                          return new { currentSpan' xs };                      })                      .ToArray()                      .Wait();                  // after 2 seconds' buffer is flush by count                  result[0].xs.IsCollection(10' 1' 2);                  result[0].currentSpan.Is(x => TimeSpan.FromMilliseconds(1800) <= x && x <= TimeSpan.FromMilliseconds(2200));                  // after 3 seconds' buffer is flush by time                  result[1].xs.IsCollection(1000);                  result[1].currentSpan.Is(x => TimeSpan.FromMilliseconds(4800) <= x && x <= TimeSpan.FromMilliseconds(5200));              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeAndCount,The following statement contains a magic number: {                  var start = DateTime.Now;                  var result = Observable.Return(10).Delay(TimeSpan.FromSeconds(2))                      .Concat(Observable.Range(1' 2))                      .Concat(Observable.Return(1000).Delay(TimeSpan.FromSeconds(2)))                      .Concat(Observable.Never<int>())                      .Buffer(TimeSpan.FromSeconds(3)' 3)                      .Take(2)                      .Select(xs =>                      {                          var currentSpan = DateTime.Now - start;                          return new { currentSpan' xs };                      })                      .ToArray()                      .Wait();                  // after 2 seconds' buffer is flush by count                  result[0].xs.IsCollection(10' 1' 2);                  result[0].currentSpan.Is(x => TimeSpan.FromMilliseconds(1800) <= x && x <= TimeSpan.FromMilliseconds(2200));                  // after 3 seconds' buffer is flush by time                  result[1].xs.IsCollection(1000);                  result[1].currentSpan.Is(x => TimeSpan.FromMilliseconds(4800) <= x && x <= TimeSpan.FromMilliseconds(5200));              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeAndCountTimeSide,The following statement contains a magic number: var record = subject.Buffer(TimeSpan.FromMilliseconds(100)' 100).Take(5).Record();
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeAndCountTimeSide,The following statement contains a magic number: var record = subject.Buffer(TimeSpan.FromMilliseconds(100)' 100).Take(5).Record();
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeAndCountTimeSide,The following statement contains a magic number: var record = subject.Buffer(TimeSpan.FromMilliseconds(100)' 100).Take(5).Record();
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeAndCountTimeSide,The following statement contains a magic number: Thread.Sleep(TimeSpan.FromSeconds(2));
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeAndCountTimeSide,The following statement contains a magic number: record.Values.Count.Is(5);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeComplete,The following statement contains a magic number: var xs = Observable.Return(1).Delay(TimeSpan.FromSeconds(2))                  .Concat(Observable.Return(1).Delay(TimeSpan.FromSeconds(2)).Skip(1))                  .Buffer(TimeSpan.FromSeconds(3))                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeComplete,The following statement contains a magic number: var xs = Observable.Return(1).Delay(TimeSpan.FromSeconds(2))                  .Concat(Observable.Return(1).Delay(TimeSpan.FromSeconds(2)).Skip(1))                  .Buffer(TimeSpan.FromSeconds(3))                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeComplete,The following statement contains a magic number: var xs = Observable.Return(1).Delay(TimeSpan.FromSeconds(2))                  .Concat(Observable.Return(1).Delay(TimeSpan.FromSeconds(2)).Skip(1))                  .Buffer(TimeSpan.FromSeconds(3))                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeComplete,The following statement contains a magic number: xs.Length.Is(2);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeEmptyBuffer,The following statement contains a magic number: var xs = Observable.Return(10).Delay(TimeSpan.FromMilliseconds(3500))                  .Buffer(TimeSpan.FromSeconds(1))                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeEmptyBuffer,The following statement contains a magic number: var xs = Observable.Return(10).Delay(TimeSpan.FromMilliseconds(3500))                  .Buffer(TimeSpan.FromSeconds(1))                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeEmptyBuffer,The following statement contains a magic number: xs.Length.Is(4);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeEmptyBuffer,The following statement contains a magic number: xs[2].Count.Is(0);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeEmptyBuffer,The following statement contains a magic number: xs[3].Count.Is(1);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferTimeEmptyComplete,The following statement contains a magic number: var xs = Observable.Empty<int>()                  .Buffer(TimeSpan.FromSeconds(1000))                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferWindowBoundaries,The following statement contains a magic number: subject.OnNext(2);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferWindowBoundaries,The following statement contains a magic number: record.Values[0].IsCollection(1' 2);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BufferWindowBoundaries,The following statement contains a magic number: record.Values.Count.Is(2);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,First,The following statement contains a magic number: {                  s.First().Materialize().Subscribe(l.Add);                  s.OnNext(10);                  s.OnError(new Exception());                  l[0].Value.Is(10);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,First,The following statement contains a magic number: {                  s.First().Materialize().Subscribe(l.Add);                  s.OnNext(10);                  s.OnError(new Exception());                  l[0].Value.Is(10);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,First,The following statement contains a magic number: {                  s.First(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(9);                  s.OnError(new Exception());                  l[0].Kind.Is(NotificationKind.OnError);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,First,The following statement contains a magic number: {                  s.First(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(9);                  s.OnError(new Exception());                  l[0].Kind.Is(NotificationKind.OnError);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,First,The following statement contains a magic number: {                  s.First(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(9);                  s.OnNext(10);                  s.OnError(new Exception());                  l[0].Value.Is(10);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,First,The following statement contains a magic number: {                  s.First(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(9);                  s.OnNext(10);                  s.OnError(new Exception());                  l[0].Value.Is(10);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,First,The following statement contains a magic number: {                  s.First(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(9);                  s.OnNext(10);                  s.OnError(new Exception());                  l[0].Value.Is(10);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,First,The following statement contains a magic number: {                  s.First(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(9);                  s.OnNext(10);                  s.OnError(new Exception());                  l[0].Value.Is(10);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,First,The following statement contains a magic number: {                  s.First(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(9);                  s.OnCompleted();                  l[0].Kind.Is(NotificationKind.OnError);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,First,The following statement contains a magic number: {                  s.First(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(9);                  s.OnCompleted();                  l[0].Kind.Is(NotificationKind.OnError);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FirstOrDefault,The following statement contains a magic number: {                  s.FirstOrDefault().Materialize().Subscribe(l.Add);                  s.OnNext(10);                  s.OnError(new Exception());                  l[0].Value.Is(10);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FirstOrDefault,The following statement contains a magic number: {                  s.FirstOrDefault().Materialize().Subscribe(l.Add);                  s.OnNext(10);                  s.OnError(new Exception());                  l[0].Value.Is(10);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FirstOrDefault,The following statement contains a magic number: {                  s.FirstOrDefault(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(9);                  s.OnCompleted();                  l[0].Value.Is(0);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FirstOrDefault,The following statement contains a magic number: {                  s.FirstOrDefault(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(9);                  s.OnCompleted();                  l[0].Value.Is(0);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FirstOrDefault,The following statement contains a magic number: {                  s.FirstOrDefault(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(9);                  s.OnNext(10);                  l[0].Value.Is(10);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FirstOrDefault,The following statement contains a magic number: {                  s.FirstOrDefault(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(9);                  s.OnNext(10);                  l[0].Value.Is(10);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FirstOrDefault,The following statement contains a magic number: {                  s.FirstOrDefault(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(9);                  s.OnNext(10);                  l[0].Value.Is(10);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FirstOrDefault,The following statement contains a magic number: {                  s.FirstOrDefault(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(9);                  s.OnNext(10);                  l[0].Value.Is(10);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FirstOrDefault,The following statement contains a magic number: {                  s.FirstOrDefault(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(9);                  s.OnError(new Exception());                  l[0].Kind.Is(NotificationKind.OnError);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FirstOrDefault,The following statement contains a magic number: {                  s.FirstOrDefault(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(9);                  s.OnError(new Exception());                  l[0].Kind.Is(NotificationKind.OnError);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,GroupBy,The following statement contains a magic number: subject.GroupBy(x => x % 3)                  .Subscribe(x =>                  {                      if (x.Key == 0)                      {                          a = x.Record();                      }                      else if (x.Key == 1)                      {                          b = x.Record();                      }                      else if (x.Key == 2)                      {                          c = x.Record();                      }                  });
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,GroupBy,The following statement contains a magic number: subject.GroupBy(x => x % 3)                  .Subscribe(x =>                  {                      if (x.Key == 0)                      {                          a = x.Record();                      }                      else if (x.Key == 1)                      {                          b = x.Record();                      }                      else if (x.Key == 2)                      {                          c = x.Record();                      }                  });
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,GroupBy,The following statement contains a magic number: subject.OnNext(99);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,GroupBy,The following statement contains a magic number: subject.OnNext(100);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,GroupBy,The following statement contains a magic number: subject.OnNext(101);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,GroupBy,The following statement contains a magic number: subject.OnNext(2);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,GroupBy,The following statement contains a magic number: a.Values.IsCollection(99' 0);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,GroupBy,The following statement contains a magic number: b.Values.IsCollection(100' 1);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,GroupBy,The following statement contains a magic number: c.Values.IsCollection(101' 2);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,GroupBy,The following statement contains a magic number: c.Values.IsCollection(101' 2);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Last,The following statement contains a magic number: {                  s.Last().Materialize().Subscribe(l.Add);                  s.OnNext(10);                  s.OnNext(20);                  s.OnNext(30);                  s.OnCompleted();                  l[0].Value.Is(30);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Last,The following statement contains a magic number: {                  s.Last().Materialize().Subscribe(l.Add);                  s.OnNext(10);                  s.OnNext(20);                  s.OnNext(30);                  s.OnCompleted();                  l[0].Value.Is(30);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Last,The following statement contains a magic number: {                  s.Last().Materialize().Subscribe(l.Add);                  s.OnNext(10);                  s.OnNext(20);                  s.OnNext(30);                  s.OnCompleted();                  l[0].Value.Is(30);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Last,The following statement contains a magic number: {                  s.Last().Materialize().Subscribe(l.Add);                  s.OnNext(10);                  s.OnNext(20);                  s.OnNext(30);                  s.OnCompleted();                  l[0].Value.Is(30);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Last,The following statement contains a magic number: {                  s.Last().Materialize().Subscribe(l.Add);                  s.OnNext(10);                  s.OnNext(20);                  s.OnNext(30);                  s.OnError(new Exception());                  l[0].Kind.Is(NotificationKind.OnError);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Last,The following statement contains a magic number: {                  s.Last().Materialize().Subscribe(l.Add);                  s.OnNext(10);                  s.OnNext(20);                  s.OnNext(30);                  s.OnError(new Exception());                  l[0].Kind.Is(NotificationKind.OnError);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Last,The following statement contains a magic number: {                  s.Last().Materialize().Subscribe(l.Add);                  s.OnNext(10);                  s.OnNext(20);                  s.OnNext(30);                  s.OnError(new Exception());                  l[0].Kind.Is(NotificationKind.OnError);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Last,The following statement contains a magic number: {                  s.Last(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(5);                  s.OnNext(20);                  s.OnNext(9);                  s.OnCompleted();                  l[0].Value.Is(20);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Last,The following statement contains a magic number: {                  s.Last(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(5);                  s.OnNext(20);                  s.OnNext(9);                  s.OnCompleted();                  l[0].Value.Is(20);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Last,The following statement contains a magic number: {                  s.Last(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(5);                  s.OnNext(20);                  s.OnNext(9);                  s.OnCompleted();                  l[0].Value.Is(20);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Last,The following statement contains a magic number: {                  s.Last(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(5);                  s.OnNext(20);                  s.OnNext(9);                  s.OnCompleted();                  l[0].Value.Is(20);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Last,The following statement contains a magic number: {                  s.Last(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(5);                  s.OnNext(20);                  s.OnNext(9);                  s.OnCompleted();                  l[0].Value.Is(20);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Last,The following statement contains a magic number: {                  s.Last(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(5);                  s.OnNext(10);                  s.OnError(new Exception());                  l[0].Kind.Is(NotificationKind.OnError);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Last,The following statement contains a magic number: {                  s.Last(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(5);                  s.OnNext(10);                  s.OnError(new Exception());                  l[0].Kind.Is(NotificationKind.OnError);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Last,The following statement contains a magic number: {                  s.Last(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(5);                  s.OnNext(10);                  s.OnError(new Exception());                  l[0].Kind.Is(NotificationKind.OnError);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Last,The following statement contains a magic number: {                  s.Last(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(5);                  s.OnNext(9);                  s.OnCompleted();                  l[0].Kind.Is(NotificationKind.OnError);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Last,The following statement contains a magic number: {                  s.Last(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(5);                  s.OnNext(9);                  s.OnCompleted();                  l[0].Kind.Is(NotificationKind.OnError);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Last,The following statement contains a magic number: {                  s.Last(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(5);                  s.OnNext(9);                  s.OnCompleted();                  l[0].Kind.Is(NotificationKind.OnError);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,LastOrDefault,The following statement contains a magic number: {                  s.LastOrDefault().Materialize().Subscribe(l.Add);                  s.OnNext(10);                  s.OnNext(20);                  s.OnNext(30);                  s.OnCompleted();                  l[0].Value.Is(30);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,LastOrDefault,The following statement contains a magic number: {                  s.LastOrDefault().Materialize().Subscribe(l.Add);                  s.OnNext(10);                  s.OnNext(20);                  s.OnNext(30);                  s.OnCompleted();                  l[0].Value.Is(30);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,LastOrDefault,The following statement contains a magic number: {                  s.LastOrDefault().Materialize().Subscribe(l.Add);                  s.OnNext(10);                  s.OnNext(20);                  s.OnNext(30);                  s.OnCompleted();                  l[0].Value.Is(30);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,LastOrDefault,The following statement contains a magic number: {                  s.LastOrDefault().Materialize().Subscribe(l.Add);                  s.OnNext(10);                  s.OnNext(20);                  s.OnNext(30);                  s.OnCompleted();                  l[0].Value.Is(30);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,LastOrDefault,The following statement contains a magic number: {                  s.LastOrDefault().Materialize().Subscribe(l.Add);                  s.OnNext(10);                  s.OnNext(20);                  s.OnNext(30);                  s.OnError(new Exception());                  l[0].Kind.Is(NotificationKind.OnError);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,LastOrDefault,The following statement contains a magic number: {                  s.LastOrDefault().Materialize().Subscribe(l.Add);                  s.OnNext(10);                  s.OnNext(20);                  s.OnNext(30);                  s.OnError(new Exception());                  l[0].Kind.Is(NotificationKind.OnError);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,LastOrDefault,The following statement contains a magic number: {                  s.LastOrDefault().Materialize().Subscribe(l.Add);                  s.OnNext(10);                  s.OnNext(20);                  s.OnNext(30);                  s.OnError(new Exception());                  l[0].Kind.Is(NotificationKind.OnError);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,LastOrDefault,The following statement contains a magic number: {                  s.LastOrDefault(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(9);                  s.OnCompleted();                  l[0].Value.Is(0);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,LastOrDefault,The following statement contains a magic number: {                  s.LastOrDefault(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(9);                  s.OnCompleted();                  l[0].Value.Is(0);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,LastOrDefault,The following statement contains a magic number: {                  s.LastOrDefault(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(5);                  s.OnNext(20);                  s.OnNext(9);                  s.OnCompleted();                  l[0].Value.Is(20);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,LastOrDefault,The following statement contains a magic number: {                  s.LastOrDefault(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(5);                  s.OnNext(20);                  s.OnNext(9);                  s.OnCompleted();                  l[0].Value.Is(20);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,LastOrDefault,The following statement contains a magic number: {                  s.LastOrDefault(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(5);                  s.OnNext(20);                  s.OnNext(9);                  s.OnCompleted();                  l[0].Value.Is(20);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,LastOrDefault,The following statement contains a magic number: {                  s.LastOrDefault(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(5);                  s.OnNext(20);                  s.OnNext(9);                  s.OnCompleted();                  l[0].Value.Is(20);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,LastOrDefault,The following statement contains a magic number: {                  s.LastOrDefault(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(5);                  s.OnNext(20);                  s.OnNext(9);                  s.OnCompleted();                  l[0].Value.Is(20);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,LastOrDefault,The following statement contains a magic number: {                  s.LastOrDefault(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(5);                  s.OnNext(10);                  s.OnError(new Exception());                  l[0].Kind.Is(NotificationKind.OnError);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,LastOrDefault,The following statement contains a magic number: {                  s.LastOrDefault(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(5);                  s.OnNext(10);                  s.OnError(new Exception());                  l[0].Kind.Is(NotificationKind.OnError);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,LastOrDefault,The following statement contains a magic number: {                  s.LastOrDefault(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(5);                  s.OnNext(10);                  s.OnError(new Exception());                  l[0].Kind.Is(NotificationKind.OnError);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Pairwise,The following statement contains a magic number: var xs = Observable.Range(1' 5).Pairwise((x' y) => x + ":" + y).ToArrayWait();
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Pairwise2,The following statement contains a magic number: var xs = Observable.Range(1' 5).Pairwise().ToArrayWait();
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Pairwise2,The following statement contains a magic number: xs[0].Current.Is(2);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Pairwise2,The following statement contains a magic number: xs[1].Previous.Is(2);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Pairwise2,The following statement contains a magic number: xs[1].Current.Is(3);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Pairwise2,The following statement contains a magic number: xs[2].Previous.Is(3);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Pairwise2,The following statement contains a magic number: xs[2].Previous.Is(3);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Pairwise2,The following statement contains a magic number: xs[2].Current.Is(4);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Pairwise2,The following statement contains a magic number: xs[2].Current.Is(4);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Pairwise2,The following statement contains a magic number: xs[3].Previous.Is(4);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Pairwise2,The following statement contains a magic number: xs[3].Previous.Is(4);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Pairwise2,The following statement contains a magic number: xs[3].Current.Is(5);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Pairwise2,The following statement contains a magic number: xs[3].Current.Is(5);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Single,The following statement contains a magic number: {                  s.Single().Materialize().Subscribe(l.Add);                  s.OnNext(10);                  s.OnCompleted();                  l[0].Value.Is(10);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Single,The following statement contains a magic number: {                  s.Single().Materialize().Subscribe(l.Add);                  s.OnNext(10);                  s.OnCompleted();                  l[0].Value.Is(10);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Single,The following statement contains a magic number: {                  s.Single().Materialize().Subscribe(l.Add);                  s.OnNext(20);                  s.OnNext(30);                  s.OnError(new Exception());                  l[0].Kind.Is(NotificationKind.OnError);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Single,The following statement contains a magic number: {                  s.Single().Materialize().Subscribe(l.Add);                  s.OnNext(20);                  s.OnNext(30);                  s.OnError(new Exception());                  l[0].Kind.Is(NotificationKind.OnError);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Single,The following statement contains a magic number: {                  s.Single().Materialize().Subscribe(l.Add);                  s.OnNext(10);                  s.OnError(new Exception());                  l[0].Kind.Is(NotificationKind.OnError);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Single,The following statement contains a magic number: {                  s.Single(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(9);                  s.OnNext(10);                  s.OnCompleted();                  l[0].Value.Is(10);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Single,The following statement contains a magic number: {                  s.Single(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(9);                  s.OnNext(10);                  s.OnCompleted();                  l[0].Value.Is(10);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Single,The following statement contains a magic number: {                  s.Single(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(9);                  s.OnNext(10);                  s.OnCompleted();                  l[0].Value.Is(10);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Single,The following statement contains a magic number: {                  s.Single(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(9);                  s.OnNext(10);                  s.OnCompleted();                  l[0].Value.Is(10);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Single,The following statement contains a magic number: {                  s.Single(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(10);                  s.OnNext(9);                  s.OnCompleted();                  l[0].Value.Is(10);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Single,The following statement contains a magic number: {                  s.Single(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(10);                  s.OnNext(9);                  s.OnCompleted();                  l[0].Value.Is(10);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Single,The following statement contains a magic number: {                  s.Single(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(10);                  s.OnNext(9);                  s.OnCompleted();                  l[0].Value.Is(10);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Single,The following statement contains a magic number: {                  s.Single(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(10);                  s.OnNext(9);                  s.OnCompleted();                  l[0].Value.Is(10);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Single,The following statement contains a magic number: {                  s.Single(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(20);                  s.OnNext(30);                  s.OnError(new Exception());                  l[0].Kind.Is(NotificationKind.OnError);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Single,The following statement contains a magic number: {                  s.Single(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(20);                  s.OnNext(30);                  s.OnError(new Exception());                  l[0].Kind.Is(NotificationKind.OnError);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Single,The following statement contains a magic number: {                  s.Single(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(20);                  s.OnNext(30);                  s.OnError(new Exception());                  l[0].Kind.Is(NotificationKind.OnError);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Single,The following statement contains a magic number: {                  s.Single(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(10);                  s.OnError(new Exception());                  l[0].Kind.Is(NotificationKind.OnError);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Single,The following statement contains a magic number: {                  s.Single(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(10);                  s.OnError(new Exception());                  l[0].Kind.Is(NotificationKind.OnError);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Single,The following statement contains a magic number: {                  s.Single(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnCompleted();                  l[0].Kind.Is(NotificationKind.OnError);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SingleOrDefault,The following statement contains a magic number: {                  s.SingleOrDefault().Materialize().Subscribe(l.Add);                  s.OnNext(10);                  s.OnCompleted();                  l[0].Value.Is(10);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SingleOrDefault,The following statement contains a magic number: {                  s.SingleOrDefault().Materialize().Subscribe(l.Add);                  s.OnNext(10);                  s.OnCompleted();                  l[0].Value.Is(10);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SingleOrDefault,The following statement contains a magic number: {                  s.SingleOrDefault().Materialize().Subscribe(l.Add);                  s.OnNext(20);                  s.OnNext(30);                  s.OnError(new Exception());                  l[0].Kind.Is(NotificationKind.OnError);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SingleOrDefault,The following statement contains a magic number: {                  s.SingleOrDefault().Materialize().Subscribe(l.Add);                  s.OnNext(20);                  s.OnNext(30);                  s.OnError(new Exception());                  l[0].Kind.Is(NotificationKind.OnError);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SingleOrDefault,The following statement contains a magic number: {                  s.SingleOrDefault().Materialize().Subscribe(l.Add);                  s.OnNext(10);                  s.OnError(new Exception());                  l[0].Kind.Is(NotificationKind.OnError);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SingleOrDefault,The following statement contains a magic number: {                  s.SingleOrDefault(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(9);                  s.OnNext(10);                  s.OnCompleted();                  l[0].Value.Is(10);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SingleOrDefault,The following statement contains a magic number: {                  s.SingleOrDefault(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(9);                  s.OnNext(10);                  s.OnCompleted();                  l[0].Value.Is(10);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SingleOrDefault,The following statement contains a magic number: {                  s.SingleOrDefault(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(9);                  s.OnNext(10);                  s.OnCompleted();                  l[0].Value.Is(10);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SingleOrDefault,The following statement contains a magic number: {                  s.SingleOrDefault(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(9);                  s.OnNext(10);                  s.OnCompleted();                  l[0].Value.Is(10);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SingleOrDefault,The following statement contains a magic number: {                  s.SingleOrDefault(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(10);                  s.OnNext(9);                  s.OnCompleted();                  l[0].Value.Is(10);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SingleOrDefault,The following statement contains a magic number: {                  s.SingleOrDefault(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(10);                  s.OnNext(9);                  s.OnCompleted();                  l[0].Value.Is(10);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SingleOrDefault,The following statement contains a magic number: {                  s.SingleOrDefault(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(10);                  s.OnNext(9);                  s.OnCompleted();                  l[0].Value.Is(10);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SingleOrDefault,The following statement contains a magic number: {                  s.SingleOrDefault(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(10);                  s.OnNext(9);                  s.OnCompleted();                  l[0].Value.Is(10);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SingleOrDefault,The following statement contains a magic number: {                  s.SingleOrDefault(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(20);                  s.OnNext(30);                  s.OnError(new Exception());                  l[0].Kind.Is(NotificationKind.OnError);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SingleOrDefault,The following statement contains a magic number: {                  s.SingleOrDefault(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(20);                  s.OnNext(30);                  s.OnError(new Exception());                  l[0].Kind.Is(NotificationKind.OnError);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SingleOrDefault,The following statement contains a magic number: {                  s.SingleOrDefault(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(20);                  s.OnNext(30);                  s.OnError(new Exception());                  l[0].Kind.Is(NotificationKind.OnError);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SingleOrDefault,The following statement contains a magic number: {                  s.SingleOrDefault(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(10);                  s.OnError(new Exception());                  l[0].Kind.Is(NotificationKind.OnError);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SingleOrDefault,The following statement contains a magic number: {                  s.SingleOrDefault(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(10);                  s.OnError(new Exception());                  l[0].Kind.Is(NotificationKind.OnError);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SingleOrDefault,The following statement contains a magic number: {                  s.SingleOrDefault(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnCompleted();                  l[0].Value.Is(0);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SingleOrDefault,The following statement contains a magic number: {                  s.SingleOrDefault(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(9);                  s.OnCompleted();                  l[0].Value.Is(0);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SingleOrDefault,The following statement contains a magic number: {                  s.SingleOrDefault(x => x % 2 == 0).Materialize().Subscribe(l.Add);                  s.OnNext(9);                  s.OnCompleted();                  l[0].Value.Is(0);                  l[1].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Skip,The following statement contains a magic number: Observable.Range(1' 10)                  .Skip(3)                  .ToArray()                  .Wait()                  .IsCollection(4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Skip,The following statement contains a magic number: Observable.Range(1' 10)                  .Skip(3)                  .ToArray()                  .Wait()                  .IsCollection(4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Skip,The following statement contains a magic number: Observable.Range(1' 10)                  .Skip(3)                  .ToArray()                  .Wait()                  .IsCollection(4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Skip,The following statement contains a magic number: Observable.Range(1' 10)                  .Skip(3)                  .ToArray()                  .Wait()                  .IsCollection(4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Skip,The following statement contains a magic number: Observable.Range(1' 10)                  .Skip(3)                  .ToArray()                  .Wait()                  .IsCollection(4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Skip,The following statement contains a magic number: Observable.Range(1' 10)                  .Skip(3)                  .ToArray()                  .Wait()                  .IsCollection(4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Skip,The following statement contains a magic number: Observable.Range(1' 10)                  .Skip(3)                  .ToArray()                  .Wait()                  .IsCollection(4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Skip,The following statement contains a magic number: Observable.Range(1' 10)                  .Skip(3)                  .ToArray()                  .Wait()                  .IsCollection(4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Skip,The following statement contains a magic number: Observable.Range(1' 10)                  .Skip(3)                  .ToArray()                  .Wait()                  .IsCollection(4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Skip,The following statement contains a magic number: {                  var range = Observable.Range(1' 10);                  AssertEx.Throws<ArgumentOutOfRangeException>(() => range.Skip(-1));                  range.Skip(10).ToArray().Wait().Length.Is(0);                  range.Skip(3).ToArrayWait().IsCollection(4' 5' 6' 7' 8' 9' 10);                  range.Skip(3).Skip(2).ToArrayWait().IsCollection(6' 7' 8' 9' 10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Skip,The following statement contains a magic number: {                  var range = Observable.Range(1' 10);                  AssertEx.Throws<ArgumentOutOfRangeException>(() => range.Skip(-1));                  range.Skip(10).ToArray().Wait().Length.Is(0);                  range.Skip(3).ToArrayWait().IsCollection(4' 5' 6' 7' 8' 9' 10);                  range.Skip(3).Skip(2).ToArrayWait().IsCollection(6' 7' 8' 9' 10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Skip,The following statement contains a magic number: {                  var range = Observable.Range(1' 10);                  AssertEx.Throws<ArgumentOutOfRangeException>(() => range.Skip(-1));                  range.Skip(10).ToArray().Wait().Length.Is(0);                  range.Skip(3).ToArrayWait().IsCollection(4' 5' 6' 7' 8' 9' 10);                  range.Skip(3).Skip(2).ToArrayWait().IsCollection(6' 7' 8' 9' 10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Skip,The following statement contains a magic number: {                  var range = Observable.Range(1' 10);                  AssertEx.Throws<ArgumentOutOfRangeException>(() => range.Skip(-1));                  range.Skip(10).ToArray().Wait().Length.Is(0);                  range.Skip(3).ToArrayWait().IsCollection(4' 5' 6' 7' 8' 9' 10);                  range.Skip(3).Skip(2).ToArrayWait().IsCollection(6' 7' 8' 9' 10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Skip,The following statement contains a magic number: {                  var range = Observable.Range(1' 10);                  AssertEx.Throws<ArgumentOutOfRangeException>(() => range.Skip(-1));                  range.Skip(10).ToArray().Wait().Length.Is(0);                  range.Skip(3).ToArrayWait().IsCollection(4' 5' 6' 7' 8' 9' 10);                  range.Skip(3).Skip(2).ToArrayWait().IsCollection(6' 7' 8' 9' 10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Skip,The following statement contains a magic number: {                  var range = Observable.Range(1' 10);                  AssertEx.Throws<ArgumentOutOfRangeException>(() => range.Skip(-1));                  range.Skip(10).ToArray().Wait().Length.Is(0);                  range.Skip(3).ToArrayWait().IsCollection(4' 5' 6' 7' 8' 9' 10);                  range.Skip(3).Skip(2).ToArrayWait().IsCollection(6' 7' 8' 9' 10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Skip,The following statement contains a magic number: {                  var range = Observable.Range(1' 10);                  AssertEx.Throws<ArgumentOutOfRangeException>(() => range.Skip(-1));                  range.Skip(10).ToArray().Wait().Length.Is(0);                  range.Skip(3).ToArrayWait().IsCollection(4' 5' 6' 7' 8' 9' 10);                  range.Skip(3).Skip(2).ToArrayWait().IsCollection(6' 7' 8' 9' 10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Skip,The following statement contains a magic number: {                  var range = Observable.Range(1' 10);                  AssertEx.Throws<ArgumentOutOfRangeException>(() => range.Skip(-1));                  range.Skip(10).ToArray().Wait().Length.Is(0);                  range.Skip(3).ToArrayWait().IsCollection(4' 5' 6' 7' 8' 9' 10);                  range.Skip(3).Skip(2).ToArrayWait().IsCollection(6' 7' 8' 9' 10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Skip,The following statement contains a magic number: {                  var range = Observable.Range(1' 10);                  AssertEx.Throws<ArgumentOutOfRangeException>(() => range.Skip(-1));                  range.Skip(10).ToArray().Wait().Length.Is(0);                  range.Skip(3).ToArrayWait().IsCollection(4' 5' 6' 7' 8' 9' 10);                  range.Skip(3).Skip(2).ToArrayWait().IsCollection(6' 7' 8' 9' 10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Skip,The following statement contains a magic number: {                  var range = Observable.Range(1' 10);                  AssertEx.Throws<ArgumentOutOfRangeException>(() => range.Skip(-1));                  range.Skip(10).ToArray().Wait().Length.Is(0);                  range.Skip(3).ToArrayWait().IsCollection(4' 5' 6' 7' 8' 9' 10);                  range.Skip(3).Skip(2).ToArrayWait().IsCollection(6' 7' 8' 9' 10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Skip,The following statement contains a magic number: {                  var range = Observable.Range(1' 10);                  AssertEx.Throws<ArgumentOutOfRangeException>(() => range.Skip(-1));                  range.Skip(10).ToArray().Wait().Length.Is(0);                  range.Skip(3).ToArrayWait().IsCollection(4' 5' 6' 7' 8' 9' 10);                  range.Skip(3).Skip(2).ToArrayWait().IsCollection(6' 7' 8' 9' 10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Skip,The following statement contains a magic number: {                  var range = Observable.Range(1' 10);                  AssertEx.Throws<ArgumentOutOfRangeException>(() => range.Skip(-1));                  range.Skip(10).ToArray().Wait().Length.Is(0);                  range.Skip(3).ToArrayWait().IsCollection(4' 5' 6' 7' 8' 9' 10);                  range.Skip(3).Skip(2).ToArrayWait().IsCollection(6' 7' 8' 9' 10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Skip,The following statement contains a magic number: {                  var range = Observable.Range(1' 10);                  AssertEx.Throws<ArgumentOutOfRangeException>(() => range.Skip(-1));                  range.Skip(10).ToArray().Wait().Length.Is(0);                  range.Skip(3).ToArrayWait().IsCollection(4' 5' 6' 7' 8' 9' 10);                  range.Skip(3).Skip(2).ToArrayWait().IsCollection(6' 7' 8' 9' 10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Skip,The following statement contains a magic number: {                  var range = Observable.Range(1' 10);                  AssertEx.Throws<ArgumentOutOfRangeException>(() => range.Skip(-1));                  range.Skip(10).ToArray().Wait().Length.Is(0);                  range.Skip(3).ToArrayWait().IsCollection(4' 5' 6' 7' 8' 9' 10);                  range.Skip(3).Skip(2).ToArrayWait().IsCollection(6' 7' 8' 9' 10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Skip,The following statement contains a magic number: {                  var range = Observable.Range(1' 10);                  AssertEx.Throws<ArgumentOutOfRangeException>(() => range.Skip(-1));                  range.Skip(10).ToArray().Wait().Length.Is(0);                  range.Skip(3).ToArrayWait().IsCollection(4' 5' 6' 7' 8' 9' 10);                  range.Skip(3).Skip(2).ToArrayWait().IsCollection(6' 7' 8' 9' 10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Skip,The following statement contains a magic number: {                  var range = Observable.Range(1' 10);                  AssertEx.Throws<ArgumentOutOfRangeException>(() => range.Skip(-1));                  range.Skip(10).ToArray().Wait().Length.Is(0);                  range.Skip(3).ToArrayWait().IsCollection(4' 5' 6' 7' 8' 9' 10);                  range.Skip(3).Skip(2).ToArrayWait().IsCollection(6' 7' 8' 9' 10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Skip,The following statement contains a magic number: {                  var range = Observable.Range(1' 10);                  AssertEx.Throws<ArgumentOutOfRangeException>(() => range.Skip(-1));                  range.Skip(10).ToArray().Wait().Length.Is(0);                  range.Skip(3).ToArrayWait().IsCollection(4' 5' 6' 7' 8' 9' 10);                  range.Skip(3).Skip(2).ToArrayWait().IsCollection(6' 7' 8' 9' 10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SkipTime,The following statement contains a magic number: {                  var now = DateTime.Now;                  var timer = Observable.Timer(TimeSpan.FromSeconds(0)' TimeSpan.FromMilliseconds(10))                      .Timestamp();                  var v = timer.Skip(TimeSpan.FromMilliseconds(300))                      .First()                      .Wait();                  (v.Timestamp - now).Is(x => (TimeSpan.FromMilliseconds(250) <= x && x <= TimeSpan.FromMilliseconds(350)));              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SkipTime,The following statement contains a magic number: {                  var now = DateTime.Now;                  var timer = Observable.Timer(TimeSpan.FromSeconds(0)' TimeSpan.FromMilliseconds(10))                      .Timestamp();                  var v = timer.Skip(TimeSpan.FromMilliseconds(300))                      .First()                      .Wait();                  (v.Timestamp - now).Is(x => (TimeSpan.FromMilliseconds(250) <= x && x <= TimeSpan.FromMilliseconds(350)));              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SkipTime,The following statement contains a magic number: {                  var now = DateTime.Now;                  var timer = Observable.Timer(TimeSpan.FromSeconds(0)' TimeSpan.FromMilliseconds(10))                      .Timestamp();                  var v = timer.Skip(TimeSpan.FromMilliseconds(300))                      .First()                      .Wait();                  (v.Timestamp - now).Is(x => (TimeSpan.FromMilliseconds(250) <= x && x <= TimeSpan.FromMilliseconds(350)));              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SkipTime,The following statement contains a magic number: {                  var now = DateTime.Now;                  var timer = Observable.Timer(TimeSpan.FromSeconds(0)' TimeSpan.FromMilliseconds(10))                      .Timestamp();                  var v = timer.Skip(TimeSpan.FromMilliseconds(300))                      .First()                      .Wait();                  (v.Timestamp - now).Is(x => (TimeSpan.FromMilliseconds(250) <= x && x <= TimeSpan.FromMilliseconds(350)));              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SkipTime,The following statement contains a magic number: {                  var now = DateTime.Now;                  var timer = Observable.Timer(TimeSpan.FromSeconds(0)' TimeSpan.FromMilliseconds(10))                      .Timestamp();                  var v = timer                      .Skip(TimeSpan.FromMilliseconds(100))                      .Skip(TimeSpan.FromMilliseconds(300))                      .First()                      .Wait();                  (v.Timestamp - now).Is(x => (TimeSpan.FromMilliseconds(250) <= x && x <= TimeSpan.FromMilliseconds(350)));              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SkipTime,The following statement contains a magic number: {                  var now = DateTime.Now;                  var timer = Observable.Timer(TimeSpan.FromSeconds(0)' TimeSpan.FromMilliseconds(10))                      .Timestamp();                  var v = timer                      .Skip(TimeSpan.FromMilliseconds(100))                      .Skip(TimeSpan.FromMilliseconds(300))                      .First()                      .Wait();                  (v.Timestamp - now).Is(x => (TimeSpan.FromMilliseconds(250) <= x && x <= TimeSpan.FromMilliseconds(350)));              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SkipTime,The following statement contains a magic number: {                  var now = DateTime.Now;                  var timer = Observable.Timer(TimeSpan.FromSeconds(0)' TimeSpan.FromMilliseconds(10))                      .Timestamp();                  var v = timer                      .Skip(TimeSpan.FromMilliseconds(100))                      .Skip(TimeSpan.FromMilliseconds(300))                      .First()                      .Wait();                  (v.Timestamp - now).Is(x => (TimeSpan.FromMilliseconds(250) <= x && x <= TimeSpan.FromMilliseconds(350)));              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SkipTime,The following statement contains a magic number: {                  var now = DateTime.Now;                  var timer = Observable.Timer(TimeSpan.FromSeconds(0)' TimeSpan.FromMilliseconds(10))                      .Timestamp();                  var v = timer                      .Skip(TimeSpan.FromMilliseconds(100))                      .Skip(TimeSpan.FromMilliseconds(300))                      .First()                      .Wait();                  (v.Timestamp - now).Is(x => (TimeSpan.FromMilliseconds(250) <= x && x <= TimeSpan.FromMilliseconds(350)));              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SkipTime,The following statement contains a magic number: {                  var now = DateTime.Now;                  var timer = Observable.Timer(TimeSpan.FromSeconds(0)' TimeSpan.FromMilliseconds(10))                      .Timestamp();                  var v = timer                      .Skip(TimeSpan.FromMilliseconds(100))                      .Skip(TimeSpan.FromMilliseconds(300))                      .First()                      .Wait();                  (v.Timestamp - now).Is(x => (TimeSpan.FromMilliseconds(250) <= x && x <= TimeSpan.FromMilliseconds(350)));              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SkipUntil,The following statement contains a magic number: {                  var a = new Subject<int>();                  var b = new Subject<int>();                  var l = new List<Notification<int>>();                  a.SkipUntil(b).Materialize().Subscribe(l.Add);                  a.OnNext(1);                  a.OnNext(10);                  b.OnNext(1000);                  l.Count.Is(0);                  b.OnNext(99999);                  b.HasObservers.IsFalse();                  a.OnNext(1);                  a.OnNext(10);                  l[0].Value.Is(1);                  l[1].Value.Is(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SkipUntil,The following statement contains a magic number: {                  var a = new Subject<int>();                  var b = new Subject<int>();                  var l = new List<Notification<int>>();                  a.SkipUntil(b).Materialize().Subscribe(l.Add);                  a.OnNext(1);                  a.OnNext(10);                  b.OnNext(1000);                  l.Count.Is(0);                  b.OnNext(99999);                  b.HasObservers.IsFalse();                  a.OnNext(1);                  a.OnNext(10);                  l[0].Value.Is(1);                  l[1].Value.Is(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SkipUntil,The following statement contains a magic number: {                  var a = new Subject<int>();                  var b = new Subject<int>();                  var l = new List<Notification<int>>();                  a.SkipUntil(b).Materialize().Subscribe(l.Add);                  a.OnNext(1);                  a.OnNext(10);                  b.OnNext(1000);                  l.Count.Is(0);                  b.OnNext(99999);                  b.HasObservers.IsFalse();                  a.OnNext(1);                  a.OnNext(10);                  l[0].Value.Is(1);                  l[1].Value.Is(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SkipUntil,The following statement contains a magic number: {                  var a = new Subject<int>();                  var b = new Subject<int>();                  var l = new List<Notification<int>>();                  a.SkipUntil(b).Materialize().Subscribe(l.Add);                  a.OnNext(1);                  a.OnNext(10);                  b.OnNext(1000);                  l.Count.Is(0);                  b.OnNext(99999);                  b.HasObservers.IsFalse();                  a.OnNext(1);                  a.OnNext(10);                  l[0].Value.Is(1);                  l[1].Value.Is(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SkipUntil,The following statement contains a magic number: {                  var a = new Subject<int>();                  var b = new Subject<int>();                  var l = new List<Notification<int>>();                  a.SkipUntil(b).Materialize().Subscribe(l.Add);                  a.OnNext(1);                  a.OnNext(10);                  b.OnNext(1000);                  l.Count.Is(0);                  b.OnNext(99999);                  b.HasObservers.IsFalse();                  a.OnNext(1);                  a.OnNext(10);                  l[0].Value.Is(1);                  l[1].Value.Is(10);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SkipUntil,The following statement contains a magic number: {                  var a = new Subject<int>();                  var b = new Subject<int>();                  var l = new List<Notification<int>>();                  a.SkipUntil(b).Materialize().Subscribe(l.Add);                  a.OnNext(1);                  a.OnNext(10);                  b.OnCompleted();                  l.Count.Is(0);                  a.OnNext(100);                  l.Count.Is(0);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SkipUntil,The following statement contains a magic number: {                  var a = new Subject<int>();                  var b = new Subject<int>();                  var l = new List<Notification<int>>();                  a.SkipUntil(b).Materialize().Subscribe(l.Add);                  a.OnNext(1);                  a.OnNext(10);                  b.OnCompleted();                  l.Count.Is(0);                  a.OnNext(100);                  l.Count.Is(0);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SkipWhile,The following statement contains a magic number: Observable.Range(1' 10)                  .SkipWhile(x => x <= 5)                  .ToArray()                  .Wait()                  .IsCollection(6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SkipWhile,The following statement contains a magic number: Observable.Range(1' 10)                  .SkipWhile(x => x <= 5)                  .ToArray()                  .Wait()                  .IsCollection(6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SkipWhile,The following statement contains a magic number: Observable.Range(1' 10)                  .SkipWhile(x => x <= 5)                  .ToArray()                  .Wait()                  .IsCollection(6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SkipWhile,The following statement contains a magic number: Observable.Range(1' 10)                  .SkipWhile(x => x <= 5)                  .ToArray()                  .Wait()                  .IsCollection(6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SkipWhile,The following statement contains a magic number: Observable.Range(1' 10)                  .SkipWhile(x => x <= 5)                  .ToArray()                  .Wait()                  .IsCollection(6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SkipWhile,The following statement contains a magic number: Observable.Range(1' 10)                  .SkipWhile(x => x <= 5)                  .ToArray()                  .Wait()                  .IsCollection(6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SkipWhile,The following statement contains a magic number: Observable.Range(1' 10)                  .SkipWhile(x => x <= 5)                  .ToArray()                  .Wait()                  .IsCollection(6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SkipWhileIndex,The following statement contains a magic number: Observable.Range(1' 10)                  .SkipWhile((x' i) => i <= 5)                  .ToArray()                  .Wait()                  .IsCollection(7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SkipWhileIndex,The following statement contains a magic number: Observable.Range(1' 10)                  .SkipWhile((x' i) => i <= 5)                  .ToArray()                  .Wait()                  .IsCollection(7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SkipWhileIndex,The following statement contains a magic number: Observable.Range(1' 10)                  .SkipWhile((x' i) => i <= 5)                  .ToArray()                  .Wait()                  .IsCollection(7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SkipWhileIndex,The following statement contains a magic number: Observable.Range(1' 10)                  .SkipWhile((x' i) => i <= 5)                  .ToArray()                  .Wait()                  .IsCollection(7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SkipWhileIndex,The following statement contains a magic number: Observable.Range(1' 10)                  .SkipWhile((x' i) => i <= 5)                  .ToArray()                  .Wait()                  .IsCollection(7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SkipWhileIndex,The following statement contains a magic number: Observable.Range(1' 10)                  .SkipWhile((x' i) => i <= 5)                  .ToArray()                  .Wait()                  .IsCollection(7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeLast,The following statement contains a magic number: var record = Observable.Range(1' 2).TakeLast(3).Record();
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeLast,The following statement contains a magic number: var record = Observable.Range(1' 2).TakeLast(3).Record();
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeLast,The following statement contains a magic number: record.Values.IsCollection(1' 2);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeLast,The following statement contains a magic number: record = Observable.Range(1' 3).TakeLast(3).Record();
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeLast,The following statement contains a magic number: record = Observable.Range(1' 3).TakeLast(3).Record();
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeLast,The following statement contains a magic number: record.Values.IsCollection(1' 2' 3);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeLast,The following statement contains a magic number: record.Values.IsCollection(1' 2' 3);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeLast,The following statement contains a magic number: record = Observable.Range(1' 4).TakeLast(3).Record();
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeLast,The following statement contains a magic number: record = Observable.Range(1' 4).TakeLast(3).Record();
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeLast,The following statement contains a magic number: record.Values.IsCollection(2' 3' 4);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeLast,The following statement contains a magic number: record.Values.IsCollection(2' 3' 4);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeLast,The following statement contains a magic number: record.Values.IsCollection(2' 3' 4);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeLast,The following statement contains a magic number: record = Observable.Range(1' 10).TakeLast(3).Record();
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeLast,The following statement contains a magic number: record = Observable.Range(1' 10).TakeLast(3).Record();
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeLast,The following statement contains a magic number: record.Values.IsCollection(8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeLast,The following statement contains a magic number: record.Values.IsCollection(8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeLast,The following statement contains a magic number: record.Values.IsCollection(8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeLast,The following statement contains a magic number: record = Observable.Empty<int>().TakeLast(3).Record();
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeLastDuration,The following statement contains a magic number: var data = Observable.Timer(TimeSpan.Zero' TimeSpan.FromMilliseconds(200))                  .Take(5)                  .TakeLast(TimeSpan.FromMilliseconds(250))                  .ToArrayWait();
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeLastDuration,The following statement contains a magic number: var data = Observable.Timer(TimeSpan.Zero' TimeSpan.FromMilliseconds(200))                  .Take(5)                  .TakeLast(TimeSpan.FromMilliseconds(250))                  .ToArrayWait();
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeLastDuration,The following statement contains a magic number: var data = Observable.Timer(TimeSpan.Zero' TimeSpan.FromMilliseconds(200))                  .Take(5)                  .TakeLast(TimeSpan.FromMilliseconds(250))                  .ToArrayWait();
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeLastDuration,The following statement contains a magic number: data.IsCollection(3' 4);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeLastDuration,The following statement contains a magic number: data.IsCollection(3' 4);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeUntil,The following statement contains a magic number: {                  var a = new Subject<int>();                  var b = new Subject<int>();                  var l = new List<Notification<int>>();                  a.TakeUntil(b).Materialize().Subscribe(l.Add);                  a.OnNext(1);                  a.OnNext(10);                  b.OnNext(1000);                  l.Count.Is(3);                  l[0].Value.Is(1);                  l[1].Value.Is(10);                  l[2].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeUntil,The following statement contains a magic number: {                  var a = new Subject<int>();                  var b = new Subject<int>();                  var l = new List<Notification<int>>();                  a.TakeUntil(b).Materialize().Subscribe(l.Add);                  a.OnNext(1);                  a.OnNext(10);                  b.OnNext(1000);                  l.Count.Is(3);                  l[0].Value.Is(1);                  l[1].Value.Is(10);                  l[2].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeUntil,The following statement contains a magic number: {                  var a = new Subject<int>();                  var b = new Subject<int>();                  var l = new List<Notification<int>>();                  a.TakeUntil(b).Materialize().Subscribe(l.Add);                  a.OnNext(1);                  a.OnNext(10);                  b.OnNext(1000);                  l.Count.Is(3);                  l[0].Value.Is(1);                  l[1].Value.Is(10);                  l[2].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeUntil,The following statement contains a magic number: {                  var a = new Subject<int>();                  var b = new Subject<int>();                  var l = new List<Notification<int>>();                  a.TakeUntil(b).Materialize().Subscribe(l.Add);                  a.OnNext(1);                  a.OnNext(10);                  b.OnNext(1000);                  l.Count.Is(3);                  l[0].Value.Is(1);                  l[1].Value.Is(10);                  l[2].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeUntil,The following statement contains a magic number: {                  var a = new Subject<int>();                  var b = new Subject<int>();                  var l = new List<Notification<int>>();                  a.TakeUntil(b).Materialize().Subscribe(l.Add);                  a.OnNext(1);                  a.OnNext(10);                  b.OnNext(1000);                  l.Count.Is(3);                  l[0].Value.Is(1);                  l[1].Value.Is(10);                  l[2].Kind.Is(NotificationKind.OnCompleted);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeUntil,The following statement contains a magic number: {                  var a = new Subject<int>();                  var b = new Subject<int>();                  var l = new List<Notification<int>>();                  a.TakeUntil(b).Materialize().Subscribe(l.Add);                  a.OnNext(1);                  a.OnNext(10);                  b.OnCompleted();                  l.Count.Is(2);                  b.OnNext(1000);                  l.Count.Is(2);                  a.OnNext(100);                  l.Count.Is(3);                  l[0].Value.Is(1);                  l[1].Value.Is(10);                  l[2].Value.Is(100);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeUntil,The following statement contains a magic number: {                  var a = new Subject<int>();                  var b = new Subject<int>();                  var l = new List<Notification<int>>();                  a.TakeUntil(b).Materialize().Subscribe(l.Add);                  a.OnNext(1);                  a.OnNext(10);                  b.OnCompleted();                  l.Count.Is(2);                  b.OnNext(1000);                  l.Count.Is(2);                  a.OnNext(100);                  l.Count.Is(3);                  l[0].Value.Is(1);                  l[1].Value.Is(10);                  l[2].Value.Is(100);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeUntil,The following statement contains a magic number: {                  var a = new Subject<int>();                  var b = new Subject<int>();                  var l = new List<Notification<int>>();                  a.TakeUntil(b).Materialize().Subscribe(l.Add);                  a.OnNext(1);                  a.OnNext(10);                  b.OnCompleted();                  l.Count.Is(2);                  b.OnNext(1000);                  l.Count.Is(2);                  a.OnNext(100);                  l.Count.Is(3);                  l[0].Value.Is(1);                  l[1].Value.Is(10);                  l[2].Value.Is(100);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeUntil,The following statement contains a magic number: {                  var a = new Subject<int>();                  var b = new Subject<int>();                  var l = new List<Notification<int>>();                  a.TakeUntil(b).Materialize().Subscribe(l.Add);                  a.OnNext(1);                  a.OnNext(10);                  b.OnCompleted();                  l.Count.Is(2);                  b.OnNext(1000);                  l.Count.Is(2);                  a.OnNext(100);                  l.Count.Is(3);                  l[0].Value.Is(1);                  l[1].Value.Is(10);                  l[2].Value.Is(100);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeUntil,The following statement contains a magic number: {                  var a = new Subject<int>();                  var b = new Subject<int>();                  var l = new List<Notification<int>>();                  a.TakeUntil(b).Materialize().Subscribe(l.Add);                  a.OnNext(1);                  a.OnNext(10);                  b.OnCompleted();                  l.Count.Is(2);                  b.OnNext(1000);                  l.Count.Is(2);                  a.OnNext(100);                  l.Count.Is(3);                  l[0].Value.Is(1);                  l[1].Value.Is(10);                  l[2].Value.Is(100);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeUntil,The following statement contains a magic number: {                  var a = new Subject<int>();                  var b = new Subject<int>();                  var l = new List<Notification<int>>();                  a.TakeUntil(b).Materialize().Subscribe(l.Add);                  a.OnNext(1);                  a.OnNext(10);                  b.OnCompleted();                  l.Count.Is(2);                  b.OnNext(1000);                  l.Count.Is(2);                  a.OnNext(100);                  l.Count.Is(3);                  l[0].Value.Is(1);                  l[1].Value.Is(10);                  l[2].Value.Is(100);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeUntil,The following statement contains a magic number: {                  var a = new Subject<int>();                  var b = new Subject<int>();                  var l = new List<Notification<int>>();                  a.TakeUntil(b).Materialize().Subscribe(l.Add);                  a.OnNext(1);                  a.OnNext(10);                  b.OnCompleted();                  l.Count.Is(2);                  b.OnNext(1000);                  l.Count.Is(2);                  a.OnNext(100);                  l.Count.Is(3);                  l[0].Value.Is(1);                  l[1].Value.Is(10);                  l[2].Value.Is(100);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeUntil,The following statement contains a magic number: {                  var a = new Subject<int>();                  var b = new Subject<int>();                  var l = new List<Notification<int>>();                  a.TakeUntil(b).Materialize().Subscribe(l.Add);                  a.OnNext(1);                  a.OnNext(10);                  b.OnCompleted();                  l.Count.Is(2);                  b.OnNext(1000);                  l.Count.Is(2);                  a.OnNext(100);                  l.Count.Is(3);                  l[0].Value.Is(1);                  l[1].Value.Is(10);                  l[2].Value.Is(100);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeUntil,The following statement contains a magic number: {                  var a = new Subject<int>();                  var b = new Subject<int>();                  var l = new List<Notification<int>>();                  a.TakeUntil(b).Materialize().Subscribe(l.Add);                  a.OnNext(1);                  a.OnNext(10);                  b.OnCompleted();                  l.Count.Is(2);                  b.OnNext(1000);                  l.Count.Is(2);                  a.OnNext(100);                  l.Count.Is(3);                  l[0].Value.Is(1);                  l[1].Value.Is(10);                  l[2].Value.Is(100);              }
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeWhile,The following statement contains a magic number: Observable.Range(1' 10)                  .TakeWhile(x => x <= 5)                  .ToArray()                  .Wait()                  .IsCollection(1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeWhile,The following statement contains a magic number: Observable.Range(1' 10)                  .TakeWhile(x => x <= 5)                  .ToArray()                  .Wait()                  .IsCollection(1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeWhile,The following statement contains a magic number: Observable.Range(1' 10)                  .TakeWhile(x => x <= 5)                  .ToArray()                  .Wait()                  .IsCollection(1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeWhile,The following statement contains a magic number: Observable.Range(1' 10)                  .TakeWhile(x => x <= 5)                  .ToArray()                  .Wait()                  .IsCollection(1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeWhile,The following statement contains a magic number: Observable.Range(1' 10)                  .TakeWhile(x => x <= 5)                  .ToArray()                  .Wait()                  .IsCollection(1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservablePagingTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeWhile,The following statement contains a magic number: Observable.Range(1' 10)                  .TakeWhile(x => x <= 5)                  .ToArray()                  .Wait()                  .IsCollection(1' 2' 3' 4' 5);
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DefaultIfEmpty,The following statement contains a magic number: Observable.Range(1' 3).DefaultIfEmpty(-1).ToArrayWait().IsCollection(1' 2' 3);
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DefaultIfEmpty,The following statement contains a magic number: Observable.Range(1' 3).DefaultIfEmpty(-1).ToArrayWait().IsCollection(1' 2' 3);
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DefaultIfEmpty,The following statement contains a magic number: Observable.Range(1' 3).DefaultIfEmpty(-1).ToArrayWait().IsCollection(1' 2' 3);
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Dematerialize,The following statement contains a magic number: m = Observable.Range(1' 3).Materialize().Dematerialize().ToArrayWait();
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Dematerialize,The following statement contains a magic number: m.IsCollection(1' 2' 3);
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Dematerialize,The following statement contains a magic number: m.IsCollection(1' 2' 3);
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Dematerialize,The following statement contains a magic number: Observable.Range(1' 3).Concat(Observable.Throw<int>(new Exception())).Materialize()                  .Dematerialize()                  .Subscribe(x => l.Add(x)' ex => l.Add(1000)' () => l.Add(10000));
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Dematerialize,The following statement contains a magic number: Observable.Range(1' 3).Concat(Observable.Throw<int>(new Exception())).Materialize()                  .Dematerialize()                  .Subscribe(x => l.Add(x)' ex => l.Add(1000)' () => l.Add(10000));
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Dematerialize,The following statement contains a magic number: Observable.Range(1' 3).Concat(Observable.Throw<int>(new Exception())).Materialize()                  .Dematerialize()                  .Subscribe(x => l.Add(x)' ex => l.Add(1000)' () => l.Add(10000));
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Dematerialize,The following statement contains a magic number: l.IsCollection(1' 2' 3' 1000);
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Dematerialize,The following statement contains a magic number: l.IsCollection(1' 2' 3' 1000);
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Dematerialize,The following statement contains a magic number: l.IsCollection(1' 2' 3' 1000);
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Distinct,The following statement contains a magic number: {                  var subject = new Subject<int>();                  int[] array = null;                  subject.Distinct().ToArray().Subscribe(xs => array = xs);                  foreach (var item in new[] { 1' 10' 10' 1' 100' 100' 100' 5' 70' 7 }) { subject.OnNext(item); };                  subject.OnCompleted();                  array.IsCollection(1' 10' 100' 5' 70' 7);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Distinct,The following statement contains a magic number: {                  var subject = new Subject<int>();                  int[] array = null;                  subject.Distinct().ToArray().Subscribe(xs => array = xs);                  foreach (var item in new[] { 1' 10' 10' 1' 100' 100' 100' 5' 70' 7 }) { subject.OnNext(item); };                  subject.OnCompleted();                  array.IsCollection(1' 10' 100' 5' 70' 7);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Distinct,The following statement contains a magic number: {                  var subject = new Subject<int>();                  int[] array = null;                  subject.Distinct().ToArray().Subscribe(xs => array = xs);                  foreach (var item in new[] { 1' 10' 10' 1' 100' 100' 100' 5' 70' 7 }) { subject.OnNext(item); };                  subject.OnCompleted();                  array.IsCollection(1' 10' 100' 5' 70' 7);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Distinct,The following statement contains a magic number: {                  var subject = new Subject<int>();                  int[] array = null;                  subject.Distinct().ToArray().Subscribe(xs => array = xs);                  foreach (var item in new[] { 1' 10' 10' 1' 100' 100' 100' 5' 70' 7 }) { subject.OnNext(item); };                  subject.OnCompleted();                  array.IsCollection(1' 10' 100' 5' 70' 7);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Distinct,The following statement contains a magic number: {                  var subject = new Subject<int>();                  int[] array = null;                  subject.Distinct().ToArray().Subscribe(xs => array = xs);                  foreach (var item in new[] { 1' 10' 10' 1' 100' 100' 100' 5' 70' 7 }) { subject.OnNext(item); };                  subject.OnCompleted();                  array.IsCollection(1' 10' 100' 5' 70' 7);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Distinct,The following statement contains a magic number: {                  var subject = new Subject<int>();                  int[] array = null;                  subject.Distinct().ToArray().Subscribe(xs => array = xs);                  foreach (var item in new[] { 1' 10' 10' 1' 100' 100' 100' 5' 70' 7 }) { subject.OnNext(item); };                  subject.OnCompleted();                  array.IsCollection(1' 10' 100' 5' 70' 7);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Distinct,The following statement contains a magic number: {                  var subject = new Subject<int>();                  int[] array = null;                  subject.Distinct().ToArray().Subscribe(xs => array = xs);                  foreach (var item in new[] { 1' 10' 10' 1' 100' 100' 100' 5' 70' 7 }) { subject.OnNext(item); };                  subject.OnCompleted();                  array.IsCollection(1' 10' 100' 5' 70' 7);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Distinct,The following statement contains a magic number: {                  var subject = new Subject<int>();                  int[] array = null;                  subject.Distinct().ToArray().Subscribe(xs => array = xs);                  foreach (var item in new[] { 1' 10' 10' 1' 100' 100' 100' 5' 70' 7 }) { subject.OnNext(item); };                  subject.OnCompleted();                  array.IsCollection(1' 10' 100' 5' 70' 7);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Distinct,The following statement contains a magic number: {                  var subject = new Subject<int>();                  int[] array = null;                  subject.Distinct().ToArray().Subscribe(xs => array = xs);                  foreach (var item in new[] { 1' 10' 10' 1' 100' 100' 100' 5' 70' 7 }) { subject.OnNext(item); };                  subject.OnCompleted();                  array.IsCollection(1' 10' 100' 5' 70' 7);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Distinct,The following statement contains a magic number: {                  var subject = new Subject<int>();                  int[] array = null;                  subject.Distinct().ToArray().Subscribe(xs => array = xs);                  foreach (var item in new[] { 1' 10' 10' 1' 100' 100' 100' 5' 70' 7 }) { subject.OnNext(item); };                  subject.OnCompleted();                  array.IsCollection(1' 10' 100' 5' 70' 7);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Distinct,The following statement contains a magic number: {                  var subject = new Subject<int>();                  int[] array = null;                  subject.Distinct().ToArray().Subscribe(xs => array = xs);                  foreach (var item in new[] { 1' 10' 10' 1' 100' 100' 100' 5' 70' 7 }) { subject.OnNext(item); };                  subject.OnCompleted();                  array.IsCollection(1' 10' 100' 5' 70' 7);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Distinct,The following statement contains a magic number: {                  var subject = new Subject<int>();                  int[] array = null;                  subject.Distinct().ToArray().Subscribe(xs => array = xs);                  foreach (var item in new[] { 1' 10' 10' 1' 100' 100' 100' 5' 70' 7 }) { subject.OnNext(item); };                  subject.OnCompleted();                  array.IsCollection(1' 10' 100' 5' 70' 7);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Distinct,The following statement contains a magic number: {                  var subject = new Subject<int>();                  int[] array = null;                  subject.Distinct().ToArray().Subscribe(xs => array = xs);                  foreach (var item in new[] { 1' 10' 10' 1' 100' 100' 100' 5' 70' 7 }) { subject.OnNext(item); };                  subject.OnCompleted();                  array.IsCollection(1' 10' 100' 5' 70' 7);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Distinct,The following statement contains a magic number: {                  var subject = new Subject<int>();                  int[] array = null;                  subject.Distinct(x => x' EqualityComparer<int>.Default).ToArray().Subscribe(xs => array = xs);                                           foreach (var item in new[] { 1' 10' 10' 1' 100' 100' 100' 5' 70' 7 }) { subject.OnNext(item); };                  subject.OnCompleted();                  array.IsCollection(1' 10' 100' 5' 70' 7);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Distinct,The following statement contains a magic number: {                  var subject = new Subject<int>();                  int[] array = null;                  subject.Distinct(x => x' EqualityComparer<int>.Default).ToArray().Subscribe(xs => array = xs);                                           foreach (var item in new[] { 1' 10' 10' 1' 100' 100' 100' 5' 70' 7 }) { subject.OnNext(item); };                  subject.OnCompleted();                  array.IsCollection(1' 10' 100' 5' 70' 7);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Distinct,The following statement contains a magic number: {                  var subject = new Subject<int>();                  int[] array = null;                  subject.Distinct(x => x' EqualityComparer<int>.Default).ToArray().Subscribe(xs => array = xs);                                           foreach (var item in new[] { 1' 10' 10' 1' 100' 100' 100' 5' 70' 7 }) { subject.OnNext(item); };                  subject.OnCompleted();                  array.IsCollection(1' 10' 100' 5' 70' 7);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Distinct,The following statement contains a magic number: {                  var subject = new Subject<int>();                  int[] array = null;                  subject.Distinct(x => x' EqualityComparer<int>.Default).ToArray().Subscribe(xs => array = xs);                                           foreach (var item in new[] { 1' 10' 10' 1' 100' 100' 100' 5' 70' 7 }) { subject.OnNext(item); };                  subject.OnCompleted();                  array.IsCollection(1' 10' 100' 5' 70' 7);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Distinct,The following statement contains a magic number: {                  var subject = new Subject<int>();                  int[] array = null;                  subject.Distinct(x => x' EqualityComparer<int>.Default).ToArray().Subscribe(xs => array = xs);                                           foreach (var item in new[] { 1' 10' 10' 1' 100' 100' 100' 5' 70' 7 }) { subject.OnNext(item); };                  subject.OnCompleted();                  array.IsCollection(1' 10' 100' 5' 70' 7);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Distinct,The following statement contains a magic number: {                  var subject = new Subject<int>();                  int[] array = null;                  subject.Distinct(x => x' EqualityComparer<int>.Default).ToArray().Subscribe(xs => array = xs);                                           foreach (var item in new[] { 1' 10' 10' 1' 100' 100' 100' 5' 70' 7 }) { subject.OnNext(item); };                  subject.OnCompleted();                  array.IsCollection(1' 10' 100' 5' 70' 7);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Distinct,The following statement contains a magic number: {                  var subject = new Subject<int>();                  int[] array = null;                  subject.Distinct(x => x' EqualityComparer<int>.Default).ToArray().Subscribe(xs => array = xs);                                           foreach (var item in new[] { 1' 10' 10' 1' 100' 100' 100' 5' 70' 7 }) { subject.OnNext(item); };                  subject.OnCompleted();                  array.IsCollection(1' 10' 100' 5' 70' 7);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Distinct,The following statement contains a magic number: {                  var subject = new Subject<int>();                  int[] array = null;                  subject.Distinct(x => x' EqualityComparer<int>.Default).ToArray().Subscribe(xs => array = xs);                                           foreach (var item in new[] { 1' 10' 10' 1' 100' 100' 100' 5' 70' 7 }) { subject.OnNext(item); };                  subject.OnCompleted();                  array.IsCollection(1' 10' 100' 5' 70' 7);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Distinct,The following statement contains a magic number: {                  var subject = new Subject<int>();                  int[] array = null;                  subject.Distinct(x => x' EqualityComparer<int>.Default).ToArray().Subscribe(xs => array = xs);                                           foreach (var item in new[] { 1' 10' 10' 1' 100' 100' 100' 5' 70' 7 }) { subject.OnNext(item); };                  subject.OnCompleted();                  array.IsCollection(1' 10' 100' 5' 70' 7);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Distinct,The following statement contains a magic number: {                  var subject = new Subject<int>();                  int[] array = null;                  subject.Distinct(x => x' EqualityComparer<int>.Default).ToArray().Subscribe(xs => array = xs);                                           foreach (var item in new[] { 1' 10' 10' 1' 100' 100' 100' 5' 70' 7 }) { subject.OnNext(item); };                  subject.OnCompleted();                  array.IsCollection(1' 10' 100' 5' 70' 7);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Distinct,The following statement contains a magic number: {                  var subject = new Subject<int>();                  int[] array = null;                  subject.Distinct(x => x' EqualityComparer<int>.Default).ToArray().Subscribe(xs => array = xs);                                           foreach (var item in new[] { 1' 10' 10' 1' 100' 100' 100' 5' 70' 7 }) { subject.OnNext(item); };                  subject.OnCompleted();                  array.IsCollection(1' 10' 100' 5' 70' 7);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Distinct,The following statement contains a magic number: {                  var subject = new Subject<int>();                  int[] array = null;                  subject.Distinct(x => x' EqualityComparer<int>.Default).ToArray().Subscribe(xs => array = xs);                                           foreach (var item in new[] { 1' 10' 10' 1' 100' 100' 100' 5' 70' 7 }) { subject.OnNext(item); };                  subject.OnCompleted();                  array.IsCollection(1' 10' 100' 5' 70' 7);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Distinct,The following statement contains a magic number: {                  var subject = new Subject<int>();                  int[] array = null;                  subject.Distinct(x => x' EqualityComparer<int>.Default).ToArray().Subscribe(xs => array = xs);                                           foreach (var item in new[] { 1' 10' 10' 1' 100' 100' 100' 5' 70' 7 }) { subject.OnNext(item); };                  subject.OnCompleted();                  array.IsCollection(1' 10' 100' 5' 70' 7);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DistinctUntilChanged,The following statement contains a magic number: {                  var subject = new Subject<int>();                  int[] array = null;                  subject.DistinctUntilChanged().ToArray().Subscribe(xs => array = xs);                  foreach (var item in new[] { 1' 10' 10' 1' 100' 100' 100' 5 }) { subject.OnNext(item); };                  subject.OnCompleted();                  array.IsCollection(1' 10' 1' 100' 5);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DistinctUntilChanged,The following statement contains a magic number: {                  var subject = new Subject<int>();                  int[] array = null;                  subject.DistinctUntilChanged().ToArray().Subscribe(xs => array = xs);                  foreach (var item in new[] { 1' 10' 10' 1' 100' 100' 100' 5 }) { subject.OnNext(item); };                  subject.OnCompleted();                  array.IsCollection(1' 10' 1' 100' 5);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DistinctUntilChanged,The following statement contains a magic number: {                  var subject = new Subject<int>();                  int[] array = null;                  subject.DistinctUntilChanged().ToArray().Subscribe(xs => array = xs);                  foreach (var item in new[] { 1' 10' 10' 1' 100' 100' 100' 5 }) { subject.OnNext(item); };                  subject.OnCompleted();                  array.IsCollection(1' 10' 1' 100' 5);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DistinctUntilChanged,The following statement contains a magic number: {                  var subject = new Subject<int>();                  int[] array = null;                  subject.DistinctUntilChanged().ToArray().Subscribe(xs => array = xs);                  foreach (var item in new[] { 1' 10' 10' 1' 100' 100' 100' 5 }) { subject.OnNext(item); };                  subject.OnCompleted();                  array.IsCollection(1' 10' 1' 100' 5);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DistinctUntilChanged,The following statement contains a magic number: {                  var subject = new Subject<int>();                  int[] array = null;                  subject.DistinctUntilChanged().ToArray().Subscribe(xs => array = xs);                  foreach (var item in new[] { 1' 10' 10' 1' 100' 100' 100' 5 }) { subject.OnNext(item); };                  subject.OnCompleted();                  array.IsCollection(1' 10' 1' 100' 5);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DistinctUntilChanged,The following statement contains a magic number: {                  var subject = new Subject<int>();                  int[] array = null;                  subject.DistinctUntilChanged().ToArray().Subscribe(xs => array = xs);                  foreach (var item in new[] { 1' 10' 10' 1' 100' 100' 100' 5 }) { subject.OnNext(item); };                  subject.OnCompleted();                  array.IsCollection(1' 10' 1' 100' 5);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DistinctUntilChanged,The following statement contains a magic number: {                  var subject = new Subject<int>();                  int[] array = null;                  subject.DistinctUntilChanged().ToArray().Subscribe(xs => array = xs);                  foreach (var item in new[] { 1' 10' 10' 1' 100' 100' 100' 5 }) { subject.OnNext(item); };                  subject.OnCompleted();                  array.IsCollection(1' 10' 1' 100' 5);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DistinctUntilChanged,The following statement contains a magic number: {                  var subject = new Subject<int>();                  int[] array = null;                  subject.DistinctUntilChanged().ToArray().Subscribe(xs => array = xs);                  foreach (var item in new[] { 1' 10' 10' 1' 100' 100' 100' 5 }) { subject.OnNext(item); };                  subject.OnCompleted();                  array.IsCollection(1' 10' 1' 100' 5);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DistinctUntilChanged,The following statement contains a magic number: {                  var subject = new Subject<int>();                  int[] array = null;                  subject.DistinctUntilChanged().ToArray().Subscribe(xs => array = xs);                  foreach (var item in new[] { 1' 10' 10' 1' 100' 100' 100' 5 }) { subject.OnNext(item); };                  subject.OnCompleted();                  array.IsCollection(1' 10' 1' 100' 5);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DistinctUntilChanged,The following statement contains a magic number: {                  var subject = new Subject<int>();                  int[] array = null;                  subject.DistinctUntilChanged(x => x' EqualityComparer<int>.Default).ToArray().Subscribe(xs => array = xs);                  foreach (var item in new[] { 1' 10' 10' 1' 100' 100' 100' 5 }) { subject.OnNext(item); };                  subject.OnCompleted();                  array.IsCollection(1' 10' 1' 100' 5);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DistinctUntilChanged,The following statement contains a magic number: {                  var subject = new Subject<int>();                  int[] array = null;                  subject.DistinctUntilChanged(x => x' EqualityComparer<int>.Default).ToArray().Subscribe(xs => array = xs);                  foreach (var item in new[] { 1' 10' 10' 1' 100' 100' 100' 5 }) { subject.OnNext(item); };                  subject.OnCompleted();                  array.IsCollection(1' 10' 1' 100' 5);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DistinctUntilChanged,The following statement contains a magic number: {                  var subject = new Subject<int>();                  int[] array = null;                  subject.DistinctUntilChanged(x => x' EqualityComparer<int>.Default).ToArray().Subscribe(xs => array = xs);                  foreach (var item in new[] { 1' 10' 10' 1' 100' 100' 100' 5 }) { subject.OnNext(item); };                  subject.OnCompleted();                  array.IsCollection(1' 10' 1' 100' 5);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DistinctUntilChanged,The following statement contains a magic number: {                  var subject = new Subject<int>();                  int[] array = null;                  subject.DistinctUntilChanged(x => x' EqualityComparer<int>.Default).ToArray().Subscribe(xs => array = xs);                  foreach (var item in new[] { 1' 10' 10' 1' 100' 100' 100' 5 }) { subject.OnNext(item); };                  subject.OnCompleted();                  array.IsCollection(1' 10' 1' 100' 5);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DistinctUntilChanged,The following statement contains a magic number: {                  var subject = new Subject<int>();                  int[] array = null;                  subject.DistinctUntilChanged(x => x' EqualityComparer<int>.Default).ToArray().Subscribe(xs => array = xs);                  foreach (var item in new[] { 1' 10' 10' 1' 100' 100' 100' 5 }) { subject.OnNext(item); };                  subject.OnCompleted();                  array.IsCollection(1' 10' 1' 100' 5);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DistinctUntilChanged,The following statement contains a magic number: {                  var subject = new Subject<int>();                  int[] array = null;                  subject.DistinctUntilChanged(x => x' EqualityComparer<int>.Default).ToArray().Subscribe(xs => array = xs);                  foreach (var item in new[] { 1' 10' 10' 1' 100' 100' 100' 5 }) { subject.OnNext(item); };                  subject.OnCompleted();                  array.IsCollection(1' 10' 1' 100' 5);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DistinctUntilChanged,The following statement contains a magic number: {                  var subject = new Subject<int>();                  int[] array = null;                  subject.DistinctUntilChanged(x => x' EqualityComparer<int>.Default).ToArray().Subscribe(xs => array = xs);                  foreach (var item in new[] { 1' 10' 10' 1' 100' 100' 100' 5 }) { subject.OnNext(item); };                  subject.OnCompleted();                  array.IsCollection(1' 10' 1' 100' 5);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DistinctUntilChanged,The following statement contains a magic number: {                  var subject = new Subject<int>();                  int[] array = null;                  subject.DistinctUntilChanged(x => x' EqualityComparer<int>.Default).ToArray().Subscribe(xs => array = xs);                  foreach (var item in new[] { 1' 10' 10' 1' 100' 100' 100' 5 }) { subject.OnNext(item); };                  subject.OnCompleted();                  array.IsCollection(1' 10' 1' 100' 5);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DistinctUntilChanged,The following statement contains a magic number: {                  var subject = new Subject<int>();                  int[] array = null;                  subject.DistinctUntilChanged(x => x' EqualityComparer<int>.Default).ToArray().Subscribe(xs => array = xs);                  foreach (var item in new[] { 1' 10' 10' 1' 100' 100' 100' 5 }) { subject.OnNext(item); };                  subject.OnCompleted();                  array.IsCollection(1' 10' 1' 100' 5);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ForEachAsync,The following statement contains a magic number: {                  var list = new List<int>();                  var xs = Observable.Range(1' 10).ForEachAsync(x => list.Add(x)).ToArray().Wait();                  list.IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);                  xs.Length.Is(1);                  xs[0].Is(Unit.Default);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ForEachAsync,The following statement contains a magic number: {                  var list = new List<int>();                  var xs = Observable.Range(1' 10).ForEachAsync(x => list.Add(x)).ToArray().Wait();                  list.IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);                  xs.Length.Is(1);                  xs[0].Is(Unit.Default);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ForEachAsync,The following statement contains a magic number: {                  var list = new List<int>();                  var xs = Observable.Range(1' 10).ForEachAsync(x => list.Add(x)).ToArray().Wait();                  list.IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);                  xs.Length.Is(1);                  xs[0].Is(Unit.Default);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ForEachAsync,The following statement contains a magic number: {                  var list = new List<int>();                  var xs = Observable.Range(1' 10).ForEachAsync(x => list.Add(x)).ToArray().Wait();                  list.IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);                  xs.Length.Is(1);                  xs[0].Is(Unit.Default);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ForEachAsync,The following statement contains a magic number: {                  var list = new List<int>();                  var xs = Observable.Range(1' 10).ForEachAsync(x => list.Add(x)).ToArray().Wait();                  list.IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);                  xs.Length.Is(1);                  xs[0].Is(Unit.Default);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ForEachAsync,The following statement contains a magic number: {                  var list = new List<int>();                  var xs = Observable.Range(1' 10).ForEachAsync(x => list.Add(x)).ToArray().Wait();                  list.IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);                  xs.Length.Is(1);                  xs[0].Is(Unit.Default);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ForEachAsync,The following statement contains a magic number: {                  var list = new List<int>();                  var xs = Observable.Range(1' 10).ForEachAsync(x => list.Add(x)).ToArray().Wait();                  list.IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);                  xs.Length.Is(1);                  xs[0].Is(Unit.Default);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ForEachAsync,The following statement contains a magic number: {                  var list = new List<int>();                  var xs = Observable.Range(1' 10).ForEachAsync(x => list.Add(x)).ToArray().Wait();                  list.IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);                  xs.Length.Is(1);                  xs[0].Is(Unit.Default);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ForEachAsync,The following statement contains a magic number: {                  var list = new List<int>();                  var xs = Observable.Range(1' 10).ForEachAsync(x => list.Add(x)).ToArray().Wait();                  list.IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);                  xs.Length.Is(1);                  xs[0].Is(Unit.Default);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ForEachAsync,The following statement contains a magic number: {                  var list = new List<int>();                  var xs = Observable.Range(1' 10).ForEachAsync(x => list.Add(x)).ToArray().Wait();                  list.IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);                  xs.Length.Is(1);                  xs[0].Is(Unit.Default);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ForEachAsync,The following statement contains a magic number: {                  var list = new List<int>();                  var listI = new List<int>();                  var xs = Observable.Range(1' 10).ForEachAsync((x' i) =>                  {                      list.Add(x);                      listI.Add(i);                  }).ToArray().Wait();                  list.IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);                  listI.IsCollection(0' 1' 2' 3' 4' 5' 6' 7' 8' 9);                  xs.Length.Is(1);                  xs[0].Is(Unit.Default);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ForEachAsync,The following statement contains a magic number: {                  var list = new List<int>();                  var listI = new List<int>();                  var xs = Observable.Range(1' 10).ForEachAsync((x' i) =>                  {                      list.Add(x);                      listI.Add(i);                  }).ToArray().Wait();                  list.IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);                  listI.IsCollection(0' 1' 2' 3' 4' 5' 6' 7' 8' 9);                  xs.Length.Is(1);                  xs[0].Is(Unit.Default);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ForEachAsync,The following statement contains a magic number: {                  var list = new List<int>();                  var listI = new List<int>();                  var xs = Observable.Range(1' 10).ForEachAsync((x' i) =>                  {                      list.Add(x);                      listI.Add(i);                  }).ToArray().Wait();                  list.IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);                  listI.IsCollection(0' 1' 2' 3' 4' 5' 6' 7' 8' 9);                  xs.Length.Is(1);                  xs[0].Is(Unit.Default);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ForEachAsync,The following statement contains a magic number: {                  var list = new List<int>();                  var listI = new List<int>();                  var xs = Observable.Range(1' 10).ForEachAsync((x' i) =>                  {                      list.Add(x);                      listI.Add(i);                  }).ToArray().Wait();                  list.IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);                  listI.IsCollection(0' 1' 2' 3' 4' 5' 6' 7' 8' 9);                  xs.Length.Is(1);                  xs[0].Is(Unit.Default);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ForEachAsync,The following statement contains a magic number: {                  var list = new List<int>();                  var listI = new List<int>();                  var xs = Observable.Range(1' 10).ForEachAsync((x' i) =>                  {                      list.Add(x);                      listI.Add(i);                  }).ToArray().Wait();                  list.IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);                  listI.IsCollection(0' 1' 2' 3' 4' 5' 6' 7' 8' 9);                  xs.Length.Is(1);                  xs[0].Is(Unit.Default);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ForEachAsync,The following statement contains a magic number: {                  var list = new List<int>();                  var listI = new List<int>();                  var xs = Observable.Range(1' 10).ForEachAsync((x' i) =>                  {                      list.Add(x);                      listI.Add(i);                  }).ToArray().Wait();                  list.IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);                  listI.IsCollection(0' 1' 2' 3' 4' 5' 6' 7' 8' 9);                  xs.Length.Is(1);                  xs[0].Is(Unit.Default);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ForEachAsync,The following statement contains a magic number: {                  var list = new List<int>();                  var listI = new List<int>();                  var xs = Observable.Range(1' 10).ForEachAsync((x' i) =>                  {                      list.Add(x);                      listI.Add(i);                  }).ToArray().Wait();                  list.IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);                  listI.IsCollection(0' 1' 2' 3' 4' 5' 6' 7' 8' 9);                  xs.Length.Is(1);                  xs[0].Is(Unit.Default);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ForEachAsync,The following statement contains a magic number: {                  var list = new List<int>();                  var listI = new List<int>();                  var xs = Observable.Range(1' 10).ForEachAsync((x' i) =>                  {                      list.Add(x);                      listI.Add(i);                  }).ToArray().Wait();                  list.IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);                  listI.IsCollection(0' 1' 2' 3' 4' 5' 6' 7' 8' 9);                  xs.Length.Is(1);                  xs[0].Is(Unit.Default);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ForEachAsync,The following statement contains a magic number: {                  var list = new List<int>();                  var listI = new List<int>();                  var xs = Observable.Range(1' 10).ForEachAsync((x' i) =>                  {                      list.Add(x);                      listI.Add(i);                  }).ToArray().Wait();                  list.IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);                  listI.IsCollection(0' 1' 2' 3' 4' 5' 6' 7' 8' 9);                  xs.Length.Is(1);                  xs[0].Is(Unit.Default);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ForEachAsync,The following statement contains a magic number: {                  var list = new List<int>();                  var listI = new List<int>();                  var xs = Observable.Range(1' 10).ForEachAsync((x' i) =>                  {                      list.Add(x);                      listI.Add(i);                  }).ToArray().Wait();                  list.IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);                  listI.IsCollection(0' 1' 2' 3' 4' 5' 6' 7' 8' 9);                  xs.Length.Is(1);                  xs[0].Is(Unit.Default);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ForEachAsync,The following statement contains a magic number: {                  var list = new List<int>();                  var listI = new List<int>();                  var xs = Observable.Range(1' 10).ForEachAsync((x' i) =>                  {                      list.Add(x);                      listI.Add(i);                  }).ToArray().Wait();                  list.IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);                  listI.IsCollection(0' 1' 2' 3' 4' 5' 6' 7' 8' 9);                  xs.Length.Is(1);                  xs[0].Is(Unit.Default);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ForEachAsync,The following statement contains a magic number: {                  var list = new List<int>();                  var listI = new List<int>();                  var xs = Observable.Range(1' 10).ForEachAsync((x' i) =>                  {                      list.Add(x);                      listI.Add(i);                  }).ToArray().Wait();                  list.IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);                  listI.IsCollection(0' 1' 2' 3' 4' 5' 6' 7' 8' 9);                  xs.Length.Is(1);                  xs[0].Is(Unit.Default);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ForEachAsync,The following statement contains a magic number: {                  var list = new List<int>();                  var listI = new List<int>();                  var xs = Observable.Range(1' 10).ForEachAsync((x' i) =>                  {                      list.Add(x);                      listI.Add(i);                  }).ToArray().Wait();                  list.IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);                  listI.IsCollection(0' 1' 2' 3' 4' 5' 6' 7' 8' 9);                  xs.Length.Is(1);                  xs[0].Is(Unit.Default);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ForEachAsync,The following statement contains a magic number: {                  var list = new List<int>();                  var listI = new List<int>();                  var xs = Observable.Range(1' 10).ForEachAsync((x' i) =>                  {                      list.Add(x);                      listI.Add(i);                  }).ToArray().Wait();                  list.IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);                  listI.IsCollection(0' 1' 2' 3' 4' 5' 6' 7' 8' 9);                  xs.Length.Is(1);                  xs[0].Is(Unit.Default);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ForEachAsync,The following statement contains a magic number: {                  var list = new List<int>();                  var listI = new List<int>();                  var xs = Observable.Range(1' 10).ForEachAsync((x' i) =>                  {                      list.Add(x);                      listI.Add(i);                  }).ToArray().Wait();                  list.IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);                  listI.IsCollection(0' 1' 2' 3' 4' 5' 6' 7' 8' 9);                  xs.Length.Is(1);                  xs[0].Is(Unit.Default);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ForEachAsync,The following statement contains a magic number: {                  var list = new List<int>();                  var listI = new List<int>();                  var xs = Observable.Range(1' 10).ForEachAsync((x' i) =>                  {                      list.Add(x);                      listI.Add(i);                  }).ToArray().Wait();                  list.IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);                  listI.IsCollection(0' 1' 2' 3' 4' 5' 6' 7' 8' 9);                  xs.Length.Is(1);                  xs[0].Is(Unit.Default);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ForEachAsync,The following statement contains a magic number: {                  var list = new List<int>();                  var listI = new List<int>();                  var xs = Observable.Range(1' 10).ForEachAsync((x' i) =>                  {                      list.Add(x);                      listI.Add(i);                  }).ToArray().Wait();                  list.IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);                  listI.IsCollection(0' 1' 2' 3' 4' 5' 6' 7' 8' 9);                  xs.Length.Is(1);                  xs[0].Is(Unit.Default);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ForEachAsync,The following statement contains a magic number: {                  var list = new List<int>();                  var listI = new List<int>();                  var xs = Observable.Range(1' 10).ForEachAsync((x' i) =>                  {                      list.Add(x);                      listI.Add(i);                  }).ToArray().Wait();                  list.IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);                  listI.IsCollection(0' 1' 2' 3' 4' 5' 6' 7' 8' 9);                  xs.Length.Is(1);                  xs[0].Is(Unit.Default);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,IgnoreElements,The following statement contains a magic number: var xs = Observable.Range(1' 10).IgnoreElements().Materialize().ToArrayWait();
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Materialize,The following statement contains a magic number: m = Observable.Range(1' 3).Materialize().ToArrayWait();
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Materialize,The following statement contains a magic number: m[1].Value.Is(2);
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Materialize,The following statement contains a magic number: m[2].Value.Is(3);
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Materialize,The following statement contains a magic number: m[2].Value.Is(3);
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Materialize,The following statement contains a magic number: m[3].Kind.Is(NotificationKind.OnCompleted);
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Materialize,The following statement contains a magic number: m = Observable.Range(1' 3).Concat(Observable.Throw<int>(new Exception())).Materialize().ToArrayWait();
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Materialize,The following statement contains a magic number: m[1].Value.Is(2);
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Materialize,The following statement contains a magic number: m[2].Value.Is(3);
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Materialize,The following statement contains a magic number: m[2].Value.Is(3);
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Materialize,The following statement contains a magic number: m[3].Kind.Is(NotificationKind.OnError);
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Select,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Select(x => x * x).Subscribe(x => list.Add(x));                  a.OnNext(100);                  a.OnNext(200);                  a.OnNext(300);                  a.OnCompleted();                  list.Count.Is(3);                  list.IsCollection(10000' 40000' 90000);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Select,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Select(x => x * x).Subscribe(x => list.Add(x));                  a.OnNext(100);                  a.OnNext(200);                  a.OnNext(300);                  a.OnCompleted();                  list.Count.Is(3);                  list.IsCollection(10000' 40000' 90000);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Select,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Select(x => x * x).Subscribe(x => list.Add(x));                  a.OnNext(100);                  a.OnNext(200);                  a.OnNext(300);                  a.OnCompleted();                  list.Count.Is(3);                  list.IsCollection(10000' 40000' 90000);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Select,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Select(x => x * x).Subscribe(x => list.Add(x));                  a.OnNext(100);                  a.OnNext(200);                  a.OnNext(300);                  a.OnCompleted();                  list.Count.Is(3);                  list.IsCollection(10000' 40000' 90000);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Select,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Select(x => x * x).Subscribe(x => list.Add(x));                  a.OnNext(100);                  a.OnNext(200);                  a.OnNext(300);                  a.OnCompleted();                  list.Count.Is(3);                  list.IsCollection(10000' 40000' 90000);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Select,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Select(x => x * x).Subscribe(x => list.Add(x));                  a.OnNext(100);                  a.OnNext(200);                  a.OnNext(300);                  a.OnCompleted();                  list.Count.Is(3);                  list.IsCollection(10000' 40000' 90000);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Select,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Select(x => x * x).Subscribe(x => list.Add(x));                  a.OnNext(100);                  a.OnNext(200);                  a.OnNext(300);                  a.OnCompleted();                  list.Count.Is(3);                  list.IsCollection(10000' 40000' 90000);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Select,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Select((x' i) => x * i).Subscribe(x => list.Add(x));                  a.OnNext(100);                  a.OnNext(200);                  a.OnNext(300);                  a.OnCompleted();                  list.Count.Is(3);                  list.IsCollection(0' 200' 600);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Select,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Select((x' i) => x * i).Subscribe(x => list.Add(x));                  a.OnNext(100);                  a.OnNext(200);                  a.OnNext(300);                  a.OnCompleted();                  list.Count.Is(3);                  list.IsCollection(0' 200' 600);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Select,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Select((x' i) => x * i).Subscribe(x => list.Add(x));                  a.OnNext(100);                  a.OnNext(200);                  a.OnNext(300);                  a.OnCompleted();                  list.Count.Is(3);                  list.IsCollection(0' 200' 600);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Select,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Select((x' i) => x * i).Subscribe(x => list.Add(x));                  a.OnNext(100);                  a.OnNext(200);                  a.OnNext(300);                  a.OnCompleted();                  list.Count.Is(3);                  list.IsCollection(0' 200' 600);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Select,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Select((x' i) => x * i).Subscribe(x => list.Add(x));                  a.OnNext(100);                  a.OnNext(200);                  a.OnNext(300);                  a.OnCompleted();                  list.Count.Is(3);                  list.IsCollection(0' 200' 600);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Select,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Select((x' i) => x * i).Subscribe(x => list.Add(x));                  a.OnNext(100);                  a.OnNext(200);                  a.OnNext(300);                  a.OnCompleted();                  list.Count.Is(3);                  list.IsCollection(0' 200' 600);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Select,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Select(x => x * x).Select(x => x * x).Subscribe(x => list.Add(x));                  a.OnNext(2);                  a.OnNext(4);                  a.OnNext(8);                  a.OnCompleted();                  list.Count.Is(3);                  list.IsCollection(16' 256' 4096);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Select,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Select(x => x * x).Select(x => x * x).Subscribe(x => list.Add(x));                  a.OnNext(2);                  a.OnNext(4);                  a.OnNext(8);                  a.OnCompleted();                  list.Count.Is(3);                  list.IsCollection(16' 256' 4096);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Select,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Select(x => x * x).Select(x => x * x).Subscribe(x => list.Add(x));                  a.OnNext(2);                  a.OnNext(4);                  a.OnNext(8);                  a.OnCompleted();                  list.Count.Is(3);                  list.IsCollection(16' 256' 4096);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Select,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Select(x => x * x).Select(x => x * x).Subscribe(x => list.Add(x));                  a.OnNext(2);                  a.OnNext(4);                  a.OnNext(8);                  a.OnCompleted();                  list.Count.Is(3);                  list.IsCollection(16' 256' 4096);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Select,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Select(x => x * x).Select(x => x * x).Subscribe(x => list.Add(x));                  a.OnNext(2);                  a.OnNext(4);                  a.OnNext(8);                  a.OnCompleted();                  list.Count.Is(3);                  list.IsCollection(16' 256' 4096);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Select,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Select(x => x * x).Select(x => x * x).Subscribe(x => list.Add(x));                  a.OnNext(2);                  a.OnNext(4);                  a.OnNext(8);                  a.OnCompleted();                  list.Count.Is(3);                  list.IsCollection(16' 256' 4096);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Select,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Select(x => x * x).Select(x => x * x).Subscribe(x => list.Add(x));                  a.OnNext(2);                  a.OnNext(4);                  a.OnNext(8);                  a.OnCompleted();                  list.Count.Is(3);                  list.IsCollection(16' 256' 4096);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Select,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Select((x' i) => x * i).Select(x => x * 10).Subscribe(x => list.Add(x));                  a.OnNext(100);                  a.OnNext(200);                  a.OnNext(300);                  a.OnCompleted();                  list.Count.Is(3);                  list.IsCollection(0' 2000' 6000);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Select,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Select((x' i) => x * i).Select(x => x * 10).Subscribe(x => list.Add(x));                  a.OnNext(100);                  a.OnNext(200);                  a.OnNext(300);                  a.OnCompleted();                  list.Count.Is(3);                  list.IsCollection(0' 2000' 6000);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Select,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Select((x' i) => x * i).Select(x => x * 10).Subscribe(x => list.Add(x));                  a.OnNext(100);                  a.OnNext(200);                  a.OnNext(300);                  a.OnCompleted();                  list.Count.Is(3);                  list.IsCollection(0' 2000' 6000);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Select,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Select((x' i) => x * i).Select(x => x * 10).Subscribe(x => list.Add(x));                  a.OnNext(100);                  a.OnNext(200);                  a.OnNext(300);                  a.OnCompleted();                  list.Count.Is(3);                  list.IsCollection(0' 2000' 6000);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Select,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Select((x' i) => x * i).Select(x => x * 10).Subscribe(x => list.Add(x));                  a.OnNext(100);                  a.OnNext(200);                  a.OnNext(300);                  a.OnCompleted();                  list.Count.Is(3);                  list.IsCollection(0' 2000' 6000);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Select,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Select((x' i) => x * i).Select(x => x * 10).Subscribe(x => list.Add(x));                  a.OnNext(100);                  a.OnNext(200);                  a.OnNext(300);                  a.OnCompleted();                  list.Count.Is(3);                  list.IsCollection(0' 2000' 6000);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Select,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Select((x' i) => x * i).Select(x => x * 10).Subscribe(x => list.Add(x));                  a.OnNext(100);                  a.OnNext(200);                  a.OnNext(300);                  a.OnCompleted();                  list.Count.Is(3);                  list.IsCollection(0' 2000' 6000);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectMany,The following statement contains a magic number: a.OnNext(10);
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectMany,The following statement contains a magic number: b.OnNext(100);
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectMany,The following statement contains a magic number: list[0].Is(100);
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToArray,The following statement contains a magic number: subject.OnNext(10);
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToArray,The following statement contains a magic number: subject.OnNext(100);
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToArray,The following statement contains a magic number: array.IsCollection(1' 10' 100);
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToArray,The following statement contains a magic number: array.IsCollection(1' 10' 100);
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToArray_Dispose,The following statement contains a magic number: subject.OnNext(10);
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToArray_Dispose,The following statement contains a magic number: subject.OnNext(100);
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Wait,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(_ =>              {                  Thread.Sleep(TimeSpan.FromSeconds(1));                  subject.OnNext(100);                  subject.OnCompleted();              });
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Wait,The following statement contains a magic number: subject.Wait().Is(100);
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Where,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Where(x => x % 3 == 0).Subscribe(x => list.Add(x));                  a.OnNext(3);                  a.OnNext(5);                  a.OnNext(7);                  a.OnNext(9);                  a.OnNext(300);                  a.OnCompleted();                  list.IsCollection(3' 9' 300);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Where,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Where(x => x % 3 == 0).Subscribe(x => list.Add(x));                  a.OnNext(3);                  a.OnNext(5);                  a.OnNext(7);                  a.OnNext(9);                  a.OnNext(300);                  a.OnCompleted();                  list.IsCollection(3' 9' 300);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Where,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Where(x => x % 3 == 0).Subscribe(x => list.Add(x));                  a.OnNext(3);                  a.OnNext(5);                  a.OnNext(7);                  a.OnNext(9);                  a.OnNext(300);                  a.OnCompleted();                  list.IsCollection(3' 9' 300);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Where,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Where(x => x % 3 == 0).Subscribe(x => list.Add(x));                  a.OnNext(3);                  a.OnNext(5);                  a.OnNext(7);                  a.OnNext(9);                  a.OnNext(300);                  a.OnCompleted();                  list.IsCollection(3' 9' 300);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Where,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Where(x => x % 3 == 0).Subscribe(x => list.Add(x));                  a.OnNext(3);                  a.OnNext(5);                  a.OnNext(7);                  a.OnNext(9);                  a.OnNext(300);                  a.OnCompleted();                  list.IsCollection(3' 9' 300);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Where,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Where(x => x % 3 == 0).Subscribe(x => list.Add(x));                  a.OnNext(3);                  a.OnNext(5);                  a.OnNext(7);                  a.OnNext(9);                  a.OnNext(300);                  a.OnCompleted();                  list.IsCollection(3' 9' 300);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Where,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Where(x => x % 3 == 0).Subscribe(x => list.Add(x));                  a.OnNext(3);                  a.OnNext(5);                  a.OnNext(7);                  a.OnNext(9);                  a.OnNext(300);                  a.OnCompleted();                  list.IsCollection(3' 9' 300);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Where,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Where(x => x % 3 == 0).Subscribe(x => list.Add(x));                  a.OnNext(3);                  a.OnNext(5);                  a.OnNext(7);                  a.OnNext(9);                  a.OnNext(300);                  a.OnCompleted();                  list.IsCollection(3' 9' 300);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Where,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Where(x => x % 3 == 0).Subscribe(x => list.Add(x));                  a.OnNext(3);                  a.OnNext(5);                  a.OnNext(7);                  a.OnNext(9);                  a.OnNext(300);                  a.OnCompleted();                  list.IsCollection(3' 9' 300);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Where,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Where((x' i) => (x + i) % 3 == 0).Subscribe(x => list.Add(x));                  a.OnNext(3); // 3 + 0                  a.OnNext(5); // 5 + 1                  a.OnNext(7); // 7 + 2                  a.OnNext(9); // 9 + 3                  a.OnNext(300); // 300 + 4                  a.OnCompleted();                  list.IsCollection(3' 5' 7' 9);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Where,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Where((x' i) => (x + i) % 3 == 0).Subscribe(x => list.Add(x));                  a.OnNext(3); // 3 + 0                  a.OnNext(5); // 5 + 1                  a.OnNext(7); // 7 + 2                  a.OnNext(9); // 9 + 3                  a.OnNext(300); // 300 + 4                  a.OnCompleted();                  list.IsCollection(3' 5' 7' 9);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Where,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Where((x' i) => (x + i) % 3 == 0).Subscribe(x => list.Add(x));                  a.OnNext(3); // 3 + 0                  a.OnNext(5); // 5 + 1                  a.OnNext(7); // 7 + 2                  a.OnNext(9); // 9 + 3                  a.OnNext(300); // 300 + 4                  a.OnCompleted();                  list.IsCollection(3' 5' 7' 9);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Where,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Where((x' i) => (x + i) % 3 == 0).Subscribe(x => list.Add(x));                  a.OnNext(3); // 3 + 0                  a.OnNext(5); // 5 + 1                  a.OnNext(7); // 7 + 2                  a.OnNext(9); // 9 + 3                  a.OnNext(300); // 300 + 4                  a.OnCompleted();                  list.IsCollection(3' 5' 7' 9);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Where,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Where((x' i) => (x + i) % 3 == 0).Subscribe(x => list.Add(x));                  a.OnNext(3); // 3 + 0                  a.OnNext(5); // 5 + 1                  a.OnNext(7); // 7 + 2                  a.OnNext(9); // 9 + 3                  a.OnNext(300); // 300 + 4                  a.OnCompleted();                  list.IsCollection(3' 5' 7' 9);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Where,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Where((x' i) => (x + i) % 3 == 0).Subscribe(x => list.Add(x));                  a.OnNext(3); // 3 + 0                  a.OnNext(5); // 5 + 1                  a.OnNext(7); // 7 + 2                  a.OnNext(9); // 9 + 3                  a.OnNext(300); // 300 + 4                  a.OnCompleted();                  list.IsCollection(3' 5' 7' 9);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Where,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Where((x' i) => (x + i) % 3 == 0).Subscribe(x => list.Add(x));                  a.OnNext(3); // 3 + 0                  a.OnNext(5); // 5 + 1                  a.OnNext(7); // 7 + 2                  a.OnNext(9); // 9 + 3                  a.OnNext(300); // 300 + 4                  a.OnCompleted();                  list.IsCollection(3' 5' 7' 9);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Where,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Where((x' i) => (x + i) % 3 == 0).Subscribe(x => list.Add(x));                  a.OnNext(3); // 3 + 0                  a.OnNext(5); // 5 + 1                  a.OnNext(7); // 7 + 2                  a.OnNext(9); // 9 + 3                  a.OnNext(300); // 300 + 4                  a.OnCompleted();                  list.IsCollection(3' 5' 7' 9);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Where,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Where((x' i) => (x + i) % 3 == 0).Subscribe(x => list.Add(x));                  a.OnNext(3); // 3 + 0                  a.OnNext(5); // 5 + 1                  a.OnNext(7); // 7 + 2                  a.OnNext(9); // 9 + 3                  a.OnNext(300); // 300 + 4                  a.OnCompleted();                  list.IsCollection(3' 5' 7' 9);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Where,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Where((x' i) => (x + i) % 3 == 0).Subscribe(x => list.Add(x));                  a.OnNext(3); // 3 + 0                  a.OnNext(5); // 5 + 1                  a.OnNext(7); // 7 + 2                  a.OnNext(9); // 9 + 3                  a.OnNext(300); // 300 + 4                  a.OnCompleted();                  list.IsCollection(3' 5' 7' 9);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Where,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Where(x => x % 3 == 0).Where(x => x % 5 == 0).Subscribe(x => list.Add(x));                  a.OnNext(3);                  a.OnNext(5);                  a.OnNext(7);                  a.OnNext(9);                  a.OnNext(300);                  a.OnCompleted();                  list.IsCollection(300);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Where,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Where(x => x % 3 == 0).Where(x => x % 5 == 0).Subscribe(x => list.Add(x));                  a.OnNext(3);                  a.OnNext(5);                  a.OnNext(7);                  a.OnNext(9);                  a.OnNext(300);                  a.OnCompleted();                  list.IsCollection(300);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Where,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Where(x => x % 3 == 0).Where(x => x % 5 == 0).Subscribe(x => list.Add(x));                  a.OnNext(3);                  a.OnNext(5);                  a.OnNext(7);                  a.OnNext(9);                  a.OnNext(300);                  a.OnCompleted();                  list.IsCollection(300);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Where,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Where(x => x % 3 == 0).Where(x => x % 5 == 0).Subscribe(x => list.Add(x));                  a.OnNext(3);                  a.OnNext(5);                  a.OnNext(7);                  a.OnNext(9);                  a.OnNext(300);                  a.OnCompleted();                  list.IsCollection(300);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Where,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Where(x => x % 3 == 0).Where(x => x % 5 == 0).Subscribe(x => list.Add(x));                  a.OnNext(3);                  a.OnNext(5);                  a.OnNext(7);                  a.OnNext(9);                  a.OnNext(300);                  a.OnCompleted();                  list.IsCollection(300);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Where,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Where(x => x % 3 == 0).Where(x => x % 5 == 0).Subscribe(x => list.Add(x));                  a.OnNext(3);                  a.OnNext(5);                  a.OnNext(7);                  a.OnNext(9);                  a.OnNext(300);                  a.OnCompleted();                  list.IsCollection(300);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Where,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Where(x => x % 3 == 0).Where(x => x % 5 == 0).Subscribe(x => list.Add(x));                  a.OnNext(3);                  a.OnNext(5);                  a.OnNext(7);                  a.OnNext(9);                  a.OnNext(300);                  a.OnCompleted();                  list.IsCollection(300);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Where,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Where(x => x % 3 == 0).Where(x => x % 5 == 0).Subscribe(x => list.Add(x));                  a.OnNext(3);                  a.OnNext(5);                  a.OnNext(7);                  a.OnNext(9);                  a.OnNext(300);                  a.OnCompleted();                  list.IsCollection(300);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Where,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Where((x' i) => (x + i) % 3 == 0).Where(x => x % 5 == 0).Subscribe(x => list.Add(x));                  a.OnNext(3); // 3 + 0                  a.OnNext(5); // 5 + 1                  a.OnNext(7); // 7 + 2                  a.OnNext(9); // 9 + 3                  a.OnNext(300); // 300 + 4                  a.OnCompleted();                  list.IsCollection(5);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Where,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Where((x' i) => (x + i) % 3 == 0).Where(x => x % 5 == 0).Subscribe(x => list.Add(x));                  a.OnNext(3); // 3 + 0                  a.OnNext(5); // 5 + 1                  a.OnNext(7); // 7 + 2                  a.OnNext(9); // 9 + 3                  a.OnNext(300); // 300 + 4                  a.OnCompleted();                  list.IsCollection(5);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Where,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Where((x' i) => (x + i) % 3 == 0).Where(x => x % 5 == 0).Subscribe(x => list.Add(x));                  a.OnNext(3); // 3 + 0                  a.OnNext(5); // 5 + 1                  a.OnNext(7); // 7 + 2                  a.OnNext(9); // 9 + 3                  a.OnNext(300); // 300 + 4                  a.OnCompleted();                  list.IsCollection(5);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Where,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Where((x' i) => (x + i) % 3 == 0).Where(x => x % 5 == 0).Subscribe(x => list.Add(x));                  a.OnNext(3); // 3 + 0                  a.OnNext(5); // 5 + 1                  a.OnNext(7); // 7 + 2                  a.OnNext(9); // 9 + 3                  a.OnNext(300); // 300 + 4                  a.OnCompleted();                  list.IsCollection(5);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Where,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Where((x' i) => (x + i) % 3 == 0).Where(x => x % 5 == 0).Subscribe(x => list.Add(x));                  a.OnNext(3); // 3 + 0                  a.OnNext(5); // 5 + 1                  a.OnNext(7); // 7 + 2                  a.OnNext(9); // 9 + 3                  a.OnNext(300); // 300 + 4                  a.OnCompleted();                  list.IsCollection(5);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Where,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Where((x' i) => (x + i) % 3 == 0).Where(x => x % 5 == 0).Subscribe(x => list.Add(x));                  a.OnNext(3); // 3 + 0                  a.OnNext(5); // 5 + 1                  a.OnNext(7); // 7 + 2                  a.OnNext(9); // 9 + 3                  a.OnNext(300); // 300 + 4                  a.OnCompleted();                  list.IsCollection(5);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Where,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Where((x' i) => (x + i) % 3 == 0).Where(x => x % 5 == 0).Subscribe(x => list.Add(x));                  a.OnNext(3); // 3 + 0                  a.OnNext(5); // 5 + 1                  a.OnNext(7); // 7 + 2                  a.OnNext(9); // 9 + 3                  a.OnNext(300); // 300 + 4                  a.OnCompleted();                  list.IsCollection(5);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Where,The following statement contains a magic number: {                  var a = new Subject<int>();                  var list = new List<int>();                  a.Where((x' i) => (x + i) % 3 == 0).Where(x => x % 5 == 0).Subscribe(x => list.Add(x));                  a.OnNext(3); // 3 + 0                  a.OnNext(5); // 5 + 1                  a.OnNext(7); // 7 + 2                  a.OnNext(9); // 9 + 3                  a.OnNext(300); // 300 + 4                  a.OnCompleted();                  list.IsCollection(5);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DelayTest,The following statement contains a magic number: var xs = Observable.Range(1' 3)                  .Delay(TimeSpan.FromSeconds(1))                  .Timestamp()                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DelayTest,The following statement contains a magic number: (now.AddMilliseconds(800) <= xs[0].Timestamp && xs[0].Timestamp <= now.AddMilliseconds(1200)).IsTrue();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DelayTest,The following statement contains a magic number: (now.AddMilliseconds(800) <= xs[0].Timestamp && xs[0].Timestamp <= now.AddMilliseconds(1200)).IsTrue();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DelayTest,The following statement contains a magic number: xs[1].Value.Is(2);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DelayTest,The following statement contains a magic number: (now.AddMilliseconds(800) <= xs[1].Timestamp && xs[1].Timestamp <= now.AddMilliseconds(1200)).IsTrue();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DelayTest,The following statement contains a magic number: (now.AddMilliseconds(800) <= xs[1].Timestamp && xs[1].Timestamp <= now.AddMilliseconds(1200)).IsTrue();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DelayTest,The following statement contains a magic number: xs[2].Value.Is(3);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DelayTest,The following statement contains a magic number: xs[2].Value.Is(3);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DelayTest,The following statement contains a magic number: (now.AddMilliseconds(800) <= xs[2].Timestamp && xs[2].Timestamp <= now.AddMilliseconds(1200)).IsTrue();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DelayTest,The following statement contains a magic number: (now.AddMilliseconds(800) <= xs[2].Timestamp && xs[2].Timestamp <= now.AddMilliseconds(1200)).IsTrue();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DelayTest,The following statement contains a magic number: (now.AddMilliseconds(800) <= xs[2].Timestamp && xs[2].Timestamp <= now.AddMilliseconds(1200)).IsTrue();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,DelayTest,The following statement contains a magic number: (now.AddMilliseconds(800) <= xs[2].Timestamp && xs[2].Timestamp <= now.AddMilliseconds(1200)).IsTrue();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SampleTest,The following statement contains a magic number: var xs = Observable.Timer(TimeSpan.Zero' TimeSpan.FromSeconds(1))                  .Take(10)                  .Sample(TimeSpan.FromMilliseconds(2400)' Scheduler.CurrentThread)                  .Timestamp()                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SampleTest,The following statement contains a magic number: var xs = Observable.Timer(TimeSpan.Zero' TimeSpan.FromSeconds(1))                  .Take(10)                  .Sample(TimeSpan.FromMilliseconds(2400)' Scheduler.CurrentThread)                  .Timestamp()                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SampleTest,The following statement contains a magic number: xs[0].Value.Is(2);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SampleTest,The following statement contains a magic number: xs[1].Value.Is(4);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SampleTest,The following statement contains a magic number: xs[2].Value.Is(7);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SampleTest,The following statement contains a magic number: xs[2].Value.Is(7);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SampleTest,The following statement contains a magic number: xs[3].Value.Is(9);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SampleTest,The following statement contains a magic number: xs[3].Value.Is(9);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ThrottleFirstTest,The following statement contains a magic number: var xs = Observable.Concat(                      Observable.Return(1)'                      Observable.Return(2).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(3).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(4).Delay(TimeSpan.FromSeconds(0.4))'                      Observable.Return(5).Delay(TimeSpan.FromSeconds(0.2))' // over 2500                      Observable.Return(6).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(7).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(8).Delay(TimeSpan.FromSeconds(1))' // over 2500                      Observable.Return(9) // withCompleted                  )                  .Timestamp()                  .ThrottleFirst(TimeSpan.FromMilliseconds(2500))                  .Materialize()                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ThrottleFirstTest,The following statement contains a magic number: var xs = Observable.Concat(                      Observable.Return(1)'                      Observable.Return(2).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(3).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(4).Delay(TimeSpan.FromSeconds(0.4))'                      Observable.Return(5).Delay(TimeSpan.FromSeconds(0.2))' // over 2500                      Observable.Return(6).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(7).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(8).Delay(TimeSpan.FromSeconds(1))' // over 2500                      Observable.Return(9) // withCompleted                  )                  .Timestamp()                  .ThrottleFirst(TimeSpan.FromMilliseconds(2500))                  .Materialize()                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ThrottleFirstTest,The following statement contains a magic number: var xs = Observable.Concat(                      Observable.Return(1)'                      Observable.Return(2).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(3).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(4).Delay(TimeSpan.FromSeconds(0.4))'                      Observable.Return(5).Delay(TimeSpan.FromSeconds(0.2))' // over 2500                      Observable.Return(6).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(7).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(8).Delay(TimeSpan.FromSeconds(1))' // over 2500                      Observable.Return(9) // withCompleted                  )                  .Timestamp()                  .ThrottleFirst(TimeSpan.FromMilliseconds(2500))                  .Materialize()                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ThrottleFirstTest,The following statement contains a magic number: var xs = Observable.Concat(                      Observable.Return(1)'                      Observable.Return(2).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(3).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(4).Delay(TimeSpan.FromSeconds(0.4))'                      Observable.Return(5).Delay(TimeSpan.FromSeconds(0.2))' // over 2500                      Observable.Return(6).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(7).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(8).Delay(TimeSpan.FromSeconds(1))' // over 2500                      Observable.Return(9) // withCompleted                  )                  .Timestamp()                  .ThrottleFirst(TimeSpan.FromMilliseconds(2500))                  .Materialize()                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ThrottleFirstTest,The following statement contains a magic number: var xs = Observable.Concat(                      Observable.Return(1)'                      Observable.Return(2).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(3).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(4).Delay(TimeSpan.FromSeconds(0.4))'                      Observable.Return(5).Delay(TimeSpan.FromSeconds(0.2))' // over 2500                      Observable.Return(6).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(7).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(8).Delay(TimeSpan.FromSeconds(1))' // over 2500                      Observable.Return(9) // withCompleted                  )                  .Timestamp()                  .ThrottleFirst(TimeSpan.FromMilliseconds(2500))                  .Materialize()                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ThrottleFirstTest,The following statement contains a magic number: var xs = Observable.Concat(                      Observable.Return(1)'                      Observable.Return(2).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(3).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(4).Delay(TimeSpan.FromSeconds(0.4))'                      Observable.Return(5).Delay(TimeSpan.FromSeconds(0.2))' // over 2500                      Observable.Return(6).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(7).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(8).Delay(TimeSpan.FromSeconds(1))' // over 2500                      Observable.Return(9) // withCompleted                  )                  .Timestamp()                  .ThrottleFirst(TimeSpan.FromMilliseconds(2500))                  .Materialize()                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ThrottleFirstTest,The following statement contains a magic number: var xs = Observable.Concat(                      Observable.Return(1)'                      Observable.Return(2).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(3).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(4).Delay(TimeSpan.FromSeconds(0.4))'                      Observable.Return(5).Delay(TimeSpan.FromSeconds(0.2))' // over 2500                      Observable.Return(6).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(7).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(8).Delay(TimeSpan.FromSeconds(1))' // over 2500                      Observable.Return(9) // withCompleted                  )                  .Timestamp()                  .ThrottleFirst(TimeSpan.FromMilliseconds(2500))                  .Materialize()                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ThrottleFirstTest,The following statement contains a magic number: var xs = Observable.Concat(                      Observable.Return(1)'                      Observable.Return(2).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(3).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(4).Delay(TimeSpan.FromSeconds(0.4))'                      Observable.Return(5).Delay(TimeSpan.FromSeconds(0.2))' // over 2500                      Observable.Return(6).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(7).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(8).Delay(TimeSpan.FromSeconds(1))' // over 2500                      Observable.Return(9) // withCompleted                  )                  .Timestamp()                  .ThrottleFirst(TimeSpan.FromMilliseconds(2500))                  .Materialize()                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ThrottleFirstTest,The following statement contains a magic number: var xs = Observable.Concat(                      Observable.Return(1)'                      Observable.Return(2).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(3).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(4).Delay(TimeSpan.FromSeconds(0.4))'                      Observable.Return(5).Delay(TimeSpan.FromSeconds(0.2))' // over 2500                      Observable.Return(6).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(7).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(8).Delay(TimeSpan.FromSeconds(1))' // over 2500                      Observable.Return(9) // withCompleted                  )                  .Timestamp()                  .ThrottleFirst(TimeSpan.FromMilliseconds(2500))                  .Materialize()                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ThrottleFirstTest,The following statement contains a magic number: var xs = Observable.Concat(                      Observable.Return(1)'                      Observable.Return(2).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(3).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(4).Delay(TimeSpan.FromSeconds(0.4))'                      Observable.Return(5).Delay(TimeSpan.FromSeconds(0.2))' // over 2500                      Observable.Return(6).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(7).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(8).Delay(TimeSpan.FromSeconds(1))' // over 2500                      Observable.Return(9) // withCompleted                  )                  .Timestamp()                  .ThrottleFirst(TimeSpan.FromMilliseconds(2500))                  .Materialize()                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ThrottleFirstTest,The following statement contains a magic number: var xs = Observable.Concat(                      Observable.Return(1)'                      Observable.Return(2).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(3).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(4).Delay(TimeSpan.FromSeconds(0.4))'                      Observable.Return(5).Delay(TimeSpan.FromSeconds(0.2))' // over 2500                      Observable.Return(6).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(7).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(8).Delay(TimeSpan.FromSeconds(1))' // over 2500                      Observable.Return(9) // withCompleted                  )                  .Timestamp()                  .ThrottleFirst(TimeSpan.FromMilliseconds(2500))                  .Materialize()                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ThrottleFirstTest,The following statement contains a magic number: xs.Length.Is(4);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ThrottleFirstTest,The following statement contains a magic number: xs[1].Value.Value.Is(5);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ThrottleFirstTest,The following statement contains a magic number: xs[2].Value.Value.Is(8);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ThrottleFirstTest,The following statement contains a magic number: xs[2].Value.Value.Is(8);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ThrottleFirstTest,The following statement contains a magic number: xs[3].Kind.Is(NotificationKind.OnCompleted);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ThrottleTest,The following statement contains a magic number: var xs = Observable.Concat(                      Observable.Return(1).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(2).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(3).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(4).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(5).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(6).Delay(TimeSpan.FromSeconds(3))' // over 2500                      Observable.Return(7).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(8).Delay(TimeSpan.FromSeconds(1)) // with onCompleted                  )                  .Timestamp()                  .Throttle(TimeSpan.FromMilliseconds(2500))                  .Materialize()                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ThrottleTest,The following statement contains a magic number: var xs = Observable.Concat(                      Observable.Return(1).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(2).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(3).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(4).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(5).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(6).Delay(TimeSpan.FromSeconds(3))' // over 2500                      Observable.Return(7).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(8).Delay(TimeSpan.FromSeconds(1)) // with onCompleted                  )                  .Timestamp()                  .Throttle(TimeSpan.FromMilliseconds(2500))                  .Materialize()                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ThrottleTest,The following statement contains a magic number: var xs = Observable.Concat(                      Observable.Return(1).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(2).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(3).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(4).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(5).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(6).Delay(TimeSpan.FromSeconds(3))' // over 2500                      Observable.Return(7).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(8).Delay(TimeSpan.FromSeconds(1)) // with onCompleted                  )                  .Timestamp()                  .Throttle(TimeSpan.FromMilliseconds(2500))                  .Materialize()                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ThrottleTest,The following statement contains a magic number: var xs = Observable.Concat(                      Observable.Return(1).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(2).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(3).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(4).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(5).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(6).Delay(TimeSpan.FromSeconds(3))' // over 2500                      Observable.Return(7).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(8).Delay(TimeSpan.FromSeconds(1)) // with onCompleted                  )                  .Timestamp()                  .Throttle(TimeSpan.FromMilliseconds(2500))                  .Materialize()                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ThrottleTest,The following statement contains a magic number: var xs = Observable.Concat(                      Observable.Return(1).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(2).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(3).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(4).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(5).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(6).Delay(TimeSpan.FromSeconds(3))' // over 2500                      Observable.Return(7).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(8).Delay(TimeSpan.FromSeconds(1)) // with onCompleted                  )                  .Timestamp()                  .Throttle(TimeSpan.FromMilliseconds(2500))                  .Materialize()                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ThrottleTest,The following statement contains a magic number: var xs = Observable.Concat(                      Observable.Return(1).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(2).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(3).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(4).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(5).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(6).Delay(TimeSpan.FromSeconds(3))' // over 2500                      Observable.Return(7).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(8).Delay(TimeSpan.FromSeconds(1)) // with onCompleted                  )                  .Timestamp()                  .Throttle(TimeSpan.FromMilliseconds(2500))                  .Materialize()                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ThrottleTest,The following statement contains a magic number: var xs = Observable.Concat(                      Observable.Return(1).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(2).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(3).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(4).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(5).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(6).Delay(TimeSpan.FromSeconds(3))' // over 2500                      Observable.Return(7).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(8).Delay(TimeSpan.FromSeconds(1)) // with onCompleted                  )                  .Timestamp()                  .Throttle(TimeSpan.FromMilliseconds(2500))                  .Materialize()                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ThrottleTest,The following statement contains a magic number: var xs = Observable.Concat(                      Observable.Return(1).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(2).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(3).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(4).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(5).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(6).Delay(TimeSpan.FromSeconds(3))' // over 2500                      Observable.Return(7).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(8).Delay(TimeSpan.FromSeconds(1)) // with onCompleted                  )                  .Timestamp()                  .Throttle(TimeSpan.FromMilliseconds(2500))                  .Materialize()                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ThrottleTest,The following statement contains a magic number: var xs = Observable.Concat(                      Observable.Return(1).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(2).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(3).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(4).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(5).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(6).Delay(TimeSpan.FromSeconds(3))' // over 2500                      Observable.Return(7).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(8).Delay(TimeSpan.FromSeconds(1)) // with onCompleted                  )                  .Timestamp()                  .Throttle(TimeSpan.FromMilliseconds(2500))                  .Materialize()                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ThrottleTest,The following statement contains a magic number: var xs = Observable.Concat(                      Observable.Return(1).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(2).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(3).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(4).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(5).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(6).Delay(TimeSpan.FromSeconds(3))' // over 2500                      Observable.Return(7).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(8).Delay(TimeSpan.FromSeconds(1)) // with onCompleted                  )                  .Timestamp()                  .Throttle(TimeSpan.FromMilliseconds(2500))                  .Materialize()                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ThrottleTest,The following statement contains a magic number: var xs = Observable.Concat(                      Observable.Return(1).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(2).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(3).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(4).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(5).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(6).Delay(TimeSpan.FromSeconds(3))' // over 2500                      Observable.Return(7).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(8).Delay(TimeSpan.FromSeconds(1)) // with onCompleted                  )                  .Timestamp()                  .Throttle(TimeSpan.FromMilliseconds(2500))                  .Materialize()                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ThrottleTest,The following statement contains a magic number: var xs = Observable.Concat(                      Observable.Return(1).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(2).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(3).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(4).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(5).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(6).Delay(TimeSpan.FromSeconds(3))' // over 2500                      Observable.Return(7).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(8).Delay(TimeSpan.FromSeconds(1)) // with onCompleted                  )                  .Timestamp()                  .Throttle(TimeSpan.FromMilliseconds(2500))                  .Materialize()                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ThrottleTest,The following statement contains a magic number: var xs = Observable.Concat(                      Observable.Return(1).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(2).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(3).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(4).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(5).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(6).Delay(TimeSpan.FromSeconds(3))' // over 2500                      Observable.Return(7).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(8).Delay(TimeSpan.FromSeconds(1)) // with onCompleted                  )                  .Timestamp()                  .Throttle(TimeSpan.FromMilliseconds(2500))                  .Materialize()                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ThrottleTest,The following statement contains a magic number: xs.Length.Is(3);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ThrottleTest,The following statement contains a magic number: xs[0].Value.Value.Is(5);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ThrottleTest,The following statement contains a magic number: xs[1].Value.Value.Is(8);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ThrottleTest,The following statement contains a magic number: xs[2].Kind.Is(NotificationKind.OnCompleted);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimeInterval,The following statement contains a magic number: var xs = Observable.Concat(                  Observable.Return(1)'                  Observable.Return(2).Delay(TimeSpan.FromSeconds(1))'                  Observable.Return(3).Delay(TimeSpan.FromSeconds(1))'                  Observable.Return(4).Delay(TimeSpan.FromSeconds(0.4))'                  Observable.Return(5).Delay(TimeSpan.FromSeconds(0.2)) // over 2500              ).TimeInterval()              .ToArray()              .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimeInterval,The following statement contains a magic number: var xs = Observable.Concat(                  Observable.Return(1)'                  Observable.Return(2).Delay(TimeSpan.FromSeconds(1))'                  Observable.Return(3).Delay(TimeSpan.FromSeconds(1))'                  Observable.Return(4).Delay(TimeSpan.FromSeconds(0.4))'                  Observable.Return(5).Delay(TimeSpan.FromSeconds(0.2)) // over 2500              ).TimeInterval()              .ToArray()              .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimeInterval,The following statement contains a magic number: var xs = Observable.Concat(                  Observable.Return(1)'                  Observable.Return(2).Delay(TimeSpan.FromSeconds(1))'                  Observable.Return(3).Delay(TimeSpan.FromSeconds(1))'                  Observable.Return(4).Delay(TimeSpan.FromSeconds(0.4))'                  Observable.Return(5).Delay(TimeSpan.FromSeconds(0.2)) // over 2500              ).TimeInterval()              .ToArray()              .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimeInterval,The following statement contains a magic number: var xs = Observable.Concat(                  Observable.Return(1)'                  Observable.Return(2).Delay(TimeSpan.FromSeconds(1))'                  Observable.Return(3).Delay(TimeSpan.FromSeconds(1))'                  Observable.Return(4).Delay(TimeSpan.FromSeconds(0.4))'                  Observable.Return(5).Delay(TimeSpan.FromSeconds(0.2)) // over 2500              ).TimeInterval()              .ToArray()              .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimeInterval,The following statement contains a magic number: var xs = Observable.Concat(                  Observable.Return(1)'                  Observable.Return(2).Delay(TimeSpan.FromSeconds(1))'                  Observable.Return(3).Delay(TimeSpan.FromSeconds(1))'                  Observable.Return(4).Delay(TimeSpan.FromSeconds(0.4))'                  Observable.Return(5).Delay(TimeSpan.FromSeconds(0.2)) // over 2500              ).TimeInterval()              .ToArray()              .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimeInterval,The following statement contains a magic number: var xs = Observable.Concat(                  Observable.Return(1)'                  Observable.Return(2).Delay(TimeSpan.FromSeconds(1))'                  Observable.Return(3).Delay(TimeSpan.FromSeconds(1))'                  Observable.Return(4).Delay(TimeSpan.FromSeconds(0.4))'                  Observable.Return(5).Delay(TimeSpan.FromSeconds(0.2)) // over 2500              ).TimeInterval()              .ToArray()              .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimeInterval,The following statement contains a magic number: xs[0].Interval.TotalSeconds.Is(x => 0.0 <= x && x <= 0.1);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimeInterval,The following statement contains a magic number: xs[1].Value.Is(2);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimeInterval,The following statement contains a magic number: xs[1].Interval.TotalSeconds.Is(x => 0.9 <= x && x <= 1.1);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimeInterval,The following statement contains a magic number: xs[1].Interval.TotalSeconds.Is(x => 0.9 <= x && x <= 1.1);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimeInterval,The following statement contains a magic number: xs[2].Value.Is(3);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimeInterval,The following statement contains a magic number: xs[2].Value.Is(3);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimeInterval,The following statement contains a magic number: xs[2].Interval.TotalSeconds.Is(x => 0.9 <= x && x <= 1.1);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimeInterval,The following statement contains a magic number: xs[2].Interval.TotalSeconds.Is(x => 0.9 <= x && x <= 1.1);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimeInterval,The following statement contains a magic number: xs[2].Interval.TotalSeconds.Is(x => 0.9 <= x && x <= 1.1);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimeInterval,The following statement contains a magic number: xs[3].Value.Is(4);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimeInterval,The following statement contains a magic number: xs[3].Value.Is(4);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimeInterval,The following statement contains a magic number: xs[3].Interval.TotalSeconds.Is(x => 0.3 <= x && x <= 0.5);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimeInterval,The following statement contains a magic number: xs[3].Interval.TotalSeconds.Is(x => 0.3 <= x && x <= 0.5);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimeInterval,The following statement contains a magic number: xs[3].Interval.TotalSeconds.Is(x => 0.3 <= x && x <= 0.5);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimeInterval,The following statement contains a magic number: xs[4].Value.Is(5);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimeInterval,The following statement contains a magic number: xs[4].Value.Is(5);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimeInterval,The following statement contains a magic number: xs[4].Interval.TotalSeconds.Is(x => 0.15 <= x && x <= 0.25);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimeInterval,The following statement contains a magic number: xs[4].Interval.TotalSeconds.Is(x => 0.15 <= x && x <= 0.25);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimeInterval,The following statement contains a magic number: xs[4].Interval.TotalSeconds.Is(x => 0.15 <= x && x <= 0.25);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimeoutTest,The following statement contains a magic number: var xs = Observable.Concat(                      Observable.Return(1).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(5).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(9).Delay(TimeSpan.FromSeconds(3))                  )                  .Timestamp()                  .Timeout(TimeSpan.FromMilliseconds(1500))                  .Materialize()                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimeoutTest,The following statement contains a magic number: var xs = Observable.Concat(                      Observable.Return(1).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(5).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(9).Delay(TimeSpan.FromSeconds(3))                  )                  .Timestamp()                  .Timeout(TimeSpan.FromMilliseconds(1500))                  .Materialize()                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimeoutTest,The following statement contains a magic number: var xs = Observable.Concat(                      Observable.Return(1).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(5).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(9).Delay(TimeSpan.FromSeconds(3))                  )                  .Timestamp()                  .Timeout(TimeSpan.FromMilliseconds(1500))                  .Materialize()                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimeoutTest,The following statement contains a magic number: var xs = Observable.Concat(                      Observable.Return(1).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(5).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(9).Delay(TimeSpan.FromSeconds(3))                  )                  .Timestamp()                  .Timeout(TimeSpan.FromMilliseconds(1500))                  .Materialize()                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimeoutTest,The following statement contains a magic number: var xs = Observable.Concat(                      Observable.Return(1).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(5).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(9).Delay(TimeSpan.FromSeconds(3))                  )                  .Timestamp()                  .Timeout(TimeSpan.FromMilliseconds(1500))                  .Materialize()                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimeoutTest,The following statement contains a magic number: xs.Length.Is(2);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimeoutTestOffset,The following statement contains a magic number: var xs = Observable.Concat(                      Observable.Return(1).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(5).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(9).Delay(TimeSpan.FromSeconds(3))                  )                  .Timestamp()                  .Timeout(now.AddMilliseconds(3500))                  .Materialize()                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimeoutTestOffset,The following statement contains a magic number: var xs = Observable.Concat(                      Observable.Return(1).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(5).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(9).Delay(TimeSpan.FromSeconds(3))                  )                  .Timestamp()                  .Timeout(now.AddMilliseconds(3500))                  .Materialize()                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimeoutTestOffset,The following statement contains a magic number: var xs = Observable.Concat(                      Observable.Return(1).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(5).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(9).Delay(TimeSpan.FromSeconds(3))                  )                  .Timestamp()                  .Timeout(now.AddMilliseconds(3500))                  .Materialize()                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimeoutTestOffset,The following statement contains a magic number: var xs = Observable.Concat(                      Observable.Return(1).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(5).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(9).Delay(TimeSpan.FromSeconds(3))                  )                  .Timestamp()                  .Timeout(now.AddMilliseconds(3500))                  .Materialize()                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimeoutTestOffset,The following statement contains a magic number: var xs = Observable.Concat(                      Observable.Return(1).Delay(TimeSpan.FromSeconds(1))'                      Observable.Return(5).Delay(TimeSpan.FromSeconds(2))'                      Observable.Return(9).Delay(TimeSpan.FromSeconds(3))                  )                  .Timestamp()                  .Timeout(now.AddMilliseconds(3500))                  .Materialize()                  .ToArray()                  .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimeoutTestOffset,The following statement contains a magic number: xs.Length.Is(3);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimeoutTestOffset,The following statement contains a magic number: xs[1].Value.Value.Is(5);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimeoutTestOffset,The following statement contains a magic number: xs[2].Exception.IsInstanceOf<TimeoutException>();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimerTest,The following statement contains a magic number: {                  var now = Scheduler.ThreadPool.Now;                  var xs = Observable.Timer(TimeSpan.FromSeconds(1)' TimeSpan.FromSeconds(1))                      .Take(3)                      .Timestamp()                      .ToArray()                      .Wait();                  xs[0].Value.Is(0L);                  (now.AddMilliseconds(800) <= xs[0].Timestamp && xs[0].Timestamp <= now.AddMilliseconds(1200)).IsTrue();                  xs[1].Value.Is(1L);                  (now.AddMilliseconds(1800) <= xs[1].Timestamp && xs[1].Timestamp <= now.AddMilliseconds(2200)).IsTrue();                  xs[2].Value.Is(2L);                  (now.AddMilliseconds(2800) <= xs[2].Timestamp && xs[2].Timestamp <= now.AddMilliseconds(3200)).IsTrue();              }
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimerTest,The following statement contains a magic number: {                  var now = Scheduler.ThreadPool.Now;                  var xs = Observable.Timer(TimeSpan.FromSeconds(1)' TimeSpan.FromSeconds(1))                      .Take(3)                      .Timestamp()                      .ToArray()                      .Wait();                  xs[0].Value.Is(0L);                  (now.AddMilliseconds(800) <= xs[0].Timestamp && xs[0].Timestamp <= now.AddMilliseconds(1200)).IsTrue();                  xs[1].Value.Is(1L);                  (now.AddMilliseconds(1800) <= xs[1].Timestamp && xs[1].Timestamp <= now.AddMilliseconds(2200)).IsTrue();                  xs[2].Value.Is(2L);                  (now.AddMilliseconds(2800) <= xs[2].Timestamp && xs[2].Timestamp <= now.AddMilliseconds(3200)).IsTrue();              }
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimerTest,The following statement contains a magic number: {                  var now = Scheduler.ThreadPool.Now;                  var xs = Observable.Timer(TimeSpan.FromSeconds(1)' TimeSpan.FromSeconds(1))                      .Take(3)                      .Timestamp()                      .ToArray()                      .Wait();                  xs[0].Value.Is(0L);                  (now.AddMilliseconds(800) <= xs[0].Timestamp && xs[0].Timestamp <= now.AddMilliseconds(1200)).IsTrue();                  xs[1].Value.Is(1L);                  (now.AddMilliseconds(1800) <= xs[1].Timestamp && xs[1].Timestamp <= now.AddMilliseconds(2200)).IsTrue();                  xs[2].Value.Is(2L);                  (now.AddMilliseconds(2800) <= xs[2].Timestamp && xs[2].Timestamp <= now.AddMilliseconds(3200)).IsTrue();              }
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimerTest,The following statement contains a magic number: {                  var now = Scheduler.ThreadPool.Now;                  var xs = Observable.Timer(TimeSpan.FromSeconds(1)' TimeSpan.FromSeconds(1))                      .Take(3)                      .Timestamp()                      .ToArray()                      .Wait();                  xs[0].Value.Is(0L);                  (now.AddMilliseconds(800) <= xs[0].Timestamp && xs[0].Timestamp <= now.AddMilliseconds(1200)).IsTrue();                  xs[1].Value.Is(1L);                  (now.AddMilliseconds(1800) <= xs[1].Timestamp && xs[1].Timestamp <= now.AddMilliseconds(2200)).IsTrue();                  xs[2].Value.Is(2L);                  (now.AddMilliseconds(2800) <= xs[2].Timestamp && xs[2].Timestamp <= now.AddMilliseconds(3200)).IsTrue();              }
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimerTest,The following statement contains a magic number: {                  var now = Scheduler.ThreadPool.Now;                  var xs = Observable.Timer(TimeSpan.FromSeconds(1)' TimeSpan.FromSeconds(1))                      .Take(3)                      .Timestamp()                      .ToArray()                      .Wait();                  xs[0].Value.Is(0L);                  (now.AddMilliseconds(800) <= xs[0].Timestamp && xs[0].Timestamp <= now.AddMilliseconds(1200)).IsTrue();                  xs[1].Value.Is(1L);                  (now.AddMilliseconds(1800) <= xs[1].Timestamp && xs[1].Timestamp <= now.AddMilliseconds(2200)).IsTrue();                  xs[2].Value.Is(2L);                  (now.AddMilliseconds(2800) <= xs[2].Timestamp && xs[2].Timestamp <= now.AddMilliseconds(3200)).IsTrue();              }
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimerTest,The following statement contains a magic number: {                  var now = Scheduler.ThreadPool.Now;                  var xs = Observable.Timer(TimeSpan.FromSeconds(1)' TimeSpan.FromSeconds(1))                      .Take(3)                      .Timestamp()                      .ToArray()                      .Wait();                  xs[0].Value.Is(0L);                  (now.AddMilliseconds(800) <= xs[0].Timestamp && xs[0].Timestamp <= now.AddMilliseconds(1200)).IsTrue();                  xs[1].Value.Is(1L);                  (now.AddMilliseconds(1800) <= xs[1].Timestamp && xs[1].Timestamp <= now.AddMilliseconds(2200)).IsTrue();                  xs[2].Value.Is(2L);                  (now.AddMilliseconds(2800) <= xs[2].Timestamp && xs[2].Timestamp <= now.AddMilliseconds(3200)).IsTrue();              }
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimerTest,The following statement contains a magic number: {                  var now = Scheduler.ThreadPool.Now;                  var xs = Observable.Timer(TimeSpan.FromSeconds(1)' TimeSpan.FromSeconds(1))                      .Take(3)                      .Timestamp()                      .ToArray()                      .Wait();                  xs[0].Value.Is(0L);                  (now.AddMilliseconds(800) <= xs[0].Timestamp && xs[0].Timestamp <= now.AddMilliseconds(1200)).IsTrue();                  xs[1].Value.Is(1L);                  (now.AddMilliseconds(1800) <= xs[1].Timestamp && xs[1].Timestamp <= now.AddMilliseconds(2200)).IsTrue();                  xs[2].Value.Is(2L);                  (now.AddMilliseconds(2800) <= xs[2].Timestamp && xs[2].Timestamp <= now.AddMilliseconds(3200)).IsTrue();              }
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimerTest,The following statement contains a magic number: {                  var now = Scheduler.ThreadPool.Now;                  var xs = Observable.Timer(TimeSpan.FromSeconds(1)' TimeSpan.FromSeconds(1))                      .Take(3)                      .Timestamp()                      .ToArray()                      .Wait();                  xs[0].Value.Is(0L);                  (now.AddMilliseconds(800) <= xs[0].Timestamp && xs[0].Timestamp <= now.AddMilliseconds(1200)).IsTrue();                  xs[1].Value.Is(1L);                  (now.AddMilliseconds(1800) <= xs[1].Timestamp && xs[1].Timestamp <= now.AddMilliseconds(2200)).IsTrue();                  xs[2].Value.Is(2L);                  (now.AddMilliseconds(2800) <= xs[2].Timestamp && xs[2].Timestamp <= now.AddMilliseconds(3200)).IsTrue();              }
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimerTest,The following statement contains a magic number: {                  var now = Scheduler.ThreadPool.Now;                  var xs = Observable.Timer(TimeSpan.FromSeconds(1)' TimeSpan.FromSeconds(1))                      .Take(3)                      .Timestamp()                      .ToArray()                      .Wait();                  xs[0].Value.Is(0L);                  (now.AddMilliseconds(800) <= xs[0].Timestamp && xs[0].Timestamp <= now.AddMilliseconds(1200)).IsTrue();                  xs[1].Value.Is(1L);                  (now.AddMilliseconds(1800) <= xs[1].Timestamp && xs[1].Timestamp <= now.AddMilliseconds(2200)).IsTrue();                  xs[2].Value.Is(2L);                  (now.AddMilliseconds(2800) <= xs[2].Timestamp && xs[2].Timestamp <= now.AddMilliseconds(3200)).IsTrue();              }
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimerTest,The following statement contains a magic number: {                  var now = Scheduler.ThreadPool.Now;                  var xs = Observable.Timer(TimeSpan.FromSeconds(1)' TimeSpan.FromSeconds(1))                      .Take(3)                      .Timestamp()                      .ToArray()                      .Wait();                  xs[0].Value.Is(0L);                  (now.AddMilliseconds(800) <= xs[0].Timestamp && xs[0].Timestamp <= now.AddMilliseconds(1200)).IsTrue();                  xs[1].Value.Is(1L);                  (now.AddMilliseconds(1800) <= xs[1].Timestamp && xs[1].Timestamp <= now.AddMilliseconds(2200)).IsTrue();                  xs[2].Value.Is(2L);                  (now.AddMilliseconds(2800) <= xs[2].Timestamp && xs[2].Timestamp <= now.AddMilliseconds(3200)).IsTrue();              }
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimerTest,The following statement contains a magic number: {                  var now = Scheduler.ThreadPool.Now;                  var xs = Observable.Timer(TimeSpan.FromSeconds(2)' TimeSpan.FromSeconds(1))                      .Take(3)                      .Timestamp()                      .Select(x => Math.Round((x.Timestamp - now).TotalSeconds' 0))                      .ToArray()                      .Wait();                  xs[0].Is(2);                  xs[1].Is(3);                  xs[2].Is(4);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimerTest,The following statement contains a magic number: {                  var now = Scheduler.ThreadPool.Now;                  var xs = Observable.Timer(TimeSpan.FromSeconds(2)' TimeSpan.FromSeconds(1))                      .Take(3)                      .Timestamp()                      .Select(x => Math.Round((x.Timestamp - now).TotalSeconds' 0))                      .ToArray()                      .Wait();                  xs[0].Is(2);                  xs[1].Is(3);                  xs[2].Is(4);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimerTest,The following statement contains a magic number: {                  var now = Scheduler.ThreadPool.Now;                  var xs = Observable.Timer(TimeSpan.FromSeconds(2)' TimeSpan.FromSeconds(1))                      .Take(3)                      .Timestamp()                      .Select(x => Math.Round((x.Timestamp - now).TotalSeconds' 0))                      .ToArray()                      .Wait();                  xs[0].Is(2);                  xs[1].Is(3);                  xs[2].Is(4);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimerTest,The following statement contains a magic number: {                  var now = Scheduler.ThreadPool.Now;                  var xs = Observable.Timer(TimeSpan.FromSeconds(2)' TimeSpan.FromSeconds(1))                      .Take(3)                      .Timestamp()                      .Select(x => Math.Round((x.Timestamp - now).TotalSeconds' 0))                      .ToArray()                      .Wait();                  xs[0].Is(2);                  xs[1].Is(3);                  xs[2].Is(4);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimerTest,The following statement contains a magic number: {                  var now = Scheduler.ThreadPool.Now;                  var xs = Observable.Timer(TimeSpan.FromSeconds(2)' TimeSpan.FromSeconds(1))                      .Take(3)                      .Timestamp()                      .Select(x => Math.Round((x.Timestamp - now).TotalSeconds' 0))                      .ToArray()                      .Wait();                  xs[0].Is(2);                  xs[1].Is(3);                  xs[2].Is(4);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimerTest,The following statement contains a magic number: {                  var now = Scheduler.ThreadPool.Now;                  var xs = Observable.Timer(TimeSpan.FromSeconds(2)' TimeSpan.FromSeconds(1))                      .Take(3)                      .Timestamp()                      .Select(x => Math.Round((x.Timestamp - now).TotalSeconds' 0))                      .ToArray()                      .Wait();                  xs[0].Is(2);                  xs[1].Is(3);                  xs[2].Is(4);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimerTest,The following statement contains a magic number: {                  var now = Scheduler.ThreadPool.Now;                  var xs = Observable.Timer(now.AddSeconds(2)' TimeSpan.FromSeconds(1))                      .Take(3)                      .Timestamp()                      .Select(x => Math.Round((x.Timestamp - now).TotalSeconds' 0))                      .ToArray()                      .Wait();                  xs[0].Is(2);                  xs[1].Is(3);                  xs[2].Is(4);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimerTest,The following statement contains a magic number: {                  var now = Scheduler.ThreadPool.Now;                  var xs = Observable.Timer(now.AddSeconds(2)' TimeSpan.FromSeconds(1))                      .Take(3)                      .Timestamp()                      .Select(x => Math.Round((x.Timestamp - now).TotalSeconds' 0))                      .ToArray()                      .Wait();                  xs[0].Is(2);                  xs[1].Is(3);                  xs[2].Is(4);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimerTest,The following statement contains a magic number: {                  var now = Scheduler.ThreadPool.Now;                  var xs = Observable.Timer(now.AddSeconds(2)' TimeSpan.FromSeconds(1))                      .Take(3)                      .Timestamp()                      .Select(x => Math.Round((x.Timestamp - now).TotalSeconds' 0))                      .ToArray()                      .Wait();                  xs[0].Is(2);                  xs[1].Is(3);                  xs[2].Is(4);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimerTest,The following statement contains a magic number: {                  var now = Scheduler.ThreadPool.Now;                  var xs = Observable.Timer(now.AddSeconds(2)' TimeSpan.FromSeconds(1))                      .Take(3)                      .Timestamp()                      .Select(x => Math.Round((x.Timestamp - now).TotalSeconds' 0))                      .ToArray()                      .Wait();                  xs[0].Is(2);                  xs[1].Is(3);                  xs[2].Is(4);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimerTest,The following statement contains a magic number: {                  var now = Scheduler.ThreadPool.Now;                  var xs = Observable.Timer(now.AddSeconds(2)' TimeSpan.FromSeconds(1))                      .Take(3)                      .Timestamp()                      .Select(x => Math.Round((x.Timestamp - now).TotalSeconds' 0))                      .ToArray()                      .Wait();                  xs[0].Is(2);                  xs[1].Is(3);                  xs[2].Is(4);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimerTest,The following statement contains a magic number: {                  var now = Scheduler.ThreadPool.Now;                  var xs = Observable.Timer(now.AddSeconds(2)' TimeSpan.FromSeconds(1))                      .Take(3)                      .Timestamp()                      .Select(x => Math.Round((x.Timestamp - now).TotalSeconds' 0))                      .ToArray()                      .Wait();                  xs[0].Is(2);                  xs[1].Is(3);                  xs[2].Is(4);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimerTest,The following statement contains a magic number: {                  var now = Scheduler.ThreadPool.Now;                  var xs = Observable.Timer(TimeSpan.FromSeconds(2))                      .Timestamp()                      .Select(x => Math.Round((x.Timestamp - now).TotalSeconds' 0))                      .ToArray()                      .Wait();                  xs[0].Is(2);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimerTest,The following statement contains a magic number: {                  var now = Scheduler.ThreadPool.Now;                  var xs = Observable.Timer(TimeSpan.FromSeconds(2))                      .Timestamp()                      .Select(x => Math.Round((x.Timestamp - now).TotalSeconds' 0))                      .ToArray()                      .Wait();                  xs[0].Is(2);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimerTest,The following statement contains a magic number: {                  var now = Scheduler.CurrentThread.Now;                  var xs = Observable.Timer(TimeSpan.FromSeconds(2)' TimeSpan.FromSeconds(1)' Scheduler.CurrentThread)                      .Take(3)                      .Timestamp()                      .Select(x => Math.Round((x.Timestamp - now).TotalSeconds' 0))                      .ToArray()                      .Wait();                  xs[0].Is(2);                  xs[1].Is(3);                  xs[2].Is(4);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimerTest,The following statement contains a magic number: {                  var now = Scheduler.CurrentThread.Now;                  var xs = Observable.Timer(TimeSpan.FromSeconds(2)' TimeSpan.FromSeconds(1)' Scheduler.CurrentThread)                      .Take(3)                      .Timestamp()                      .Select(x => Math.Round((x.Timestamp - now).TotalSeconds' 0))                      .ToArray()                      .Wait();                  xs[0].Is(2);                  xs[1].Is(3);                  xs[2].Is(4);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimerTest,The following statement contains a magic number: {                  var now = Scheduler.CurrentThread.Now;                  var xs = Observable.Timer(TimeSpan.FromSeconds(2)' TimeSpan.FromSeconds(1)' Scheduler.CurrentThread)                      .Take(3)                      .Timestamp()                      .Select(x => Math.Round((x.Timestamp - now).TotalSeconds' 0))                      .ToArray()                      .Wait();                  xs[0].Is(2);                  xs[1].Is(3);                  xs[2].Is(4);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimerTest,The following statement contains a magic number: {                  var now = Scheduler.CurrentThread.Now;                  var xs = Observable.Timer(TimeSpan.FromSeconds(2)' TimeSpan.FromSeconds(1)' Scheduler.CurrentThread)                      .Take(3)                      .Timestamp()                      .Select(x => Math.Round((x.Timestamp - now).TotalSeconds' 0))                      .ToArray()                      .Wait();                  xs[0].Is(2);                  xs[1].Is(3);                  xs[2].Is(4);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimerTest,The following statement contains a magic number: {                  var now = Scheduler.CurrentThread.Now;                  var xs = Observable.Timer(TimeSpan.FromSeconds(2)' TimeSpan.FromSeconds(1)' Scheduler.CurrentThread)                      .Take(3)                      .Timestamp()                      .Select(x => Math.Round((x.Timestamp - now).TotalSeconds' 0))                      .ToArray()                      .Wait();                  xs[0].Is(2);                  xs[1].Is(3);                  xs[2].Is(4);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TimerTest,The following statement contains a magic number: {                  var now = Scheduler.CurrentThread.Now;                  var xs = Observable.Timer(TimeSpan.FromSeconds(2)' TimeSpan.FromSeconds(1)' Scheduler.CurrentThread)                      .Take(3)                      .Timestamp()                      .Select(x => Math.Round((x.Timestamp - now).TotalSeconds' 0))                      .ToArray()                      .Wait();                  xs[0].Is(2);                  xs[1].Is(3);                  xs[2].Is(4);              }
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Timestamp,The following statement contains a magic number: var xs = Observable.Concat(                  Observable.Return(1)'                  Observable.Return(2).Delay(TimeSpan.FromSeconds(1))'                  Observable.Return(3).Delay(TimeSpan.FromSeconds(1))'                  Observable.Return(4).Delay(TimeSpan.FromSeconds(0.4))'                  Observable.Return(5).Delay(TimeSpan.FromSeconds(0.2)) // over 2500              ).Timestamp()              .ToArray()              .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Timestamp,The following statement contains a magic number: var xs = Observable.Concat(                  Observable.Return(1)'                  Observable.Return(2).Delay(TimeSpan.FromSeconds(1))'                  Observable.Return(3).Delay(TimeSpan.FromSeconds(1))'                  Observable.Return(4).Delay(TimeSpan.FromSeconds(0.4))'                  Observable.Return(5).Delay(TimeSpan.FromSeconds(0.2)) // over 2500              ).Timestamp()              .ToArray()              .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Timestamp,The following statement contains a magic number: var xs = Observable.Concat(                  Observable.Return(1)'                  Observable.Return(2).Delay(TimeSpan.FromSeconds(1))'                  Observable.Return(3).Delay(TimeSpan.FromSeconds(1))'                  Observable.Return(4).Delay(TimeSpan.FromSeconds(0.4))'                  Observable.Return(5).Delay(TimeSpan.FromSeconds(0.2)) // over 2500              ).Timestamp()              .ToArray()              .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Timestamp,The following statement contains a magic number: var xs = Observable.Concat(                  Observable.Return(1)'                  Observable.Return(2).Delay(TimeSpan.FromSeconds(1))'                  Observable.Return(3).Delay(TimeSpan.FromSeconds(1))'                  Observable.Return(4).Delay(TimeSpan.FromSeconds(0.4))'                  Observable.Return(5).Delay(TimeSpan.FromSeconds(0.2)) // over 2500              ).Timestamp()              .ToArray()              .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Timestamp,The following statement contains a magic number: var xs = Observable.Concat(                  Observable.Return(1)'                  Observable.Return(2).Delay(TimeSpan.FromSeconds(1))'                  Observable.Return(3).Delay(TimeSpan.FromSeconds(1))'                  Observable.Return(4).Delay(TimeSpan.FromSeconds(0.4))'                  Observable.Return(5).Delay(TimeSpan.FromSeconds(0.2)) // over 2500              ).Timestamp()              .ToArray()              .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Timestamp,The following statement contains a magic number: var xs = Observable.Concat(                  Observable.Return(1)'                  Observable.Return(2).Delay(TimeSpan.FromSeconds(1))'                  Observable.Return(3).Delay(TimeSpan.FromSeconds(1))'                  Observable.Return(4).Delay(TimeSpan.FromSeconds(0.4))'                  Observable.Return(5).Delay(TimeSpan.FromSeconds(0.2)) // over 2500              ).Timestamp()              .ToArray()              .Wait();
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Timestamp,The following statement contains a magic number: (now - xs[0].Timestamp).TotalSeconds.Is(x => 2.5 <= x && x <= 3.0);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Timestamp,The following statement contains a magic number: (now - xs[0].Timestamp).TotalSeconds.Is(x => 2.5 <= x && x <= 3.0);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Timestamp,The following statement contains a magic number: xs[1].Value.Is(2);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Timestamp,The following statement contains a magic number: (now - xs[1].Timestamp).TotalSeconds.Is(x => 1.4 <= x && x <= 1.8);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Timestamp,The following statement contains a magic number: (now - xs[1].Timestamp).TotalSeconds.Is(x => 1.4 <= x && x <= 1.8);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Timestamp,The following statement contains a magic number: xs[2].Value.Is(3);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Timestamp,The following statement contains a magic number: xs[2].Value.Is(3);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Timestamp,The following statement contains a magic number: (now - xs[2].Timestamp).TotalSeconds.Is(x => 0.5 <= x && x <= 0.8);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Timestamp,The following statement contains a magic number: (now - xs[2].Timestamp).TotalSeconds.Is(x => 0.5 <= x && x <= 0.8);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Timestamp,The following statement contains a magic number: (now - xs[2].Timestamp).TotalSeconds.Is(x => 0.5 <= x && x <= 0.8);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Timestamp,The following statement contains a magic number: xs[3].Value.Is(4);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Timestamp,The following statement contains a magic number: xs[3].Value.Is(4);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Timestamp,The following statement contains a magic number: (now - xs[3].Timestamp).TotalSeconds.Is(x => 0.18 <= x && x <= 0.3);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Timestamp,The following statement contains a magic number: (now - xs[3].Timestamp).TotalSeconds.Is(x => 0.18 <= x && x <= 0.3);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Timestamp,The following statement contains a magic number: (now - xs[3].Timestamp).TotalSeconds.Is(x => 0.18 <= x && x <= 0.3);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Timestamp,The following statement contains a magic number: xs[4].Value.Is(5);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Timestamp,The following statement contains a magic number: xs[4].Value.Is(5);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Timestamp,The following statement contains a magic number: (now - xs[4].Timestamp).TotalSeconds.Is(x => 0 <= x && x <= 0.1);
Magic Number,RuntimeUnitTestToolkit,ObservableTimeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Timestamp,The following statement contains a magic number: (now - xs[4].Timestamp).TotalSeconds.Is(x => 0 <= x && x <= 0.1);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: q.Enqueue(x => l.Add((int)x)' 2);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: q.Enqueue(x => q.Enqueue(_ => l.Add((int)x)' null)' -2);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: q.Enqueue(x => l.Add((int)x)' 3);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: q.Enqueue(x => q.Enqueue(_ => l.Add((int)x)' null)' -3);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: q.Enqueue(x => l.Add((int)x)' 4);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: q.Enqueue(x => q.Enqueue(_ => l.Add((int)x)' null)' -4);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: q.Enqueue(x => l.Add((int)x)' 5);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: q.Enqueue(x => q.Enqueue(_ => l.Add((int)x)' null)' -5);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: q.Enqueue(x => l.Add((int)x)' 6);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: q.Enqueue(x => q.Enqueue(_ => l.Add((int)x)' null)' -6);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: q.Enqueue(x => l.Add((int)x)' 7);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: q.Enqueue(x => q.Enqueue(_ => l.Add((int)x)' null)' -7);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: q.Enqueue(x => l.Add((int)x)' 8);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: q.Enqueue(x => q.Enqueue(_ => l.Add((int)x)' null)' -8);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: q.Enqueue(x => l.Add((int)x)' 9);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: q.Enqueue(x => q.Enqueue(_ => l.Add((int)x)' null)' -9);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: q.Enqueue(x => l.Add((int)x)' 10);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: q.Enqueue(x => q.Enqueue(_ => l.Add((int)x)' null)' -10);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: q.Enqueue(x => l.Add((int)x)' 11);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: q.Enqueue(x => q.Enqueue(_ => l.Add((int)x)' null)' -11);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: q.Enqueue(x => l.Add((int)x)' 12);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: l.IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: l.IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: l.IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: l.IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: l.IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: l.IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: l.IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: l.IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: l.IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: l.IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: l.IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: l.IsCollection(-1' -2' -3' -4' -5' -6' -7' -8' -9' -10' -11);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: l.IsCollection(-1' -2' -3' -4' -5' -6' -7' -8' -9' -10' -11);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: l.IsCollection(-1' -2' -3' -4' -5' -6' -7' -8' -9' -10' -11);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: l.IsCollection(-1' -2' -3' -4' -5' -6' -7' -8' -9' -10' -11);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: l.IsCollection(-1' -2' -3' -4' -5' -6' -7' -8' -9' -10' -11);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: l.IsCollection(-1' -2' -3' -4' -5' -6' -7' -8' -9' -10' -11);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: l.IsCollection(-1' -2' -3' -4' -5' -6' -7' -8' -9' -10' -11);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: l.IsCollection(-1' -2' -3' -4' -5' -6' -7' -8' -9' -10' -11);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: l.IsCollection(-1' -2' -3' -4' -5' -6' -7' -8' -9' -10' -11);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: l.IsCollection(-1' -2' -3' -4' -5' -6' -7' -8' -9' -10' -11);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: q.Enqueue(x => l.Add((int)x)' 2);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: q.Enqueue(x => q.Enqueue(_ => l.Add((int)x)' null)' -2);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: q.Enqueue(x => l.Add((int)x)' 3);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: q.Enqueue(x => q.Enqueue(_ => l.Add((int)x)' null)' -3);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: q.Enqueue(x => l.Add((int)x)' 4);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: q.Enqueue(x => q.Enqueue(_ => l.Add((int)x)' null)' -4);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: q.Enqueue(x => l.Add((int)x)' 5);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: q.Enqueue(x => q.Enqueue(_ => l.Add((int)x)' null)' -5);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: q.Enqueue(x => l.Add((int)x)' 6);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: q.Enqueue(x => q.Enqueue(_ => l.Add((int)x)' null)' -6);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: q.Enqueue(x => l.Add((int)x)' 7);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: q.Enqueue(x => q.Enqueue(_ => l.Add((int)x)' null)' -7);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: q.Enqueue(x => l.Add((int)x)' 8);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: q.Enqueue(x => q.Enqueue(_ => l.Add((int)x)' null)' -8);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: q.Enqueue(x => l.Add((int)x)' 9);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: q.Enqueue(x => q.Enqueue(_ => l.Add((int)x)' null)' -9);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: q.Enqueue(x => l.Add((int)x)' 10);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: q.Enqueue(x => q.Enqueue(_ => l.Add((int)x)' null)' -10);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: q.Enqueue(x => l.Add((int)x)' 11);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: q.Enqueue(x => q.Enqueue(_ => l.Add((int)x)' null)' -11);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: q.Enqueue(x => l.Add((int)x)' 12);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: l.IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: l.IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: l.IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: l.IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: l.IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: l.IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: l.IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: l.IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: l.IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: l.IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: l.IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: l.IsCollection(-1' -2' -3' -4' -5' -6' -7' -8' -9' -10' -11);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: l.IsCollection(-1' -2' -3' -4' -5' -6' -7' -8' -9' -10' -11);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: l.IsCollection(-1' -2' -3' -4' -5' -6' -7' -8' -9' -10' -11);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: l.IsCollection(-1' -2' -3' -4' -5' -6' -7' -8' -9' -10' -11);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: l.IsCollection(-1' -2' -3' -4' -5' -6' -7' -8' -9' -10' -11);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: l.IsCollection(-1' -2' -3' -4' -5' -6' -7' -8' -9' -10' -11);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: l.IsCollection(-1' -2' -3' -4' -5' -6' -7' -8' -9' -10' -11);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: l.IsCollection(-1' -2' -3' -4' -5' -6' -7' -8' -9' -10' -11);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: l.IsCollection(-1' -2' -3' -4' -5' -6' -7' -8' -9' -10' -11);
Magic Number,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The following statement contains a magic number: l.IsCollection(-1' -2' -3' -4' -5' -6' -7' -8' -9' -10' -11);
Magic Number,RuntimeUnitTestToolkit,RangeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Range,The following statement contains a magic number: Observable.Range(1' 10).ToArray().Wait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,RangeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Range,The following statement contains a magic number: Observable.Range(1' 10).ToArray().Wait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,RangeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Range,The following statement contains a magic number: Observable.Range(1' 10).ToArray().Wait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,RangeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Range,The following statement contains a magic number: Observable.Range(1' 10).ToArray().Wait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,RangeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Range,The following statement contains a magic number: Observable.Range(1' 10).ToArray().Wait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,RangeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Range,The following statement contains a magic number: Observable.Range(1' 10).ToArray().Wait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,RangeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Range,The following statement contains a magic number: Observable.Range(1' 10).ToArray().Wait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,RangeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Range,The following statement contains a magic number: Observable.Range(1' 10).ToArray().Wait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,RangeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Range,The following statement contains a magic number: Observable.Range(1' 10).ToArray().Wait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,RangeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Range,The following statement contains a magic number: Observable.Range(1' 10).ToArray().Wait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,RangeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Range,The following statement contains a magic number: Observable.Range(1' 10' Scheduler.Immediate).ToArray().Wait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,RangeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Range,The following statement contains a magic number: Observable.Range(1' 10' Scheduler.Immediate).ToArray().Wait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,RangeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Range,The following statement contains a magic number: Observable.Range(1' 10' Scheduler.Immediate).ToArray().Wait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,RangeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Range,The following statement contains a magic number: Observable.Range(1' 10' Scheduler.Immediate).ToArray().Wait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,RangeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Range,The following statement contains a magic number: Observable.Range(1' 10' Scheduler.Immediate).ToArray().Wait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,RangeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Range,The following statement contains a magic number: Observable.Range(1' 10' Scheduler.Immediate).ToArray().Wait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,RangeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Range,The following statement contains a magic number: Observable.Range(1' 10' Scheduler.Immediate).ToArray().Wait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,RangeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Range,The following statement contains a magic number: Observable.Range(1' 10' Scheduler.Immediate).ToArray().Wait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,RangeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Range,The following statement contains a magic number: Observable.Range(1' 10' Scheduler.Immediate).ToArray().Wait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,RangeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Range,The following statement contains a magic number: Observable.Range(1' 10' Scheduler.Immediate).ToArray().Wait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FinishedSourceToReactiveProperty,The following statement contains a magic number: {                  var source = Observable.Return(9);                  var rxProp = source.ToReactiveProperty();                  var notifications = rxProp.Record().Notifications;                  notifications.IsCollection(Notification.CreateOnNext(9));                  rxProp.Value = 9999;                  notifications.IsCollection(Notification.CreateOnNext(9)' Notification.CreateOnNext(9999));                  rxProp.Record().Values.IsCollection(9999);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FinishedSourceToReactiveProperty,The following statement contains a magic number: {                  var source = Observable.Return(9);                  var rxProp = source.ToReactiveProperty();                  var notifications = rxProp.Record().Notifications;                  notifications.IsCollection(Notification.CreateOnNext(9));                  rxProp.Value = 9999;                  notifications.IsCollection(Notification.CreateOnNext(9)' Notification.CreateOnNext(9999));                  rxProp.Record().Values.IsCollection(9999);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FinishedSourceToReactiveProperty,The following statement contains a magic number: {                  var source = Observable.Return(9);                  var rxProp = source.ToReactiveProperty();                  var notifications = rxProp.Record().Notifications;                  notifications.IsCollection(Notification.CreateOnNext(9));                  rxProp.Value = 9999;                  notifications.IsCollection(Notification.CreateOnNext(9)' Notification.CreateOnNext(9999));                  rxProp.Record().Values.IsCollection(9999);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FinishedSourceToReactiveProperty,The following statement contains a magic number: {                  var source = Observable.Return(9);                  var rxProp = source.ToReactiveProperty();                  var notifications = rxProp.Record().Notifications;                  notifications.IsCollection(Notification.CreateOnNext(9));                  rxProp.Value = 9999;                  notifications.IsCollection(Notification.CreateOnNext(9)' Notification.CreateOnNext(9999));                  rxProp.Record().Values.IsCollection(9999);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FinishedSourceToReactiveProperty,The following statement contains a magic number: {                  var source = Observable.Return(9);                  var rxProp = source.ToReactiveProperty();                  var notifications = rxProp.Record().Notifications;                  notifications.IsCollection(Notification.CreateOnNext(9));                  rxProp.Value = 9999;                  notifications.IsCollection(Notification.CreateOnNext(9)' Notification.CreateOnNext(9999));                  rxProp.Record().Values.IsCollection(9999);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FinishedSourceToReactiveProperty,The following statement contains a magic number: {                  var source = Observable.Return(9);                  var rxProp = source.ToReactiveProperty();                  var notifications = rxProp.Record().Notifications;                  notifications.IsCollection(Notification.CreateOnNext(9));                  rxProp.Value = 9999;                  notifications.IsCollection(Notification.CreateOnNext(9)' Notification.CreateOnNext(9999));                  rxProp.Record().Values.IsCollection(9999);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FinishedSourceToReactiveProperty,The following statement contains a magic number: {                  // after                  {                      var ex = new Exception();                      var source = Observable.Throw<int>(ex);                      var rxProp = source.ToReactiveProperty();                      var notifications = rxProp.Record().Notifications;                      notifications.IsCollection(Notification.CreateOnError<int>(ex));                      rxProp.Value = 9999;                      notifications.IsCollection(Notification.CreateOnError<int>(ex));                      rxProp.Record().Notifications.IsCollection(Notification.CreateOnError<int>(ex));                  }                  // immediate                  {                      // var ex = new Exception();                      var source = new Subject<int>();                      var rxProp = source.ToReactiveProperty();                      var record = rxProp.Record();                      source.OnError(new Exception());                      var notifications = record.Notifications;                      notifications.Count.Is(1);                      notifications[0].Kind.Is(NotificationKind.OnError);                      rxProp.Value = 9999;                      notifications.Count.Is(1);                      notifications[0].Kind.Is(NotificationKind.OnError);                      rxProp.Record().Notifications[0].Kind.Is(NotificationKind.OnError);                  }              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FinishedSourceToReactiveProperty,The following statement contains a magic number: {                  // after                  {                      var ex = new Exception();                      var source = Observable.Throw<int>(ex);                      var rxProp = source.ToReactiveProperty();                      var notifications = rxProp.Record().Notifications;                      notifications.IsCollection(Notification.CreateOnError<int>(ex));                      rxProp.Value = 9999;                      notifications.IsCollection(Notification.CreateOnError<int>(ex));                      rxProp.Record().Notifications.IsCollection(Notification.CreateOnError<int>(ex));                  }                  // immediate                  {                      // var ex = new Exception();                      var source = new Subject<int>();                      var rxProp = source.ToReactiveProperty();                      var record = rxProp.Record();                      source.OnError(new Exception());                      var notifications = record.Notifications;                      notifications.Count.Is(1);                      notifications[0].Kind.Is(NotificationKind.OnError);                      rxProp.Value = 9999;                      notifications.Count.Is(1);                      notifications[0].Kind.Is(NotificationKind.OnError);                      rxProp.Record().Notifications[0].Kind.Is(NotificationKind.OnError);                  }              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FinishedSourceToReadOnlyReactiveProperty,The following statement contains a magic number: {                  var source = Observable.Return(9);                  var rxProp = source.ToReadOnlyReactiveProperty();                  var notifications = rxProp.Record().Notifications;                  notifications.IsCollection(Notification.CreateOnNext(9)' Notification.CreateOnCompleted<int>());                  rxProp.Record().Notifications.IsCollection(                      Notification.CreateOnNext(9)'                      Notification.CreateOnCompleted<int>());              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FinishedSourceToReadOnlyReactiveProperty,The following statement contains a magic number: {                  var source = Observable.Return(9);                  var rxProp = source.ToReadOnlyReactiveProperty();                  var notifications = rxProp.Record().Notifications;                  notifications.IsCollection(Notification.CreateOnNext(9)' Notification.CreateOnCompleted<int>());                  rxProp.Record().Notifications.IsCollection(                      Notification.CreateOnNext(9)'                      Notification.CreateOnCompleted<int>());              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,FinishedSourceToReadOnlyReactiveProperty,The following statement contains a magic number: {                  var source = Observable.Return(9);                  var rxProp = source.ToReadOnlyReactiveProperty();                  var notifications = rxProp.Record().Notifications;                  notifications.IsCollection(Notification.CreateOnNext(9)' Notification.CreateOnCompleted<int>());                  rxProp.Record().Notifications.IsCollection(                      Notification.CreateOnNext(9)'                      Notification.CreateOnCompleted<int>());              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToReadOnlyReactivePropertyValueType,The following statement contains a magic number: {                  var source = new Subject<int>();                  var rp = source.ToReadOnlyReactiveProperty();                  var result = rp.Record();                  result.Values.Count.Is(0);                  source.OnNext(0);                  result.Values.IsCollection(0);                  source.OnNext(10);                  result.Values.IsCollection(0' 10);                  source.OnNext(100);                  result.Values.IsCollection(0' 10' 100);                  source.OnNext(100);                  result.Values.IsCollection(0' 10' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToReadOnlyReactivePropertyValueType,The following statement contains a magic number: {                  var source = new Subject<int>();                  var rp = source.ToReadOnlyReactiveProperty();                  var result = rp.Record();                  result.Values.Count.Is(0);                  source.OnNext(0);                  result.Values.IsCollection(0);                  source.OnNext(10);                  result.Values.IsCollection(0' 10);                  source.OnNext(100);                  result.Values.IsCollection(0' 10' 100);                  source.OnNext(100);                  result.Values.IsCollection(0' 10' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToReadOnlyReactivePropertyValueType,The following statement contains a magic number: {                  var source = new Subject<int>();                  var rp = source.ToReadOnlyReactiveProperty();                  var result = rp.Record();                  result.Values.Count.Is(0);                  source.OnNext(0);                  result.Values.IsCollection(0);                  source.OnNext(10);                  result.Values.IsCollection(0' 10);                  source.OnNext(100);                  result.Values.IsCollection(0' 10' 100);                  source.OnNext(100);                  result.Values.IsCollection(0' 10' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToReadOnlyReactivePropertyValueType,The following statement contains a magic number: {                  var source = new Subject<int>();                  var rp = source.ToReadOnlyReactiveProperty();                  var result = rp.Record();                  result.Values.Count.Is(0);                  source.OnNext(0);                  result.Values.IsCollection(0);                  source.OnNext(10);                  result.Values.IsCollection(0' 10);                  source.OnNext(100);                  result.Values.IsCollection(0' 10' 100);                  source.OnNext(100);                  result.Values.IsCollection(0' 10' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToReadOnlyReactivePropertyValueType,The following statement contains a magic number: {                  var source = new Subject<int>();                  var rp = source.ToReadOnlyReactiveProperty();                  var result = rp.Record();                  result.Values.Count.Is(0);                  source.OnNext(0);                  result.Values.IsCollection(0);                  source.OnNext(10);                  result.Values.IsCollection(0' 10);                  source.OnNext(100);                  result.Values.IsCollection(0' 10' 100);                  source.OnNext(100);                  result.Values.IsCollection(0' 10' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToReadOnlyReactivePropertyValueType,The following statement contains a magic number: {                  var source = new Subject<int>();                  var rp = source.ToReadOnlyReactiveProperty();                  var result = rp.Record();                  result.Values.Count.Is(0);                  source.OnNext(0);                  result.Values.IsCollection(0);                  source.OnNext(10);                  result.Values.IsCollection(0' 10);                  source.OnNext(100);                  result.Values.IsCollection(0' 10' 100);                  source.OnNext(100);                  result.Values.IsCollection(0' 10' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToReadOnlyReactivePropertyValueType,The following statement contains a magic number: {                  var source = new Subject<int>();                  var rp = source.ToReadOnlyReactiveProperty();                  var result = rp.Record();                  result.Values.Count.Is(0);                  source.OnNext(0);                  result.Values.IsCollection(0);                  source.OnNext(10);                  result.Values.IsCollection(0' 10);                  source.OnNext(100);                  result.Values.IsCollection(0' 10' 100);                  source.OnNext(100);                  result.Values.IsCollection(0' 10' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToReadOnlyReactivePropertyValueType,The following statement contains a magic number: {                  var source = new Subject<int>();                  var rp = source.ToReadOnlyReactiveProperty();                  var result = rp.Record();                  result.Values.Count.Is(0);                  source.OnNext(0);                  result.Values.IsCollection(0);                  source.OnNext(10);                  result.Values.IsCollection(0' 10);                  source.OnNext(100);                  result.Values.IsCollection(0' 10' 100);                  source.OnNext(100);                  result.Values.IsCollection(0' 10' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToReadOnlyReactivePropertyValueType,The following statement contains a magic number: {                  var source = new Subject<int>();                  var rp = source.ToSequentialReadOnlyReactiveProperty();                  var result = rp.Record();                  result.Values.Count.Is(0);                  source.OnNext(0);                  result.Values.IsCollection(0);                  source.OnNext(10);                  result.Values.IsCollection(0' 10);                  source.OnNext(100);                  result.Values.IsCollection(0' 10' 100);                  source.OnNext(100);                  result.Values.IsCollection(0' 10' 100' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToReadOnlyReactivePropertyValueType,The following statement contains a magic number: {                  var source = new Subject<int>();                  var rp = source.ToSequentialReadOnlyReactiveProperty();                  var result = rp.Record();                  result.Values.Count.Is(0);                  source.OnNext(0);                  result.Values.IsCollection(0);                  source.OnNext(10);                  result.Values.IsCollection(0' 10);                  source.OnNext(100);                  result.Values.IsCollection(0' 10' 100);                  source.OnNext(100);                  result.Values.IsCollection(0' 10' 100' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToReadOnlyReactivePropertyValueType,The following statement contains a magic number: {                  var source = new Subject<int>();                  var rp = source.ToSequentialReadOnlyReactiveProperty();                  var result = rp.Record();                  result.Values.Count.Is(0);                  source.OnNext(0);                  result.Values.IsCollection(0);                  source.OnNext(10);                  result.Values.IsCollection(0' 10);                  source.OnNext(100);                  result.Values.IsCollection(0' 10' 100);                  source.OnNext(100);                  result.Values.IsCollection(0' 10' 100' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToReadOnlyReactivePropertyValueType,The following statement contains a magic number: {                  var source = new Subject<int>();                  var rp = source.ToSequentialReadOnlyReactiveProperty();                  var result = rp.Record();                  result.Values.Count.Is(0);                  source.OnNext(0);                  result.Values.IsCollection(0);                  source.OnNext(10);                  result.Values.IsCollection(0' 10);                  source.OnNext(100);                  result.Values.IsCollection(0' 10' 100);                  source.OnNext(100);                  result.Values.IsCollection(0' 10' 100' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToReadOnlyReactivePropertyValueType,The following statement contains a magic number: {                  var source = new Subject<int>();                  var rp = source.ToSequentialReadOnlyReactiveProperty();                  var result = rp.Record();                  result.Values.Count.Is(0);                  source.OnNext(0);                  result.Values.IsCollection(0);                  source.OnNext(10);                  result.Values.IsCollection(0' 10);                  source.OnNext(100);                  result.Values.IsCollection(0' 10' 100);                  source.OnNext(100);                  result.Values.IsCollection(0' 10' 100' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToReadOnlyReactivePropertyValueType,The following statement contains a magic number: {                  var source = new Subject<int>();                  var rp = source.ToSequentialReadOnlyReactiveProperty();                  var result = rp.Record();                  result.Values.Count.Is(0);                  source.OnNext(0);                  result.Values.IsCollection(0);                  source.OnNext(10);                  result.Values.IsCollection(0' 10);                  source.OnNext(100);                  result.Values.IsCollection(0' 10' 100);                  source.OnNext(100);                  result.Values.IsCollection(0' 10' 100' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToReadOnlyReactivePropertyValueType,The following statement contains a magic number: {                  var source = new Subject<int>();                  var rp = source.ToSequentialReadOnlyReactiveProperty();                  var result = rp.Record();                  result.Values.Count.Is(0);                  source.OnNext(0);                  result.Values.IsCollection(0);                  source.OnNext(10);                  result.Values.IsCollection(0' 10);                  source.OnNext(100);                  result.Values.IsCollection(0' 10' 100);                  source.OnNext(100);                  result.Values.IsCollection(0' 10' 100' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToReadOnlyReactivePropertyValueType,The following statement contains a magic number: {                  var source = new Subject<int>();                  var rp = source.ToSequentialReadOnlyReactiveProperty();                  var result = rp.Record();                  result.Values.Count.Is(0);                  source.OnNext(0);                  result.Values.IsCollection(0);                  source.OnNext(10);                  result.Values.IsCollection(0' 10);                  source.OnNext(100);                  result.Values.IsCollection(0' 10' 100);                  source.OnNext(100);                  result.Values.IsCollection(0' 10' 100' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToReadOnlyReactivePropertyValueType,The following statement contains a magic number: {                  var source = new Subject<int>();                  var rp = source.ToSequentialReadOnlyReactiveProperty();                  var result = rp.Record();                  result.Values.Count.Is(0);                  source.OnNext(0);                  result.Values.IsCollection(0);                  source.OnNext(10);                  result.Values.IsCollection(0' 10);                  source.OnNext(100);                  result.Values.IsCollection(0' 10' 100);                  source.OnNext(100);                  result.Values.IsCollection(0' 10' 100' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToReadOnlyReactivePropertyValueType,The following statement contains a magic number: {                  var source = new Subject<int>();                  var rp = source.ToReadOnlyReactiveProperty(0);                  var result = rp.Record();                  result.Values.IsCollection(0);                  source.OnNext(0);                  result.Values.IsCollection(0);                  source.OnNext(10);                  result.Values.IsCollection(0' 10);                  source.OnNext(100);                  result.Values.IsCollection(0' 10' 100);                  source.OnNext(100);                  result.Values.IsCollection(0' 10' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToReadOnlyReactivePropertyValueType,The following statement contains a magic number: {                  var source = new Subject<int>();                  var rp = source.ToReadOnlyReactiveProperty(0);                  var result = rp.Record();                  result.Values.IsCollection(0);                  source.OnNext(0);                  result.Values.IsCollection(0);                  source.OnNext(10);                  result.Values.IsCollection(0' 10);                  source.OnNext(100);                  result.Values.IsCollection(0' 10' 100);                  source.OnNext(100);                  result.Values.IsCollection(0' 10' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToReadOnlyReactivePropertyValueType,The following statement contains a magic number: {                  var source = new Subject<int>();                  var rp = source.ToReadOnlyReactiveProperty(0);                  var result = rp.Record();                  result.Values.IsCollection(0);                  source.OnNext(0);                  result.Values.IsCollection(0);                  source.OnNext(10);                  result.Values.IsCollection(0' 10);                  source.OnNext(100);                  result.Values.IsCollection(0' 10' 100);                  source.OnNext(100);                  result.Values.IsCollection(0' 10' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToReadOnlyReactivePropertyValueType,The following statement contains a magic number: {                  var source = new Subject<int>();                  var rp = source.ToReadOnlyReactiveProperty(0);                  var result = rp.Record();                  result.Values.IsCollection(0);                  source.OnNext(0);                  result.Values.IsCollection(0);                  source.OnNext(10);                  result.Values.IsCollection(0' 10);                  source.OnNext(100);                  result.Values.IsCollection(0' 10' 100);                  source.OnNext(100);                  result.Values.IsCollection(0' 10' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToReadOnlyReactivePropertyValueType,The following statement contains a magic number: {                  var source = new Subject<int>();                  var rp = source.ToReadOnlyReactiveProperty(0);                  var result = rp.Record();                  result.Values.IsCollection(0);                  source.OnNext(0);                  result.Values.IsCollection(0);                  source.OnNext(10);                  result.Values.IsCollection(0' 10);                  source.OnNext(100);                  result.Values.IsCollection(0' 10' 100);                  source.OnNext(100);                  result.Values.IsCollection(0' 10' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToReadOnlyReactivePropertyValueType,The following statement contains a magic number: {                  var source = new Subject<int>();                  var rp = source.ToReadOnlyReactiveProperty(0);                  var result = rp.Record();                  result.Values.IsCollection(0);                  source.OnNext(0);                  result.Values.IsCollection(0);                  source.OnNext(10);                  result.Values.IsCollection(0' 10);                  source.OnNext(100);                  result.Values.IsCollection(0' 10' 100);                  source.OnNext(100);                  result.Values.IsCollection(0' 10' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToReadOnlyReactivePropertyValueType,The following statement contains a magic number: {                  var source = new Subject<int>();                  var rp = source.ToReadOnlyReactiveProperty(0);                  var result = rp.Record();                  result.Values.IsCollection(0);                  source.OnNext(0);                  result.Values.IsCollection(0);                  source.OnNext(10);                  result.Values.IsCollection(0' 10);                  source.OnNext(100);                  result.Values.IsCollection(0' 10' 100);                  source.OnNext(100);                  result.Values.IsCollection(0' 10' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToReadOnlyReactivePropertyValueType,The following statement contains a magic number: {                  var source = new Subject<int>();                  var rp = source.ToReadOnlyReactiveProperty(0);                  var result = rp.Record();                  result.Values.IsCollection(0);                  source.OnNext(0);                  result.Values.IsCollection(0);                  source.OnNext(10);                  result.Values.IsCollection(0' 10);                  source.OnNext(100);                  result.Values.IsCollection(0' 10' 100);                  source.OnNext(100);                  result.Values.IsCollection(0' 10' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToReadOnlyReactivePropertyValueType,The following statement contains a magic number: {                  var source = new Subject<int>();                  var rp = source.ToSequentialReadOnlyReactiveProperty(0);                  var result = rp.Record();                  result.Values.IsCollection(0);                  source.OnNext(0);                  result.Values.IsCollection(0' 0);                  source.OnNext(10);                  result.Values.IsCollection(0' 0' 10);                  source.OnNext(100);                  result.Values.IsCollection(0' 0' 10' 100);                  source.OnNext(100);                  result.Values.IsCollection(0' 0' 10' 100' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToReadOnlyReactivePropertyValueType,The following statement contains a magic number: {                  var source = new Subject<int>();                  var rp = source.ToSequentialReadOnlyReactiveProperty(0);                  var result = rp.Record();                  result.Values.IsCollection(0);                  source.OnNext(0);                  result.Values.IsCollection(0' 0);                  source.OnNext(10);                  result.Values.IsCollection(0' 0' 10);                  source.OnNext(100);                  result.Values.IsCollection(0' 0' 10' 100);                  source.OnNext(100);                  result.Values.IsCollection(0' 0' 10' 100' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToReadOnlyReactivePropertyValueType,The following statement contains a magic number: {                  var source = new Subject<int>();                  var rp = source.ToSequentialReadOnlyReactiveProperty(0);                  var result = rp.Record();                  result.Values.IsCollection(0);                  source.OnNext(0);                  result.Values.IsCollection(0' 0);                  source.OnNext(10);                  result.Values.IsCollection(0' 0' 10);                  source.OnNext(100);                  result.Values.IsCollection(0' 0' 10' 100);                  source.OnNext(100);                  result.Values.IsCollection(0' 0' 10' 100' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToReadOnlyReactivePropertyValueType,The following statement contains a magic number: {                  var source = new Subject<int>();                  var rp = source.ToSequentialReadOnlyReactiveProperty(0);                  var result = rp.Record();                  result.Values.IsCollection(0);                  source.OnNext(0);                  result.Values.IsCollection(0' 0);                  source.OnNext(10);                  result.Values.IsCollection(0' 0' 10);                  source.OnNext(100);                  result.Values.IsCollection(0' 0' 10' 100);                  source.OnNext(100);                  result.Values.IsCollection(0' 0' 10' 100' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToReadOnlyReactivePropertyValueType,The following statement contains a magic number: {                  var source = new Subject<int>();                  var rp = source.ToSequentialReadOnlyReactiveProperty(0);                  var result = rp.Record();                  result.Values.IsCollection(0);                  source.OnNext(0);                  result.Values.IsCollection(0' 0);                  source.OnNext(10);                  result.Values.IsCollection(0' 0' 10);                  source.OnNext(100);                  result.Values.IsCollection(0' 0' 10' 100);                  source.OnNext(100);                  result.Values.IsCollection(0' 0' 10' 100' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToReadOnlyReactivePropertyValueType,The following statement contains a magic number: {                  var source = new Subject<int>();                  var rp = source.ToSequentialReadOnlyReactiveProperty(0);                  var result = rp.Record();                  result.Values.IsCollection(0);                  source.OnNext(0);                  result.Values.IsCollection(0' 0);                  source.OnNext(10);                  result.Values.IsCollection(0' 0' 10);                  source.OnNext(100);                  result.Values.IsCollection(0' 0' 10' 100);                  source.OnNext(100);                  result.Values.IsCollection(0' 0' 10' 100' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToReadOnlyReactivePropertyValueType,The following statement contains a magic number: {                  var source = new Subject<int>();                  var rp = source.ToSequentialReadOnlyReactiveProperty(0);                  var result = rp.Record();                  result.Values.IsCollection(0);                  source.OnNext(0);                  result.Values.IsCollection(0' 0);                  source.OnNext(10);                  result.Values.IsCollection(0' 0' 10);                  source.OnNext(100);                  result.Values.IsCollection(0' 0' 10' 100);                  source.OnNext(100);                  result.Values.IsCollection(0' 0' 10' 100' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToReadOnlyReactivePropertyValueType,The following statement contains a magic number: {                  var source = new Subject<int>();                  var rp = source.ToSequentialReadOnlyReactiveProperty(0);                  var result = rp.Record();                  result.Values.IsCollection(0);                  source.OnNext(0);                  result.Values.IsCollection(0' 0);                  source.OnNext(10);                  result.Values.IsCollection(0' 0' 10);                  source.OnNext(100);                  result.Values.IsCollection(0' 0' 10' 100);                  source.OnNext(100);                  result.Values.IsCollection(0' 0' 10' 100' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToReadOnlyReactivePropertyValueType,The following statement contains a magic number: {                  var source = new Subject<int>();                  var rp = source.ToSequentialReadOnlyReactiveProperty(0);                  var result = rp.Record();                  result.Values.IsCollection(0);                  source.OnNext(0);                  result.Values.IsCollection(0' 0);                  source.OnNext(10);                  result.Values.IsCollection(0' 0' 10);                  source.OnNext(100);                  result.Values.IsCollection(0' 0' 10' 100);                  source.OnNext(100);                  result.Values.IsCollection(0' 0' 10' 100' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ValueType,The following statement contains a magic number: {                  var rp = new ReactiveProperty<int>(); // 0                  var result = rp.Record();                  result.Values.IsCollection(0);                  rp.Value = 0;                  result.Values.IsCollection(0);                  rp.Value = 10;                  result.Values.IsCollection(0' 10);                  rp.Value = 100;                  result.Values.IsCollection(0' 10' 100);                  rp.Value = 100;                  result.Values.IsCollection(0' 10' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ValueType,The following statement contains a magic number: {                  var rp = new ReactiveProperty<int>(); // 0                  var result = rp.Record();                  result.Values.IsCollection(0);                  rp.Value = 0;                  result.Values.IsCollection(0);                  rp.Value = 10;                  result.Values.IsCollection(0' 10);                  rp.Value = 100;                  result.Values.IsCollection(0' 10' 100);                  rp.Value = 100;                  result.Values.IsCollection(0' 10' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ValueType,The following statement contains a magic number: {                  var rp = new ReactiveProperty<int>(); // 0                  var result = rp.Record();                  result.Values.IsCollection(0);                  rp.Value = 0;                  result.Values.IsCollection(0);                  rp.Value = 10;                  result.Values.IsCollection(0' 10);                  rp.Value = 100;                  result.Values.IsCollection(0' 10' 100);                  rp.Value = 100;                  result.Values.IsCollection(0' 10' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ValueType,The following statement contains a magic number: {                  var rp = new ReactiveProperty<int>(); // 0                  var result = rp.Record();                  result.Values.IsCollection(0);                  rp.Value = 0;                  result.Values.IsCollection(0);                  rp.Value = 10;                  result.Values.IsCollection(0' 10);                  rp.Value = 100;                  result.Values.IsCollection(0' 10' 100);                  rp.Value = 100;                  result.Values.IsCollection(0' 10' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ValueType,The following statement contains a magic number: {                  var rp = new ReactiveProperty<int>(); // 0                  var result = rp.Record();                  result.Values.IsCollection(0);                  rp.Value = 0;                  result.Values.IsCollection(0);                  rp.Value = 10;                  result.Values.IsCollection(0' 10);                  rp.Value = 100;                  result.Values.IsCollection(0' 10' 100);                  rp.Value = 100;                  result.Values.IsCollection(0' 10' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ValueType,The following statement contains a magic number: {                  var rp = new ReactiveProperty<int>(); // 0                  var result = rp.Record();                  result.Values.IsCollection(0);                  rp.Value = 0;                  result.Values.IsCollection(0);                  rp.Value = 10;                  result.Values.IsCollection(0' 10);                  rp.Value = 100;                  result.Values.IsCollection(0' 10' 100);                  rp.Value = 100;                  result.Values.IsCollection(0' 10' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ValueType,The following statement contains a magic number: {                  var rp = new ReactiveProperty<int>(); // 0                  var result = rp.Record();                  result.Values.IsCollection(0);                  rp.Value = 0;                  result.Values.IsCollection(0);                  rp.Value = 10;                  result.Values.IsCollection(0' 10);                  rp.Value = 100;                  result.Values.IsCollection(0' 10' 100);                  rp.Value = 100;                  result.Values.IsCollection(0' 10' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ValueType,The following statement contains a magic number: {                  var rp = new ReactiveProperty<int>(); // 0                  var result = rp.Record();                  result.Values.IsCollection(0);                  rp.Value = 0;                  result.Values.IsCollection(0);                  rp.Value = 10;                  result.Values.IsCollection(0' 10);                  rp.Value = 100;                  result.Values.IsCollection(0' 10' 100);                  rp.Value = 100;                  result.Values.IsCollection(0' 10' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ValueType,The following statement contains a magic number: {                  var rp = new ReactiveProperty<int>(20);                  var result = rp.Record();                  result.Values.IsCollection(20);                  rp.Value = 0;                  result.Values.IsCollection(20' 0);                  rp.Value = 10;                  result.Values.IsCollection(20' 0' 10);                  rp.Value = 100;                  result.Values.IsCollection(20' 0' 10' 100);                  rp.Value = 100;                  result.Values.IsCollection(20' 0' 10' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ValueType,The following statement contains a magic number: {                  var rp = new ReactiveProperty<int>(20);                  var result = rp.Record();                  result.Values.IsCollection(20);                  rp.Value = 0;                  result.Values.IsCollection(20' 0);                  rp.Value = 10;                  result.Values.IsCollection(20' 0' 10);                  rp.Value = 100;                  result.Values.IsCollection(20' 0' 10' 100);                  rp.Value = 100;                  result.Values.IsCollection(20' 0' 10' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ValueType,The following statement contains a magic number: {                  var rp = new ReactiveProperty<int>(20);                  var result = rp.Record();                  result.Values.IsCollection(20);                  rp.Value = 0;                  result.Values.IsCollection(20' 0);                  rp.Value = 10;                  result.Values.IsCollection(20' 0' 10);                  rp.Value = 100;                  result.Values.IsCollection(20' 0' 10' 100);                  rp.Value = 100;                  result.Values.IsCollection(20' 0' 10' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ValueType,The following statement contains a magic number: {                  var rp = new ReactiveProperty<int>(20);                  var result = rp.Record();                  result.Values.IsCollection(20);                  rp.Value = 0;                  result.Values.IsCollection(20' 0);                  rp.Value = 10;                  result.Values.IsCollection(20' 0' 10);                  rp.Value = 100;                  result.Values.IsCollection(20' 0' 10' 100);                  rp.Value = 100;                  result.Values.IsCollection(20' 0' 10' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ValueType,The following statement contains a magic number: {                  var rp = new ReactiveProperty<int>(20);                  var result = rp.Record();                  result.Values.IsCollection(20);                  rp.Value = 0;                  result.Values.IsCollection(20' 0);                  rp.Value = 10;                  result.Values.IsCollection(20' 0' 10);                  rp.Value = 100;                  result.Values.IsCollection(20' 0' 10' 100);                  rp.Value = 100;                  result.Values.IsCollection(20' 0' 10' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ValueType,The following statement contains a magic number: {                  var rp = new ReactiveProperty<int>(20);                  var result = rp.Record();                  result.Values.IsCollection(20);                  rp.Value = 0;                  result.Values.IsCollection(20' 0);                  rp.Value = 10;                  result.Values.IsCollection(20' 0' 10);                  rp.Value = 100;                  result.Values.IsCollection(20' 0' 10' 100);                  rp.Value = 100;                  result.Values.IsCollection(20' 0' 10' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ValueType,The following statement contains a magic number: {                  var rp = new ReactiveProperty<int>(20);                  var result = rp.Record();                  result.Values.IsCollection(20);                  rp.Value = 0;                  result.Values.IsCollection(20' 0);                  rp.Value = 10;                  result.Values.IsCollection(20' 0' 10);                  rp.Value = 100;                  result.Values.IsCollection(20' 0' 10' 100);                  rp.Value = 100;                  result.Values.IsCollection(20' 0' 10' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ValueType,The following statement contains a magic number: {                  var rp = new ReactiveProperty<int>(20);                  var result = rp.Record();                  result.Values.IsCollection(20);                  rp.Value = 0;                  result.Values.IsCollection(20' 0);                  rp.Value = 10;                  result.Values.IsCollection(20' 0' 10);                  rp.Value = 100;                  result.Values.IsCollection(20' 0' 10' 100);                  rp.Value = 100;                  result.Values.IsCollection(20' 0' 10' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ValueType,The following statement contains a magic number: {                  var rp = new ReactiveProperty<int>(20);                  var result = rp.Record();                  result.Values.IsCollection(20);                  rp.Value = 0;                  result.Values.IsCollection(20' 0);                  rp.Value = 10;                  result.Values.IsCollection(20' 0' 10);                  rp.Value = 100;                  result.Values.IsCollection(20' 0' 10' 100);                  rp.Value = 100;                  result.Values.IsCollection(20' 0' 10' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ValueType,The following statement contains a magic number: {                  var rp = new ReactiveProperty<int>(20);                  var result = rp.Record();                  result.Values.IsCollection(20);                  rp.Value = 0;                  result.Values.IsCollection(20' 0);                  rp.Value = 10;                  result.Values.IsCollection(20' 0' 10);                  rp.Value = 100;                  result.Values.IsCollection(20' 0' 10' 100);                  rp.Value = 100;                  result.Values.IsCollection(20' 0' 10' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ValueType,The following statement contains a magic number: {                  var rp = new ReactiveProperty<int>(20);                  var result = rp.Record();                  result.Values.IsCollection(20);                  rp.Value = 0;                  result.Values.IsCollection(20' 0);                  rp.Value = 10;                  result.Values.IsCollection(20' 0' 10);                  rp.Value = 100;                  result.Values.IsCollection(20' 0' 10' 100);                  rp.Value = 100;                  result.Values.IsCollection(20' 0' 10' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ValueType,The following statement contains a magic number: {                  var rp = new ReactiveProperty<int>(20);                  var result = rp.Record();                  result.Values.IsCollection(20);                  rp.Value = 0;                  result.Values.IsCollection(20' 0);                  rp.Value = 10;                  result.Values.IsCollection(20' 0' 10);                  rp.Value = 100;                  result.Values.IsCollection(20' 0' 10' 100);                  rp.Value = 100;                  result.Values.IsCollection(20' 0' 10' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ValueType,The following statement contains a magic number: {                  var rp = new ReactiveProperty<int>(20);                  var result = rp.Record();                  result.Values.IsCollection(20);                  rp.Value = 0;                  result.Values.IsCollection(20' 0);                  rp.Value = 10;                  result.Values.IsCollection(20' 0' 10);                  rp.Value = 100;                  result.Values.IsCollection(20' 0' 10' 100);                  rp.Value = 100;                  result.Values.IsCollection(20' 0' 10' 100);              }
Magic Number,RuntimeUnitTestToolkit,ReactivePropertyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ValueType,The following statement contains a magic number: {                  var rp = new ReactiveProperty<int>(20);                  var result = rp.Record();                  result.Values.IsCollection(20);                  rp.Value = 0;                  result.Values.IsCollection(20' 0);                  rp.Value = 10;                  result.Values.IsCollection(20' 0' 10);                  rp.Value = 100;                  result.Values.IsCollection(20' 0' 10' 100);                  rp.Value = 100;                  result.Values.IsCollection(20' 0' 10' 100);              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelector,The following statement contains a magic number: {                  // OnCompleted Case                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? b : c' (x' y) => Tuple.Create(x' y))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnCompleted();                  b.OnCompleted();                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((10' 200))"' "OnNext((100' 300))"' "OnNext((100' 400))"' "OnCompleted()");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelector,The following statement contains a magic number: {                  // OnCompleted Case                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? b : c' (x' y) => Tuple.Create(x' y))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnCompleted();                  b.OnCompleted();                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((10' 200))"' "OnNext((100' 300))"' "OnNext((100' 400))"' "OnCompleted()");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelector,The following statement contains a magic number: {                  // OnCompleted Case                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? b : c' (x' y) => Tuple.Create(x' y))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnCompleted();                  b.OnCompleted();                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((10' 200))"' "OnNext((100' 300))"' "OnNext((100' 400))"' "OnCompleted()");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelector,The following statement contains a magic number: {                  // OnCompleted Case                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? b : c' (x' y) => Tuple.Create(x' y))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnCompleted();                  b.OnCompleted();                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((10' 200))"' "OnNext((100' 300))"' "OnNext((100' 400))"' "OnCompleted()");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelector,The following statement contains a magic number: {                  // OnCompleted Case                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? b : c' (x' y) => Tuple.Create(x' y))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnCompleted();                  b.OnCompleted();                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((10' 200))"' "OnNext((100' 300))"' "OnNext((100' 400))"' "OnCompleted()");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelector,The following statement contains a magic number: {                  // OnCompleted Case                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? b : c' (x' y) => Tuple.Create(x' y))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnCompleted();                  b.OnCompleted();                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((10' 200))"' "OnNext((100' 300))"' "OnNext((100' 400))"' "OnCompleted()");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelector,The following statement contains a magic number: {                  // OnError A                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? b : c' (x' y) => Tuple.Create(x' y))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnError(new Exception());                  b.OnCompleted();                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((10' 200))"' "OnNext((100' 300))"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelector,The following statement contains a magic number: {                  // OnError A                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? b : c' (x' y) => Tuple.Create(x' y))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnError(new Exception());                  b.OnCompleted();                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((10' 200))"' "OnNext((100' 300))"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelector,The following statement contains a magic number: {                  // OnError A                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? b : c' (x' y) => Tuple.Create(x' y))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnError(new Exception());                  b.OnCompleted();                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((10' 200))"' "OnNext((100' 300))"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelector,The following statement contains a magic number: {                  // OnError A                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? b : c' (x' y) => Tuple.Create(x' y))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnError(new Exception());                  b.OnCompleted();                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((10' 200))"' "OnNext((100' 300))"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelector,The following statement contains a magic number: {                  // OnError A                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? b : c' (x' y) => Tuple.Create(x' y))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnError(new Exception());                  b.OnCompleted();                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((10' 200))"' "OnNext((100' 300))"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelector,The following statement contains a magic number: {                  // OnError A                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? b : c' (x' y) => Tuple.Create(x' y))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnError(new Exception());                  b.OnCompleted();                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((10' 200))"' "OnNext((100' 300))"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelector,The following statement contains a magic number: {                  // OnError B                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? b : c' (x' y) => Tuple.Create(x' y))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnCompleted();                  b.OnError(new Exception());                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((10' 200))"' "OnNext((100' 300))"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelector,The following statement contains a magic number: {                  // OnError B                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? b : c' (x' y) => Tuple.Create(x' y))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnCompleted();                  b.OnError(new Exception());                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((10' 200))"' "OnNext((100' 300))"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelector,The following statement contains a magic number: {                  // OnError B                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? b : c' (x' y) => Tuple.Create(x' y))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnCompleted();                  b.OnError(new Exception());                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((10' 200))"' "OnNext((100' 300))"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelector,The following statement contains a magic number: {                  // OnError B                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? b : c' (x' y) => Tuple.Create(x' y))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnCompleted();                  b.OnError(new Exception());                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((10' 200))"' "OnNext((100' 300))"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelector,The following statement contains a magic number: {                  // OnError B                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? b : c' (x' y) => Tuple.Create(x' y))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnCompleted();                  b.OnError(new Exception());                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((10' 200))"' "OnNext((100' 300))"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelector,The following statement contains a magic number: {                  // OnError B                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? b : c' (x' y) => Tuple.Create(x' y))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnCompleted();                  b.OnError(new Exception());                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((10' 200))"' "OnNext((100' 300))"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelectorEnumerable,The following statement contains a magic number: {                  // OnCompleted Case                  var a = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? Enumerable.Range(1' 3) : Enumerable.Repeat(10' 3)' (x' y) => Tuple.Create(x' y))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  a.OnCompleted();                  // check                  list.IsCollection("OnNext((10' 1))"' "OnNext((10' 2))"' "OnNext((10' 3))"' "OnNext((100' 10))"' "OnNext((100' 10))"' "OnNext((100' 10))"' "OnCompleted()");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelectorEnumerable,The following statement contains a magic number: {                  // OnCompleted Case                  var a = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? Enumerable.Range(1' 3) : Enumerable.Repeat(10' 3)' (x' y) => Tuple.Create(x' y))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  a.OnCompleted();                  // check                  list.IsCollection("OnNext((10' 1))"' "OnNext((10' 2))"' "OnNext((10' 3))"' "OnNext((100' 10))"' "OnNext((100' 10))"' "OnNext((100' 10))"' "OnCompleted()");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelectorEnumerable,The following statement contains a magic number: {                  // OnCompleted Case                  var a = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? Enumerable.Range(1' 3) : Enumerable.Repeat(10' 3)' (x' y) => Tuple.Create(x' y))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  a.OnCompleted();                  // check                  list.IsCollection("OnNext((10' 1))"' "OnNext((10' 2))"' "OnNext((10' 3))"' "OnNext((100' 10))"' "OnNext((100' 10))"' "OnNext((100' 10))"' "OnCompleted()");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelectorEnumerable,The following statement contains a magic number: {                  // OnCompleted Case                  var a = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? Enumerable.Range(1' 3) : Enumerable.Repeat(10' 3)' (x' y) => Tuple.Create(x' y))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  a.OnCompleted();                  // check                  list.IsCollection("OnNext((10' 1))"' "OnNext((10' 2))"' "OnNext((10' 3))"' "OnNext((100' 10))"' "OnNext((100' 10))"' "OnNext((100' 10))"' "OnCompleted()");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelectorEnumerable,The following statement contains a magic number: {                  // OnCompleted Case                  var a = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? Enumerable.Range(1' 3) : Enumerable.Repeat(10' 3)' (x' y) => Tuple.Create(x' y))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  a.OnCompleted();                  // check                  list.IsCollection("OnNext((10' 1))"' "OnNext((10' 2))"' "OnNext((10' 3))"' "OnNext((100' 10))"' "OnNext((100' 10))"' "OnNext((100' 10))"' "OnCompleted()");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelectorEnumerable,The following statement contains a magic number: {                  // OnCompleted Case                  var a = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? Enumerable.Range(1' 3) : Enumerable.Repeat(10' 3)' (x' y) => Tuple.Create(x' y))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  a.OnCompleted();                  // check                  list.IsCollection("OnNext((10' 1))"' "OnNext((10' 2))"' "OnNext((10' 3))"' "OnNext((100' 10))"' "OnNext((100' 10))"' "OnNext((100' 10))"' "OnCompleted()");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelectorEnumerable,The following statement contains a magic number: {                  // OnError Case                  var a = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? Enumerable.Range(1' 3) : Enumerable.Repeat(10' 3)' (x' y) => Tuple.Create(x' y))                   .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  a.OnError(new Exception());                  // check                  list.IsCollection("OnNext((10' 1))"' "OnNext((10' 2))"' "OnNext((10' 3))"' "OnNext((100' 10))"' "OnNext((100' 10))"' "OnNext((100' 10))"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelectorEnumerable,The following statement contains a magic number: {                  // OnError Case                  var a = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? Enumerable.Range(1' 3) : Enumerable.Repeat(10' 3)' (x' y) => Tuple.Create(x' y))                   .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  a.OnError(new Exception());                  // check                  list.IsCollection("OnNext((10' 1))"' "OnNext((10' 2))"' "OnNext((10' 3))"' "OnNext((100' 10))"' "OnNext((100' 10))"' "OnNext((100' 10))"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelectorEnumerable,The following statement contains a magic number: {                  // OnError Case                  var a = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? Enumerable.Range(1' 3) : Enumerable.Repeat(10' 3)' (x' y) => Tuple.Create(x' y))                   .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  a.OnError(new Exception());                  // check                  list.IsCollection("OnNext((10' 1))"' "OnNext((10' 2))"' "OnNext((10' 3))"' "OnNext((100' 10))"' "OnNext((100' 10))"' "OnNext((100' 10))"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelectorEnumerable,The following statement contains a magic number: {                  // OnError Case                  var a = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? Enumerable.Range(1' 3) : Enumerable.Repeat(10' 3)' (x' y) => Tuple.Create(x' y))                   .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  a.OnError(new Exception());                  // check                  list.IsCollection("OnNext((10' 1))"' "OnNext((10' 2))"' "OnNext((10' 3))"' "OnNext((100' 10))"' "OnNext((100' 10))"' "OnNext((100' 10))"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelectorEnumerable,The following statement contains a magic number: {                  // OnError Case                  var a = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? Enumerable.Range(1' 3) : Enumerable.Repeat(10' 3)' (x' y) => Tuple.Create(x' y))                   .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  a.OnError(new Exception());                  // check                  list.IsCollection("OnNext((10' 1))"' "OnNext((10' 2))"' "OnNext((10' 3))"' "OnNext((100' 10))"' "OnNext((100' 10))"' "OnNext((100' 10))"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelectorEnumerable,The following statement contains a magic number: {                  // OnError Case                  var a = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? Enumerable.Range(1' 3) : Enumerable.Repeat(10' 3)' (x' y) => Tuple.Create(x' y))                   .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  a.OnError(new Exception());                  // check                  list.IsCollection("OnNext((10' 1))"' "OnNext((10' 2))"' "OnNext((10' 3))"' "OnNext((100' 10))"' "OnNext((100' 10))"' "OnNext((100' 10))"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelectorEnumerableWithIndex,The following statement contains a magic number: {                  // OnCompleted Case                  var a = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? Enumerable.Range(i' 3) : Enumerable.Repeat(i' 3)' (x' i1' y' i2) => Tuple.Create(x' i1' y' i2))                   .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  a.OnCompleted();                  // check                  list.IsCollection("OnNext((10' 0' 0' 0))"' "OnNext((10' 0' 1' 1))"' "OnNext((10' 0' 2' 2))"' "OnNext((100' 1' 1' 0))"' "OnNext((100' 1' 1' 1))"' "OnNext((100' 1' 1' 2))"' "OnCompleted()");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelectorEnumerableWithIndex,The following statement contains a magic number: {                  // OnCompleted Case                  var a = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? Enumerable.Range(i' 3) : Enumerable.Repeat(i' 3)' (x' i1' y' i2) => Tuple.Create(x' i1' y' i2))                   .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  a.OnCompleted();                  // check                  list.IsCollection("OnNext((10' 0' 0' 0))"' "OnNext((10' 0' 1' 1))"' "OnNext((10' 0' 2' 2))"' "OnNext((100' 1' 1' 0))"' "OnNext((100' 1' 1' 1))"' "OnNext((100' 1' 1' 2))"' "OnCompleted()");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelectorEnumerableWithIndex,The following statement contains a magic number: {                  // OnCompleted Case                  var a = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? Enumerable.Range(i' 3) : Enumerable.Repeat(i' 3)' (x' i1' y' i2) => Tuple.Create(x' i1' y' i2))                   .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  a.OnCompleted();                  // check                  list.IsCollection("OnNext((10' 0' 0' 0))"' "OnNext((10' 0' 1' 1))"' "OnNext((10' 0' 2' 2))"' "OnNext((100' 1' 1' 0))"' "OnNext((100' 1' 1' 1))"' "OnNext((100' 1' 1' 2))"' "OnCompleted()");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelectorEnumerableWithIndex,The following statement contains a magic number: {                  // OnCompleted Case                  var a = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? Enumerable.Range(i' 3) : Enumerable.Repeat(i' 3)' (x' i1' y' i2) => Tuple.Create(x' i1' y' i2))                   .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  a.OnCompleted();                  // check                  list.IsCollection("OnNext((10' 0' 0' 0))"' "OnNext((10' 0' 1' 1))"' "OnNext((10' 0' 2' 2))"' "OnNext((100' 1' 1' 0))"' "OnNext((100' 1' 1' 1))"' "OnNext((100' 1' 1' 2))"' "OnCompleted()");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelectorEnumerableWithIndex,The following statement contains a magic number: {                  // OnCompleted Case                  var a = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? Enumerable.Range(i' 3) : Enumerable.Repeat(i' 3)' (x' i1' y' i2) => Tuple.Create(x' i1' y' i2))                   .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  a.OnCompleted();                  // check                  list.IsCollection("OnNext((10' 0' 0' 0))"' "OnNext((10' 0' 1' 1))"' "OnNext((10' 0' 2' 2))"' "OnNext((100' 1' 1' 0))"' "OnNext((100' 1' 1' 1))"' "OnNext((100' 1' 1' 2))"' "OnCompleted()");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelectorEnumerableWithIndex,The following statement contains a magic number: {                  // OnError Case                  var a = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? Enumerable.Range(i' 3) : Enumerable.Repeat(i' 3)' (x' i1' y' i2) => Tuple.Create(x' i1' y' i2))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  a.OnError(new Exception());                  // check                  list.IsCollection("OnNext((10' 0' 0' 0))"' "OnNext((10' 0' 1' 1))"' "OnNext((10' 0' 2' 2))"' "OnNext((100' 1' 1' 0))"' "OnNext((100' 1' 1' 1))"' "OnNext((100' 1' 1' 2))"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelectorEnumerableWithIndex,The following statement contains a magic number: {                  // OnError Case                  var a = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? Enumerable.Range(i' 3) : Enumerable.Repeat(i' 3)' (x' i1' y' i2) => Tuple.Create(x' i1' y' i2))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  a.OnError(new Exception());                  // check                  list.IsCollection("OnNext((10' 0' 0' 0))"' "OnNext((10' 0' 1' 1))"' "OnNext((10' 0' 2' 2))"' "OnNext((100' 1' 1' 0))"' "OnNext((100' 1' 1' 1))"' "OnNext((100' 1' 1' 2))"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelectorEnumerableWithIndex,The following statement contains a magic number: {                  // OnError Case                  var a = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? Enumerable.Range(i' 3) : Enumerable.Repeat(i' 3)' (x' i1' y' i2) => Tuple.Create(x' i1' y' i2))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  a.OnError(new Exception());                  // check                  list.IsCollection("OnNext((10' 0' 0' 0))"' "OnNext((10' 0' 1' 1))"' "OnNext((10' 0' 2' 2))"' "OnNext((100' 1' 1' 0))"' "OnNext((100' 1' 1' 1))"' "OnNext((100' 1' 1' 2))"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelectorEnumerableWithIndex,The following statement contains a magic number: {                  // OnError Case                  var a = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? Enumerable.Range(i' 3) : Enumerable.Repeat(i' 3)' (x' i1' y' i2) => Tuple.Create(x' i1' y' i2))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  a.OnError(new Exception());                  // check                  list.IsCollection("OnNext((10' 0' 0' 0))"' "OnNext((10' 0' 1' 1))"' "OnNext((10' 0' 2' 2))"' "OnNext((100' 1' 1' 0))"' "OnNext((100' 1' 1' 1))"' "OnNext((100' 1' 1' 2))"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelectorEnumerableWithIndex,The following statement contains a magic number: {                  // OnError Case                  var a = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? Enumerable.Range(i' 3) : Enumerable.Repeat(i' 3)' (x' i1' y' i2) => Tuple.Create(x' i1' y' i2))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  a.OnError(new Exception());                  // check                  list.IsCollection("OnNext((10' 0' 0' 0))"' "OnNext((10' 0' 1' 1))"' "OnNext((10' 0' 2' 2))"' "OnNext((100' 1' 1' 0))"' "OnNext((100' 1' 1' 1))"' "OnNext((100' 1' 1' 2))"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelectorWithIndex,The following statement contains a magic number: {                  // OnCompleted Case                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? b.Select(y => Tuple.Create(y' i)) : c.Select(y => Tuple.Create(y' i))' (x' i1' y' i2) => Tuple.Create(x' i1' y.Item1' y.Item2' i2))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnCompleted();                  b.OnCompleted();                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((10' 0' 200' 0' 0))"' "OnNext((100' 1' 300' 1' 0))"' "OnNext((100' 1' 400' 1' 1))"' "OnCompleted()");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelectorWithIndex,The following statement contains a magic number: {                  // OnCompleted Case                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? b.Select(y => Tuple.Create(y' i)) : c.Select(y => Tuple.Create(y' i))' (x' i1' y' i2) => Tuple.Create(x' i1' y.Item1' y.Item2' i2))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnCompleted();                  b.OnCompleted();                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((10' 0' 200' 0' 0))"' "OnNext((100' 1' 300' 1' 0))"' "OnNext((100' 1' 400' 1' 1))"' "OnCompleted()");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelectorWithIndex,The following statement contains a magic number: {                  // OnCompleted Case                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? b.Select(y => Tuple.Create(y' i)) : c.Select(y => Tuple.Create(y' i))' (x' i1' y' i2) => Tuple.Create(x' i1' y.Item1' y.Item2' i2))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnCompleted();                  b.OnCompleted();                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((10' 0' 200' 0' 0))"' "OnNext((100' 1' 300' 1' 0))"' "OnNext((100' 1' 400' 1' 1))"' "OnCompleted()");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelectorWithIndex,The following statement contains a magic number: {                  // OnCompleted Case                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? b.Select(y => Tuple.Create(y' i)) : c.Select(y => Tuple.Create(y' i))' (x' i1' y' i2) => Tuple.Create(x' i1' y.Item1' y.Item2' i2))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnCompleted();                  b.OnCompleted();                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((10' 0' 200' 0' 0))"' "OnNext((100' 1' 300' 1' 0))"' "OnNext((100' 1' 400' 1' 1))"' "OnCompleted()");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelectorWithIndex,The following statement contains a magic number: {                  // OnCompleted Case                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? b.Select(y => Tuple.Create(y' i)) : c.Select(y => Tuple.Create(y' i))' (x' i1' y' i2) => Tuple.Create(x' i1' y.Item1' y.Item2' i2))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnCompleted();                  b.OnCompleted();                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((10' 0' 200' 0' 0))"' "OnNext((100' 1' 300' 1' 0))"' "OnNext((100' 1' 400' 1' 1))"' "OnCompleted()");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelectorWithIndex,The following statement contains a magic number: {                  // OnCompleted Case                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? b.Select(y => Tuple.Create(y' i)) : c.Select(y => Tuple.Create(y' i))' (x' i1' y' i2) => Tuple.Create(x' i1' y.Item1' y.Item2' i2))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnCompleted();                  b.OnCompleted();                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((10' 0' 200' 0' 0))"' "OnNext((100' 1' 300' 1' 0))"' "OnNext((100' 1' 400' 1' 1))"' "OnCompleted()");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelectorWithIndex,The following statement contains a magic number: {                  // OnError A                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? b.Select(y => Tuple.Create(y' i)) : c.Select(y => Tuple.Create(y' i))' (x' i1' y' i2) => Tuple.Create(x' i1' y.Item1' y.Item2' i2))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnError(new Exception());                  b.OnCompleted();                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((10' 0' 200' 0' 0))"' "OnNext((100' 1' 300' 1' 0))"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelectorWithIndex,The following statement contains a magic number: {                  // OnError A                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? b.Select(y => Tuple.Create(y' i)) : c.Select(y => Tuple.Create(y' i))' (x' i1' y' i2) => Tuple.Create(x' i1' y.Item1' y.Item2' i2))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnError(new Exception());                  b.OnCompleted();                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((10' 0' 200' 0' 0))"' "OnNext((100' 1' 300' 1' 0))"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelectorWithIndex,The following statement contains a magic number: {                  // OnError A                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? b.Select(y => Tuple.Create(y' i)) : c.Select(y => Tuple.Create(y' i))' (x' i1' y' i2) => Tuple.Create(x' i1' y.Item1' y.Item2' i2))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnError(new Exception());                  b.OnCompleted();                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((10' 0' 200' 0' 0))"' "OnNext((100' 1' 300' 1' 0))"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelectorWithIndex,The following statement contains a magic number: {                  // OnError A                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? b.Select(y => Tuple.Create(y' i)) : c.Select(y => Tuple.Create(y' i))' (x' i1' y' i2) => Tuple.Create(x' i1' y.Item1' y.Item2' i2))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnError(new Exception());                  b.OnCompleted();                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((10' 0' 200' 0' 0))"' "OnNext((100' 1' 300' 1' 0))"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelectorWithIndex,The following statement contains a magic number: {                  // OnError A                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? b.Select(y => Tuple.Create(y' i)) : c.Select(y => Tuple.Create(y' i))' (x' i1' y' i2) => Tuple.Create(x' i1' y.Item1' y.Item2' i2))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnError(new Exception());                  b.OnCompleted();                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((10' 0' 200' 0' 0))"' "OnNext((100' 1' 300' 1' 0))"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelectorWithIndex,The following statement contains a magic number: {                  // OnError A                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? b.Select(y => Tuple.Create(y' i)) : c.Select(y => Tuple.Create(y' i))' (x' i1' y' i2) => Tuple.Create(x' i1' y.Item1' y.Item2' i2))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnError(new Exception());                  b.OnCompleted();                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((10' 0' 200' 0' 0))"' "OnNext((100' 1' 300' 1' 0))"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelectorWithIndex,The following statement contains a magic number: {                  // OnError B                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? b.Select(y => Tuple.Create(y' i)) : c.Select(y => Tuple.Create(y' i))' (x' i1' y' i2) => Tuple.Create(x' i1' y.Item1' y.Item2' i2))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnCompleted();                  b.OnError(new Exception());                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((10' 0' 200' 0' 0))"' "OnNext((100' 1' 300' 1' 0))"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelectorWithIndex,The following statement contains a magic number: {                  // OnError B                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? b.Select(y => Tuple.Create(y' i)) : c.Select(y => Tuple.Create(y' i))' (x' i1' y' i2) => Tuple.Create(x' i1' y.Item1' y.Item2' i2))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnCompleted();                  b.OnError(new Exception());                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((10' 0' 200' 0' 0))"' "OnNext((100' 1' 300' 1' 0))"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelectorWithIndex,The following statement contains a magic number: {                  // OnError B                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? b.Select(y => Tuple.Create(y' i)) : c.Select(y => Tuple.Create(y' i))' (x' i1' y' i2) => Tuple.Create(x' i1' y.Item1' y.Item2' i2))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnCompleted();                  b.OnError(new Exception());                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((10' 0' 200' 0' 0))"' "OnNext((100' 1' 300' 1' 0))"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelectorWithIndex,The following statement contains a magic number: {                  // OnError B                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? b.Select(y => Tuple.Create(y' i)) : c.Select(y => Tuple.Create(y' i))' (x' i1' y' i2) => Tuple.Create(x' i1' y.Item1' y.Item2' i2))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnCompleted();                  b.OnError(new Exception());                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((10' 0' 200' 0' 0))"' "OnNext((100' 1' 300' 1' 0))"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelectorWithIndex,The following statement contains a magic number: {                  // OnError B                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? b.Select(y => Tuple.Create(y' i)) : c.Select(y => Tuple.Create(y' i))' (x' i1' y' i2) => Tuple.Create(x' i1' y.Item1' y.Item2' i2))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnCompleted();                  b.OnError(new Exception());                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((10' 0' 200' 0' 0))"' "OnNext((100' 1' 300' 1' 0))"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ResultSelectorWithIndex,The following statement contains a magic number: {                  // OnError B                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? b.Select(y => Tuple.Create(y' i)) : c.Select(y => Tuple.Create(y' i))' (x' i1' y' i2) => Tuple.Create(x' i1' y.Item1' y.Item2' i2))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnCompleted();                  b.OnError(new Exception());                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((10' 0' 200' 0' 0))"' "OnNext((100' 1' 300' 1' 0))"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Selector,The following statement contains a magic number: {                  // OnCompleted Case                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? b : c)                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnCompleted();                  b.OnCompleted();                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext(200)"' "OnNext(300)"' "OnNext(400)"' "OnCompleted()");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Selector,The following statement contains a magic number: {                  // OnCompleted Case                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? b : c)                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnCompleted();                  b.OnCompleted();                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext(200)"' "OnNext(300)"' "OnNext(400)"' "OnCompleted()");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Selector,The following statement contains a magic number: {                  // OnCompleted Case                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? b : c)                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnCompleted();                  b.OnCompleted();                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext(200)"' "OnNext(300)"' "OnNext(400)"' "OnCompleted()");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Selector,The following statement contains a magic number: {                  // OnCompleted Case                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? b : c)                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnCompleted();                  b.OnCompleted();                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext(200)"' "OnNext(300)"' "OnNext(400)"' "OnCompleted()");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Selector,The following statement contains a magic number: {                  // OnCompleted Case                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? b : c)                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnCompleted();                  b.OnCompleted();                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext(200)"' "OnNext(300)"' "OnNext(400)"' "OnCompleted()");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Selector,The following statement contains a magic number: {                  // OnCompleted Case                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? b : c)                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnCompleted();                  b.OnCompleted();                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext(200)"' "OnNext(300)"' "OnNext(400)"' "OnCompleted()");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Selector,The following statement contains a magic number: {                  // OnError A                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? b : c)                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnError(new Exception());                  b.OnCompleted();                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext(200)"' "OnNext(300)"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Selector,The following statement contains a magic number: {                  // OnError A                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? b : c)                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnError(new Exception());                  b.OnCompleted();                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext(200)"' "OnNext(300)"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Selector,The following statement contains a magic number: {                  // OnError A                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? b : c)                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnError(new Exception());                  b.OnCompleted();                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext(200)"' "OnNext(300)"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Selector,The following statement contains a magic number: {                  // OnError A                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? b : c)                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnError(new Exception());                  b.OnCompleted();                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext(200)"' "OnNext(300)"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Selector,The following statement contains a magic number: {                  // OnError A                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? b : c)                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnError(new Exception());                  b.OnCompleted();                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext(200)"' "OnNext(300)"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Selector,The following statement contains a magic number: {                  // OnError A                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? b : c)                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnError(new Exception());                  b.OnCompleted();                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext(200)"' "OnNext(300)"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Selector,The following statement contains a magic number: {                  // OnError B                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? b : c)                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnCompleted();                  b.OnError(new Exception());                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext(200)"' "OnNext(300)"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Selector,The following statement contains a magic number: {                  // OnError B                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? b : c)                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnCompleted();                  b.OnError(new Exception());                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext(200)"' "OnNext(300)"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Selector,The following statement contains a magic number: {                  // OnError B                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? b : c)                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnCompleted();                  b.OnError(new Exception());                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext(200)"' "OnNext(300)"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Selector,The following statement contains a magic number: {                  // OnError B                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? b : c)                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnCompleted();                  b.OnError(new Exception());                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext(200)"' "OnNext(300)"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Selector,The following statement contains a magic number: {                  // OnError B                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? b : c)                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnCompleted();                  b.OnError(new Exception());                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext(200)"' "OnNext(300)"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Selector,The following statement contains a magic number: {                  // OnError B                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? b : c)                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnCompleted();                  b.OnError(new Exception());                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext(200)"' "OnNext(300)"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Selector,The following statement contains a magic number: {                  // OnCompleted Case2                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? b : c)                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  b.OnCompleted();                  c.OnCompleted();                  // check                  list.IsCollection("OnNext(200)"' "OnNext(300)");                  a.OnCompleted();                  list.IsCollection("OnNext(200)"' "OnNext(300)"' "OnCompleted()");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Selector,The following statement contains a magic number: {                  // OnCompleted Case2                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? b : c)                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  b.OnCompleted();                  c.OnCompleted();                  // check                  list.IsCollection("OnNext(200)"' "OnNext(300)");                  a.OnCompleted();                  list.IsCollection("OnNext(200)"' "OnNext(300)"' "OnCompleted()");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Selector,The following statement contains a magic number: {                  // OnCompleted Case2                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? b : c)                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  b.OnCompleted();                  c.OnCompleted();                  // check                  list.IsCollection("OnNext(200)"' "OnNext(300)");                  a.OnCompleted();                  list.IsCollection("OnNext(200)"' "OnNext(300)"' "OnCompleted()");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Selector,The following statement contains a magic number: {                  // OnCompleted Case2                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? b : c)                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  b.OnCompleted();                  c.OnCompleted();                  // check                  list.IsCollection("OnNext(200)"' "OnNext(300)");                  a.OnCompleted();                  list.IsCollection("OnNext(200)"' "OnNext(300)"' "OnCompleted()");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Selector,The following statement contains a magic number: {                  // OnCompleted Case2                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? b : c)                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  b.OnCompleted();                  c.OnCompleted();                  // check                  list.IsCollection("OnNext(200)"' "OnNext(300)");                  a.OnCompleted();                  list.IsCollection("OnNext(200)"' "OnNext(300)"' "OnCompleted()");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectorEnumerable,The following statement contains a magic number: {                  // OnCompleted Case                  var a = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? Enumerable.Range(1' 3) : Enumerable.Repeat(10' 3))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  a.OnCompleted();                  // check                  list.IsCollection("OnNext(1)"' "OnNext(2)"' "OnNext(3)"' "OnNext(10)"' "OnNext(10)"' "OnNext(10)"' "OnCompleted()");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectorEnumerable,The following statement contains a magic number: {                  // OnCompleted Case                  var a = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? Enumerable.Range(1' 3) : Enumerable.Repeat(10' 3))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  a.OnCompleted();                  // check                  list.IsCollection("OnNext(1)"' "OnNext(2)"' "OnNext(3)"' "OnNext(10)"' "OnNext(10)"' "OnNext(10)"' "OnCompleted()");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectorEnumerable,The following statement contains a magic number: {                  // OnCompleted Case                  var a = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? Enumerable.Range(1' 3) : Enumerable.Repeat(10' 3))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  a.OnCompleted();                  // check                  list.IsCollection("OnNext(1)"' "OnNext(2)"' "OnNext(3)"' "OnNext(10)"' "OnNext(10)"' "OnNext(10)"' "OnCompleted()");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectorEnumerable,The following statement contains a magic number: {                  // OnCompleted Case                  var a = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? Enumerable.Range(1' 3) : Enumerable.Repeat(10' 3))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  a.OnCompleted();                  // check                  list.IsCollection("OnNext(1)"' "OnNext(2)"' "OnNext(3)"' "OnNext(10)"' "OnNext(10)"' "OnNext(10)"' "OnCompleted()");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectorEnumerable,The following statement contains a magic number: {                  // OnCompleted Case                  var a = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? Enumerable.Range(1' 3) : Enumerable.Repeat(10' 3))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  a.OnCompleted();                  // check                  list.IsCollection("OnNext(1)"' "OnNext(2)"' "OnNext(3)"' "OnNext(10)"' "OnNext(10)"' "OnNext(10)"' "OnCompleted()");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectorEnumerable,The following statement contains a magic number: {                  // OnCompleted Case                  var a = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? Enumerable.Range(1' 3) : Enumerable.Repeat(10' 3))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  a.OnCompleted();                  // check                  list.IsCollection("OnNext(1)"' "OnNext(2)"' "OnNext(3)"' "OnNext(10)"' "OnNext(10)"' "OnNext(10)"' "OnCompleted()");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectorEnumerable,The following statement contains a magic number: {                  // OnError Case                  var a = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? Enumerable.Range(1' 3) : Enumerable.Repeat(10' 3))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  a.OnError(new Exception());                  // check                  list.IsCollection("OnNext(1)"' "OnNext(2)"' "OnNext(3)"' "OnNext(10)"' "OnNext(10)"' "OnNext(10)"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectorEnumerable,The following statement contains a magic number: {                  // OnError Case                  var a = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? Enumerable.Range(1' 3) : Enumerable.Repeat(10' 3))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  a.OnError(new Exception());                  // check                  list.IsCollection("OnNext(1)"' "OnNext(2)"' "OnNext(3)"' "OnNext(10)"' "OnNext(10)"' "OnNext(10)"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectorEnumerable,The following statement contains a magic number: {                  // OnError Case                  var a = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? Enumerable.Range(1' 3) : Enumerable.Repeat(10' 3))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  a.OnError(new Exception());                  // check                  list.IsCollection("OnNext(1)"' "OnNext(2)"' "OnNext(3)"' "OnNext(10)"' "OnNext(10)"' "OnNext(10)"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectorEnumerable,The following statement contains a magic number: {                  // OnError Case                  var a = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? Enumerable.Range(1' 3) : Enumerable.Repeat(10' 3))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  a.OnError(new Exception());                  // check                  list.IsCollection("OnNext(1)"' "OnNext(2)"' "OnNext(3)"' "OnNext(10)"' "OnNext(10)"' "OnNext(10)"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectorEnumerable,The following statement contains a magic number: {                  // OnError Case                  var a = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? Enumerable.Range(1' 3) : Enumerable.Repeat(10' 3))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  a.OnError(new Exception());                  // check                  list.IsCollection("OnNext(1)"' "OnNext(2)"' "OnNext(3)"' "OnNext(10)"' "OnNext(10)"' "OnNext(10)"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectorEnumerable,The following statement contains a magic number: {                  // OnError Case                  var a = new Subject<int>();                  var list = new List<string>();                  a.SelectMany(x => (x == 10) ? Enumerable.Range(1' 3) : Enumerable.Repeat(10' 3))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  a.OnError(new Exception());                  // check                  list.IsCollection("OnNext(1)"' "OnNext(2)"' "OnNext(3)"' "OnNext(10)"' "OnNext(10)"' "OnNext(10)"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectorEnumerableWithIndex,The following statement contains a magic number: {                  // OnCompleted Case                  var a = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? Enumerable.Range(i' 3) : Enumerable.Repeat(i' 3))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  a.OnCompleted();                  // check                  list.IsCollection("OnNext(0)"' "OnNext(1)"' "OnNext(2)"' "OnNext(1)"' "OnNext(1)"' "OnNext(1)"' "OnCompleted()");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectorEnumerableWithIndex,The following statement contains a magic number: {                  // OnCompleted Case                  var a = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? Enumerable.Range(i' 3) : Enumerable.Repeat(i' 3))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  a.OnCompleted();                  // check                  list.IsCollection("OnNext(0)"' "OnNext(1)"' "OnNext(2)"' "OnNext(1)"' "OnNext(1)"' "OnNext(1)"' "OnCompleted()");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectorEnumerableWithIndex,The following statement contains a magic number: {                  // OnCompleted Case                  var a = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? Enumerable.Range(i' 3) : Enumerable.Repeat(i' 3))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  a.OnCompleted();                  // check                  list.IsCollection("OnNext(0)"' "OnNext(1)"' "OnNext(2)"' "OnNext(1)"' "OnNext(1)"' "OnNext(1)"' "OnCompleted()");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectorEnumerableWithIndex,The following statement contains a magic number: {                  // OnCompleted Case                  var a = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? Enumerable.Range(i' 3) : Enumerable.Repeat(i' 3))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  a.OnCompleted();                  // check                  list.IsCollection("OnNext(0)"' "OnNext(1)"' "OnNext(2)"' "OnNext(1)"' "OnNext(1)"' "OnNext(1)"' "OnCompleted()");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectorEnumerableWithIndex,The following statement contains a magic number: {                  // OnCompleted Case                  var a = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? Enumerable.Range(i' 3) : Enumerable.Repeat(i' 3))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  a.OnCompleted();                  // check                  list.IsCollection("OnNext(0)"' "OnNext(1)"' "OnNext(2)"' "OnNext(1)"' "OnNext(1)"' "OnNext(1)"' "OnCompleted()");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectorEnumerableWithIndex,The following statement contains a magic number: {                  // OnError Case                  var a = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? Enumerable.Range(i' 3) : Enumerable.Repeat(i' 3))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  a.OnError(new Exception());                  // check                  list.IsCollection("OnNext(0)"' "OnNext(1)"' "OnNext(2)"' "OnNext(1)"' "OnNext(1)"' "OnNext(1)"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectorEnumerableWithIndex,The following statement contains a magic number: {                  // OnError Case                  var a = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? Enumerable.Range(i' 3) : Enumerable.Repeat(i' 3))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  a.OnError(new Exception());                  // check                  list.IsCollection("OnNext(0)"' "OnNext(1)"' "OnNext(2)"' "OnNext(1)"' "OnNext(1)"' "OnNext(1)"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectorEnumerableWithIndex,The following statement contains a magic number: {                  // OnError Case                  var a = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? Enumerable.Range(i' 3) : Enumerable.Repeat(i' 3))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  a.OnError(new Exception());                  // check                  list.IsCollection("OnNext(0)"' "OnNext(1)"' "OnNext(2)"' "OnNext(1)"' "OnNext(1)"' "OnNext(1)"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectorEnumerableWithIndex,The following statement contains a magic number: {                  // OnError Case                  var a = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? Enumerable.Range(i' 3) : Enumerable.Repeat(i' 3))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  a.OnError(new Exception());                  // check                  list.IsCollection("OnNext(0)"' "OnNext(1)"' "OnNext(2)"' "OnNext(1)"' "OnNext(1)"' "OnNext(1)"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectorEnumerableWithIndex,The following statement contains a magic number: {                  // OnError Case                  var a = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? Enumerable.Range(i' 3) : Enumerable.Repeat(i' 3))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  a.OnError(new Exception());                  // check                  list.IsCollection("OnNext(0)"' "OnNext(1)"' "OnNext(2)"' "OnNext(1)"' "OnNext(1)"' "OnNext(1)"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectorWithIndex,The following statement contains a magic number: {                  // OnCompleted Case                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? b.Select(y => Tuple.Create(y' i)) : c.Select(y => Tuple.Create(y' i)))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnCompleted();                  b.OnCompleted();                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((200' 0))"' "OnNext((300' 1))"' "OnNext((400' 1))"' "OnCompleted()");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectorWithIndex,The following statement contains a magic number: {                  // OnCompleted Case                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? b.Select(y => Tuple.Create(y' i)) : c.Select(y => Tuple.Create(y' i)))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnCompleted();                  b.OnCompleted();                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((200' 0))"' "OnNext((300' 1))"' "OnNext((400' 1))"' "OnCompleted()");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectorWithIndex,The following statement contains a magic number: {                  // OnCompleted Case                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? b.Select(y => Tuple.Create(y' i)) : c.Select(y => Tuple.Create(y' i)))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnCompleted();                  b.OnCompleted();                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((200' 0))"' "OnNext((300' 1))"' "OnNext((400' 1))"' "OnCompleted()");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectorWithIndex,The following statement contains a magic number: {                  // OnCompleted Case                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? b.Select(y => Tuple.Create(y' i)) : c.Select(y => Tuple.Create(y' i)))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnCompleted();                  b.OnCompleted();                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((200' 0))"' "OnNext((300' 1))"' "OnNext((400' 1))"' "OnCompleted()");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectorWithIndex,The following statement contains a magic number: {                  // OnCompleted Case                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? b.Select(y => Tuple.Create(y' i)) : c.Select(y => Tuple.Create(y' i)))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnCompleted();                  b.OnCompleted();                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((200' 0))"' "OnNext((300' 1))"' "OnNext((400' 1))"' "OnCompleted()");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectorWithIndex,The following statement contains a magic number: {                  // OnCompleted Case                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? b.Select(y => Tuple.Create(y' i)) : c.Select(y => Tuple.Create(y' i)))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnCompleted();                  b.OnCompleted();                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((200' 0))"' "OnNext((300' 1))"' "OnNext((400' 1))"' "OnCompleted()");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectorWithIndex,The following statement contains a magic number: {                  // OnError A                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? b.Select(y => Tuple.Create(y' i)) : c.Select(y => Tuple.Create(y' i)))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnError(new Exception());                  b.OnCompleted();                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((200' 0))"' "OnNext((300' 1))"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectorWithIndex,The following statement contains a magic number: {                  // OnError A                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? b.Select(y => Tuple.Create(y' i)) : c.Select(y => Tuple.Create(y' i)))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnError(new Exception());                  b.OnCompleted();                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((200' 0))"' "OnNext((300' 1))"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectorWithIndex,The following statement contains a magic number: {                  // OnError A                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? b.Select(y => Tuple.Create(y' i)) : c.Select(y => Tuple.Create(y' i)))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnError(new Exception());                  b.OnCompleted();                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((200' 0))"' "OnNext((300' 1))"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectorWithIndex,The following statement contains a magic number: {                  // OnError A                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? b.Select(y => Tuple.Create(y' i)) : c.Select(y => Tuple.Create(y' i)))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnError(new Exception());                  b.OnCompleted();                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((200' 0))"' "OnNext((300' 1))"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectorWithIndex,The following statement contains a magic number: {                  // OnError A                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? b.Select(y => Tuple.Create(y' i)) : c.Select(y => Tuple.Create(y' i)))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnError(new Exception());                  b.OnCompleted();                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((200' 0))"' "OnNext((300' 1))"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectorWithIndex,The following statement contains a magic number: {                  // OnError A                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? b.Select(y => Tuple.Create(y' i)) : c.Select(y => Tuple.Create(y' i)))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnError(new Exception());                  b.OnCompleted();                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((200' 0))"' "OnNext((300' 1))"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectorWithIndex,The following statement contains a magic number: {                  // OnError B                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? b.Select(y => Tuple.Create(y' i)) : c.Select(y => Tuple.Create(y' i)))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnCompleted();                  b.OnError(new Exception());                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((200' 0))"' "OnNext((300' 1))"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectorWithIndex,The following statement contains a magic number: {                  // OnError B                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? b.Select(y => Tuple.Create(y' i)) : c.Select(y => Tuple.Create(y' i)))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnCompleted();                  b.OnError(new Exception());                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((200' 0))"' "OnNext((300' 1))"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectorWithIndex,The following statement contains a magic number: {                  // OnError B                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? b.Select(y => Tuple.Create(y' i)) : c.Select(y => Tuple.Create(y' i)))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnCompleted();                  b.OnError(new Exception());                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((200' 0))"' "OnNext((300' 1))"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectorWithIndex,The following statement contains a magic number: {                  // OnError B                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? b.Select(y => Tuple.Create(y' i)) : c.Select(y => Tuple.Create(y' i)))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnCompleted();                  b.OnError(new Exception());                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((200' 0))"' "OnNext((300' 1))"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectorWithIndex,The following statement contains a magic number: {                  // OnError B                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? b.Select(y => Tuple.Create(y' i)) : c.Select(y => Tuple.Create(y' i)))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnCompleted();                  b.OnError(new Exception());                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((200' 0))"' "OnNext((300' 1))"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectMany,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectorWithIndex,The following statement contains a magic number: {                  // OnError B                  var a = new Subject<int>();                  var b = new Subject<int>();                  var c = new Subject<int>();                  var list = new List<string>();                  a.SelectMany((x' i) => (x == 10) ? b.Select(y => Tuple.Create(y' i)) : c.Select(y => Tuple.Create(y' i)))                      .Materialize().Select(x => x.ToString()).Subscribe(x => list.Add(x));                  a.OnNext(10);                  a.OnNext(100);                  // do                  b.OnNext(200);                  c.OnNext(300);                  a.OnCompleted();                  b.OnError(new Exception());                  c.OnNext(400);                  c.OnCompleted();                  // check                  list.IsCollection("OnNext((200' 0))"' "OnNext((300' 1))"' "OnError(System.Exception)");              }
Magic Number,RuntimeUnitTestToolkit,SelectWhereOptimizeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectWhere,The following statement contains a magic number: var selectWhere = Observable.Range(1' 10)                  .Select(x => x * x)                  .Where(x => x % 2 == 0);
Magic Number,RuntimeUnitTestToolkit,SelectWhereOptimizeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectWhere,The following statement contains a magic number: var selectWhere = Observable.Range(1' 10)                  .Select(x => x * x)                  .Where(x => x % 2 == 0);
Magic Number,RuntimeUnitTestToolkit,SelectWhereOptimizeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectWhere,The following statement contains a magic number: selectWhere.ToArrayWait().IsCollection(4' 16' 36' 64' 100);
Magic Number,RuntimeUnitTestToolkit,SelectWhereOptimizeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectWhere,The following statement contains a magic number: selectWhere.ToArrayWait().IsCollection(4' 16' 36' 64' 100);
Magic Number,RuntimeUnitTestToolkit,SelectWhereOptimizeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectWhere,The following statement contains a magic number: selectWhere.ToArrayWait().IsCollection(4' 16' 36' 64' 100);
Magic Number,RuntimeUnitTestToolkit,SelectWhereOptimizeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectWhere,The following statement contains a magic number: selectWhere.ToArrayWait().IsCollection(4' 16' 36' 64' 100);
Magic Number,RuntimeUnitTestToolkit,SelectWhereOptimizeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectWhere,The following statement contains a magic number: selectWhere.ToArrayWait().IsCollection(4' 16' 36' 64' 100);
Magic Number,RuntimeUnitTestToolkit,SelectWhereOptimizeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectWhere,The following statement contains a magic number: var selectWhere2 = Observable.Range(1' 10)                  .Select((x' i) => x * x)                  .Where(x => x % 2 == 0);
Magic Number,RuntimeUnitTestToolkit,SelectWhereOptimizeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectWhere,The following statement contains a magic number: var selectWhere2 = Observable.Range(1' 10)                  .Select((x' i) => x * x)                  .Where(x => x % 2 == 0);
Magic Number,RuntimeUnitTestToolkit,SelectWhereOptimizeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectWhere,The following statement contains a magic number: selectWhere2.ToArrayWait().IsCollection(4' 16' 36' 64' 100);
Magic Number,RuntimeUnitTestToolkit,SelectWhereOptimizeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectWhere,The following statement contains a magic number: selectWhere2.ToArrayWait().IsCollection(4' 16' 36' 64' 100);
Magic Number,RuntimeUnitTestToolkit,SelectWhereOptimizeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectWhere,The following statement contains a magic number: selectWhere2.ToArrayWait().IsCollection(4' 16' 36' 64' 100);
Magic Number,RuntimeUnitTestToolkit,SelectWhereOptimizeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectWhere,The following statement contains a magic number: selectWhere2.ToArrayWait().IsCollection(4' 16' 36' 64' 100);
Magic Number,RuntimeUnitTestToolkit,SelectWhereOptimizeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SelectWhere,The following statement contains a magic number: selectWhere2.ToArrayWait().IsCollection(4' 16' 36' 64' 100);
Magic Number,RuntimeUnitTestToolkit,SelectWhereOptimizeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhereSelect,The following statement contains a magic number: var whereSelect = Observable.Range(1' 10)                  .Where(x => x % 2 == 0)                  .Select(x => x * x);
Magic Number,RuntimeUnitTestToolkit,SelectWhereOptimizeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhereSelect,The following statement contains a magic number: var whereSelect = Observable.Range(1' 10)                  .Where(x => x % 2 == 0)                  .Select(x => x * x);
Magic Number,RuntimeUnitTestToolkit,SelectWhereOptimizeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhereSelect,The following statement contains a magic number: whereSelect.ToArrayWait().IsCollection(4' 16' 36' 64' 100);
Magic Number,RuntimeUnitTestToolkit,SelectWhereOptimizeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhereSelect,The following statement contains a magic number: whereSelect.ToArrayWait().IsCollection(4' 16' 36' 64' 100);
Magic Number,RuntimeUnitTestToolkit,SelectWhereOptimizeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhereSelect,The following statement contains a magic number: whereSelect.ToArrayWait().IsCollection(4' 16' 36' 64' 100);
Magic Number,RuntimeUnitTestToolkit,SelectWhereOptimizeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhereSelect,The following statement contains a magic number: whereSelect.ToArrayWait().IsCollection(4' 16' 36' 64' 100);
Magic Number,RuntimeUnitTestToolkit,SelectWhereOptimizeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhereSelect,The following statement contains a magic number: whereSelect.ToArrayWait().IsCollection(4' 16' 36' 64' 100);
Magic Number,RuntimeUnitTestToolkit,SelectWhereOptimizeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhereSelect,The following statement contains a magic number: var whereSelect2 = Observable.Range(1' 10)                  .Where((x' i) => x % 2 == 0)                  .Select(x => x * x);
Magic Number,RuntimeUnitTestToolkit,SelectWhereOptimizeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhereSelect,The following statement contains a magic number: var whereSelect2 = Observable.Range(1' 10)                  .Where((x' i) => x % 2 == 0)                  .Select(x => x * x);
Magic Number,RuntimeUnitTestToolkit,SelectWhereOptimizeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhereSelect,The following statement contains a magic number: whereSelect2.ToArrayWait().IsCollection(4' 16' 36' 64' 100);
Magic Number,RuntimeUnitTestToolkit,SelectWhereOptimizeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhereSelect,The following statement contains a magic number: whereSelect2.ToArrayWait().IsCollection(4' 16' 36' 64' 100);
Magic Number,RuntimeUnitTestToolkit,SelectWhereOptimizeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhereSelect,The following statement contains a magic number: whereSelect2.ToArrayWait().IsCollection(4' 16' 36' 64' 100);
Magic Number,RuntimeUnitTestToolkit,SelectWhereOptimizeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhereSelect,The following statement contains a magic number: whereSelect2.ToArrayWait().IsCollection(4' 16' 36' 64' 100);
Magic Number,RuntimeUnitTestToolkit,SelectWhereOptimizeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhereSelect,The following statement contains a magic number: whereSelect2.ToArrayWait().IsCollection(4' 16' 36' 64' 100);
Magic Number,RuntimeUnitTestToolkit,SelectWhereOptimizeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhereWhere,The following statement contains a magic number: var wherewhere = Observable.Range(1' 10)                  .Where(x => x % 2 == 0)                  .Where(x => x > 5);
Magic Number,RuntimeUnitTestToolkit,SelectWhereOptimizeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhereWhere,The following statement contains a magic number: var wherewhere = Observable.Range(1' 10)                  .Where(x => x % 2 == 0)                  .Where(x => x > 5);
Magic Number,RuntimeUnitTestToolkit,SelectWhereOptimizeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhereWhere,The following statement contains a magic number: var wherewhere = Observable.Range(1' 10)                  .Where(x => x % 2 == 0)                  .Where(x => x > 5);
Magic Number,RuntimeUnitTestToolkit,SelectWhereOptimizeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhereWhere,The following statement contains a magic number: wherewhere.ToArrayWait().IsCollection(6' 8' 10);
Magic Number,RuntimeUnitTestToolkit,SelectWhereOptimizeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhereWhere,The following statement contains a magic number: wherewhere.ToArrayWait().IsCollection(6' 8' 10);
Magic Number,RuntimeUnitTestToolkit,SelectWhereOptimizeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhereWhere,The following statement contains a magic number: wherewhere.ToArrayWait().IsCollection(6' 8' 10);
Magic Number,RuntimeUnitTestToolkit,SelectWhereOptimizeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhereWhere,The following statement contains a magic number: var wherewhere2 = Observable.Range(1' 10)                  .Where((x' i) => x % 2 == 0)                  .Where(x => x > 5);
Magic Number,RuntimeUnitTestToolkit,SelectWhereOptimizeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhereWhere,The following statement contains a magic number: var wherewhere2 = Observable.Range(1' 10)                  .Where((x' i) => x % 2 == 0)                  .Where(x => x > 5);
Magic Number,RuntimeUnitTestToolkit,SelectWhereOptimizeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhereWhere,The following statement contains a magic number: var wherewhere2 = Observable.Range(1' 10)                  .Where((x' i) => x % 2 == 0)                  .Where(x => x > 5);
Magic Number,RuntimeUnitTestToolkit,SelectWhereOptimizeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhereWhere,The following statement contains a magic number: wherewhere2.ToArrayWait().IsCollection(6' 8' 10);
Magic Number,RuntimeUnitTestToolkit,SelectWhereOptimizeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhereWhere,The following statement contains a magic number: wherewhere2.ToArrayWait().IsCollection(6' 8' 10);
Magic Number,RuntimeUnitTestToolkit,SelectWhereOptimizeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhereWhere,The following statement contains a magic number: wherewhere2.ToArrayWait().IsCollection(6' 8' 10);
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AsyncSubjectTest,The following statement contains a magic number: {                  var subject = new AsyncSubject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.Count.Is(0);                  subject.OnCompleted();                  onNext.IsCollection(1000);                  onCompletedCallCount.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(1);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);                  // ++subscription                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1000' 1000);                  exception.Count.Is(0);                  onCompletedCallCount.Is(2);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AsyncSubjectTest,The following statement contains a magic number: {                  var subject = new AsyncSubject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.Count.Is(0);                  subject.OnCompleted();                  onNext.IsCollection(1000);                  onCompletedCallCount.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(1);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);                  // ++subscription                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1000' 1000);                  exception.Count.Is(0);                  onCompletedCallCount.Is(2);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AsyncSubjectTest,The following statement contains a magic number: {                  var subject = new AsyncSubject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.Count.Is(0);                  subject.OnCompleted();                  onNext.IsCollection(1000);                  onCompletedCallCount.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(1);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);                  // ++subscription                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1000' 1000);                  exception.Count.Is(0);                  onCompletedCallCount.Is(2);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AsyncSubjectTest,The following statement contains a magic number: {                  var subject = new AsyncSubject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.Count.Is(0);                  subject.OnCompleted();                  onNext.IsCollection(1000);                  onCompletedCallCount.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(1);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);                  // ++subscription                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1000' 1000);                  exception.Count.Is(0);                  onCompletedCallCount.Is(2);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AsyncSubjectTest,The following statement contains a magic number: {                  var subject = new AsyncSubject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.Count.Is(0);                  subject.OnCompleted();                  onNext.IsCollection(1000);                  onCompletedCallCount.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(1);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);                  // ++subscription                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1000' 1000);                  exception.Count.Is(0);                  onCompletedCallCount.Is(2);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AsyncSubjectTest,The following statement contains a magic number: {                  var subject = new AsyncSubject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.Count.Is(0);                  subject.OnCompleted();                  onNext.IsCollection(1000);                  onCompletedCallCount.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(1);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);                  // ++subscription                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1000' 1000);                  exception.Count.Is(0);                  onCompletedCallCount.Is(2);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AsyncSubjectTest,The following statement contains a magic number: {                  var subject = new AsyncSubject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.Count.Is(0);                  subject.OnCompleted();                  onNext.IsCollection(1000);                  onCompletedCallCount.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(1);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);                  // ++subscription                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1000' 1000);                  exception.Count.Is(0);                  onCompletedCallCount.Is(2);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AsyncSubjectTest,The following statement contains a magic number: {                  var subject = new AsyncSubject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.Count.Is(0);                  subject.OnCompleted();                  onNext.IsCollection(1000);                  onCompletedCallCount.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(1);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);                  // ++subscription                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1000' 1000);                  exception.Count.Is(0);                  onCompletedCallCount.Is(2);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AsyncSubjectTest,The following statement contains a magic number: {                  var subject = new AsyncSubject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.Count.Is(0);                  subject.OnCompleted();                  onNext.IsCollection(1000);                  onCompletedCallCount.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(1);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);                  // ++subscription                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1000' 1000);                  exception.Count.Is(0);                  onCompletedCallCount.Is(2);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AsyncSubjectTest,The following statement contains a magic number: {                  var subject = new AsyncSubject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.Count.Is(0);                  subject.OnError(new Exception());                  exception.Count.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(0);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);                  // ++subscription                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.Count.Is(0);                  exception.Count.Is(2);                  onCompletedCallCount.Is(0);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AsyncSubjectTest,The following statement contains a magic number: {                  var subject = new AsyncSubject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.Count.Is(0);                  subject.OnError(new Exception());                  exception.Count.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(0);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);                  // ++subscription                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.Count.Is(0);                  exception.Count.Is(2);                  onCompletedCallCount.Is(0);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AsyncSubjectTest,The following statement contains a magic number: {                  var subject = new AsyncSubject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.Count.Is(0);                  subject.OnError(new Exception());                  exception.Count.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(0);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);                  // ++subscription                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.Count.Is(0);                  exception.Count.Is(2);                  onCompletedCallCount.Is(0);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AsyncSubjectTest,The following statement contains a magic number: {                  var subject = new AsyncSubject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.Count.Is(0);                  subject.OnError(new Exception());                  exception.Count.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(0);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);                  // ++subscription                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.Count.Is(0);                  exception.Count.Is(2);                  onCompletedCallCount.Is(0);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AsyncSubjectTest,The following statement contains a magic number: {                  var subject = new AsyncSubject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.Count.Is(0);                  subject.OnError(new Exception());                  exception.Count.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(0);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);                  // ++subscription                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.Count.Is(0);                  exception.Count.Is(2);                  onCompletedCallCount.Is(0);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,AsyncSubjectTest,The following statement contains a magic number: {                  var subject = new AsyncSubject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.Count.Is(0);                  subject.OnError(new Exception());                  exception.Count.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(0);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);                  // ++subscription                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.Count.Is(0);                  exception.Count.Is(2);                  onCompletedCallCount.Is(0);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BehaviorSubject,The following statement contains a magic number: {                  var subject = new BehaviorSubject<int>(3333);                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  var _ = subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(3333);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(3333' 1' 10' 100' 1000);                  // re subscription                  onNext.Clear();                  _.Dispose();                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1000);                  subject.OnCompleted();                  onCompletedCallCount.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(1);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);                  // ++subscription                  onNext.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.Count.Is(0);                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BehaviorSubject,The following statement contains a magic number: {                  var subject = new BehaviorSubject<int>(3333);                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  var _ = subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(3333);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(3333' 1' 10' 100' 1000);                  // re subscription                  onNext.Clear();                  _.Dispose();                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1000);                  subject.OnCompleted();                  onCompletedCallCount.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(1);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);                  // ++subscription                  onNext.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.Count.Is(0);                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BehaviorSubject,The following statement contains a magic number: {                  var subject = new BehaviorSubject<int>(3333);                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  var _ = subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(3333);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(3333' 1' 10' 100' 1000);                  // re subscription                  onNext.Clear();                  _.Dispose();                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1000);                  subject.OnCompleted();                  onCompletedCallCount.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(1);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);                  // ++subscription                  onNext.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.Count.Is(0);                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BehaviorSubject,The following statement contains a magic number: {                  var subject = new BehaviorSubject<int>(3333);                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  var _ = subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(3333);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(3333' 1' 10' 100' 1000);                  // re subscription                  onNext.Clear();                  _.Dispose();                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1000);                  subject.OnCompleted();                  onCompletedCallCount.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(1);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);                  // ++subscription                  onNext.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.Count.Is(0);                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BehaviorSubject,The following statement contains a magic number: {                  var subject = new BehaviorSubject<int>(3333);                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  var _ = subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(3333);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(3333' 1' 10' 100' 1000);                  // re subscription                  onNext.Clear();                  _.Dispose();                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1000);                  subject.OnCompleted();                  onCompletedCallCount.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(1);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);                  // ++subscription                  onNext.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.Count.Is(0);                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BehaviorSubject,The following statement contains a magic number: {                  var subject = new BehaviorSubject<int>(3333);                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  var _ = subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(3333);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(3333' 1' 10' 100' 1000);                  // re subscription                  onNext.Clear();                  _.Dispose();                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1000);                  subject.OnCompleted();                  onCompletedCallCount.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(1);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);                  // ++subscription                  onNext.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.Count.Is(0);                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BehaviorSubject,The following statement contains a magic number: {                  var subject = new BehaviorSubject<int>(3333);                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  var _ = subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(3333);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(3333' 1' 10' 100' 1000);                  // re subscription                  onNext.Clear();                  _.Dispose();                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1000);                  subject.OnCompleted();                  onCompletedCallCount.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(1);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);                  // ++subscription                  onNext.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.Count.Is(0);                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BehaviorSubject,The following statement contains a magic number: {                  var subject = new BehaviorSubject<int>(3333);                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  var _ = subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(3333);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(3333' 1' 10' 100' 1000);                  // re subscription                  onNext.Clear();                  _.Dispose();                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1000);                  subject.OnCompleted();                  onCompletedCallCount.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(1);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);                  // ++subscription                  onNext.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.Count.Is(0);                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BehaviorSubject,The following statement contains a magic number: {                  var subject = new BehaviorSubject<int>(3333);                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  var _ = subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(3333);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(3333' 1' 10' 100' 1000);                  // re subscription                  onNext.Clear();                  _.Dispose();                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1000);                  subject.OnCompleted();                  onCompletedCallCount.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(1);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);                  // ++subscription                  onNext.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.Count.Is(0);                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BehaviorSubject,The following statement contains a magic number: {                  var subject = new BehaviorSubject<int>(3333);                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  var _ = subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(3333);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(3333' 1' 10' 100' 1000);                  // re subscription                  onNext.Clear();                  _.Dispose();                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1000);                  subject.OnCompleted();                  onCompletedCallCount.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(1);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);                  // ++subscription                  onNext.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.Count.Is(0);                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BehaviorSubject,The following statement contains a magic number: {                  var subject = new BehaviorSubject<int>(3333);                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  var _ = subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(3333);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(3333' 1' 10' 100' 1000);                  // re subscription                  onNext.Clear();                  _.Dispose();                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1000);                  subject.OnCompleted();                  onCompletedCallCount.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(1);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);                  // ++subscription                  onNext.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.Count.Is(0);                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BehaviorSubject,The following statement contains a magic number: {                  var subject = new BehaviorSubject<int>(3333);                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  var _ = subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(3333);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(3333' 1' 10' 100' 1000);                  // re subscription                  onNext.Clear();                  _.Dispose();                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1000);                  subject.OnCompleted();                  onCompletedCallCount.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(1);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);                  // ++subscription                  onNext.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.Count.Is(0);                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BehaviorSubject,The following statement contains a magic number: {                  var subject = new BehaviorSubject<int>(3333);                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(3333' 1' 10' 100' 1000);                  subject.OnError(new Exception());                  exception.Count.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(5);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);                  // ++subscription                  onNext.Clear();                  exception.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.Count.Is(0);                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BehaviorSubject,The following statement contains a magic number: {                  var subject = new BehaviorSubject<int>(3333);                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(3333' 1' 10' 100' 1000);                  subject.OnError(new Exception());                  exception.Count.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(5);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);                  // ++subscription                  onNext.Clear();                  exception.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.Count.Is(0);                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BehaviorSubject,The following statement contains a magic number: {                  var subject = new BehaviorSubject<int>(3333);                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(3333' 1' 10' 100' 1000);                  subject.OnError(new Exception());                  exception.Count.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(5);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);                  // ++subscription                  onNext.Clear();                  exception.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.Count.Is(0);                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BehaviorSubject,The following statement contains a magic number: {                  var subject = new BehaviorSubject<int>(3333);                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(3333' 1' 10' 100' 1000);                  subject.OnError(new Exception());                  exception.Count.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(5);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);                  // ++subscription                  onNext.Clear();                  exception.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.Count.Is(0);                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BehaviorSubject,The following statement contains a magic number: {                  var subject = new BehaviorSubject<int>(3333);                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(3333' 1' 10' 100' 1000);                  subject.OnError(new Exception());                  exception.Count.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(5);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);                  // ++subscription                  onNext.Clear();                  exception.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.Count.Is(0);                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BehaviorSubject,The following statement contains a magic number: {                  var subject = new BehaviorSubject<int>(3333);                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(3333' 1' 10' 100' 1000);                  subject.OnError(new Exception());                  exception.Count.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(5);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);                  // ++subscription                  onNext.Clear();                  exception.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.Count.Is(0);                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BehaviorSubject,The following statement contains a magic number: {                  var subject = new BehaviorSubject<int>(3333);                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(3333' 1' 10' 100' 1000);                  subject.OnError(new Exception());                  exception.Count.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(5);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);                  // ++subscription                  onNext.Clear();                  exception.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.Count.Is(0);                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BehaviorSubject,The following statement contains a magic number: {                  var subject = new BehaviorSubject<int>(3333);                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(3333' 1' 10' 100' 1000);                  subject.OnError(new Exception());                  exception.Count.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(5);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);                  // ++subscription                  onNext.Clear();                  exception.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.Count.Is(0);                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BehaviorSubject,The following statement contains a magic number: {                  var subject = new BehaviorSubject<int>(3333);                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(3333' 1' 10' 100' 1000);                  subject.OnError(new Exception());                  exception.Count.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(5);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);                  // ++subscription                  onNext.Clear();                  exception.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.Count.Is(0);                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BehaviorSubject,The following statement contains a magic number: {                  var subject = new BehaviorSubject<int>(3333);                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(3333' 1' 10' 100' 1000);                  subject.OnError(new Exception());                  exception.Count.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(5);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);                  // ++subscription                  onNext.Clear();                  exception.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.Count.Is(0);                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,BehaviorSubject,The following statement contains a magic number: {                  var subject = new BehaviorSubject<int>(3333);                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(3333' 1' 10' 100' 1000);                  subject.OnError(new Exception());                  exception.Count.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(5);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);                  // ++subscription                  onNext.Clear();                  exception.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.Count.Is(0);                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ReplaySubject,The following statement contains a magic number: {                  var subject = new ReplaySubject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  var _ = subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(1' 10' 100' 1000);                  // replay subscription                  onNext.Clear();                  _.Dispose();                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1' 10' 100' 1000);                  subject.OnCompleted();                  onCompletedCallCount.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(4);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);                  // ++subscription                  onNext.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1' 10' 100' 1000);                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ReplaySubject,The following statement contains a magic number: {                  var subject = new ReplaySubject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  var _ = subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(1' 10' 100' 1000);                  // replay subscription                  onNext.Clear();                  _.Dispose();                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1' 10' 100' 1000);                  subject.OnCompleted();                  onCompletedCallCount.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(4);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);                  // ++subscription                  onNext.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1' 10' 100' 1000);                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ReplaySubject,The following statement contains a magic number: {                  var subject = new ReplaySubject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  var _ = subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(1' 10' 100' 1000);                  // replay subscription                  onNext.Clear();                  _.Dispose();                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1' 10' 100' 1000);                  subject.OnCompleted();                  onCompletedCallCount.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(4);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);                  // ++subscription                  onNext.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1' 10' 100' 1000);                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ReplaySubject,The following statement contains a magic number: {                  var subject = new ReplaySubject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  var _ = subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(1' 10' 100' 1000);                  // replay subscription                  onNext.Clear();                  _.Dispose();                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1' 10' 100' 1000);                  subject.OnCompleted();                  onCompletedCallCount.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(4);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);                  // ++subscription                  onNext.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1' 10' 100' 1000);                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ReplaySubject,The following statement contains a magic number: {                  var subject = new ReplaySubject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  var _ = subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(1' 10' 100' 1000);                  // replay subscription                  onNext.Clear();                  _.Dispose();                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1' 10' 100' 1000);                  subject.OnCompleted();                  onCompletedCallCount.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(4);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);                  // ++subscription                  onNext.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1' 10' 100' 1000);                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ReplaySubject,The following statement contains a magic number: {                  var subject = new ReplaySubject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  var _ = subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(1' 10' 100' 1000);                  // replay subscription                  onNext.Clear();                  _.Dispose();                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1' 10' 100' 1000);                  subject.OnCompleted();                  onCompletedCallCount.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(4);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);                  // ++subscription                  onNext.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1' 10' 100' 1000);                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ReplaySubject,The following statement contains a magic number: {                  var subject = new ReplaySubject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  var _ = subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(1' 10' 100' 1000);                  // replay subscription                  onNext.Clear();                  _.Dispose();                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1' 10' 100' 1000);                  subject.OnCompleted();                  onCompletedCallCount.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(4);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);                  // ++subscription                  onNext.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1' 10' 100' 1000);                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ReplaySubject,The following statement contains a magic number: {                  var subject = new ReplaySubject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  var _ = subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(1' 10' 100' 1000);                  // replay subscription                  onNext.Clear();                  _.Dispose();                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1' 10' 100' 1000);                  subject.OnCompleted();                  onCompletedCallCount.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(4);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);                  // ++subscription                  onNext.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1' 10' 100' 1000);                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ReplaySubject,The following statement contains a magic number: {                  var subject = new ReplaySubject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  var _ = subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(1' 10' 100' 1000);                  // replay subscription                  onNext.Clear();                  _.Dispose();                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1' 10' 100' 1000);                  subject.OnCompleted();                  onCompletedCallCount.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(4);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);                  // ++subscription                  onNext.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1' 10' 100' 1000);                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ReplaySubject,The following statement contains a magic number: {                  var subject = new ReplaySubject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  var _ = subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(1' 10' 100' 1000);                  // replay subscription                  onNext.Clear();                  _.Dispose();                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1' 10' 100' 1000);                  subject.OnCompleted();                  onCompletedCallCount.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(4);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);                  // ++subscription                  onNext.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1' 10' 100' 1000);                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ReplaySubject,The following statement contains a magic number: {                  var subject = new ReplaySubject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  var _ = subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(1' 10' 100' 1000);                  // replay subscription                  onNext.Clear();                  _.Dispose();                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1' 10' 100' 1000);                  subject.OnCompleted();                  onCompletedCallCount.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(4);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);                  // ++subscription                  onNext.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1' 10' 100' 1000);                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ReplaySubject,The following statement contains a magic number: {                  var subject = new ReplaySubject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  var _ = subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(1' 10' 100' 1000);                  // replay subscription                  onNext.Clear();                  _.Dispose();                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1' 10' 100' 1000);                  subject.OnCompleted();                  onCompletedCallCount.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(4);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);                  // ++subscription                  onNext.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1' 10' 100' 1000);                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ReplaySubject,The following statement contains a magic number: {                  var subject = new ReplaySubject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  var _ = subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(1' 10' 100' 1000);                  // replay subscription                  onNext.Clear();                  _.Dispose();                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1' 10' 100' 1000);                  subject.OnCompleted();                  onCompletedCallCount.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(4);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);                  // ++subscription                  onNext.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1' 10' 100' 1000);                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ReplaySubject,The following statement contains a magic number: {                  var subject = new ReplaySubject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  var _ = subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(1' 10' 100' 1000);                  // replay subscription                  onNext.Clear();                  _.Dispose();                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1' 10' 100' 1000);                  subject.OnCompleted();                  onCompletedCallCount.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(4);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);                  // ++subscription                  onNext.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1' 10' 100' 1000);                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ReplaySubject,The following statement contains a magic number: {                  var subject = new ReplaySubject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  var _ = subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(1' 10' 100' 1000);                  // replay subscription                  onNext.Clear();                  _.Dispose();                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1' 10' 100' 1000);                  subject.OnCompleted();                  onCompletedCallCount.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(4);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);                  // ++subscription                  onNext.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1' 10' 100' 1000);                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ReplaySubject,The following statement contains a magic number: {                  var subject = new ReplaySubject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(1' 10' 100' 1000);                  subject.OnError(new Exception());                  exception.Count.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(4);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);                  // ++subscription                  onNext.Clear();                  exception.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1' 10' 100' 1000);                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ReplaySubject,The following statement contains a magic number: {                  var subject = new ReplaySubject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(1' 10' 100' 1000);                  subject.OnError(new Exception());                  exception.Count.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(4);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);                  // ++subscription                  onNext.Clear();                  exception.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1' 10' 100' 1000);                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ReplaySubject,The following statement contains a magic number: {                  var subject = new ReplaySubject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(1' 10' 100' 1000);                  subject.OnError(new Exception());                  exception.Count.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(4);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);                  // ++subscription                  onNext.Clear();                  exception.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1' 10' 100' 1000);                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ReplaySubject,The following statement contains a magic number: {                  var subject = new ReplaySubject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(1' 10' 100' 1000);                  subject.OnError(new Exception());                  exception.Count.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(4);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);                  // ++subscription                  onNext.Clear();                  exception.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1' 10' 100' 1000);                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ReplaySubject,The following statement contains a magic number: {                  var subject = new ReplaySubject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(1' 10' 100' 1000);                  subject.OnError(new Exception());                  exception.Count.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(4);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);                  // ++subscription                  onNext.Clear();                  exception.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1' 10' 100' 1000);                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ReplaySubject,The following statement contains a magic number: {                  var subject = new ReplaySubject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(1' 10' 100' 1000);                  subject.OnError(new Exception());                  exception.Count.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(4);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);                  // ++subscription                  onNext.Clear();                  exception.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1' 10' 100' 1000);                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ReplaySubject,The following statement contains a magic number: {                  var subject = new ReplaySubject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(1' 10' 100' 1000);                  subject.OnError(new Exception());                  exception.Count.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(4);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);                  // ++subscription                  onNext.Clear();                  exception.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1' 10' 100' 1000);                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ReplaySubject,The following statement contains a magic number: {                  var subject = new ReplaySubject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(1' 10' 100' 1000);                  subject.OnError(new Exception());                  exception.Count.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(4);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);                  // ++subscription                  onNext.Clear();                  exception.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1' 10' 100' 1000);                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ReplaySubject,The following statement contains a magic number: {                  var subject = new ReplaySubject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(1' 10' 100' 1000);                  subject.OnError(new Exception());                  exception.Count.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(4);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);                  // ++subscription                  onNext.Clear();                  exception.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1' 10' 100' 1000);                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ReplaySubject,The following statement contains a magic number: {                  var subject = new ReplaySubject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(1' 10' 100' 1000);                  subject.OnError(new Exception());                  exception.Count.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(4);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);                  // ++subscription                  onNext.Clear();                  exception.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1' 10' 100' 1000);                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ReplaySubject,The following statement contains a magic number: {                  var subject = new ReplaySubject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(1' 10' 100' 1000);                  subject.OnError(new Exception());                  exception.Count.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(4);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);                  // ++subscription                  onNext.Clear();                  exception.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1' 10' 100' 1000);                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ReplaySubject,The following statement contains a magic number: {                  var subject = new ReplaySubject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(1' 10' 100' 1000);                  subject.OnError(new Exception());                  exception.Count.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(4);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);                  // ++subscription                  onNext.Clear();                  exception.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.IsCollection(1' 10' 100' 1000);                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ReplaySubjectWindowReplay,The following statement contains a magic number: var subject = new ReplaySubject<int>(window: TimeSpan.FromMilliseconds(700));
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ReplaySubjectWindowReplay,The following statement contains a magic number: Thread.Sleep(TimeSpan.FromMilliseconds(300));
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ReplaySubjectWindowReplay,The following statement contains a magic number: subject.OnNext(10);
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ReplaySubjectWindowReplay,The following statement contains a magic number: Thread.Sleep(TimeSpan.FromMilliseconds(300));
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ReplaySubjectWindowReplay,The following statement contains a magic number: subject.OnNext(100);
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ReplaySubjectWindowReplay,The following statement contains a magic number: Thread.Sleep(TimeSpan.FromMilliseconds(300));
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ReplaySubjectWindowReplay,The following statement contains a magic number: onNext.IsCollection(10' 100);
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ReplaySubjectWindowReplay,The following statement contains a magic number: onNext.IsCollection(10' 100);
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ReplaySubjectWindowReplay,The following statement contains a magic number: subject.OnNext(1000);
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ReplaySubjectWindowReplay,The following statement contains a magic number: Thread.Sleep(TimeSpan.FromMilliseconds(300));
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ReplaySubjectWindowReplay,The following statement contains a magic number: onNext.IsCollection(100' 1000);
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ReplaySubjectWindowReplay,The following statement contains a magic number: onNext.IsCollection(100' 1000);
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ReplaySubjectWindowReplay,The following statement contains a magic number: subject.OnNext(10000);
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ReplaySubjectWindowReplay,The following statement contains a magic number: Thread.Sleep(TimeSpan.FromMilliseconds(500));
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ReplaySubjectWindowReplay,The following statement contains a magic number: subject.OnNext(2);
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ReplaySubjectWindowReplay,The following statement contains a magic number: Thread.Sleep(TimeSpan.FromMilliseconds(10));
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ReplaySubjectWindowReplay,The following statement contains a magic number: subject.OnNext(20);
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ReplaySubjectWindowReplay,The following statement contains a magic number: Thread.Sleep(TimeSpan.FromMilliseconds(10));
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ReplaySubjectWindowReplay,The following statement contains a magic number: onNext.IsCollection(10000' 2' 20);
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ReplaySubjectWindowReplay,The following statement contains a magic number: onNext.IsCollection(10000' 2' 20);
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ReplaySubjectWindowReplay,The following statement contains a magic number: onNext.IsCollection(10000' 2' 20);
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Subject,The following statement contains a magic number: {                  var subject = new Subject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(1' 10' 100' 1000);                  subject.OnCompleted();                  onCompletedCallCount.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(4);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);                  // ++subscription                  onNext.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.Count.Is(0);                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Subject,The following statement contains a magic number: {                  var subject = new Subject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(1' 10' 100' 1000);                  subject.OnCompleted();                  onCompletedCallCount.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(4);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);                  // ++subscription                  onNext.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.Count.Is(0);                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Subject,The following statement contains a magic number: {                  var subject = new Subject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(1' 10' 100' 1000);                  subject.OnCompleted();                  onCompletedCallCount.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(4);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);                  // ++subscription                  onNext.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.Count.Is(0);                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Subject,The following statement contains a magic number: {                  var subject = new Subject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(1' 10' 100' 1000);                  subject.OnCompleted();                  onCompletedCallCount.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(4);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);                  // ++subscription                  onNext.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.Count.Is(0);                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Subject,The following statement contains a magic number: {                  var subject = new Subject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(1' 10' 100' 1000);                  subject.OnCompleted();                  onCompletedCallCount.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(4);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);                  // ++subscription                  onNext.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.Count.Is(0);                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Subject,The following statement contains a magic number: {                  var subject = new Subject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(1' 10' 100' 1000);                  subject.OnCompleted();                  onCompletedCallCount.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(4);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);                  // ++subscription                  onNext.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.Count.Is(0);                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Subject,The following statement contains a magic number: {                  var subject = new Subject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(1' 10' 100' 1000);                  subject.OnCompleted();                  onCompletedCallCount.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(4);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);                  // ++subscription                  onNext.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.Count.Is(0);                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Subject,The following statement contains a magic number: {                  var subject = new Subject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(1' 10' 100' 1000);                  subject.OnCompleted();                  onCompletedCallCount.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(4);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);                  // ++subscription                  onNext.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.Count.Is(0);                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Subject,The following statement contains a magic number: {                  var subject = new Subject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(1' 10' 100' 1000);                  subject.OnCompleted();                  onCompletedCallCount.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(4);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);                  // ++subscription                  onNext.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.Count.Is(0);                  exception.Count.Is(0);                  onCompletedCallCount.Is(1);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Subject,The following statement contains a magic number: {                  var subject = new Subject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(1' 10' 100' 1000);                  subject.OnError(new Exception());                  exception.Count.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(4);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);                  // ++subscription                  onNext.Clear();                  exception.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.Count.Is(0);                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Subject,The following statement contains a magic number: {                  var subject = new Subject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(1' 10' 100' 1000);                  subject.OnError(new Exception());                  exception.Count.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(4);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);                  // ++subscription                  onNext.Clear();                  exception.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.Count.Is(0);                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Subject,The following statement contains a magic number: {                  var subject = new Subject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(1' 10' 100' 1000);                  subject.OnError(new Exception());                  exception.Count.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(4);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);                  // ++subscription                  onNext.Clear();                  exception.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.Count.Is(0);                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Subject,The following statement contains a magic number: {                  var subject = new Subject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(1' 10' 100' 1000);                  subject.OnError(new Exception());                  exception.Count.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(4);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);                  // ++subscription                  onNext.Clear();                  exception.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.Count.Is(0);                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Subject,The following statement contains a magic number: {                  var subject = new Subject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(1' 10' 100' 1000);                  subject.OnError(new Exception());                  exception.Count.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(4);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);                  // ++subscription                  onNext.Clear();                  exception.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.Count.Is(0);                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Subject,The following statement contains a magic number: {                  var subject = new Subject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(1' 10' 100' 1000);                  subject.OnError(new Exception());                  exception.Count.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(4);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);                  // ++subscription                  onNext.Clear();                  exception.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.Count.Is(0);                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Subject,The following statement contains a magic number: {                  var subject = new Subject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(1' 10' 100' 1000);                  subject.OnError(new Exception());                  exception.Count.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(4);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);                  // ++subscription                  onNext.Clear();                  exception.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.Count.Is(0);                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Subject,The following statement contains a magic number: {                  var subject = new Subject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(1' 10' 100' 1000);                  subject.OnError(new Exception());                  exception.Count.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(4);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);                  // ++subscription                  onNext.Clear();                  exception.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.Count.Is(0);                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Subject,The following statement contains a magic number: {                  var subject = new Subject<int>();                  var onNext = new List<int>();                  var exception = new List<Exception>();                  int onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  subject.OnNext(1000);                  onNext.IsCollection(1' 10' 100' 1000);                  subject.OnError(new Exception());                  exception.Count.Is(1);                  subject.OnNext(1);                  subject.OnNext(10);                  subject.OnNext(100);                  onNext.Count.Is(4);                  subject.OnCompleted();                  subject.OnError(new Exception());                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);                  // ++subscription                  onNext.Clear();                  exception.Clear();                  onCompletedCallCount = 0;                  subject.Subscribe(x => onNext.Add(x)' x => exception.Add(x)' () => onCompletedCallCount++);                  onNext.Count.Is(0);                  exception.Count.Is(1);                  onCompletedCallCount.Is(0);              }
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SubjectSubscribeTest,The following statement contains a magic number: subject.OnNext(2);
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SubjectSubscribeTest,The following statement contains a magic number: listA[1].Is(2);
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SubjectSubscribeTest,The following statement contains a magic number: listB[0].Is(2);
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SubjectSubscribeTest,The following statement contains a magic number: subject.OnNext(3);
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SubjectSubscribeTest,The following statement contains a magic number: listA[2].Is(3);
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SubjectSubscribeTest,The following statement contains a magic number: listA[2].Is(3);
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SubjectSubscribeTest,The following statement contains a magic number: listB[1].Is(3);
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SubjectSubscribeTest,The following statement contains a magic number: listC[0].Is(3);
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SubjectSubscribeTest,The following statement contains a magic number: subject.OnNext(4);
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SubjectSubscribeTest,The following statement contains a magic number: listA.Count.Is(3);
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SubjectSubscribeTest,The following statement contains a magic number: listB[2].Is(4);
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SubjectSubscribeTest,The following statement contains a magic number: listB[2].Is(4);
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SubjectSubscribeTest,The following statement contains a magic number: listC[1].Is(4);
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SubjectSubscribeTest,The following statement contains a magic number: subject.OnNext(5);
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SubjectSubscribeTest,The following statement contains a magic number: listC.Count.Is(2);
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SubjectSubscribeTest,The following statement contains a magic number: listB[3].Is(5);
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SubjectSubscribeTest,The following statement contains a magic number: listB[3].Is(5);
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SubjectSubscribeTest,The following statement contains a magic number: subject.OnNext(6);
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SubjectSubscribeTest,The following statement contains a magic number: listB.Count.Is(4);
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SubjectSubscribeTest,The following statement contains a magic number: subject.OnNext(2);
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SubjectSubscribeTest,The following statement contains a magic number: listD[1].Is(2);
Magic Number,RuntimeUnitTestToolkit,SubjectTests,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,SubjectSubscribeTest,The following statement contains a magic number: listE[0].Is(2);
Magic Number,RuntimeUnitTestToolkit,TakeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeCount,The following statement contains a magic number: var range = Observable.Range(1' 10);
Magic Number,RuntimeUnitTestToolkit,TakeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeCount,The following statement contains a magic number: range.Take(3).ToArrayWait().IsCollection(1' 2' 3);
Magic Number,RuntimeUnitTestToolkit,TakeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeCount,The following statement contains a magic number: range.Take(3).ToArrayWait().IsCollection(1' 2' 3);
Magic Number,RuntimeUnitTestToolkit,TakeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeCount,The following statement contains a magic number: range.Take(3).ToArrayWait().IsCollection(1' 2' 3);
Magic Number,RuntimeUnitTestToolkit,TakeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeCount,The following statement contains a magic number: range.Take(15).ToArrayWait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,TakeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeCount,The following statement contains a magic number: range.Take(15).ToArrayWait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,TakeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeCount,The following statement contains a magic number: range.Take(15).ToArrayWait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,TakeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeCount,The following statement contains a magic number: range.Take(15).ToArrayWait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,TakeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeCount,The following statement contains a magic number: range.Take(15).ToArrayWait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,TakeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeCount,The following statement contains a magic number: range.Take(15).ToArrayWait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,TakeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeCount,The following statement contains a magic number: range.Take(15).ToArrayWait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,TakeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeCount,The following statement contains a magic number: range.Take(15).ToArrayWait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,TakeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeCount,The following statement contains a magic number: range.Take(15).ToArrayWait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,TakeTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,TakeCount,The following statement contains a magic number: range.Take(15).ToArrayWait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ToTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToArray,The following statement contains a magic number: Observable.Return(10).ToArray().Wait().IsCollection(10);
Magic Number,RuntimeUnitTestToolkit,ToTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToArray,The following statement contains a magic number: Observable.Return(10).ToArray().Wait().IsCollection(10);
Magic Number,RuntimeUnitTestToolkit,ToTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToArray,The following statement contains a magic number: Observable.Range(1' 10).ToArray().Wait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ToTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToArray,The following statement contains a magic number: Observable.Range(1' 10).ToArray().Wait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ToTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToArray,The following statement contains a magic number: Observable.Range(1' 10).ToArray().Wait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ToTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToArray,The following statement contains a magic number: Observable.Range(1' 10).ToArray().Wait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ToTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToArray,The following statement contains a magic number: Observable.Range(1' 10).ToArray().Wait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ToTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToArray,The following statement contains a magic number: Observable.Range(1' 10).ToArray().Wait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ToTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToArray,The following statement contains a magic number: Observable.Range(1' 10).ToArray().Wait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ToTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToArray,The following statement contains a magic number: Observable.Range(1' 10).ToArray().Wait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ToTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToArray,The following statement contains a magic number: Observable.Range(1' 10).ToArray().Wait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ToTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToArray,The following statement contains a magic number: Observable.Range(1' 10).ToArray().Wait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ToTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToList,The following statement contains a magic number: Observable.Return(10).ToList().Wait().IsCollection(10);
Magic Number,RuntimeUnitTestToolkit,ToTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToList,The following statement contains a magic number: Observable.Return(10).ToList().Wait().IsCollection(10);
Magic Number,RuntimeUnitTestToolkit,ToTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToList,The following statement contains a magic number: Observable.Range(1' 10).ToList().Wait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ToTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToList,The following statement contains a magic number: Observable.Range(1' 10).ToList().Wait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ToTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToList,The following statement contains a magic number: Observable.Range(1' 10).ToList().Wait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ToTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToList,The following statement contains a magic number: Observable.Range(1' 10).ToList().Wait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ToTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToList,The following statement contains a magic number: Observable.Range(1' 10).ToList().Wait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ToTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToList,The following statement contains a magic number: Observable.Range(1' 10).ToList().Wait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ToTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToList,The following statement contains a magic number: Observable.Range(1' 10).ToList().Wait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ToTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToList,The following statement contains a magic number: Observable.Range(1' 10).ToList().Wait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ToTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToList,The following statement contains a magic number: Observable.Range(1' 10).ToList().Wait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,ToTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,ToList,The following statement contains a magic number: Observable.Range(1' 10).ToList().Wait().IsCollection(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,RuntimeUnitTestToolkit,WhenAllTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhenAll,The following statement contains a magic number: var xs = Observable.WhenAll(                      Observable.Return(100)'                      Observable.Timer(TimeSpan.FromSeconds(1)).Select(_ => 5)'                      Observable.Range(1' 4))                  .Wait();
Magic Number,RuntimeUnitTestToolkit,WhenAllTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhenAll,The following statement contains a magic number: var xs = Observable.WhenAll(                      Observable.Return(100)'                      Observable.Timer(TimeSpan.FromSeconds(1)).Select(_ => 5)'                      Observable.Range(1' 4))                  .Wait();
Magic Number,RuntimeUnitTestToolkit,WhenAllTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhenAll,The following statement contains a magic number: var xs = Observable.WhenAll(                      Observable.Return(100)'                      Observable.Timer(TimeSpan.FromSeconds(1)).Select(_ => 5)'                      Observable.Range(1' 4))                  .Wait();
Magic Number,RuntimeUnitTestToolkit,WhenAllTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhenAll,The following statement contains a magic number: xs.IsCollection(100' 5' 4);
Magic Number,RuntimeUnitTestToolkit,WhenAllTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhenAll,The following statement contains a magic number: xs.IsCollection(100' 5' 4);
Magic Number,RuntimeUnitTestToolkit,WhenAllTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhenAll,The following statement contains a magic number: xs.IsCollection(100' 5' 4);
Magic Number,RuntimeUnitTestToolkit,WhenAllTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhenAllEnumerable,The following statement contains a magic number: var xs = new[] {                      Observable.Return(100)'                      Observable.Timer(TimeSpan.FromSeconds(1)).Select(_ => 5)'                      Observable.Range(1' 4)              }.Select(x => x).WhenAll().Wait();
Magic Number,RuntimeUnitTestToolkit,WhenAllTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhenAllEnumerable,The following statement contains a magic number: var xs = new[] {                      Observable.Return(100)'                      Observable.Timer(TimeSpan.FromSeconds(1)).Select(_ => 5)'                      Observable.Range(1' 4)              }.Select(x => x).WhenAll().Wait();
Magic Number,RuntimeUnitTestToolkit,WhenAllTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhenAllEnumerable,The following statement contains a magic number: var xs = new[] {                      Observable.Return(100)'                      Observable.Timer(TimeSpan.FromSeconds(1)).Select(_ => 5)'                      Observable.Range(1' 4)              }.Select(x => x).WhenAll().Wait();
Magic Number,RuntimeUnitTestToolkit,WhenAllTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhenAllEnumerable,The following statement contains a magic number: xs.IsCollection(100' 5' 4);
Magic Number,RuntimeUnitTestToolkit,WhenAllTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhenAllEnumerable,The following statement contains a magic number: xs.IsCollection(100' 5' 4);
Magic Number,RuntimeUnitTestToolkit,WhenAllTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhenAllEnumerable,The following statement contains a magic number: xs.IsCollection(100' 5' 4);
Magic Number,RuntimeUnitTestToolkit,WhenAllTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhenAllUnit,The following statement contains a magic number: var xs = Observable.WhenAll(                      Observable.Return(100).AsUnitObservable()'                      Observable.Timer(TimeSpan.FromSeconds(1)).AsUnitObservable()'                      Observable.Range(1' 4).AsUnitObservable())                  .Wait();
Magic Number,RuntimeUnitTestToolkit,WhenAllTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhenAllUnit,The following statement contains a magic number: var xs = Observable.WhenAll(                      Observable.Return(100).AsUnitObservable()'                      Observable.Timer(TimeSpan.FromSeconds(1)).AsUnitObservable()'                      Observable.Range(1' 4).AsUnitObservable())                  .Wait();
Magic Number,RuntimeUnitTestToolkit,WhenAllTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhenAllUnitEnumerable,The following statement contains a magic number: var xs = new[] {                      Observable.Return(100).AsUnitObservable()'                      Observable.Timer(TimeSpan.FromSeconds(1)).AsUnitObservable()'                      Observable.Range(1' 4).AsUnitObservable()              }.Select(x => x).WhenAll().Wait();
Magic Number,RuntimeUnitTestToolkit,WhenAllTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,WhenAllUnitEnumerable,The following statement contains a magic number: var xs = new[] {                      Observable.Return(100).AsUnitObservable()'                      Observable.Timer(TimeSpan.FromSeconds(1)).AsUnitObservable()'                      Observable.Range(1' 4).AsUnitObservable()              }.Select(x => x).WhenAll().Wait();
Magic Number,UniRx.Tests,_ManualyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\_ManualyTest.cs,ToReactiveProperty,The following statement contains a magic number: {                  var rxProp = new ReactiveProperty<int>();                  var calledCount = 0;                    var readRxProp = rxProp.ToReactiveProperty();                  readRxProp.Subscribe(x => calledCount++);                    calledCount.Is(1);                  rxProp.Value = 10;                  calledCount.Is(2);                  rxProp.Value = 10;                  calledCount.Is(2);                    rxProp.SetValueAndForceNotify(10);                  calledCount.Is(2);              }
Magic Number,UniRx.Tests,_ManualyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\_ManualyTest.cs,ToReactiveProperty,The following statement contains a magic number: {                  var rxProp = new ReactiveProperty<int>();                  var calledCount = 0;                    var readRxProp = rxProp.ToReactiveProperty();                  readRxProp.Subscribe(x => calledCount++);                    calledCount.Is(1);                  rxProp.Value = 10;                  calledCount.Is(2);                  rxProp.Value = 10;                  calledCount.Is(2);                    rxProp.SetValueAndForceNotify(10);                  calledCount.Is(2);              }
Magic Number,UniRx.Tests,_ManualyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\_ManualyTest.cs,ToReactiveProperty,The following statement contains a magic number: {                  var rxProp = new ReactiveProperty<int>();                  var calledCount = 0;                    var readRxProp = rxProp.ToReactiveProperty();                  readRxProp.Subscribe(x => calledCount++);                    calledCount.Is(1);                  rxProp.Value = 10;                  calledCount.Is(2);                  rxProp.Value = 10;                  calledCount.Is(2);                    rxProp.SetValueAndForceNotify(10);                  calledCount.Is(2);              }
Magic Number,UniRx.Tests,_ManualyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\_ManualyTest.cs,ToReactiveProperty,The following statement contains a magic number: {                  var rxProp = new ReactiveProperty<int>();                  var calledCount = 0;                    var readRxProp = rxProp.ToReactiveProperty();                  readRxProp.Subscribe(x => calledCount++);                    calledCount.Is(1);                  rxProp.Value = 10;                  calledCount.Is(2);                  rxProp.Value = 10;                  calledCount.Is(2);                    rxProp.SetValueAndForceNotify(10);                  calledCount.Is(2);              }
Magic Number,UniRx.Tests,_ManualyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\_ManualyTest.cs,ToReactiveProperty,The following statement contains a magic number: {                  var rxProp = new ReactiveProperty<int>();                  var calledCount = 0;                    var readRxProp = rxProp.ToReactiveProperty();                  readRxProp.Subscribe(x => calledCount++);                    calledCount.Is(1);                  rxProp.Value = 10;                  calledCount.Is(2);                  rxProp.Value = 10;                  calledCount.Is(2);                    rxProp.SetValueAndForceNotify(10);                  calledCount.Is(2);              }
Magic Number,UniRx.Tests,_ManualyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\_ManualyTest.cs,ToReactiveProperty,The following statement contains a magic number: {                  var rxProp = new ReactiveProperty<int>();                  var calledCount = 0;                    var readRxProp = rxProp.ToReactiveProperty();                  readRxProp.Subscribe(x => calledCount++);                    calledCount.Is(1);                  rxProp.Value = 10;                  calledCount.Is(2);                  rxProp.Value = 10;                  calledCount.Is(2);                    rxProp.SetValueAndForceNotify(10);                  calledCount.Is(2);              }
Magic Number,UniRx.Tests,_ManualyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\_ManualyTest.cs,ToReactiveProperty,The following statement contains a magic number: {                  var rxProp = new ReactiveProperty<int>();                  var calledCount = 0;                    var readRxProp = rxProp.ToSequentialReadOnlyReactiveProperty();                  readRxProp.Subscribe(x => calledCount++);                    calledCount.Is(1);                  rxProp.Value = 10;                  calledCount.Is(2);                  rxProp.Value = 10;                  calledCount.Is(2);                    rxProp.SetValueAndForceNotify(10);                  calledCount.Is(3);              }
Magic Number,UniRx.Tests,_ManualyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\_ManualyTest.cs,ToReactiveProperty,The following statement contains a magic number: {                  var rxProp = new ReactiveProperty<int>();                  var calledCount = 0;                    var readRxProp = rxProp.ToSequentialReadOnlyReactiveProperty();                  readRxProp.Subscribe(x => calledCount++);                    calledCount.Is(1);                  rxProp.Value = 10;                  calledCount.Is(2);                  rxProp.Value = 10;                  calledCount.Is(2);                    rxProp.SetValueAndForceNotify(10);                  calledCount.Is(3);              }
Magic Number,UniRx.Tests,_ManualyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\_ManualyTest.cs,ToReactiveProperty,The following statement contains a magic number: {                  var rxProp = new ReactiveProperty<int>();                  var calledCount = 0;                    var readRxProp = rxProp.ToSequentialReadOnlyReactiveProperty();                  readRxProp.Subscribe(x => calledCount++);                    calledCount.Is(1);                  rxProp.Value = 10;                  calledCount.Is(2);                  rxProp.Value = 10;                  calledCount.Is(2);                    rxProp.SetValueAndForceNotify(10);                  calledCount.Is(3);              }
Magic Number,UniRx.Tests,_ManualyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\_ManualyTest.cs,ToReactiveProperty,The following statement contains a magic number: {                  var rxProp = new ReactiveProperty<int>();                  var calledCount = 0;                    var readRxProp = rxProp.ToSequentialReadOnlyReactiveProperty();                  readRxProp.Subscribe(x => calledCount++);                    calledCount.Is(1);                  rxProp.Value = 10;                  calledCount.Is(2);                  rxProp.Value = 10;                  calledCount.Is(2);                    rxProp.SetValueAndForceNotify(10);                  calledCount.Is(3);              }
Magic Number,UniRx.Tests,_ManualyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\_ManualyTest.cs,ToReactiveProperty,The following statement contains a magic number: {                  var rxProp = new ReactiveProperty<int>();                  var calledCount = 0;                    var readRxProp = rxProp.ToSequentialReadOnlyReactiveProperty();                  readRxProp.Subscribe(x => calledCount++);                    calledCount.Is(1);                  rxProp.Value = 10;                  calledCount.Is(2);                  rxProp.Value = 10;                  calledCount.Is(2);                    rxProp.SetValueAndForceNotify(10);                  calledCount.Is(3);              }
Magic Number,UniRx.Tests,_ManualyTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\_ManualyTest.cs,ToReactiveProperty,The following statement contains a magic number: {                  var rxProp = new ReactiveProperty<int>();                  var calledCount = 0;                    var readRxProp = rxProp.ToSequentialReadOnlyReactiveProperty();                  readRxProp.Subscribe(x => calledCount++);                    calledCount.Is(1);                  rxProp.Value = 10;                  calledCount.Is(2);                  rxProp.Value = 10;                  calledCount.Is(2);                    rxProp.SetValueAndForceNotify(10);                  calledCount.Is(3);              }
Duplicate Code,RuntimeUnitTestToolkit,MicroCoroutineTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\Container.cs,EnumerationCycleRandom,The method contains a code clone-set at the following line numbers (starting from the method definition): ((12' 32)' (39' 59))
Duplicate Code,RuntimeUnitTestToolkit,MicroCoroutineTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\Container.cs,EnumerationCycleRandom,The method contains a code clone-set at the following line numbers (starting from the method definition): ((12' 31)' (66' 85)' (39' 58))
Duplicate Code,RuntimeUnitTestToolkit,MicroCoroutineTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\Container.cs,EnumerationCycleRandom,The method contains a code clone-set at the following line numbers (starting from the method definition): ((37' 57)' (64' 84))
Duplicate Code,RuntimeUnitTestToolkit,QueueWorkerTest,C:\repos\neuecc_UniRx\Assets\Scripts\Tests\Imported\TestImporter.cs,Enq,The method contains a code clone-set at the following line numbers (starting from the method definition): ((5' 35)' (36' 66))
