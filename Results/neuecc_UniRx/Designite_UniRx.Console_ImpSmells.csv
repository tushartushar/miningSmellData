Implementation smell,Namespace,Class,File,Method,Description
Long Method,UniRx,Program,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,EventAotCheck2,The method has 107 lines of code.
Magic Number,UniRx,Playground,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Playground.cs,GCCheck,The following statement contains a magic number: for (int i = 0; i < 100000000; i++)              {                  //dict.ContainsKey(Tuple.Create(1' 1));                  new object();                  //d.Equals(t' Tuple.Create(1' 1));              }
Magic Number,UniRx,Playground,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Playground.cs,GCCheck,The following statement contains a magic number: Console.WriteLine("2:" + GC.CollectionCount(2));
Magic Number,UniRx,Playground,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Playground.cs,Hoge,The following statement contains a magic number: return Observable.Create<int>(observer =>              {                  observer.OnNext(1000);                  return subject.Subscribe(observer);              });
Magic Number,UniRx,Program,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,Main,The following statement contains a magic number: Test("Range"' () => Observable.Range(1' 3).Subscribe(x => Console.WriteLine(x)));
Magic Number,UniRx,Program,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,Main,The following statement contains a magic number: Test("IgnoreElements"' () => Observable.Range(1' 3).IgnoreElements().Subscribe(x => Console.WriteLine(x)));
Magic Number,UniRx,Program,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,Main,The following statement contains a magic number: Test("DefaultIfEmpty"' () => Observable.Empty<int>().DefaultIfEmpty(100).Subscribe(x => Console.WriteLine(x)));
Magic Number,UniRx,Program,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,Main,The following statement contains a magic number: Test("ToArray"' () => Observable.Range(1' 3).ToArray().Subscribe(xs => Console.WriteLine(xs.Length)));
Magic Number,UniRx,Program,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,Main,The following statement contains a magic number: Test("Where"' () => Observable.Range(1' 5).Where(x => x % 2 == 0).Subscribe());
Magic Number,UniRx,Program,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,Main,The following statement contains a magic number: Test("Where"' () => Observable.Range(1' 5).Where(x => x % 2 == 0).Subscribe());
Magic Number,UniRx,Program,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,Main,The following statement contains a magic number: Test("SkipWhile"' () => Observable.Range(1' 5).SkipWhile(x => x <= 3).Subscribe(Console.WriteLine));
Magic Number,UniRx,Program,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,Main,The following statement contains a magic number: Test("SkipWhile"' () => Observable.Range(1' 5).SkipWhile(x => x <= 3).Subscribe(Console.WriteLine));
Magic Number,UniRx,Program,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,Main,The following statement contains a magic number: Test("Subject"' () =>              {                  var s = new Subject<int>();                  s.Subscribe(x => Console.WriteLine(x)' ex => { });                  s.Subscribe(x => Console.WriteLine(x)' ex => { });                  var d = s.Subscribe(x => Console.WriteLine(x)' ex => { });                  s.OnNext(10);                  s.OnNext(100);                  d.Dispose();                  s.OnNext(1000);                  s.OnError(new Exception());                  s.OnCompleted();                  s.Dispose();              });
Magic Number,UniRx,Program,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,Main,The following statement contains a magic number: Test("Subject"' () =>              {                  var s = new Subject<int>();                  s.Subscribe(x => Console.WriteLine(x)' ex => { });                  s.Subscribe(x => Console.WriteLine(x)' ex => { });                  var d = s.Subscribe(x => Console.WriteLine(x)' ex => { });                  s.OnNext(10);                  s.OnNext(100);                  d.Dispose();                  s.OnNext(1000);                  s.OnError(new Exception());                  s.OnCompleted();                  s.Dispose();              });
Magic Number,UniRx,Program,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,Main,The following statement contains a magic number: Test("Subject"' () =>              {                  var s = new Subject<int>();                  s.Subscribe(x => Console.WriteLine(x)' ex => { });                  s.Subscribe(x => Console.WriteLine(x)' ex => { });                  var d = s.Subscribe(x => Console.WriteLine(x)' ex => { });                  s.OnNext(10);                  s.OnNext(100);                  d.Dispose();                  s.OnNext(1000);                  s.OnError(new Exception());                  s.OnCompleted();                  s.Dispose();              });
Magic Number,UniRx,Program,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,Main,The following statement contains a magic number: Test("Distinct"' () =>              {                  var s = new Subject<int>();                  s.Distinct().Subscribe(x => Console.WriteLine(x));                  s.OnNext(10);                  s.OnNext(10);                  s.OnNext(100);                  s.OnNext(10);                  s.OnNext(100);                  s.OnNext(100);                  s.OnNext(200);              });
Magic Number,UniRx,Program,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,Main,The following statement contains a magic number: Test("Distinct"' () =>              {                  var s = new Subject<int>();                  s.Distinct().Subscribe(x => Console.WriteLine(x));                  s.OnNext(10);                  s.OnNext(10);                  s.OnNext(100);                  s.OnNext(10);                  s.OnNext(100);                  s.OnNext(100);                  s.OnNext(200);              });
Magic Number,UniRx,Program,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,Main,The following statement contains a magic number: Test("Distinct"' () =>              {                  var s = new Subject<int>();                  s.Distinct().Subscribe(x => Console.WriteLine(x));                  s.OnNext(10);                  s.OnNext(10);                  s.OnNext(100);                  s.OnNext(10);                  s.OnNext(100);                  s.OnNext(100);                  s.OnNext(200);              });
Magic Number,UniRx,Program,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,Main,The following statement contains a magic number: Test("Distinct"' () =>              {                  var s = new Subject<int>();                  s.Distinct().Subscribe(x => Console.WriteLine(x));                  s.OnNext(10);                  s.OnNext(10);                  s.OnNext(100);                  s.OnNext(10);                  s.OnNext(100);                  s.OnNext(100);                  s.OnNext(200);              });
Magic Number,UniRx,Program,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,Main,The following statement contains a magic number: Test("Distinct"' () =>              {                  var s = new Subject<int>();                  s.Distinct().Subscribe(x => Console.WriteLine(x));                  s.OnNext(10);                  s.OnNext(10);                  s.OnNext(100);                  s.OnNext(10);                  s.OnNext(100);                  s.OnNext(100);                  s.OnNext(200);              });
Magic Number,UniRx,Program,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,Main,The following statement contains a magic number: Test("Distinct"' () =>              {                  var s = new Subject<int>();                  s.Distinct().Subscribe(x => Console.WriteLine(x));                  s.OnNext(10);                  s.OnNext(10);                  s.OnNext(100);                  s.OnNext(10);                  s.OnNext(100);                  s.OnNext(100);                  s.OnNext(200);              });
Magic Number,UniRx,Program,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,Main,The following statement contains a magic number: Test("Distinct"' () =>              {                  var s = new Subject<int>();                  s.Distinct().Subscribe(x => Console.WriteLine(x));                  s.OnNext(10);                  s.OnNext(10);                  s.OnNext(100);                  s.OnNext(10);                  s.OnNext(100);                  s.OnNext(100);                  s.OnNext(200);              });
Magic Number,UniRx,Program,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,Main,The following statement contains a magic number: Test("DistinctUntilChanged"' () =>              {                  var s = new Subject<int>();                  s.DistinctUntilChanged().Subscribe(x => Console.WriteLine(x));                  s.OnNext(10);                  s.OnNext(10);                  s.OnNext(100);                  s.OnNext(10);                  s.OnNext(100);                  s.OnNext(100);                  s.OnNext(200);              });
Magic Number,UniRx,Program,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,Main,The following statement contains a magic number: Test("DistinctUntilChanged"' () =>              {                  var s = new Subject<int>();                  s.DistinctUntilChanged().Subscribe(x => Console.WriteLine(x));                  s.OnNext(10);                  s.OnNext(10);                  s.OnNext(100);                  s.OnNext(10);                  s.OnNext(100);                  s.OnNext(100);                  s.OnNext(200);              });
Magic Number,UniRx,Program,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,Main,The following statement contains a magic number: Test("DistinctUntilChanged"' () =>              {                  var s = new Subject<int>();                  s.DistinctUntilChanged().Subscribe(x => Console.WriteLine(x));                  s.OnNext(10);                  s.OnNext(10);                  s.OnNext(100);                  s.OnNext(10);                  s.OnNext(100);                  s.OnNext(100);                  s.OnNext(200);              });
Magic Number,UniRx,Program,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,Main,The following statement contains a magic number: Test("DistinctUntilChanged"' () =>              {                  var s = new Subject<int>();                  s.DistinctUntilChanged().Subscribe(x => Console.WriteLine(x));                  s.OnNext(10);                  s.OnNext(10);                  s.OnNext(100);                  s.OnNext(10);                  s.OnNext(100);                  s.OnNext(100);                  s.OnNext(200);              });
Magic Number,UniRx,Program,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,Main,The following statement contains a magic number: Test("DistinctUntilChanged"' () =>              {                  var s = new Subject<int>();                  s.DistinctUntilChanged().Subscribe(x => Console.WriteLine(x));                  s.OnNext(10);                  s.OnNext(10);                  s.OnNext(100);                  s.OnNext(10);                  s.OnNext(100);                  s.OnNext(100);                  s.OnNext(200);              });
Magic Number,UniRx,Program,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,Main,The following statement contains a magic number: Test("DistinctUntilChanged"' () =>              {                  var s = new Subject<int>();                  s.DistinctUntilChanged().Subscribe(x => Console.WriteLine(x));                  s.OnNext(10);                  s.OnNext(10);                  s.OnNext(100);                  s.OnNext(10);                  s.OnNext(100);                  s.OnNext(100);                  s.OnNext(200);              });
Magic Number,UniRx,Program,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,Main,The following statement contains a magic number: Test("DistinctUntilChanged"' () =>              {                  var s = new Subject<int>();                  s.DistinctUntilChanged().Subscribe(x => Console.WriteLine(x));                  s.OnNext(10);                  s.OnNext(10);                  s.OnNext(100);                  s.OnNext(10);                  s.OnNext(100);                  s.OnNext(100);                  s.OnNext(200);              });
Magic Number,UniRx,Program,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,EventAotCheck,The following statement contains a magic number: {                  var isRaised = false;                  var d = Observable.FromEventPattern<EventHandler<MyEventArgs>' MyEventArgs>(                      h => h.Invoke'                      h => test.Event2 += h' h => test.Event2 -= h)                      .Subscribe(x => isRaised = true);                  test.Fire(2);                  Console.WriteLine(isRaised);                  isRaised = false;                  d.Dispose();                  test.Fire(2);                  Console.WriteLine(isRaised == false);              }
Magic Number,UniRx,Program,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,EventAotCheck,The following statement contains a magic number: {                  var isRaised = false;                  var d = Observable.FromEventPattern<EventHandler<MyEventArgs>' MyEventArgs>(                      h => h.Invoke'                      h => test.Event2 += h' h => test.Event2 -= h)                      .Subscribe(x => isRaised = true);                  test.Fire(2);                  Console.WriteLine(isRaised);                  isRaised = false;                  d.Dispose();                  test.Fire(2);                  Console.WriteLine(isRaised == false);              }
Magic Number,UniRx,Program,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,EventAotCheck,The following statement contains a magic number: {                  var isRaised = false;                  var d = Observable.FromEventPattern<MyEventHandler' MyEventArgs>(                      h => h.Invoke'                      h => test.Event3 += h' h => test.Event3 -= h)                      .Subscribe(x => isRaised = true);                  test.Fire(3);                  Console.WriteLine(isRaised);                  isRaised = false;                  d.Dispose();                  test.Fire(3);                  Console.WriteLine(isRaised == false);              }
Magic Number,UniRx,Program,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,EventAotCheck,The following statement contains a magic number: {                  var isRaised = false;                  var d = Observable.FromEventPattern<MyEventHandler' MyEventArgs>(                      h => h.Invoke'                      h => test.Event3 += h' h => test.Event3 -= h)                      .Subscribe(x => isRaised = true);                  test.Fire(3);                  Console.WriteLine(isRaised);                  isRaised = false;                  d.Dispose();                  test.Fire(3);                  Console.WriteLine(isRaised == false);              }
Magic Number,UniRx,Program,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,EventAotCheck2,The following statement contains a magic number: {                  var isRaised = false;                  var d = Observable.FromEvent<EventHandler<MyEventArgs>' MyEventArgs>(                      h => (sender' e) => h.Invoke(e)'                      h => test.Event2 += h' h => test.Event2 -= h)                      .Subscribe(x => isRaised = true);                  test.Fire(2);                  Console.WriteLine(isRaised);                  isRaised = false;                  d.Dispose();                  test.Fire(2);                  Console.WriteLine(isRaised == false);              }
Magic Number,UniRx,Program,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,EventAotCheck2,The following statement contains a magic number: {                  var isRaised = false;                  var d = Observable.FromEvent<EventHandler<MyEventArgs>' MyEventArgs>(                      h => (sender' e) => h.Invoke(e)'                      h => test.Event2 += h' h => test.Event2 -= h)                      .Subscribe(x => isRaised = true);                  test.Fire(2);                  Console.WriteLine(isRaised);                  isRaised = false;                  d.Dispose();                  test.Fire(2);                  Console.WriteLine(isRaised == false);              }
Magic Number,UniRx,Program,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,EventAotCheck2,The following statement contains a magic number: {                  var isRaised = false;                  var d = Observable.FromEvent<MyEventHandler' MyEventArgs>(                      h => (sender' e) => h.Invoke(e)'                      h => test.Event3 += h' h => test.Event3 -= h)                      .Subscribe(x => isRaised = true);                  test.Fire(3);                  Console.WriteLine(isRaised);                  isRaised = false;                  d.Dispose();                  test.Fire(3);                  Console.WriteLine(isRaised == false);              }
Magic Number,UniRx,Program,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,EventAotCheck2,The following statement contains a magic number: {                  var isRaised = false;                  var d = Observable.FromEvent<MyEventHandler' MyEventArgs>(                      h => (sender' e) => h.Invoke(e)'                      h => test.Event3 += h' h => test.Event3 -= h)                      .Subscribe(x => isRaised = true);                  test.Fire(3);                  Console.WriteLine(isRaised);                  isRaised = false;                  d.Dispose();                  test.Fire(3);                  Console.WriteLine(isRaised == false);              }
Magic Number,UniRx,Program,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,EventAotCheck2,The following statement contains a magic number: {                  var isRaised = false;                  var d = Observable.FromEvent<Action' Unit>(                      h => () => h(Unit.Default)'                      h => test.Event4 += h' h => test.Event4 -= h)                      .Subscribe(x => isRaised = true);                  test.Fire(4);                  Console.WriteLine(isRaised);                  isRaised = false;                  d.Dispose();                  test.Fire(4);                  Console.WriteLine(isRaised == false);              }
Magic Number,UniRx,Program,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,EventAotCheck2,The following statement contains a magic number: {                  var isRaised = false;                  var d = Observable.FromEvent<Action' Unit>(                      h => () => h(Unit.Default)'                      h => test.Event4 += h' h => test.Event4 -= h)                      .Subscribe(x => isRaised = true);                  test.Fire(4);                  Console.WriteLine(isRaised);                  isRaised = false;                  d.Dispose();                  test.Fire(4);                  Console.WriteLine(isRaised == false);              }
Magic Number,UniRx,Program,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,EventAotCheck2,The following statement contains a magic number: {                  var isRaised = false;                  var d = Observable.FromEvent(                      h => test.Event4 += h' h => test.Event4 -= h)                      .Subscribe(x => isRaised = true);                  test.Fire(4);                  Console.WriteLine(isRaised);                  isRaised = false;                  d.Dispose();                  test.Fire(4);                  Console.WriteLine(isRaised == false);              }
Magic Number,UniRx,Program,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,EventAotCheck2,The following statement contains a magic number: {                  var isRaised = false;                  var d = Observable.FromEvent(                      h => test.Event4 += h' h => test.Event4 -= h)                      .Subscribe(x => isRaised = true);                  test.Fire(4);                  Console.WriteLine(isRaised);                  isRaised = false;                  d.Dispose();                  test.Fire(4);                  Console.WriteLine(isRaised == false);              }
Magic Number,UniRx,Program,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,EventAotCheck2,The following statement contains a magic number: {                  var isRaised = false;                  var d = Observable.FromEvent<Action<int>' int>(                      h => h'                      h => test.Event5 += h' h => test.Event5 -= h)                      .Subscribe(x => isRaised = true);                  test.Fire(5);                  Console.WriteLine(isRaised);                  isRaised = false;                  d.Dispose();                  test.Fire(5);                  Console.WriteLine(isRaised == false);              }
Magic Number,UniRx,Program,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,EventAotCheck2,The following statement contains a magic number: {                  var isRaised = false;                  var d = Observable.FromEvent<Action<int>' int>(                      h => h'                      h => test.Event5 += h' h => test.Event5 -= h)                      .Subscribe(x => isRaised = true);                  test.Fire(5);                  Console.WriteLine(isRaised);                  isRaised = false;                  d.Dispose();                  test.Fire(5);                  Console.WriteLine(isRaised == false);              }
Magic Number,UniRx,Program,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,EventAotCheck2,The following statement contains a magic number: {                  var isRaised = false;                  var d = Observable.FromEvent<int>(                      h => test.Event5 += h' h => test.Event5 -= h)                      .Subscribe(x => isRaised = true);                  test.Fire(5);                  Console.WriteLine(isRaised);                  isRaised = false;                  d.Dispose();                  test.Fire(5);                  Console.WriteLine(isRaised == false);              }
Magic Number,UniRx,Program,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,EventAotCheck2,The following statement contains a magic number: {                  var isRaised = false;                  var d = Observable.FromEvent<int>(                      h => test.Event5 += h' h => test.Event5 -= h)                      .Subscribe(x => isRaised = true);                  test.Fire(5);                  Console.WriteLine(isRaised);                  isRaised = false;                  d.Dispose();                  test.Fire(5);                  Console.WriteLine(isRaised == false);              }
Magic Number,UniRx,Program,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,EventAotCheck2,The following statement contains a magic number: {                  var isRaised = false;                  var d = Observable.FromEvent<Action<int' string>' Tuple<int' string>>(                      h => (x' y) => h(Tuple.Create(x' y))'                      h => test.Event6 += h' h => test.Event6 -= h)                      .Subscribe(x => isRaised = true);                  test.Fire(6);                  Console.WriteLine(isRaised);                  isRaised = false;                  d.Dispose();                  test.Fire(6);                  Console.WriteLine(isRaised == false);              }
Magic Number,UniRx,Program,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,EventAotCheck2,The following statement contains a magic number: {                  var isRaised = false;                  var d = Observable.FromEvent<Action<int' string>' Tuple<int' string>>(                      h => (x' y) => h(Tuple.Create(x' y))'                      h => test.Event6 += h' h => test.Event6 -= h)                      .Subscribe(x => isRaised = true);                  test.Fire(6);                  Console.WriteLine(isRaised);                  isRaised = false;                  d.Dispose();                  test.Fire(6);                  Console.WriteLine(isRaised == false);              }
Magic Number,UniRx,Program,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,Main2,The following statement contains a magic number: int x = 100;
Magic Number,UniRx,Program,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,Main2,The following statement contains a magic number: Interlocked.CompareExchange(ref x' 10' 20);
Magic Number,UniRx,Program,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,Main2,The following statement contains a magic number: Interlocked.CompareExchange(ref x' 10' 20);
Magic Number,UniRx,EventTestesr,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,Fire,The following statement contains a magic number: switch (num)                  {                      case 1:                          if (Event1 == null) return;                          Event1(this' new EventArgs());                          break;                      case 2:                          if (Event2 == null) return;                          Event2(this' new MyEventArgs());                          break;                      case 3:                          if (Event3 == null) return;                          Event3(this' new MyEventArgs());                          break;                      case 4:                          if (Event4 == null) return;                          Event4();                          break;                      case 5:                          if (Event5 == null) return;                          Event5(100);                          break;                      case 6:                          if (Event6 == null) return;                          Event6(100' "hogehoge");                          break;                      default:                          break;                  }
Magic Number,UniRx,EventTestesr,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,Fire,The following statement contains a magic number: switch (num)                  {                      case 1:                          if (Event1 == null) return;                          Event1(this' new EventArgs());                          break;                      case 2:                          if (Event2 == null) return;                          Event2(this' new MyEventArgs());                          break;                      case 3:                          if (Event3 == null) return;                          Event3(this' new MyEventArgs());                          break;                      case 4:                          if (Event4 == null) return;                          Event4();                          break;                      case 5:                          if (Event5 == null) return;                          Event5(100);                          break;                      case 6:                          if (Event6 == null) return;                          Event6(100' "hogehoge");                          break;                      default:                          break;                  }
Magic Number,UniRx,EventTestesr,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,Fire,The following statement contains a magic number: switch (num)                  {                      case 1:                          if (Event1 == null) return;                          Event1(this' new EventArgs());                          break;                      case 2:                          if (Event2 == null) return;                          Event2(this' new MyEventArgs());                          break;                      case 3:                          if (Event3 == null) return;                          Event3(this' new MyEventArgs());                          break;                      case 4:                          if (Event4 == null) return;                          Event4();                          break;                      case 5:                          if (Event5 == null) return;                          Event5(100);                          break;                      case 6:                          if (Event6 == null) return;                          Event6(100' "hogehoge");                          break;                      default:                          break;                  }
Magic Number,UniRx,EventTestesr,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,Fire,The following statement contains a magic number: switch (num)                  {                      case 1:                          if (Event1 == null) return;                          Event1(this' new EventArgs());                          break;                      case 2:                          if (Event2 == null) return;                          Event2(this' new MyEventArgs());                          break;                      case 3:                          if (Event3 == null) return;                          Event3(this' new MyEventArgs());                          break;                      case 4:                          if (Event4 == null) return;                          Event4();                          break;                      case 5:                          if (Event5 == null) return;                          Event5(100);                          break;                      case 6:                          if (Event6 == null) return;                          Event6(100' "hogehoge");                          break;                      default:                          break;                  }
Magic Number,UniRx,EventTestesr,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,Fire,The following statement contains a magic number: switch (num)                  {                      case 1:                          if (Event1 == null) return;                          Event1(this' new EventArgs());                          break;                      case 2:                          if (Event2 == null) return;                          Event2(this' new MyEventArgs());                          break;                      case 3:                          if (Event3 == null) return;                          Event3(this' new MyEventArgs());                          break;                      case 4:                          if (Event4 == null) return;                          Event4();                          break;                      case 5:                          if (Event5 == null) return;                          Event5(100);                          break;                      case 6:                          if (Event6 == null) return;                          Event6(100' "hogehoge");                          break;                      default:                          break;                  }
Magic Number,UniRx,EventTestesr,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,Fire,The following statement contains a magic number: switch (num)                  {                      case 1:                          if (Event1 == null) return;                          Event1(this' new EventArgs());                          break;                      case 2:                          if (Event2 == null) return;                          Event2(this' new MyEventArgs());                          break;                      case 3:                          if (Event3 == null) return;                          Event3(this' new MyEventArgs());                          break;                      case 4:                          if (Event4 == null) return;                          Event4();                          break;                      case 5:                          if (Event5 == null) return;                          Event5(100);                          break;                      case 6:                          if (Event6 == null) return;                          Event6(100' "hogehoge");                          break;                      default:                          break;                  }
Magic Number,UniRx,EventTestesr,C:\repos\neuecc_UniRx\Tests\UniRx.Console\Program.cs,Fire,The following statement contains a magic number: switch (num)                  {                      case 1:                          if (Event1 == null) return;                          Event1(this' new EventArgs());                          break;                      case 2:                          if (Event2 == null) return;                          Event2(this' new MyEventArgs());                          break;                      case 3:                          if (Event3 == null) return;                          Event3(this' new MyEventArgs());                          break;                      case 4:                          if (Event4 == null) return;                          Event4();                          break;                      case 5:                          if (Event5 == null) return;                          Event5(100);                          break;                      case 6:                          if (Event6 == null) return;                          Event6(100' "hogehoge");                          break;                      default:                          break;                  }
