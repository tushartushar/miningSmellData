Implementation smell,Namespace,Class,File,Method,Description
Complex Method,TestHelper,DiagnosticVerifier,C:\research\architectureSmells\repos\neuecc_UniRx\Analyzer\UniRxAnalyzer\UniRxAnalyzer.Test\Verifiers\DiagnosticVerifier.cs,VerifyDiagnosticResults,Cyclomatic complexity of the method is 10
Long Parameter List,TestHelper,CodeFixVerifier,C:\research\architectureSmells\repos\neuecc_UniRx\Analyzer\UniRxAnalyzer\UniRxAnalyzer.Test\Verifiers\CodeFixVerifier.cs,VerifyFix,The method has 7 parameters. Parameters: language' analyzer' codeFixProvider' oldSource' newSource' codeFixIndex' allowNewCompilerDiagnostics
Long Statement,TestHelper,CodeFixVerifier,C:\research\architectureSmells\repos\neuecc_UniRx\Analyzer\UniRxAnalyzer\UniRxAnalyzer.Test\Verifiers\CodeFixVerifier.cs,VerifyCSharpFix,The length of the statement  "            VerifyFix(LanguageNames.CSharp' GetCSharpDiagnosticAnalyzer()' GetCSharpCodeFixProvider()' oldSource' newSource' codeFixIndex' allowNewCompilerDiagnostics);" is 156.
Long Statement,TestHelper,CodeFixVerifier,C:\research\architectureSmells\repos\neuecc_UniRx\Analyzer\UniRxAnalyzer\UniRxAnalyzer.Test\Verifiers\CodeFixVerifier.cs,VerifyBasicFix,The length of the statement  "            VerifyFix(LanguageNames.VisualBasic' GetBasicDiagnosticAnalyzer()' GetBasicCodeFixProvider()' oldSource' newSource' codeFixIndex' allowNewCompilerDiagnostics);" is 159.
Long Statement,TestHelper,CodeFixVerifier,C:\research\architectureSmells\repos\neuecc_UniRx\Analyzer\UniRxAnalyzer\UniRxAnalyzer.Test\Verifiers\CodeFixVerifier.cs,VerifyFix,The length of the statement  "                    document = document.WithSyntaxRoot(Formatter.Format(document.GetSyntaxRootAsync().Result' Formatter.Annotation' document.Project.Solution.Workspace));" is 150.
Long Statement,TestHelper,DiagnosticVerifier,C:\research\architectureSmells\repos\neuecc_UniRx\Analyzer\UniRxAnalyzer\UniRxAnalyzer.Test\Verifiers\DiagnosticVerifier.cs,VerifyDiagnosticResults,The length of the statement  "                    string.Format("Mismatch between number of diagnostics returned' expected \"{0}\" actual \"{1}\"\r\n\r\nDiagnostics:\r\n{2}\r\n"' expectedCount' actualCount' diagnosticsOutput));" is 177.
Long Statement,TestHelper,DiagnosticVerifier,C:\research\architectureSmells\repos\neuecc_UniRx\Analyzer\UniRxAnalyzer\UniRxAnalyzer.Test\Verifiers\DiagnosticVerifier.cs,VerifyDiagnosticLocation,The length of the statement  "            Assert.IsTrue(actualSpan.Path == expected.Path || (actualSpan.Path != null && actualSpan.Path.Contains("Test0.") && expected.Path.Contains("Test."))'" is 149.
Long Statement,TestHelper,DiagnosticVerifier,C:\research\architectureSmells\repos\neuecc_UniRx\Analyzer\UniRxAnalyzer\UniRxAnalyzer.Test\Verifiers\DiagnosticVerifier.cs,VerifyDiagnosticLocation,The length of the statement  "                string.Format("Expected diagnostic to be in file \"{0}\" was actually in file \"{1}\"\r\n\r\nDiagnostic:\r\n    {2}\r\n"'" is 121.
Long Statement,TestHelper,DiagnosticVerifier,C:\research\architectureSmells\repos\neuecc_UniRx\Analyzer\UniRxAnalyzer\UniRxAnalyzer.Test\Verifiers\DiagnosticVerifier.cs,VerifyDiagnosticLocation,The length of the statement  "                        string.Format("Expected diagnostic to be on line \"{0}\" was actually on line \"{1}\"\r\n\r\nDiagnostic:\r\n    {2}\r\n"'" is 121.
Long Statement,TestHelper,DiagnosticVerifier,C:\research\architectureSmells\repos\neuecc_UniRx\Analyzer\UniRxAnalyzer\UniRxAnalyzer.Test\Verifiers\DiagnosticVerifier.cs,VerifyDiagnosticLocation,The length of the statement  "                        string.Format("Expected diagnostic to start at column \"{0}\" was actually at column \"{1}\"\r\n\r\nDiagnostic:\r\n    {2}\r\n"'" is 128.
Long Statement,TestHelper,DiagnosticVerifier,C:\research\architectureSmells\repos\neuecc_UniRx\Analyzer\UniRxAnalyzer\UniRxAnalyzer.Test\Verifiers\DiagnosticVerifier.cs,FormatDiagnostics,The length of the statement  "                                string.Format("Test base does not currently handle diagnostics in metadata locations. Diagnostic in metadata:\r\n"' diagnostics[i]));" is 133.
Long Statement,TestHelper,DiagnosticVerifier,C:\research\architectureSmells\repos\neuecc_UniRx\Analyzer\UniRxAnalyzer\UniRxAnalyzer.Test\Verifiers\DiagnosticVerifier.cs,FormatDiagnostics,The length of the statement  "                            string resultMethodName = diagnostics[i].Location.SourceTree.FilePath.EndsWith(".cs") ? "GetCSharpResultAt" : "GetBasicResultAt";" is 129.
Magic Number,UniRxAnalyzer.Test,HandleObservableAnalyzerTest,C:\research\architectureSmells\repos\neuecc_UniRx\Analyzer\UniRxAnalyzer\UniRxAnalyzer.Test\HandleObservableAnalyzerTest.cs,UnHandle,The following statement contains a magic number: var expected = new DiagnosticResult             {                 Id = UniRxAnalyzer.HandleObservableAnalyzer.DiagnosticId'                 Message = "This call does not handle IObservable<T>."'                 Severity = DiagnosticSeverity.Warning'                 Locations = new[]                 {                     new DiagnosticResultLocation("Test0.cs"' 10' 9)                 }             };
Magic Number,UniRxAnalyzer.Test,HandleObservableAnalyzerTest,C:\research\architectureSmells\repos\neuecc_UniRx\Analyzer\UniRxAnalyzer\UniRxAnalyzer.Test\HandleObservableAnalyzerTest.cs,UnHandle,The following statement contains a magic number: var expected = new DiagnosticResult             {                 Id = UniRxAnalyzer.HandleObservableAnalyzer.DiagnosticId'                 Message = "This call does not handle IObservable<T>."'                 Severity = DiagnosticSeverity.Warning'                 Locations = new[]                 {                     new DiagnosticResultLocation("Test0.cs"' 10' 9)                 }             };
Magic Number,UniRxAnalyzer.Test,HandleObservableAnalyzerTest,C:\research\architectureSmells\repos\neuecc_UniRx\Analyzer\UniRxAnalyzer\UniRxAnalyzer.Test\HandleObservableAnalyzerTest.cs,NgAfterLINQ,The following statement contains a magic number: var expected = new DiagnosticResult             {                 Id = UniRxAnalyzer.HandleObservableAnalyzer.DiagnosticId'                 Message = "This call does not handle IObservable<T>."'                 Severity = DiagnosticSeverity.Warning'                 Locations = new[]             {                     new DiagnosticResultLocation("Test0.cs"' 13' 9)                 }             };
Magic Number,UniRxAnalyzer.Test,HandleObservableAnalyzerTest,C:\research\architectureSmells\repos\neuecc_UniRx\Analyzer\UniRxAnalyzer\UniRxAnalyzer.Test\HandleObservableAnalyzerTest.cs,NgAfterLINQ,The following statement contains a magic number: var expected = new DiagnosticResult             {                 Id = UniRxAnalyzer.HandleObservableAnalyzer.DiagnosticId'                 Message = "This call does not handle IObservable<T>."'                 Severity = DiagnosticSeverity.Warning'                 Locations = new[]             {                     new DiagnosticResultLocation("Test0.cs"' 13' 9)                 }             };
Magic Number,UniRxAnalyzer.Test,HandleObservableAnalyzerTest,C:\research\architectureSmells\repos\neuecc_UniRx\Analyzer\UniRxAnalyzer\UniRxAnalyzer.Test\HandleObservableAnalyzerTest.cs,NgInlambda,The following statement contains a magic number: var expected = new DiagnosticResult             {                 Id = UniRxAnalyzer.HandleObservableAnalyzer.DiagnosticId'                 Message = "This call does not handle IObservable<T>."'                 Severity = DiagnosticSeverity.Warning'                 Locations = new[]                 {                     new DiagnosticResultLocation("Test0.cs"' 12' 13)                 }             };
Magic Number,UniRxAnalyzer.Test,HandleObservableAnalyzerTest,C:\research\architectureSmells\repos\neuecc_UniRx\Analyzer\UniRxAnalyzer\UniRxAnalyzer.Test\HandleObservableAnalyzerTest.cs,NgInlambda,The following statement contains a magic number: var expected = new DiagnosticResult             {                 Id = UniRxAnalyzer.HandleObservableAnalyzer.DiagnosticId'                 Message = "This call does not handle IObservable<T>."'                 Severity = DiagnosticSeverity.Warning'                 Locations = new[]                 {                     new DiagnosticResultLocation("Test0.cs"' 12' 13)                 }             };
