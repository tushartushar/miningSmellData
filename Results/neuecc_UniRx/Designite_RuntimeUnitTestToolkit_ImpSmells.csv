Implementation smell,Namespace,Class,File,Method,Description
Long Method,RuntimeUnitTestToolkit,UnitTestRunner,C:\research\architectureSmells\repos\neuecc_UniRx\Assets\RuntimeUnitTestToolkit\UnitTestRunner.cs,RunTestInCoroutine,The method has 110 lines of code.
Complex Method,RuntimeUnitTestToolkit,UnitTestRunner,C:\research\architectureSmells\repos\neuecc_UniRx\Assets\RuntimeUnitTestToolkit\UnitTestRunner.cs,GetTestTargetTypes,Cyclomatic complexity of the method is 9
Complex Method,RuntimeUnitTestToolkit,UnitTestRunner,C:\research\architectureSmells\repos\neuecc_UniRx\Assets\RuntimeUnitTestToolkit\UnitTestRunner.cs,RegisterAllMethods,Cyclomatic complexity of the method is 9
Complex Method,RuntimeUnitTestToolkit,UnitTestRunner,C:\research\architectureSmells\repos\neuecc_UniRx\Assets\RuntimeUnitTestToolkit\UnitTestRunner.cs,RunTestInCoroutine,Cyclomatic complexity of the method is 11
Long Parameter List,RuntimeUnitTestToolkit,UnitTestRunner,C:\research\architectureSmells\repos\neuecc_UniRx\Assets\RuntimeUnitTestToolkit\UnitTestRunner.cs,AddTest,The method has 5 parameters. Parameters: group' title' test' setups' teardowns
Long Parameter List,RuntimeUnitTestToolkit,UnitTestRunner,C:\research\architectureSmells\repos\neuecc_UniRx\Assets\RuntimeUnitTestToolkit\UnitTestRunner.cs,AddAsyncTest,The method has 5 parameters. Parameters: group' title' asyncTestCoroutine' setups' teardowns
Long Statement,RuntimeUnitTestToolkit,UnitTestRunner,C:\research\architectureSmells\repos\neuecc_UniRx\Assets\RuntimeUnitTestToolkit\UnitTestRunner.cs,RegisterAllMethods,The length of the statement  "                        UnityEngine.Debug.LogError(testType.Name + "." + item.Name + " failed to register setup/teardown method' exception: " + e.ToString());" is 134.
Long Statement,RuntimeUnitTestToolkit,UnitTestRunner,C:\research\architectureSmells\repos\neuecc_UniRx\Assets\RuntimeUnitTestToolkit\UnitTestRunner.cs,RegisterAllMethods,The length of the statement  "                                UnityEngine.Debug.Log(testType.Name + "." + item.Name + " currently does not supported in RuntumeUnitTestToolkit(multiple parameter or return type is invalid).");" is 162.
Long Statement,RuntimeUnitTestToolkit,UnitTestRunner,C:\research\architectureSmells\repos\neuecc_UniRx\Assets\RuntimeUnitTestToolkit\UnitTestRunner.cs,RegisterAllMethods,The length of the statement  "                                UnityEngine.Debug.Log(testType.Name + "." + item.Name + " currently does not supported in RuntumeUnitTestToolkit(multiple parameter or return type is invalid).");" is 162.
Long Statement,RuntimeUnitTestToolkit,UnitTestRunner,C:\research\architectureSmells\repos\neuecc_UniRx\Assets\RuntimeUnitTestToolkit\UnitTestRunner.cs,RunTestInCoroutine,The length of the statement  "                        var line = string.Join("\n"' exception.StackTrace.Split('\n').Where(x => x.Contains(actionList.Key) || x.Contains(item2.Key)).ToArray());" is 137.
Magic Number,RuntimeUnitTestToolkit,UnitTestRunner,C:\research\architectureSmells\repos\neuecc_UniRx\Assets\RuntimeUnitTestToolkit\UnitTestRunner.cs,Start,The following statement contains a magic number: clearButton.gameObject.GetComponent<Image>().color = new Color(170 / 255f' 170 / 255f' 170 / 255f' 1);
Magic Number,RuntimeUnitTestToolkit,UnitTestRunner,C:\research\architectureSmells\repos\neuecc_UniRx\Assets\RuntimeUnitTestToolkit\UnitTestRunner.cs,Start,The following statement contains a magic number: clearButton.gameObject.GetComponent<Image>().color = new Color(170 / 255f' 170 / 255f' 170 / 255f' 1);
Magic Number,RuntimeUnitTestToolkit,UnitTestRunner,C:\research\architectureSmells\repos\neuecc_UniRx\Assets\RuntimeUnitTestToolkit\UnitTestRunner.cs,Start,The following statement contains a magic number: clearButton.gameObject.GetComponent<Image>().color = new Color(170 / 255f' 170 / 255f' 170 / 255f' 1);
Magic Number,RuntimeUnitTestToolkit,UnitTestRunner,C:\research\architectureSmells\repos\neuecc_UniRx\Assets\RuntimeUnitTestToolkit\UnitTestRunner.cs,Start,The following statement contains a magic number: clearButton.gameObject.GetComponent<Image>().color = new Color(170 / 255f' 170 / 255f' 170 / 255f' 1);
Magic Number,RuntimeUnitTestToolkit,UnitTestRunner,C:\research\architectureSmells\repos\neuecc_UniRx\Assets\RuntimeUnitTestToolkit\UnitTestRunner.cs,Start,The following statement contains a magic number: clearButton.gameObject.GetComponent<Image>().color = new Color(170 / 255f' 170 / 255f' 170 / 255f' 1);
Magic Number,RuntimeUnitTestToolkit,UnitTestRunner,C:\research\architectureSmells\repos\neuecc_UniRx\Assets\RuntimeUnitTestToolkit\UnitTestRunner.cs,Start,The following statement contains a magic number: clearButton.gameObject.GetComponent<Image>().color = new Color(170 / 255f' 170 / 255f' 170 / 255f' 1);
Magic Number,RuntimeUnitTestToolkit,UnitTestRunner,C:\research\architectureSmells\repos\neuecc_UniRx\Assets\RuntimeUnitTestToolkit\UnitTestRunner.cs,Start,The following statement contains a magic number: executeAllButton.gameObject.GetComponent<Image>().color = new Color(250 / 255f' 150 / 255f' 150 / 255f' 1);
Magic Number,RuntimeUnitTestToolkit,UnitTestRunner,C:\research\architectureSmells\repos\neuecc_UniRx\Assets\RuntimeUnitTestToolkit\UnitTestRunner.cs,Start,The following statement contains a magic number: executeAllButton.gameObject.GetComponent<Image>().color = new Color(250 / 255f' 150 / 255f' 150 / 255f' 1);
Magic Number,RuntimeUnitTestToolkit,UnitTestRunner,C:\research\architectureSmells\repos\neuecc_UniRx\Assets\RuntimeUnitTestToolkit\UnitTestRunner.cs,Start,The following statement contains a magic number: executeAllButton.gameObject.GetComponent<Image>().color = new Color(250 / 255f' 150 / 255f' 150 / 255f' 1);
Magic Number,RuntimeUnitTestToolkit,UnitTestRunner,C:\research\architectureSmells\repos\neuecc_UniRx\Assets\RuntimeUnitTestToolkit\UnitTestRunner.cs,Start,The following statement contains a magic number: executeAllButton.gameObject.GetComponent<Image>().color = new Color(250 / 255f' 150 / 255f' 150 / 255f' 1);
Magic Number,RuntimeUnitTestToolkit,UnitTestRunner,C:\research\architectureSmells\repos\neuecc_UniRx\Assets\RuntimeUnitTestToolkit\UnitTestRunner.cs,Start,The following statement contains a magic number: executeAllButton.gameObject.GetComponent<Image>().color = new Color(250 / 255f' 150 / 255f' 150 / 255f' 1);
Magic Number,RuntimeUnitTestToolkit,UnitTestRunner,C:\research\architectureSmells\repos\neuecc_UniRx\Assets\RuntimeUnitTestToolkit\UnitTestRunner.cs,Start,The following statement contains a magic number: executeAllButton.gameObject.GetComponent<Image>().color = new Color(250 / 255f' 150 / 255f' 150 / 255f' 1);
Magic Number,RuntimeUnitTestToolkit,UnitTestRunner,C:\research\architectureSmells\repos\neuecc_UniRx\Assets\RuntimeUnitTestToolkit\UnitTestRunner.cs,Start,The following statement contains a magic number: clearButton.onClick.AddListener(() =>                 {                     logText.text = "";                     foreach (var btn in list.GetComponentsInChildren<Button>())                     {                         btn.interactable = true;                         btn.GetComponent<Image>().color = normalColor;                     }                     executeAllButton.gameObject.GetComponent<Image>().color = new Color(250 / 255f' 150 / 255f' 150 / 255f' 1);                 });
Magic Number,RuntimeUnitTestToolkit,UnitTestRunner,C:\research\architectureSmells\repos\neuecc_UniRx\Assets\RuntimeUnitTestToolkit\UnitTestRunner.cs,Start,The following statement contains a magic number: clearButton.onClick.AddListener(() =>                 {                     logText.text = "";                     foreach (var btn in list.GetComponentsInChildren<Button>())                     {                         btn.interactable = true;                         btn.GetComponent<Image>().color = normalColor;                     }                     executeAllButton.gameObject.GetComponent<Image>().color = new Color(250 / 255f' 150 / 255f' 150 / 255f' 1);                 });
Magic Number,RuntimeUnitTestToolkit,UnitTestRunner,C:\research\architectureSmells\repos\neuecc_UniRx\Assets\RuntimeUnitTestToolkit\UnitTestRunner.cs,Start,The following statement contains a magic number: clearButton.onClick.AddListener(() =>                 {                     logText.text = "";                     foreach (var btn in list.GetComponentsInChildren<Button>())                     {                         btn.interactable = true;                         btn.GetComponent<Image>().color = normalColor;                     }                     executeAllButton.gameObject.GetComponent<Image>().color = new Color(250 / 255f' 150 / 255f' 150 / 255f' 1);                 });
Magic Number,RuntimeUnitTestToolkit,UnitTestRunner,C:\research\architectureSmells\repos\neuecc_UniRx\Assets\RuntimeUnitTestToolkit\UnitTestRunner.cs,Start,The following statement contains a magic number: clearButton.onClick.AddListener(() =>                 {                     logText.text = "";                     foreach (var btn in list.GetComponentsInChildren<Button>())                     {                         btn.interactable = true;                         btn.GetComponent<Image>().color = normalColor;                     }                     executeAllButton.gameObject.GetComponent<Image>().color = new Color(250 / 255f' 150 / 255f' 150 / 255f' 1);                 });
Magic Number,RuntimeUnitTestToolkit,UnitTestRunner,C:\research\architectureSmells\repos\neuecc_UniRx\Assets\RuntimeUnitTestToolkit\UnitTestRunner.cs,Start,The following statement contains a magic number: clearButton.onClick.AddListener(() =>                 {                     logText.text = "";                     foreach (var btn in list.GetComponentsInChildren<Button>())                     {                         btn.interactable = true;                         btn.GetComponent<Image>().color = normalColor;                     }                     executeAllButton.gameObject.GetComponent<Image>().color = new Color(250 / 255f' 150 / 255f' 150 / 255f' 1);                 });
Magic Number,RuntimeUnitTestToolkit,UnitTestRunner,C:\research\architectureSmells\repos\neuecc_UniRx\Assets\RuntimeUnitTestToolkit\UnitTestRunner.cs,Start,The following statement contains a magic number: clearButton.onClick.AddListener(() =>                 {                     logText.text = "";                     foreach (var btn in list.GetComponentsInChildren<Button>())                     {                         btn.interactable = true;                         btn.GetComponent<Image>().color = normalColor;                     }                     executeAllButton.gameObject.GetComponent<Image>().color = new Color(250 / 255f' 150 / 255f' 150 / 255f' 1);                 });
