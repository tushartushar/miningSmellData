Implementation smell,Namespace,Class,File,Method,Description
Complex Method,FarNet.Works,EditorTools,C:\repos\nightroman_FarNet\FarNet\FarNet.Works.Editor\EditorTools.cs,EditText,Cyclomatic complexity of the method is 8
Long Statement,FarNet.Works,EditorTools,C:\repos\nightroman_FarNet\FarNet\FarNet.Works.Editor\EditorTools.cs,ShowEditorsMenu,The length of the statement  "				var name = string.Format(null' MenuItemFormat' (index < MenuHotkeys.Length ? MenuHotkeys.Substring(index' 1) : " ")' it.Title); " is 127.
Long Statement,FarNet.Works,EditorTools,C:\repos\nightroman_FarNet\FarNet\FarNet.Works.Editor\EditorTools.cs,ShowViewersMenu,The length of the statement  "				var name = string.Format(null' MenuItemFormat' (index < MenuHotkeys.Length ? MenuHotkeys.Substring(index' 1) : " ")' it.FileName); " is 130.
Magic Number,FarNet.Works,EditorTools,C:\repos\nightroman_FarNet\FarNet\FarNet.Works.Editor\EditorTools.cs,EditText,The following statement contains a magic number: try  			{  				if (!string.IsNullOrEmpty(args.Text))  					File.WriteAllText(file' args.Text' Encoding.Unicode);    				var editor = Far.Api.CreateEditor();  				editor.FileName = file;  				editor.CodePage = 1200;  				editor.DisableHistory = true;  				if (!string.IsNullOrEmpty(args.Title))  					editor.Title = args.Title;  				if (args.IsLocked)  					editor.IsLocked = true;  				  				editor.Open(OpenMode.Modal);  				if (args.IsLocked)  					return null;    				if (File.Exists(file))  				{  					// read and return  					return File.ReadAllText(file' Encoding.Unicode);  				}  				else  				{  					// no file' e.g. the text was empty and user exits without saving; case 080502  					return string.Empty;  				}  			}  			finally  			{  				try  				{  					File.Delete(file);  				}  				catch (IOException e)  				{  					Log.TraceException(e);  				}  			}
