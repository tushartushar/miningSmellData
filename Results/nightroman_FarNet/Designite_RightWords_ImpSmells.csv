Implementation smell,Namespace,Class,File,Method,Description
Long Method,FarNet.RightWords,Actor,C:\repos\nightroman_FarNet\RightWords\Actor.cs,CorrectText,The method has 117 lines of code.
Complex Method,FarNet.RightWords,Actor,C:\repos\nightroman_FarNet\RightWords\Actor.cs,CorrectWord,Cyclomatic complexity of the method is 8
Complex Method,FarNet.RightWords,Actor,C:\repos\nightroman_FarNet\RightWords\Actor.cs,CorrectText,Cyclomatic complexity of the method is 16
Complex Method,FarNet.RightWords,Actor,C:\repos\nightroman_FarNet\RightWords\Actor.cs,AddRightWord,Cyclomatic complexity of the method is 14
Complex Method,FarNet.RightWords,Highlighter,C:\repos\nightroman_FarNet\RightWords\Highlighter.cs,Invoke,Cyclomatic complexity of the method is 8
Long Statement,FarNet.RightWords,Actor,C:\repos\nightroman_FarNet\RightWords\Actor.cs,Initialize,The length of the statement  "						var language = new DictionaryInfo() { HunspellAffFile = aff' HunspellDictFile = dic' Language = Path.GetFileName(dir) }; " is 120.
Long Statement,FarNet.RightWords,Actor,C:\repos\nightroman_FarNet\RightWords\Actor.cs,CorrectWord,The length of the statement  "			var match = MatchCaret(new Regex(Settings.Default.WordPattern' RegexOptions.IgnorePatternWhitespace)' line.Text' line.Caret' false); " is 132.
Long Statement,FarNet.RightWords,Actor,C:\repos\nightroman_FarNet\RightWords\Actor.cs,ShowThesaurus,The length of the statement  "				var match = MatchCaret(new Regex(Settings.Default.WordPattern' RegexOptions.IgnorePatternWhitespace)' line.Text' line.Caret' false); " is 132.
Magic Number,FarNet.RightWords,Actor,C:\repos\nightroman_FarNet\RightWords\Actor.cs,CorrectText,The following statement contains a magic number: try  			{  				// loop through words and lines  				int iLine = iLine1;  				for (; ; )  				{  				NextWord:    					// the line and its text now  					var line = editor[iLine];  					var text = line.Text;    					// the first word  					Match match = MatchCaret(regexWord' text' line.Caret' true);  					if (match == null)  						goto NextLine;    					// loop through line words (matches) with no changes  					MatchCollection skip = null;  					for (; match.Success; match = match.NextMatch())  					{  						// the target word  						var word = MatchToWord(match);    						// check cheap skip lists  						if (rightWords.Contains(word) || IgnoreWords.Contains(word))  							continue;    						// check spelling' expensive but better before the skip pattern  						if (spell.Spell(word))  							continue;    						// expensive skip pattern  						if (Actor.HasMatch(skip ?? (skip = Actor.GetMatches(regexSkip' text))' match))  							continue;    						// check spelling and get suggestions  						List<string> words = spell.Suggest(word);    						// next match on success or no suggestions  						if (words.Count == 0)  							continue;    						// new caret and selection is at the word end  						int column = match.Index + match.Length;    						// 1) select the word' !! set the caret now  						line.SelectText(match.Index' column);  						line.Caret = column;    						// 2) reframe vertically (!! horisontal is sloppy)' !! keep the caret  						var frame = editor.Frame;  						frame.VisibleLine = frame.CaretLine - Far.Api.UI.WindowSize.Y / 3;  						editor.Frame = frame;    						// commit  						editor.Redraw();    						// menu  						var point = editor.ConvertPointEditorToScreen(new Point(column' iLine));  						var menu = new UIWordMenu(words' word' point.X' point.Y + 1);    						// cancel:  						if (!menu.Show())  							return;    						// ignore:  						if (menu.IsIgnore)  							continue;    						// ignore all:  						if (menu.IsIgnoreAll)  						{  							IgnoreWords.Add(word);  							continue;  						}    						// add to dictionary:  						if (menu.IsAddToDictionary)  						{  							AddRightWord(rightWords' word);  							continue;  						}    						// replace editor selection with correction  						var correction = menu.Word;  						line.SelectedText = correction;  						line.UnselectText();    						// advance in the same line  						int caret = match.Index + correction.Length + 1;  						if (caret < line.Text.Length)  						{  							line.Caret = caret;  							goto NextWord;  						}    						// next line  						break;  					}    				NextLine:    					++iLine;  					if (iLine > iLine2)  						break;    					editor.GoTo(0' iLine);  				}  			}  			finally  			{  				editor.UnselectText();  			}
Magic Number,FarNet.RightWords,Actor,C:\repos\nightroman_FarNet\RightWords\Actor.cs,MatchToWord,The following statement contains a magic number: if (match.Groups.Count < 2)  				return match.Value;
Magic Number,FarNet.RightWords,MultiSpell,C:\repos\nightroman_FarNet\RightWords\MultiSpell.cs,MultiSpell,The following statement contains a magic number: foreach (var dic in dictionaries)  			{  				var spell = new Hunspell(dic.HunspellAffFile' dic.HunspellDictFile);  				_spells.Add(spell);    				var userWordsPath = Actor.GetUserDictionaryPath(dic.Language' false);  				if (File.Exists(userWordsPath))  				{  					using (var reader = File.OpenText(userWordsPath))  					{  						string line;  						while((line = reader.ReadLine()) != null)  						{  							var words = line.Split(' ');  							if (words.Length == 1)  								spell.Add(words[0]);  							else if (words.Length == 2)  								spell.AddWithAffix(words[0]' words[1]);  						}  					}  				}  			}
Magic Number,FarNet.RightWords,UIWordDialog,C:\repos\nightroman_FarNet\RightWords\UIWordDialog.cs,UIWordDialog,The following statement contains a magic number: const int h = 6;
Magic Number,FarNet.RightWords,UIWordDialog,C:\repos\nightroman_FarNet\RightWords\UIWordDialog.cs,UIWordDialog,The following statement contains a magic number: const int x = 20;
Magic Number,FarNet.RightWords,UIWordDialog,C:\repos\nightroman_FarNet\RightWords\UIWordDialog.cs,UIWordDialog,The following statement contains a magic number: _Dialog = Far.Api.CreateDialog(-1' -1' 77' h);
Magic Number,FarNet.RightWords,UIWordDialog,C:\repos\nightroman_FarNet\RightWords\UIWordDialog.cs,UIWordDialog,The following statement contains a magic number: _Dialog.AddBox(3' 1' 0' 0' My.AddToDictionary);
Magic Number,FarNet.RightWords,UIWordDialog,C:\repos\nightroman_FarNet\RightWords\UIWordDialog.cs,UIWordDialog,The following statement contains a magic number: _Dialog.AddText(5' ++y' 0' My.NewWord);
Magic Number,FarNet.RightWords,UIWordDialog,C:\repos\nightroman_FarNet\RightWords\UIWordDialog.cs,UIWordDialog,The following statement contains a magic number: _Stem1 = _Dialog.AddEdit(x' y' 71' stem1);
Magic Number,FarNet.RightWords,UIWordDialog,C:\repos\nightroman_FarNet\RightWords\UIWordDialog.cs,UIWordDialog,The following statement contains a magic number: _Dialog.AddText(5' ++y' 0' My.ExampleStem);
Magic Number,FarNet.RightWords,UIWordDialog,C:\repos\nightroman_FarNet\RightWords\UIWordDialog.cs,UIWordDialog,The following statement contains a magic number: _Stem2 = _Dialog.AddEdit(x' y' 71' stem2);
