Implementation smell,Namespace,Class,File,Method,Description
Long Method,FarNet.Vessel,VesselTool,C:\repos\nightroman_FarNet\Vessel\VesselTool.cs,ShowHistory,The method has 118 lines of code.
Complex Method,FarNet.Vessel,Actor,C:\repos\nightroman_FarNet\Vessel\Actor.cs,Update,Cyclomatic complexity of the method is 12
Complex Method,FarNet.Vessel,InfoComparer,C:\repos\nightroman_FarNet\Vessel\InfoComparer.cs,Compare,Cyclomatic complexity of the method is 12
Complex Method,FarNet.Vessel,VesselTool,C:\repos\nightroman_FarNet\Vessel\VesselTool.cs,ShowHistory,Cyclomatic complexity of the method is 13
Complex Conditional,FarNet.Vessel,Actor,C:\repos\nightroman_FarNet\Vessel\Actor.cs,TrainFastEpoch,The conditional expression  "i < x1 || i > x2 || j < y1 || j > y2"  is complex.
Magic Number,FarNet.Vessel,Actor,C:\repos\nightroman_FarNet\Vessel\Actor.cs,CollectFileInfo,The following statement contains a magic number: for (int iRecord = start; iRecord < _records.Count; ++iRecord)  			{  				// skip data from the future  				var record = _records[iRecord];  				if (record.Time > now)  					continue;    				// skip alien  				if (!record.Path.Equals(info.Path' StringComparison.OrdinalIgnoreCase))  					continue;    				// count cases' init if not yet  				if (++info.UseCount == 1)  				{  					info.Head = record.Time;  					info.Tail = record.Time;  					info.Idle = now - record.Time;  					info.DayCount = 1;  					continue;  				}    				// different days  				if (info.Head.Date != record.Time.Date)  				{  					++info.DayCount;    					// Why 2 is the best for all records so far' 3..4 are so so' and 5 is bad?  					// NB  					// Factor 4 gives values 0..4 (max is used); factors 5..6 still give 0..4 (max is not used).  					// Should we just use 4 or should we dig the max factor value M which gives values 0..M?  					// NB  					// With 2 and Idle > X Activity is rare/never actually equal to 2.  					if ((now - record.Time).TotalDays < 2)  						++info.Activity;  				}    				// now save the record time  				info.Head = record.Time;  			}
Magic Number,FarNet.Vessel,Actor,C:\repos\nightroman_FarNet\Vessel\Actor.cs,TrainFull,The following statement contains a magic number: for (int i = 0; i <= limit1; i += 2)  				for (int j = i / 24; j <= limit2; j += 2)  					_TrainingResults.Add(new Result() { Factor1 = i' Factor2 = j });
Magic Number,FarNet.Vessel,Actor,C:\repos\nightroman_FarNet\Vessel\Actor.cs,TrainFull,The following statement contains a magic number: for (int i = 0; i <= limit1; i += 2)  				for (int j = i / 24; j <= limit2; j += 2)  					_TrainingResults.Add(new Result() { Factor1 = i' Factor2 = j });
Magic Number,FarNet.Vessel,Actor,C:\repos\nightroman_FarNet\Vessel\Actor.cs,TrainFull,The following statement contains a magic number: for (int i = 0; i <= limit1; i += 2)  				for (int j = i / 24; j <= limit2; j += 2)  					_TrainingResults.Add(new Result() { Factor1 = i' Factor2 = j });
Magic Number,FarNet.Vessel,Actor,C:\repos\nightroman_FarNet\Vessel\Actor.cs,Update,The following statement contains a magic number: if (maxDays < 30)  				throw new InvalidOperationException("Use at least 30 as the maximum day count.");
Magic Number,FarNet.Vessel,Actor,C:\repos\nightroman_FarNet\Vessel\Actor.cs,Update,The following statement contains a magic number: if (maxFiles < 100)  				throw new InvalidOperationException("Use at least 100 as the maximum file count.");
Magic Number,FarNet.Vessel,Actor,C:\repos\nightroman_FarNet\Vessel\Actor.cs,Update,The following statement contains a magic number: if (days.Length > maxDays)  			{  				var zero = days[maxDays - 1];  				Logger.Source.TraceInformation("Zero: {0}"' zero);    				foreach (var info in infos)  				{  					// skip single or positive  					if (info.UseCount < 2 || info.Head >= zero)  						continue;    					// remove all aged records but the tail  					int removed = _records.RemoveAll(x =>  						x.Time < zero && x.Time != info.Tail && x.Path.Equals(info.Path' StringComparison.OrdinalIgnoreCase));    					Logger.Source.TraceInformation("Aged records: {0}: {1}"' removed' info.Path);  					oldRecords += removed;  				}    				// set negative records to zero  				foreach (var record in _records)  				{  					if (record.Time < zero)  					{  						++agedFiles;  						if (record.What != Record.AGED)  						{  							record.SetAged();  							Logger.Source.TraceInformation("Aged file: {0}"' record.Path);  						}  					}  				}  			}
Magic Number,FarNet.Vessel,Record,C:\repos\nightroman_FarNet\Vessel\Record.cs,Read,The following statement contains a magic number: using (StreamReader reader = new StreamReader(store' Encoding.UTF8))  			{  				string line;  				int index = -1;  				var sep = new char[] { '\t' };  				var trim = new char[] { '"'' ' ' };  				while (null != (line = reader.ReadLine()))  				{  					// skip header  					if (++index == 0)  						continue;    					var values = line.Split(sep);  					yield return new Record(  						DateTime.Parse(values[0].Trim(trim))'  						values[2].Trim(trim)'  						values[3].Trim(trim));  				}  			}
Magic Number,FarNet.Vessel,Record,C:\repos\nightroman_FarNet\Vessel\Record.cs,Read,The following statement contains a magic number: using (StreamReader reader = new StreamReader(store' Encoding.UTF8))  			{  				string line;  				int index = -1;  				var sep = new char[] { '\t' };  				var trim = new char[] { '"'' ' ' };  				while (null != (line = reader.ReadLine()))  				{  					// skip header  					if (++index == 0)  						continue;    					var values = line.Split(sep);  					yield return new Record(  						DateTime.Parse(values[0].Trim(trim))'  						values[2].Trim(trim)'  						values[3].Trim(trim));  				}  			}
Magic Number,FarNet.Vessel,Info,C:\repos\nightroman_FarNet\Vessel\Info.cs,Group,The following statement contains a magic number: if (Idle.TotalDays < factor2)  				return 2;
Magic Number,FarNet.Vessel,Info,C:\repos\nightroman_FarNet\Vessel\Info.cs,Group,The following statement contains a magic number: return 3;
Magic Number,FarNet.Vessel,InfoComparer,C:\repos\nightroman_FarNet\Vessel\InfoComparer.cs,Compare,The following statement contains a magic number: {  				int x = Mat.Span(left.KeyCount' 2);  				int y = Mat.Span(right.KeyCount' 2);  				if (x > y)  					return -1;  				if (x < y)  					return 1;  			}
Magic Number,FarNet.Vessel,InfoComparer,C:\repos\nightroman_FarNet\Vessel\InfoComparer.cs,Compare,The following statement contains a magic number: {  				int x = Mat.Span(left.KeyCount' 2);  				int y = Mat.Span(right.KeyCount' 2);  				if (x > y)  					return -1;  				if (x < y)  					return 1;  			}
Missing Default,FarNet.Vessel,VesselTool,C:\repos\nightroman_FarNet\Vessel\VesselTool.cs,Invoke,The following switch statement is missing a default case: switch (TrainingStatus)  			{  				case TrainingState.None:  					menu.Add("&3. Background training").Click += delegate { TrainFull(); };  					break;  				case TrainingState.Started:  					menu.Add("Training: record " + TrainingRecordIndex + "/" + TrainingRecordCount).Disabled = true;  					break;  				case TrainingState.Completed:  					menu.Add("&3. Training results").Click += delegate { ShowResults(); };  					break;  			}
