Implementation smell,Namespace,Class,File,Method,Description
Long Method,PowerShellFar,EditorKit,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\EditorKit.cs,ExpandCode,The method has 130 lines of code.
Long Method,PowerShellFar,Help,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Help.cs,ShowHelpForContext,The method has 107 lines of code.
Long Method,PowerShellFar,Stepper,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Stepper.cs,MoveNext,The method has 132 lines of code.
Long Method,PowerShellFar,Actor,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Actor.cs,SyncPaths,The method has 121 lines of code.
Long Method,PowerShellFar,DataPanel,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Panels\DataPanel.cs,Open,The method has 131 lines of code.
Complex Method,PowerShellFar,EditorKit,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\EditorKit.cs,ExpandCode,Cyclomatic complexity of the method is 21
Complex Method,PowerShellFar,EditorKit,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\EditorKit.cs,ExpandText,Cyclomatic complexity of the method is 10
Complex Method,PowerShellFar,EditorKit,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\EditorKit.cs,InvokeSelectedCode,Cyclomatic complexity of the method is 9
Complex Method,PowerShellFar,Format,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Format.cs,TryFormatByTableControl,Cyclomatic complexity of the method is 10
Complex Method,PowerShellFar,Format,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Format.cs,SetBestType,Cyclomatic complexity of the method is 14
Complex Method,PowerShellFar,Format,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Format.cs,BuildFilesMixed,Cyclomatic complexity of the method is 8
Complex Method,PowerShellFar,Format,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Format.cs,MakeMap,Cyclomatic complexity of the method is 17
Complex Method,PowerShellFar,Format,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Format.cs,SetupMetas,Cyclomatic complexity of the method is 14
Complex Method,PowerShellFar,Help,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Help.cs,ShowHelpForContext,Cyclomatic complexity of the method is 15
Complex Method,PowerShellFar,NativeMethods,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\NativeMethods.cs,PromptForCredential,Cyclomatic complexity of the method is 10
Complex Method,PowerShellFar,AnyPanel,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Panels\AnyPanelSet.cs,HelpMenuCreate,Cyclomatic complexity of the method is 15
Complex Method,PowerShellFar,AnyPanel,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Panels\AnyPanelSet.cs,UIKeyPressed,Cyclomatic complexity of the method is 22
Complex Method,PowerShellFar,A,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\A.cs,FindTableControl,Cyclomatic complexity of the method is 14
Complex Method,PowerShellFar,Converter,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Converter.cs,InfoToLine,Cyclomatic complexity of the method is 20
Complex Method,PowerShellFar,Converter,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Converter.cs,Parse,Cyclomatic complexity of the method is 25
Complex Method,PowerShellFar,FormatExplorer,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Panels\FormatExplorer.cs,DoGetFiles,Cyclomatic complexity of the method is 16
Complex Method,PowerShellFar,History,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\History.cs,ShowHistory,Cyclomatic complexity of the method is 8
Complex Method,PowerShellFar,ItemExplorer,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Panels\ItemExplorer.cs,DoAcceptFiles,Cyclomatic complexity of the method is 9
Complex Method,PowerShellFar,ItemExplorer,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Panels\ItemExplorer.cs,DoExploreParent,Cyclomatic complexity of the method is 10
Complex Method,PowerShellFar,MemberExplorer,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Panels\MemberExplorer.cs,GetFiles,Cyclomatic complexity of the method is 14
Complex Method,PowerShellFar,MemberExplorer,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Panels\MemberExplorer.cs,DeleteFiles,Cyclomatic complexity of the method is 8
Complex Method,PowerShellFar,ItemPanel,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Panels\ItemPanel.cs,HelpMenuInitItems,Cyclomatic complexity of the method is 9
Complex Method,PowerShellFar,Meta,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Meta.cs,Meta,Cyclomatic complexity of the method is 14
Complex Method,PowerShellFar,ObjectExplorer,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Panels\ObjectExplorer.cs,GetData,Cyclomatic complexity of the method is 11
Complex Method,PowerShellFar,ObjectExplorer,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Panels\ObjectExplorer.cs,DoOpenFile,Cyclomatic complexity of the method is 11
Complex Method,PowerShellFar,ObjectExplorer,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Panels\ObjectExplorer.cs,AddObjects,Cyclomatic complexity of the method is 8
Complex Method,PowerShellFar,PropertyExplorer,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Panels\PropertyExplorer.cs,DeleteFiles,Cyclomatic complexity of the method is 10
Complex Method,PowerShellFar,Stepper,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Stepper.cs,MoveNext,Cyclomatic complexity of the method is 14
Complex Method,PowerShellFar,Actor,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Actor.cs,SyncPaths,Cyclomatic complexity of the method is 10
Complex Method,PowerShellFar,Job,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Job.cs,ShowJobs,Cyclomatic complexity of the method is 18
Complex Method,PowerShellFar,Job,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Job.cs,WatchJobs,Cyclomatic complexity of the method is 11
Complex Method,PowerShellFar,Job,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Job.cs,StopJobsOnExit,Cyclomatic complexity of the method is 9
Complex Method,PowerShellFar,FarUI,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\FarUI.cs,Prompt,Cyclomatic complexity of the method is 10
Complex Method,PowerShellFar,DataPanel,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Panels\DataPanel.cs,Open,Cyclomatic complexity of the method is 28
Complex Method,PowerShellFar,DataPanel,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Panels\DataPanel.cs,Explore,Cyclomatic complexity of the method is 8
Complex Method,PowerShellFar,TreePanel,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Panels\TreePanel.cs,UIKeyPressed,Cyclomatic complexity of the method is 12
Complex Method,PowerShellFar.Commands,AssertFarCommand,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Commands\AssertFarCommand.cs,BeginProcessing,Cyclomatic complexity of the method is 18
Complex Method,PowerShellFar.Commands,AssertFarCommand,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Commands\AssertFarCommand.cs,Fail,Cyclomatic complexity of the method is 13
Complex Method,PowerShellFar.Commands,BasePanelCmdlet,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Commands\BasePanelCmdlet.cs,ApplyParameters,Cyclomatic complexity of the method is 9
Complex Method,PowerShellFar.Commands,GetFarItemCommand,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Commands\GetFarItemCommand.cs,BeginProcessing,Cyclomatic complexity of the method is 10
Complex Method,PowerShellFar.Commands,NewFarListCommand,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Commands\NewFarListCommand.cs,Create,Cyclomatic complexity of the method is 8
Complex Method,PowerShellFar.Commands,ShowFarMessageCommand,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Commands\ShowFarMessageCommand.cs,BeginProcessing,Cyclomatic complexity of the method is 12
Complex Method,PowerShellFar.UI,DebuggerDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\DebuggerDialog.cs,DebuggerDialog,Cyclomatic complexity of the method is 11
Complex Method,PowerShellFar.UI,DebuggerDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\DebuggerDialog.cs,Show,Cyclomatic complexity of the method is 11
Complex Method,PowerShellFar.UI,DebuggerMenu,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\DebuggerMenu.cs,OnLineBreakpoint,Cyclomatic complexity of the method is 13
Complex Method,PowerShellFar.UI,ErrorsMenu,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\ErrorsMenu.cs,Show,Cyclomatic complexity of the method is 12
Complex Method,PowerShellFar.UI,ExportDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\ExportDialog.cs,ExportClixml,Cyclomatic complexity of the method is 10
Complex Method,PowerShellFar.UI,InputBoxEx,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\InputBoxEx.cs,CompleteText,Cyclomatic complexity of the method is 8
Long Parameter List,PowerShellFar,NativeMethods,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\NativeMethods.cs,CredUIPromptForCredentials,The method has 10 parameters. Parameters: pUiInfo' pszTargetName' Reserved' dwAuthError' pszUserName' ulUserNameMaxChars' pszPassword' ulPasswordMaxChars' pfSave' dwFlags
Long Parameter List,PowerShellFar,NativeMethods,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\NativeMethods.cs,PromptForCredential,The method has 6 parameters. Parameters: caption' message' userName' targetName' allowedCredentialTypes' options
Long Parameter List,PowerShellFar,Job,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Job.cs,Job,The method has 5 parameters. Parameters: command' parameters' name' ui' keepSeconds
Long Parameter List,PowerShellFar,UniformUI,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UniformUI.cs,PromptForCredential,The method has 6 parameters. Parameters: caption' message' userName' targetName' allowedCredentialTypes' options
Long Parameter List,PowerShellFar.UI,InputBoxEx,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\InputBoxEx.cs,CompleteText,The method has 5 parameters. Parameters: editLine' tail' line' lastWord' words
Long Identifier,PowerShellFar,FarUI,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\FarUI.cs,,The length of the parameter TextDefaultChoiceForMultipleChoices is 35.
Long Identifier,PowerShellFar,FarUI,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\FarUI.cs,,The length of the parameter TextDefaultChoicesForMultipleChoices is 36.
Long Identifier,PowerShellFar,Zoo,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Utility.cs,,The length of the parameter TextTranscriptFileExistsNoClobber is 33.
Long Statement,PowerShellFar,Interactive,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Interactive.cs,OpenRemoteSession,The length of the statement  "			string computerName = (dialog.ComputerName.Length == 0 || dialog.ComputerName == ".") ? "localhost" : dialog.ComputerName; " is 122.
Long Statement,PowerShellFar,Interactive,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Interactive.cs,OpenRemoteSession,The length of the statement  "				credential = NativeMethods.PromptForCredential(null' null' dialog.UserName' string.Empty' PSCredentialTypes.Generic | PSCredentialTypes.Domain' PSCredentialUIOptions.Default); " is 175.
Long Statement,PowerShellFar,EditorKit,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\EditorKit.cs,ExpandCode,The length of the statement  "			if (A.Psf.PSVersion.Major > 2 && editLine.WindowKind == WindowKind.Editor && My.PathEx.IsPSFile((editor = Far.Api.Editor).FileName)) " is 132.
Long Statement,PowerShellFar,EditorKit,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\EditorKit.cs,ExpandCode,The length of the statement  "					result = (Hashtable)ps.AddScript(_callTabExpansion' true).AddArgument(inputScript).AddArgument(cursorColumn).Invoke()[0].BaseObject; " is 132.
Long Statement,PowerShellFar,EditorKit,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\EditorKit.cs,ExpandCode,The length of the statement  "					var matchVar = Regex.Match(lastWord' @"^(.*[!;\(\{\|""'']*)\$(global:|script:|private:)?(\w*)$"' RegexOptions.IgnoreCase); " is 122.
Long Statement,PowerShellFar,EditorKit,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\EditorKit.cs,ExpandCode,The length of the statement  "						var re = new Regex(@"\$(global:|script:|private:)?(" + scope + matchVar.Groups[3].Value + @"\w+:?)"' RegexOptions.IgnoreCase); " is 126.
Long Statement,PowerShellFar,EditorKit,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\EditorKit.cs,OnChangedPSFile,The length of the statement  "				bps = A.Psf.Breakpoints.Where(x => x.Line >= line && x.Script.Equals(script' StringComparison.OrdinalIgnoreCase)).ToArray(); " is 124.
Long Statement,PowerShellFar,EditorKit,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\EditorKit.cs,OnChangedPSFile,The length of the statement  "				var bp = A.Psf.Breakpoints.FirstOrDefault(x => x.Line == line && x.Script.Equals(script' StringComparison.OrdinalIgnoreCase)); " is 126.
Long Statement,PowerShellFar,EditorKit,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\EditorKit.cs,OnChangedPSFile,The length of the statement  "				bps = A.Psf.Breakpoints.Where(x => x.Line > line && x.Script.Equals(script' StringComparison.OrdinalIgnoreCase)).ToArray(); " is 123.
Long Statement,PowerShellFar,Format,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Format.cs,SetBestTypes,The length of the statement  "			if (count > 1 && SetBestType(metas' maximum' "N"' Word.Name' "*" + Word.Name' Word.Id' Word.Id2' Word.Key' "*" + Word.Key' "*" + Word.Id)) " is 138.
Long Statement,PowerShellFar,NativeMethods,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\NativeMethods.cs,PromptForCredential,The length of the statement  "			cREDUI_INFO.hwndParent = Far.Api.UI.MainWindowHandle; //! works for conemu' too' but the effect is as if we use IntPtr.Zero " is 123.
Long Statement,PowerShellFar,NativeMethods,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\NativeMethods.cs,PromptForCredential,The length of the statement  "				credUIReturnCodes = CredUIPromptForCredentials(ref cREDUI_INFO' targetName' IntPtr.Zero' 0' stringBuilder' 513' stringBuilder2' 256' ref num' cREDUI_FLAGS); " is 156.
Long Statement,PowerShellFar,A,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\A.cs,WriteException,The length of the statement  "			if (asRuntimeException != null && asRuntimeException.ErrorRecord != null && asRuntimeException.ErrorRecord.InvocationInfo != null) " is 130.
Long Statement,PowerShellFar,FolderExplorer,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Panels\FolderExplorer.cs,ExploreParent,The length of the statement  "			string newLocation = My.PathEx.GetDirectoryName(Location); //???? GetDirectoryName to add '\' for the root like IO.Path does " is 124.
Long Statement,PowerShellFar,FormatExplorer,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Panels\FormatExplorer.cs,DoGetFiles,The length of the statement  "					metas = Format.TryFormatByTableControl(values[0]' panel == null ? 80 : panel.Window.Width); //???? avoid formatting at all " is 122.
Long Statement,PowerShellFar,History,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\History.cs,ShowHistory,The length of the statement  "			var ui = new UI.InputDialog() { Title = Res.Me' History = Res.History' Prompt = new string[] { Res.InvokeCommands }' Text = code }; " is 131.
Long Statement,PowerShellFar,MemberExplorer,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Panels\MemberExplorer.cs,DeleteFiles,The length of the statement  "				if (Far.Api.Message("Delete selected members"' Res.Delete' MessageOptions.None' new string[] { Res.Delete' Res.Cancel }) != 0) " is 126.
Long Statement,PowerShellFar,ItemPanel,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Panels\ItemPanel.cs,UIAttributes,The length of the statement  "			(new PropertyExplorer(file == null ? Explorer.Location : My.PathEx.Combine(Explorer.Location' file.Name))).OpenPanelChild(this); " is 128.
Long Statement,PowerShellFar,ObjectExplorer,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Panels\ObjectExplorer.cs,DoDeleteFiles,The length of the statement  "				if (Far.Api.Message("Remove object(s)?"' Res.Remove' MessageOptions.None' new string[] { Res.Remove' Res.Cancel }) != 0) " is 120.
Long Statement,PowerShellFar,PropertyExplorer,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Panels\PropertyExplorer.cs,GetContent,The length of the statement  "					args.UseText = A.InvokeCode("$args[0] | Out-String -Width $args[1] -ErrorAction Stop"' pi.Value' int.MaxValue)[0].ToString(); " is 125.
Long Statement,PowerShellFar,RawUI,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\RawUI.cs,ToBufferCell,The length of the statement  "			return new FN.BufferCell(cell.Character' cell.ForegroundColor' cell.BackgroundColor' (FN.BufferCellType)cell.BufferCellType); " is 125.
Long Statement,PowerShellFar,RawUI,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\RawUI.cs,ToBufferCell,The length of the statement  "			return new PS.BufferCell(cell.Character' cell.ForegroundColor' cell.BackgroundColor' (PS.BufferCellType)cell.BufferCellType); " is 125.
Long Statement,PowerShellFar,Actor,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Actor.cs,OpenRunspace,The length of the statement  "			//state.ApartmentState = Environment.GetEnvironmentVariable("PSF.ApartmentState") == "MTA" ? ApartmentState.MTA : ApartmentState.STA; " is 133.
Long Statement,PowerShellFar,Actor,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Actor.cs,OnRunspaceStateEvent,The length of the statement  "				// Get engine once to avoid this: "A pipeline is already executing. Concurrent SessionStateProxy method call is not allowed." " is 125.
Long Statement,PowerShellFar,Actor,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Actor.cs,SyncPaths,The length of the statement  "					switch (Far.Api.Message(message' Res.Me' MessageOptions.GuiOnMacro | MessageOptions.AbortRetryIgnore | MessageOptions.Warning | MessageOptions.LeftAligned)) " is 156.
Long Statement,PowerShellFar,Actor,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Actor.cs,SyncPaths,The length of the statement  "					switch (Far.Api.Message(message' Res.Me' MessageOptions.GuiOnMacro | MessageOptions.AbortRetryIgnore | MessageOptions.Warning | MessageOptions.LeftAligned)) " is 156.
Long Statement,PowerShellFar,Actor,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Actor.cs,InputCode,The length of the statement  "			var ui = new UI.InputDialog() { Title = Res.Me' History = Res.History' UseLastHistory = true' Prompt = new string[] { Res.InvokeCommands } }; " is 141.
Long Statement,PowerShellFar,Job,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Job.cs,WatchJobs,The length of the statement  "					if (job.IsSucceeded && (job.KeepSeconds <= 0 || job.KeepStopwatch != null && job.KeepStopwatch.Elapsed.TotalSeconds > job.KeepSeconds)) " is 135.
Long Statement,PowerShellFar,Job,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Job.cs,WatchJobs,The length of the statement  "				Far.Api.UI.SetProgressState(JobLastNotified.IsSucceeded ? TaskbarProgressBarState.Normal : TaskbarProgressBarState.Error); " is 122.
Long Statement,PowerShellFar,DataPanel,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Panels\DataPanel.cs,DoDeleteFiles,The length of the statement  "				if (0 != Far.Api.Message("Delete selected record(s)?"' Res.Delete' MessageOptions.None' new string[] { Res.Delete' Res.Cancel })) " is 129.
Long Statement,PowerShellFar,DataPanel,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Panels\DataPanel.cs,OnFilter,The length of the statement  """'"and"'"avg"'"between"'"child"'"convert"'"count"'"false"'"iif"'"in"'"is"'"isnull"'"len"'"like"'"max"'"min"'"not"'"null"'"or"'"parent"'"stdev"'"substring"'"sum"'"trim"'"true"'"var"' " is 182.
Long Statement,PowerShellFar.Commands,GetFarItemCommand,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Commands\GetFarItemCommand.cs,BeginProcessing,The length of the statement  "				WriteObject(InvokeCommand.NewScriptBlock("Get-Item -LiteralPath $args[0] -Force -ErrorAction 0").Invoke(GetCurrentPath(panel' panel))' true); " is 141.
Long Statement,PowerShellFar.UI,ActorMenu,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\ActorMenu.cs,Create,The length of the statement  "			AddTool(Res.MenuInvokeSelected' delegate { A.Psf.InvokeSelectedCode(); }' ModuleToolOptions.Editor | ModuleToolOptions.Panels | ModuleToolOptions.Dialog); " is 154.
Long Statement,PowerShellFar.UI,ActorMenu,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\ActorMenu.cs,Create,The length of the statement  "			AddTool(Res.MenuTabExpansion' delegate { A.Psf.ExpandCode(null); }' ModuleToolOptions.Editor | ModuleToolOptions.Panels | ModuleToolOptions.Dialog); " is 148.
Long Statement,PowerShellFar.UI,ErrorsMenu,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\ErrorsMenu.cs,Show,The length of the statement  "					if (asRecord.InvocationInfo != null && !string.IsNullOrEmpty(asRecord.InvocationInfo.ScriptName) && File.Exists(asRecord.InvocationInfo.ScriptName)) " is 148.
Complex Conditional,PowerShellFar,Help,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Help.cs,ShowHelpForContext,The conditional expression  "parameter == "VERBOSE" ||  							parameter == "DEBUG" ||  							parameter == "ERRORACTION" ||  							parameter == "ERRORVARIABLE" ||  							parameter == "WARNINGACTION" ||  							parameter == "WARNINGVARIABLE" ||  							parameter == "OUTVARIABLE" ||  							parameter == "OUTBUFFER" ||  							parameter == "WHATIF" ||  							parameter == "CONFIRM""  is complex.
Complex Conditional,PowerShellFar,MemberPanel,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Panels\MemberPanel.cs,HelpMenuInitItems,The conditional expression  "items.Save == null && (AsSaveData != null || Parent != null && (Parent is DataPanel))"  is complex.
Complex Conditional,PowerShellFar,ObjectExplorer,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Panels\ObjectExplorer.cs,GetData,The conditional expression  "!args.NewFiles && _AddedValues == null && (Map != null || Files.Count > 0 && Files[0] is SetFile)"  is complex.
Complex Conditional,PowerShellFar,Job,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Job.cs,WatchJobs,The conditional expression  "job.IsSucceeded && (job.KeepSeconds <= 0 || job.KeepStopwatch != null && job.KeepStopwatch.Elapsed.TotalSeconds > job.KeepSeconds)"  is complex.
Complex Conditional,PowerShellFar.Commands,ShowFarMessageCommand,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Commands\ShowFarMessageCommand.cs,BeginProcessing,The conditional expression  "!Draw && (Buttons != ButtonSet.Ok || Choices != null && Choices.Length > 0)"  is complex.
Complex Conditional,PowerShellFar.UI,DebuggerMenu,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\DebuggerMenu.cs,OnLineBreakpoint,The conditional expression  "lbp != null && lbp.Action == null && line == lbp.Line && Kit.Equals(file' lbp.Script)"  is complex.
Virtual Method Call from Constructor,PowerShellFar,Entry,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Entry.cs,Entry,The constructor "Entry" calls a virtual method "GetFolderPath".
Virtual Method Call from Constructor,PowerShellFar,Entry,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Entry.cs,Entry,The constructor "Entry" calls a virtual method "GetFolderPath".
Virtual Method Call from Constructor,PowerShellFar.UI,BreakpointDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\BreakpointDialog.cs,BreakpointDialog,The constructor "BreakpointDialog" calls a virtual method "CreateDialog".
Virtual Method Call from Constructor,PowerShellFar.UI,BreakpointDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\BreakpointDialog.cs,BreakpointDialog,The constructor "BreakpointDialog" calls a virtual method "GetHelpTopic".
Virtual Method Call from Constructor,PowerShellFar.UI,BreakpointDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\BreakpointDialog.cs,BreakpointDialog,The constructor "BreakpointDialog" calls a virtual method "AddBox".
Virtual Method Call from Constructor,PowerShellFar.UI,BreakpointDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\BreakpointDialog.cs,BreakpointDialog,The constructor "BreakpointDialog" calls a virtual method "AddText".
Virtual Method Call from Constructor,PowerShellFar.UI,BreakpointDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\BreakpointDialog.cs,BreakpointDialog,The constructor "BreakpointDialog" calls a virtual method "AddEdit".
Virtual Method Call from Constructor,PowerShellFar.UI,BreakpointDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\BreakpointDialog.cs,BreakpointDialog,The constructor "BreakpointDialog" calls a virtual method "AddText".
Virtual Method Call from Constructor,PowerShellFar.UI,BreakpointDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\BreakpointDialog.cs,BreakpointDialog,The constructor "BreakpointDialog" calls a virtual method "AddComboBox".
Virtual Method Call from Constructor,PowerShellFar.UI,BreakpointDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\BreakpointDialog.cs,BreakpointDialog,The constructor "BreakpointDialog" calls a virtual method "AddText".
Virtual Method Call from Constructor,PowerShellFar.UI,BreakpointDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\BreakpointDialog.cs,BreakpointDialog,The constructor "BreakpointDialog" calls a virtual method "AddEdit".
Virtual Method Call from Constructor,PowerShellFar.UI,BreakpointDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\BreakpointDialog.cs,BreakpointDialog,The constructor "BreakpointDialog" calls a virtual method "AddText".
Virtual Method Call from Constructor,PowerShellFar.UI,BreakpointDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\BreakpointDialog.cs,BreakpointDialog,The constructor "BreakpointDialog" calls a virtual method "AddEdit".
Virtual Method Call from Constructor,PowerShellFar.UI,BreakpointDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\BreakpointDialog.cs,BreakpointDialog,The constructor "BreakpointDialog" calls a virtual method "AddText".
Virtual Method Call from Constructor,PowerShellFar.UI,BreakpointDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\BreakpointDialog.cs,BreakpointDialog,The constructor "BreakpointDialog" calls a virtual method "AddButton".
Virtual Method Call from Constructor,PowerShellFar.UI,BreakpointDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\BreakpointDialog.cs,BreakpointDialog,The constructor "BreakpointDialog" calls a virtual method "AddButton".
Virtual Method Call from Constructor,PowerShellFar.UI,CommandHistoryMenu,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\CommandHistoryMenu.cs,CommandHistoryMenu,The constructor "CommandHistoryMenu" calls a virtual method "GetHelpTopic".
Virtual Method Call from Constructor,PowerShellFar.UI,ConnectionDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\ConnectionDialog.cs,ConnectionDialog,The constructor "ConnectionDialog" calls a virtual method "CreateDialog".
Virtual Method Call from Constructor,PowerShellFar.UI,ConnectionDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\ConnectionDialog.cs,ConnectionDialog,The constructor "ConnectionDialog" calls a virtual method "AddBox".
Virtual Method Call from Constructor,PowerShellFar.UI,ConnectionDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\ConnectionDialog.cs,ConnectionDialog,The constructor "ConnectionDialog" calls a virtual method "AddText".
Virtual Method Call from Constructor,PowerShellFar.UI,ConnectionDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\ConnectionDialog.cs,ConnectionDialog,The constructor "ConnectionDialog" calls a virtual method "AddEdit".
Virtual Method Call from Constructor,PowerShellFar.UI,ConnectionDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\ConnectionDialog.cs,ConnectionDialog,The constructor "ConnectionDialog" calls a virtual method "AddText".
Virtual Method Call from Constructor,PowerShellFar.UI,ConnectionDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\ConnectionDialog.cs,ConnectionDialog,The constructor "ConnectionDialog" calls a virtual method "AddEdit".
Virtual Method Call from Constructor,PowerShellFar.UI,ConnectionDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\ConnectionDialog.cs,ConnectionDialog,The constructor "ConnectionDialog" calls a virtual method "AddText".
Virtual Method Call from Constructor,PowerShellFar.UI,ConnectionDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\ConnectionDialog.cs,ConnectionDialog,The constructor "ConnectionDialog" calls a virtual method "AddButton".
Virtual Method Call from Constructor,PowerShellFar.UI,ConnectionDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\ConnectionDialog.cs,ConnectionDialog,The constructor "ConnectionDialog" calls a virtual method "AddButton".
Virtual Method Call from Constructor,PowerShellFar.UI,DebuggerDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\DebuggerDialog.cs,DebuggerDialog,The constructor "DebuggerDialog" calls a virtual method "CreateDialog".
Virtual Method Call from Constructor,PowerShellFar.UI,DebuggerDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\DebuggerDialog.cs,DebuggerDialog,The constructor "DebuggerDialog" calls a virtual method "GetHelpTopic".
Virtual Method Call from Constructor,PowerShellFar.UI,DebuggerDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\DebuggerDialog.cs,DebuggerDialog,The constructor "DebuggerDialog" calls a virtual method "AddBox".
Virtual Method Call from Constructor,PowerShellFar.UI,DebuggerDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\DebuggerDialog.cs,DebuggerDialog,The constructor "DebuggerDialog" calls a virtual method "AddListBox".
Virtual Method Call from Constructor,PowerShellFar.UI,DebuggerDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\DebuggerDialog.cs,DebuggerDialog,The constructor "DebuggerDialog" calls a virtual method "AddText".
Virtual Method Call from Constructor,PowerShellFar.UI,DebuggerDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\DebuggerDialog.cs,DebuggerDialog,The constructor "DebuggerDialog" calls a virtual method "AddListBox".
Virtual Method Call from Constructor,PowerShellFar.UI,DebuggerDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\DebuggerDialog.cs,DebuggerDialog,The constructor "DebuggerDialog" calls a virtual method "AddText".
Virtual Method Call from Constructor,PowerShellFar.UI,DebuggerDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\DebuggerDialog.cs,DebuggerDialog,The constructor "DebuggerDialog" calls a virtual method "AddButton".
Virtual Method Call from Constructor,PowerShellFar.UI,DebuggerDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\DebuggerDialog.cs,DebuggerDialog,The constructor "DebuggerDialog" calls a virtual method "AddButton".
Virtual Method Call from Constructor,PowerShellFar.UI,DebuggerDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\DebuggerDialog.cs,DebuggerDialog,The constructor "DebuggerDialog" calls a virtual method "AddButton".
Virtual Method Call from Constructor,PowerShellFar.UI,DebuggerDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\DebuggerDialog.cs,DebuggerDialog,The constructor "DebuggerDialog" calls a virtual method "AddButton".
Virtual Method Call from Constructor,PowerShellFar.UI,DebuggerDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\DebuggerDialog.cs,DebuggerDialog,The constructor "DebuggerDialog" calls a virtual method "AddButton".
Virtual Method Call from Constructor,PowerShellFar.UI,DebuggerDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\DebuggerDialog.cs,DebuggerDialog,The constructor "DebuggerDialog" calls a virtual method "AddButton".
Virtual Method Call from Constructor,PowerShellFar.UI,DebuggerDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\DebuggerDialog.cs,DebuggerDialog,The constructor "DebuggerDialog" calls a virtual method "AddButton".
Virtual Method Call from Constructor,PowerShellFar.UI,DebuggerDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\DebuggerDialog.cs,DebuggerDialog,The constructor "DebuggerDialog" calls a virtual method "AddButton".
Virtual Method Call from Constructor,PowerShellFar.UI,DebuggerMenu,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\DebuggerMenu.cs,DebuggerMenu,The constructor "DebuggerMenu" calls a virtual method "CreateListMenu".
Virtual Method Call from Constructor,PowerShellFar.UI,DebuggerMenu,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\DebuggerMenu.cs,DebuggerMenu,The constructor "DebuggerMenu" calls a virtual method "GetHelpTopic".
Virtual Method Call from Constructor,PowerShellFar.UI,ErrorsMenu,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\ErrorsMenu.cs,ErrorsMenu,The constructor "ErrorsMenu" calls a virtual method "CreateMenu".
Virtual Method Call from Constructor,PowerShellFar.UI,ErrorsMenu,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\ErrorsMenu.cs,ErrorsMenu,The constructor "ErrorsMenu" calls a virtual method "GetHelpTopic".
Virtual Method Call from Constructor,PowerShellFar.UI,ExportDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\ExportDialog.cs,ExportDialog,The constructor "ExportDialog" calls a virtual method "CreateDialog".
Virtual Method Call from Constructor,PowerShellFar.UI,ExportDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\ExportDialog.cs,ExportDialog,The constructor "ExportDialog" calls a virtual method "AddBox".
Virtual Method Call from Constructor,PowerShellFar.UI,ExportDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\ExportDialog.cs,ExportDialog,The constructor "ExportDialog" calls a virtual method "AddText".
Virtual Method Call from Constructor,PowerShellFar.UI,ExportDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\ExportDialog.cs,ExportDialog,The constructor "ExportDialog" calls a virtual method "AddEdit".
Virtual Method Call from Constructor,PowerShellFar.UI,ExportDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\ExportDialog.cs,ExportDialog,The constructor "ExportDialog" calls a virtual method "AddText".
Virtual Method Call from Constructor,PowerShellFar.UI,ExportDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\ExportDialog.cs,ExportDialog,The constructor "ExportDialog" calls a virtual method "AddComboBox".
Virtual Method Call from Constructor,PowerShellFar.UI,ExportDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\ExportDialog.cs,ExportDialog,The constructor "ExportDialog" calls a virtual method "AddText".
Virtual Method Call from Constructor,PowerShellFar.UI,ExportDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\ExportDialog.cs,ExportDialog,The constructor "ExportDialog" calls a virtual method "AddEdit".
Virtual Method Call from Constructor,PowerShellFar.UI,ExportDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\ExportDialog.cs,ExportDialog,The constructor "ExportDialog" calls a virtual method "AddText".
Virtual Method Call from Constructor,PowerShellFar.UI,ExportDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\ExportDialog.cs,ExportDialog,The constructor "ExportDialog" calls a virtual method "AddButton".
Virtual Method Call from Constructor,PowerShellFar.UI,ExportDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\ExportDialog.cs,ExportDialog,The constructor "ExportDialog" calls a virtual method "AddButton".
Virtual Method Call from Constructor,PowerShellFar.UI,NewValueDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\NewValueDialog.cs,NewValueDialog,The constructor "NewValueDialog" calls a virtual method "CreateDialog".
Virtual Method Call from Constructor,PowerShellFar.UI,NewValueDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\NewValueDialog.cs,NewValueDialog,The constructor "NewValueDialog" calls a virtual method "AddBox".
Virtual Method Call from Constructor,PowerShellFar.UI,NewValueDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\NewValueDialog.cs,NewValueDialog,The constructor "NewValueDialog" calls a virtual method "AddText".
Virtual Method Call from Constructor,PowerShellFar.UI,NewValueDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\NewValueDialog.cs,NewValueDialog,The constructor "NewValueDialog" calls a virtual method "AddEdit".
Virtual Method Call from Constructor,PowerShellFar.UI,NewValueDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\NewValueDialog.cs,NewValueDialog,The constructor "NewValueDialog" calls a virtual method "AddText".
Virtual Method Call from Constructor,PowerShellFar.UI,NewValueDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\NewValueDialog.cs,NewValueDialog,The constructor "NewValueDialog" calls a virtual method "AddEdit".
Virtual Method Call from Constructor,PowerShellFar.UI,NewValueDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\NewValueDialog.cs,NewValueDialog,The constructor "NewValueDialog" calls a virtual method "AddText".
Virtual Method Call from Constructor,PowerShellFar.UI,NewValueDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\NewValueDialog.cs,NewValueDialog,The constructor "NewValueDialog" calls a virtual method "AddEdit".
Virtual Method Call from Constructor,PowerShellFar.UI,NewValueDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\NewValueDialog.cs,NewValueDialog,The constructor "NewValueDialog" calls a virtual method "AddText".
Virtual Method Call from Constructor,PowerShellFar.UI,NewValueDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\NewValueDialog.cs,NewValueDialog,The constructor "NewValueDialog" calls a virtual method "AddButton".
Virtual Method Call from Constructor,PowerShellFar.UI,NewValueDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\NewValueDialog.cs,NewValueDialog,The constructor "NewValueDialog" calls a virtual method "AddButton".
Empty Catch Block,PowerShellFar,Interactive,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Interactive.cs,AsyncInvoke,The method has an empty catch block.
Empty Catch Block,PowerShellFar,EditorKit,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\EditorKit.cs,ExpandCode,The method has an empty catch block.
Empty Catch Block,PowerShellFar,Help,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Help.cs,ShowHelpForContext,The method has an empty catch block.
Empty Catch Block,PowerShellFar,Job,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Job.cs,StopJob,The method has an empty catch block.
Empty Catch Block,PowerShellFar,Job,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Job.cs,AsyncInvoke,The method has an empty catch block.
Empty Catch Block,My,FileEx,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Utility.cs,DeleteIgnoreError,The method has an empty catch block.
Empty Catch Block,My,FileEx,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Utility.cs,DeleteIgnoreError,The method has an empty catch block.
Empty Catch Block,PowerShellFar.UI,ActorMenu,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\ActorMenu.cs,Show,The method has an empty catch block.
Empty Catch Block,PowerShellFar.UI,DebuggerDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\DebuggerDialog.cs,DebuggerDialog,The method has an empty catch block.
Magic Number,PowerShellFar,Interactive,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Interactive.cs,Create,The following statement contains a magic number: editor.CodePage = 65001;
Magic Number,PowerShellFar,Interactive,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Interactive.cs,Interactive,The following statement contains a magic number: switch (mode)  			{  				case 0:  					OpenMainSession();  					break;  				case 1:  					OpenLocalSession();  					break;  				case 2:  					OpenRemoteSession();  					break;  			}
Magic Number,PowerShellFar,EditorKit,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\EditorKit.cs,InitTabExpansion,The following statement contains a magic number: A.Psf.PSVersion.Major > 2
Magic Number,PowerShellFar,EditorKit,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\EditorKit.cs,ExpandCode,The following statement contains a magic number: A.Psf.PSVersion.Major > 2 && editLine.WindowKind == WindowKind.Editor && My.PathEx.IsPSFile((editor = Far.Api.Editor).FileName)
Magic Number,PowerShellFar,EditorKit,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\EditorKit.cs,ExpandCode,The following statement contains a magic number: var scope = matchVar.Groups[2].Value;
Magic Number,PowerShellFar,EditorKit,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\EditorKit.cs,ExpandCode,The following statement contains a magic number: var re = new Regex(@"\$(global:|script:|private:)?(" + scope + matchVar.Groups[3].Value + @"\w+:?)"' RegexOptions.IgnoreCase);
Magic Number,PowerShellFar,EditorKit,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\EditorKit.cs,ExpandCode,The following statement contains a magic number: variables.Add(start + "$" + m.Groups[2].Value);
Magic Number,PowerShellFar,Format,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Format.cs,TryFormatByTableControl,The following statement contains a magic number: setSum + (metas.Length - setCount) * 5 > totalWidth
Magic Number,PowerShellFar,Format,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Format.cs,MakeMap,The following statement contains a magic number: switch (meta.Kind[0])  				{  					case 'N':  						map.Name = meta;  						break;  					case 'O':  						map.Owner = meta;  						break;  					case 'Z':  						map.Description = meta;  						break;  					case 'C':  						map.Columns.Add(meta);  						break;  					case 'S':  						{  							if (map.Length != null)  								throw new InvalidOperationException("Column 'S' is used twice.");  							map.Length = meta;  						}  						break;  					case 'D':  						{  							if (meta.Kind.Length < 2)  								throw new InvalidOperationException(Res.InvalidColumnKind + "D");    							switch (meta.Kind[1])  							{  								case 'C':  									{  										if (map.CreationTime != null)  											throw new InvalidOperationException("Column 'DC' is used twice.");    										map.CreationTime = meta;  									}  									break;  								case 'M':  									{  										if (map.LastWriteTime != null)  											throw new InvalidOperationException("Column 'DM' is used twice.");    										map.LastWriteTime = meta;  									}  									break;  								case 'A':  									{  										if (map.LastAccessTime != null)  											throw new InvalidOperationException("Column 'DA' is used twice.");    										map.LastAccessTime = meta;  									}  									break;  								default:  									throw new InvalidOperationException(Res.InvalidColumnKind + meta.Kind);  							}  						}  						break;  					default:  						throw new InvalidOperationException("Unknown column type: " + meta.Kind);  				}
Magic Number,PowerShellFar,Format,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Format.cs,SetupMetas,The following statement contains a magic number: switch (meta.Kind[0])  				{  					case 'N':  						{  							if (!availableColumnTypes.Remove("N"))  								throw new InvalidOperationException("Column 'N' is used twice.");  						}  						break;  					case 'O':  						{  							if (!availableColumnTypes.Remove("O"))  								throw new InvalidOperationException("Column 'O' is used twice.");  						}  						break;  					case 'Z':  						{  							if (!availableColumnTypes.Remove("Z"))  								throw new InvalidOperationException("Column 'Z' is used twice.");  						}  						break;  					case 'C':  						{  							if (meta.Kind.Length < 2)  								throw new InvalidOperationException(Res.InvalidColumnKind + "C");    							if (iCustom != (int)(meta.Kind[1] - '0'))  								throw new InvalidOperationException(Res.InvalidColumnKind + meta.Kind + ". Expected: C" + iCustom);    							availableColumnTypes.Remove(meta.Kind.Substring(0' 2));  							++iCustom;  						}  						break;  				}
Magic Number,PowerShellFar,Format,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Format.cs,SetupMetas,The following statement contains a magic number: switch (meta.Kind[0])  				{  					case 'N':  						{  							if (!availableColumnTypes.Remove("N"))  								throw new InvalidOperationException("Column 'N' is used twice.");  						}  						break;  					case 'O':  						{  							if (!availableColumnTypes.Remove("O"))  								throw new InvalidOperationException("Column 'O' is used twice.");  						}  						break;  					case 'Z':  						{  							if (!availableColumnTypes.Remove("Z"))  								throw new InvalidOperationException("Column 'Z' is used twice.");  						}  						break;  					case 'C':  						{  							if (meta.Kind.Length < 2)  								throw new InvalidOperationException(Res.InvalidColumnKind + "C");    							if (iCustom != (int)(meta.Kind[1] - '0'))  								throw new InvalidOperationException(Res.InvalidColumnKind + meta.Kind + ". Expected: C" + iCustom);    							availableColumnTypes.Remove(meta.Kind.Substring(0' 2));  							++iCustom;  						}  						break;  				}
Magic Number,PowerShellFar,NativeMethods,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\NativeMethods.cs,PromptForCredential,The following statement contains a magic number: StringBuilder stringBuilder = new StringBuilder(userName' 513);
Magic Number,PowerShellFar,NativeMethods,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\NativeMethods.cs,PromptForCredential,The following statement contains a magic number: StringBuilder stringBuilder2 = new StringBuilder(256);
Magic Number,PowerShellFar,NativeMethods,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\NativeMethods.cs,PromptForCredential,The following statement contains a magic number: credUIReturnCodes = CredUIPromptForCredentials(ref cREDUI_INFO' targetName' IntPtr.Zero' 0' stringBuilder' 513' stringBuilder2' 256' ref num' cREDUI_FLAGS);
Magic Number,PowerShellFar,NativeMethods,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\NativeMethods.cs,PromptForCredential,The following statement contains a magic number: credUIReturnCodes = CredUIPromptForCredentials(ref cREDUI_INFO' targetName' IntPtr.Zero' 0' stringBuilder' 513' stringBuilder2' 256' ref num' cREDUI_FLAGS);
Magic Number,PowerShellFar,NativeMethods,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\NativeMethods.cs,PromptForCredential,The following statement contains a magic number: stringBuilder.Length <= 513 && stringBuilder2.Length <= 256
Magic Number,PowerShellFar,NativeMethods,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\NativeMethods.cs,PromptForCredential,The following statement contains a magic number: stringBuilder.Length <= 513 && stringBuilder2.Length <= 256
Magic Number,PowerShellFar,FormatExplorer,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Panels\FormatExplorer.cs,DoGetFiles,The following statement contains a magic number: metas = Format.TryFormatByTableControl(values[0]' panel == null ? 80 : panel.Window.Width);
Magic Number,PowerShellFar,ItemExplorer,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Panels\ItemExplorer.cs,DoExploreParent,The following statement contains a magic number: args.PostName = path.Substring(iProvider + 2);
Magic Number,PowerShellFar,ItemExplorer,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Panels\ItemExplorer.cs,DoExploreParent,The following statement contains a magic number: path = path.Substring(0' iProvider + 2);
Magic Number,PowerShellFar,ItemExplorer,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Panels\ItemExplorer.cs,DoExploreParent,The following statement contains a magic number: path.Length > iSlash + 2
Magic Number,PowerShellFar,ItemExplorer,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Panels\ItemExplorer.cs,DoExploreParent,The following statement contains a magic number: string computer = path.Substring(2);
Magic Number,PowerShellFar,MemberPanel,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Panels\MemberPanel.cs,CreateDataLookup,The following statement contains a magic number: namePairs.Length % 2 != 0
Magic Number,PowerShellFar,EditorOutputWriter2,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\OutputWriters.cs,Redraw,The following statement contains a magic number: _stopwatch.ElapsedMilliseconds > 40
Magic Number,PowerShellFar,PropertyExplorer,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Panels\PropertyExplorer.cs,GetFiles,The following statement contains a magic number: var filter = new List<string>(5);
Magic Number,PowerShellFar,TreeExplorer,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Panels\TreeExplorer.cs,AddFileFromTreeItem,The following statement contains a magic number: string nodePrefix = new string(' '' level * 2);
Magic Number,PowerShellFar,Actor,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Actor.cs,Invoking,The following statement contains a magic number: System.Threading.Thread.Sleep(100);
Magic Number,PowerShellFar,Job,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Job.cs,ToLine,The following statement contains a magic number: r = r.Substring(0' maxLength - 3) + "...";
Magic Number,PowerShellFar,Job,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Job.cs,StopJob,The following statement contains a magic number: Thread.Sleep(50);
Magic Number,PowerShellFar,Job,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Job.cs,ShowJobs,The following statement contains a magic number: item = menu.Add(string.Format(null' MenuFormatString' job.StateText' job.Length' job.ToLine(100)));
Magic Number,PowerShellFar,Job,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Job.cs,StopJobsOnExit,The following statement contains a magic number: string message = string.Format(null' @"  Job:  {0}    State: {1}  Output: {2}    Abort: discard the job  Retry: wait for exit or view output  Ignore: discard all jobs and output    "' job.ToLine(100)' job.StateText' job.Length);
Magic Number,PowerShellFar,FarUI,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\FarUI.cs,WriteProgress,The following statement contains a magic number: IsProgressStarted && _progressWatch.ElapsedMilliseconds < 1000
Magic Number,PowerShellFar,FarUI,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\FarUI.cs,WriteProgress,The following statement contains a magic number: Far.Api.UI.SetProgressValue(record.PercentComplete' 100);
Magic Number,PowerShellFar,DataPanel,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Panels\DataPanel.cs,Open,The following statement contains a magic number: switch (meta.Kind[0])  				{  					case 'N':  						Map.Name = column.Ordinal;  						break;  					case 'O':  						Map.Owner = column.Ordinal;  						break;  					case 'Z':  						Map.Description = column.Ordinal;  						break;  					case 'C':  						Map.Columns.Add(column.Ordinal);  						break;  					case 'S':  						{  							if (Map.Length >= 0)  								throw new InvalidOperationException("Column 'S' is used twice.");  							Map.Length = column.Ordinal;  						}  						break;  					case 'D':  						{  							if (meta.Kind.Length < 2)  								throw new InvalidOperationException(Res.InvalidColumnKind + "D");    							switch (meta.Kind[1])  							{  								case 'C':  									{  										if (Map.CreationTime >= 0)  											throw new InvalidOperationException("Column 'DC' is used twice.");    										Map.CreationTime = column.Ordinal;  									}  									break;  								case 'M':  									{  										if (Map.LastWriteTime >= 0)  											throw new InvalidOperationException("Column 'DM' is used twice.");    										Map.LastWriteTime = column.Ordinal;  									}  									break;  								case 'A':  									{  										if (Map.LastAccessTime >= 0)  											throw new InvalidOperationException("Column 'DA' is used twice.");    										Map.LastAccessTime = column.Ordinal;  									}  									break;  								default:  									throw new InvalidOperationException(Res.InvalidColumnKind + meta.Kind);  							}  						}  						break;  					default:  						throw new InvalidOperationException(Res.InvalidColumnKind + meta.Kind);  				}
Magic Number,PowerShellFar,Zoo,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Utility.cs,ShowTranscript,The following statement contains a magic number: viewer.CodePage = 1200;
Magic Number,My,PathEx,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Utility.cs,IsFSPath,The following statement contains a magic number: return name.StartsWith("\\\\"' StringComparison.Ordinal) || (name.Length > 3 && name[1] == ':');
Magic Number,My,PathEx,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Utility.cs,TryGetFilePath,The following statement contains a magic number: path.Length > 3 && path.Substring(1' 2) == ":\\" || path.StartsWith("\\\\"' StringComparison.OrdinalIgnoreCase)
Magic Number,My,PathEx,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Utility.cs,TryGetFilePath,The following statement contains a magic number: path.Length > 3 && path.Substring(1' 2) == ":\\" || path.StartsWith("\\\\"' StringComparison.OrdinalIgnoreCase)
Magic Number,PowerShellFar.UI,BreakpointDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\BreakpointDialog.cs,BreakpointDialog,The following statement contains a magic number: int h = 9;
Magic Number,PowerShellFar.UI,BreakpointDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\BreakpointDialog.cs,BreakpointDialog,The following statement contains a magic number: Type == 2
Magic Number,PowerShellFar.UI,BreakpointDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\BreakpointDialog.cs,BreakpointDialog,The following statement contains a magic number: UIDialog = Far.Api.CreateDialog(-1' -1' 77' h);
Magic Number,PowerShellFar.UI,BreakpointDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\BreakpointDialog.cs,BreakpointDialog,The following statement contains a magic number: UIDialog.AddBox(3' 1' 0' 0' typeName + " breakpoint");
Magic Number,PowerShellFar.UI,BreakpointDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\BreakpointDialog.cs,BreakpointDialog,The following statement contains a magic number: const int x = 14;
Magic Number,PowerShellFar.UI,BreakpointDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\BreakpointDialog.cs,BreakpointDialog,The following statement contains a magic number: UIDialog.AddText(5' ++y' 0' "&" + typeName);
Magic Number,PowerShellFar.UI,BreakpointDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\BreakpointDialog.cs,BreakpointDialog,The following statement contains a magic number: UIMatter = UIDialog.AddEdit(x' y' 71' string.Empty);
Magic Number,PowerShellFar.UI,BreakpointDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\BreakpointDialog.cs,BreakpointDialog,The following statement contains a magic number: switch (type)  			{  				case 0:  					if (line > 0)  						UIMatter.Text = Kit.ToString(line);  					break;  				case 1:  					UIMatter.History = Res.HistoryCommand;  					UIMatter.UseLastHistory = true;  					break;  				case 2:  					UIMatter.History = Res.HistoryVariable;  					UIMatter.UseLastHistory = true;  					break;  			}
Magic Number,PowerShellFar.UI,BreakpointDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\BreakpointDialog.cs,BreakpointDialog,The following statement contains a magic number: UIDialog.AddText(5' ++y' 0' "&Mode");
Magic Number,PowerShellFar.UI,BreakpointDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\BreakpointDialog.cs,BreakpointDialog,The following statement contains a magic number: UIMode = UIDialog.AddComboBox(x' y' 71' variableAccessMode.ToString());
Magic Number,PowerShellFar.UI,BreakpointDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\BreakpointDialog.cs,BreakpointDialog,The following statement contains a magic number: Type == 2
Magic Number,PowerShellFar.UI,BreakpointDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\BreakpointDialog.cs,BreakpointDialog,The following statement contains a magic number: UIDialog.AddText(5' ++y' 0' "&Script");
Magic Number,PowerShellFar.UI,BreakpointDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\BreakpointDialog.cs,BreakpointDialog,The following statement contains a magic number: UIScript = UIDialog.AddEdit(x' y' 71' string.Empty);
Magic Number,PowerShellFar.UI,BreakpointDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\BreakpointDialog.cs,BreakpointDialog,The following statement contains a magic number: UIDialog.AddText(5' ++y' 0' "&Action");
Magic Number,PowerShellFar.UI,BreakpointDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\BreakpointDialog.cs,BreakpointDialog,The following statement contains a magic number: UIAction = UIDialog.AddEdit(x' y' 71' string.Empty);
Magic Number,PowerShellFar.UI,BreakpointDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\BreakpointDialog.cs,BreakpointDialog,The following statement contains a magic number: UIDialog.AddText(5' ++y' 0' string.Empty).Separator = 1;
Magic Number,PowerShellFar.UI,ConnectionDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\ConnectionDialog.cs,ConnectionDialog,The following statement contains a magic number: _Dialog = Far.Api.CreateDialog(-1' -1' 77' 8);
Magic Number,PowerShellFar.UI,ConnectionDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\ConnectionDialog.cs,ConnectionDialog,The following statement contains a magic number: _Dialog = Far.Api.CreateDialog(-1' -1' 77' 8);
Magic Number,PowerShellFar.UI,ConnectionDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\ConnectionDialog.cs,ConnectionDialog,The following statement contains a magic number: _Dialog.AddBox(3' 1' 0' 0' title);
Magic Number,PowerShellFar.UI,ConnectionDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\ConnectionDialog.cs,ConnectionDialog,The following statement contains a magic number: _Dialog.AddText(5' -1' 0' "&Computer");
Magic Number,PowerShellFar.UI,ConnectionDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\ConnectionDialog.cs,ConnectionDialog,The following statement contains a magic number: _ComputerName = _Dialog.AddEdit(x' 0' 71' string.Empty);
Magic Number,PowerShellFar.UI,ConnectionDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\ConnectionDialog.cs,ConnectionDialog,The following statement contains a magic number: _Dialog.AddText(5' -1' 0' "&User name");
Magic Number,PowerShellFar.UI,ConnectionDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\ConnectionDialog.cs,ConnectionDialog,The following statement contains a magic number: _UserName = _Dialog.AddEdit(x' 0' 71' string.Empty);
Magic Number,PowerShellFar.UI,ConnectionDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\ConnectionDialog.cs,ConnectionDialog,The following statement contains a magic number: _Dialog.AddText(5' -1' 0' string.Empty).Separator = 1;
Magic Number,PowerShellFar.UI,DebuggerDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\DebuggerDialog.cs,DebuggerDialog,The following statement contains a magic number: int dw = Math.Max(Math.Min(Far.Api.UI.WindowSize.X - 7' maxLine + 12)' 73);
Magic Number,PowerShellFar.UI,DebuggerDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\DebuggerDialog.cs,DebuggerDialog,The following statement contains a magic number: int dw = Math.Max(Math.Min(Far.Api.UI.WindowSize.X - 7' maxLine + 12)' 73);
Magic Number,PowerShellFar.UI,DebuggerDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\DebuggerDialog.cs,DebuggerDialog,The following statement contains a magic number: int dw = Math.Max(Math.Min(Far.Api.UI.WindowSize.X - 7' maxLine + 12)' 73);
Magic Number,PowerShellFar.UI,DebuggerDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\DebuggerDialog.cs,DebuggerDialog,The following statement contains a magic number: int dh = 22;
Magic Number,PowerShellFar.UI,DebuggerDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\DebuggerDialog.cs,DebuggerDialog,The following statement contains a magic number: h1 = e.Breakpoints.Count + 2;
Magic Number,PowerShellFar.UI,DebuggerDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\DebuggerDialog.cs,DebuggerDialog,The following statement contains a magic number: _Dialog.AddBox(3' 1' dw - 4' dh - 2' title);
Magic Number,PowerShellFar.UI,DebuggerDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\DebuggerDialog.cs,DebuggerDialog,The following statement contains a magic number: _Dialog.AddBox(3' 1' dw - 4' dh - 2' title);
Magic Number,PowerShellFar.UI,DebuggerDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\DebuggerDialog.cs,DebuggerDialog,The following statement contains a magic number: _Dialog.AddBox(3' 1' dw - 4' dh - 2' title);
Magic Number,PowerShellFar.UI,DebuggerDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\DebuggerDialog.cs,DebuggerDialog,The following statement contains a magic number: _List1 = _Dialog.AddListBox(4' 2' dw - 5' h1 + 1' null);
Magic Number,PowerShellFar.UI,DebuggerDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\DebuggerDialog.cs,DebuggerDialog,The following statement contains a magic number: _List1 = _Dialog.AddListBox(4' 2' dw - 5' h1 + 1' null);
Magic Number,PowerShellFar.UI,DebuggerDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\DebuggerDialog.cs,DebuggerDialog,The following statement contains a magic number: _List1 = _Dialog.AddListBox(4' 2' dw - 5' h1 + 1' null);
Magic Number,PowerShellFar.UI,DebuggerDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\DebuggerDialog.cs,DebuggerDialog,The following statement contains a magic number: _List2 = _Dialog.AddListBox(4' _List1.Rect.Bottom + 2' dw - 5' dh - 5' null);
Magic Number,PowerShellFar.UI,DebuggerDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\DebuggerDialog.cs,DebuggerDialog,The following statement contains a magic number: _List2 = _Dialog.AddListBox(4' _List1.Rect.Bottom + 2' dw - 5' dh - 5' null);
Magic Number,PowerShellFar.UI,DebuggerDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\DebuggerDialog.cs,DebuggerDialog,The following statement contains a magic number: _List2 = _Dialog.AddListBox(4' _List1.Rect.Bottom + 2' dw - 5' dh - 5' null);
Magic Number,PowerShellFar.UI,DebuggerDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\DebuggerDialog.cs,DebuggerDialog,The following statement contains a magic number: _List2 = _Dialog.AddListBox(4' _List1.Rect.Bottom + 2' dw - 5' dh - 5' null);
Magic Number,PowerShellFar.UI,DebuggerDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\DebuggerDialog.cs,SetFrame,The following statement contains a magic number: _List2.SetFrame(i' i - _List2.Rect.Height / 2);
Magic Number,PowerShellFar.UI,DebuggerMenu,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\DebuggerMenu.cs,Show,The following statement contains a magic number: n <= 9
Magic Number,PowerShellFar.UI,DebuggerMenu,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\DebuggerMenu.cs,OnLineBreakpoint,The following statement contains a magic number: switch (Far.Api.Message("Breakpoint exists"'  						"Line breakpoint"'  						MessageOptions.None'  						new string[] {  							"&Remove"'  							bpFound.Enabled ? "&Disable" : "&Enable"'  							"&Modify"'  							"&Add"'  							"&Cancel"  						}))  					{  						case 0:  							A.RemoveBreakpoint(bpFound);  							return;  						case 1:  							if (bpFound.Enabled)  								A.DisableBreakpoint(bpFound);  							else  								A.InvokeCode("Enable-PSBreakpoint -Breakpoint $args[0]"' bpFound);  							return;  						case 2:  							break;  						case 3:  							bpFound = null;  							break;  						default:  							return;  					}
Magic Number,PowerShellFar.UI,DebuggerMenu,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\DebuggerMenu.cs,OnLineBreakpoint,The following statement contains a magic number: switch (Far.Api.Message("Breakpoint exists"'  						"Line breakpoint"'  						MessageOptions.None'  						new string[] {  							"&Remove"'  							bpFound.Enabled ? "&Disable" : "&Enable"'  							"&Modify"'  							"&Add"'  							"&Cancel"  						}))  					{  						case 0:  							A.RemoveBreakpoint(bpFound);  							return;  						case 1:  							if (bpFound.Enabled)  								A.DisableBreakpoint(bpFound);  							else  								A.InvokeCode("Enable-PSBreakpoint -Breakpoint $args[0]"' bpFound);  							return;  						case 2:  							break;  						case 3:  							bpFound = null;  							break;  						default:  							return;  					}
Magic Number,PowerShellFar.UI,DebuggerMenu,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\DebuggerMenu.cs,OnVariableBreakpoint,The following statement contains a magic number: BreakpointDialog ui = new BreakpointDialog(2' file' 0);
Magic Number,PowerShellFar.UI,ExportDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\ExportDialog.cs,ExportDialog,The following statement contains a magic number: int h = 8;
Magic Number,PowerShellFar.UI,ExportDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\ExportDialog.cs,ExportDialog,The following statement contains a magic number: _Dialog = Far.Api.CreateDialog(-1' -1' 77' h);
Magic Number,PowerShellFar.UI,ExportDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\ExportDialog.cs,ExportDialog,The following statement contains a magic number: _Dialog.AddBox(3' 1' 0' 0' title);
Magic Number,PowerShellFar.UI,ExportDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\ExportDialog.cs,ExportDialog,The following statement contains a magic number: const int x = 16;
Magic Number,PowerShellFar.UI,ExportDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\ExportDialog.cs,ExportDialog,The following statement contains a magic number: _Dialog.AddText(5' ++y' 0' "&File name");
Magic Number,PowerShellFar.UI,ExportDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\ExportDialog.cs,ExportDialog,The following statement contains a magic number: _File = _Dialog.AddEdit(x' y' 71' string.Empty);
Magic Number,PowerShellFar.UI,ExportDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\ExportDialog.cs,ExportDialog,The following statement contains a magic number: _Dialog.AddText(5' ++y' 0' "&Encoding");
Magic Number,PowerShellFar.UI,ExportDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\ExportDialog.cs,ExportDialog,The following statement contains a magic number: _Encoding = _Dialog.AddComboBox(x' y' 71' string.Empty);
Magic Number,PowerShellFar.UI,ExportDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\ExportDialog.cs,ExportDialog,The following statement contains a magic number: _Dialog.AddText(5' ++y' 0' "&Depth");
Magic Number,PowerShellFar.UI,ExportDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\ExportDialog.cs,ExportDialog,The following statement contains a magic number: _Depth = _Dialog.AddEdit(x' y' 71' string.Empty);
Magic Number,PowerShellFar.UI,ExportDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\ExportDialog.cs,ExportDialog,The following statement contains a magic number: _Dialog.AddText(5' ++y' 0' string.Empty).Separator = 1;
Magic Number,PowerShellFar.UI,InputBoxEx,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\InputBoxEx.cs,Show,The following statement contains a magic number: int w = Far.Api.UI.WindowSize.X - 7;
Magic Number,PowerShellFar.UI,InputBoxEx,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\InputBoxEx.cs,Show,The following statement contains a magic number: int h = 5 + promptLines.Length;
Magic Number,PowerShellFar.UI,InputBoxEx,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\InputBoxEx.cs,Show,The following statement contains a magic number: dialog.AddBox(3' 1' w - 4' h - 2' Title);
Magic Number,PowerShellFar.UI,InputBoxEx,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\InputBoxEx.cs,Show,The following statement contains a magic number: dialog.AddBox(3' 1' w - 4' h - 2' Title);
Magic Number,PowerShellFar.UI,InputBoxEx,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\InputBoxEx.cs,Show,The following statement contains a magic number: dialog.AddBox(3' 1' w - 4' h - 2' Title);
Magic Number,PowerShellFar.UI,InputBoxEx,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\InputBoxEx.cs,Show,The following statement contains a magic number: promptTexts[i] = dialog.AddText(5' -1' w - 6' promptLines[i]);
Magic Number,PowerShellFar.UI,InputBoxEx,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\InputBoxEx.cs,Show,The following statement contains a magic number: promptTexts[i] = dialog.AddText(5' -1' w - 6' promptLines[i]);
Magic Number,PowerShellFar.UI,InputBoxEx,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\InputBoxEx.cs,Show,The following statement contains a magic number: edit = dialog.AddEditPassword(5' -1' w - 6' Text);
Magic Number,PowerShellFar.UI,InputBoxEx,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\InputBoxEx.cs,Show,The following statement contains a magic number: edit = dialog.AddEditPassword(5' -1' w - 6' Text);
Magic Number,PowerShellFar.UI,InputDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\InputDialog.cs,Show,The following statement contains a magic number: int w = Far.Api.UI.WindowSize.X - 7;
Magic Number,PowerShellFar.UI,InputDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\InputDialog.cs,Show,The following statement contains a magic number: int h = 5 + Prompt.Count;
Magic Number,PowerShellFar.UI,InputDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\InputDialog.cs,Show,The following statement contains a magic number: uiDialog.AddBox(3' 1' w - 4' h - 2' Title);
Magic Number,PowerShellFar.UI,InputDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\InputDialog.cs,Show,The following statement contains a magic number: uiDialog.AddBox(3' 1' w - 4' h - 2' Title);
Magic Number,PowerShellFar.UI,InputDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\InputDialog.cs,Show,The following statement contains a magic number: uiDialog.AddBox(3' 1' w - 4' h - 2' Title);
Magic Number,PowerShellFar.UI,InputDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\InputDialog.cs,Show,The following statement contains a magic number: uiPrompt.Add(uiDialog.AddText(5' -1' w - 6' s));
Magic Number,PowerShellFar.UI,InputDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\InputDialog.cs,Show,The following statement contains a magic number: uiPrompt.Add(uiDialog.AddText(5' -1' w - 6' s));
Magic Number,PowerShellFar.UI,InputDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\InputDialog.cs,Show,The following statement contains a magic number: var uiEdit = uiDialog.AddEdit(5' -1' w - 6' string.Empty);
Magic Number,PowerShellFar.UI,InputDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\InputDialog.cs,Show,The following statement contains a magic number: var uiEdit = uiDialog.AddEdit(5' -1' w - 6' string.Empty);
Magic Number,PowerShellFar.UI,NewValueDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\NewValueDialog.cs,NewValueDialog,The following statement contains a magic number: Dialog = Far.Api.CreateDialog(-1' -1' 77' 9);
Magic Number,PowerShellFar.UI,NewValueDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\NewValueDialog.cs,NewValueDialog,The following statement contains a magic number: Dialog = Far.Api.CreateDialog(-1' -1' 77' 9);
Magic Number,PowerShellFar.UI,NewValueDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\NewValueDialog.cs,NewValueDialog,The following statement contains a magic number: Dialog.AddBox(3' 1' 0' 0' title);
Magic Number,PowerShellFar.UI,NewValueDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\NewValueDialog.cs,NewValueDialog,The following statement contains a magic number: int x = 11;
Magic Number,PowerShellFar.UI,NewValueDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\NewValueDialog.cs,NewValueDialog,The following statement contains a magic number: Dialog.AddText(5' -1' 0' "&Name");
Magic Number,PowerShellFar.UI,NewValueDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\NewValueDialog.cs,NewValueDialog,The following statement contains a magic number: Name = Dialog.AddEdit(x' 0' 71' string.Empty);
Magic Number,PowerShellFar.UI,NewValueDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\NewValueDialog.cs,NewValueDialog,The following statement contains a magic number: Dialog.AddText(5' -1' 0' "&Type");
Magic Number,PowerShellFar.UI,NewValueDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\NewValueDialog.cs,NewValueDialog,The following statement contains a magic number: Type = Dialog.AddEdit(x' 0' 71' string.Empty);
Magic Number,PowerShellFar.UI,NewValueDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\NewValueDialog.cs,NewValueDialog,The following statement contains a magic number: Dialog.AddText(5' -1' 0' "&Value");
Magic Number,PowerShellFar.UI,NewValueDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\NewValueDialog.cs,NewValueDialog,The following statement contains a magic number: Value = Dialog.AddEdit(x' 0' 71' string.Empty);
Magic Number,PowerShellFar.UI,NewValueDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\NewValueDialog.cs,NewValueDialog,The following statement contains a magic number: Dialog.AddText(5' -1' 0' string.Empty).Separator = 1;
Magic Number,PowerShellFar.UI,SelectMenu,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\SelectMenu.cs,SelectDrive,The following statement contains a magic number: int i = extras ? 2 : -1;
Magic Number,PowerShellFar.UI,SelectMenu,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\SelectMenu.cs,SelectShare,The following statement contains a magic number: return values[2 * m.Selected].ToString();
Missing Default,PowerShellFar,Interactive,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Interactive.cs,Interactive,The following switch statement is missing a default case: switch (mode)  			{  				case 0:  					OpenMainSession();  					break;  				case 1:  					OpenLocalSession();  					break;  				case 2:  					OpenRemoteSession();  					break;  			}
Missing Default,PowerShellFar,Interactive,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Interactive.cs,KeyPressed,The following switch statement is missing a default case: switch (key.VirtualKeyCode)  			{  				case KeyCode.Tab:  					{  						if (key.Is())  						{  							if (CommandArea() != null && EditorKit.NeedsTabExpansion(Editor))  							{  								InitTabExpansion();  								EditorKit.ExpandCode(currentLine' Runspace);  								Editor.Redraw();  								return true;  							}  						}  						break;  					}  				case KeyCode.F1:  					{  						if (key.IsShift())  						{  							Help.ShowHelpForContext();  							return true;  						}  						break;  					}  			}
Missing Default,PowerShellFar,EditorKit,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\EditorKit.cs,OnKeyDownPSFile,The following switch statement is missing a default case: switch (e.Key.VirtualKeyCode)  			{  				case KeyCode.F1:  					{  						if (e.Key.IsShift())  						{  							// [ShiftF1]  							e.Ignore = true;  							Help.ShowHelpForContext();  						}  						return;  					}  				case KeyCode.F5:  					{  						if (e.Key.Is())  						{  							// [F5]  							e.Ignore = true;  							InvokeScriptBeingEdited(editor);  						}  						return;  					}  				case KeyCode.Tab:  					{  						if (e.Key.Is())  						{  							// [Tab]  							if (!editor.SelectionExists && NeedsTabExpansion(editor))  							{  								// TabExpansion  								e.Ignore = true;  								A.Psf.ExpandCode(editor.Line);  								editor.Redraw();  							}  						}  						return;  					}  			}
Missing Default,PowerShellFar,Format,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Format.cs,SetupMetas,The following switch statement is missing a default case: switch (meta.Kind[0])  				{  					case 'N':  						{  							if (!availableColumnTypes.Remove("N"))  								throw new InvalidOperationException("Column 'N' is used twice.");  						}  						break;  					case 'O':  						{  							if (!availableColumnTypes.Remove("O"))  								throw new InvalidOperationException("Column 'O' is used twice.");  						}  						break;  					case 'Z':  						{  							if (!availableColumnTypes.Remove("Z"))  								throw new InvalidOperationException("Column 'Z' is used twice.");  						}  						break;  					case 'C':  						{  							if (meta.Kind.Length < 2)  								throw new InvalidOperationException(Res.InvalidColumnKind + "C");    							if (iCustom != (int)(meta.Kind[1] - '0'))  								throw new InvalidOperationException(Res.InvalidColumnKind + meta.Kind + ". Expected: C" + iCustom);    							availableColumnTypes.Remove(meta.Kind.Substring(0' 2));  							++iCustom;  						}  						break;  				}
Missing Default,PowerShellFar,AnyPanel,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Panels\AnyPanelSet.cs,UIKeyPressed,The following switch statement is missing a default case: switch (key.VirtualKeyCode)  				{  					case KeyCode.Enter:    						if (key.Is())  						{  							FarFile file = CurrentFile;  							if (file == null)  								break;    							UserWants = UserAction.Enter;    							if (file.IsDirectory && !IgnoreDirectoryFlag)  								break;    							UIOpenFile(file);  							return true;  						}    						if (key.IsShift())  						{  							UIAttributes();  							return true;  						}    						break;    					case KeyCode.F1:    						if (key.Is())  						{  							UIHelp();  							return true;  						}    						break;    					case KeyCode.F3:    						if (key.Is())  						{  							if (CurrentFile == null)  							{  								UIViewAll();  								return true;  							}  							break;  						}    						if (key.IsShift())  						{  							ShowMenu();  							return true;  						}    						break;    					case KeyCode.PageDown:    						if (key.IsCtrl())  						{  							UIOpenFileMembers();  							return true;  						}    						break;    					case KeyCode.A:    						if (key.IsCtrl())  						{  							UIAttributes();  							return true;  						}    						break;    					case KeyCode.G:    						if (key.IsCtrl())  						{  							UIApply();  							return true;  						}    						break;    					case KeyCode.M:    						if (key.IsCtrlShift())  						{  							UIMode();  							return true;  						}    						break;    					case KeyCode.S:    						//! Mantis#2635 Ignore if auto-completion menu is opened  						if (key.IsCtrl() && Far.Api.Window.Kind != WindowKind.Menu)  						{  							SaveData();  							return true;  						}    						break;  				}
Missing Default,PowerShellFar,Entry,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Entry.cs,Interop,The following switch statement is missing a default case: switch (command)  			{  				case "InvokeScriptArguments":  					return new Func<string' object[]' object[]>(delegate (string script' object[] arguments)  					{  						var r = A.InvokeCode(script' arguments);  						return r.Select(x => x?.BaseObject).ToArray();  					});  				case "Stepper":  					return new Action<string' Action<Exception>>(delegate (string path' Action<Exception> result)  					{  						var stepper = new Stepper();  						stepper.AddFile(path);  						stepper.Go(result);  					});  			}
Missing Default,PowerShellFar,A,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\A.cs,FindTableControl,The following switch statement is missing a default case: switch (typeName)  			{  				case "System.Management.Automation.PSCustomObject": return null;    				case "System.IO.FileSystemInfo": typeName = "FileSystemTypes"; break;  				case "System.IO.DirectoryInfo": typeName = "FileSystemTypes"; break;  				case "System.IO.FileInfo": typeName = "FileSystemTypes"; break;    				case "System.Management.Automation.Breakpoint": typeName = "BreakpointTypes"; break;  				case "System.Management.Automation.LineBreakpoint": typeName = "BreakpointTypes"; break;  				case "System.Management.Automation.CommandBreakpoint": typeName = "BreakpointTypes"; break;  				case "System.Management.Automation.VariableBreakpoint": typeName = "BreakpointTypes"; break;  			}
Missing Default,PowerShellFar,Converter,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Converter.cs,ParseBoolean,The following switch statement is missing a default case: switch (value)  			{  				case "0": return false;  				case "1": return true;  			}
Missing Default,PowerShellFar,Converter,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Converter.cs,InfoToLine,The following switch statement is missing a default case: switch (info.TypeNameOfValue)  			{  				// popular primitives  				case "System.String": return string.Empty;  				case "System.Boolean": return "False";  				case "System.DateTime": return ValueToLine(DateTime.Now);  				case "System.Double": return "0";  				case "System.Int32": return "0";  				case "System.Int64": return "0";  				case "System.Guid": return Guid.NewGuid().ToString();  				case "System.TimeSpan": return "00:00:00";    				//! object via string  				case "":  					return string.Empty;  				case "System.Object":  					return string.Empty;    				// other primitives  				case "System.Byte": return "0";  				case "System.Char": return string.Empty;  				case "System.Decimal": return "0";  				case "System.Int16": return "0";  				case "System.SByte": return "0";  				case "System.Single": return "0";  				case "System.UInt16": return "0";  				case "System.UInt32": return "0";  				case "System.UInt64": return "0";  			}
Missing Default,PowerShellFar,Converter,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Converter.cs,Parse,The following switch statement is missing a default case: switch (info.TypeNameOfValue)  					{  						// popular  						case "System.String": return s;  						case "System.Boolean": return ParseBoolean(s);  						case "System.DateTime": return DateTime.Parse(s' CultureInfo.CurrentCulture);  						case "System.Double": return double.Parse(s' CultureInfo.InvariantCulture);  						case "System.Int32": return int.Parse(s' CultureInfo.InvariantCulture);  						case "System.Int64": return long.Parse(s' CultureInfo.InvariantCulture);  						case "System.Guid": return new Guid(s);  						case "System.TimeSpan": return TimeSpan.Parse(s); // CA but missing in v3.5    						//! object via string  						case "":  							return s;  						case "System.Object":  							return s;    						// others  						case "System.Byte": return byte.Parse(s' CultureInfo.InvariantCulture);  						case "System.Char": return char.Parse(s);  						case "System.Decimal": return decimal.Parse(s' CultureInfo.InvariantCulture);  						case "System.Int16": return short.Parse(s' CultureInfo.InvariantCulture);  						case "System.SByte": return sbyte.Parse(s' CultureInfo.InvariantCulture);  						case "System.Single": return float.Parse(s' CultureInfo.InvariantCulture);  						case "System.UInt16": return ushort.Parse(s' CultureInfo.InvariantCulture);  						case "System.UInt32": return uint.Parse(s' CultureInfo.InvariantCulture);  						case "System.UInt64": return ulong.Parse(s' CultureInfo.InvariantCulture);  					}
Missing Default,PowerShellFar,Converter,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Converter.cs,Parse,The following switch statement is missing a default case: switch (info.TypeNameOfValue)  					{  						case "System.Byte[]":  							var aByte = new byte[list.Count];  							foreach (object o in list) aByte[i++] = byte.Parse(o.ToString()' CultureInfo.InvariantCulture);  							return aByte;  						case "System.String[]":  							var aString = new string[list.Count];  							foreach (object o in list) aString[i++] = o.ToString();  							return aString;  					}
Missing Default,PowerShellFar,History,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\History.cs,ShowHistory,The following switch statement is missing a default case: switch (Far.Api.Window.Kind)  			{  				case WindowKind.Panels:  					Far.Api.CommandLine.Text = Entry.CommandInvoke1.Prefix + ": " + code;  					return;  				case WindowKind.Editor:  					var editor = Far.Api.Editor;  					if (!(editor.Host is Interactive))  						break;  					editor.GoToEnd(true);  					editor.InsertText(code);  					editor.Redraw();  					return;  				case WindowKind.Dialog:  					var dialog = Far.Api.Dialog;  					var typeId = dialog.TypeId;  					if (typeId != UI.InputDialog.TypeId)  						break;  					var line = Far.Api.Line;  					if (line == null || line.IsReadOnly)  						break;  					line.Text = code;  					return;  			}
Missing Default,PowerShellFar,ListPanel,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Panels\ListPanel.cs,UIKeyPressed,The following switch statement is missing a default case: switch (key.VirtualKeyCode)  			{  				case KeyCode.Delete:  				case KeyCode.F8:    					if (key.IsShift())  					{  						UISetNulls();  						return true;  					}    					break;  			}
Missing Default,PowerShellFar,MemberPanel,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Panels\MemberPanel.cs,CanClose,The following switch statement is missing a default case: switch (Far.Api.Message(Res.AskSaveModified' "Save"' MessageOptions.YesNoCancel))  				{  					case 0:  						A.InvokeScriptReturnAsIs(AsSaveData' this);  						break;  					case 1:  						Modified = false;  						break;  				}
Missing Default,PowerShellFar,Job,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Job.cs,AsyncInvoke,The following switch statement is missing a default case: switch (PowerShell.InvocationStateInfo.State)  			{  				case PSInvocationState.Completed:  					if (IsHidden)  					{  						// OK: discard  						if (PowerShell.Streams.Error.Count == 0)  						{  							Dispose();  							return;  						}    						// KO: make it UI  						JobUI = new JobUI();  						JobList.Add(this);  						JobUI.HasError = true;  						A.WriteErrors(JobUI.GetWriter()' PowerShell.Streams.Error);  					}  					break;  				case PSInvocationState.Failed:    					// make UI for a hidden job' and (!) write not terminating errors first  					if (IsHidden)  					{  						JobUI = new JobUI();  						JobList.Add(this);  						A.WriteErrors(JobUI.GetWriter()' PowerShell.Streams.Error);  					}    					// UI  					if (JobUI != null)  					{  						JobUI.HasError = true;  						A.WriteException(JobUI.GetWriter()' PowerShell.InvocationStateInfo.Reason);  					}  					break;  			}
Missing Default,PowerShellFar,TreePanel,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Panels\TreePanel.cs,UIKeyPressed,The following switch statement is missing a default case: switch (key.VirtualKeyCode)  			{  				case KeyCode.LeftArrow:  					{  						if (!key.Is() && !key.IsAlt() || Far.Api.CommandLine.Length > 0)  							break;    						FarFile file = CurrentFile;  						if (file == null)  							break;    						TreeFile node = (TreeFile)file;  						if (node._State == 1)  						{  							// reset  							if (key.IsAlt())  							{  								node.ChildFiles.Clear();  								node._State = 0;  								UpdateRedraw(false);  								return true;  							}    							// collapse  							OpenFile(file);  						}  						else if (node.Parent != null)  						{  							PostFile(node.Parent);  							Redraw();  						}    						return true;  					}  				case KeyCode.RightArrow:  					{  						if (!key.Is() && !key.IsAlt() || Far.Api.CommandLine.Length > 0)  							break;    						FarFile file = CurrentFile;  						if (file == null)  							break;    						TreeFile node = (TreeFile)file;  						if (node != null && node._State != 1 && node.IsNode)  						{  							// reset  							if (key.IsAlt())  							{  								node.ChildFiles.Clear();  								node._State = 0;  							}    							// open  							OpenFile(file);  						}  						else  						{  							// go to next  							Redraw(CurrentIndex + 1' -1);  						}    						return true;  					}  			}
Missing Default,PowerShellFar.Commands,AssertFarCommand,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Commands\AssertFarCommand.cs,Fail,The following switch statement is missing a default case: switch (buttons[result])  				{  					case BtnBreak:  						{  							throw new PipelineStoppedException();  						}  					case BtnThrow:  						{  							throw new PSInvalidOperationException(body);  						}  					case BtnDebug:  						{  							A.InvokeCode("Set-PSBreakpoint -Variable daf01ff6-f004-43bd-b6bf-cf481e9333d3 -Mode Read");  							SessionState.PSVariable.Set("daf01ff6-f004-43bd-b6bf-cf481e9333d3"' null);  							GetVariableValue("daf01ff6-f004-43bd-b6bf-cf481e9333d3");  							return;  						}  					case BtnEdit:  						{  							IEditor editor = Far.Api.CreateEditor();  							editor.FileName = MyInvocation.ScriptName;  							editor.GoToLine(MyInvocation.ScriptLineNumber - 1);  							editor.Open();  							goto case BtnBreak;  						}  				}
Missing Default,PowerShellFar.Commands,ShowFarMessageCommand,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\Commands\ShowFarMessageCommand.cs,BeginProcessing,The following switch statement is missing a default case: switch (Buttons)  				{  					case ButtonSet.AbortRetryIgnore: options |= MessageOptions.AbortRetryIgnore; break;  					case ButtonSet.OkCancel: options |= MessageOptions.OkCancel; break;  					case ButtonSet.RetryCancel: options |= MessageOptions.RetryCancel; break;  					case ButtonSet.YesNo: options |= MessageOptions.YesNo; break;  					case ButtonSet.YesNoCancel: options |= MessageOptions.YesNoCancel; break;  				}
Missing Default,PowerShellFar.UI,BreakpointDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\BreakpointDialog.cs,BreakpointDialog,The following switch statement is missing a default case: switch (type)  			{  				case 0:  					if (line > 0)  						UIMatter.Text = Kit.ToString(line);  					break;  				case 1:  					UIMatter.History = Res.HistoryCommand;  					UIMatter.UseLastHistory = true;  					break;  				case 2:  					UIMatter.History = Res.HistoryVariable;  					UIMatter.UseLastHistory = true;  					break;  			}
Missing Default,PowerShellFar.UI,DebuggerDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\DebuggerDialog.cs,Show,The following switch statement is missing a default case: switch (_LastAction)  			{  				case DebuggerResumeAction.StepInto: _Dialog.Focused = _Step; break;  				case DebuggerResumeAction.StepOver: _Dialog.Focused = _Over; break;  			}
Missing Default,PowerShellFar.UI,InputBoxEx,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\InputBoxEx.cs,Show,The following switch statement is missing a default case: switch (e.Key.VirtualKeyCode)  					{  						case KeyCode.Tab:  							e.Ignore = true;  							CompleteWord(edit.Line' GetWords());  							return;  					}
Missing Default,PowerShellFar.UI,InputDialog,D:\research\architectureSmells\repos\nightroman_FarNet\PowerShellFar\UI\InputDialog.cs,Show,The following switch statement is missing a default case: switch (e.Key.VirtualKeyCode)  				{  					case KeyCode.Tab:  						e.Ignore = true;  						EditorKit.ExpandCode(uiEdit.Line' null);  						break;  					case KeyCode.F1:  						e.Ignore = true;  						Help.ShowHelpForContext("InvokeCommandsDialog");  						break;  				}
