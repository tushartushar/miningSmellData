Implementation smell,Namespace,Class,File,Method,Description
Complex Method,FarNet.Explore,Parser,D:\research\architectureSmells\repos\nightroman_FarNet\Explore\Parser.cs,Tokenize,Cyclomatic complexity of the method is 13
Complex Method,FarNet.Explore,TheCommand,D:\research\architectureSmells\repos\nightroman_FarNet\Explore\TheCommand.cs,Invoke,Cyclomatic complexity of the method is 16
Magic Number,FarNet.Explore,Parser,D:\research\architectureSmells\repos\nightroman_FarNet\Explore\Parser.cs,Tokenize,The following statement contains a magic number: n < 33
Missing Default,FarNet.Explore,TheCommand,D:\research\architectureSmells\repos\nightroman_FarNet\Explore\TheCommand.cs,Invoke,The following switch statement is missing a default case: switch (parameter)  				{  					case "-XPath":  						{  							search.XPath = tokens[iToken + 1];  							if (search.XPath.Length == 0)  								throw new ModuleException("Invalid -XPath.");  							iToken = tokens.Count;  							break;  						}  					case "-XFile":  						{  							if (++iToken >= token.Length) throw new ModuleException("Invalid -XFile.");  							search.XFile = tokens[iToken];  							break;  						}  					case "-Depth":  						{  							if (++iToken >= token.Length) throw new ModuleException("Invalid -Depth.");  							search.Depth = int.Parse(tokens[iToken]);  							break;  						}  					case "-Directory":  						{  							search.Directory = true;  							break;  						}  					case "-Recurse":  						{  							search.Recurse = true;  							break;  						}  					case "-Asynchronous":  						{  							async = true;  							break;  						}  				}
