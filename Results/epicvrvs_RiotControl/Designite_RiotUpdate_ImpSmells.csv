Implementation smell,Namespace,Class,File,Method,Description
Long Statement,RiotUpdate,Program,C:\repos\epicvrvs_RiotControl\RiotUpdate\Program.cs,Main,The length of the statement  "				Console.WriteLine("<update directory> <list of regular expressions that match the names of files that need to be updated' separated by semicolons> <optional: application to launch after update>"); " is 196.
Magic Number,RiotUpdate,Program,C:\repos\epicvrvs_RiotControl\RiotUpdate\Program.cs,ApplyUpdate,The following statement contains a magic number: foreach (var file in directory.GetFiles())  			{  				bool isAMatch = false;  				foreach (var filter in filters)  				{  					var match = filter.Match(file.Name);  					if (match.Success)  					{  						isAMatch = true;  						break;  					}  				}  				if (isAMatch)  				{  					Console.WriteLine("Updating {0}"' file.Name);  					Exception lastException = null;  					for (int i = 0; i < 10; i++)  					{  						try  						{  							File.Delete(file.Name);  							File.Copy(file.FullName' file.Name);  							File.Delete(file.FullName);  							lastException = null;  							break;  						}  						catch (Exception exception)  						{  							lastException = exception;  							Thread.Sleep(300);  						}  					}  					if (lastException != null)  						throw lastException;  				}  				else  					Console.WriteLine("Ignoring {0}"' file.Name);  			}
Magic Number,RiotUpdate,Program,C:\repos\epicvrvs_RiotControl\RiotUpdate\Program.cs,ApplyUpdate,The following statement contains a magic number: foreach (var file in directory.GetFiles())  			{  				bool isAMatch = false;  				foreach (var filter in filters)  				{  					var match = filter.Match(file.Name);  					if (match.Success)  					{  						isAMatch = true;  						break;  					}  				}  				if (isAMatch)  				{  					Console.WriteLine("Updating {0}"' file.Name);  					Exception lastException = null;  					for (int i = 0; i < 10; i++)  					{  						try  						{  							File.Delete(file.Name);  							File.Copy(file.FullName' file.Name);  							File.Delete(file.FullName);  							lastException = null;  							break;  						}  						catch (Exception exception)  						{  							lastException = exception;  							Thread.Sleep(300);  						}  					}  					if (lastException != null)  						throw lastException;  				}  				else  					Console.WriteLine("Ignoring {0}"' file.Name);  			}
Magic Number,RiotUpdate,Program,C:\repos\epicvrvs_RiotControl\RiotUpdate\Program.cs,Main,The following statement contains a magic number: if (arguments.Length < 2)  			{  				Console.WriteLine("Usage:");  				Console.WriteLine("<update directory> <list of regular expressions that match the names of files that need to be updated' separated by semicolons> <optional: application to launch after update>");  				Console.ReadLine();  				return;  			}
Magic Number,RiotUpdate,Program,C:\repos\epicvrvs_RiotControl\RiotUpdate\Program.cs,Main,The following statement contains a magic number: if (arguments.Length >= 3)  				application = arguments[2];  			else  				application = null;
Magic Number,RiotUpdate,Program,C:\repos\epicvrvs_RiotControl\RiotUpdate\Program.cs,Main,The following statement contains a magic number: if (arguments.Length >= 3)  				application = arguments[2];  			else  				application = null;
