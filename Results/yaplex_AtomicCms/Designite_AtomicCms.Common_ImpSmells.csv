Implementation smell,Namespace,Class,File,Method,Description
Long Method,AtomicCms.Common.Utils,SimpleHash,D:\newReposJune17\yaplex_AtomicCms\AtomicCms.Common\Utils\SimpleHash.cs,ComputeHash,The method has 66 lines of code.
Complex Method,AtomicCms.Common.Utils,SimpleHash,D:\newReposJune17\yaplex_AtomicCms\AtomicCms.Common\Utils\SimpleHash.cs,VerifyHash,Cyclomatic complexity of the method is 20
Complex Method,AtomicCms.Common.Utils,SimpleHash,D:\newReposJune17\yaplex_AtomicCms\AtomicCms.Common\Utils\SimpleHash.cs,ComputeHash,Cyclomatic complexity of the method is 27
Magic Number,AtomicCms.Common.Extensions,TagCountExtensions,D:\newReposJune17\yaplex_AtomicCms\AtomicCms.Common\Extensions\TagCountExtensions.cs,GetTagClass,The following statement contains a magic number: if (result <= 3)  	return "tag1";  
Magic Number,AtomicCms.Common.Extensions,TagCountExtensions,D:\newReposJune17\yaplex_AtomicCms\AtomicCms.Common\Extensions\TagCountExtensions.cs,GetTagClass,The following statement contains a magic number: if (result <= 8)  	return "tag2";  
Magic Number,AtomicCms.Common.Extensions,TagCountExtensions,D:\newReposJune17\yaplex_AtomicCms\AtomicCms.Common\Extensions\TagCountExtensions.cs,GetTagClass,The following statement contains a magic number: if (result <= 15)  	return "tag3";  
Magic Number,AtomicCms.Common.Extensions,TagCountExtensions,D:\newReposJune17\yaplex_AtomicCms\AtomicCms.Common\Extensions\TagCountExtensions.cs,GetTagClass,The following statement contains a magic number: if (result <= 20)  	return "tag4";  
Magic Number,AtomicCms.Common.Extensions,TagCountExtensions,D:\newReposJune17\yaplex_AtomicCms\AtomicCms.Common\Extensions\TagCountExtensions.cs,GetTagClass,The following statement contains a magic number: if (result <= 30)  	return "tag5";  
Magic Number,AtomicCms.Common.Extensions,TagCountExtensions,D:\newReposJune17\yaplex_AtomicCms\AtomicCms.Common\Extensions\TagCountExtensions.cs,GetTagClass,The following statement contains a magic number: if (result <= 45)  	return "tag6";  
Magic Number,AtomicCms.Common.Utils,SimpleHash,D:\newReposJune17\yaplex_AtomicCms\AtomicCms.Common\Utils\SimpleHash.cs,VerifyHash,The following statement contains a magic number: switch (hashAlgorithm) {  case Algorith.SHA1:  	hashSizeInBits = 160;  	break;  case Algorith.SHA256:  	hashSizeInBits = 256;  	break;  case Algorith.SHA384:  	hashSizeInBits = 384;  	break;  case Algorith.SHA512:  	hashSizeInBits = 512;  	break;  case Algorith.MD5:  	hashSizeInBits = 128;  	break;  default:  	// MD5  	hashSizeInBits = 128;  	break;  }  
Magic Number,AtomicCms.Common.Utils,SimpleHash,D:\newReposJune17\yaplex_AtomicCms\AtomicCms.Common\Utils\SimpleHash.cs,VerifyHash,The following statement contains a magic number: switch (hashAlgorithm) {  case Algorith.SHA1:  	hashSizeInBits = 160;  	break;  case Algorith.SHA256:  	hashSizeInBits = 256;  	break;  case Algorith.SHA384:  	hashSizeInBits = 384;  	break;  case Algorith.SHA512:  	hashSizeInBits = 512;  	break;  case Algorith.MD5:  	hashSizeInBits = 128;  	break;  default:  	// MD5  	hashSizeInBits = 128;  	break;  }  
Magic Number,AtomicCms.Common.Utils,SimpleHash,D:\newReposJune17\yaplex_AtomicCms\AtomicCms.Common\Utils\SimpleHash.cs,VerifyHash,The following statement contains a magic number: switch (hashAlgorithm) {  case Algorith.SHA1:  	hashSizeInBits = 160;  	break;  case Algorith.SHA256:  	hashSizeInBits = 256;  	break;  case Algorith.SHA384:  	hashSizeInBits = 384;  	break;  case Algorith.SHA512:  	hashSizeInBits = 512;  	break;  case Algorith.MD5:  	hashSizeInBits = 128;  	break;  default:  	// MD5  	hashSizeInBits = 128;  	break;  }  
Magic Number,AtomicCms.Common.Utils,SimpleHash,D:\newReposJune17\yaplex_AtomicCms\AtomicCms.Common\Utils\SimpleHash.cs,VerifyHash,The following statement contains a magic number: switch (hashAlgorithm) {  case Algorith.SHA1:  	hashSizeInBits = 160;  	break;  case Algorith.SHA256:  	hashSizeInBits = 256;  	break;  case Algorith.SHA384:  	hashSizeInBits = 384;  	break;  case Algorith.SHA512:  	hashSizeInBits = 512;  	break;  case Algorith.MD5:  	hashSizeInBits = 128;  	break;  default:  	// MD5  	hashSizeInBits = 128;  	break;  }  
Magic Number,AtomicCms.Common.Utils,SimpleHash,D:\newReposJune17\yaplex_AtomicCms\AtomicCms.Common\Utils\SimpleHash.cs,VerifyHash,The following statement contains a magic number: switch (hashAlgorithm) {  case Algorith.SHA1:  	hashSizeInBits = 160;  	break;  case Algorith.SHA256:  	hashSizeInBits = 256;  	break;  case Algorith.SHA384:  	hashSizeInBits = 384;  	break;  case Algorith.SHA512:  	hashSizeInBits = 512;  	break;  case Algorith.MD5:  	hashSizeInBits = 128;  	break;  default:  	// MD5  	hashSizeInBits = 128;  	break;  }  
Magic Number,AtomicCms.Common.Utils,SimpleHash,D:\newReposJune17\yaplex_AtomicCms\AtomicCms.Common\Utils\SimpleHash.cs,VerifyHash,The following statement contains a magic number: switch (hashAlgorithm) {  case Algorith.SHA1:  	hashSizeInBits = 160;  	break;  case Algorith.SHA256:  	hashSizeInBits = 256;  	break;  case Algorith.SHA384:  	hashSizeInBits = 384;  	break;  case Algorith.SHA512:  	hashSizeInBits = 512;  	break;  case Algorith.MD5:  	hashSizeInBits = 128;  	break;  default:  	// MD5  	hashSizeInBits = 128;  	break;  }  
Magic Number,AtomicCms.Common.Utils,SimpleHash,D:\newReposJune17\yaplex_AtomicCms\AtomicCms.Common\Utils\SimpleHash.cs,VerifyHash,The following statement contains a magic number: hashSizeInBits = 160;  
Magic Number,AtomicCms.Common.Utils,SimpleHash,D:\newReposJune17\yaplex_AtomicCms\AtomicCms.Common\Utils\SimpleHash.cs,VerifyHash,The following statement contains a magic number: hashSizeInBits = 256;  
Magic Number,AtomicCms.Common.Utils,SimpleHash,D:\newReposJune17\yaplex_AtomicCms\AtomicCms.Common\Utils\SimpleHash.cs,VerifyHash,The following statement contains a magic number: hashSizeInBits = 384;  
Magic Number,AtomicCms.Common.Utils,SimpleHash,D:\newReposJune17\yaplex_AtomicCms\AtomicCms.Common\Utils\SimpleHash.cs,VerifyHash,The following statement contains a magic number: hashSizeInBits = 512;  
Magic Number,AtomicCms.Common.Utils,SimpleHash,D:\newReposJune17\yaplex_AtomicCms\AtomicCms.Common\Utils\SimpleHash.cs,VerifyHash,The following statement contains a magic number: hashSizeInBits = 128;  
Magic Number,AtomicCms.Common.Utils,SimpleHash,D:\newReposJune17\yaplex_AtomicCms\AtomicCms.Common\Utils\SimpleHash.cs,VerifyHash,The following statement contains a magic number: hashSizeInBits = 128;  
Magic Number,AtomicCms.Common.Utils,SimpleHash,D:\newReposJune17\yaplex_AtomicCms\AtomicCms.Common\Utils\SimpleHash.cs,ComputeHash,The following statement contains a magic number: if (saltBytes == null) {  	// Define min and max salt sizes.  	int minSaltSize = 4;  	int maxSaltSize = 8;  	// Generate a random number for the size of the salt.  	Random random = new Random ();  	int saltSize = random.Next (minSaltSize' maxSaltSize);  	// Allocate a byte array' which will hold the salt.  	saltBytes = new byte[saltSize];  	// Initialize a random number generator.  	RNGCryptoServiceProvider rng = new RNGCryptoServiceProvider ();  	// Fill the salt with cryptographically strong byte values.  	rng.GetNonZeroBytes (saltBytes);  }  
Magic Number,AtomicCms.Common.Utils,SimpleHash,D:\newReposJune17\yaplex_AtomicCms\AtomicCms.Common\Utils\SimpleHash.cs,ComputeHash,The following statement contains a magic number: if (saltBytes == null) {  	// Define min and max salt sizes.  	int minSaltSize = 4;  	int maxSaltSize = 8;  	// Generate a random number for the size of the salt.  	Random random = new Random ();  	int saltSize = random.Next (minSaltSize' maxSaltSize);  	// Allocate a byte array' which will hold the salt.  	saltBytes = new byte[saltSize];  	// Initialize a random number generator.  	RNGCryptoServiceProvider rng = new RNGCryptoServiceProvider ();  	// Fill the salt with cryptographically strong byte values.  	rng.GetNonZeroBytes (saltBytes);  }  
