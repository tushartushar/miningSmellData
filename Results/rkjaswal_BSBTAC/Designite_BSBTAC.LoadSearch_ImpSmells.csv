Implementation smell,Namespace,Class,File,Method,Description
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,OnStart,The following statement contains a magic number: Thread.Sleep (60 * 1000);  
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,OnStart,The following statement contains a magic number: Thread.Sleep (60 * 1000);  
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,LoadNewUploads,The following statement contains a magic number: try {  	UploadDetail upload;  	lock (this) {  		upload = _uow.Repository<UploadDetail> ().SqlQuery ("spGetNextUploadedFile").First ();  		/*                     upload = _uow.Repository<UploadDetail>().Query()                         .Get()                         .Where(u => u.Status == 1)                         .First();                      upload.Status = 2;                     upload.ObjectState = ObjectState.Modified;                     _uow.Repository<UploadDetail>().Update(upload);                     _uow.Save();                     */}  	var filename = upload.Filename;  	var path = @"C:\_Workspace\Projects\2012\BSBTAC\_Uploads\BSB\" + filename;  	var file = new StreamReader (path);  	string line = "";  	while ((line = file.ReadLine ()) != null) {  		try {  			SearchDefinition searchDefinition = new SearchDefinition ();  			string[] data = line.Split (''');  			if (data [0].Equals ("DebtCode")) {  				continue;  			}  			else {  				searchDefinition.UploadDetailId = upload.UploadDetailId;  				searchDefinition.DebtCode = Convert.ToInt32 (data [0]);  				searchDefinition.Title = data [1];  				searchDefinition.Forename = data [2];  				searchDefinition.Surname = data [3];  				searchDefinition.Othername = data [4];  				searchDefinition.DOB = Convert.ToDateTime (data [5]);  				searchDefinition.BuildingNo = data [6];  				searchDefinition.BuildingName = data [7];  				searchDefinition.Locality = data [8];  				searchDefinition.Sublocality = data [9];  				searchDefinition.Posttown = data [10];  				searchDefinition.Postcode = data [11];  				searchDefinition.Type = Convert.ToByte (upload.Type);  				searchDefinition.Status = Convert.ToByte (1);  				searchDefinition.LastUpdatedDatetime = DateTime.Now;  				searchDefinition.ObjectState = ObjectState.Added;  				_uow.Repository<SearchDefinition> ().Insert (searchDefinition);  				_uow.Save ();  			}  		}  		catch (Exception ex) {  			_log.Error (line + "-" + ex.Message);  			continue;  		}  	}  	file.Close ();  }  catch (EntityCommandExecutionException) {  	_log.Info ("No new uploads found");  }  catch (Exception ex) {  	_log.Error (ex.Message);  }  
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,LoadNewUploads,The following statement contains a magic number: try {  	UploadDetail upload;  	lock (this) {  		upload = _uow.Repository<UploadDetail> ().SqlQuery ("spGetNextUploadedFile").First ();  		/*                     upload = _uow.Repository<UploadDetail>().Query()                         .Get()                         .Where(u => u.Status == 1)                         .First();                      upload.Status = 2;                     upload.ObjectState = ObjectState.Modified;                     _uow.Repository<UploadDetail>().Update(upload);                     _uow.Save();                     */}  	var filename = upload.Filename;  	var path = @"C:\_Workspace\Projects\2012\BSBTAC\_Uploads\BSB\" + filename;  	var file = new StreamReader (path);  	string line = "";  	while ((line = file.ReadLine ()) != null) {  		try {  			SearchDefinition searchDefinition = new SearchDefinition ();  			string[] data = line.Split (''');  			if (data [0].Equals ("DebtCode")) {  				continue;  			}  			else {  				searchDefinition.UploadDetailId = upload.UploadDetailId;  				searchDefinition.DebtCode = Convert.ToInt32 (data [0]);  				searchDefinition.Title = data [1];  				searchDefinition.Forename = data [2];  				searchDefinition.Surname = data [3];  				searchDefinition.Othername = data [4];  				searchDefinition.DOB = Convert.ToDateTime (data [5]);  				searchDefinition.BuildingNo = data [6];  				searchDefinition.BuildingName = data [7];  				searchDefinition.Locality = data [8];  				searchDefinition.Sublocality = data [9];  				searchDefinition.Posttown = data [10];  				searchDefinition.Postcode = data [11];  				searchDefinition.Type = Convert.ToByte (upload.Type);  				searchDefinition.Status = Convert.ToByte (1);  				searchDefinition.LastUpdatedDatetime = DateTime.Now;  				searchDefinition.ObjectState = ObjectState.Added;  				_uow.Repository<SearchDefinition> ().Insert (searchDefinition);  				_uow.Save ();  			}  		}  		catch (Exception ex) {  			_log.Error (line + "-" + ex.Message);  			continue;  		}  	}  	file.Close ();  }  catch (EntityCommandExecutionException) {  	_log.Info ("No new uploads found");  }  catch (Exception ex) {  	_log.Error (ex.Message);  }  
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,LoadNewUploads,The following statement contains a magic number: try {  	UploadDetail upload;  	lock (this) {  		upload = _uow.Repository<UploadDetail> ().SqlQuery ("spGetNextUploadedFile").First ();  		/*                     upload = _uow.Repository<UploadDetail>().Query()                         .Get()                         .Where(u => u.Status == 1)                         .First();                      upload.Status = 2;                     upload.ObjectState = ObjectState.Modified;                     _uow.Repository<UploadDetail>().Update(upload);                     _uow.Save();                     */}  	var filename = upload.Filename;  	var path = @"C:\_Workspace\Projects\2012\BSBTAC\_Uploads\BSB\" + filename;  	var file = new StreamReader (path);  	string line = "";  	while ((line = file.ReadLine ()) != null) {  		try {  			SearchDefinition searchDefinition = new SearchDefinition ();  			string[] data = line.Split (''');  			if (data [0].Equals ("DebtCode")) {  				continue;  			}  			else {  				searchDefinition.UploadDetailId = upload.UploadDetailId;  				searchDefinition.DebtCode = Convert.ToInt32 (data [0]);  				searchDefinition.Title = data [1];  				searchDefinition.Forename = data [2];  				searchDefinition.Surname = data [3];  				searchDefinition.Othername = data [4];  				searchDefinition.DOB = Convert.ToDateTime (data [5]);  				searchDefinition.BuildingNo = data [6];  				searchDefinition.BuildingName = data [7];  				searchDefinition.Locality = data [8];  				searchDefinition.Sublocality = data [9];  				searchDefinition.Posttown = data [10];  				searchDefinition.Postcode = data [11];  				searchDefinition.Type = Convert.ToByte (upload.Type);  				searchDefinition.Status = Convert.ToByte (1);  				searchDefinition.LastUpdatedDatetime = DateTime.Now;  				searchDefinition.ObjectState = ObjectState.Added;  				_uow.Repository<SearchDefinition> ().Insert (searchDefinition);  				_uow.Save ();  			}  		}  		catch (Exception ex) {  			_log.Error (line + "-" + ex.Message);  			continue;  		}  	}  	file.Close ();  }  catch (EntityCommandExecutionException) {  	_log.Info ("No new uploads found");  }  catch (Exception ex) {  	_log.Error (ex.Message);  }  
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,LoadNewUploads,The following statement contains a magic number: try {  	UploadDetail upload;  	lock (this) {  		upload = _uow.Repository<UploadDetail> ().SqlQuery ("spGetNextUploadedFile").First ();  		/*                     upload = _uow.Repository<UploadDetail>().Query()                         .Get()                         .Where(u => u.Status == 1)                         .First();                      upload.Status = 2;                     upload.ObjectState = ObjectState.Modified;                     _uow.Repository<UploadDetail>().Update(upload);                     _uow.Save();                     */}  	var filename = upload.Filename;  	var path = @"C:\_Workspace\Projects\2012\BSBTAC\_Uploads\BSB\" + filename;  	var file = new StreamReader (path);  	string line = "";  	while ((line = file.ReadLine ()) != null) {  		try {  			SearchDefinition searchDefinition = new SearchDefinition ();  			string[] data = line.Split (''');  			if (data [0].Equals ("DebtCode")) {  				continue;  			}  			else {  				searchDefinition.UploadDetailId = upload.UploadDetailId;  				searchDefinition.DebtCode = Convert.ToInt32 (data [0]);  				searchDefinition.Title = data [1];  				searchDefinition.Forename = data [2];  				searchDefinition.Surname = data [3];  				searchDefinition.Othername = data [4];  				searchDefinition.DOB = Convert.ToDateTime (data [5]);  				searchDefinition.BuildingNo = data [6];  				searchDefinition.BuildingName = data [7];  				searchDefinition.Locality = data [8];  				searchDefinition.Sublocality = data [9];  				searchDefinition.Posttown = data [10];  				searchDefinition.Postcode = data [11];  				searchDefinition.Type = Convert.ToByte (upload.Type);  				searchDefinition.Status = Convert.ToByte (1);  				searchDefinition.LastUpdatedDatetime = DateTime.Now;  				searchDefinition.ObjectState = ObjectState.Added;  				_uow.Repository<SearchDefinition> ().Insert (searchDefinition);  				_uow.Save ();  			}  		}  		catch (Exception ex) {  			_log.Error (line + "-" + ex.Message);  			continue;  		}  	}  	file.Close ();  }  catch (EntityCommandExecutionException) {  	_log.Info ("No new uploads found");  }  catch (Exception ex) {  	_log.Error (ex.Message);  }  
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,LoadNewUploads,The following statement contains a magic number: try {  	UploadDetail upload;  	lock (this) {  		upload = _uow.Repository<UploadDetail> ().SqlQuery ("spGetNextUploadedFile").First ();  		/*                     upload = _uow.Repository<UploadDetail>().Query()                         .Get()                         .Where(u => u.Status == 1)                         .First();                      upload.Status = 2;                     upload.ObjectState = ObjectState.Modified;                     _uow.Repository<UploadDetail>().Update(upload);                     _uow.Save();                     */}  	var filename = upload.Filename;  	var path = @"C:\_Workspace\Projects\2012\BSBTAC\_Uploads\BSB\" + filename;  	var file = new StreamReader (path);  	string line = "";  	while ((line = file.ReadLine ()) != null) {  		try {  			SearchDefinition searchDefinition = new SearchDefinition ();  			string[] data = line.Split (''');  			if (data [0].Equals ("DebtCode")) {  				continue;  			}  			else {  				searchDefinition.UploadDetailId = upload.UploadDetailId;  				searchDefinition.DebtCode = Convert.ToInt32 (data [0]);  				searchDefinition.Title = data [1];  				searchDefinition.Forename = data [2];  				searchDefinition.Surname = data [3];  				searchDefinition.Othername = data [4];  				searchDefinition.DOB = Convert.ToDateTime (data [5]);  				searchDefinition.BuildingNo = data [6];  				searchDefinition.BuildingName = data [7];  				searchDefinition.Locality = data [8];  				searchDefinition.Sublocality = data [9];  				searchDefinition.Posttown = data [10];  				searchDefinition.Postcode = data [11];  				searchDefinition.Type = Convert.ToByte (upload.Type);  				searchDefinition.Status = Convert.ToByte (1);  				searchDefinition.LastUpdatedDatetime = DateTime.Now;  				searchDefinition.ObjectState = ObjectState.Added;  				_uow.Repository<SearchDefinition> ().Insert (searchDefinition);  				_uow.Save ();  			}  		}  		catch (Exception ex) {  			_log.Error (line + "-" + ex.Message);  			continue;  		}  	}  	file.Close ();  }  catch (EntityCommandExecutionException) {  	_log.Info ("No new uploads found");  }  catch (Exception ex) {  	_log.Error (ex.Message);  }  
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,LoadNewUploads,The following statement contains a magic number: try {  	UploadDetail upload;  	lock (this) {  		upload = _uow.Repository<UploadDetail> ().SqlQuery ("spGetNextUploadedFile").First ();  		/*                     upload = _uow.Repository<UploadDetail>().Query()                         .Get()                         .Where(u => u.Status == 1)                         .First();                      upload.Status = 2;                     upload.ObjectState = ObjectState.Modified;                     _uow.Repository<UploadDetail>().Update(upload);                     _uow.Save();                     */}  	var filename = upload.Filename;  	var path = @"C:\_Workspace\Projects\2012\BSBTAC\_Uploads\BSB\" + filename;  	var file = new StreamReader (path);  	string line = "";  	while ((line = file.ReadLine ()) != null) {  		try {  			SearchDefinition searchDefinition = new SearchDefinition ();  			string[] data = line.Split (''');  			if (data [0].Equals ("DebtCode")) {  				continue;  			}  			else {  				searchDefinition.UploadDetailId = upload.UploadDetailId;  				searchDefinition.DebtCode = Convert.ToInt32 (data [0]);  				searchDefinition.Title = data [1];  				searchDefinition.Forename = data [2];  				searchDefinition.Surname = data [3];  				searchDefinition.Othername = data [4];  				searchDefinition.DOB = Convert.ToDateTime (data [5]);  				searchDefinition.BuildingNo = data [6];  				searchDefinition.BuildingName = data [7];  				searchDefinition.Locality = data [8];  				searchDefinition.Sublocality = data [9];  				searchDefinition.Posttown = data [10];  				searchDefinition.Postcode = data [11];  				searchDefinition.Type = Convert.ToByte (upload.Type);  				searchDefinition.Status = Convert.ToByte (1);  				searchDefinition.LastUpdatedDatetime = DateTime.Now;  				searchDefinition.ObjectState = ObjectState.Added;  				_uow.Repository<SearchDefinition> ().Insert (searchDefinition);  				_uow.Save ();  			}  		}  		catch (Exception ex) {  			_log.Error (line + "-" + ex.Message);  			continue;  		}  	}  	file.Close ();  }  catch (EntityCommandExecutionException) {  	_log.Info ("No new uploads found");  }  catch (Exception ex) {  	_log.Error (ex.Message);  }  
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,LoadNewUploads,The following statement contains a magic number: try {  	UploadDetail upload;  	lock (this) {  		upload = _uow.Repository<UploadDetail> ().SqlQuery ("spGetNextUploadedFile").First ();  		/*                     upload = _uow.Repository<UploadDetail>().Query()                         .Get()                         .Where(u => u.Status == 1)                         .First();                      upload.Status = 2;                     upload.ObjectState = ObjectState.Modified;                     _uow.Repository<UploadDetail>().Update(upload);                     _uow.Save();                     */}  	var filename = upload.Filename;  	var path = @"C:\_Workspace\Projects\2012\BSBTAC\_Uploads\BSB\" + filename;  	var file = new StreamReader (path);  	string line = "";  	while ((line = file.ReadLine ()) != null) {  		try {  			SearchDefinition searchDefinition = new SearchDefinition ();  			string[] data = line.Split (''');  			if (data [0].Equals ("DebtCode")) {  				continue;  			}  			else {  				searchDefinition.UploadDetailId = upload.UploadDetailId;  				searchDefinition.DebtCode = Convert.ToInt32 (data [0]);  				searchDefinition.Title = data [1];  				searchDefinition.Forename = data [2];  				searchDefinition.Surname = data [3];  				searchDefinition.Othername = data [4];  				searchDefinition.DOB = Convert.ToDateTime (data [5]);  				searchDefinition.BuildingNo = data [6];  				searchDefinition.BuildingName = data [7];  				searchDefinition.Locality = data [8];  				searchDefinition.Sublocality = data [9];  				searchDefinition.Posttown = data [10];  				searchDefinition.Postcode = data [11];  				searchDefinition.Type = Convert.ToByte (upload.Type);  				searchDefinition.Status = Convert.ToByte (1);  				searchDefinition.LastUpdatedDatetime = DateTime.Now;  				searchDefinition.ObjectState = ObjectState.Added;  				_uow.Repository<SearchDefinition> ().Insert (searchDefinition);  				_uow.Save ();  			}  		}  		catch (Exception ex) {  			_log.Error (line + "-" + ex.Message);  			continue;  		}  	}  	file.Close ();  }  catch (EntityCommandExecutionException) {  	_log.Info ("No new uploads found");  }  catch (Exception ex) {  	_log.Error (ex.Message);  }  
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,LoadNewUploads,The following statement contains a magic number: try {  	UploadDetail upload;  	lock (this) {  		upload = _uow.Repository<UploadDetail> ().SqlQuery ("spGetNextUploadedFile").First ();  		/*                     upload = _uow.Repository<UploadDetail>().Query()                         .Get()                         .Where(u => u.Status == 1)                         .First();                      upload.Status = 2;                     upload.ObjectState = ObjectState.Modified;                     _uow.Repository<UploadDetail>().Update(upload);                     _uow.Save();                     */}  	var filename = upload.Filename;  	var path = @"C:\_Workspace\Projects\2012\BSBTAC\_Uploads\BSB\" + filename;  	var file = new StreamReader (path);  	string line = "";  	while ((line = file.ReadLine ()) != null) {  		try {  			SearchDefinition searchDefinition = new SearchDefinition ();  			string[] data = line.Split (''');  			if (data [0].Equals ("DebtCode")) {  				continue;  			}  			else {  				searchDefinition.UploadDetailId = upload.UploadDetailId;  				searchDefinition.DebtCode = Convert.ToInt32 (data [0]);  				searchDefinition.Title = data [1];  				searchDefinition.Forename = data [2];  				searchDefinition.Surname = data [3];  				searchDefinition.Othername = data [4];  				searchDefinition.DOB = Convert.ToDateTime (data [5]);  				searchDefinition.BuildingNo = data [6];  				searchDefinition.BuildingName = data [7];  				searchDefinition.Locality = data [8];  				searchDefinition.Sublocality = data [9];  				searchDefinition.Posttown = data [10];  				searchDefinition.Postcode = data [11];  				searchDefinition.Type = Convert.ToByte (upload.Type);  				searchDefinition.Status = Convert.ToByte (1);  				searchDefinition.LastUpdatedDatetime = DateTime.Now;  				searchDefinition.ObjectState = ObjectState.Added;  				_uow.Repository<SearchDefinition> ().Insert (searchDefinition);  				_uow.Save ();  			}  		}  		catch (Exception ex) {  			_log.Error (line + "-" + ex.Message);  			continue;  		}  	}  	file.Close ();  }  catch (EntityCommandExecutionException) {  	_log.Info ("No new uploads found");  }  catch (Exception ex) {  	_log.Error (ex.Message);  }  
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,LoadNewUploads,The following statement contains a magic number: try {  	UploadDetail upload;  	lock (this) {  		upload = _uow.Repository<UploadDetail> ().SqlQuery ("spGetNextUploadedFile").First ();  		/*                     upload = _uow.Repository<UploadDetail>().Query()                         .Get()                         .Where(u => u.Status == 1)                         .First();                      upload.Status = 2;                     upload.ObjectState = ObjectState.Modified;                     _uow.Repository<UploadDetail>().Update(upload);                     _uow.Save();                     */}  	var filename = upload.Filename;  	var path = @"C:\_Workspace\Projects\2012\BSBTAC\_Uploads\BSB\" + filename;  	var file = new StreamReader (path);  	string line = "";  	while ((line = file.ReadLine ()) != null) {  		try {  			SearchDefinition searchDefinition = new SearchDefinition ();  			string[] data = line.Split (''');  			if (data [0].Equals ("DebtCode")) {  				continue;  			}  			else {  				searchDefinition.UploadDetailId = upload.UploadDetailId;  				searchDefinition.DebtCode = Convert.ToInt32 (data [0]);  				searchDefinition.Title = data [1];  				searchDefinition.Forename = data [2];  				searchDefinition.Surname = data [3];  				searchDefinition.Othername = data [4];  				searchDefinition.DOB = Convert.ToDateTime (data [5]);  				searchDefinition.BuildingNo = data [6];  				searchDefinition.BuildingName = data [7];  				searchDefinition.Locality = data [8];  				searchDefinition.Sublocality = data [9];  				searchDefinition.Posttown = data [10];  				searchDefinition.Postcode = data [11];  				searchDefinition.Type = Convert.ToByte (upload.Type);  				searchDefinition.Status = Convert.ToByte (1);  				searchDefinition.LastUpdatedDatetime = DateTime.Now;  				searchDefinition.ObjectState = ObjectState.Added;  				_uow.Repository<SearchDefinition> ().Insert (searchDefinition);  				_uow.Save ();  			}  		}  		catch (Exception ex) {  			_log.Error (line + "-" + ex.Message);  			continue;  		}  	}  	file.Close ();  }  catch (EntityCommandExecutionException) {  	_log.Info ("No new uploads found");  }  catch (Exception ex) {  	_log.Error (ex.Message);  }  
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,LoadNewUploads,The following statement contains a magic number: try {  	UploadDetail upload;  	lock (this) {  		upload = _uow.Repository<UploadDetail> ().SqlQuery ("spGetNextUploadedFile").First ();  		/*                     upload = _uow.Repository<UploadDetail>().Query()                         .Get()                         .Where(u => u.Status == 1)                         .First();                      upload.Status = 2;                     upload.ObjectState = ObjectState.Modified;                     _uow.Repository<UploadDetail>().Update(upload);                     _uow.Save();                     */}  	var filename = upload.Filename;  	var path = @"C:\_Workspace\Projects\2012\BSBTAC\_Uploads\BSB\" + filename;  	var file = new StreamReader (path);  	string line = "";  	while ((line = file.ReadLine ()) != null) {  		try {  			SearchDefinition searchDefinition = new SearchDefinition ();  			string[] data = line.Split (''');  			if (data [0].Equals ("DebtCode")) {  				continue;  			}  			else {  				searchDefinition.UploadDetailId = upload.UploadDetailId;  				searchDefinition.DebtCode = Convert.ToInt32 (data [0]);  				searchDefinition.Title = data [1];  				searchDefinition.Forename = data [2];  				searchDefinition.Surname = data [3];  				searchDefinition.Othername = data [4];  				searchDefinition.DOB = Convert.ToDateTime (data [5]);  				searchDefinition.BuildingNo = data [6];  				searchDefinition.BuildingName = data [7];  				searchDefinition.Locality = data [8];  				searchDefinition.Sublocality = data [9];  				searchDefinition.Posttown = data [10];  				searchDefinition.Postcode = data [11];  				searchDefinition.Type = Convert.ToByte (upload.Type);  				searchDefinition.Status = Convert.ToByte (1);  				searchDefinition.LastUpdatedDatetime = DateTime.Now;  				searchDefinition.ObjectState = ObjectState.Added;  				_uow.Repository<SearchDefinition> ().Insert (searchDefinition);  				_uow.Save ();  			}  		}  		catch (Exception ex) {  			_log.Error (line + "-" + ex.Message);  			continue;  		}  	}  	file.Close ();  }  catch (EntityCommandExecutionException) {  	_log.Info ("No new uploads found");  }  catch (Exception ex) {  	_log.Error (ex.Message);  }  
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,LoadNewUploads,The following statement contains a magic number: while ((line = file.ReadLine ()) != null) {  	try {  		SearchDefinition searchDefinition = new SearchDefinition ();  		string[] data = line.Split (''');  		if (data [0].Equals ("DebtCode")) {  			continue;  		}  		else {  			searchDefinition.UploadDetailId = upload.UploadDetailId;  			searchDefinition.DebtCode = Convert.ToInt32 (data [0]);  			searchDefinition.Title = data [1];  			searchDefinition.Forename = data [2];  			searchDefinition.Surname = data [3];  			searchDefinition.Othername = data [4];  			searchDefinition.DOB = Convert.ToDateTime (data [5]);  			searchDefinition.BuildingNo = data [6];  			searchDefinition.BuildingName = data [7];  			searchDefinition.Locality = data [8];  			searchDefinition.Sublocality = data [9];  			searchDefinition.Posttown = data [10];  			searchDefinition.Postcode = data [11];  			searchDefinition.Type = Convert.ToByte (upload.Type);  			searchDefinition.Status = Convert.ToByte (1);  			searchDefinition.LastUpdatedDatetime = DateTime.Now;  			searchDefinition.ObjectState = ObjectState.Added;  			_uow.Repository<SearchDefinition> ().Insert (searchDefinition);  			_uow.Save ();  		}  	}  	catch (Exception ex) {  		_log.Error (line + "-" + ex.Message);  		continue;  	}  }  
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,LoadNewUploads,The following statement contains a magic number: while ((line = file.ReadLine ()) != null) {  	try {  		SearchDefinition searchDefinition = new SearchDefinition ();  		string[] data = line.Split (''');  		if (data [0].Equals ("DebtCode")) {  			continue;  		}  		else {  			searchDefinition.UploadDetailId = upload.UploadDetailId;  			searchDefinition.DebtCode = Convert.ToInt32 (data [0]);  			searchDefinition.Title = data [1];  			searchDefinition.Forename = data [2];  			searchDefinition.Surname = data [3];  			searchDefinition.Othername = data [4];  			searchDefinition.DOB = Convert.ToDateTime (data [5]);  			searchDefinition.BuildingNo = data [6];  			searchDefinition.BuildingName = data [7];  			searchDefinition.Locality = data [8];  			searchDefinition.Sublocality = data [9];  			searchDefinition.Posttown = data [10];  			searchDefinition.Postcode = data [11];  			searchDefinition.Type = Convert.ToByte (upload.Type);  			searchDefinition.Status = Convert.ToByte (1);  			searchDefinition.LastUpdatedDatetime = DateTime.Now;  			searchDefinition.ObjectState = ObjectState.Added;  			_uow.Repository<SearchDefinition> ().Insert (searchDefinition);  			_uow.Save ();  		}  	}  	catch (Exception ex) {  		_log.Error (line + "-" + ex.Message);  		continue;  	}  }  
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,LoadNewUploads,The following statement contains a magic number: while ((line = file.ReadLine ()) != null) {  	try {  		SearchDefinition searchDefinition = new SearchDefinition ();  		string[] data = line.Split (''');  		if (data [0].Equals ("DebtCode")) {  			continue;  		}  		else {  			searchDefinition.UploadDetailId = upload.UploadDetailId;  			searchDefinition.DebtCode = Convert.ToInt32 (data [0]);  			searchDefinition.Title = data [1];  			searchDefinition.Forename = data [2];  			searchDefinition.Surname = data [3];  			searchDefinition.Othername = data [4];  			searchDefinition.DOB = Convert.ToDateTime (data [5]);  			searchDefinition.BuildingNo = data [6];  			searchDefinition.BuildingName = data [7];  			searchDefinition.Locality = data [8];  			searchDefinition.Sublocality = data [9];  			searchDefinition.Posttown = data [10];  			searchDefinition.Postcode = data [11];  			searchDefinition.Type = Convert.ToByte (upload.Type);  			searchDefinition.Status = Convert.ToByte (1);  			searchDefinition.LastUpdatedDatetime = DateTime.Now;  			searchDefinition.ObjectState = ObjectState.Added;  			_uow.Repository<SearchDefinition> ().Insert (searchDefinition);  			_uow.Save ();  		}  	}  	catch (Exception ex) {  		_log.Error (line + "-" + ex.Message);  		continue;  	}  }  
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,LoadNewUploads,The following statement contains a magic number: while ((line = file.ReadLine ()) != null) {  	try {  		SearchDefinition searchDefinition = new SearchDefinition ();  		string[] data = line.Split (''');  		if (data [0].Equals ("DebtCode")) {  			continue;  		}  		else {  			searchDefinition.UploadDetailId = upload.UploadDetailId;  			searchDefinition.DebtCode = Convert.ToInt32 (data [0]);  			searchDefinition.Title = data [1];  			searchDefinition.Forename = data [2];  			searchDefinition.Surname = data [3];  			searchDefinition.Othername = data [4];  			searchDefinition.DOB = Convert.ToDateTime (data [5]);  			searchDefinition.BuildingNo = data [6];  			searchDefinition.BuildingName = data [7];  			searchDefinition.Locality = data [8];  			searchDefinition.Sublocality = data [9];  			searchDefinition.Posttown = data [10];  			searchDefinition.Postcode = data [11];  			searchDefinition.Type = Convert.ToByte (upload.Type);  			searchDefinition.Status = Convert.ToByte (1);  			searchDefinition.LastUpdatedDatetime = DateTime.Now;  			searchDefinition.ObjectState = ObjectState.Added;  			_uow.Repository<SearchDefinition> ().Insert (searchDefinition);  			_uow.Save ();  		}  	}  	catch (Exception ex) {  		_log.Error (line + "-" + ex.Message);  		continue;  	}  }  
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,LoadNewUploads,The following statement contains a magic number: while ((line = file.ReadLine ()) != null) {  	try {  		SearchDefinition searchDefinition = new SearchDefinition ();  		string[] data = line.Split (''');  		if (data [0].Equals ("DebtCode")) {  			continue;  		}  		else {  			searchDefinition.UploadDetailId = upload.UploadDetailId;  			searchDefinition.DebtCode = Convert.ToInt32 (data [0]);  			searchDefinition.Title = data [1];  			searchDefinition.Forename = data [2];  			searchDefinition.Surname = data [3];  			searchDefinition.Othername = data [4];  			searchDefinition.DOB = Convert.ToDateTime (data [5]);  			searchDefinition.BuildingNo = data [6];  			searchDefinition.BuildingName = data [7];  			searchDefinition.Locality = data [8];  			searchDefinition.Sublocality = data [9];  			searchDefinition.Posttown = data [10];  			searchDefinition.Postcode = data [11];  			searchDefinition.Type = Convert.ToByte (upload.Type);  			searchDefinition.Status = Convert.ToByte (1);  			searchDefinition.LastUpdatedDatetime = DateTime.Now;  			searchDefinition.ObjectState = ObjectState.Added;  			_uow.Repository<SearchDefinition> ().Insert (searchDefinition);  			_uow.Save ();  		}  	}  	catch (Exception ex) {  		_log.Error (line + "-" + ex.Message);  		continue;  	}  }  
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,LoadNewUploads,The following statement contains a magic number: while ((line = file.ReadLine ()) != null) {  	try {  		SearchDefinition searchDefinition = new SearchDefinition ();  		string[] data = line.Split (''');  		if (data [0].Equals ("DebtCode")) {  			continue;  		}  		else {  			searchDefinition.UploadDetailId = upload.UploadDetailId;  			searchDefinition.DebtCode = Convert.ToInt32 (data [0]);  			searchDefinition.Title = data [1];  			searchDefinition.Forename = data [2];  			searchDefinition.Surname = data [3];  			searchDefinition.Othername = data [4];  			searchDefinition.DOB = Convert.ToDateTime (data [5]);  			searchDefinition.BuildingNo = data [6];  			searchDefinition.BuildingName = data [7];  			searchDefinition.Locality = data [8];  			searchDefinition.Sublocality = data [9];  			searchDefinition.Posttown = data [10];  			searchDefinition.Postcode = data [11];  			searchDefinition.Type = Convert.ToByte (upload.Type);  			searchDefinition.Status = Convert.ToByte (1);  			searchDefinition.LastUpdatedDatetime = DateTime.Now;  			searchDefinition.ObjectState = ObjectState.Added;  			_uow.Repository<SearchDefinition> ().Insert (searchDefinition);  			_uow.Save ();  		}  	}  	catch (Exception ex) {  		_log.Error (line + "-" + ex.Message);  		continue;  	}  }  
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,LoadNewUploads,The following statement contains a magic number: while ((line = file.ReadLine ()) != null) {  	try {  		SearchDefinition searchDefinition = new SearchDefinition ();  		string[] data = line.Split (''');  		if (data [0].Equals ("DebtCode")) {  			continue;  		}  		else {  			searchDefinition.UploadDetailId = upload.UploadDetailId;  			searchDefinition.DebtCode = Convert.ToInt32 (data [0]);  			searchDefinition.Title = data [1];  			searchDefinition.Forename = data [2];  			searchDefinition.Surname = data [3];  			searchDefinition.Othername = data [4];  			searchDefinition.DOB = Convert.ToDateTime (data [5]);  			searchDefinition.BuildingNo = data [6];  			searchDefinition.BuildingName = data [7];  			searchDefinition.Locality = data [8];  			searchDefinition.Sublocality = data [9];  			searchDefinition.Posttown = data [10];  			searchDefinition.Postcode = data [11];  			searchDefinition.Type = Convert.ToByte (upload.Type);  			searchDefinition.Status = Convert.ToByte (1);  			searchDefinition.LastUpdatedDatetime = DateTime.Now;  			searchDefinition.ObjectState = ObjectState.Added;  			_uow.Repository<SearchDefinition> ().Insert (searchDefinition);  			_uow.Save ();  		}  	}  	catch (Exception ex) {  		_log.Error (line + "-" + ex.Message);  		continue;  	}  }  
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,LoadNewUploads,The following statement contains a magic number: while ((line = file.ReadLine ()) != null) {  	try {  		SearchDefinition searchDefinition = new SearchDefinition ();  		string[] data = line.Split (''');  		if (data [0].Equals ("DebtCode")) {  			continue;  		}  		else {  			searchDefinition.UploadDetailId = upload.UploadDetailId;  			searchDefinition.DebtCode = Convert.ToInt32 (data [0]);  			searchDefinition.Title = data [1];  			searchDefinition.Forename = data [2];  			searchDefinition.Surname = data [3];  			searchDefinition.Othername = data [4];  			searchDefinition.DOB = Convert.ToDateTime (data [5]);  			searchDefinition.BuildingNo = data [6];  			searchDefinition.BuildingName = data [7];  			searchDefinition.Locality = data [8];  			searchDefinition.Sublocality = data [9];  			searchDefinition.Posttown = data [10];  			searchDefinition.Postcode = data [11];  			searchDefinition.Type = Convert.ToByte (upload.Type);  			searchDefinition.Status = Convert.ToByte (1);  			searchDefinition.LastUpdatedDatetime = DateTime.Now;  			searchDefinition.ObjectState = ObjectState.Added;  			_uow.Repository<SearchDefinition> ().Insert (searchDefinition);  			_uow.Save ();  		}  	}  	catch (Exception ex) {  		_log.Error (line + "-" + ex.Message);  		continue;  	}  }  
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,LoadNewUploads,The following statement contains a magic number: while ((line = file.ReadLine ()) != null) {  	try {  		SearchDefinition searchDefinition = new SearchDefinition ();  		string[] data = line.Split (''');  		if (data [0].Equals ("DebtCode")) {  			continue;  		}  		else {  			searchDefinition.UploadDetailId = upload.UploadDetailId;  			searchDefinition.DebtCode = Convert.ToInt32 (data [0]);  			searchDefinition.Title = data [1];  			searchDefinition.Forename = data [2];  			searchDefinition.Surname = data [3];  			searchDefinition.Othername = data [4];  			searchDefinition.DOB = Convert.ToDateTime (data [5]);  			searchDefinition.BuildingNo = data [6];  			searchDefinition.BuildingName = data [7];  			searchDefinition.Locality = data [8];  			searchDefinition.Sublocality = data [9];  			searchDefinition.Posttown = data [10];  			searchDefinition.Postcode = data [11];  			searchDefinition.Type = Convert.ToByte (upload.Type);  			searchDefinition.Status = Convert.ToByte (1);  			searchDefinition.LastUpdatedDatetime = DateTime.Now;  			searchDefinition.ObjectState = ObjectState.Added;  			_uow.Repository<SearchDefinition> ().Insert (searchDefinition);  			_uow.Save ();  		}  	}  	catch (Exception ex) {  		_log.Error (line + "-" + ex.Message);  		continue;  	}  }  
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,LoadNewUploads,The following statement contains a magic number: while ((line = file.ReadLine ()) != null) {  	try {  		SearchDefinition searchDefinition = new SearchDefinition ();  		string[] data = line.Split (''');  		if (data [0].Equals ("DebtCode")) {  			continue;  		}  		else {  			searchDefinition.UploadDetailId = upload.UploadDetailId;  			searchDefinition.DebtCode = Convert.ToInt32 (data [0]);  			searchDefinition.Title = data [1];  			searchDefinition.Forename = data [2];  			searchDefinition.Surname = data [3];  			searchDefinition.Othername = data [4];  			searchDefinition.DOB = Convert.ToDateTime (data [5]);  			searchDefinition.BuildingNo = data [6];  			searchDefinition.BuildingName = data [7];  			searchDefinition.Locality = data [8];  			searchDefinition.Sublocality = data [9];  			searchDefinition.Posttown = data [10];  			searchDefinition.Postcode = data [11];  			searchDefinition.Type = Convert.ToByte (upload.Type);  			searchDefinition.Status = Convert.ToByte (1);  			searchDefinition.LastUpdatedDatetime = DateTime.Now;  			searchDefinition.ObjectState = ObjectState.Added;  			_uow.Repository<SearchDefinition> ().Insert (searchDefinition);  			_uow.Save ();  		}  	}  	catch (Exception ex) {  		_log.Error (line + "-" + ex.Message);  		continue;  	}  }  
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,LoadNewUploads,The following statement contains a magic number: try {  	SearchDefinition searchDefinition = new SearchDefinition ();  	string[] data = line.Split (''');  	if (data [0].Equals ("DebtCode")) {  		continue;  	}  	else {  		searchDefinition.UploadDetailId = upload.UploadDetailId;  		searchDefinition.DebtCode = Convert.ToInt32 (data [0]);  		searchDefinition.Title = data [1];  		searchDefinition.Forename = data [2];  		searchDefinition.Surname = data [3];  		searchDefinition.Othername = data [4];  		searchDefinition.DOB = Convert.ToDateTime (data [5]);  		searchDefinition.BuildingNo = data [6];  		searchDefinition.BuildingName = data [7];  		searchDefinition.Locality = data [8];  		searchDefinition.Sublocality = data [9];  		searchDefinition.Posttown = data [10];  		searchDefinition.Postcode = data [11];  		searchDefinition.Type = Convert.ToByte (upload.Type);  		searchDefinition.Status = Convert.ToByte (1);  		searchDefinition.LastUpdatedDatetime = DateTime.Now;  		searchDefinition.ObjectState = ObjectState.Added;  		_uow.Repository<SearchDefinition> ().Insert (searchDefinition);  		_uow.Save ();  	}  }  catch (Exception ex) {  	_log.Error (line + "-" + ex.Message);  	continue;  }  
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,LoadNewUploads,The following statement contains a magic number: try {  	SearchDefinition searchDefinition = new SearchDefinition ();  	string[] data = line.Split (''');  	if (data [0].Equals ("DebtCode")) {  		continue;  	}  	else {  		searchDefinition.UploadDetailId = upload.UploadDetailId;  		searchDefinition.DebtCode = Convert.ToInt32 (data [0]);  		searchDefinition.Title = data [1];  		searchDefinition.Forename = data [2];  		searchDefinition.Surname = data [3];  		searchDefinition.Othername = data [4];  		searchDefinition.DOB = Convert.ToDateTime (data [5]);  		searchDefinition.BuildingNo = data [6];  		searchDefinition.BuildingName = data [7];  		searchDefinition.Locality = data [8];  		searchDefinition.Sublocality = data [9];  		searchDefinition.Posttown = data [10];  		searchDefinition.Postcode = data [11];  		searchDefinition.Type = Convert.ToByte (upload.Type);  		searchDefinition.Status = Convert.ToByte (1);  		searchDefinition.LastUpdatedDatetime = DateTime.Now;  		searchDefinition.ObjectState = ObjectState.Added;  		_uow.Repository<SearchDefinition> ().Insert (searchDefinition);  		_uow.Save ();  	}  }  catch (Exception ex) {  	_log.Error (line + "-" + ex.Message);  	continue;  }  
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,LoadNewUploads,The following statement contains a magic number: try {  	SearchDefinition searchDefinition = new SearchDefinition ();  	string[] data = line.Split (''');  	if (data [0].Equals ("DebtCode")) {  		continue;  	}  	else {  		searchDefinition.UploadDetailId = upload.UploadDetailId;  		searchDefinition.DebtCode = Convert.ToInt32 (data [0]);  		searchDefinition.Title = data [1];  		searchDefinition.Forename = data [2];  		searchDefinition.Surname = data [3];  		searchDefinition.Othername = data [4];  		searchDefinition.DOB = Convert.ToDateTime (data [5]);  		searchDefinition.BuildingNo = data [6];  		searchDefinition.BuildingName = data [7];  		searchDefinition.Locality = data [8];  		searchDefinition.Sublocality = data [9];  		searchDefinition.Posttown = data [10];  		searchDefinition.Postcode = data [11];  		searchDefinition.Type = Convert.ToByte (upload.Type);  		searchDefinition.Status = Convert.ToByte (1);  		searchDefinition.LastUpdatedDatetime = DateTime.Now;  		searchDefinition.ObjectState = ObjectState.Added;  		_uow.Repository<SearchDefinition> ().Insert (searchDefinition);  		_uow.Save ();  	}  }  catch (Exception ex) {  	_log.Error (line + "-" + ex.Message);  	continue;  }  
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,LoadNewUploads,The following statement contains a magic number: try {  	SearchDefinition searchDefinition = new SearchDefinition ();  	string[] data = line.Split (''');  	if (data [0].Equals ("DebtCode")) {  		continue;  	}  	else {  		searchDefinition.UploadDetailId = upload.UploadDetailId;  		searchDefinition.DebtCode = Convert.ToInt32 (data [0]);  		searchDefinition.Title = data [1];  		searchDefinition.Forename = data [2];  		searchDefinition.Surname = data [3];  		searchDefinition.Othername = data [4];  		searchDefinition.DOB = Convert.ToDateTime (data [5]);  		searchDefinition.BuildingNo = data [6];  		searchDefinition.BuildingName = data [7];  		searchDefinition.Locality = data [8];  		searchDefinition.Sublocality = data [9];  		searchDefinition.Posttown = data [10];  		searchDefinition.Postcode = data [11];  		searchDefinition.Type = Convert.ToByte (upload.Type);  		searchDefinition.Status = Convert.ToByte (1);  		searchDefinition.LastUpdatedDatetime = DateTime.Now;  		searchDefinition.ObjectState = ObjectState.Added;  		_uow.Repository<SearchDefinition> ().Insert (searchDefinition);  		_uow.Save ();  	}  }  catch (Exception ex) {  	_log.Error (line + "-" + ex.Message);  	continue;  }  
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,LoadNewUploads,The following statement contains a magic number: try {  	SearchDefinition searchDefinition = new SearchDefinition ();  	string[] data = line.Split (''');  	if (data [0].Equals ("DebtCode")) {  		continue;  	}  	else {  		searchDefinition.UploadDetailId = upload.UploadDetailId;  		searchDefinition.DebtCode = Convert.ToInt32 (data [0]);  		searchDefinition.Title = data [1];  		searchDefinition.Forename = data [2];  		searchDefinition.Surname = data [3];  		searchDefinition.Othername = data [4];  		searchDefinition.DOB = Convert.ToDateTime (data [5]);  		searchDefinition.BuildingNo = data [6];  		searchDefinition.BuildingName = data [7];  		searchDefinition.Locality = data [8];  		searchDefinition.Sublocality = data [9];  		searchDefinition.Posttown = data [10];  		searchDefinition.Postcode = data [11];  		searchDefinition.Type = Convert.ToByte (upload.Type);  		searchDefinition.Status = Convert.ToByte (1);  		searchDefinition.LastUpdatedDatetime = DateTime.Now;  		searchDefinition.ObjectState = ObjectState.Added;  		_uow.Repository<SearchDefinition> ().Insert (searchDefinition);  		_uow.Save ();  	}  }  catch (Exception ex) {  	_log.Error (line + "-" + ex.Message);  	continue;  }  
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,LoadNewUploads,The following statement contains a magic number: try {  	SearchDefinition searchDefinition = new SearchDefinition ();  	string[] data = line.Split (''');  	if (data [0].Equals ("DebtCode")) {  		continue;  	}  	else {  		searchDefinition.UploadDetailId = upload.UploadDetailId;  		searchDefinition.DebtCode = Convert.ToInt32 (data [0]);  		searchDefinition.Title = data [1];  		searchDefinition.Forename = data [2];  		searchDefinition.Surname = data [3];  		searchDefinition.Othername = data [4];  		searchDefinition.DOB = Convert.ToDateTime (data [5]);  		searchDefinition.BuildingNo = data [6];  		searchDefinition.BuildingName = data [7];  		searchDefinition.Locality = data [8];  		searchDefinition.Sublocality = data [9];  		searchDefinition.Posttown = data [10];  		searchDefinition.Postcode = data [11];  		searchDefinition.Type = Convert.ToByte (upload.Type);  		searchDefinition.Status = Convert.ToByte (1);  		searchDefinition.LastUpdatedDatetime = DateTime.Now;  		searchDefinition.ObjectState = ObjectState.Added;  		_uow.Repository<SearchDefinition> ().Insert (searchDefinition);  		_uow.Save ();  	}  }  catch (Exception ex) {  	_log.Error (line + "-" + ex.Message);  	continue;  }  
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,LoadNewUploads,The following statement contains a magic number: try {  	SearchDefinition searchDefinition = new SearchDefinition ();  	string[] data = line.Split (''');  	if (data [0].Equals ("DebtCode")) {  		continue;  	}  	else {  		searchDefinition.UploadDetailId = upload.UploadDetailId;  		searchDefinition.DebtCode = Convert.ToInt32 (data [0]);  		searchDefinition.Title = data [1];  		searchDefinition.Forename = data [2];  		searchDefinition.Surname = data [3];  		searchDefinition.Othername = data [4];  		searchDefinition.DOB = Convert.ToDateTime (data [5]);  		searchDefinition.BuildingNo = data [6];  		searchDefinition.BuildingName = data [7];  		searchDefinition.Locality = data [8];  		searchDefinition.Sublocality = data [9];  		searchDefinition.Posttown = data [10];  		searchDefinition.Postcode = data [11];  		searchDefinition.Type = Convert.ToByte (upload.Type);  		searchDefinition.Status = Convert.ToByte (1);  		searchDefinition.LastUpdatedDatetime = DateTime.Now;  		searchDefinition.ObjectState = ObjectState.Added;  		_uow.Repository<SearchDefinition> ().Insert (searchDefinition);  		_uow.Save ();  	}  }  catch (Exception ex) {  	_log.Error (line + "-" + ex.Message);  	continue;  }  
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,LoadNewUploads,The following statement contains a magic number: try {  	SearchDefinition searchDefinition = new SearchDefinition ();  	string[] data = line.Split (''');  	if (data [0].Equals ("DebtCode")) {  		continue;  	}  	else {  		searchDefinition.UploadDetailId = upload.UploadDetailId;  		searchDefinition.DebtCode = Convert.ToInt32 (data [0]);  		searchDefinition.Title = data [1];  		searchDefinition.Forename = data [2];  		searchDefinition.Surname = data [3];  		searchDefinition.Othername = data [4];  		searchDefinition.DOB = Convert.ToDateTime (data [5]);  		searchDefinition.BuildingNo = data [6];  		searchDefinition.BuildingName = data [7];  		searchDefinition.Locality = data [8];  		searchDefinition.Sublocality = data [9];  		searchDefinition.Posttown = data [10];  		searchDefinition.Postcode = data [11];  		searchDefinition.Type = Convert.ToByte (upload.Type);  		searchDefinition.Status = Convert.ToByte (1);  		searchDefinition.LastUpdatedDatetime = DateTime.Now;  		searchDefinition.ObjectState = ObjectState.Added;  		_uow.Repository<SearchDefinition> ().Insert (searchDefinition);  		_uow.Save ();  	}  }  catch (Exception ex) {  	_log.Error (line + "-" + ex.Message);  	continue;  }  
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,LoadNewUploads,The following statement contains a magic number: try {  	SearchDefinition searchDefinition = new SearchDefinition ();  	string[] data = line.Split (''');  	if (data [0].Equals ("DebtCode")) {  		continue;  	}  	else {  		searchDefinition.UploadDetailId = upload.UploadDetailId;  		searchDefinition.DebtCode = Convert.ToInt32 (data [0]);  		searchDefinition.Title = data [1];  		searchDefinition.Forename = data [2];  		searchDefinition.Surname = data [3];  		searchDefinition.Othername = data [4];  		searchDefinition.DOB = Convert.ToDateTime (data [5]);  		searchDefinition.BuildingNo = data [6];  		searchDefinition.BuildingName = data [7];  		searchDefinition.Locality = data [8];  		searchDefinition.Sublocality = data [9];  		searchDefinition.Posttown = data [10];  		searchDefinition.Postcode = data [11];  		searchDefinition.Type = Convert.ToByte (upload.Type);  		searchDefinition.Status = Convert.ToByte (1);  		searchDefinition.LastUpdatedDatetime = DateTime.Now;  		searchDefinition.ObjectState = ObjectState.Added;  		_uow.Repository<SearchDefinition> ().Insert (searchDefinition);  		_uow.Save ();  	}  }  catch (Exception ex) {  	_log.Error (line + "-" + ex.Message);  	continue;  }  
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,LoadNewUploads,The following statement contains a magic number: try {  	SearchDefinition searchDefinition = new SearchDefinition ();  	string[] data = line.Split (''');  	if (data [0].Equals ("DebtCode")) {  		continue;  	}  	else {  		searchDefinition.UploadDetailId = upload.UploadDetailId;  		searchDefinition.DebtCode = Convert.ToInt32 (data [0]);  		searchDefinition.Title = data [1];  		searchDefinition.Forename = data [2];  		searchDefinition.Surname = data [3];  		searchDefinition.Othername = data [4];  		searchDefinition.DOB = Convert.ToDateTime (data [5]);  		searchDefinition.BuildingNo = data [6];  		searchDefinition.BuildingName = data [7];  		searchDefinition.Locality = data [8];  		searchDefinition.Sublocality = data [9];  		searchDefinition.Posttown = data [10];  		searchDefinition.Postcode = data [11];  		searchDefinition.Type = Convert.ToByte (upload.Type);  		searchDefinition.Status = Convert.ToByte (1);  		searchDefinition.LastUpdatedDatetime = DateTime.Now;  		searchDefinition.ObjectState = ObjectState.Added;  		_uow.Repository<SearchDefinition> ().Insert (searchDefinition);  		_uow.Save ();  	}  }  catch (Exception ex) {  	_log.Error (line + "-" + ex.Message);  	continue;  }  
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,LoadNewUploads,The following statement contains a magic number: if (data [0].Equals ("DebtCode")) {  	continue;  }  else {  	searchDefinition.UploadDetailId = upload.UploadDetailId;  	searchDefinition.DebtCode = Convert.ToInt32 (data [0]);  	searchDefinition.Title = data [1];  	searchDefinition.Forename = data [2];  	searchDefinition.Surname = data [3];  	searchDefinition.Othername = data [4];  	searchDefinition.DOB = Convert.ToDateTime (data [5]);  	searchDefinition.BuildingNo = data [6];  	searchDefinition.BuildingName = data [7];  	searchDefinition.Locality = data [8];  	searchDefinition.Sublocality = data [9];  	searchDefinition.Posttown = data [10];  	searchDefinition.Postcode = data [11];  	searchDefinition.Type = Convert.ToByte (upload.Type);  	searchDefinition.Status = Convert.ToByte (1);  	searchDefinition.LastUpdatedDatetime = DateTime.Now;  	searchDefinition.ObjectState = ObjectState.Added;  	_uow.Repository<SearchDefinition> ().Insert (searchDefinition);  	_uow.Save ();  }  
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,LoadNewUploads,The following statement contains a magic number: if (data [0].Equals ("DebtCode")) {  	continue;  }  else {  	searchDefinition.UploadDetailId = upload.UploadDetailId;  	searchDefinition.DebtCode = Convert.ToInt32 (data [0]);  	searchDefinition.Title = data [1];  	searchDefinition.Forename = data [2];  	searchDefinition.Surname = data [3];  	searchDefinition.Othername = data [4];  	searchDefinition.DOB = Convert.ToDateTime (data [5]);  	searchDefinition.BuildingNo = data [6];  	searchDefinition.BuildingName = data [7];  	searchDefinition.Locality = data [8];  	searchDefinition.Sublocality = data [9];  	searchDefinition.Posttown = data [10];  	searchDefinition.Postcode = data [11];  	searchDefinition.Type = Convert.ToByte (upload.Type);  	searchDefinition.Status = Convert.ToByte (1);  	searchDefinition.LastUpdatedDatetime = DateTime.Now;  	searchDefinition.ObjectState = ObjectState.Added;  	_uow.Repository<SearchDefinition> ().Insert (searchDefinition);  	_uow.Save ();  }  
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,LoadNewUploads,The following statement contains a magic number: if (data [0].Equals ("DebtCode")) {  	continue;  }  else {  	searchDefinition.UploadDetailId = upload.UploadDetailId;  	searchDefinition.DebtCode = Convert.ToInt32 (data [0]);  	searchDefinition.Title = data [1];  	searchDefinition.Forename = data [2];  	searchDefinition.Surname = data [3];  	searchDefinition.Othername = data [4];  	searchDefinition.DOB = Convert.ToDateTime (data [5]);  	searchDefinition.BuildingNo = data [6];  	searchDefinition.BuildingName = data [7];  	searchDefinition.Locality = data [8];  	searchDefinition.Sublocality = data [9];  	searchDefinition.Posttown = data [10];  	searchDefinition.Postcode = data [11];  	searchDefinition.Type = Convert.ToByte (upload.Type);  	searchDefinition.Status = Convert.ToByte (1);  	searchDefinition.LastUpdatedDatetime = DateTime.Now;  	searchDefinition.ObjectState = ObjectState.Added;  	_uow.Repository<SearchDefinition> ().Insert (searchDefinition);  	_uow.Save ();  }  
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,LoadNewUploads,The following statement contains a magic number: if (data [0].Equals ("DebtCode")) {  	continue;  }  else {  	searchDefinition.UploadDetailId = upload.UploadDetailId;  	searchDefinition.DebtCode = Convert.ToInt32 (data [0]);  	searchDefinition.Title = data [1];  	searchDefinition.Forename = data [2];  	searchDefinition.Surname = data [3];  	searchDefinition.Othername = data [4];  	searchDefinition.DOB = Convert.ToDateTime (data [5]);  	searchDefinition.BuildingNo = data [6];  	searchDefinition.BuildingName = data [7];  	searchDefinition.Locality = data [8];  	searchDefinition.Sublocality = data [9];  	searchDefinition.Posttown = data [10];  	searchDefinition.Postcode = data [11];  	searchDefinition.Type = Convert.ToByte (upload.Type);  	searchDefinition.Status = Convert.ToByte (1);  	searchDefinition.LastUpdatedDatetime = DateTime.Now;  	searchDefinition.ObjectState = ObjectState.Added;  	_uow.Repository<SearchDefinition> ().Insert (searchDefinition);  	_uow.Save ();  }  
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,LoadNewUploads,The following statement contains a magic number: if (data [0].Equals ("DebtCode")) {  	continue;  }  else {  	searchDefinition.UploadDetailId = upload.UploadDetailId;  	searchDefinition.DebtCode = Convert.ToInt32 (data [0]);  	searchDefinition.Title = data [1];  	searchDefinition.Forename = data [2];  	searchDefinition.Surname = data [3];  	searchDefinition.Othername = data [4];  	searchDefinition.DOB = Convert.ToDateTime (data [5]);  	searchDefinition.BuildingNo = data [6];  	searchDefinition.BuildingName = data [7];  	searchDefinition.Locality = data [8];  	searchDefinition.Sublocality = data [9];  	searchDefinition.Posttown = data [10];  	searchDefinition.Postcode = data [11];  	searchDefinition.Type = Convert.ToByte (upload.Type);  	searchDefinition.Status = Convert.ToByte (1);  	searchDefinition.LastUpdatedDatetime = DateTime.Now;  	searchDefinition.ObjectState = ObjectState.Added;  	_uow.Repository<SearchDefinition> ().Insert (searchDefinition);  	_uow.Save ();  }  
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,LoadNewUploads,The following statement contains a magic number: if (data [0].Equals ("DebtCode")) {  	continue;  }  else {  	searchDefinition.UploadDetailId = upload.UploadDetailId;  	searchDefinition.DebtCode = Convert.ToInt32 (data [0]);  	searchDefinition.Title = data [1];  	searchDefinition.Forename = data [2];  	searchDefinition.Surname = data [3];  	searchDefinition.Othername = data [4];  	searchDefinition.DOB = Convert.ToDateTime (data [5]);  	searchDefinition.BuildingNo = data [6];  	searchDefinition.BuildingName = data [7];  	searchDefinition.Locality = data [8];  	searchDefinition.Sublocality = data [9];  	searchDefinition.Posttown = data [10];  	searchDefinition.Postcode = data [11];  	searchDefinition.Type = Convert.ToByte (upload.Type);  	searchDefinition.Status = Convert.ToByte (1);  	searchDefinition.LastUpdatedDatetime = DateTime.Now;  	searchDefinition.ObjectState = ObjectState.Added;  	_uow.Repository<SearchDefinition> ().Insert (searchDefinition);  	_uow.Save ();  }  
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,LoadNewUploads,The following statement contains a magic number: if (data [0].Equals ("DebtCode")) {  	continue;  }  else {  	searchDefinition.UploadDetailId = upload.UploadDetailId;  	searchDefinition.DebtCode = Convert.ToInt32 (data [0]);  	searchDefinition.Title = data [1];  	searchDefinition.Forename = data [2];  	searchDefinition.Surname = data [3];  	searchDefinition.Othername = data [4];  	searchDefinition.DOB = Convert.ToDateTime (data [5]);  	searchDefinition.BuildingNo = data [6];  	searchDefinition.BuildingName = data [7];  	searchDefinition.Locality = data [8];  	searchDefinition.Sublocality = data [9];  	searchDefinition.Posttown = data [10];  	searchDefinition.Postcode = data [11];  	searchDefinition.Type = Convert.ToByte (upload.Type);  	searchDefinition.Status = Convert.ToByte (1);  	searchDefinition.LastUpdatedDatetime = DateTime.Now;  	searchDefinition.ObjectState = ObjectState.Added;  	_uow.Repository<SearchDefinition> ().Insert (searchDefinition);  	_uow.Save ();  }  
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,LoadNewUploads,The following statement contains a magic number: if (data [0].Equals ("DebtCode")) {  	continue;  }  else {  	searchDefinition.UploadDetailId = upload.UploadDetailId;  	searchDefinition.DebtCode = Convert.ToInt32 (data [0]);  	searchDefinition.Title = data [1];  	searchDefinition.Forename = data [2];  	searchDefinition.Surname = data [3];  	searchDefinition.Othername = data [4];  	searchDefinition.DOB = Convert.ToDateTime (data [5]);  	searchDefinition.BuildingNo = data [6];  	searchDefinition.BuildingName = data [7];  	searchDefinition.Locality = data [8];  	searchDefinition.Sublocality = data [9];  	searchDefinition.Posttown = data [10];  	searchDefinition.Postcode = data [11];  	searchDefinition.Type = Convert.ToByte (upload.Type);  	searchDefinition.Status = Convert.ToByte (1);  	searchDefinition.LastUpdatedDatetime = DateTime.Now;  	searchDefinition.ObjectState = ObjectState.Added;  	_uow.Repository<SearchDefinition> ().Insert (searchDefinition);  	_uow.Save ();  }  
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,LoadNewUploads,The following statement contains a magic number: if (data [0].Equals ("DebtCode")) {  	continue;  }  else {  	searchDefinition.UploadDetailId = upload.UploadDetailId;  	searchDefinition.DebtCode = Convert.ToInt32 (data [0]);  	searchDefinition.Title = data [1];  	searchDefinition.Forename = data [2];  	searchDefinition.Surname = data [3];  	searchDefinition.Othername = data [4];  	searchDefinition.DOB = Convert.ToDateTime (data [5]);  	searchDefinition.BuildingNo = data [6];  	searchDefinition.BuildingName = data [7];  	searchDefinition.Locality = data [8];  	searchDefinition.Sublocality = data [9];  	searchDefinition.Posttown = data [10];  	searchDefinition.Postcode = data [11];  	searchDefinition.Type = Convert.ToByte (upload.Type);  	searchDefinition.Status = Convert.ToByte (1);  	searchDefinition.LastUpdatedDatetime = DateTime.Now;  	searchDefinition.ObjectState = ObjectState.Added;  	_uow.Repository<SearchDefinition> ().Insert (searchDefinition);  	_uow.Save ();  }  
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,LoadNewUploads,The following statement contains a magic number: if (data [0].Equals ("DebtCode")) {  	continue;  }  else {  	searchDefinition.UploadDetailId = upload.UploadDetailId;  	searchDefinition.DebtCode = Convert.ToInt32 (data [0]);  	searchDefinition.Title = data [1];  	searchDefinition.Forename = data [2];  	searchDefinition.Surname = data [3];  	searchDefinition.Othername = data [4];  	searchDefinition.DOB = Convert.ToDateTime (data [5]);  	searchDefinition.BuildingNo = data [6];  	searchDefinition.BuildingName = data [7];  	searchDefinition.Locality = data [8];  	searchDefinition.Sublocality = data [9];  	searchDefinition.Posttown = data [10];  	searchDefinition.Postcode = data [11];  	searchDefinition.Type = Convert.ToByte (upload.Type);  	searchDefinition.Status = Convert.ToByte (1);  	searchDefinition.LastUpdatedDatetime = DateTime.Now;  	searchDefinition.ObjectState = ObjectState.Added;  	_uow.Repository<SearchDefinition> ().Insert (searchDefinition);  	_uow.Save ();  }  
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,LoadNewUploads,The following statement contains a magic number: searchDefinition.Forename = data [2];  
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,LoadNewUploads,The following statement contains a magic number: searchDefinition.Surname = data [3];  
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,LoadNewUploads,The following statement contains a magic number: searchDefinition.Othername = data [4];  
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,LoadNewUploads,The following statement contains a magic number: searchDefinition.DOB = Convert.ToDateTime (data [5]);  
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,LoadNewUploads,The following statement contains a magic number: searchDefinition.BuildingNo = data [6];  
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,LoadNewUploads,The following statement contains a magic number: searchDefinition.BuildingName = data [7];  
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,LoadNewUploads,The following statement contains a magic number: searchDefinition.Locality = data [8];  
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,LoadNewUploads,The following statement contains a magic number: searchDefinition.Sublocality = data [9];  
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,LoadNewUploads,The following statement contains a magic number: searchDefinition.Posttown = data [10];  
Magic Number,BSBTAC.LoadSearch,LoadSearch,C:\repos\rkjaswal_BSBTAC\BSBTAC.LoadSearch\LoadSearch.cs,LoadNewUploads,The following statement contains a magic number: searchDefinition.Postcode = data [11];  
