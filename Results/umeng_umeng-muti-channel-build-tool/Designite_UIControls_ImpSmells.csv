Implementation smell,Namespace,Class,File,Method,Description
Complex Method,UIControls,CircularProgressBar,D:\research\architectureSmells\repos\umeng_umeng-muti-channel-build-tool\VSProject\UIControls_35\UIControls\CircularProgressBar.xaml.cs,Connect,Cyclomatic complexity of the method is 13
Long Identifier,UIControls,SearchTextBox,D:\research\architectureSmells\repos\umeng_umeng-muti-channel-build-tool\VSProject\UIControls_35\UIControls\SearchTextBox.cs,,The length of the parameter IsMouseLeftButtonDownPropertyKey is 32.
Long Statement,UIControls,CircularProgressBar,D:\research\architectureSmells\repos\umeng_umeng-muti-channel-build-tool\VSProject\UIControls_35\UIControls\CircularProgressBar.xaml.cs,Connect,The length of the statement  "            ((UIControls.CircularProgressBar)(target)).IsVisibleChanged += new System.Windows.DependencyPropertyChangedEventHandler(this.HandleVisibleChanged); " is 147.
Long Statement,XamlGeneratedNamespace,GeneratedInternalTypeHelper,D:\research\architectureSmells\repos\umeng_umeng-muti-channel-build-tool\VSProject\UIControls_35\UIControls\obj\Debug\GeneratedInternalTypeHelper.g.cs,CreateInstance,The length of the statement  "            return System.Activator.CreateInstance(type' ((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)  " is 128.
Magic Number,UIControls,CircularProgressBar,D:\research\architectureSmells\repos\umeng_umeng-muti-channel-build-tool\VSProject\UIControls_35\UIControls\CircularProgressBar.xaml.cs,CircularProgressBar,The following statement contains a magic number: animationTimer.Interval = new TimeSpan(0' 0' 0' 0' 75);
Magic Number,UIControls,CircularProgressBar,D:\research\architectureSmells\repos\umeng_umeng-muti-channel-build-tool\VSProject\UIControls_35\UIControls\CircularProgressBar.xaml.cs,HandleAnimationTick,The following statement contains a magic number: SpinnerRotate.Angle = (SpinnerRotate.Angle + 36) % 360;
Magic Number,UIControls,CircularProgressBar,D:\research\architectureSmells\repos\umeng_umeng-muti-channel-build-tool\VSProject\UIControls_35\UIControls\CircularProgressBar.xaml.cs,HandleAnimationTick,The following statement contains a magic number: SpinnerRotate.Angle = (SpinnerRotate.Angle + 36) % 360;
Magic Number,UIControls,CircularProgressBar,D:\research\architectureSmells\repos\umeng_umeng-muti-channel-build-tool\VSProject\UIControls_35\UIControls\CircularProgressBar.xaml.cs,HandleLoaded,The following statement contains a magic number: const double step = Math.PI * 2 / 10.0;
Magic Number,UIControls,CircularProgressBar,D:\research\architectureSmells\repos\umeng_umeng-muti-channel-build-tool\VSProject\UIControls_35\UIControls\CircularProgressBar.xaml.cs,HandleLoaded,The following statement contains a magic number: const double step = Math.PI * 2 / 10.0;
Magic Number,UIControls,CircularProgressBar,D:\research\architectureSmells\repos\umeng_umeng-muti-channel-build-tool\VSProject\UIControls_35\UIControls\CircularProgressBar.xaml.cs,HandleLoaded,The following statement contains a magic number: SetPosition(C2' offset' 2.0' step);
Magic Number,UIControls,CircularProgressBar,D:\research\architectureSmells\repos\umeng_umeng-muti-channel-build-tool\VSProject\UIControls_35\UIControls\CircularProgressBar.xaml.cs,HandleLoaded,The following statement contains a magic number: SetPosition(C3' offset' 3.0' step);
Magic Number,UIControls,CircularProgressBar,D:\research\architectureSmells\repos\umeng_umeng-muti-channel-build-tool\VSProject\UIControls_35\UIControls\CircularProgressBar.xaml.cs,HandleLoaded,The following statement contains a magic number: SetPosition(C4' offset' 4.0' step);
Magic Number,UIControls,CircularProgressBar,D:\research\architectureSmells\repos\umeng_umeng-muti-channel-build-tool\VSProject\UIControls_35\UIControls\CircularProgressBar.xaml.cs,HandleLoaded,The following statement contains a magic number: SetPosition(C5' offset' 5.0' step);
Magic Number,UIControls,CircularProgressBar,D:\research\architectureSmells\repos\umeng_umeng-muti-channel-build-tool\VSProject\UIControls_35\UIControls\CircularProgressBar.xaml.cs,HandleLoaded,The following statement contains a magic number: SetPosition(C6' offset' 6.0' step);
Magic Number,UIControls,CircularProgressBar,D:\research\architectureSmells\repos\umeng_umeng-muti-channel-build-tool\VSProject\UIControls_35\UIControls\CircularProgressBar.xaml.cs,HandleLoaded,The following statement contains a magic number: SetPosition(C7' offset' 7.0' step);
Magic Number,UIControls,CircularProgressBar,D:\research\architectureSmells\repos\umeng_umeng-muti-channel-build-tool\VSProject\UIControls_35\UIControls\CircularProgressBar.xaml.cs,HandleLoaded,The following statement contains a magic number: SetPosition(C8' offset' 8.0' step);
Magic Number,UIControls,CircularProgressBar,D:\research\architectureSmells\repos\umeng_umeng-muti-channel-build-tool\VSProject\UIControls_35\UIControls\CircularProgressBar.xaml.cs,SetPosition,The following statement contains a magic number: ellipse.SetValue(Canvas.LeftProperty' 50.0                  + Math.Sin(offset + posOffSet * step) * 50.0);
Magic Number,UIControls,CircularProgressBar,D:\research\architectureSmells\repos\umeng_umeng-muti-channel-build-tool\VSProject\UIControls_35\UIControls\CircularProgressBar.xaml.cs,SetPosition,The following statement contains a magic number: ellipse.SetValue(Canvas.LeftProperty' 50.0                  + Math.Sin(offset + posOffSet * step) * 50.0);
Magic Number,UIControls,CircularProgressBar,D:\research\architectureSmells\repos\umeng_umeng-muti-channel-build-tool\VSProject\UIControls_35\UIControls\CircularProgressBar.xaml.cs,SetPosition,The following statement contains a magic number: ellipse.SetValue(Canvas.TopProperty' 50                  + Math.Cos(offset + posOffSet * step) * 50.0);
Magic Number,UIControls,CircularProgressBar,D:\research\architectureSmells\repos\umeng_umeng-muti-channel-build-tool\VSProject\UIControls_35\UIControls\CircularProgressBar.xaml.cs,SetPosition,The following statement contains a magic number: ellipse.SetValue(Canvas.TopProperty' 50                  + Math.Cos(offset + posOffSet * step) * 50.0);
Magic Number,UIControls,CircularProgressBar,D:\research\architectureSmells\repos\umeng_umeng-muti-channel-build-tool\VSProject\UIControls_35\UIControls\CircularProgressBar.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 5 "..\..\CircularProgressBar.xaml"              ((UIControls.CircularProgressBar)(target)).IsVisibleChanged += new System.Windows.DependencyPropertyChangedEventHandler(this.HandleVisibleChanged);                            #line default              #line hidden              return;              case 2:              this.LayoutRoot = ((System.Windows.Controls.Grid)(target));              return;              case 3:                            #line 13 "..\..\CircularProgressBar.xaml"              ((System.Windows.Controls.Canvas)(target)).Loaded += new System.Windows.RoutedEventHandler(this.HandleLoaded);                            #line default              #line hidden                            #line 14 "..\..\CircularProgressBar.xaml"              ((System.Windows.Controls.Canvas)(target)).Unloaded += new System.Windows.RoutedEventHandler(this.HandleUnloaded);                            #line default              #line hidden              return;              case 4:              this.C0 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 5:              this.C1 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.C2 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.C3 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.C4 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.C5 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.C6 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.C7 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 12:              this.C8 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 13:              this.SpinnerRotate = ((System.Windows.Media.RotateTransform)(target));              return;              }
Magic Number,UIControls,CircularProgressBar,D:\research\architectureSmells\repos\umeng_umeng-muti-channel-build-tool\VSProject\UIControls_35\UIControls\CircularProgressBar.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 5 "..\..\CircularProgressBar.xaml"              ((UIControls.CircularProgressBar)(target)).IsVisibleChanged += new System.Windows.DependencyPropertyChangedEventHandler(this.HandleVisibleChanged);                            #line default              #line hidden              return;              case 2:              this.LayoutRoot = ((System.Windows.Controls.Grid)(target));              return;              case 3:                            #line 13 "..\..\CircularProgressBar.xaml"              ((System.Windows.Controls.Canvas)(target)).Loaded += new System.Windows.RoutedEventHandler(this.HandleLoaded);                            #line default              #line hidden                            #line 14 "..\..\CircularProgressBar.xaml"              ((System.Windows.Controls.Canvas)(target)).Unloaded += new System.Windows.RoutedEventHandler(this.HandleUnloaded);                            #line default              #line hidden              return;              case 4:              this.C0 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 5:              this.C1 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.C2 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.C3 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.C4 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.C5 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.C6 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.C7 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 12:              this.C8 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 13:              this.SpinnerRotate = ((System.Windows.Media.RotateTransform)(target));              return;              }
Magic Number,UIControls,CircularProgressBar,D:\research\architectureSmells\repos\umeng_umeng-muti-channel-build-tool\VSProject\UIControls_35\UIControls\CircularProgressBar.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 5 "..\..\CircularProgressBar.xaml"              ((UIControls.CircularProgressBar)(target)).IsVisibleChanged += new System.Windows.DependencyPropertyChangedEventHandler(this.HandleVisibleChanged);                            #line default              #line hidden              return;              case 2:              this.LayoutRoot = ((System.Windows.Controls.Grid)(target));              return;              case 3:                            #line 13 "..\..\CircularProgressBar.xaml"              ((System.Windows.Controls.Canvas)(target)).Loaded += new System.Windows.RoutedEventHandler(this.HandleLoaded);                            #line default              #line hidden                            #line 14 "..\..\CircularProgressBar.xaml"              ((System.Windows.Controls.Canvas)(target)).Unloaded += new System.Windows.RoutedEventHandler(this.HandleUnloaded);                            #line default              #line hidden              return;              case 4:              this.C0 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 5:              this.C1 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.C2 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.C3 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.C4 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.C5 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.C6 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.C7 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 12:              this.C8 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 13:              this.SpinnerRotate = ((System.Windows.Media.RotateTransform)(target));              return;              }
Magic Number,UIControls,CircularProgressBar,D:\research\architectureSmells\repos\umeng_umeng-muti-channel-build-tool\VSProject\UIControls_35\UIControls\CircularProgressBar.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 5 "..\..\CircularProgressBar.xaml"              ((UIControls.CircularProgressBar)(target)).IsVisibleChanged += new System.Windows.DependencyPropertyChangedEventHandler(this.HandleVisibleChanged);                            #line default              #line hidden              return;              case 2:              this.LayoutRoot = ((System.Windows.Controls.Grid)(target));              return;              case 3:                            #line 13 "..\..\CircularProgressBar.xaml"              ((System.Windows.Controls.Canvas)(target)).Loaded += new System.Windows.RoutedEventHandler(this.HandleLoaded);                            #line default              #line hidden                            #line 14 "..\..\CircularProgressBar.xaml"              ((System.Windows.Controls.Canvas)(target)).Unloaded += new System.Windows.RoutedEventHandler(this.HandleUnloaded);                            #line default              #line hidden              return;              case 4:              this.C0 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 5:              this.C1 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.C2 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.C3 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.C4 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.C5 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.C6 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.C7 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 12:              this.C8 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 13:              this.SpinnerRotate = ((System.Windows.Media.RotateTransform)(target));              return;              }
Magic Number,UIControls,CircularProgressBar,D:\research\architectureSmells\repos\umeng_umeng-muti-channel-build-tool\VSProject\UIControls_35\UIControls\CircularProgressBar.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 5 "..\..\CircularProgressBar.xaml"              ((UIControls.CircularProgressBar)(target)).IsVisibleChanged += new System.Windows.DependencyPropertyChangedEventHandler(this.HandleVisibleChanged);                            #line default              #line hidden              return;              case 2:              this.LayoutRoot = ((System.Windows.Controls.Grid)(target));              return;              case 3:                            #line 13 "..\..\CircularProgressBar.xaml"              ((System.Windows.Controls.Canvas)(target)).Loaded += new System.Windows.RoutedEventHandler(this.HandleLoaded);                            #line default              #line hidden                            #line 14 "..\..\CircularProgressBar.xaml"              ((System.Windows.Controls.Canvas)(target)).Unloaded += new System.Windows.RoutedEventHandler(this.HandleUnloaded);                            #line default              #line hidden              return;              case 4:              this.C0 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 5:              this.C1 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.C2 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.C3 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.C4 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.C5 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.C6 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.C7 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 12:              this.C8 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 13:              this.SpinnerRotate = ((System.Windows.Media.RotateTransform)(target));              return;              }
Magic Number,UIControls,CircularProgressBar,D:\research\architectureSmells\repos\umeng_umeng-muti-channel-build-tool\VSProject\UIControls_35\UIControls\CircularProgressBar.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 5 "..\..\CircularProgressBar.xaml"              ((UIControls.CircularProgressBar)(target)).IsVisibleChanged += new System.Windows.DependencyPropertyChangedEventHandler(this.HandleVisibleChanged);                            #line default              #line hidden              return;              case 2:              this.LayoutRoot = ((System.Windows.Controls.Grid)(target));              return;              case 3:                            #line 13 "..\..\CircularProgressBar.xaml"              ((System.Windows.Controls.Canvas)(target)).Loaded += new System.Windows.RoutedEventHandler(this.HandleLoaded);                            #line default              #line hidden                            #line 14 "..\..\CircularProgressBar.xaml"              ((System.Windows.Controls.Canvas)(target)).Unloaded += new System.Windows.RoutedEventHandler(this.HandleUnloaded);                            #line default              #line hidden              return;              case 4:              this.C0 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 5:              this.C1 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.C2 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.C3 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.C4 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.C5 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.C6 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.C7 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 12:              this.C8 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 13:              this.SpinnerRotate = ((System.Windows.Media.RotateTransform)(target));              return;              }
Magic Number,UIControls,CircularProgressBar,D:\research\architectureSmells\repos\umeng_umeng-muti-channel-build-tool\VSProject\UIControls_35\UIControls\CircularProgressBar.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 5 "..\..\CircularProgressBar.xaml"              ((UIControls.CircularProgressBar)(target)).IsVisibleChanged += new System.Windows.DependencyPropertyChangedEventHandler(this.HandleVisibleChanged);                            #line default              #line hidden              return;              case 2:              this.LayoutRoot = ((System.Windows.Controls.Grid)(target));              return;              case 3:                            #line 13 "..\..\CircularProgressBar.xaml"              ((System.Windows.Controls.Canvas)(target)).Loaded += new System.Windows.RoutedEventHandler(this.HandleLoaded);                            #line default              #line hidden                            #line 14 "..\..\CircularProgressBar.xaml"              ((System.Windows.Controls.Canvas)(target)).Unloaded += new System.Windows.RoutedEventHandler(this.HandleUnloaded);                            #line default              #line hidden              return;              case 4:              this.C0 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 5:              this.C1 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.C2 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.C3 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.C4 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.C5 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.C6 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.C7 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 12:              this.C8 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 13:              this.SpinnerRotate = ((System.Windows.Media.RotateTransform)(target));              return;              }
Magic Number,UIControls,CircularProgressBar,D:\research\architectureSmells\repos\umeng_umeng-muti-channel-build-tool\VSProject\UIControls_35\UIControls\CircularProgressBar.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 5 "..\..\CircularProgressBar.xaml"              ((UIControls.CircularProgressBar)(target)).IsVisibleChanged += new System.Windows.DependencyPropertyChangedEventHandler(this.HandleVisibleChanged);                            #line default              #line hidden              return;              case 2:              this.LayoutRoot = ((System.Windows.Controls.Grid)(target));              return;              case 3:                            #line 13 "..\..\CircularProgressBar.xaml"              ((System.Windows.Controls.Canvas)(target)).Loaded += new System.Windows.RoutedEventHandler(this.HandleLoaded);                            #line default              #line hidden                            #line 14 "..\..\CircularProgressBar.xaml"              ((System.Windows.Controls.Canvas)(target)).Unloaded += new System.Windows.RoutedEventHandler(this.HandleUnloaded);                            #line default              #line hidden              return;              case 4:              this.C0 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 5:              this.C1 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.C2 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.C3 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.C4 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.C5 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.C6 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.C7 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 12:              this.C8 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 13:              this.SpinnerRotate = ((System.Windows.Media.RotateTransform)(target));              return;              }
Magic Number,UIControls,CircularProgressBar,D:\research\architectureSmells\repos\umeng_umeng-muti-channel-build-tool\VSProject\UIControls_35\UIControls\CircularProgressBar.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 5 "..\..\CircularProgressBar.xaml"              ((UIControls.CircularProgressBar)(target)).IsVisibleChanged += new System.Windows.DependencyPropertyChangedEventHandler(this.HandleVisibleChanged);                            #line default              #line hidden              return;              case 2:              this.LayoutRoot = ((System.Windows.Controls.Grid)(target));              return;              case 3:                            #line 13 "..\..\CircularProgressBar.xaml"              ((System.Windows.Controls.Canvas)(target)).Loaded += new System.Windows.RoutedEventHandler(this.HandleLoaded);                            #line default              #line hidden                            #line 14 "..\..\CircularProgressBar.xaml"              ((System.Windows.Controls.Canvas)(target)).Unloaded += new System.Windows.RoutedEventHandler(this.HandleUnloaded);                            #line default              #line hidden              return;              case 4:              this.C0 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 5:              this.C1 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.C2 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.C3 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.C4 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.C5 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.C6 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.C7 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 12:              this.C8 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 13:              this.SpinnerRotate = ((System.Windows.Media.RotateTransform)(target));              return;              }
Magic Number,UIControls,CircularProgressBar,D:\research\architectureSmells\repos\umeng_umeng-muti-channel-build-tool\VSProject\UIControls_35\UIControls\CircularProgressBar.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 5 "..\..\CircularProgressBar.xaml"              ((UIControls.CircularProgressBar)(target)).IsVisibleChanged += new System.Windows.DependencyPropertyChangedEventHandler(this.HandleVisibleChanged);                            #line default              #line hidden              return;              case 2:              this.LayoutRoot = ((System.Windows.Controls.Grid)(target));              return;              case 3:                            #line 13 "..\..\CircularProgressBar.xaml"              ((System.Windows.Controls.Canvas)(target)).Loaded += new System.Windows.RoutedEventHandler(this.HandleLoaded);                            #line default              #line hidden                            #line 14 "..\..\CircularProgressBar.xaml"              ((System.Windows.Controls.Canvas)(target)).Unloaded += new System.Windows.RoutedEventHandler(this.HandleUnloaded);                            #line default              #line hidden              return;              case 4:              this.C0 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 5:              this.C1 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.C2 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.C3 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.C4 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.C5 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.C6 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.C7 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 12:              this.C8 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 13:              this.SpinnerRotate = ((System.Windows.Media.RotateTransform)(target));              return;              }
Magic Number,UIControls,CircularProgressBar,D:\research\architectureSmells\repos\umeng_umeng-muti-channel-build-tool\VSProject\UIControls_35\UIControls\CircularProgressBar.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 5 "..\..\CircularProgressBar.xaml"              ((UIControls.CircularProgressBar)(target)).IsVisibleChanged += new System.Windows.DependencyPropertyChangedEventHandler(this.HandleVisibleChanged);                            #line default              #line hidden              return;              case 2:              this.LayoutRoot = ((System.Windows.Controls.Grid)(target));              return;              case 3:                            #line 13 "..\..\CircularProgressBar.xaml"              ((System.Windows.Controls.Canvas)(target)).Loaded += new System.Windows.RoutedEventHandler(this.HandleLoaded);                            #line default              #line hidden                            #line 14 "..\..\CircularProgressBar.xaml"              ((System.Windows.Controls.Canvas)(target)).Unloaded += new System.Windows.RoutedEventHandler(this.HandleUnloaded);                            #line default              #line hidden              return;              case 4:              this.C0 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 5:              this.C1 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.C2 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.C3 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.C4 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.C5 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.C6 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.C7 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 12:              this.C8 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 13:              this.SpinnerRotate = ((System.Windows.Media.RotateTransform)(target));              return;              }
Magic Number,UIControls,CircularProgressBar,D:\research\architectureSmells\repos\umeng_umeng-muti-channel-build-tool\VSProject\UIControls_35\UIControls\CircularProgressBar.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 5 "..\..\CircularProgressBar.xaml"              ((UIControls.CircularProgressBar)(target)).IsVisibleChanged += new System.Windows.DependencyPropertyChangedEventHandler(this.HandleVisibleChanged);                            #line default              #line hidden              return;              case 2:              this.LayoutRoot = ((System.Windows.Controls.Grid)(target));              return;              case 3:                            #line 13 "..\..\CircularProgressBar.xaml"              ((System.Windows.Controls.Canvas)(target)).Loaded += new System.Windows.RoutedEventHandler(this.HandleLoaded);                            #line default              #line hidden                            #line 14 "..\..\CircularProgressBar.xaml"              ((System.Windows.Controls.Canvas)(target)).Unloaded += new System.Windows.RoutedEventHandler(this.HandleUnloaded);                            #line default              #line hidden              return;              case 4:              this.C0 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 5:              this.C1 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.C2 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.C3 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.C4 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.C5 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.C6 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.C7 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 12:              this.C8 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 13:              this.SpinnerRotate = ((System.Windows.Media.RotateTransform)(target));              return;              }
Magic Number,UIControls,SplitScreen,D:\research\architectureSmells\repos\umeng_umeng-muti-channel-build-tool\VSProject\UIControls_35\UIControls\SplitScreen.xaml.cs,SplitScreen,The following statement contains a magic number: var background = new RenderTargetBitmap((int)screen.ActualWidth' (int)screen.ActualHeight'                                                       96d' 96d' PixelFormats.Pbgra32);
Magic Number,UIControls,SplitScreen,D:\research\architectureSmells\repos\umeng_umeng-muti-channel-build-tool\VSProject\UIControls_35\UIControls\SplitScreen.xaml.cs,SplitScreen,The following statement contains a magic number: var background = new RenderTargetBitmap((int)screen.ActualWidth' (int)screen.ActualHeight'                                                       96d' 96d' PixelFormats.Pbgra32);
Magic Number,UIControls,SplitScreen,D:\research\architectureSmells\repos\umeng_umeng-muti-channel-build-tool\VSProject\UIControls_35\UIControls\SplitScreen.xaml.cs,SplitScreen,The following statement contains a magic number: this.Container.Height = 300;
Magic Number,UIControls,SplitScreen,D:\research\architectureSmells\repos\umeng_umeng-muti-channel-build-tool\VSProject\UIControls_35\UIControls\SplitScreen.xaml.cs,translate,The following statement contains a magic number: DoubleAnimation da = new DoubleAnimation( from' to' new Duration(TimeSpan.FromMilliseconds(500)));
Magic Number,UIControls,SplitScreen,D:\research\architectureSmells\repos\umeng_umeng-muti-channel-build-tool\VSProject\UIControls_35\UIControls\SplitScreen.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.canvas = ((System.Windows.Controls.Canvas)(target));              return;              case 2:              this.bg_top = ((System.Windows.Controls.Image)(target));              return;              case 3:              this.Container = ((System.Windows.Controls.WrapPanel)(target));              return;              case 4:              this.bg_bottom = ((System.Windows.Controls.Image)(target));              return;              }
Magic Number,UIControls,SplitScreen,D:\research\architectureSmells\repos\umeng_umeng-muti-channel-build-tool\VSProject\UIControls_35\UIControls\SplitScreen.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.canvas = ((System.Windows.Controls.Canvas)(target));              return;              case 2:              this.bg_top = ((System.Windows.Controls.Image)(target));              return;              case 3:              this.Container = ((System.Windows.Controls.WrapPanel)(target));              return;              case 4:              this.bg_bottom = ((System.Windows.Controls.Image)(target));              return;              }
Magic Number,UIControls,SplitScreen,D:\research\architectureSmells\repos\umeng_umeng-muti-channel-build-tool\VSProject\UIControls_35\UIControls\SplitScreen.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.canvas = ((System.Windows.Controls.Canvas)(target));              return;              case 2:              this.bg_top = ((System.Windows.Controls.Image)(target));              return;              case 3:              this.Container = ((System.Windows.Controls.WrapPanel)(target));              return;              case 4:              this.bg_bottom = ((System.Windows.Controls.Image)(target));              return;              }
Missing Default,UIControls,CircularProgressBar,D:\research\architectureSmells\repos\umeng_umeng-muti-channel-build-tool\VSProject\UIControls_35\UIControls\CircularProgressBar.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 5 "..\..\CircularProgressBar.xaml"              ((UIControls.CircularProgressBar)(target)).IsVisibleChanged += new System.Windows.DependencyPropertyChangedEventHandler(this.HandleVisibleChanged);                            #line default              #line hidden              return;              case 2:              this.LayoutRoot = ((System.Windows.Controls.Grid)(target));              return;              case 3:                            #line 13 "..\..\CircularProgressBar.xaml"              ((System.Windows.Controls.Canvas)(target)).Loaded += new System.Windows.RoutedEventHandler(this.HandleLoaded);                            #line default              #line hidden                            #line 14 "..\..\CircularProgressBar.xaml"              ((System.Windows.Controls.Canvas)(target)).Unloaded += new System.Windows.RoutedEventHandler(this.HandleUnloaded);                            #line default              #line hidden              return;              case 4:              this.C0 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 5:              this.C1 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.C2 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.C3 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.C4 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.C5 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.C6 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.C7 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 12:              this.C8 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 13:              this.SpinnerRotate = ((System.Windows.Media.RotateTransform)(target));              return;              }
Missing Default,UIControls,SplitScreen,D:\research\architectureSmells\repos\umeng_umeng-muti-channel-build-tool\VSProject\UIControls_35\UIControls\SplitScreen.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.canvas = ((System.Windows.Controls.Canvas)(target));              return;              case 2:              this.bg_top = ((System.Windows.Controls.Image)(target));              return;              case 3:              this.Container = ((System.Windows.Controls.WrapPanel)(target));              return;              case 4:              this.bg_bottom = ((System.Windows.Controls.Image)(target));              return;              }
