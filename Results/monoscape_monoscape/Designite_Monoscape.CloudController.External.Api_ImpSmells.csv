Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Monoscape.CloudController.External.Api.Sockets,AbstractFileTransferSocket,C:\repos\monoscape_monoscape\Monoscape.CloudController.External.Api\Sockets\AbstractFileTransferSocket.cs,SendFile,The following statement contains a magic number: if (fileNameInBytesLength.Length > 4)  	throw new Exception ("File name length is too long. Please reduce the file name length and try again.");  
Magic Number,Monoscape.CloudController.External.Api.Sockets,AbstractFileTransferSocket,C:\repos\monoscape_monoscape\Monoscape.CloudController.External.Api\Sockets\AbstractFileTransferSocket.cs,SendFile,The following statement contains a magic number: using (fileStream) {  	// FileHeader: [fileNameInBytesLength (4bytes) | fileNameInBytes | fileSizeInBytesLength (8bytes) | fileSizeInBytes]                  	long fileSize = fileStream.Length;  	byte[] fileSizeInBytes = BitConverter.GetBytes (fileSize);  	byte[] fileSizeInBytesLength = BitConverter.GetBytes (fileSizeInBytes.Length);  	int headerSize = 4 + fileNameInBytes.Length + 8 + fileSizeInBytes.Length;  	byte[] fileHeader = new byte[headerSize];  	fileNameInBytesLength.CopyTo (fileHeader' 0);  	fileNameInBytes.CopyTo (fileHeader' 4);  	fileSizeInBytesLength.CopyTo (fileHeader' (4 + fileNameInBytes.Length));  	fileSizeInBytes.CopyTo (fileHeader' (8 + 4 + fileNameInBytes.Length));  	// Starting FileTransferServerSocket...  	IPEndPoint ipEnd = new IPEndPoint (ipAddress' port);  	Socket clientSock = new Socket (AddressFamily.InterNetwork' SocketType.Stream' ProtocolType.IP);  	clientSock.Connect (ipEnd);  	// Send File Header  	clientSock.Send (fileHeader' SocketFlags.None);  	long blockSize = 1024 * 64;  	// Block size = 64K  	byte[] fileData = new byte[fileSize];  	long bytesRead = 0;  	long totalBytesRead = 0;  	long bytesToRead = blockSize;  	// Reading file  	while (bytesToRead > 0) {  		bytesRead = fileStream.Read (fileData' (int)totalBytesRead' (int)blockSize);  		if (bytesRead == 0)  			break;  		// Send File Blocks                      		clientSock.Send (fileData' (int)totalBytesRead' (int)bytesRead' SocketFlags.None);  		totalBytesRead = totalBytesRead + bytesRead;  		bytesToRead = fileSize - totalBytesRead;  		if (bytesToRead < blockSize)  			blockSize = bytesToRead;  	}  }  
Magic Number,Monoscape.CloudController.External.Api.Sockets,AbstractFileTransferSocket,C:\repos\monoscape_monoscape\Monoscape.CloudController.External.Api\Sockets\AbstractFileTransferSocket.cs,SendFile,The following statement contains a magic number: using (fileStream) {  	// FileHeader: [fileNameInBytesLength (4bytes) | fileNameInBytes | fileSizeInBytesLength (8bytes) | fileSizeInBytes]                  	long fileSize = fileStream.Length;  	byte[] fileSizeInBytes = BitConverter.GetBytes (fileSize);  	byte[] fileSizeInBytesLength = BitConverter.GetBytes (fileSizeInBytes.Length);  	int headerSize = 4 + fileNameInBytes.Length + 8 + fileSizeInBytes.Length;  	byte[] fileHeader = new byte[headerSize];  	fileNameInBytesLength.CopyTo (fileHeader' 0);  	fileNameInBytes.CopyTo (fileHeader' 4);  	fileSizeInBytesLength.CopyTo (fileHeader' (4 + fileNameInBytes.Length));  	fileSizeInBytes.CopyTo (fileHeader' (8 + 4 + fileNameInBytes.Length));  	// Starting FileTransferServerSocket...  	IPEndPoint ipEnd = new IPEndPoint (ipAddress' port);  	Socket clientSock = new Socket (AddressFamily.InterNetwork' SocketType.Stream' ProtocolType.IP);  	clientSock.Connect (ipEnd);  	// Send File Header  	clientSock.Send (fileHeader' SocketFlags.None);  	long blockSize = 1024 * 64;  	// Block size = 64K  	byte[] fileData = new byte[fileSize];  	long bytesRead = 0;  	long totalBytesRead = 0;  	long bytesToRead = blockSize;  	// Reading file  	while (bytesToRead > 0) {  		bytesRead = fileStream.Read (fileData' (int)totalBytesRead' (int)blockSize);  		if (bytesRead == 0)  			break;  		// Send File Blocks                      		clientSock.Send (fileData' (int)totalBytesRead' (int)bytesRead' SocketFlags.None);  		totalBytesRead = totalBytesRead + bytesRead;  		bytesToRead = fileSize - totalBytesRead;  		if (bytesToRead < blockSize)  			blockSize = bytesToRead;  	}  }  
Magic Number,Monoscape.CloudController.External.Api.Sockets,AbstractFileTransferSocket,C:\repos\monoscape_monoscape\Monoscape.CloudController.External.Api\Sockets\AbstractFileTransferSocket.cs,SendFile,The following statement contains a magic number: using (fileStream) {  	// FileHeader: [fileNameInBytesLength (4bytes) | fileNameInBytes | fileSizeInBytesLength (8bytes) | fileSizeInBytes]                  	long fileSize = fileStream.Length;  	byte[] fileSizeInBytes = BitConverter.GetBytes (fileSize);  	byte[] fileSizeInBytesLength = BitConverter.GetBytes (fileSizeInBytes.Length);  	int headerSize = 4 + fileNameInBytes.Length + 8 + fileSizeInBytes.Length;  	byte[] fileHeader = new byte[headerSize];  	fileNameInBytesLength.CopyTo (fileHeader' 0);  	fileNameInBytes.CopyTo (fileHeader' 4);  	fileSizeInBytesLength.CopyTo (fileHeader' (4 + fileNameInBytes.Length));  	fileSizeInBytes.CopyTo (fileHeader' (8 + 4 + fileNameInBytes.Length));  	// Starting FileTransferServerSocket...  	IPEndPoint ipEnd = new IPEndPoint (ipAddress' port);  	Socket clientSock = new Socket (AddressFamily.InterNetwork' SocketType.Stream' ProtocolType.IP);  	clientSock.Connect (ipEnd);  	// Send File Header  	clientSock.Send (fileHeader' SocketFlags.None);  	long blockSize = 1024 * 64;  	// Block size = 64K  	byte[] fileData = new byte[fileSize];  	long bytesRead = 0;  	long totalBytesRead = 0;  	long bytesToRead = blockSize;  	// Reading file  	while (bytesToRead > 0) {  		bytesRead = fileStream.Read (fileData' (int)totalBytesRead' (int)blockSize);  		if (bytesRead == 0)  			break;  		// Send File Blocks                      		clientSock.Send (fileData' (int)totalBytesRead' (int)bytesRead' SocketFlags.None);  		totalBytesRead = totalBytesRead + bytesRead;  		bytesToRead = fileSize - totalBytesRead;  		if (bytesToRead < blockSize)  			blockSize = bytesToRead;  	}  }  
Magic Number,Monoscape.CloudController.External.Api.Sockets,AbstractFileTransferSocket,C:\repos\monoscape_monoscape\Monoscape.CloudController.External.Api\Sockets\AbstractFileTransferSocket.cs,SendFile,The following statement contains a magic number: using (fileStream) {  	// FileHeader: [fileNameInBytesLength (4bytes) | fileNameInBytes | fileSizeInBytesLength (8bytes) | fileSizeInBytes]                  	long fileSize = fileStream.Length;  	byte[] fileSizeInBytes = BitConverter.GetBytes (fileSize);  	byte[] fileSizeInBytesLength = BitConverter.GetBytes (fileSizeInBytes.Length);  	int headerSize = 4 + fileNameInBytes.Length + 8 + fileSizeInBytes.Length;  	byte[] fileHeader = new byte[headerSize];  	fileNameInBytesLength.CopyTo (fileHeader' 0);  	fileNameInBytes.CopyTo (fileHeader' 4);  	fileSizeInBytesLength.CopyTo (fileHeader' (4 + fileNameInBytes.Length));  	fileSizeInBytes.CopyTo (fileHeader' (8 + 4 + fileNameInBytes.Length));  	// Starting FileTransferServerSocket...  	IPEndPoint ipEnd = new IPEndPoint (ipAddress' port);  	Socket clientSock = new Socket (AddressFamily.InterNetwork' SocketType.Stream' ProtocolType.IP);  	clientSock.Connect (ipEnd);  	// Send File Header  	clientSock.Send (fileHeader' SocketFlags.None);  	long blockSize = 1024 * 64;  	// Block size = 64K  	byte[] fileData = new byte[fileSize];  	long bytesRead = 0;  	long totalBytesRead = 0;  	long bytesToRead = blockSize;  	// Reading file  	while (bytesToRead > 0) {  		bytesRead = fileStream.Read (fileData' (int)totalBytesRead' (int)blockSize);  		if (bytesRead == 0)  			break;  		// Send File Blocks                      		clientSock.Send (fileData' (int)totalBytesRead' (int)bytesRead' SocketFlags.None);  		totalBytesRead = totalBytesRead + bytesRead;  		bytesToRead = fileSize - totalBytesRead;  		if (bytesToRead < blockSize)  			blockSize = bytesToRead;  	}  }  
Magic Number,Monoscape.CloudController.External.Api.Sockets,AbstractFileTransferSocket,C:\repos\monoscape_monoscape\Monoscape.CloudController.External.Api\Sockets\AbstractFileTransferSocket.cs,SendFile,The following statement contains a magic number: using (fileStream) {  	// FileHeader: [fileNameInBytesLength (4bytes) | fileNameInBytes | fileSizeInBytesLength (8bytes) | fileSizeInBytes]                  	long fileSize = fileStream.Length;  	byte[] fileSizeInBytes = BitConverter.GetBytes (fileSize);  	byte[] fileSizeInBytesLength = BitConverter.GetBytes (fileSizeInBytes.Length);  	int headerSize = 4 + fileNameInBytes.Length + 8 + fileSizeInBytes.Length;  	byte[] fileHeader = new byte[headerSize];  	fileNameInBytesLength.CopyTo (fileHeader' 0);  	fileNameInBytes.CopyTo (fileHeader' 4);  	fileSizeInBytesLength.CopyTo (fileHeader' (4 + fileNameInBytes.Length));  	fileSizeInBytes.CopyTo (fileHeader' (8 + 4 + fileNameInBytes.Length));  	// Starting FileTransferServerSocket...  	IPEndPoint ipEnd = new IPEndPoint (ipAddress' port);  	Socket clientSock = new Socket (AddressFamily.InterNetwork' SocketType.Stream' ProtocolType.IP);  	clientSock.Connect (ipEnd);  	// Send File Header  	clientSock.Send (fileHeader' SocketFlags.None);  	long blockSize = 1024 * 64;  	// Block size = 64K  	byte[] fileData = new byte[fileSize];  	long bytesRead = 0;  	long totalBytesRead = 0;  	long bytesToRead = blockSize;  	// Reading file  	while (bytesToRead > 0) {  		bytesRead = fileStream.Read (fileData' (int)totalBytesRead' (int)blockSize);  		if (bytesRead == 0)  			break;  		// Send File Blocks                      		clientSock.Send (fileData' (int)totalBytesRead' (int)bytesRead' SocketFlags.None);  		totalBytesRead = totalBytesRead + bytesRead;  		bytesToRead = fileSize - totalBytesRead;  		if (bytesToRead < blockSize)  			blockSize = bytesToRead;  	}  }  
Magic Number,Monoscape.CloudController.External.Api.Sockets,AbstractFileTransferSocket,C:\repos\monoscape_monoscape\Monoscape.CloudController.External.Api\Sockets\AbstractFileTransferSocket.cs,SendFile,The following statement contains a magic number: using (fileStream) {  	// FileHeader: [fileNameInBytesLength (4bytes) | fileNameInBytes | fileSizeInBytesLength (8bytes) | fileSizeInBytes]                  	long fileSize = fileStream.Length;  	byte[] fileSizeInBytes = BitConverter.GetBytes (fileSize);  	byte[] fileSizeInBytesLength = BitConverter.GetBytes (fileSizeInBytes.Length);  	int headerSize = 4 + fileNameInBytes.Length + 8 + fileSizeInBytes.Length;  	byte[] fileHeader = new byte[headerSize];  	fileNameInBytesLength.CopyTo (fileHeader' 0);  	fileNameInBytes.CopyTo (fileHeader' 4);  	fileSizeInBytesLength.CopyTo (fileHeader' (4 + fileNameInBytes.Length));  	fileSizeInBytes.CopyTo (fileHeader' (8 + 4 + fileNameInBytes.Length));  	// Starting FileTransferServerSocket...  	IPEndPoint ipEnd = new IPEndPoint (ipAddress' port);  	Socket clientSock = new Socket (AddressFamily.InterNetwork' SocketType.Stream' ProtocolType.IP);  	clientSock.Connect (ipEnd);  	// Send File Header  	clientSock.Send (fileHeader' SocketFlags.None);  	long blockSize = 1024 * 64;  	// Block size = 64K  	byte[] fileData = new byte[fileSize];  	long bytesRead = 0;  	long totalBytesRead = 0;  	long bytesToRead = blockSize;  	// Reading file  	while (bytesToRead > 0) {  		bytesRead = fileStream.Read (fileData' (int)totalBytesRead' (int)blockSize);  		if (bytesRead == 0)  			break;  		// Send File Blocks                      		clientSock.Send (fileData' (int)totalBytesRead' (int)bytesRead' SocketFlags.None);  		totalBytesRead = totalBytesRead + bytesRead;  		bytesToRead = fileSize - totalBytesRead;  		if (bytesToRead < blockSize)  			blockSize = bytesToRead;  	}  }  
Magic Number,Monoscape.CloudController.External.Api.Sockets,AbstractFileTransferSocket,C:\repos\monoscape_monoscape\Monoscape.CloudController.External.Api\Sockets\AbstractFileTransferSocket.cs,SendFile,The following statement contains a magic number: using (fileStream) {  	// FileHeader: [fileNameInBytesLength (4bytes) | fileNameInBytes | fileSizeInBytesLength (8bytes) | fileSizeInBytes]                  	long fileSize = fileStream.Length;  	byte[] fileSizeInBytes = BitConverter.GetBytes (fileSize);  	byte[] fileSizeInBytesLength = BitConverter.GetBytes (fileSizeInBytes.Length);  	int headerSize = 4 + fileNameInBytes.Length + 8 + fileSizeInBytes.Length;  	byte[] fileHeader = new byte[headerSize];  	fileNameInBytesLength.CopyTo (fileHeader' 0);  	fileNameInBytes.CopyTo (fileHeader' 4);  	fileSizeInBytesLength.CopyTo (fileHeader' (4 + fileNameInBytes.Length));  	fileSizeInBytes.CopyTo (fileHeader' (8 + 4 + fileNameInBytes.Length));  	// Starting FileTransferServerSocket...  	IPEndPoint ipEnd = new IPEndPoint (ipAddress' port);  	Socket clientSock = new Socket (AddressFamily.InterNetwork' SocketType.Stream' ProtocolType.IP);  	clientSock.Connect (ipEnd);  	// Send File Header  	clientSock.Send (fileHeader' SocketFlags.None);  	long blockSize = 1024 * 64;  	// Block size = 64K  	byte[] fileData = new byte[fileSize];  	long bytesRead = 0;  	long totalBytesRead = 0;  	long bytesToRead = blockSize;  	// Reading file  	while (bytesToRead > 0) {  		bytesRead = fileStream.Read (fileData' (int)totalBytesRead' (int)blockSize);  		if (bytesRead == 0)  			break;  		// Send File Blocks                      		clientSock.Send (fileData' (int)totalBytesRead' (int)bytesRead' SocketFlags.None);  		totalBytesRead = totalBytesRead + bytesRead;  		bytesToRead = fileSize - totalBytesRead;  		if (bytesToRead < blockSize)  			blockSize = bytesToRead;  	}  }  
Magic Number,Monoscape.CloudController.External.Api.Sockets,AbstractFileTransferSocket,C:\repos\monoscape_monoscape\Monoscape.CloudController.External.Api\Sockets\AbstractFileTransferSocket.cs,SendFile,The following statement contains a magic number: using (fileStream) {  	// FileHeader: [fileNameInBytesLength (4bytes) | fileNameInBytes | fileSizeInBytesLength (8bytes) | fileSizeInBytes]                  	long fileSize = fileStream.Length;  	byte[] fileSizeInBytes = BitConverter.GetBytes (fileSize);  	byte[] fileSizeInBytesLength = BitConverter.GetBytes (fileSizeInBytes.Length);  	int headerSize = 4 + fileNameInBytes.Length + 8 + fileSizeInBytes.Length;  	byte[] fileHeader = new byte[headerSize];  	fileNameInBytesLength.CopyTo (fileHeader' 0);  	fileNameInBytes.CopyTo (fileHeader' 4);  	fileSizeInBytesLength.CopyTo (fileHeader' (4 + fileNameInBytes.Length));  	fileSizeInBytes.CopyTo (fileHeader' (8 + 4 + fileNameInBytes.Length));  	// Starting FileTransferServerSocket...  	IPEndPoint ipEnd = new IPEndPoint (ipAddress' port);  	Socket clientSock = new Socket (AddressFamily.InterNetwork' SocketType.Stream' ProtocolType.IP);  	clientSock.Connect (ipEnd);  	// Send File Header  	clientSock.Send (fileHeader' SocketFlags.None);  	long blockSize = 1024 * 64;  	// Block size = 64K  	byte[] fileData = new byte[fileSize];  	long bytesRead = 0;  	long totalBytesRead = 0;  	long bytesToRead = blockSize;  	// Reading file  	while (bytesToRead > 0) {  		bytesRead = fileStream.Read (fileData' (int)totalBytesRead' (int)blockSize);  		if (bytesRead == 0)  			break;  		// Send File Blocks                      		clientSock.Send (fileData' (int)totalBytesRead' (int)bytesRead' SocketFlags.None);  		totalBytesRead = totalBytesRead + bytesRead;  		bytesToRead = fileSize - totalBytesRead;  		if (bytesToRead < blockSize)  			blockSize = bytesToRead;  	}  }  
Magic Number,Monoscape.CloudController.External.Api.Sockets,AbstractFileTransferSocket,C:\repos\monoscape_monoscape\Monoscape.CloudController.External.Api\Sockets\AbstractFileTransferSocket.cs,SendFile,The following statement contains a magic number: fileNameInBytes.CopyTo (fileHeader' 4);  
Magic Number,Monoscape.CloudController.External.Api.Sockets,AbstractFileTransferSocket,C:\repos\monoscape_monoscape\Monoscape.CloudController.External.Api\Sockets\AbstractFileTransferSocket.cs,SendFile,The following statement contains a magic number: fileSizeInBytesLength.CopyTo (fileHeader' (4 + fileNameInBytes.Length));  
Magic Number,Monoscape.CloudController.External.Api.Sockets,AbstractFileTransferSocket,C:\repos\monoscape_monoscape\Monoscape.CloudController.External.Api\Sockets\AbstractFileTransferSocket.cs,SendFile,The following statement contains a magic number: fileSizeInBytes.CopyTo (fileHeader' (8 + 4 + fileNameInBytes.Length));  
Magic Number,Monoscape.CloudController.External.Api.Sockets,AbstractFileTransferSocket,C:\repos\monoscape_monoscape\Monoscape.CloudController.External.Api\Sockets\AbstractFileTransferSocket.cs,SendFile,The following statement contains a magic number: fileSizeInBytes.CopyTo (fileHeader' (8 + 4 + fileNameInBytes.Length));  
