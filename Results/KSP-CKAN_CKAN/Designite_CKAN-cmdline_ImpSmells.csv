Implementation smell,Namespace,Class,File,Method,Description
Long Method,CKAN.CmdLine,Install,D:\research\architectureSmells\repos\KSP-CKAN_CKAN\Cmdline\Action\Install.cs,RunCommand,The method has 237 lines of code.
Long Method,CKAN.CmdLine,KSP,D:\research\architectureSmells\repos\KSP-CKAN_CKAN\Cmdline\Action\KSP.cs,FakeNewKSPInstall,The method has 135 lines of code.
Long Method,CKAN.CmdLine,List,D:\research\architectureSmells\repos\KSP-CKAN_CKAN\Cmdline\Action\List.cs,RunCommand,The method has 109 lines of code.
Long Method,CKAN.CmdLine,Replace,D:\research\architectureSmells\repos\KSP-CKAN_CKAN\Cmdline\Action\Replace.cs,RunCommand,The method has 138 lines of code.
Long Method,CKAN.CmdLine,Upgrade,D:\research\architectureSmells\repos\KSP-CKAN_CKAN\Cmdline\Action\Upgrade.cs,RunCommand,The method has 105 lines of code.
Long Method,CKAN.CmdLine,ConsoleUser,D:\research\architectureSmells\repos\KSP-CKAN_CKAN\Cmdline\ConsoleUser.cs,RaiseSelectionDialog,The method has 125 lines of code.
Long Method,CKAN.CmdLine.Action,Compat,D:\research\architectureSmells\repos\KSP-CKAN_CKAN\Cmdline\Action\Compat.cs,RunSubCommand,The method has 116 lines of code.
Complex Method,CKAN.CmdLine,Install,D:\research\architectureSmells\repos\KSP-CKAN_CKAN\Cmdline\Action\Install.cs,RunCommand,Cyclomatic complexity of the method is 9
Complex Method,CKAN.CmdLine,KSP,D:\research\architectureSmells\repos\KSP-CKAN_CKAN\Cmdline\Action\KSP.cs,FakeNewKSPInstall,Cyclomatic complexity of the method is 8
Complex Method,CKAN.CmdLine,List,D:\research\architectureSmells\repos\KSP-CKAN_CKAN\Cmdline\Action\List.cs,RunCommand,Cyclomatic complexity of the method is 17
Complex Method,CKAN.CmdLine,Replace,D:\research\architectureSmells\repos\KSP-CKAN_CKAN\Cmdline\Action\Replace.cs,RunCommand,Cyclomatic complexity of the method is 14
Complex Method,CKAN.CmdLine,Search,D:\research\architectureSmells\repos\KSP-CKAN_CKAN\Cmdline\Action\Search.cs,RunCommand,Cyclomatic complexity of the method is 13
Complex Method,CKAN.CmdLine,Show,D:\research\architectureSmells\repos\KSP-CKAN_CKAN\Cmdline\Action\Show.cs,RunCommand,Cyclomatic complexity of the method is 8
Complex Method,CKAN.CmdLine,Show,D:\research\architectureSmells\repos\KSP-CKAN_CKAN\Cmdline\Action\Show.cs,ShowMod,Cyclomatic complexity of the method is 18
Complex Method,CKAN.CmdLine,Upgrade,D:\research\architectureSmells\repos\KSP-CKAN_CKAN\Cmdline\Action\Upgrade.cs,RunCommand,Cyclomatic complexity of the method is 12
Complex Method,CKAN.CmdLine,ConsoleUser,D:\research\architectureSmells\repos\KSP-CKAN_CKAN\Cmdline\ConsoleUser.cs,RaiseSelectionDialog,Cyclomatic complexity of the method is 19
Complex Method,CKAN.CmdLine,MainClass,D:\research\architectureSmells\repos\KSP-CKAN_CKAN\Cmdline\Main.cs,Execute,Cyclomatic complexity of the method is 9
Complex Method,CKAN.CmdLine,MainClass,D:\research\architectureSmells\repos\KSP-CKAN_CKAN\Cmdline\Main.cs,RunSimpleAction,Cyclomatic complexity of the method is 18
Long Parameter List,CKAN.CmdLine,MainClass,D:\research\architectureSmells\repos\KSP-CKAN_CKAN\Cmdline\Main.cs,RunSimpleAction,The method has 5 parameters. Parameters: cmdline' options' args' user' manager
Long Statement,CKAN.CmdLine,Install,D:\research\architectureSmells\repos\KSP-CKAN_CKAN\Cmdline\Action\Install.cs,RunCommand,The length of the statement  "                    // If it is a local file' we already know the filename. If it is remote' create a temporary file and download the remote resource. " is 130.
Long Statement,CKAN.CmdLine,Install,D:\research\architectureSmells\repos\KSP-CKAN_CKAN\Cmdline\Action\Install.cs,RunCommand,The length of the statement  "                        user.RaiseMessage("{0} requires {1} but it is not listed in the index' or not available for your version of KSP."' ex.parent' ex.module); " is 137.
Long Statement,CKAN.CmdLine,Install,D:\research\architectureSmells\repos\KSP-CKAN_CKAN\Cmdline\Action\Install.cs,RunCommand,The length of the statement  "                        user.RaiseMessage("{0} requires {1} {2} but it is not listed in the index' or not available for your version of KSP."' ex.parent' ex.module' ex.version); " is 153.
Long Statement,CKAN.CmdLine,Install,D:\research\architectureSmells\repos\KSP-CKAN_CKAN\Cmdline\Action\Install.cs,RunCommand,The length of the statement  "                        user.RaiseMessage("Module {0} required but it is not listed in the index' or not available for your version of KSP."' ex.module); " is 129.
Long Statement,CKAN.CmdLine,Install,D:\research\architectureSmells\repos\KSP-CKAN_CKAN\Cmdline\Action\Install.cs,RunCommand,The length of the statement  "                        user.RaiseMessage("Module {0} {1} required but it is not listed in the index' or not available for your version of KSP."' ex.module' ex.version); " is 145.
Long Statement,CKAN.CmdLine,KSP,D:\research\architectureSmells\repos\KSP-CKAN_CKAN\Cmdline\Action\KSP.cs,CloneInstall,The length of the statement  "                User.RaiseError(String.Format("No instance with this name or at this path: {0}\n See below for a list of known instances:\n"' instanceNameOrPath)); " is 147.
Long Statement,CKAN.CmdLine,KSP,D:\research\architectureSmells\repos\KSP-CKAN_CKAN\Cmdline\Action\KSP.cs,FakeNewKSPInstall,The length of the statement  "            User.RaiseMessage(String.Format("Creating new fake KSP install {0} at {1} with version {2}"' installName' path' version.ToString())); " is 133.
Long Statement,CKAN.CmdLine,KSPSubOptions,D:\research\architectureSmells\repos\KSP-CKAN_CKAN\Cmdline\Action\KSP.cs,GetUsage,The length of the statement  "                            ht.AddPreOptionsLine($"Usage: ckan ksp {verb} [options] name path version [--MakingHistory <version>] [--BreakingGround <version>]"); " is 133.
Long Statement,CKAN.CmdLine,List,D:\research\architectureSmells\repos\KSP-CKAN_CKAN\Cmdline\Action\List.cs,RunCommand,The length of the statement  "                user.RaiseMessage("\r\nLegend: -: Up to date. +:Auto-installed. X: Incompatible. ^: Upgradable. >: Replaceable\r\n        A: Autodetected. ?: Unknown. *: Broken. "); " is 165.
Long Statement,CKAN.CmdLine,Repair,D:\research\architectureSmells\repos\KSP-CKAN_CKAN\Cmdline\Action\Repair.cs,RunSubCommand,The length of the statement  "            Parser.Default.ParseArgumentsStrict(unparsed.options.ToArray()' new RepairSubOptions()' (string option' object suboptions) => " is 125.
Long Statement,CKAN.CmdLine,Replace,D:\research\architectureSmells\repos\KSP-CKAN_CKAN\Cmdline\Action\Replace.cs,RunCommand,The length of the statement  "                    ModuleInstaller.GetInstance(ksp' manager.Cache' User).Replace(to_replace' replace_ops' new NetAsyncModulesDownloader(User' manager.Cache)); " is 139.
Long Statement,CKAN.CmdLine,Replace,D:\research\architectureSmells\repos\KSP-CKAN_CKAN\Cmdline\Action\Replace.cs,RunCommand,The length of the statement  "                    User.RaiseMessage("Dependencies not satisfied for replacement' {0} requires {1} {2} but it is not listed in the index' or not available for your version of KSP."' ex.parent' ex.module' ex.version); " is 197.
Long Statement,CKAN.CmdLine,Repo,D:\research\architectureSmells\repos\KSP-CKAN_CKAN\Cmdline\Action\Repo.cs,AvailableRepositories,The length of the statement  "                User.RaiseError("Couldn't fetch CKAN repositories master list from {0}"' Repository.default_repo_master_list.ToString()); " is 121.
Long Statement,CKAN.CmdLine,Repo,D:\research\architectureSmells\repos\KSP-CKAN_CKAN\Cmdline\Action\Repo.cs,AddRepository,The length of the statement  "                    User.RaiseError("Couldn't fetch CKAN repositories master list from {0}"' Repository.default_repo_master_list.ToString()); " is 121.
Long Statement,CKAN.CmdLine,Repo,D:\research\architectureSmells\repos\KSP-CKAN_CKAN\Cmdline\Action\Repo.cs,DefaultRepository,The length of the statement  "            repositories.Add(Repository.default_ckan_repo_name' new Repository(Repository.default_ckan_repo_name' Repository.default_ckan_repo_uri)); " is 137.
Long Statement,CKAN.CmdLine,Update,D:\research\architectureSmells\repos\KSP-CKAN_CKAN\Cmdline\Action\Update.cs,PrintChanges,The length of the statement  "            user.RaiseMessage("Found {0} new modules' {1} removed modules and {2} updated modules."' added.Count()' removed.Count()' updated.Count()); " is 138.
Long Statement,CKAN.CmdLine,Upgrade,D:\research\architectureSmells\repos\KSP-CKAN_CKAN\Cmdline\Action\Upgrade.cs,RunCommand,The length of the statement  "                    ModuleInstaller.GetInstance(ksp' manager.Cache' User).Upgrade(to_upgrade' new NetAsyncModulesDownloader(User' manager.Cache)); " is 126.
Long Statement,CKAN.CmdLine,Upgrade,D:\research\architectureSmells\repos\KSP-CKAN_CKAN\Cmdline\Action\Upgrade.cs,RunCommand,The length of the statement  "                    ModuleInstaller.GetInstance(ksp' manager.Cache' User).Upgrade(options.modules' new NetAsyncModulesDownloader(User' manager.Cache)); " is 131.
Long Statement,CKAN.CmdLine,CommonOptions,D:\research\architectureSmells\repos\KSP-CKAN_CKAN\Cmdline\Options.cs,Handle,The length of the statement  "                    user.RaiseError("You are trying to run CKAN as root.\r\nThis is a bad idea and there is absolutely no good reason to do it. Please run CKAN from a user account (or use --asroot if you are feeling brave)."); " is 206.
Long Statement,CKAN.CmdLine,InstanceSpecificOptions,D:\research\architectureSmells\repos\KSP-CKAN_CKAN\Cmdline\Options.cs,Handle,The length of the statement  "                    user.RaiseMessage("Invalid KSP installation specified \"{0}\"' use '--kspdir' to specify by path' or 'ksp list' to see known KSP installations"' k.instance); " is 157.
Long Statement,CKAN.CmdLine.Action,Compat,D:\research\architectureSmells\repos\KSP-CKAN_CKAN\Cmdline\Action\Compat.cs,RunSubCommand,The length of the statement  "            Parser.Default.ParseArgumentsStrict(options.options.ToArray()' new CompatOptions()' (string option' object suboptions) => " is 121.
Complex Conditional,CKAN.CmdLine,MainClass,D:\research\architectureSmells\repos\KSP-CKAN_CKAN\Cmdline\Main.cs,Main,The conditional expression  "args.All(a => a == "--verbose" || a == "--debug" || a == "--asroot" || a == "--show-console")"  is complex.
Complex Conditional,CKAN.CmdLine,CommonOptions,D:\research\architectureSmells\repos\KSP-CKAN_CKAN\Cmdline\Options.cs,Handle,The conditional expression  "(Platform.IsUnix || Platform.IsMac) && CmdLineUtil.GetUID() == 0 && !File.Exists("/.dockerenv")"  is complex.
Empty Catch Block,CKAN.CmdLine,KSP,D:\research\architectureSmells\repos\KSP-CKAN_CKAN\Cmdline\Action\KSP.cs,FakeNewKSPInstall,The method has an empty catch block.
Empty Catch Block,CKAN.CmdLine,CommonOptions,D:\research\architectureSmells\repos\KSP-CKAN_CKAN\Cmdline\Options.cs,CheckMonoVersion,The method has an empty catch block.
Magic Number,CKAN.CmdLine,CommonOptions,D:\research\architectureSmells\repos\KSP-CKAN_CKAN\Cmdline\Options.cs,Handle,The following statement contains a magic number: CheckMonoVersion(user' 3' 1' 0);
Missing Default,CKAN.CmdLine,AuthToken,D:\research\architectureSmells\repos\KSP-CKAN_CKAN\Cmdline\Action\AuthToken.cs,RunSubCommand,The following switch statement is missing a default case: switch (option)                          {                              case "list":                                  exitCode = listAuthTokens(options);                                  break;                              case "add":                                  exitCode = addAuthToken((AddAuthTokenOptions)options);                                  break;                              case "remove":                                  exitCode = removeAuthToken((RemoveAuthTokenOptions)options);                                  break;                          }
Missing Default,CKAN.CmdLine,AuthTokenSubOptions,D:\research\architectureSmells\repos\KSP-CKAN_CKAN\Cmdline\Action\AuthToken.cs,GetUsage,The following switch statement is missing a default case: switch (verb)                  {                      case "add":                          ht.AddPreOptionsLine($"Usage: ckan authtoken {verb} [options] host token");                          break;                      case "remove":                          ht.AddPreOptionsLine($"Usage: ckan authtoken {verb} [options] host");                          break;                      case "list":                          ht.AddPreOptionsLine($"Usage: ckan authtoken {verb} [options]");                          break;                  }
Missing Default,CKAN.CmdLine,MarkSubOptions,D:\research\architectureSmells\repos\KSP-CKAN_CKAN\Cmdline\Action\Mark.cs,GetUsage,The following switch statement is missing a default case: switch (verb)                  {                      case "auto":                          ht.AddPreOptionsLine($"Usage: ckan mark {verb} [options] Mod [Mod2 ...]");                          break;                        case "user":                          ht.AddPreOptionsLine($"Usage: ckan mark {verb} [options] Mod [Mod2 ...]");                          break;                  }
Missing Default,CKAN.CmdLine,Repo,D:\research\architectureSmells\repos\KSP-CKAN_CKAN\Cmdline\Action\Repo.cs,RunSubCommand,The following switch statement is missing a default case: switch (args[i])                  {                      case "remove":                          args[i] = "forget";                          break;                  }
Missing Default,CKAN.CmdLine,MainClass,D:\research\architectureSmells\repos\KSP-CKAN_CKAN\Cmdline\Main.cs,Execute,The following switch statement is missing a default case: switch (args[0])                  {                      case "repair":                          return (new Repair()).RunSubCommand(manager' opts' new SubCommandOptions(args));                        case "ksp":                          return (new KSP()).RunSubCommand(manager' opts' new SubCommandOptions(args));                        case "compat":                          return (new Compat()).RunSubCommand(manager' opts' new SubCommandOptions(args));                        case "repo":                          return (new Repo()).RunSubCommand(manager' opts' new SubCommandOptions(args));                        case "authtoken":                          return (new AuthToken()).RunSubCommand(manager' opts' new SubCommandOptions(args));                        case "cache":                          return (new Cache()).RunSubCommand(manager' opts' new SubCommandOptions(args));                                                case "mark":                          return (new Mark()).RunSubCommand(manager' opts' new SubCommandOptions(args));                  }
