Implementation smell,Namespace,Class,File,Method,Description
Long Method,CKAN.CmdLine,Install,C:\repos\KSP-CKAN_CKAN\Cmdline\Action\Install.cs,RunCommand,The method has 190 lines of code.
Long Method,CKAN.CmdLine,ConsoleUser,C:\repos\KSP-CKAN_CKAN\Cmdline\ConsoleUser.cs,DisplaySelectionDialog,The method has 123 lines of code.
Long Method,CKAN.CmdLine.Action,CompatSubCommand,C:\repos\KSP-CKAN_CKAN\Cmdline\Action\CompatSubCommand.cs,RunSubCommand,The method has 116 lines of code.
Complex Method,CKAN.CmdLine,Install,C:\repos\KSP-CKAN_CKAN\Cmdline\Action\Install.cs,RunCommand,Cyclomatic complexity of the method is 8
Complex Method,CKAN.CmdLine,List,C:\repos\KSP-CKAN_CKAN\Cmdline\Action\List.cs,RunCommand,Cyclomatic complexity of the method is 8
Complex Method,CKAN.CmdLine,Show,C:\repos\KSP-CKAN_CKAN\Cmdline\Action\Show.cs,ShowMod,Cyclomatic complexity of the method is 18
Complex Method,CKAN.CmdLine,Upgrade,C:\repos\KSP-CKAN_CKAN\Cmdline\Action\Upgrade.cs,RunCommand,Cyclomatic complexity of the method is 9
Complex Method,CKAN.CmdLine,ConsoleUser,C:\repos\KSP-CKAN_CKAN\Cmdline\ConsoleUser.cs,DisplaySelectionDialog,Cyclomatic complexity of the method is 18
Long Parameter List,CKAN.CmdLine,MainClass,C:\repos\KSP-CKAN_CKAN\Cmdline\Main.cs,RunSimpleAction,The method has 5 parameters. Parameters: cmdline' options' args' user' manager
Long Statement,CKAN.CmdLine,Install,C:\repos\KSP-CKAN_CKAN\Cmdline\Action\Install.cs,RunCommand,The length of the statement  "                    // If it is a local file' we already know the filename. If it is remote' create a temporary file and download the remote resource. " is 130.
Long Statement,CKAN.CmdLine,Install,C:\repos\KSP-CKAN_CKAN\Cmdline\Action\Install.cs,RunCommand,The length of the statement  "                user.RaiseMessage("Module {0} required but it is not listed in the index' or not available for your version of KSP."' ex.module); " is 129.
Long Statement,CKAN.CmdLine,Repair,C:\repos\KSP-CKAN_CKAN\Cmdline\Action\Repair.cs,RunSubCommand,The length of the statement  "            Parser.Default.ParseArgumentsStrict(unparsed.options.ToArray()' new RepairSubOptions()' (string option' object suboptions) => " is 125.
Long Statement,CKAN.CmdLine,Repo,C:\repos\KSP-CKAN_CKAN\Cmdline\Action\Repo.cs,AvailableRepositories,The length of the statement  "                User.RaiseError("Couldn't fetch CKAN repositories master list from {0}"' Repository.default_repo_master_list.ToString()); " is 121.
Long Statement,CKAN.CmdLine,Repo,C:\repos\KSP-CKAN_CKAN\Cmdline\Action\Repo.cs,AddRepository,The length of the statement  "                    User.RaiseError("Couldn't fetch CKAN repositories master list from {0}"' Repository.default_repo_master_list.ToString()); " is 121.
Long Statement,CKAN.CmdLine,Repo,C:\repos\KSP-CKAN_CKAN\Cmdline\Action\Repo.cs,DefaultRepository,The length of the statement  "            repositories.Add(Repository.default_ckan_repo_name' new Repository(Repository.default_ckan_repo_name' Repository.default_ckan_repo_uri)); " is 137.
Long Statement,CKAN.CmdLine,Search,C:\repos\KSP-CKAN_CKAN\Cmdline\Action\Search.cs,PerformSearch,The length of the statement  "                return module.name.IndexOf(term' StringComparison.OrdinalIgnoreCase) > -1 || module.identifier.IndexOf(term' StringComparison.OrdinalIgnoreCase) > -1 || modDesc.IndexOf(term' StringComparison.OrdinalIgnoreCase) > -1; " is 216.
Long Statement,CKAN.CmdLine,Update,C:\repos\KSP-CKAN_CKAN\Cmdline\Action\Update.cs,PrintChanges,The length of the statement  "            user.RaiseMessage("Found {0} new modules' {1} removed modules and {2} updated modules."' added.Count()' removed.Count()' updated.Count()); " is 138.
Long Statement,CKAN.CmdLine,CommonOptions,C:\repos\KSP-CKAN_CKAN\Cmdline\Options.cs,Handle,The length of the statement  "                    user.RaiseError("You are trying to run CKAN as root.\r\nThis is a bad idea and there is absolutely no good reason to do it. Please run CKAN from a user account (or use --asroot if you are feeling brave)."); " is 206.
Long Statement,CKAN.CmdLine,InstanceSpecificOptions,C:\repos\KSP-CKAN_CKAN\Cmdline\Options.cs,Handle,The length of the statement  "                        user.RaiseMessage("Invalid KSP installation specified \"{0}\"' use '--kspdir' to specify by path' or 'ksp list' to see known KSP installations"' KSP); " is 150.
Long Statement,CKAN.CmdLine.Action,CompatSubCommand,C:\repos\KSP-CKAN_CKAN\Cmdline\Action\CompatSubCommand.cs,RunSubCommand,The length of the statement  "            Parser.Default.ParseArgumentsStrict(options.options.ToArray()' new CompatOptions()' (string option' object suboptions) => " is 121.
Complex Conditional,CKAN.CmdLine,CommonOptions,C:\repos\KSP-CKAN_CKAN\Cmdline\Options.cs,Handle,The conditional expression  "(Platform.IsUnix || Platform.IsMac) && CmdLineUtil.GetUID() == 0 && !File.Exists("/.dockerenv")"  is complex.
Empty Catch Block,CKAN.CmdLine,CommonOptions,C:\repos\KSP-CKAN_CKAN\Cmdline\Options.cs,CheckMonoVersion,The method has an empty catch block.
Magic Number,CKAN.CmdLine,CommonOptions,C:\repos\KSP-CKAN_CKAN\Cmdline\Options.cs,Handle,The following statement contains a magic number: CheckMonoVersion(user' 3' 1' 0);
Missing Default,CKAN.CmdLine,Repo,C:\repos\KSP-CKAN_CKAN\Cmdline\Action\Repo.cs,RunSubCommand,The following switch statement is missing a default case: switch (args[i])                  {                      case "remove":                          args[i] = "forget";                          break;                  }
Missing Default,CKAN.CmdLine,MainClass,C:\repos\KSP-CKAN_CKAN\Cmdline\Main.cs,Main,The following switch statement is missing a default case: switch (args[0])                  {                      case "repair":                          var repair = new Repair();                          return repair.RunSubCommand(new SubCommandOptions(args));                        case "ksp":                          var ksp = new KSP();                          return ksp.RunSubCommand(new SubCommandOptions(args));                        case "compat":                          var compat = new CompatSubCommand();                          return compat.RunSubCommand(new SubCommandOptions(args));                        case "repo":                          var repo = new Repo();                          return repo.RunSubCommand(new SubCommandOptions(args));                  }
