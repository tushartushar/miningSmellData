Implementation smell,Namespace,Class,File,Method,Description
Long Method,Kudu.Core.Infrastructure.Test,VsHelperFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Infrastructure\VsHelperTests.cs,GetTargetFramework_OldStyle,The method has 289 lines of code.
Long Parameter List,Kudu.Core.Test,FetchDeploymentManagerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Deployment\FetchDeploymentManagerFacts.cs,FakeFetch,The method has 5 parameters. Parameters: repository' deploymentInfo' targetBranch' logger' tracer
Long Parameter List,Kudu.Core.Test,FetchDeploymentManagerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Deployment\FetchDeploymentManagerFacts.cs,CreateFetchDeploymentManager,The method has 7 parameters. Parameters: tracer' deploymentManager' settings' status' deploymentLock' environment' fileSystem
Long Parameter List,Kudu.Core.Test,MockDeploymentManager,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Deployment\FetchDeploymentManagerFacts.cs,DeployAsync,The method has 7 parameters. Parameters: repository' changeSet' deployer' clean' deploymentInfo' needFileUpdate' fullBuildByDefault
Long Parameter List,Kudu.Core.Test,FileSystemHubTest,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\FileSystemHubFacts.cs,FileSystemHubTest,The method has 5 parameters. Parameters: environment' tracer' context' group' clients
Long Parameter List,Kudu.Core.Test,PurgeDeploymentsTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\PurgeDeploymentsTests.cs,CreateResult,The method has 5 parameters. Parameters: status' lastSuccess' isActive' isTemp' toDelete
Long Parameter List,Kudu.Core.Test,EnvironmentFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Infrastructure\EnvironmentFacts.cs,CreateEnvironment,The method has 16 parameters. Parameters: fileSystem' rootPath' siteRootPath' tempPath' zipTempPath' repositoryPath' webRootPath' deploymentsPath' diagnosticsPath' locksPath' sshKeyPath' scriptPath' nodeModulesPath' dataPath' siteExtensionSettingsPath' sitePackagesPath
Long Parameter List,Kudu.Core.Test.Deployment,DeploymentManagerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Deployment\DeploymentManagerFacts.cs,CreateDeploymentManager,The method has 10 parameters. Parameters: builderFactory' environment' fileSystem' traceFactory' analytics' settings' status' deploymentLock' globalLogger' hooksManager
Long Identifier,Kudu.Core.Test,ProcessExtensionsFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\ProcessExtensionsFacts.cs,SnapshotAndDump_CreatesAMinidump,The length of the parameter minimumReasonableDmpFileLength is 30.
Long Identifier,Kudu.Core.Test.Jobs,ScheduleFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Jobs\ScheduleFacts.cs,ScheduleProvidesNextIntervalCorrectly,The length of the parameter triggeredJobSchedulerLoggerMock is 31.
Long Identifier,Kudu.Core.Test.Jobs,ScheduleFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Jobs\ScheduleFacts.cs,GetNextInterval_NextAfterDST_ReturnsExpectedValue,The length of the parameter triggeredJobSchedulerLoggerMock is 31.
Long Identifier,Kudu.Core.Test.Jobs,ScheduleFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Jobs\ScheduleFacts.cs,GetNextInterval_NextWithinDST_ReturnsExpectedValue,The length of the parameter triggeredJobSchedulerLoggerMock is 31.
Long Statement,Kudu.Core.Test,AutoSwapHandlerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\AutoSwapHandlerFacts.cs,IsAutoSwapOngoingOrEnabledTests,The length of the statement  "                Assert.False(PostDeploymentHelper.IsAutoSwapOngoing()' "Should not be any autoswap' since autoswap lock is not acquired by process."); " is 134.
Long Statement,Kudu.Core.Test,AutoSwapHandlerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\AutoSwapHandlerFacts.cs,IsAutoSwapOngoingOrEnabledTests,The length of the statement  "                Assert.False(PostDeploymentHelper.IsAutoSwapOngoing()' "Should not be any autoswap' since autoswap lock is acquired over 2 mintues ago."); " is 138.
Long Statement,Kudu.Core.Test,AutoSwapHandlerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\AutoSwapHandlerFacts.cs,IsAutoSwapOngoingOrEnabledTests,The length of the statement  "                Assert.True(PostDeploymentHelper.IsAutoSwapOngoing()' "Autoswap is ongoing' since autoswap lock is acquired within 2 mintues"); " is 127.
Long Statement,Kudu.Core.Test,AutoSwapHandlerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\AutoSwapHandlerFacts.cs,HandleAutoSwapTests,The length of the statement  "                var exception = await Assert.ThrowsAsync<InvalidOperationException>(() => PostDeploymentHelper.PerformAutoSwap(string.Empty' traceListener)); " is 141.
Long Statement,Kudu.Core.Test,AutoSwapHandlerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\AutoSwapHandlerFacts.cs,HandleAutoSwapTests,The length of the statement  "                PostDeploymentHelper.HttpClientFactory = () => new HttpClient(new TestMessageHandler((HttpRequestMessage requestMessage) => " is 123.
Long Statement,Kudu.Core.Test,AutoSwapHandlerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\AutoSwapHandlerFacts.cs,HandleAutoSwapTests,The length of the statement  "                Assert.True(autoSwapRequestUrl.StartsWith("https://foo.scm.bar/operations/autoswap?slot=someslot&operationId=AUTOSWAP")); " is 121.
Long Statement,Kudu.Core.Test,HgRepositoryFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\HgRepositoryFacts.cs,FetchWithoutConflictsRetriesWithRecoveryIfInitialFetchFails,The length of the statement  "                      .Throws(new CommandLineException("hg.exe"' ""' "Fetching\r\nabort: abandoned transaction found - run hg recover!\r\n") { ExitCode = 255 }) " is 138.
Long Statement,Kudu.Core.Test,HgRepositoryFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\HgRepositoryFacts.cs,FetchWithoutConflictsRetriesWithRecoveryIfInitialFetchFails,The length of the statement  "            executable.Verify(e => e.Execute(It.IsAny<ITracer>()' "pull {0} --branch {1} --noninteractive"' It.IsAny<object[]>())' Times.Exactly(2)); " is 137.
Long Statement,Kudu.Core.Test,HgRepositoryFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\HgRepositoryFacts.cs,FetchWithoutConflictsDoesNotExecuteRecoverIfFirstAttemptSucceeds,The length of the statement  "            executable.Verify(e => e.Execute(It.IsAny<ITracer>()' "pull {0} --branch {1} --noninteractive"' It.IsAny<object[]>())' Times.Once()); " is 133.
Long Statement,Kudu.Core.Test,HgRepositoryFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\HgRepositoryFacts.cs,FetchWithoutConflictOnHgEmptyRepo,The length of the statement  "                      .Callback((ITracer tracer' string arguments' object[] args) => { throw new CommandLineException("hg.exe"' "pull"' "abort: unknown branch 'default'!"); }); " is 154.
Long Statement,Kudu.Core.Test,FileSystemHelpersTest,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\FileSystemHelpersTest.cs,IsFileSystemReadOnlyBasicTest,The length of the statement  "                FileSystemHelpers.TmpFolder = @"D:\";   // value doesn`t really matter' just need to have something other than default value " is 124.
Long Statement,Kudu.Core.Test,GitRepositoryTest,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\GitRepositoryTest.cs,RepositoryConcurrentInitialize,The length of the statement  "            var server = new GitExeServer(environment.Object' initLock' null' factory.Object' env.Object' settings.Object' trace.Object); " is 125.
Long Statement,Kudu.Core.Test,ParseValues,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\IniFileFacts.cs,ParsesMultipleEqualSigns,The length of the statement  "                IniFile.ParseValues(new[] { "[section]"' ""' @"command = msbuild SimpleWebApplication/SimpleWebApplication.csproj /t:Build /t:pipelinePreDeployCopyAllFilesToOneFolder /p:_PackageTempDir=""%TARGET%"";AutoParameterizationWebConfigConnectionStrings=false;Configuration=Debug;SolutionDir=""%SOURCE%""" }' out lookup); " is 313.
Long Statement,Kudu.Core.Test,ParseValues,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\IniFileFacts.cs,ParsesMultipleEqualSigns,The length of the statement  "                Assert.Equal(@"msbuild SimpleWebApplication/SimpleWebApplication.csproj /t:Build /t:pipelinePreDeployCopyAllFilesToOneFolder /p:_PackageTempDir=""%TARGET%"";AutoParameterizationWebConfigConnectionStrings=false;Configuration=Debug;SolutionDir=""%SOURCE%"""' s1["command"]); " is 272.
Long Statement,Kudu.Core.Test,LockFileTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\LockFileTests.cs,LockFileConcurrentTest,The length of the statement  "                        using (var reader = new StreamReader(FileSystemHelpers.OpenFile(file' FileMode.Open' FileAccess.Read' FileShare.Write))) " is 120.
Long Statement,Kudu.Core.Test,RepositoryFactoryFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\RepositoryFactoryFacts.cs,EnsuringGitRepositoryThrowsIfDifferentRepositoryAlreadyExists,The length of the statement  "                    Assert.Equal(String.Format("Expected a '{0}' repository but found a '{1}' repository at path ''."' repoType' currentType)' ex.Message); " is 135.
Long Statement,Kudu.Core.Test,StructuredTextDocumentFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\StructuredTextDocumentFacts.cs,StructuredDocumentParsingTest,The length of the statement  "            FileSystemHelpers.Instance = MockFileSystem.GetMockFileSystem(@"x:\log.log"' () => "Message 1\r\nmessage 2\r\nmessage 3\r\n\tsub message 3.1\r\n\tsub message 3.2\r\n\tsub message 3.3\r\nmessage 4\r\n\tsub message 4.1"); " is 219.
Long Statement,Kudu.Core.Test,XmlLoggerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\XmlLoggerFacts.cs,XmlLoggerMalformedXmlTest,The length of the statement  "            analytics.Verify(a => a.UnexpectedException(It.IsAny<Exception>()' false' "GetDocument"' It.IsAny<string>()' It.IsAny<int>())' Times.Once); " is 139.
Long Statement,Kudu.Core.Test.Deployment,DeploymentManagerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Deployment\DeploymentManagerFacts.cs,GetOrCreateStatusFileCreatesFileIfItDoesNotAlreadyExist,The length of the statement  "            var changeSet = new ChangeSet("test-changeset-id"' "author"' "author@email.com"' "commit message"' DateTimeOffset.UtcNow); " is 122.
Long Statement,Kudu.Core.Test.Deployment,DeploymentManagerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Deployment\DeploymentManagerFacts.cs,GetOrCreateStatusFileUpdatesFileIfItAlreadyExists,The length of the statement  "            var changeSet = new ChangeSet("test-changeset-id"' "author"' "author@email.com"' "commit message"' DateTimeOffset.UtcNow); " is 122.
Long Statement,Kudu.Core.Test.Deployment,DeploymentManagerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Deployment\DeploymentManagerFacts.cs,CorruptedDeploymentStatusFileTests,The length of the statement  "                Mock.Get(analytics).Verify(a => a.UnexpectedException(It.IsAny<Exception>()' true' expectedError' It.IsAny<string>()' It.IsAny<int>())' Times.Once()); " is 150.
Long Statement,Kudu.Core.Test.Deployment,DeploymentManagerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Deployment\DeploymentManagerFacts.cs,CorruptedDeploymentStatusFileTests,The length of the statement  "                Mock.Get(analytics).Verify(a => a.UnexpectedException(It.IsAny<Exception>()' It.IsAny<bool>()' It.IsAny<string>()' It.IsAny<string>()' It.IsAny<int>())' Times.Never()); " is 168.
Long Statement,Kudu.Core.Test.Deployment,DeploymentManagerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Deployment\DeploymentManagerFacts.cs,ReturnEmptyCollectionOnLogEntryIdDoesntExist,The length of the statement  "            var fileSystem = MockFileSystem.GetMockFileSystem(@"x:\deployment\deploymentId\log.xml"' () => @"<?xml version=""1.0"" encoding=""utf-8""?> " is 139.
Long Statement,Kudu.Core.Test.Deployment,DeploymentManagerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Deployment\DeploymentManagerFacts.cs,ReturnEmptyCollectionOnLogEntryIdDoesntExist,The length of the statement  "            var deploymentManager = CreateDeploymentManager(fileSystem: fileSystem' traceFactory: trace' environment: environment.Object); " is 126.
Long Statement,Kudu.Core.Test.Deployment,DeploymentManagerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Deployment\DeploymentManagerFacts.cs,CreateDeploymentManager,The length of the statement  "            return new DeploymentManager(builderFactory' environment' traceFactory' analytics' settings' status' deploymentLock' globalLogger' hooksManager); " is 145.
Long Statement,Kudu.Core.Test.Deployment,WebHooksManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Hooks\WebHooksManagerTests.cs,RemoveWebHookShouldSucceed,The length of the statement  "            WebHook webHookToRemove = _webHooksManager.WebHooks.First(h => h.HookAddress == "http://www.gothere.com/aaabbbbbbaaa2"); " is 120.
Long Statement,Kudu.Core.Test.Deployment,WebHooksManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Hooks\WebHooksManagerTests.cs,AssertWebHooks,The length of the statement  "                WebHook actualWebHook = webHooks.Single(w => String.Equals(w.HookAddress' expectedWebHook.HookAddress' StringComparison.OrdinalIgnoreCase)); " is 140.
Long Statement,Kudu.Core.Test.Deployment.Generator,ExternalCommandBuilderFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Deployment\Generator\ExternalCommandBuilderFacts.cs,GetPostBuildActionScriptsShouldReturnDefaultFiles,The length of the statement  "            ).Returns(DefaultActionScripts.Union(new string[] { Path.Combine(DeploymentToolsPath' "PostDeploymentActions"' "Foo.txt") }).ToArray()); " is 136.
Long Statement,Kudu.Core.Test.Deployment.Generator,ExternalCommandBuilderFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Deployment\Generator\ExternalCommandBuilderFacts.cs,GetPostBuildActionScriptsShouldReturnActionScriptFromSiteExtensions,The length of the statement  "            ).Returns(DefaultActionScripts.Union(new string[] { Path.Combine(DeploymentToolsPath' "PostDeploymentActions"' "Foo.txt") }).ToArray()); " is 136.
Long Statement,Kudu.Core.Test.Deployment.Generator,ExternalCommandBuilderFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Deployment\Generator\ExternalCommandBuilderFacts.cs,GetPostBuildActionScriptsShouldReturnActionScriptFromSiteExtensions,The length of the statement  "                string siteExtensionFolder = Path.Combine(System.Environment.GetFolderPath(System.Environment.SpecialFolder.ProgramFilesX86)' "SiteExtensions"); " is 144.
Long Statement,Kudu.Core.Test.Deployment.Generator,ExternalCommandBuilderFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Deployment\Generator\ExternalCommandBuilderFacts.cs,GetPostBuildActionScriptsShouldReturnActionScriptFromSiteExtensions,The length of the statement  "                directoryMock.Setup(d => d.Exists(Path.Combine(siteExtensionFolder' "Foo"' "1.0.0"' "PostDeploymentActions"))).Returns(true); " is 125.
Long Statement,Kudu.Core.Test.Deployment.Generator,ExternalCommandBuilderFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Deployment\Generator\ExternalCommandBuilderFacts.cs,GetPostBuildActionScriptsShouldReturnActionScriptFromSiteExtensions,The length of the statement  "                ).Returns(FooActionScripts.Union(new string[] { Path.Combine(siteExtensionFolder' "Foo"' "1.0.0"' "PostDeploymentActions"' "Foo.txt") }).ToArray()); " is 148.
Long Statement,Kudu.Core.Test.Deployment.Generator,ExternalCommandBuilderFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Deployment\Generator\ExternalCommandBuilderFacts.cs,GetPostBuildActionScriptsShouldReturnActionScriptFromSiteExtensions,The length of the statement  "                directoryMock.Setup(d => d.Exists(Path.Combine(siteExtensionFolder' "Bar"' "10.0.0"' "PostDeploymentActions"))).Returns(true); " is 126.
Long Statement,Kudu.Core.Test.Deployment.Generator,ExternalCommandBuilderFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Deployment\Generator\ExternalCommandBuilderFacts.cs,GetPostBuildActionScriptsShouldReturnActionScriptFromSiteExtensions,The length of the statement  "                ).Returns(BarActionScripts.Union(new string[] { Path.Combine(siteExtensionFolder' "Bar"' "10.0.0"' "PostDeploymentActions"' "Foo.txt") }).ToArray()); " is 149.
Long Statement,Kudu.Core.Deployment.Generator.Test,PythonSiteEnablerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Deployment\PythonSiteEnablerTests.cs,TestLooksLikePython,The length of the statement  "                fileMock.Setup(f => f.Open("site\\runtime.txt"' FileMode.Open' FileAccess.Read' FileShare.ReadWrite | FileShare.Delete)).Returns(new System.IO.MemoryStream(Encoding.ASCII.GetBytes(runtimeTxtBytes))); " is 199.
Long Statement,Kudu.Core.Test.Functions,FunctionManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Functions\FunctionManagerTests.cs,RunDeterminePrimaryScriptFileFunc,The length of the statement  "                Assert.Equal(expect' functionManager.DeterminePrimaryScriptFile(functionConfig' dir)' StringComparer.OrdinalIgnoreCase); " is 120.
Long Statement,Kudu.Core.Test.Functions,FunctionManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Functions\FunctionManagerTests.cs,DeterminePrimaryScriptFileSpecifiedTests,The length of the statement  "            FileSystemHelpers.Instance = MockFileSystem(@"c:\functions"' new string[] { "function.json"' @"subDirectory\compiled.dll" }); " is 125.
Long Statement,Kudu.Core.Infrastructure.Test,ProgressWriterFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Infrastructure\ProgressWriterFacts.cs,VerifyResult,The length of the statement  "                Assert.True('\r' == rawLine[rawLine.Length - 2]' GetErrorMessage("Did not find \\r in line" + lineCount' rawLine' result)); " is 123.
Long Statement,Kudu.Core.Infrastructure.Test,ProgressWriterFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Infrastructure\ProgressWriterFacts.cs,VerifyResult,The length of the statement  "                Assert.True('\n' == rawLine[rawLine.Length - 1]' GetErrorMessage("Did not fine \\n in line" + lineCount' rawLine' result)); " is 123.
Long Statement,Kudu.Core.Infrastructure.Test,VsHelperFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Infrastructure\VsHelperTests.cs,GetTargetFramework_OldStyle,The length of the statement  "    <ProjectTypeGuids>{E53F8FEA-EAE0-44A6-8774-FFD645390401};{349c5851-65df-11da-9384-00065b846f21};{fae04ec0-301f-11d3-bf4b-00c04f79efbc}</ProjectTypeGuids> " is 153.
Long Statement,Kudu.Core.Infrastructure.Test,VsHelperFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Infrastructure\VsHelperTests.cs,GetTargetFramework_OldStyle,The length of the statement  "    <Reference Include=""EntityFramework' Version=4.1.0.0' Culture=neutral' PublicKeyToken=b77a5c561934e089' processorArchitecture=MSIL""> " is 134.
Long Statement,Kudu.Core.Infrastructure.Test,VsHelperFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Infrastructure\VsHelperTests.cs,GetTargetFramework_OldStyle,The length of the statement  "    <Reference Include=""System.Data.SqlServerCe' Version=4.0.0.0' Culture=neutral' PublicKeyToken=89845dcd8080cc91' processorArchitecture=MSIL""> " is 142.
Long Statement,Kudu.Core.Infrastructure.Test,VsHelperFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Infrastructure\VsHelperTests.cs,GetTargetFramework_OldStyle,The length of the statement  "    <Reference Include=""System.Data.SqlServerCe.Entity' Version=4.0.0.0' Culture=neutral' PublicKeyToken=89845dcd8080cc91' processorArchitecture=MSIL""> " is 149.
Long Statement,Kudu.Core.Infrastructure.Test,VsHelperFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Infrastructure\VsHelperTests.cs,GetTargetFramework_OldStyle,The length of the statement  "    <Reference Include=""System.Web.Mvc' Version=3.0.0.0' Culture=neutral' PublicKeyToken=31bf3856ad364e35' processorArchitecture=MSIL"" /> " is 135.
Long Statement,Kudu.Core.Infrastructure.Test,VsHelperFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Infrastructure\VsHelperTests.cs,GetTargetFramework_OldStyle,The length of the statement  "    <Reference Include=""System.Web.WebPages' Version=1.0.0.0' Culture=neutral' PublicKeyToken=31bf3856ad364e35' processorArchitecture=MSIL"" /> " is 140.
Long Statement,Kudu.Core.Infrastructure.Test,VsHelperFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Infrastructure\VsHelperTests.cs,GetTargetFramework_OldStyle,The length of the statement  "    <Reference Include=""System.Web.Helpers' Version=1.0.0.0' Culture=neutral' PublicKeyToken=31bf3856ad364e35' processorArchitecture=MSIL"" /> " is 139.
Long Statement,Kudu.Core.Infrastructure.Test,VsHelperFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Infrastructure\VsHelperTests.cs,GetTargetFramework_OldStyle,The length of the statement  "  <Import Project=""$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v10.0\WebApplications\Microsoft.WebApplication.targets"" /> " is 127.
Long Statement,Kudu.Core.Infrastructure.Test,VsHelperFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Infrastructure\VsHelperTests.cs,GetTargetFramework_OldStyle,The length of the statement  "xcopy /s /y ""$(ProjectDir)..\packages\SqlServerCompact.4.0.8482.1\NativeBinaries\amd64\*.*"" ""$(TargetDir)amd64""</PostBuildEvent> " is 132.
Long Statement,Kudu.Core.Infrastructure.Test,VsSolutionFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Infrastructure\VsSolutionTest.cs,VsSolutionParsesSolutionFile,The length of the statement  "Project(""{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}"") = ""Test""' ""Test\Test.csproj""' ""{80E5FD2A-A29A-47C7-8DE9-853D14295BAC}"" " is 128.
Long Statement,Kudu.Core.Infrastructure.Test,VsSolutionFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Infrastructure\VsSolutionTest.cs,VsSolutionParserReadsProjectDetails,The length of the statement  "Project(""{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}"") = ""SomeProject""' ""Test\Test.csproj""' ""{80E5FD2A-A29A-47C7-8DE9-853D14295BAC}"" " is 135.
Long Statement,Kudu.Core.Infrastructure.Test,VsSolutionFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Infrastructure\VsSolutionTest.cs,VsSolutionParserReadsProjectDetails,The length of the statement  "    <Import Project=""$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props"" Condition=""Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')"" /> " is 188.
Long Statement,Kudu.Core.Infrastructure.Test,VsSolutionFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Infrastructure\VsSolutionTest.cs,VsSolutionParserReadsProjectDetails,The length of the statement  "        <ProjectTypeGuids>{E3E379DF-F4C6-4180-9B81-6769533ABE47};{349c5851-65df-11da-9384-00065b846f21};{fae04ec0-301f-11d3-bf4b-00c04f79efbc}</ProjectTypeGuids> " is 153.
Long Statement,Kudu.Core.Test.Jobs,BaseJobRunnerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Jobs\BaseJobRunnerFacts.cs,JobDirectoryHasChanged_NoChanges_CachedEntries_ReturnsFalse,The length of the statement  "                Assert.False(BaseJobRunner.JobDirectoryHasChanged(sourceDirectoryFileMap' workingDirectoryFileMap' cachedDirectoryFileMap' _mockLogger.Object)); " is 144.
Long Statement,Kudu.Core.Test.Jobs,BaseJobRunnerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Jobs\BaseJobRunnerFacts.cs,JobDirectoryHasChanged_FileModifiedInSubDir_ReturnsTrue,The length of the statement  "                _mockLogger.Setup(p => p.LogInformation("Job directory change detected: Job file 'subdir\\test2.txt' timestamp differs between source and working directories.")); " is 162.
Long Statement,Kudu.Core.Test.Jobs,BaseJobRunnerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Jobs\BaseJobRunnerFacts.cs,JobDirectoryHasChanged_FileModifiedInSubDir_ReturnsTrue,The length of the statement  "                Assert.True(BaseJobRunner.JobDirectoryHasChanged(sourceDirectoryFileMap' workingDirectoryFileMap' cachedDirectoryFileMap' _mockLogger.Object)); " is 143.
Long Statement,Kudu.Core.Test.Jobs,BaseJobRunnerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Jobs\BaseJobRunnerFacts.cs,JobDirectoryHasChanged_FileModifiedInRootDir_ReturnsTrue,The length of the statement  "                _mockLogger.Setup(p => p.LogInformation("Job directory change detected: Job file 'test2.txt' timestamp differs between source and working directories.")); " is 154.
Long Statement,Kudu.Core.Test.Jobs,BaseJobRunnerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Jobs\BaseJobRunnerFacts.cs,JobDirectoryHasChanged_FileModifiedInRootDir_ReturnsTrue,The length of the statement  "                Assert.True(BaseJobRunner.JobDirectoryHasChanged(sourceDirectoryFileMap' workingDirectoryFileMap' cachedDirectoryFileMap' _mockLogger.Object)); " is 143.
Long Statement,Kudu.Core.Test.Jobs,BaseJobRunnerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Jobs\BaseJobRunnerFacts.cs,JobDirectoryHasChanged_FileAddedInRootDir_ReturnsTrue,The length of the statement  "                _mockLogger.Setup(p => p.LogInformation("Job directory change detected: Job file 'test4.txt' exists in source directory but not in working directory.")); " is 153.
Long Statement,Kudu.Core.Test.Jobs,BaseJobRunnerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Jobs\BaseJobRunnerFacts.cs,JobDirectoryHasChanged_FileAddedInRootDir_ReturnsTrue,The length of the statement  "                Assert.True(BaseJobRunner.JobDirectoryHasChanged(sourceDirectoryFileMap' workingDirectoryFileMap' cachedDirectoryFileMap' _mockLogger.Object)); " is 143.
Long Statement,Kudu.Core.Test.Jobs,BaseJobRunnerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Jobs\BaseJobRunnerFacts.cs,JobDirectoryHasChanged_FileDeleted_ReturnsTrue,The length of the statement  "                Assert.True(BaseJobRunner.JobDirectoryHasChanged(sourceDirectoryFileMap' workingDirectoryFileMap' cachedDirectoryFileMap' _mockLogger.Object)); " is 143.
Long Statement,Kudu.Core.Test.Jobs,BaseJobRunnerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Jobs\BaseJobRunnerFacts.cs,JobDirectoryHasChanged_FileAddedInWorkingDir_ReturnsFalse,The length of the statement  "                Assert.False(BaseJobRunner.JobDirectoryHasChanged(sourceDirectoryFileMap' workingDirectoryFileMap' cachedDirectoryFileMap' _mockLogger.Object)); " is 144.
Long Statement,Kudu.Core.Test.Jobs,BaseJobRunnerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Jobs\BaseJobRunnerFacts.cs,JobDirectoryHasChanged_FileModifiedInWorkingDir_ReturnsTrue,The length of the statement  "                _mockLogger.Setup(p => p.LogInformation("Job directory change detected: Job file 'test2.txt' timestamp differs between source and working directories.")); " is 154.
Long Statement,Kudu.Core.Test.Jobs,BaseJobRunnerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Jobs\BaseJobRunnerFacts.cs,JobDirectoryHasChanged_FileModifiedInWorkingDir_ReturnsTrue,The length of the statement  "                Assert.True(BaseJobRunner.JobDirectoryHasChanged(sourceDirectoryFileMap' workingDirectoryFileMap' cachedDirectoryFileMap' _mockLogger.Object)); " is 143.
Long Statement,Kudu.Core.Test.Jobs,BaseJobRunnerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Jobs\BaseJobRunnerFacts.cs,JobDirectoryHasChanged_FileDeletedInWorkingDir_ReturnsTrue,The length of the statement  "                _mockLogger.Setup(p => p.LogInformation("Job directory change detected: Job file 'test2.txt' exists in source directory but not in working directory.")); " is 153.
Long Statement,Kudu.Core.Test.Jobs,BaseJobRunnerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Jobs\BaseJobRunnerFacts.cs,JobDirectoryHasChanged_FileDeletedInWorkingDir_ReturnsTrue,The length of the statement  "                Assert.True(BaseJobRunner.JobDirectoryHasChanged(sourceDirectoryFileMap' workingDirectoryFileMap' cachedDirectoryFileMap' _mockLogger.Object)); " is 143.
Long Statement,Kudu.Core.Test.Jobs,BaseJobRunnerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Jobs\BaseJobRunnerFacts.cs,JobDirectoryHasChanged_IsCaseInsensitive,The length of the statement  "                Assert.False(BaseJobRunner.JobDirectoryHasChanged(sourceDirectoryFileMap' workingDirectoryFileMap' cachedDirectoryFileMap' _mockLogger.Object)); " is 144.
Long Statement,Kudu.Core.Test.Jobs,ContinuousJobRunnerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Jobs\ContinuousJobRunnerFacts.cs,CheckAlwaysOn_Continuous_LogsWarning_WhenAlwaysOnNotEnabled,The length of the statement  "            System.Environment.SetEnvironmentVariable(ContinuousJobRunner.WebsiteSCMAlwaysOnEnabledKey' alwaysOnEnabled ? "1" : "0"); " is 121.
Long Statement,Kudu.Core.Test.Jobs,ScheduleFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Jobs\ScheduleFacts.cs,ScheduleProvidesNextIntervalCorrectly,The length of the statement  "            var triggeredJobSchedulerLoggerMock = new Mock<TriggeredJobSchedulerLogger>(String.Empty ' mockEnvironment.Object ' null); " is 122.
Long Statement,Kudu.Core.Test.Jobs,ScheduleFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Jobs\ScheduleFacts.cs,GetNextInterval_NextAfterDST_ReturnsExpectedValue,The length of the statement  "            var triggeredJobSchedulerLoggerMock = new Mock<TriggeredJobSchedulerLogger>(String.Empty ' mockEnvironment.Object ' null); " is 122.
Long Statement,Kudu.Core.Test.Jobs,ScheduleFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Jobs\ScheduleFacts.cs,GetNextInterval_NextWithinDST_ReturnsExpectedValue,The length of the statement  "            var triggeredJobSchedulerLoggerMock = new Mock<TriggeredJobSchedulerLogger>(String.Empty' mockEnvironment.Object' null); " is 120.
Long Statement,Kudu.Core.Test.Settings,DiagnosticsSettingsManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Settings\DiagnosticsSettingsManagerTests.cs,BasicReadWriteTests,The length of the statement  "                Assert.Equal("Error getting value from 'AzureTableTraceLevel' on 'Kudu.Contracts.Settings.DiagnosticsSettings'."' exception.Message); " is 133.
Long Statement,Kudu.Core.Test.Settings,DiagnosticsSettingsManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Settings\DiagnosticsSettingsManagerTests.cs,BasicReadWriteTests,The length of the statement  "                Assert.Equal("Error getting value from 'AzureTableTraceLevel' on 'Kudu.Contracts.Settings.DiagnosticsSettings'."' exception.Message); " is 133.
Long Statement,Kudu.Core.Test.Settings,DiagnosticsSettingsManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Settings\DiagnosticsSettingsManagerTests.cs,BasicReadWriteTests,The length of the statement  "                Assert.Equal("Error getting value from 'AzureTableTraceLevel' on 'Kudu.Contracts.Settings.DiagnosticsSettings'."' exception.Message); " is 133.
Long Statement,Kudu.Core.Test.Settings,DiagnosticsSettingsManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Settings\DiagnosticsSettingsManagerTests.cs,BuildFileSystemMock,The length of the statement  "            fileBaseMock.Setup(f => f.Open(It.IsAny<string>()' FileMode.Open' FileAccess.Read' FileShare.ReadWrite | FileShare.Delete)) " is 123.
Long Statement,Kudu.Core.Test.Settings,DiagnosticsSettingsManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Settings\DiagnosticsSettingsManagerTests.cs,BuildFileSystemMock,The length of the statement  "            fileBaseMock.Setup(f => f.Open(It.IsAny<string>()' FileMode.Create' FileAccess.Write' FileShare.ReadWrite | FileShare.Delete)) " is 126.
Long Statement,Kudu.Core.Test.Settings,SettingsProvidersTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Settings\SettingsProvidersTests.cs,TestPerSiteSettingsProvider,The length of the statement  "            settings.Setup(s => s.GetValues(_configSection)).Returns((new KeyValuePair<string' string>[] { keyValue }).ToList()).Verifiable(); " is 130.
Long Statement,Kudu.Core.SSHKey.Test,SSHKeyManagerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\SSHKeyManagerFacts.cs,ConstructorThrowsIfEnvironmentIsNull,The length of the statement  "            var ex = Assert.Throws<ArgumentNullException>(() => new SSHKeyManager(env' traceFactory: null' deploymentSettingManager: Mock.Of<IDeploymentSettingsManager>())); " is 161.
Long Statement,Kudu.Core.SSHKey.Test,SSHKeyManagerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\SSHKeyManagerFacts.cs,SetPrivateKeySetsByPassKeyCheckAndKeyIfFile,The length of the statement  "            var sshKeyManager = new SSHKeyManager(environment.Object' traceFactory: null' deploymentSettingManager: Mock.Of<IDeploymentSettingsManager>()); " is 143.
Long Statement,Kudu.Core.SSHKey.Test,SSHKeyManagerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\SSHKeyManagerFacts.cs,SetPrivateKeyCreatesSSHDirectoryIfItDoesNotExist,The length of the statement  "            var sshKeyManager = new SSHKeyManager(environment.Object' traceFactory: null' deploymentSettingManager: Mock.Of<IDeploymentSettingsManager>()); " is 143.
Long Statement,Kudu.Core.SSHKey.Test,SSHKeyManagerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\SSHKeyManagerFacts.cs,SetPrivateKeyAllowsRepeatedInvocation,The length of the statement  "            var sshKeyManager = new SSHKeyManager(environment.Object' traceFactory: null' deploymentSettingManager: Mock.Of<IDeploymentSettingsManager>()); " is 143.
Long Statement,Kudu.Core.SSHKey.Test,SSHKeyManagerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\SSHKeyManagerFacts.cs,GetSSHKeyReturnsExistingKeyIfPresentOnDisk,The length of the statement  "            var sshKeyManager = new SSHKeyManager(environment.Object' traceFactory: null' deploymentSettingManager: Mock.Of<IDeploymentSettingsManager>()); " is 143.
Long Statement,Kudu.Core.SSHKey.Test,SSHKeyManagerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\SSHKeyManagerFacts.cs,GetSSHKeyNoOpsIfPublicKeyPairIsNotFoundAndEnsurePublicKeyIsNotSet,The length of the statement  "            var sshKeyManager = new SSHKeyManager(environment.Object' traceFactory: null' deploymentSettingManager: Mock.Of<IDeploymentSettingsManager>()); " is 143.
Long Statement,Kudu.Core.SSHKey.Test,SSHKeyManagerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\SSHKeyManagerFacts.cs,GetSSHKeyCreatesKeyIfPublicAndPrivateKeyDoesNotAlreadyExistAndEnsurePublicKeyIsSet,The length of the statement  "            var sshKeyManager = new SSHKeyManager(environment.Object' traceFactory: null' deploymentSettingManager: Mock.Of<IDeploymentSettingsManager>()); " is 143.
Long Statement,Kudu.Core.SSHKey.Test,SSHKeyManagerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\SSHKeyManagerFacts.cs,GetSSHKeyReturnsPublicKeyIfItExists,The length of the statement  "            var sshKeyManager = new SSHKeyManager(environment.Object' traceFactory: null' deploymentSettingManager: Mock.Of<IDeploymentSettingsManager>()); " is 143.
Long Statement,Kudu.Core.SSHKey.Test,SSHKeyManagerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\SSHKeyManagerFacts.cs,GetSSHEncodedStringEncodesPublicKey,The length of the statement  "                Modulus = Convert.FromBase64String("u91Db5QwvFrtAFVuuDZQP/a4fZ12uVYYz2P8zit/A1u+o0d2ueN7orMcrkzmulfchYG64aBdjMN8JxKIeJTIbwXIq/LVLcQKq/BrPvu6HLhFFT7ZnrmHMbytHNnfJzG6MxjgIe0k2CHPsrCre20TPPZ+c3coW6PK3MHaS/cG80y1cS+FFU2HWKSlonRKgG4COcaRX8wdM1OLU2pph9tREG5frFLpqGwpdn9z4z8zEL/Wwgf26dsBSbFnU52DYjltjJKnV+B2eKiUd1u5izFFjuDyrLaRUZORF1sW4EO3jXlDpJdKtdQGqzJd6x0xCdUce0117sSAcHOilGi+n00y+Q==") " is 382.
Long Statement,Kudu.Core.SSHKey.Test,SSHKeyManagerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\SSHKeyManagerFacts.cs,GetSSHEncodedStringEncodesPublicKey,The length of the statement  "            string expected = "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC73UNvlDC8Wu0AVW64NlA/9rh9nXa5VhjPY/zOK38DW76jR3a543uisxyuTOa6V9yFgbrhoF2Mw3wnEoh4lMhvBcir8tUtxAqr8Gs++7ocuEUVPtmeuYcxvK0c2d8nMbozGOAh7STYIc+ysKt7bRM89n5zdyhbo8rcwdpL9wbzTLVxL4UVTYdYpKWidEqAbgI5xpFfzB0zU4tTammH21EQbl+sUumobCl2f3PjPzMQv9bCB/bp2wFJsWdTnYNiOW2MkqdX4HZ4qJR3W7mLMUWO4PKstpFRk5EXWxbgQ7eNeUOkl0q11AarMl3rHTEJ1Rx7TXXuxIBwc6KUaL6fTTL5"; " is 401.
Long Statement,Kudu.Core.SSHKey.Test,SSHKeyManagerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\SSHKeyManagerFacts.cs,GetPEMEncodedStringEncodesPrivateKey,The length of the statement  "                D = Convert.FromBase64String("KaWHNupm3OWSqNK9X2VFsWuCet1SM2EKnxDPGX7WBV+X0gOh2JMZViBMp/RcwQbVO2+F+/QbLMqXyDMEaWYDEAhqBeF2VPKuoHPWyxpiOxYUiqgskB7FH4QWdml2eAZp5DGL1f98JMGpb2NVqe2+Dxg92Yf7aKwjlf8OGVrKJVE=")' " is 205.
Long Statement,Kudu.Core.SSHKey.Test,SSHKeyManagerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\SSHKeyManagerFacts.cs,GetPEMEncodedStringEncodesPrivateKey,The length of the statement  "                DP = Convert.FromBase64String("VxvOmWBK86gMUNGMY/3Iy/n4t+XsJdbEYSIBuXuzsF2CdeMh77YJIDuLktg48IZgdWgt20GBMhcrf+XL0elGkw==")' " is 122.
Long Statement,Kudu.Core.SSHKey.Test,SSHKeyManagerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\SSHKeyManagerFacts.cs,GetPEMEncodedStringEncodesPrivateKey,The length of the statement  "                DQ = Convert.FromBase64String("lVQxek9GPkVJq1V/k6+Jvfsippt9ulp+G1S6Dt20jvjgXlyTOmDYV7/f0ZIvc04gjMGtUsPYdKyYt3JFvVFNYQ==")' " is 122.
Long Statement,Kudu.Core.SSHKey.Test,SSHKeyManagerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\SSHKeyManagerFacts.cs,GetPEMEncodedStringEncodesPrivateKey,The length of the statement  "                InverseQ = Convert.FromBase64String("2dtFkIGZON5RWcq5dAOG42njvbzrRJUOuh2rHbq9SfTs4pKn5kIPebEQOqFxDWs005p067miumRGhLZ3boxJew==")' " is 128.
Long Statement,Kudu.Core.SSHKey.Test,SSHKeyManagerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\SSHKeyManagerFacts.cs,GetPEMEncodedStringEncodesPrivateKey,The length of the statement  "                Modulus = Convert.FromBase64String("xqVRF/QIx/bAGbzkY+pVPAQ/BP1WPZ6hbWUZTryLS3OJ+rLJmWTe27xhoo/suTEUr6yOaUVeSxTg00Lvwsi1qsd1pMcZtjsB8CHkhdnsp7WxqGYIy0il9DdCMy6mv8Z80Jf0t8wahop6Klb5wRKJpxjIyIEIgxUwWuMpBuSwuH0=")' " is 211.
Long Statement,Kudu.Core.SSHKey.Test,SSHKeyManagerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\SSHKeyManagerFacts.cs,GetPEMEncodedStringEncodesPrivateKey,The length of the statement  "                P = Convert.FromBase64String("4w4EblF6UB7KE3dVFZOxyAIVixRFuOZf7niPjsCr0/x8SvQ3yMYa14OTsL472yKTvDIrECbmH8Adju8/hWHM/w==")' " is 121.
Long Statement,Kudu.Core.SSHKey.Test,SSHKeyManagerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\SSHKeyManagerFacts.cs,GetPEMEncodedStringEncodesPrivateKey,The length of the statement  "                Q = Convert.FromBase64String("3/gqdG19aGYIuKj7Fe38tGGt5S4NEFvR0i2up+5lr9aoTZj9moFICqP+Ojkvvr5n1RSueTX3JQ5rorNmLDEugw==") " is 120.
Long Statement,Kudu.Core.Test.Tracing,XmlTracerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\XmlTracerTests.cs,TracerMaxXmlFilesTest,The length of the statement  "            typeof(XmlTracer).GetField("_lastCleanup"' BindingFlags.Static | BindingFlags.NonPublic).SetValue(null' DateTime.MinValue); " is 123.
Long Statement,Kudu.Core.Test.Tracing,XmlTracerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\XmlTracerTests.cs,GetMockFileSystem,The length of the statement  "            fileBase.Setup(f => f.Open(It.IsAny<string>()' FileMode.Append' FileAccess.Write' FileShare.ReadWrite | FileShare.Delete)) " is 122.
Empty Catch Block,Kudu.Core.Test,ProcessApiFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\ProcessApiFacts.cs,ProcesOutputBlockedTests,The method has an empty catch block.
Empty Catch Block,Kudu.Core.Test,ProcessExtensionsFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\ProcessExtensionsFacts.cs,SnapshotAndDump_CreatesAMinidump,The method has an empty catch block.
Magic Number,Kudu.Core.Test,AsyncStreamWriterFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\AsyncStreamWriterFacts.cs,AsyncStreamWriterBasicTests,The following statement contains a magic number: var size = 4;
Magic Number,Kudu.Core.Test,AsyncLockFileTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\AsyncLockFileTests.cs,AsyncLock_BasicTest,The following statement contains a magic number: i < 2
Magic Number,Kudu.Core.Test,AsyncLockFileTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\AsyncLockFileTests.cs,AsyncLock_ConcurrentLockFollowedByRelease,The following statement contains a magic number: const int MaxCount = 100;
Magic Number,Kudu.Core.Test,AsyncLockFileTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\AsyncLockFileTests.cs,AsyncLock_ConcurrentLockFollowedByRelease,The following statement contains a magic number: Parallel.For(0' MaxCount' async cnt =>              {                  await _lockFile.LockAsync("operationName");                    // We are now within the lock                  await Task.Delay(5);                  count = count + 1;                    // Releasing lock                  _lockFile.Release();                  if (count == MaxCount)                  {                      done.Set();                  }              });
Magic Number,Kudu.Core.Test,AsyncLockFileTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\AsyncLockFileTests.cs,AsyncLock_ConcurrentLockFollowedByRelease,The following statement contains a magic number: Assert.True(done.WaitOne(10000)' "lock timeout!");
Magic Number,Kudu.Core.Test,AsyncLockFileTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\AsyncLockFileTests.cs,LockAsync_SequentialLockFollowedByRelease,The following statement contains a magic number: var maxCount = 100;
Magic Number,Kudu.Core.Test,AutoSwapHandlerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\AutoSwapHandlerFacts.cs,IsAutoSwapOngoingOrEnabledTests,The following statement contains a magic number: File.SetLastWriteTimeUtc(autoSwapLockFile' DateTime.UtcNow.AddMinutes(-3));
Magic Number,Kudu.Core.Test,DebugConsoleFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\DebugConsoleFacts.cs,DebugConsoleMaxProcessesTests,The following statement contains a magic number: i < 10
Magic Number,Kudu.Core.Test,FileSystemHubFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\FileSystemHubFacts.cs,FileSystemHubMaxWatchers,The following statement contains a magic number: i < 10
Magic Number,Kudu.Core.Test,HgRepositoryFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\HgRepositoryFacts.cs,FetchWithoutConflictsRetriesWithRecoveryIfInitialFetchFails,The following statement contains a magic number: executable.Setup(e => e.Execute(It.IsAny<ITracer>()' "pull {0} --branch {1} --noninteractive"' It.IsAny<object[]>()))                        .Throws(new CommandLineException("hg.exe"' ""' "Fetching\r\nabort: abandoned transaction found - run hg recover!\r\n") { ExitCode = 255 })                        .Verifiable();
Magic Number,Kudu.Core.Test,HgRepositoryFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\HgRepositoryFacts.cs,FetchWithoutConflictsRetriesWithRecoveryIfInitialFetchFails,The following statement contains a magic number: executable.Verify(e => e.Execute(It.IsAny<ITracer>()' "pull {0} --branch {1} --noninteractive"' It.IsAny<object[]>())' Times.Exactly(2));
Magic Number,Kudu.Core.Test,IdleManagerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\IdleManagerFacts.cs,WaitForExitPollsAllowsExecutableToContinueAfterTimeoutIfIOActivity,The following statement contains a magic number: int num = 10;
Magic Number,Kudu.Core.Test,IdleManagerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\IdleManagerFacts.cs,WaitForExitPollsAllowsExecutableToContinueAfterTimeoutIfIOActivity,The following statement contains a magic number: process.Setup(f => f.WaitForExit(It.IsAny<TimeSpan>()))                     .Returns(() =>                      {                          if (--num == 0)                          {                              return true;                          }                          else                          {                              Thread.Sleep(10);                              idleManager.UpdateActivity();                              return false;                          }                      });
Magic Number,Kudu.Core.Test,IdleManagerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\IdleManagerFacts.cs,WaitForExitPollsAllowsExecutableToContinueAfterTimeoutIfCpuActivity,The following statement contains a magic number: int num = 10' cpu = 0;
Magic Number,Kudu.Core.Test,IdleManagerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\IdleManagerFacts.cs,WaitForExitPollsAllowsExecutableToContinueAfterTimeoutIfCpuOrIOActivity,The following statement contains a magic number: int num = 10;
Magic Number,Kudu.Core.Test,IdleManagerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\IdleManagerFacts.cs,WaitForExitPollsAllowsExecutableToContinueAfterTimeoutIfCpuOrIOActivity,The following statement contains a magic number: process.Setup(f => f.GetTotalProcessorTime(It.IsAny<ITracer>()))                     .Returns(() =>                      {                         Thread.Sleep(10);                         idleManager.UpdateActivity();                          return TimeSpan.FromSeconds(5);                      })                     .Verifiable();
Magic Number,Kudu.Core.Test,IdleManagerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\IdleManagerFacts.cs,WaitForExitPollsAllowsExecutableToContinueAfterTimeoutIfCpuOrIOActivity,The following statement contains a magic number: process.Setup(f => f.GetTotalProcessorTime(It.IsAny<ITracer>()))                     .Returns(() =>                      {                         Thread.Sleep(10);                         idleManager.UpdateActivity();                          return TimeSpan.FromSeconds(5);                      })                     .Verifiable();
Magic Number,Kudu.Core.Test,IdleManagerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\IdleManagerFacts.cs,WaitForExitPollsKillsProcessIfProcessorTimeDoesNotChangeAndNotUpdated,The following statement contains a magic number: TimeSpan idleTimeout = TimeSpan.FromMilliseconds(100);
Magic Number,Kudu.Core.Test,IdleManagerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\IdleManagerFacts.cs,WaitForExitPollsKillsProcessIfProcessorTimeDoesNotChangeAndNotUpdated,The following statement contains a magic number: process.Setup(f => f.WaitForExit(It.IsAny<TimeSpan>()))                     .Returns(() => { Thread.Sleep(10); return false; });
Magic Number,Kudu.Core.Test,DeploymentSettingFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\DeploymentSettingsFacts.cs,GetSettingsData,The following statement contains a magic number: yield return new object[] { "4"' 4 };
Magic Number,Kudu.Core.Test,JsonSettingsFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\JsonSettingsFacts.cs,SetGetValueTest,The following statement contains a magic number: var values = new Dictionary<string' JToken>              {                  { Guid.NewGuid().ToString()' Guid.NewGuid().ToString() }'                  { Guid.NewGuid().ToString()' random.Next() }'                  { Guid.NewGuid().ToString()' random.Next() % 2 == 0 }              };
Magic Number,Kudu.Core.Test,JsonSettingsFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\JsonSettingsFacts.cs,SetGetValuesTest,The following statement contains a magic number: var values = new Dictionary<string' JToken>              {                  { Guid.NewGuid().ToString()' Guid.NewGuid().ToString() }'                  { Guid.NewGuid().ToString()' random.Next() }'                  { Guid.NewGuid().ToString()' random.Next() % 2 == 0 }              };
Magic Number,Kudu.Core.Test,GitRepositoryTest,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\GitRepositoryTest.cs,RepositoryConcurrentInitialize,The following statement contains a magic number: factory.Setup(f => f.EnsureRepository(RepositoryType.Git))                     .Returns(() =>                       {                          ++calls;                          Thread.Sleep(100);                          Assert.Null(repository);                          return repository = new Mock<IRepository>().Object;                      });
Magic Number,Kudu.Core.Test,GitRepositoryTest,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\GitRepositoryTest.cs,RepositoryConcurrentInitialize,The following statement contains a magic number: Parallel.For(0' 5' i => server.Initialize());
Magic Number,Kudu.Core.Test,ParseValues,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\IniFileFacts.cs,ParsesSectionsIntoKeyValuePairs,The following statement contains a magic number: Assert.Equal(2' lookup.Count);
Magic Number,Kudu.Core.Test,LockFileTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\LockFileTests.cs,LockFileBasicTest,The following statement contains a magic number: i < 2
Magic Number,Kudu.Core.Test,LockFileTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\LockFileTests.cs,LockFileConcurrentTest,The following statement contains a magic number: int count = 10;
Magic Number,Kudu.Core.Test,LockFileTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\LockFileTests.cs,LockFileConcurrentTest,The following statement contains a magic number: int threads = 2;
Magic Number,Kudu.Core.Test,LockFileTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\LockFileTests.cs,LockFileConcurrentTest,The following statement contains a magic number: var result = Parallel.For(0' threads' i =>              {                  for (int j = 0; j < count; ++j)                  {                      lockFile.LockOperation(() =>                      {                          // simulate get/set                          int val = totals;                          Thread.Sleep(0);                          totals = val + 1;                            using (var reader = new StreamReader(FileSystemHelpers.OpenFile(file' FileMode.Open' FileAccess.Read' FileShare.Write)))                          {                              Assert.Contains(" Kudu.Core.Test.LockFileTests"' reader.ReadToEnd());                          }                        }' "operationName"' TimeSpan.FromSeconds(60));                  }              });
Magic Number,Kudu.Core.Test,OperationLockTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\OperationLockTests.cs,LockMultipleTest,The following statement contains a magic number: var threads = 5;
Magic Number,Kudu.Core.Test,OperationLockTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\OperationLockTests.cs,LockMultipleTest,The following statement contains a magic number: tasks.Add(Task.Factory.StartNew(() =>                  {                      bool succeed = lockObj.TryLockOperation(() =>                      {                          // to simulate delay get and set                          var temp = actual;                          Thread.Sleep(500);                          actual = temp + 1;                      }' "operationName" + i' TimeSpan.FromSeconds(10));                        // Assert                      Assert.True(succeed);                  }));
Magic Number,Kudu.Core.Test,OperationLockTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\OperationLockTests.cs,LockMultipleTest,The following statement contains a magic number: tasks.Add(Task.Factory.StartNew(() =>                  {                      bool succeed = lockObj.TryLockOperation(() =>                      {                          // to simulate delay get and set                          var temp = actual;                          Thread.Sleep(500);                          actual = temp + 1;                      }' "operationName" + i' TimeSpan.FromSeconds(10));                        // Assert                      Assert.True(succeed);                  }));
Magic Number,Kudu.Core.Test,OperationLockTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\OperationLockTests.cs,LockTimeoutTest,The following statement contains a magic number: var threads = 2;
Magic Number,Kudu.Core.Test,OperationLockTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\OperationLockTests.cs,LockTimeoutTest,The following statement contains a magic number: tasks.Add(Task.Factory.StartNew(() =>                  {                      return lockObj.TryLockOperation(() =>                      {                          // to simulate delay get and set                          var temp = actual;                          Thread.Sleep(5000);                          actual = temp + 1;                      }' "operationName" + i' TimeSpan.FromSeconds(1));                  }));
Magic Number,Kudu.Core.Test,MockOperationLock,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\OperationLockTests.cs,LockAsync,The following statement contains a magic number: await Task.Delay(100);
Magic Number,Kudu.Core.Test,ProcessApiFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\ProcessApiFacts.cs,MiniDumpFreeModeTests,The following statement contains a magic number: var response = controller.Object.MiniDump(0' 2);
Magic Number,Kudu.Core.Test,ProcessApiFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\ProcessApiFacts.cs,ProcesStartBasicTests,The following statement contains a magic number: var expectedExitCode = 10;
Magic Number,Kudu.Core.Test,ProcessApiFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\ProcessApiFacts.cs,ProcesStartBasicTests,The following statement contains a magic number: var inputBuffer = new byte[1024];
Magic Number,Kudu.Core.Test,ProcessApiFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\ProcessApiFacts.cs,ProcesOutputBlockedTests,The following statement contains a magic number: output.Setup(o => o.ReadAsync(It.IsAny<byte[]>()' 0' It.IsAny<int>()' It.IsAny<CancellationToken>()))                    .Callback((byte[] buffer' int offset' int count' CancellationToken token) => { cancellationToken = token; })                    .Returns(async () =>                    {                        await Task.Delay(5000' cancellationToken);                        return 0;                    });
Magic Number,Kudu.Core.Test,ProcessApiFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\ProcessApiFacts.cs,StartProfileAsync_InvalidProcess,The following statement contains a magic number: var ex = await Assert.ThrowsAsync<HttpResponseException>(() => controller.Object.StartProfileAsync(-2));
Magic Number,Kudu.Core.Test,ProcessApiFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\ProcessApiFacts.cs,StopProfileAsync_InvalidProcess,The following statement contains a magic number: var ex = await Assert.ThrowsAsync<HttpResponseException>(() => controller.Object.StopProfileAsync(-2));
Magic Number,Kudu.Core.Test,ProcessExtensionsFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\ProcessExtensionsFacts.cs,SnapshotAndDump_CreatesAMinidump,The following statement contains a magic number: const int minimumReasonableDmpFileLength = 256 * 1024;
Magic Number,Kudu.Core.Test,ProcessExtensionsFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\ProcessExtensionsFacts.cs,SnapshotAndDump_CreatesAMinidump,The following statement contains a magic number: const int minimumReasonableDmpFileLength = 256 * 1024;
Magic Number,Kudu.Core.Test,ProcessExtensionsFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\ProcessExtensionsFacts.cs,SnapshotAndDump_CreatesAMinidump,The following statement contains a magic number: const ushort MINIDUMP_VERSION = 42899;
Magic Number,Kudu.Core.Test,ProcessExtensionsFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\ProcessExtensionsFacts.cs,SnapshotAndDump_CreatesAMinidump,The following statement contains a magic number: const int timeStampToleranceInSeconds = 30;
Magic Number,Kudu.Core.Test,ProcessExtensionsFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\ProcessExtensionsFacts.cs,SnapshotAndDump_CreatesAMinidump,The following statement contains a magic number: Assert.True(numberOfStreams > 0 && numberOfStreams < 40);
Magic Number,Kudu.Core.Test,ProcessExtensionsFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\ProcessExtensionsFacts.cs,SnapshotAndDump_CreatesAMinidump,The following statement contains a magic number: var filetimeUtc = timeDateStamp * 10000000L + 116444736000000000L;
Magic Number,Kudu.Core.Test,ProcessExtensionsFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\ProcessExtensionsFacts.cs,SnapshotAndDump_CreatesAMinidump,The following statement contains a magic number: var filetimeUtc = timeDateStamp * 10000000L + 116444736000000000L;
Magic Number,Kudu.Core.Test,PurgeDeploymentsTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\PurgeDeploymentsTests.cs,CreateMaxLastSuccessItems,The following statement contains a magic number: list.Add(CreateResult(i % 2 == 0 ? DeployStatus.Success : DeployStatus.Failed' lastSuccess: true));
Magic Number,Kudu.Core.Test,StructuredTextDocumentFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\StructuredTextDocumentFacts.cs,StructuredDocumentParsingTest,The following statement contains a magic number: var ExpectedContent = new int[] { 0' 0' 3 ' 1 };
Magic Number,Kudu.Core.Test,StructuredTextDocumentFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\StructuredTextDocumentFacts.cs,StructuredDocumentParsingTest,The following statement contains a magic number: Assert.Equal(4' parsed.Length);
Magic Number,Kudu.Core.Test.Deployment,DeploymentHelperFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Deployment\DeploymentHelperFacts.cs,PurgeZipsIfNecessaryTest,The following statement contains a magic number: Dictionary<string' DateTime> testFiles = new Dictionary<string' DateTime>()              {                  {"testFile1.zip"' new DateTime(year: 2018' month: 08' day: 21' hour: 12' minute: 31' second: 34)}'                  {"testFile2.zip"' new DateTime(year: 2018' month: 08' day: 21' hour: 12' minute: 31' second: 20)}'                  {"testFile3.zip"' new DateTime(year: 2018' month: 07' day: 30' hour: 7' minute: 21' second: 22)}'                  {"testFile4.zip"' new DateTime(year: 2018' month: 08' day: 25' hour: 0' minute: 0' second: 0)}              };
Magic Number,Kudu.Core.Test.Deployment,DeploymentHelperFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Deployment\DeploymentHelperFacts.cs,PurgeZipsIfNecessaryTest,The following statement contains a magic number: Dictionary<string' DateTime> testFiles = new Dictionary<string' DateTime>()              {                  {"testFile1.zip"' new DateTime(year: 2018' month: 08' day: 21' hour: 12' minute: 31' second: 34)}'                  {"testFile2.zip"' new DateTime(year: 2018' month: 08' day: 21' hour: 12' minute: 31' second: 20)}'                  {"testFile3.zip"' new DateTime(year: 2018' month: 07' day: 30' hour: 7' minute: 21' second: 22)}'                  {"testFile4.zip"' new DateTime(year: 2018' month: 08' day: 25' hour: 0' minute: 0' second: 0)}              };
Magic Number,Kudu.Core.Test.Deployment,DeploymentHelperFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Deployment\DeploymentHelperFacts.cs,PurgeZipsIfNecessaryTest,The following statement contains a magic number: Dictionary<string' DateTime> testFiles = new Dictionary<string' DateTime>()              {                  {"testFile1.zip"' new DateTime(year: 2018' month: 08' day: 21' hour: 12' minute: 31' second: 34)}'                  {"testFile2.zip"' new DateTime(year: 2018' month: 08' day: 21' hour: 12' minute: 31' second: 20)}'                  {"testFile3.zip"' new DateTime(year: 2018' month: 07' day: 30' hour: 7' minute: 21' second: 22)}'                  {"testFile4.zip"' new DateTime(year: 2018' month: 08' day: 25' hour: 0' minute: 0' second: 0)}              };
Magic Number,Kudu.Core.Test.Deployment,DeploymentHelperFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Deployment\DeploymentHelperFacts.cs,PurgeZipsIfNecessaryTest,The following statement contains a magic number: Dictionary<string' DateTime> testFiles = new Dictionary<string' DateTime>()              {                  {"testFile1.zip"' new DateTime(year: 2018' month: 08' day: 21' hour: 12' minute: 31' second: 34)}'                  {"testFile2.zip"' new DateTime(year: 2018' month: 08' day: 21' hour: 12' minute: 31' second: 20)}'                  {"testFile3.zip"' new DateTime(year: 2018' month: 07' day: 30' hour: 7' minute: 21' second: 22)}'                  {"testFile4.zip"' new DateTime(year: 2018' month: 08' day: 25' hour: 0' minute: 0' second: 0)}              };
Magic Number,Kudu.Core.Test.Deployment,DeploymentHelperFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Deployment\DeploymentHelperFacts.cs,PurgeZipsIfNecessaryTest,The following statement contains a magic number: Dictionary<string' DateTime> testFiles = new Dictionary<string' DateTime>()              {                  {"testFile1.zip"' new DateTime(year: 2018' month: 08' day: 21' hour: 12' minute: 31' second: 34)}'                  {"testFile2.zip"' new DateTime(year: 2018' month: 08' day: 21' hour: 12' minute: 31' second: 20)}'                  {"testFile3.zip"' new DateTime(year: 2018' month: 07' day: 30' hour: 7' minute: 21' second: 22)}'                  {"testFile4.zip"' new DateTime(year: 2018' month: 08' day: 25' hour: 0' minute: 0' second: 0)}              };
Magic Number,Kudu.Core.Test.Deployment,DeploymentHelperFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Deployment\DeploymentHelperFacts.cs,PurgeZipsIfNecessaryTest,The following statement contains a magic number: Dictionary<string' DateTime> testFiles = new Dictionary<string' DateTime>()              {                  {"testFile1.zip"' new DateTime(year: 2018' month: 08' day: 21' hour: 12' minute: 31' second: 34)}'                  {"testFile2.zip"' new DateTime(year: 2018' month: 08' day: 21' hour: 12' minute: 31' second: 20)}'                  {"testFile3.zip"' new DateTime(year: 2018' month: 07' day: 30' hour: 7' minute: 21' second: 22)}'                  {"testFile4.zip"' new DateTime(year: 2018' month: 08' day: 25' hour: 0' minute: 0' second: 0)}              };
Magic Number,Kudu.Core.Test.Deployment,DeploymentHelperFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Deployment\DeploymentHelperFacts.cs,PurgeZipsIfNecessaryTest,The following statement contains a magic number: Dictionary<string' DateTime> testFiles = new Dictionary<string' DateTime>()              {                  {"testFile1.zip"' new DateTime(year: 2018' month: 08' day: 21' hour: 12' minute: 31' second: 34)}'                  {"testFile2.zip"' new DateTime(year: 2018' month: 08' day: 21' hour: 12' minute: 31' second: 20)}'                  {"testFile3.zip"' new DateTime(year: 2018' month: 07' day: 30' hour: 7' minute: 21' second: 22)}'                  {"testFile4.zip"' new DateTime(year: 2018' month: 08' day: 25' hour: 0' minute: 0' second: 0)}              };
Magic Number,Kudu.Core.Test.Deployment,DeploymentHelperFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Deployment\DeploymentHelperFacts.cs,PurgeZipsIfNecessaryTest,The following statement contains a magic number: Dictionary<string' DateTime> testFiles = new Dictionary<string' DateTime>()              {                  {"testFile1.zip"' new DateTime(year: 2018' month: 08' day: 21' hour: 12' minute: 31' second: 34)}'                  {"testFile2.zip"' new DateTime(year: 2018' month: 08' day: 21' hour: 12' minute: 31' second: 20)}'                  {"testFile3.zip"' new DateTime(year: 2018' month: 07' day: 30' hour: 7' minute: 21' second: 22)}'                  {"testFile4.zip"' new DateTime(year: 2018' month: 08' day: 25' hour: 0' minute: 0' second: 0)}              };
Magic Number,Kudu.Core.Test.Deployment,DeploymentHelperFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Deployment\DeploymentHelperFacts.cs,PurgeZipsIfNecessaryTest,The following statement contains a magic number: Dictionary<string' DateTime> testFiles = new Dictionary<string' DateTime>()              {                  {"testFile1.zip"' new DateTime(year: 2018' month: 08' day: 21' hour: 12' minute: 31' second: 34)}'                  {"testFile2.zip"' new DateTime(year: 2018' month: 08' day: 21' hour: 12' minute: 31' second: 20)}'                  {"testFile3.zip"' new DateTime(year: 2018' month: 07' day: 30' hour: 7' minute: 21' second: 22)}'                  {"testFile4.zip"' new DateTime(year: 2018' month: 08' day: 25' hour: 0' minute: 0' second: 0)}              };
Magic Number,Kudu.Core.Test.Deployment,DeploymentHelperFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Deployment\DeploymentHelperFacts.cs,PurgeZipsIfNecessaryTest,The following statement contains a magic number: Dictionary<string' DateTime> testFiles = new Dictionary<string' DateTime>()              {                  {"testFile1.zip"' new DateTime(year: 2018' month: 08' day: 21' hour: 12' minute: 31' second: 34)}'                  {"testFile2.zip"' new DateTime(year: 2018' month: 08' day: 21' hour: 12' minute: 31' second: 20)}'                  {"testFile3.zip"' new DateTime(year: 2018' month: 07' day: 30' hour: 7' minute: 21' second: 22)}'                  {"testFile4.zip"' new DateTime(year: 2018' month: 08' day: 25' hour: 0' minute: 0' second: 0)}              };
Magic Number,Kudu.Core.Test.Deployment,DeploymentHelperFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Deployment\DeploymentHelperFacts.cs,PurgeZipsIfNecessaryTest,The following statement contains a magic number: Dictionary<string' DateTime> testFiles = new Dictionary<string' DateTime>()              {                  {"testFile1.zip"' new DateTime(year: 2018' month: 08' day: 21' hour: 12' minute: 31' second: 34)}'                  {"testFile2.zip"' new DateTime(year: 2018' month: 08' day: 21' hour: 12' minute: 31' second: 20)}'                  {"testFile3.zip"' new DateTime(year: 2018' month: 07' day: 30' hour: 7' minute: 21' second: 22)}'                  {"testFile4.zip"' new DateTime(year: 2018' month: 08' day: 25' hour: 0' minute: 0' second: 0)}              };
Magic Number,Kudu.Core.Test.Deployment,DeploymentHelperFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Deployment\DeploymentHelperFacts.cs,PurgeZipsIfNecessaryTest,The following statement contains a magic number: Dictionary<string' DateTime> testFiles = new Dictionary<string' DateTime>()              {                  {"testFile1.zip"' new DateTime(year: 2018' month: 08' day: 21' hour: 12' minute: 31' second: 34)}'                  {"testFile2.zip"' new DateTime(year: 2018' month: 08' day: 21' hour: 12' minute: 31' second: 20)}'                  {"testFile3.zip"' new DateTime(year: 2018' month: 07' day: 30' hour: 7' minute: 21' second: 22)}'                  {"testFile4.zip"' new DateTime(year: 2018' month: 08' day: 25' hour: 0' minute: 0' second: 0)}              };
Magic Number,Kudu.Core.Test.Deployment,DeploymentHelperFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Deployment\DeploymentHelperFacts.cs,PurgeZipsIfNecessaryTest,The following statement contains a magic number: Dictionary<string' DateTime> testFiles = new Dictionary<string' DateTime>()              {                  {"testFile1.zip"' new DateTime(year: 2018' month: 08' day: 21' hour: 12' minute: 31' second: 34)}'                  {"testFile2.zip"' new DateTime(year: 2018' month: 08' day: 21' hour: 12' minute: 31' second: 20)}'                  {"testFile3.zip"' new DateTime(year: 2018' month: 07' day: 30' hour: 7' minute: 21' second: 22)}'                  {"testFile4.zip"' new DateTime(year: 2018' month: 08' day: 25' hour: 0' minute: 0' second: 0)}              };
Magic Number,Kudu.Core.Test.Deployment,DeploymentHelperFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Deployment\DeploymentHelperFacts.cs,PurgeZipsIfNecessaryTest,The following statement contains a magic number: Dictionary<string' DateTime> testFiles = new Dictionary<string' DateTime>()              {                  {"testFile1.zip"' new DateTime(year: 2018' month: 08' day: 21' hour: 12' minute: 31' second: 34)}'                  {"testFile2.zip"' new DateTime(year: 2018' month: 08' day: 21' hour: 12' minute: 31' second: 20)}'                  {"testFile3.zip"' new DateTime(year: 2018' month: 07' day: 30' hour: 7' minute: 21' second: 22)}'                  {"testFile4.zip"' new DateTime(year: 2018' month: 08' day: 25' hour: 0' minute: 0' second: 0)}              };
Magic Number,Kudu.Core.Test.Deployment,DeploymentHelperFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Deployment\DeploymentHelperFacts.cs,PurgeZipsIfNecessaryTest,The following statement contains a magic number: Dictionary<string' DateTime> testFiles = new Dictionary<string' DateTime>()              {                  {"testFile1.zip"' new DateTime(year: 2018' month: 08' day: 21' hour: 12' minute: 31' second: 34)}'                  {"testFile2.zip"' new DateTime(year: 2018' month: 08' day: 21' hour: 12' minute: 31' second: 20)}'                  {"testFile3.zip"' new DateTime(year: 2018' month: 07' day: 30' hour: 7' minute: 21' second: 22)}'                  {"testFile4.zip"' new DateTime(year: 2018' month: 08' day: 25' hour: 0' minute: 0' second: 0)}              };
Magic Number,Kudu.Core.Test.Deployment,DeploymentHelperFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Deployment\DeploymentHelperFacts.cs,PurgeZipsIfNecessaryTest,The following statement contains a magic number: Dictionary<string' DateTime> testFiles = new Dictionary<string' DateTime>()              {                  {"testFile1.zip"' new DateTime(year: 2018' month: 08' day: 21' hour: 12' minute: 31' second: 34)}'                  {"testFile2.zip"' new DateTime(year: 2018' month: 08' day: 21' hour: 12' minute: 31' second: 20)}'                  {"testFile3.zip"' new DateTime(year: 2018' month: 07' day: 30' hour: 7' minute: 21' second: 22)}'                  {"testFile4.zip"' new DateTime(year: 2018' month: 08' day: 25' hour: 0' minute: 0' second: 0)}              };
Magic Number,Kudu.Core.Test.Deployment,DeploymentHelperFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Deployment\DeploymentHelperFacts.cs,PurgeZipsIfNecessaryTest,The following statement contains a magic number: Dictionary<string' DateTime> testFiles = new Dictionary<string' DateTime>()              {                  {"testFile1.zip"' new DateTime(year: 2018' month: 08' day: 21' hour: 12' minute: 31' second: 34)}'                  {"testFile2.zip"' new DateTime(year: 2018' month: 08' day: 21' hour: 12' minute: 31' second: 20)}'                  {"testFile3.zip"' new DateTime(year: 2018' month: 07' day: 30' hour: 7' minute: 21' second: 22)}'                  {"testFile4.zip"' new DateTime(year: 2018' month: 08' day: 25' hour: 0' minute: 0' second: 0)}              };
Magic Number,Kudu.Core.Test.Deployment,DeploymentHelperFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Deployment\DeploymentHelperFacts.cs,PurgeZipsIfNecessaryTest,The following statement contains a magic number: Dictionary<string' DateTime> testFiles = new Dictionary<string' DateTime>()              {                  {"testFile1.zip"' new DateTime(year: 2018' month: 08' day: 21' hour: 12' minute: 31' second: 34)}'                  {"testFile2.zip"' new DateTime(year: 2018' month: 08' day: 21' hour: 12' minute: 31' second: 20)}'                  {"testFile3.zip"' new DateTime(year: 2018' month: 07' day: 30' hour: 7' minute: 21' second: 22)}'                  {"testFile4.zip"' new DateTime(year: 2018' month: 08' day: 25' hour: 0' minute: 0' second: 0)}              };
Magic Number,Kudu.Core.Test.Deployment,DeploymentHelperFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Deployment\DeploymentHelperFacts.cs,PurgeZipsIfNecessaryTest,The following statement contains a magic number: Dictionary<string' DateTime> testFiles = new Dictionary<string' DateTime>()              {                  {"testFile1.zip"' new DateTime(year: 2018' month: 08' day: 21' hour: 12' minute: 31' second: 34)}'                  {"testFile2.zip"' new DateTime(year: 2018' month: 08' day: 21' hour: 12' minute: 31' second: 20)}'                  {"testFile3.zip"' new DateTime(year: 2018' month: 07' day: 30' hour: 7' minute: 21' second: 22)}'                  {"testFile4.zip"' new DateTime(year: 2018' month: 08' day: 25' hour: 0' minute: 0' second: 0)}              };
Magic Number,Kudu.Core.Test.Deployment,DeploymentHelperFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Deployment\DeploymentHelperFacts.cs,PurgeZipsIfNecessaryTest,The following statement contains a magic number: Dictionary<string' DateTime> testFiles = new Dictionary<string' DateTime>()              {                  {"testFile1.zip"' new DateTime(year: 2018' month: 08' day: 21' hour: 12' minute: 31' second: 34)}'                  {"testFile2.zip"' new DateTime(year: 2018' month: 08' day: 21' hour: 12' minute: 31' second: 20)}'                  {"testFile3.zip"' new DateTime(year: 2018' month: 07' day: 30' hour: 7' minute: 21' second: 22)}'                  {"testFile4.zip"' new DateTime(year: 2018' month: 08' day: 25' hour: 0' minute: 0' second: 0)}              };
Magic Number,Kudu.Core.Test.Deployment,DeploymentHelperFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Deployment\DeploymentHelperFacts.cs,PurgeZipsIfNecessaryTest,The following statement contains a magic number: Dictionary<string' DateTime> testFiles = new Dictionary<string' DateTime>()              {                  {"testFile1.zip"' new DateTime(year: 2018' month: 08' day: 21' hour: 12' minute: 31' second: 34)}'                  {"testFile2.zip"' new DateTime(year: 2018' month: 08' day: 21' hour: 12' minute: 31' second: 20)}'                  {"testFile3.zip"' new DateTime(year: 2018' month: 07' day: 30' hour: 7' minute: 21' second: 22)}'                  {"testFile4.zip"' new DateTime(year: 2018' month: 08' day: 25' hour: 0' minute: 0' second: 0)}              };
Magic Number,Kudu.Core.Test.Deployment,DeploymentHelperFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Deployment\DeploymentHelperFacts.cs,PurgeZipsIfNecessaryTest,The following statement contains a magic number: DeploymentHelper.PurgeZipsIfNecessary("testLocation"' tracer.Object' 2);
Magic Number,Kudu.Core.Test.Deployment,DeploymentHelperFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Deployment\DeploymentHelperFacts.cs,PurgeZipsIfNecessaryTest,The following statement contains a magic number: Assert.Equal(deletedFiles.Count' 2);
Magic Number,Kudu.Core.Test.Deployment,DeploymentHelperFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Deployment\DeploymentHelperFacts.cs,PurgeZipsIfNecessaryTest,The following statement contains a magic number: DeploymentHelper.PurgeZipsIfNecessary("testLocation"' tracer.Object' 5);
Magic Number,Kudu.Core.Test.Deployment,DeploymentHelperFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Deployment\DeploymentHelperFacts.cs,PurgeZipsIfNecessaryTest,The following statement contains a magic number: Assert.Equal(deletedFiles.Count' 3);
Magic Number,Kudu.Core.Test.Deployment.Generator,ExternalCommandBuilderFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Deployment\Generator\ExternalCommandBuilderFacts.cs,GetPostBuildActionScriptsShouldReturnDefaultFiles,The following statement contains a magic number: Assert.Equal(DefaultActionScripts[2]' actionScripts[2]);
Magic Number,Kudu.Core.Test.Deployment.Generator,ExternalCommandBuilderFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Deployment\Generator\ExternalCommandBuilderFacts.cs,GetPostBuildActionScriptsShouldReturnDefaultFiles,The following statement contains a magic number: Assert.Equal(DefaultActionScripts[2]' actionScripts[2]);
Magic Number,Kudu.Core.Test.Deployment.Generator,ExternalCommandBuilderFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Deployment\Generator\ExternalCommandBuilderFacts.cs,GetPostBuildActionScriptsShouldReturnDefaultFiles,The following statement contains a magic number: Assert.NotEqual(DefaultActionScripts[2]' actionScripts[2]);
Magic Number,Kudu.Core.Test.Deployment.Generator,ExternalCommandBuilderFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Deployment\Generator\ExternalCommandBuilderFacts.cs,GetPostBuildActionScriptsShouldReturnDefaultFiles,The following statement contains a magic number: Assert.NotEqual(DefaultActionScripts[2]' actionScripts[2]);
Magic Number,Kudu.Core.Test.Deployment.Generator,ExternalCommandBuilderFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Deployment\Generator\ExternalCommandBuilderFacts.cs,GetPostBuildActionScriptsShouldReturnDefaultFiles,The following statement contains a magic number: Assert.Equal(CustomActionScripts[2]' actionScripts[2]);
Magic Number,Kudu.Core.Test.Deployment.Generator,ExternalCommandBuilderFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Deployment\Generator\ExternalCommandBuilderFacts.cs,GetPostBuildActionScriptsShouldReturnDefaultFiles,The following statement contains a magic number: Assert.Equal(CustomActionScripts[2]' actionScripts[2]);
Magic Number,Kudu.Core.Infrastructure.Test,ProgressWriterFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Infrastructure\ProgressWriterFacts.cs,ProgressWriter_Dispose,The following statement contains a magic number: await Task.Delay(501);
Magic Number,Kudu.Core.Infrastructure.Test,ProgressWriterFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Infrastructure\ProgressWriterFacts.cs,GetNextDelay,The following statement contains a magic number: delay = _random.Next(1' 25);
Magic Number,Kudu.Core.Infrastructure.Test,ProgressWriterFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Infrastructure\ProgressWriterFacts.cs,VerifyResult,The following statement contains a magic number: Assert.True('\r' == rawLine[rawLine.Length - 2]' GetErrorMessage("Did not find \\r in line" + lineCount' rawLine' result));
Magic Number,Kudu.Core.Infrastructure.Test,ProgressWriterFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Infrastructure\ProgressWriterFacts.cs,VerifyResult,The following statement contains a magic number: string line = rawLine.Substring(0' rawLine.Length - 2);
Magic Number,Kudu.Core.Infrastructure.Test,OperationManagerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Infrastructure\OperationManagerFacts.cs,AttemptRetriesAtMostSpecifiedTimesIfActionThrows,The following statement contains a magic number: var output = Assert.Throws<Exception>(() => OperationManager.Attempt(action' retries: 2' delayBeforeRetry: 10));
Magic Number,Kudu.Core.Infrastructure.Test,OperationManagerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Infrastructure\OperationManagerFacts.cs,AttemptRetriesAtMostSpecifiedTimesIfActionThrows,The following statement contains a magic number: var output = Assert.Throws<Exception>(() => OperationManager.Attempt(action' retries: 2' delayBeforeRetry: 10));
Magic Number,Kudu.Core.Infrastructure.Test,OperationManagerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Infrastructure\OperationManagerFacts.cs,AttemptRetriesAtMostSpecifiedTimesIfActionThrows,The following statement contains a magic number: Assert.Equal(2' numInvocations);
Magic Number,Kudu.Core.Infrastructure.Test,OperationManagerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Infrastructure\OperationManagerFacts.cs,AttemptReturnsValuesIfMethodSucceeds,The following statement contains a magic number: Func<string> factory = () =>              {                  numInvocations++;                  if (numInvocations <= 2)                  {                      throw exception;                  }                  return expected;              };
Magic Number,Kudu.Core.Infrastructure.Test,OperationManagerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Infrastructure\OperationManagerFacts.cs,AttemptReturnsValuesIfMethodSucceeds,The following statement contains a magic number: var output = OperationManager.Attempt(factory' retries: 3' delayBeforeRetry: 10);
Magic Number,Kudu.Core.Infrastructure.Test,OperationManagerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Infrastructure\OperationManagerFacts.cs,AttemptReturnsValuesIfMethodSucceeds,The following statement contains a magic number: var output = OperationManager.Attempt(factory' retries: 3' delayBeforeRetry: 10);
Magic Number,Kudu.Core.Infrastructure.Test,OperationManagerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Infrastructure\OperationManagerFacts.cs,AttemptReturnsValuesIfMethodSucceeds,The following statement contains a magic number: Assert.Equal(3' numInvocations);
Magic Number,Kudu.Core.Infrastructure.Test,StringReaderFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Infrastructure\StringReaderFacts.cs,ReadReadsExactlyNCharacters,The following statement contains a magic number: string actual1 = stringReader.Read(n: 5);
Magic Number,Kudu.Core.Infrastructure.Test,StringReaderFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Infrastructure\StringReaderFacts.cs,ReadReadsExactlyNCharacters,The following statement contains a magic number: string actual2 = stringReader.Read(n: 5);
Magic Number,Kudu.Core.Test.Jobs,BaseJobRunnerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Jobs\BaseJobRunnerFacts.cs,JobDirectoryHasChanged_NoChanges_CachedEntries_ReturnsFalse,The following statement contains a magic number: Assert.Equal(8' sourceDirectoryFileMap.Count);
Magic Number,Kudu.Core.Test.Jobs,BaseJobRunnerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Jobs\BaseJobRunnerFacts.cs,JobDirectoryHasChanged_NoChanges_CachedEntries_ReturnsFalse,The following statement contains a magic number: Assert.Equal(8' workingDirectoryFileMap.Count);
Magic Number,Kudu.Core.Test.Jobs,ScheduleFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Jobs\ScheduleFacts.cs,GetNextInterval_NextAfterDST_ReturnsExpectedValue,The following statement contains a magic number: var now = new DateTime(2018 ' 3 ' 9 ' 18 ' 0 ' 0 ' DateTimeKind.Local);
Magic Number,Kudu.Core.Test.Jobs,ScheduleFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Jobs\ScheduleFacts.cs,GetNextInterval_NextAfterDST_ReturnsExpectedValue,The following statement contains a magic number: var now = new DateTime(2018 ' 3 ' 9 ' 18 ' 0 ' 0 ' DateTimeKind.Local);
Magic Number,Kudu.Core.Test.Jobs,ScheduleFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Jobs\ScheduleFacts.cs,GetNextInterval_NextAfterDST_ReturnsExpectedValue,The following statement contains a magic number: var now = new DateTime(2018 ' 3 ' 9 ' 18 ' 0 ' 0 ' DateTimeKind.Local);
Magic Number,Kudu.Core.Test.Jobs,ScheduleFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Jobs\ScheduleFacts.cs,GetNextInterval_NextAfterDST_ReturnsExpectedValue,The following statement contains a magic number: var now = new DateTime(2018 ' 3 ' 9 ' 18 ' 0 ' 0 ' DateTimeKind.Local);
Magic Number,Kudu.Core.Test.Jobs,ScheduleFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Jobs\ScheduleFacts.cs,GetNextInterval_NextAfterDST_ReturnsExpectedValue,The following statement contains a magic number: var expectedInterval = new TimeSpan(168 ' 0 ' 0);
Magic Number,Kudu.Core.Test.Jobs,ScheduleFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Jobs\ScheduleFacts.cs,GetNextInterval_NextWithinDST_ReturnsExpectedValue,The following statement contains a magic number: var now = new DateTime(2018' 3' 11' 1' 59' 0' DateTimeKind.Local);
Magic Number,Kudu.Core.Test.Jobs,ScheduleFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Jobs\ScheduleFacts.cs,GetNextInterval_NextWithinDST_ReturnsExpectedValue,The following statement contains a magic number: var now = new DateTime(2018' 3' 11' 1' 59' 0' DateTimeKind.Local);
Magic Number,Kudu.Core.Test.Jobs,ScheduleFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Jobs\ScheduleFacts.cs,GetNextInterval_NextWithinDST_ReturnsExpectedValue,The following statement contains a magic number: var now = new DateTime(2018' 3' 11' 1' 59' 0' DateTimeKind.Local);
Magic Number,Kudu.Core.Test.Jobs,ScheduleFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Jobs\ScheduleFacts.cs,GetNextInterval_NextWithinDST_ReturnsExpectedValue,The following statement contains a magic number: var now = new DateTime(2018' 3' 11' 1' 59' 0' DateTimeKind.Local);
Magic Number,Kudu.Core.Test.Settings,DeploymentSettingsPrioritiesTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Settings\DeploymentSettingsPrioritiesTests.cs,DeploymentSettingsPrioritiesTests,The following statement contains a magic number: var testProvider2 = new BasicSettingsProvider(settingsPriority2' (SettingsProvidersPriority)2);
Magic Number,Kudu.Core.Test.Settings,DeploymentSettingsPrioritiesTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Settings\DeploymentSettingsPrioritiesTests.cs,DeploymentSettingsPrioritiesTests,The following statement contains a magic number: var testProvider50 = new BasicSettingsProvider(settingsPriority50' (SettingsProvidersPriority)50);
Magic Number,Kudu.Core.Test.Settings,DeploymentSettingsPrioritiesTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Settings\DeploymentSettingsPrioritiesTests.cs,DeploymentSettingsTopPriorityOverridesAllOthers,The following statement contains a magic number: AssertSetting(50' 1);
Magic Number,Kudu.Core.Test.Settings,DeploymentSettingsPrioritiesTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Settings\DeploymentSettingsPrioritiesTests.cs,DeploymentSettingsTopPriorityOverridesLastPriority,The following statement contains a magic number: AssertSetting(50' 2);
Magic Number,Kudu.Core.Test.Settings,DeploymentSettingsPrioritiesTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Settings\DeploymentSettingsPrioritiesTests.cs,DeploymentSettingsTopPriorityOverridesLastPriority,The following statement contains a magic number: AssertSetting(50' 2);
Magic Number,Kudu.Core.Test.Settings,DeploymentSettingsPrioritiesTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Settings\DeploymentSettingsPrioritiesTests.cs,DeploymentSettingsMiddlePriorityOverridesLastPriority,The following statement contains a magic number: AssertSetting(2' 3);
Magic Number,Kudu.Core.Test.Settings,DeploymentSettingsPrioritiesTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Settings\DeploymentSettingsPrioritiesTests.cs,DeploymentSettingsMiddlePriorityOverridesLastPriority,The following statement contains a magic number: AssertSetting(2' 3);
Magic Number,Kudu.Core.Test.Settings,DeploymentSettingsPrioritiesTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Settings\DeploymentSettingsPrioritiesTests.cs,DeploymentSettingsLastPriorityUsedWhenNoOthers,The following statement contains a magic number: AssertSetting(1' 4);
Magic Number,Kudu.Core.Test.Settings,DeploymentSettingsPrioritiesTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Settings\DeploymentSettingsPrioritiesTests.cs,DeploymentSettingsTopPriorityOverridesMiddlePriority,The following statement contains a magic number: AssertSetting(50' 5);
Magic Number,Kudu.Core.Test.Settings,DeploymentSettingsPrioritiesTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Settings\DeploymentSettingsPrioritiesTests.cs,DeploymentSettingsTopPriorityOverridesMiddlePriority,The following statement contains a magic number: AssertSetting(50' 5);
Magic Number,Kudu.Core.Test.Settings,DeploymentSettingsPrioritiesTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Settings\DeploymentSettingsPrioritiesTests.cs,DeploymentSettingsMiddlePriorityUsedWhenNoOthers,The following statement contains a magic number: AssertSetting(2' 6);
Magic Number,Kudu.Core.Test.Settings,DeploymentSettingsPrioritiesTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Settings\DeploymentSettingsPrioritiesTests.cs,DeploymentSettingsMiddlePriorityUsedWhenNoOthers,The following statement contains a magic number: AssertSetting(2' 6);
Magic Number,Kudu.Core.Test.Settings,DeploymentSettingsPrioritiesTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Settings\DeploymentSettingsPrioritiesTests.cs,DeploymentSettingsTopPriorityUsedWhenNoOthers,The following statement contains a magic number: AssertSetting(50' 7);
Magic Number,Kudu.Core.Test.Settings,DeploymentSettingsPrioritiesTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Settings\DeploymentSettingsPrioritiesTests.cs,DeploymentSettingsTopPriorityUsedWhenNoOthers,The following statement contains a magic number: AssertSetting(50' 7);
Magic Number,Kudu.Core.Test.Settings,DiagnosticsSettingsManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Settings\DiagnosticsSettingsManagerTests.cs,BasicReadWriteTests,The following statement contains a magic number: BuildFileSystemMock((Mock<IFileSystem> fileSystemMock) =>              {                  FileSystemHelpers.Instance = fileSystemMock.Object;                  var mockTracer = new Mock<ITracer>();                    var manager = new DiagnosticsSettingsManager(@"x:\test.json"' mockTracer.Object);                    // should see default value                  DiagnosticsSettings settings = manager.GetSettings();                  Assert.Equal(false' settings.AzureDriveEnabled);                  Assert.Equal(TraceEventType.Error' settings.AzureDriveTraceLevel);                  Assert.Equal(false' settings.AzureTableEnabled);                  Assert.Equal(TraceEventType.Error' settings.AzureTableTraceLevel);                  Assert.Equal(false' settings.AzureBlobEnabled);                  Assert.Equal(TraceEventType.Error' settings.AzureBlobTraceLevel);                    // update with good value                  manager.UpdateSetting(DiagnosticsSettings.AzureDriveEnabledKey' true);                  manager.UpdateSetting(DiagnosticsSettings.AzureDriveTraceLevelKey' TraceEventType.Verbose);                  manager.UpdateSetting(DiagnosticsSettings.AzureTableEnabledKey' true);                  manager.UpdateSetting(DiagnosticsSettings.AzureTableTraceLevelKey' TraceEventType.Warning);                  manager.UpdateSetting(DiagnosticsSettings.AzureBlobEnabledKey' true);                  manager.UpdateSetting(DiagnosticsSettings.AzureBlobTraceLevelKey' TraceEventType.Information);                    settings = manager.GetSettings();                  Assert.Equal(true' settings.AzureDriveEnabled);                  Assert.Equal(TraceEventType.Verbose' settings.AzureDriveTraceLevel);                  Assert.Equal(true' settings.AzureTableEnabled);                  Assert.Equal(TraceEventType.Warning' settings.AzureTableTraceLevel);                  Assert.Equal(true' settings.AzureBlobEnabled);                  Assert.Equal(TraceEventType.Information' settings.AzureBlobTraceLevel);                    // number and string should be good too                  manager.UpdateSetting(DiagnosticsSettings.AzureDriveTraceLevelKey' 2);                  settings = manager.GetSettings();                  Assert.Equal(TraceEventType.Error' settings.AzureDriveTraceLevel);                    JsonSerializationException exception = null;                    try                  {                      manager.UpdateSetting(DiagnosticsSettings.AzureTableTraceLevelKey' "Error");                  }                  catch (JsonSerializationException ex)                  {                      exception = ex;                  }                    Assert.NotNull(exception);                  Assert.Equal("Error getting value from 'AzureTableTraceLevel' on 'Kudu.Contracts.Settings.DiagnosticsSettings'."' exception.Message);                    try                  {                      manager.UpdateSetting(DiagnosticsSettings.AzureTableTraceLevelKey' "8");                  }                  catch (JsonSerializationException ex)                  {                      exception = ex;                  }                    Assert.Equal("Error getting value from 'AzureTableTraceLevel' on 'Kudu.Contracts.Settings.DiagnosticsSettings'."' exception.Message);                    try                  {                      manager.UpdateSetting(DiagnosticsSettings.AzureTableTraceLevelKey' "foo");                  }                  catch (JsonSerializationException ex)                  {                      exception = ex;                  }                    Assert.Equal("Error getting value from 'AzureTableTraceLevel' on 'Kudu.Contracts.Settings.DiagnosticsSettings'."' exception.Message);                    try                  {                      manager.UpdateSetting(DiagnosticsSettings.AzureBlobTraceLevelKey' 999);                  }                  catch (JsonSerializationException ex)                  {                      exception = ex;                  }                    Assert.Equal(string.Format(CultureInfo.InvariantCulture' "Error converting value '{0}'"' 999)' exception.Message);                    settings = manager.GetSettings();                  Assert.Equal(true' settings.AzureDriveEnabled);                  Assert.Equal(TraceEventType.Error' settings.AzureDriveTraceLevel);                  Assert.Equal(true' settings.AzureTableEnabled);                  Assert.Equal(TraceEventType.Warning' settings.AzureTableTraceLevel);                  Assert.Equal(true' settings.AzureBlobEnabled);                  Assert.Equal(TraceEventType.Information' settings.AzureBlobTraceLevel);                    // with corrupted content' kudu will auto-correct content and reset to default value                  manager = new DiagnosticsSettingsManager(@"x:\bad-content.json"' mockTracer.Object);                  settings = manager.GetSettings();                  Assert.Equal(false' settings.AzureDriveEnabled);                  Assert.Equal(TraceEventType.Error' settings.AzureDriveTraceLevel);                  Assert.Equal(false' settings.AzureTableEnabled);                  Assert.Equal(TraceEventType.Error' settings.AzureTableTraceLevel);                  Assert.Equal(false' settings.AzureBlobEnabled);                  Assert.Equal(TraceEventType.Error' settings.AzureBlobTraceLevel);              });
Magic Number,Kudu.Core.Test.Settings,DiagnosticsSettingsManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Settings\DiagnosticsSettingsManagerTests.cs,BasicReadWriteTests,The following statement contains a magic number: BuildFileSystemMock((Mock<IFileSystem> fileSystemMock) =>              {                  FileSystemHelpers.Instance = fileSystemMock.Object;                  var mockTracer = new Mock<ITracer>();                    var manager = new DiagnosticsSettingsManager(@"x:\test.json"' mockTracer.Object);                    // should see default value                  DiagnosticsSettings settings = manager.GetSettings();                  Assert.Equal(false' settings.AzureDriveEnabled);                  Assert.Equal(TraceEventType.Error' settings.AzureDriveTraceLevel);                  Assert.Equal(false' settings.AzureTableEnabled);                  Assert.Equal(TraceEventType.Error' settings.AzureTableTraceLevel);                  Assert.Equal(false' settings.AzureBlobEnabled);                  Assert.Equal(TraceEventType.Error' settings.AzureBlobTraceLevel);                    // update with good value                  manager.UpdateSetting(DiagnosticsSettings.AzureDriveEnabledKey' true);                  manager.UpdateSetting(DiagnosticsSettings.AzureDriveTraceLevelKey' TraceEventType.Verbose);                  manager.UpdateSetting(DiagnosticsSettings.AzureTableEnabledKey' true);                  manager.UpdateSetting(DiagnosticsSettings.AzureTableTraceLevelKey' TraceEventType.Warning);                  manager.UpdateSetting(DiagnosticsSettings.AzureBlobEnabledKey' true);                  manager.UpdateSetting(DiagnosticsSettings.AzureBlobTraceLevelKey' TraceEventType.Information);                    settings = manager.GetSettings();                  Assert.Equal(true' settings.AzureDriveEnabled);                  Assert.Equal(TraceEventType.Verbose' settings.AzureDriveTraceLevel);                  Assert.Equal(true' settings.AzureTableEnabled);                  Assert.Equal(TraceEventType.Warning' settings.AzureTableTraceLevel);                  Assert.Equal(true' settings.AzureBlobEnabled);                  Assert.Equal(TraceEventType.Information' settings.AzureBlobTraceLevel);                    // number and string should be good too                  manager.UpdateSetting(DiagnosticsSettings.AzureDriveTraceLevelKey' 2);                  settings = manager.GetSettings();                  Assert.Equal(TraceEventType.Error' settings.AzureDriveTraceLevel);                    JsonSerializationException exception = null;                    try                  {                      manager.UpdateSetting(DiagnosticsSettings.AzureTableTraceLevelKey' "Error");                  }                  catch (JsonSerializationException ex)                  {                      exception = ex;                  }                    Assert.NotNull(exception);                  Assert.Equal("Error getting value from 'AzureTableTraceLevel' on 'Kudu.Contracts.Settings.DiagnosticsSettings'."' exception.Message);                    try                  {                      manager.UpdateSetting(DiagnosticsSettings.AzureTableTraceLevelKey' "8");                  }                  catch (JsonSerializationException ex)                  {                      exception = ex;                  }                    Assert.Equal("Error getting value from 'AzureTableTraceLevel' on 'Kudu.Contracts.Settings.DiagnosticsSettings'."' exception.Message);                    try                  {                      manager.UpdateSetting(DiagnosticsSettings.AzureTableTraceLevelKey' "foo");                  }                  catch (JsonSerializationException ex)                  {                      exception = ex;                  }                    Assert.Equal("Error getting value from 'AzureTableTraceLevel' on 'Kudu.Contracts.Settings.DiagnosticsSettings'."' exception.Message);                    try                  {                      manager.UpdateSetting(DiagnosticsSettings.AzureBlobTraceLevelKey' 999);                  }                  catch (JsonSerializationException ex)                  {                      exception = ex;                  }                    Assert.Equal(string.Format(CultureInfo.InvariantCulture' "Error converting value '{0}'"' 999)' exception.Message);                    settings = manager.GetSettings();                  Assert.Equal(true' settings.AzureDriveEnabled);                  Assert.Equal(TraceEventType.Error' settings.AzureDriveTraceLevel);                  Assert.Equal(true' settings.AzureTableEnabled);                  Assert.Equal(TraceEventType.Warning' settings.AzureTableTraceLevel);                  Assert.Equal(true' settings.AzureBlobEnabled);                  Assert.Equal(TraceEventType.Information' settings.AzureBlobTraceLevel);                    // with corrupted content' kudu will auto-correct content and reset to default value                  manager = new DiagnosticsSettingsManager(@"x:\bad-content.json"' mockTracer.Object);                  settings = manager.GetSettings();                  Assert.Equal(false' settings.AzureDriveEnabled);                  Assert.Equal(TraceEventType.Error' settings.AzureDriveTraceLevel);                  Assert.Equal(false' settings.AzureTableEnabled);                  Assert.Equal(TraceEventType.Error' settings.AzureTableTraceLevel);                  Assert.Equal(false' settings.AzureBlobEnabled);                  Assert.Equal(TraceEventType.Error' settings.AzureBlobTraceLevel);              });
Magic Number,Kudu.Core.Test.Settings,DiagnosticsSettingsManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Settings\DiagnosticsSettingsManagerTests.cs,BasicReadWriteTests,The following statement contains a magic number: BuildFileSystemMock((Mock<IFileSystem> fileSystemMock) =>              {                  FileSystemHelpers.Instance = fileSystemMock.Object;                  var mockTracer = new Mock<ITracer>();                    var manager = new DiagnosticsSettingsManager(@"x:\test.json"' mockTracer.Object);                    // should see default value                  DiagnosticsSettings settings = manager.GetSettings();                  Assert.Equal(false' settings.AzureDriveEnabled);                  Assert.Equal(TraceEventType.Error' settings.AzureDriveTraceLevel);                  Assert.Equal(false' settings.AzureTableEnabled);                  Assert.Equal(TraceEventType.Error' settings.AzureTableTraceLevel);                  Assert.Equal(false' settings.AzureBlobEnabled);                  Assert.Equal(TraceEventType.Error' settings.AzureBlobTraceLevel);                    // update with good value                  manager.UpdateSetting(DiagnosticsSettings.AzureDriveEnabledKey' true);                  manager.UpdateSetting(DiagnosticsSettings.AzureDriveTraceLevelKey' TraceEventType.Verbose);                  manager.UpdateSetting(DiagnosticsSettings.AzureTableEnabledKey' true);                  manager.UpdateSetting(DiagnosticsSettings.AzureTableTraceLevelKey' TraceEventType.Warning);                  manager.UpdateSetting(DiagnosticsSettings.AzureBlobEnabledKey' true);                  manager.UpdateSetting(DiagnosticsSettings.AzureBlobTraceLevelKey' TraceEventType.Information);                    settings = manager.GetSettings();                  Assert.Equal(true' settings.AzureDriveEnabled);                  Assert.Equal(TraceEventType.Verbose' settings.AzureDriveTraceLevel);                  Assert.Equal(true' settings.AzureTableEnabled);                  Assert.Equal(TraceEventType.Warning' settings.AzureTableTraceLevel);                  Assert.Equal(true' settings.AzureBlobEnabled);                  Assert.Equal(TraceEventType.Information' settings.AzureBlobTraceLevel);                    // number and string should be good too                  manager.UpdateSetting(DiagnosticsSettings.AzureDriveTraceLevelKey' 2);                  settings = manager.GetSettings();                  Assert.Equal(TraceEventType.Error' settings.AzureDriveTraceLevel);                    JsonSerializationException exception = null;                    try                  {                      manager.UpdateSetting(DiagnosticsSettings.AzureTableTraceLevelKey' "Error");                  }                  catch (JsonSerializationException ex)                  {                      exception = ex;                  }                    Assert.NotNull(exception);                  Assert.Equal("Error getting value from 'AzureTableTraceLevel' on 'Kudu.Contracts.Settings.DiagnosticsSettings'."' exception.Message);                    try                  {                      manager.UpdateSetting(DiagnosticsSettings.AzureTableTraceLevelKey' "8");                  }                  catch (JsonSerializationException ex)                  {                      exception = ex;                  }                    Assert.Equal("Error getting value from 'AzureTableTraceLevel' on 'Kudu.Contracts.Settings.DiagnosticsSettings'."' exception.Message);                    try                  {                      manager.UpdateSetting(DiagnosticsSettings.AzureTableTraceLevelKey' "foo");                  }                  catch (JsonSerializationException ex)                  {                      exception = ex;                  }                    Assert.Equal("Error getting value from 'AzureTableTraceLevel' on 'Kudu.Contracts.Settings.DiagnosticsSettings'."' exception.Message);                    try                  {                      manager.UpdateSetting(DiagnosticsSettings.AzureBlobTraceLevelKey' 999);                  }                  catch (JsonSerializationException ex)                  {                      exception = ex;                  }                    Assert.Equal(string.Format(CultureInfo.InvariantCulture' "Error converting value '{0}'"' 999)' exception.Message);                    settings = manager.GetSettings();                  Assert.Equal(true' settings.AzureDriveEnabled);                  Assert.Equal(TraceEventType.Error' settings.AzureDriveTraceLevel);                  Assert.Equal(true' settings.AzureTableEnabled);                  Assert.Equal(TraceEventType.Warning' settings.AzureTableTraceLevel);                  Assert.Equal(true' settings.AzureBlobEnabled);                  Assert.Equal(TraceEventType.Information' settings.AzureBlobTraceLevel);                    // with corrupted content' kudu will auto-correct content and reset to default value                  manager = new DiagnosticsSettingsManager(@"x:\bad-content.json"' mockTracer.Object);                  settings = manager.GetSettings();                  Assert.Equal(false' settings.AzureDriveEnabled);                  Assert.Equal(TraceEventType.Error' settings.AzureDriveTraceLevel);                  Assert.Equal(false' settings.AzureTableEnabled);                  Assert.Equal(TraceEventType.Error' settings.AzureTableTraceLevel);                  Assert.Equal(false' settings.AzureBlobEnabled);                  Assert.Equal(TraceEventType.Error' settings.AzureBlobTraceLevel);              });
Magic Number,Kudu.Core.SSHKey.Test,SSHKeyManagerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\SSHKeyManagerFacts.cs,SetPrivateKeyAllowsRepeatedInvocation,The following statement contains a magic number: fileBase.Setup(s => s.Exists(sshPath + @"\id_rsa.pub"))                      .Returns(() => ++invoked <= 2);
Magic Number,Kudu.Core.SSHKey.Test,SSHKeyManagerFacts,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\SSHKeyManagerFacts.cs,SetPrivateKeyAllowsRepeatedInvocation,The following statement contains a magic number: fileBase.Verify(s => s.WriteAllText(sshPath + @"\id_rsa"' It.IsAny<string>())' Times.Exactly(2));
Magic Number,Kudu.Core.Test.Tracing,XmlTracerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\XmlTracerTests.cs,TracerMaxXmlFilesTest,The following statement contains a magic number: var total = XmlTracer.MaxXmlFiles + 10;
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldLogOneEventToFile,The following statement contains a magic number: LogEvent("val1"' 2);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldLogSeveralEventsToFile,The following statement contains a magic number: LogEvent("val1"' 2);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldLogSeveralEventsToFile,The following statement contains a magic number: LogEvent("val2"' 3);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldLogSeveralEventsToFile,The following statement contains a magic number: LogEvent("val3"' 4);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldLogSeveralEventsToFile,The following statement contains a magic number: LogEvent("val4"' 5);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldCleanupLogIfNeeded,The following statement contains a magic number: AddFileInfoBaseToFilesList(1024 * 1024' 1' false);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldCleanupLogIfNeeded,The following statement contains a magic number: AddFileInfoBaseToFilesList(1024 * 1024' 1' false);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldCleanupLogIfNeeded,The following statement contains a magic number: AddFileInfoBaseToFilesList(1024 * 1024' -2' true);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldCleanupLogIfNeeded,The following statement contains a magic number: AddFileInfoBaseToFilesList(1024 * 1024' -2' true);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldCleanupLogIfNeeded,The following statement contains a magic number: AddFileInfoBaseToFilesList(1024 * 1024' -2' true);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldCleanupLogIfNeeded,The following statement contains a magic number: AddFileInfoBaseToFilesList(1024 * 1024' 2' false);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldCleanupLogIfNeeded,The following statement contains a magic number: AddFileInfoBaseToFilesList(1024 * 1024' 2' false);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldCleanupLogIfNeeded,The following statement contains a magic number: AddFileInfoBaseToFilesList(1024 * 1024' 2' false);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldCleanupLogIfNeeded,The following statement contains a magic number: AddFileInfoBaseToFilesList(1024 * 1024' 1' false);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldCleanupLogIfNeeded,The following statement contains a magic number: AddFileInfoBaseToFilesList(1024 * 1024' 1' false);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldCleanupLogIfNeeded,The following statement contains a magic number: AddFileInfoBaseToFilesList(1024 * 1024' 1' false);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldCleanupLogIfNeeded,The following statement contains a magic number: AddFileInfoBaseToFilesList(1024 * 1024' 1' false);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldCleanupLogIfNeeded,The following statement contains a magic number: AddFileInfoBaseToFilesList(1024 * 1024' 1' false);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldCleanupLogIfNeeded,The following statement contains a magic number: AddFileInfoBaseToFilesList(1024 * 1024' 1' false);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldCleanupLogIfNeeded,The following statement contains a magic number: AddFileInfoBaseToFilesList(1024 * 1024' 1' false);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldCleanupLogIfNeeded,The following statement contains a magic number: AddFileInfoBaseToFilesList(1024 * 1024' 1' false);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldCleanupLogIfNeeded,The following statement contains a magic number: AddFileInfoBaseToFilesList(1024 * 1024' 1' false);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldCleanupLogIfNeeded,The following statement contains a magic number: AddFileInfoBaseToFilesList(1024 * 1024' 1' false);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldCleanupLogIfNeeded,The following statement contains a magic number: AddFileInfoBaseToFilesList(1024 * 1024' 1' false);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldCleanupLogIfNeeded,The following statement contains a magic number: AddFileInfoBaseToFilesList(1024 * 1024' 1' false);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldCleanupLogIfNeeded,The following statement contains a magic number: AddFileInfoBaseToFilesList(1024 * 1024' 1' false);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldCleanupLogIfNeeded,The following statement contains a magic number: AddFileInfoBaseToFilesList(1024 * 1024' 1' false);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldCleanupLogIfNeeded,The following statement contains a magic number: AddFileInfoBaseToFilesList(1024 * 1024' 4' false);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldCleanupLogIfNeeded,The following statement contains a magic number: AddFileInfoBaseToFilesList(1024 * 1024' 4' false);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldCleanupLogIfNeeded,The following statement contains a magic number: AddFileInfoBaseToFilesList(1024 * 1024' 4' false);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldCleanupLogIfNeeded,The following statement contains a magic number: LogEvent("val1"' 2);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldNotCleanupLogIfNotNeeded,The following statement contains a magic number: AddFileInfoBaseToFilesList(1024 * 1024' 1' false);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldNotCleanupLogIfNotNeeded,The following statement contains a magic number: AddFileInfoBaseToFilesList(1024 * 1024' 1' false);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldNotCleanupLogIfNotNeeded,The following statement contains a magic number: AddFileInfoBaseToFilesList(1024 * 1024' 2' false);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldNotCleanupLogIfNotNeeded,The following statement contains a magic number: AddFileInfoBaseToFilesList(1024 * 1024' 2' false);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldNotCleanupLogIfNotNeeded,The following statement contains a magic number: AddFileInfoBaseToFilesList(1024 * 1024' 2' false);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldNotCleanupLogIfNotNeeded,The following statement contains a magic number: AddFileInfoBaseToFilesList(1024 * 1024' 1' false);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldNotCleanupLogIfNotNeeded,The following statement contains a magic number: AddFileInfoBaseToFilesList(1024 * 1024' 1' false);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldNotCleanupLogIfNotNeeded,The following statement contains a magic number: AddFileInfoBaseToFilesList(1024 * 1024' 1' false);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldNotCleanupLogIfNotNeeded,The following statement contains a magic number: AddFileInfoBaseToFilesList(1024 * 1024' 1' false);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldNotCleanupLogIfNotNeeded,The following statement contains a magic number: AddFileInfoBaseToFilesList(1024 * 1024' 1' false);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldNotCleanupLogIfNotNeeded,The following statement contains a magic number: AddFileInfoBaseToFilesList(1024 * 1024' 1' false);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldNotCleanupLogIfNotNeeded,The following statement contains a magic number: AddFileInfoBaseToFilesList(1024 * 1024' 1' false);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldNotCleanupLogIfNotNeeded,The following statement contains a magic number: AddFileInfoBaseToFilesList(1024 * 1024' 1' false);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldNotCleanupLogIfNotNeeded,The following statement contains a magic number: AddFileInfoBaseToFilesList(1024 * 1024' 1' false);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldNotCleanupLogIfNotNeeded,The following statement contains a magic number: AddFileInfoBaseToFilesList(1024 * 1024' 1' false);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldNotCleanupLogIfNotNeeded,The following statement contains a magic number: AddFileInfoBaseToFilesList(1024 * 1024' 1' false);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldNotCleanupLogIfNotNeeded,The following statement contains a magic number: AddFileInfoBaseToFilesList(1024 * 1024' 1' false);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldNotCleanupLogIfNotNeeded,The following statement contains a magic number: AddFileInfoBaseToFilesList(1024 * 1024' 1' false);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldNotCleanupLogIfNotNeeded,The following statement contains a magic number: AddFileInfoBaseToFilesList(1024 * 1024' 1' false);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldNotCleanupLogIfNotNeeded,The following statement contains a magic number: AddFileInfoBaseToFilesList(1024 * 1024' 4' false);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldNotCleanupLogIfNotNeeded,The following statement contains a magic number: AddFileInfoBaseToFilesList(1024 * 1024' 4' false);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldNotCleanupLogIfNotNeeded,The following statement contains a magic number: AddFileInfoBaseToFilesList(1024 * 1024' 4' false);
Magic Number,Kudu.Core.Test.Tracing,SiteExtensionLogManagerTests,C:\research\architectureSmells\repos\projectkudu_kudu\Kudu.Core.Test\Tracing\SiteExtensionLogManagerTests.cs,SiteExtensionLogManagerShouldNotCleanupLogIfNotNeeded,The following statement contains a magic number: LogEvent("val1"' 2);
