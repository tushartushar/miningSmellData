Implementation smell,Namespace,Class,File,Method,Description
Long Method,Kudu.Core.Deployment,FetchDeploymentManager,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\FetchDeploymentManager.cs,PerformBackgroundDeployment,The method has 111 lines of code.
Long Method,Kudu.Core.Deployment,DeploymentManager,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\DeploymentManager.cs,Build,The method has 130 lines of code.
Long Method,Kudu.Core.Deployment.Generator,SiteBuilderFactory,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\SiteBuilderFactory.cs,CreateBuilder,The method has 113 lines of code.
Long Method,Kudu.Core.SiteExtensions,FeedExtensions,C:\repos\projectkudu_kudu\Kudu.Core\SiteExtensions\FeedExtensions.cs,UpdateLocalPackage,The method has 110 lines of code.
Long Method,Kudu.Core.SiteExtensions,SiteExtensionManager,C:\repos\projectkudu_kudu\Kudu.Core\SiteExtensions\SiteExtensionManager.cs,TryInstallExtension,The method has 164 lines of code.
Complex Method,Kudu.Core.Deployment.Generator,PHPSiteEnabler,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\PHPSiteEnabler.cs,LooksLikePHP,Cyclomatic complexity of the method is 9
Complex Method,Kudu.Core.Deployment.Generator,RubySiteEnabler,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\RubySiteEnabler.cs,LooksLikeRuby,Cyclomatic complexity of the method is 9
Complex Method,Kudu.Core.Deployment.Generator,NodeSiteEnabler,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\NodeSiteEnabler.cs,LooksLikeNode,Cyclomatic complexity of the method is 8
Complex Method,Kudu.Core.Deployment.Generator,SiteBuilderFactory,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\SiteBuilderFactory.cs,CreateBuilder,Cyclomatic complexity of the method is 13
Complex Method,Kudu.Core.Deployment.Generator,SiteBuilderFactory,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\SiteBuilderFactory.cs,ResolveProject,Cyclomatic complexity of the method is 8
Complex Method,Kudu.Core.Functions,FunctionManager,C:\repos\projectkudu_kudu\Kudu.Core\Functions\FunctionManager.cs,CreateOrUpdateAsync,Cyclomatic complexity of the method is 8
Complex Method,Kudu.Core.Jobs,JobsManagerBase<TJob>,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\JobsManagerBase.cs,FindCommandToRun,Cyclomatic complexity of the method is 10
Long Parameter List,Kudu.Core.Deployment,FetchDeploymentManager,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\FetchDeploymentManager.cs,FetchDeploymentManager,The method has 6 parameters. Parameters: settings' environment' tracer' deploymentLock' deploymentManager' status
Long Parameter List,Kudu.Core.Deployment,FetchDeploymentManager,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\FetchDeploymentManager.cs,PerformBackgroundDeployment,The method has 6 parameters. Parameters: deployInfo' environment' settings' traceLevel' uri' waitForTempDeploymentCreation
Long Parameter List,Kudu.Core.Deployment,DeploymentManager,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\DeploymentManager.cs,DeploymentManager,The method has 9 parameters. Parameters: builderFactory' environment' traceFactory' analytics' settings' status' deploymentLock' globalLogger' hooksManager
Long Parameter List,Kudu.Core.Deployment,DeploymentManager,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\DeploymentManager.cs,DeployAsync,The method has 6 parameters. Parameters: repository' changeSet' deployer' clean' needFileUpdate' fullBuildByDefault
Long Parameter List,Kudu.Core.Deployment,DeploymentManager,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\DeploymentManager.cs,Build,The method has 6 parameters. Parameters: changeSet' tracer' deployStep' repository' deploymentAnalytics' fullBuildByDefault
Long Parameter List,Kudu.Core.Deployment.Generator,FunctionMsbuildBuilder,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\FunctionMsbuildBuilder.cs,FunctionMsbuildBuilder,The method has 6 parameters. Parameters: environment' settings' propertyProvider' sourcePath' projectFilePath' solutionPath
Long Parameter List,Kudu.Core.Deployment.Generator,DotNetConsoleBuilder,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\DotNetConsoleBuilder.cs,DotNetConsoleBuilder,The method has 6 parameters. Parameters: environment' settings' propertyProvider' sourcePath' projectFilePath' solutionPath
Long Parameter List,Kudu.Core.Deployment.Generator,CustomGeneratorCommandSiteBuilder,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\CustomGeneratorCommandSiteBuilder.cs,CustomGeneratorCommandSiteBuilder,The method has 5 parameters. Parameters: environment' settings' propertyProvider' sourcePath' scriptGeneratorArgs
Long Parameter List,Kudu.Core.Deployment.Generator,FunctionBasicBuilder,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\FunctionBasicBuilder.cs,FunctionBasicBuilder,The method has 5 parameters. Parameters: environment' settings' propertyProvider' repositoryPath' projectPath
Long Parameter List,Kudu.Core.Deployment.Generator,GoSiteBuilder,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\GoSiteBuilder.cs,GoSiteBuilder,The method has 5 parameters. Parameters: environment' settings' propertyProvider' repositoryPath' projectPath
Long Parameter List,Kudu.Core.Deployment.Generator,MicrosoftSiteBuilder,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\MicrosoftSiteBuilder.cs,MicrosoftSiteBuilder,The method has 7 parameters. Parameters: environment' settings' propertyProvider' sourcePath' projectFilePath' solutionPath' commandArgument
Long Parameter List,Kudu.Core.Deployment.Generator,PHPSiteBuilder,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\PHPSiteBuilder.cs,PHPSiteBuilder,The method has 5 parameters. Parameters: environment' settings' propertyProvider' repositoryPath' projectPath
Long Parameter List,Kudu.Core.Deployment.Generator,PythonSiteBuilder,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\PythonSiteBuilder.cs,PythonSiteBuilder,The method has 5 parameters. Parameters: environment' settings' propertyProvider' repositoryPath' projectPath
Long Parameter List,Kudu.Core.Deployment.Generator,AspNetCoreBuilder,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\AspNetCoreBuilder.cs,AspNetCoreBuilder,The method has 6 parameters. Parameters: environment' settings' propertyProvider' sourcePath' projectFilePath' solutionPath
Long Parameter List,Kudu.Core.Deployment.Generator,RubySiteBuilder,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\RubySiteBuilder.cs,RubySiteBuilder,The method has 5 parameters. Parameters: environment' settings' propertyProvider' repositoryPath' projectPath
Long Parameter List,Kudu.Core.Deployment.Generator,BasicBuilder,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\BasicBuilder.cs,BasicBuilder,The method has 5 parameters. Parameters: environment' settings' propertyProvider' repositoryPath' projectPath
Long Parameter List,Kudu.Core.Deployment.Generator,BaseBasicBuilder,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\BaseBasicBuilder.cs,BaseBasicBuilder,The method has 6 parameters. Parameters: environment' settings' propertyProvider' repositoryPath' projectPath' commandArgument
Long Parameter List,Kudu.Core.Deployment.Generator,CustomBuilder,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\CustomBuilder.cs,CustomBuilder,The method has 5 parameters. Parameters: environment' settings' propertyProvider' repositoryPath' command
Long Parameter List,Kudu.Core.Deployment.Generator,NodeSiteBuilder,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\NodeSiteBuilder.cs,NodeSiteBuilder,The method has 5 parameters. Parameters: environment' settings' propertyProvider' repositoryPath' projectPath
Long Parameter List,Kudu.Core.Deployment.Generator,SiteBuilderFactory,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\SiteBuilderFactory.cs,ResolveProject,The method has 5 parameters. Parameters: repositoryRoot' perDeploymentSettings' fileFinder' tryWebSiteProject' searchOption
Long Parameter List,Kudu.Core.Deployment.Generator,SiteBuilderFactory,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\SiteBuilderFactory.cs,ResolveProject,The method has 7 parameters. Parameters: repositoryRoot' targetPath' perDeploymentSettings' fileFinder' tryWebSiteProject' searchOption' specificConfiguration
Long Parameter List,Kudu.Core.Deployment.Generator,WapBuilder,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\WapBuilder.cs,WapBuilder,The method has 6 parameters. Parameters: environment' settings' propertyProvider' sourcePath' projectFilePath' solutionPath
Long Parameter List,Kudu.Core.Deployment.Generator,WebSiteBuilder,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\WebSiteBuilder.cs,WebSiteBuilder,The method has 6 parameters. Parameters: environment' settings' propertyProvider' sourcePath' projectPath' solutionPath
Long Parameter List,Kudu.Core.Helpers,PermissionHelper,C:\repos\projectkudu_kudu\Kudu.Core\Helpers\PermissionHelper.cs,Chmod,The method has 5 parameters. Parameters: permission' filePath' environment' deploymentSettingManager' logger
Long Parameter List,Kudu.Core.Helpers,PostDeploymentTraceListener,C:\repos\projectkudu_kudu\Kudu.Core\Helpers\PostDeploymentTraceListener.cs,TraceEvent,The method has 6 parameters. Parameters: eventCache' source' eventType' id' format' args
Long Parameter List,Kudu.Core.Infrastructure,ZipArchiveExtensions,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\ZipArchiveExtensions.cs,AddDirectory,The method has 5 parameters. Parameters: zipArchive' directory' tracer' directoryNameInArchive' files
Long Parameter List,Kudu.Core.Infrastructure,ZipArchiveExtensions,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\ZipArchiveExtensions.cs,InternalAddDirectory,The method has 5 parameters. Parameters: zipArchive' directory' tracer' directoryNameInArchive' files
Long Parameter List,Kudu.Core.Infrastructure,MiniDumpNativeMethods,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\MiniDumpNativeMethods.cs,MiniDumpWriteDump,The method has 7 parameters. Parameters: hProcess' processId' hFile' dumpType' expParam' userStreamParam' callbackParam
Long Parameter List,Kudu.Core.Infrastructure,ProcessExtensions,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\ProcessExtensions.cs,Start,The method has 6 parameters. Parameters: process' tracer' output' error' input' idleManager
Long Parameter List,Kudu.Core.Infrastructure,ProcessExtensions,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\ProcessExtensions.cs,CopyStreamAsync,The method has 5 parameters. Parameters: from' to' idleManager' cancellationToken' closeAfterCopy
Long Parameter List,Kudu.Core.Infrastructure,ProcessExtensions,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\ProcessExtensions.cs,FlushAllAsync,The method has 5 parameters. Parameters: process' tracer' idleManager' cancellationTokenSource' tasks
Long Parameter List,Kudu.Core.Infrastructure,ProcessNativeMethods,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\ProcessExtensions.cs,NtQueryInformationProcess,The method has 5 parameters. Parameters: processHandle' processInformationClass' processInformation' processInformationLength' returnLength
Long Parameter List,Kudu.Core.Infrastructure,ProcessNativeMethods,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\ProcessExtensions.cs,NtQueryInformationProcess,The method has 5 parameters. Parameters: processHandle' processInformationClass' processInformation' processInformationLength' returnLength
Long Parameter List,Kudu.Core.Infrastructure,ProcessNativeMethods,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\ProcessExtensions.cs,ReadProcessMemory,The method has 5 parameters. Parameters: hProcess' lpBaseAddress' lpBuffer' dwSize' lpNumberOfBytesRead
Long Parameter List,Kudu.Core.Infrastructure,ProcessNativeMethods,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\ProcessExtensions.cs,ReadProcessMemory,The method has 5 parameters. Parameters: hProcess' lpBaseAddress' lpBuffer' dwSize' lpNumberOfBytesRead
Long Parameter List,Kudu.Core.Infrastructure,ProcessNativeMethods,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\ProcessExtensions.cs,ReadProcessMemory,The method has 5 parameters. Parameters: hProcess' lpBaseAddress' lpPtr' dwSize' lpNumberOfBytesRead
Long Parameter List,Kudu.Core.Infrastructure,ProcessNativeMethods,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\ProcessExtensions.cs,ReadProcessMemory,The method has 5 parameters. Parameters: hProcess' lpBaseAddress' lpBuffer' dwSize' lpNumberOfBytesRead
Long Parameter List,Kudu.Core.Infrastructure,ProcessNativeMethods,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\ProcessExtensions.cs,ReadProcessMemory,The method has 5 parameters. Parameters: hProcess' lpBaseAddress' lpBuffer' dwSize' lpNumberOfBytesRead
Long Parameter List,Kudu.Core.Infrastructure,Executable,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\Executable.cs,Execute,The method has 5 parameters. Parameters: tracer' input' output' arguments' args
Long Parameter List,Kudu.Core.Infrastructure,Executable,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\Executable.cs,ExecuteReturnExitCode,The method has 5 parameters. Parameters: tracer' onWriteOutput' onWriteError' arguments' args
Long Parameter List,Kudu.Core.Infrastructure,Executable,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\Executable.cs,ExecuteInternal,The method has 6 parameters. Parameters: tracer' onWriteOutput' onWriteError' encoding' arguments' args
Long Parameter List,Kudu.Core.Infrastructure,Executable,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\Executable.cs,ExecuteAsync,The method has 6 parameters. Parameters: tracer' arguments' output' error' input' idleManager
Long Parameter List,Kudu.Core.Jobs,ContinuousJobRunner,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\ContinuousJobRunner.cs,ContinuousJobRunner,The method has 5 parameters. Parameters: continuousJob' environment' settings' traceFactory' analytics
Long Parameter List,Kudu.Core.Jobs,JobsFileWatcher,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\JobsFileWatcher.cs,JobsFileWatcher,The method has 7 parameters. Parameters: watchedDirectoryPath' onJobChanged' filter' listJobNames' traceFactory' analytics' jobType
Long Parameter List,Kudu.Core.Jobs,BaseJobRunner,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\BaseJobRunner.cs,BaseJobRunner,The method has 6 parameters. Parameters: jobName' jobsTypePath' environment' settings' traceFactory' analytics
Long Parameter List,Kudu.Core.Jobs,BaseJobRunner,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\BaseJobRunner.cs,RunJobInstance,The method has 6 parameters. Parameters: job' logger' runId' trigger' tracer' port
Long Parameter List,Kudu.Core.Jobs,JobStartedReporter,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\BaseJobRunner.cs,JobStartedReporter,The method has 5 parameters. Parameters: analytics' job' trigger' siteMode' jobDataPath
Long Parameter List,Kudu.Core.Jobs,FilePerJobLogger,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\FilePerJobLogger.cs,FilePerJobLogger,The method has 6 parameters. Parameters: jobName' jobType' statusFileName' jobLogFileName' environment' traceFactory
Long Parameter List,Kudu.Core.Jobs,TriggeredJobRunLogger,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\TriggeredJobRunLogger.cs,TriggeredJobRunLogger,The method has 5 parameters. Parameters: jobName' id' environment' traceFactory' logToAppLogs
Long Parameter List,Kudu.Core.Jobs,TriggeredJobRunLogger,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\TriggeredJobRunLogger.cs,LogNewRun,The method has 5 parameters. Parameters: triggeredJob' trigger' environment' traceFactory' settings
Long Parameter List,Kudu.Core.Jobs,TriggeredJobRunner,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\TriggeredJobRunner.cs,TriggeredJobRunner,The method has 5 parameters. Parameters: jobName' environment' settings' traceFactory' analytics
Long Parameter List,Kudu.Core.Jobs,JobsManagerBase<TJob>,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\JobsManagerBase.cs,JobsManagerBase,The method has 5 parameters. Parameters: traceFactory' environment' settings' analytics' jobsTypePath
Long Parameter List,Kudu.Core.Jobs,TriggeredJobsManager,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\TriggeredJobsManager.cs,TriggeredJobsManager,The method has 5 parameters. Parameters: traceFactory' environment' settings' analytics' hooksManager
Long Parameter List,Kudu.Core.Jobs,TriggeredJobsScheduler,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\TriggeredJobsScheduler.cs,TriggeredJobsScheduler,The method has 5 parameters. Parameters: triggeredJobsManager' traceFactory' environment' settings' analytics
Long Parameter List,Kudu.Core.SiteExtensions,FeedExtensions,C:\repos\projectkudu_kudu\Kudu.Core\SiteExtensions\FeedExtensions.cs,Search,The method has 5 parameters. Parameters: srcRepo' searchTerm' filterOptions' skip' take
Long Parameter List,Kudu.Core.SiteExtensions,FeedExtensions,C:\repos\projectkudu_kudu\Kudu.Core\SiteExtensions\FeedExtensions.cs,GetLatestPackageByIdFromMetaRes,The method has 5 parameters. Parameters: metadataResource' packageId' includePrerelease' includeUnlisted' explicitTag
Long Parameter List,Kudu.Core.SiteExtensions,FeedExtensions,C:\repos\projectkudu_kudu\Kudu.Core\SiteExtensions\FeedExtensions.cs,UpdateLocalPackage,The method has 6 parameters. Parameters: srcRepo' localRepo' identity' destinationFolder' pathToLocalCopyOfNupkg' tracer
Long Parameter List,Kudu.Core.SiteExtensions,SiteExtensionManager,C:\repos\projectkudu_kudu\Kudu.Core\SiteExtensions\SiteExtensionManager.cs,SiteExtensionManager,The method has 7 parameters. Parameters: continuousJobManager' triggeredJobManager' environment' settings' traceFactory' context' analytics
Long Parameter List,Kudu.Core.SiteExtensions,SiteExtensionManager,C:\repos\projectkudu_kudu\Kudu.Core\SiteExtensions\SiteExtensionManager.cs,InstallExtension,The method has 6 parameters. Parameters: id' version' feedUrl' type' tracer' installationArgs
Long Parameter List,Kudu.Core.SiteExtensions,SiteExtensionManager,C:\repos\projectkudu_kudu\Kudu.Core\SiteExtensions\SiteExtensionManager.cs,InstallExtensionCore,The method has 6 parameters. Parameters: id' version' feedUrl' type' tracer' installationArgs
Long Parameter List,Kudu.Core.SiteExtensions,SiteExtensionManager,C:\repos\projectkudu_kudu\Kudu.Core\SiteExtensions\SiteExtensionManager.cs,TryInstallExtension,The method has 6 parameters. Parameters: id' version' feedUrl' type' tracer' installationArgs
Long Parameter List,Kudu.Core.SiteExtensions,SiteExtensionManager,C:\repos\projectkudu_kudu\Kudu.Core\SiteExtensions\SiteExtensionManager.cs,InstallExtension,The method has 6 parameters. Parameters: package' installationDirectory' remoteRepo' type' tracer' installationArgs
Long Parameter List,Kudu.Core.SourceControl.Git,GitExeServer,C:\repos\projectkudu_kudu\Kudu.Core\SourceControl\Git\GitExeServer.cs,GitExeServer,The method has 7 parameters. Parameters: environment' initLock' logFileEnv' repositoryFactory' deploymentEnvironment' settings' traceFactory
Long Parameter List,Kudu.Core.Tracing,KuduEventSource,C:\repos\projectkudu_kudu\Kudu.Core\Tracing\KuduEventSource.cs,ProjectDeployed,The method has 8 parameters. Parameters: siteName' projectType' result' error' deploymentDurationInMilliseconds' siteMode' scmType' vsProjectId
Long Parameter List,Kudu.Core.Tracing,KuduEventSource,C:\repos\projectkudu_kudu\Kudu.Core\Tracing\KuduEventSource.cs,WebJobStarted,The method has 7 parameters. Parameters: siteName' jobName' scriptExtension' jobType' siteMode' error' trigger
Long Parameter List,Kudu.Core.Tracing,KuduEventSource,C:\repos\projectkudu_kudu\Kudu.Core\Tracing\KuduEventSource.cs,KuduException,The method has 6 parameters. Parameters: siteName' method' path' result' Message' exception
Long Parameter List,Kudu.Core.Tracing,KuduEventSource,C:\repos\projectkudu_kudu\Kudu.Core\Tracing\KuduEventSource.cs,DeprecatedApiUsed,The method has 5 parameters. Parameters: siteName' route' userAgent' method' path
Long Parameter List,Kudu.Core.Tracing,KuduEventSource,C:\repos\projectkudu_kudu\Kudu.Core\Tracing\KuduEventSource.cs,KuduSiteExtensionEvent,The method has 6 parameters. Parameters: siteName' method' path' result' deploymentDurationInMilliseconds' Message
Long Parameter List,Kudu.Core.Tracing,KuduEventSource,C:\repos\projectkudu_kudu\Kudu.Core\Tracing\KuduEventSource.cs,WebJobEvent,The method has 5 parameters. Parameters: siteName' jobName' Message' jobType' error
Long Parameter List,Kudu.Core.Tracing,KuduEventSource,C:\repos\projectkudu_kudu\Kudu.Core\Tracing\KuduEventSource.cs,GenericEvent,The method has 6 parameters. Parameters: siteName' Message' requestId' scmType' siteMode' buildVersion
Long Parameter List,Kudu.Core.Tracing,KuduEventSource,C:\repos\projectkudu_kudu\Kudu.Core\Tracing\KuduEventSource.cs,ApiEvent,The method has 8 parameters. Parameters: siteName' Message' address' verb' requestId' statusCode' latencyInMilliseconds' userAgent
Long Parameter List,Kudu.Core.Tracing,Analytics,C:\repos\projectkudu_kudu\Kudu.Core\Tracing\Analytics.cs,ProjectDeployed,The method has 6 parameters. Parameters: projectType' result' error' deploymentDurationInMilliseconds' siteMode' vsProjectId
Long Parameter List,Kudu.Core.Tracing,Analytics,C:\repos\projectkudu_kudu\Kudu.Core\Tracing\Analytics.cs,JobStarted,The method has 6 parameters. Parameters: jobName' scriptExtension' jobType' siteMode' error' trigger
Long Parameter List,Kudu.Core.Tracing,Analytics,C:\repos\projectkudu_kudu\Kudu.Core\Tracing\Analytics.cs,UnexpectedException,The method has 5 parameters. Parameters: exception' trace' memberName' sourceFilePath' sourceLineNumber
Long Parameter List,Kudu.Core.Tracing,Analytics,C:\repos\projectkudu_kudu\Kudu.Core\Tracing\Analytics.cs,UnexpectedException,The method has 6 parameters. Parameters: ex' method' path' result' message' trace
Long Parameter List,Kudu.Core.Tracing,Analytics,C:\repos\projectkudu_kudu\Kudu.Core\Tracing\Analytics.cs,SiteExtensionEvent,The method has 5 parameters. Parameters: method' path' result' deploymentDurationInMilliseconds' message
Long Parameter List,Kudu.Core.Tracing,Analytics,C:\repos\projectkudu_kudu\Kudu.Core\Tracing\Analytics.cs,GetExceptionContent,The method has 5 parameters. Parameters: exception' trace' memberName' sourceFilePath' sourceLineNumber
Long Parameter List,Kudu.Core.Tracing,IAnalytics,C:\repos\projectkudu_kudu\Kudu.Core\Tracing\IAnalytics.cs,ProjectDeployed,The method has 6 parameters. Parameters: projectType' result' error' deploymentDurationInMilliseconds' siteMode' vsProjectId
Long Parameter List,Kudu.Core.Tracing,IAnalytics,C:\repos\projectkudu_kudu\Kudu.Core\Tracing\IAnalytics.cs,JobStarted,The method has 6 parameters. Parameters: jobName' scriptExtension' jobType' siteMode' error' trigger
Long Parameter List,Kudu.Core.Tracing,IAnalytics,C:\repos\projectkudu_kudu\Kudu.Core\Tracing\IAnalytics.cs,UnexpectedException,The method has 5 parameters. Parameters: ex' trace' memberName' sourceFilePath' sourceLineNumber
Long Parameter List,Kudu.Core.Tracing,IAnalytics,C:\repos\projectkudu_kudu\Kudu.Core\Tracing\IAnalytics.cs,UnexpectedException,The method has 6 parameters. Parameters: ex' method' path' result' message' trace
Long Parameter List,Kudu.Core.Tracing,IAnalytics,C:\repos\projectkudu_kudu\Kudu.Core\Tracing\IAnalytics.cs,SiteExtensionEvent,The method has 5 parameters. Parameters: method' path' result' deploymentDurationInMilliseconds' Message
Long Parameter List,Kudu.Core,Environment,C:\repos\projectkudu_kudu\Kudu.Core\Environment.cs,Environment,The method has 16 parameters. Parameters: rootPath' siteRootPath' tempPath' zipTempPath' repositoryPath' webRootPath' deploymentsPath' diagnosticsPath' locksPath' sshKeyPath' scriptPath' nodeModulesPath' dataPath' siteExtensionSettingsPath' requestId' siteRestrictedJwt
Long Parameter List,Kudu.Core,Environment,C:\repos\projectkudu_kudu\Kudu.Core\Environment.cs,Environment,The method has 5 parameters. Parameters: rootPath' binPath' repositoryPath' requestId' siteRetrictedJwt
Long Identifier,Kudu.Core.Deployment,WellKnownEnvironmentVariables,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\WellKnownEnvironmentVariables.cs,,The length of the parameter WebJobsShutdownNotificationFile is 31.
Long Identifier,Kudu.Core.Deployment.Generator,GeneratorSiteBuilder,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\GeneratorSiteBuilder.cs,GenerateScript,The length of the parameter scriptGeneratorCommandArguments is 31.
Long Identifier,Kudu.Core.Deployment.Generator,GeneratorSiteBuilder,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\GeneratorSiteBuilder.cs,UseCachedDeploymentScript,The length of the parameter cachedDeploymentCommandArguments is 32.
Long Identifier,Kudu.Core.Deployment.Generator,GeneratorSiteBuilder,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\GeneratorSiteBuilder.cs,,The length of the parameter ScriptGeneratorCommandArgumentsFormat is 37.
Long Identifier,Kudu.Core.Deployment.Generator,GeneratorSiteBuilder,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\GeneratorSiteBuilder.cs,,The length of the parameter DeploymentCommandCacheKeyFileName is 33.
Long Identifier,Kudu.Core.Functions,FunctionManager,C:\repos\projectkudu_kudu\Kudu.Core\Functions\FunctionManager.cs,AddCsprojFile,The length of the parameter microsoftAzureWebJobsExtensionsHttpVersion is 42.
Long Identifier,Kudu.Core.Functions,FunctionManager,C:\repos\projectkudu_kudu\Kudu.Core\Functions\FunctionManager.cs,AddCsprojFile,The length of the parameter microsoftNETSdkFunctionsVersion is 31.
Long Identifier,Kudu.Core.Jobs,ContinuousJobRunner,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\ContinuousJobRunner.cs,,The length of the parameter DefaultContinuousJobStoppingWaitTimeInSeconds is 45.
Long Identifier,Kudu.Core.Jobs,TriggeredJobsManager,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\TriggeredJobsManager.cs,UpdateJob,The length of the parameter triggeredJobSchedulerLogFilePath is 32.
Long Identifier,Kudu.Core.Jobs,TriggeredJobsManager,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\TriggeredJobsManager.cs,,The length of the parameter DefaultTriggeredJobStoppingWaitTimeInSeconds is 44.
Long Identifier,Kudu.Core.SiteExtensions,DummyReference,C:\repos\projectkudu_kudu\Kudu.Core\SiteExtensions\DummyReference.cs,,The length of the parameter v3SimpleSearchResourceProvider is 30.
Long Identifier,Kudu.Core.SiteExtensions,DummyReference,C:\repos\projectkudu_kudu\Kudu.Core\SiteExtensions\DummyReference.cs,,The length of the parameter v2SimpleSearchResourceProvider is 30.
Long Identifier,Kudu.Core.SiteExtensions,DummyReference,C:\repos\projectkudu_kudu\Kudu.Core\SiteExtensions\DummyReference.cs,,The length of the parameter iFrameworkCompatibilityProvider is 31.
Long Identifier,Kudu.Core.Tracing,KuduEventSource,C:\repos\projectkudu_kudu\Kudu.Core\Tracing\KuduEventSource.cs,ProjectDeployed,The length of the parameter deploymentDurationInMilliseconds is 32.
Long Identifier,Kudu.Core.Tracing,KuduEventSource,C:\repos\projectkudu_kudu\Kudu.Core\Tracing\KuduEventSource.cs,KuduSiteExtensionEvent,The length of the parameter deploymentDurationInMilliseconds is 32.
Long Identifier,Kudu.Core.Tracing,Analytics,C:\repos\projectkudu_kudu\Kudu.Core\Tracing\Analytics.cs,ProjectDeployed,The length of the parameter deploymentDurationInMilliseconds is 32.
Long Identifier,Kudu.Core.Tracing,Analytics,C:\repos\projectkudu_kudu\Kudu.Core\Tracing\Analytics.cs,SiteExtensionEvent,The length of the parameter deploymentDurationInMilliseconds is 32.
Long Identifier,Kudu.Core.Tracing,IAnalytics,C:\repos\projectkudu_kudu\Kudu.Core\Tracing\IAnalytics.cs,ProjectDeployed,The length of the parameter deploymentDurationInMilliseconds is 32.
Long Identifier,Kudu.Core.Tracing,IAnalytics,C:\repos\projectkudu_kudu\Kudu.Core\Tracing\IAnalytics.cs,SiteExtensionEvent,The length of the parameter deploymentDurationInMilliseconds is 32.
Long Statement,Kudu.Core.Commands,CommandExecutor,C:\repos\projectkudu_kudu\Kudu.Core\Commands\CommandExecutor.cs,ExecuteCommandAsync,The length of the statement  "                workingDirectory = Path.Combine(_rootDirectory' System.Environment.ExpandEnvironmentVariables(relativeWorkingDirectory)); " is 121.
Long Statement,Kudu.Core.Commands,CommandExecutor,C:\repos\projectkudu_kudu\Kudu.Core\Commands\CommandExecutor.cs,ExecuteCommandAsync,The length of the statement  "            Executable exe = _externalCommandFactory.BuildExternalCommandExecutable(workingDirectory' _environment.WebRootPath' NullLogger.Instance); " is 137.
Long Statement,Kudu.Core.Deployment,FetchDeploymentManager,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\FetchDeploymentManager.cs,PerformDeployment,The length of the statement  "                    await PostDeploymentHelper.PerformAutoSwap(_environment.RequestId' _environment.SiteRestrictedJwt' new PostDeploymentTraceListener(_tracer' _deploymentManager.GetLogger(lastChange.Id))); " is 186.
Long Statement,Kudu.Core.Deployment,FetchDeploymentManager,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\FetchDeploymentManager.cs,PerformBackgroundDeployment,The length of the statement  "            var tracer = traceLevel <= TraceLevel.Off ? NullTracer.Instance : new CascadeTracer(new XmlTracer(environment.TracePath' traceLevel)' new ETWTracer(environment.RequestId' "POST")); " is 180.
Long Statement,Kudu.Core.Deployment,FetchDeploymentManager,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\FetchDeploymentManager.cs,PerformBackgroundDeployment,The length of the statement  "                    var deploymentManager = new DeploymentManager(siteBuilderFactory' environment' traceFactory' analytics' settings' deploymentStatusManager' deploymentLock' NullLogger.Instance' webHooksManager); " is 193.
Long Statement,Kudu.Core.Deployment,FetchDeploymentManager,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\FetchDeploymentManager.cs,PerformBackgroundDeployment,The length of the statement  "                    var fetchDeploymentManager = new FetchDeploymentManager(settings' environment' tracer' deploymentLock' deploymentManager' deploymentStatusManager); " is 147.
Long Statement,Kudu.Core.Deployment,StructuredTextDocument<T>,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\StructuredTextDocument.cs,ValidateStringMessage,The length of the statement  "                        string.Format("Serialized log of type '{0}' => '{1}' contains an invalid sequance '{2}' for a logEntry in a StructuredTextDocument"' " is 132.
Long Statement,Kudu.Core.Deployment,StructuredTextLogger,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\StructuredTextLogger.cs,GetLogEntryDetails,The length of the statement  "                var entry = _structuredTextDocument.GetDocument().FirstOrDefault(s => s.LogEntry.Id.Equals(entryId' StringComparison.OrdinalIgnoreCase)); " is 137.
Long Statement,Kudu.Core.Deployment,DeploymentManager,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\DeploymentManager.cs,Delete,The length of the statement  "                    throw new DirectoryNotFoundException(String.Format(CultureInfo.CurrentCulture' Resources.Error_UnableToDeleteNoDeploymentFound' id)); " is 133.
Long Statement,Kudu.Core.Deployment,DeploymentManager,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\DeploymentManager.cs,Delete,The length of the statement  "                    throw new InvalidOperationException(String.Format(CultureInfo.CurrentCulture' Resources.Error_UnableToDeleteDeploymentActive' id)); " is 131.
Long Statement,Kudu.Core.Deployment,DeploymentManager,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\DeploymentManager.cs,DeployAsync,The length of the statement  "                        throw new InvalidOperationException(String.Format("The current deployment branch is '{0}'' but nothing has been pushed to it"' targetBranch)); " is 142.
Long Statement,Kudu.Core.Deployment,DeploymentManager,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\DeploymentManager.cs,CreateTemporaryChangeSet,The length of the statement  "            return new ChangeSet(GenerateTemporaryId()' authorName ?? unknown' authorEmail ?? unknown' message ?? unknown' DateTimeOffset.MinValue) " is 135.
Long Statement,Kudu.Core.Deployment,DeploymentManager,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\DeploymentManager.cs,Build,The length of the statement  "                var perDeploymentDefaults = new Dictionary<string' string> { { SettingsKeys.DoBuildDuringDeployment' fullBuildByDefault.ToString() } }; " is 135.
Long Statement,Kudu.Core.Deployment,DeploymentManager,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\DeploymentManager.cs,Build,The length of the statement  "                var perDeploymentSettings = DeploymentSettingsManager.BuildPerDeploymentSettingsManager(repository.RepositoryPath' settingsProviders); " is 134.
Long Statement,Kudu.Core.Deployment,DeploymentManager,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\DeploymentManager.cs,Build,The length of the statement  "                        tracer.Trace("Invalid {0} value' expect a positive integer' received {1}"' SettingsKeys.MaxRandomDelayInSec' delayMaxInStr); " is 124.
Long Statement,Kudu.Core.Deployment,DeploymentManager,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\DeploymentManager.cs,Build,The length of the statement  "                        await PostDeploymentHelper.SyncFunctionsTriggers(_environment.RequestId' _environment.SiteRestrictedJwt' new PostDeploymentTraceListener(tracer' logger)); " is 154.
Long Statement,Kudu.Core.Deployment,DeploymentManager,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\DeploymentManager.cs,PreDeployment,The length of the statement  "                string dst = Path.GetFullPath(Path.Combine(System.Environment.GetEnvironmentVariable("USERPROFILE")' Constants.SSHKeyPath)); " is 124.
Long Statement,Kudu.Core.Deployment,XmlLogger,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\XmlLogger.cs,GetFirstErrorEntryMessage,The length of the statement  "            var firstErrorEntry = document.Root.Elements("entry").First(s => s.Attribute("type").Value == ((int)(LogEntryType.Error)).ToString()); " is 134.
Long Statement,Kudu.Core.Deployment.Generator,ExternalCommandFactory,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\ExternalCommandFactory.cs,BuildExternalCommandExecutable,The length of the statement  "            var exe = BuildCommandExecutable(StarterScriptPath' workingDirectory' _deploymentSettings.GetCommandIdleTimeout()' logger); " is 123.
Long Statement,Kudu.Core.Deployment.Generator,ExternalCommandFactory,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\ExternalCommandFactory.cs,BuildExternalCommandExecutable,The length of the statement  "            UpdateToDefaultIfNotSet(exe' WellKnownEnvironmentVariables.SelectNodeVersionCommandKey' SelectNodeVersionCommand' logger); " is 122.
Long Statement,Kudu.Core.Deployment.Generator,ExternalCommandFactory,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\ExternalCommandFactory.cs,BuildExternalCommandExecutable,The length of the statement  "            UpdateToDefaultIfNotSet(exe' WellKnownEnvironmentVariables.SelectPythonVersionCommandKey' SelectPythonVersionCommand' logger); " is 126.
Long Statement,Kudu.Core.Deployment.Generator,ExternalCommandFactory,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\ExternalCommandFactory.cs,BuildExternalCommandExecutable,The length of the statement  "            UpdateToDefaultIfNotSet(exe' WellKnownEnvironmentVariables.SelectLatestVersionCommandKey' SelectLatestVersionCommand' logger); " is 126.
Long Statement,Kudu.Core.Deployment.Generator,ExternalCommandFactory,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\ExternalCommandFactory.cs,BuildCommandExecutable,The length of the statement  "            UpdateToDefaultIfNotSet(exe' WellKnownEnvironmentVariables.MSBuildPath' PathUtilityFactory.Instance.ResolveMSBuildPath()' logger); " is 130.
Long Statement,Kudu.Core.Deployment.Generator,ExternalCommandFactory,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\ExternalCommandFactory.cs,BuildCommandExecutable,The length of the statement  "            UpdateToDefaultIfNotSet(exe' WellKnownEnvironmentVariables.MSBuild15Dir' PathUtilityFactory.Instance.ResolveMSBuild15Dir()' logger); " is 132.
Long Statement,Kudu.Core.Deployment.Generator,ExternalCommandFactory,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\ExternalCommandFactory.cs,BuildCommandExecutable,The length of the statement  "            UpdateToDefaultIfNotSet(exe' WellKnownEnvironmentVariables.NpmJsPathKey' PathUtilityFactory.Instance.ResolveNpmJsPath()' logger); " is 129.
Long Statement,Kudu.Core.Deployment.Generator,ExternalCommandFactory,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\ExternalCommandFactory.cs,BuildCommandExecutable,The length of the statement  "            UpdateToDefaultIfNotSet(exe' WellKnownEnvironmentVariables.VCTargetsPath' PathUtilityFactory.Instance.ResolveVCTargetsPath()' logger); " is 134.
Long Statement,Kudu.Core.Deployment.Generator,ExternalCommandFactory,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\ExternalCommandFactory.cs,BuildCommandExecutable,The length of the statement  "            UpdateToDefaultIfNotSet(exe' WellKnownEnvironmentVariables.VCInstallDir140' PathUtilityFactory.Instance.ResolveVCInstallDirPath()' logger); " is 139.
Long Statement,Kudu.Core.Deployment.Generator,ExternalCommandBuilder,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\ExternalCommandBuilder.cs,PostBuild,The length of the statement  "                    scriptFilePath = string.Format(CultureInfo.InvariantCulture' "PowerShell.exe -ExecutionPolicy RemoteSigned -File \"{0}\""' file); " is 129.
Long Statement,Kudu.Core.Deployment.Generator,ExternalCommandBuilder,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\ExternalCommandBuilder.cs,RunCommand,The length of the statement  "            exe.EnvironmentVariables[WellKnownEnvironmentVariables.PreviousManifestPath] = context.PreviousManifestFilePath ?? String.Empty; " is 128.
Long Statement,Kudu.Core.Deployment.Generator,ExternalCommandBuilder,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\ExternalCommandBuilder.cs,GetPostBuildActionScripts,The length of the statement  "            // if %SCM_POST_DEPLOYMENT_ACTIONS_PATH% is set' we will support both absolute path or relative parth from "d:/home/site/repository" " is 132.
Long Statement,Kudu.Core.Deployment.Generator,ExternalCommandBuilder,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\ExternalCommandBuilder.cs,GetPostBuildActionScripts,The length of the statement  "            var postDeploymentPath = string.IsNullOrEmpty(customPostDeploymentPath) ? Path.Combine(Environment.DeploymentToolsPath' PostDeploymentActions) : Path.Combine(Environment.RepositoryPath' customPostDeploymentPath); " is 212.
Long Statement,Kudu.Core.Deployment.Generator,ExternalCommandBuilder,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\ExternalCommandBuilder.cs,GetPostBuildActionScripts,The length of the statement  "            string siteExtensionFolder = Path.Combine(System.Environment.GetFolderPath(System.Environment.SpecialFolder.ProgramFilesX86)' "SiteExtensions"); " is 144.
Long Statement,Kudu.Core.Deployment.Generator,ExternalCommandBuilder,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\ExternalCommandBuilder.cs,GetPostBuildActionScripts,The length of the statement  "                    && (string.Equals("latest"' val' StringComparison.OrdinalIgnoreCase) || NuGetVersion.TryParse(val' out ver)))   // either latest or a specific version " is 150.
Long Statement,Kudu.Core.Deployment.Generator,ExternalCommandBuilder,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\ExternalCommandBuilder.cs,GetPostBuildActionScripts,The length of the statement  "                        string scriptFolder = Path.Combine(siteExtensionFolder' extensionName' ver.ToNormalizedString()' PostDeploymentActions); " is 120.
Long Statement,Kudu.Core.Deployment.Generator,ExternalCommandBuilder,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\ExternalCommandBuilder.cs,GetPostBuildActionScripts,The length of the statement  "                            string[] allVersions = FileSystemHelpers.GetDirectories(packageRoot);   // expecting a list of version e.g D:\Program Files (x86)\SiteExtensions\{PackageName}\{version} " is 168.
Long Statement,Kudu.Core.Deployment.Generator,GeneratorSiteBuilder,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\GeneratorSiteBuilder.cs,GenerateScript,The length of the statement  "                    var scriptGenerator = ExternalCommandFactory.BuildExternalCommandExecutable(RepositoryPath' context.OutputPath' buildLogger); " is 125.
Long Statement,Kudu.Core.Deployment.Generator,GeneratorSiteBuilder,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\GeneratorSiteBuilder.cs,GenerateScript,The length of the statement  "                    var scriptGeneratorCommandArguments = String.Format(ScriptGeneratorCommandArgumentsFormat' RepositoryPath' Environment.DeploymentToolsPath' ScriptGeneratorCommandArguments); " is 173.
Long Statement,Kudu.Core.Deployment.Generator,GeneratorSiteBuilder,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\GeneratorSiteBuilder.cs,GenerateScript,The length of the statement  "                    var scriptGeneratorCommand = "\"{0}\" {1}".FormatInvariant(DeploymentScriptGeneratorToolPath' scriptGeneratorCommandArguments); " is 127.
Long Statement,Kudu.Core.Deployment.Generator,GeneratorSiteBuilder,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\GeneratorSiteBuilder.cs,UseCachedDeploymentScript,The length of the statement  "                string[] cacheKeyFileContent = File.ReadAllLines(cacheKeyFilePath).Where(line => !String.IsNullOrEmpty(line)).ToArray(); " is 120.
Long Statement,Kudu.Core.Deployment.Generator,GeneratorSiteBuilder,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\GeneratorSiteBuilder.cs,UseCachedDeploymentScript,The length of the statement  "                // Make sure the cache key file contains exacly 2 lines and the first one is the same as the current running kudu version " is 121.
Long Statement,Kudu.Core.Deployment.Generator,SiteBuilderFactory,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\SiteBuilderFactory.cs,CreateBuilder,The length of the statement  "                return new CustomGeneratorCommandSiteBuilder(_environment' settings' _propertyProvider' repositoryRoot' scriptGeneratorArgs); " is 125.
Long Statement,Kudu.Core.Deployment.Generator,SiteBuilderFactory,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\SiteBuilderFactory.cs,CreateBuilder,The length of the statement  "            VsSolutionProject project = solution.Projects.Where(p => p.IsWap || p.IsWebSite || p.IsAspNetCore || p.IsFunctionApp).FirstOrDefault(); " is 135.
Long Statement,Kudu.Core.Deployment.Generator,SiteBuilderFactory,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\SiteBuilderFactory.cs,ResolveProject,The length of the statement  "            return ResolveProject(repositoryRoot' repositoryRoot' perDeploymentSettings' fileFinder' tryWebSiteProject' searchOption' specificConfiguration: false); " is 152.
Long Statement,Kudu.Core.Deployment.Generator,CachedVsProjectsFileFinder,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\SiteBuilderFactory.cs,ListFiles,The length of the statement  "                if (searchOption == SearchOption.AllDirectories && (_path == null || PathUtilityFactory.Instance.PathsEquals(_path' path))) " is 123.
Long Statement,Kudu.Core.Deployment.Generator,CachedVsProjectsFileFinder,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\SiteBuilderFactory.cs,ListFiles,The length of the statement  "                    return _cachedResults.Where(filePath => lookupList.Any(lookup => filePath.EndsWith(lookup' StringComparison.OrdinalIgnoreCase))); " is 129.
Long Statement,Kudu.Core.Functions,FunctionManager,C:\repos\projectkudu_kudu\Kudu.Core\Functions\FunctionManager.cs,SyncTriggersAsync,The length of the statement  "                await PostDeploymentHelper.SyncFunctionsTriggers(_environment.RequestId' _environment.SiteRestrictedJwt' new PostDeploymentTraceListener(tracer)); " is 146.
Long Statement,Kudu.Core.Functions,FunctionManager,C:\repos\projectkudu_kudu\Kudu.Core\Functions\FunctionManager.cs,CreateOrUpdateAsync,The length of the statement  "                await Task.WhenAll(functionEnvelope.Files.Select(e => FileSystemHelpers.WriteAllTextToFileAsync(Path.Combine(functionDir' e.Key)' e.Value))); " is 141.
Long Statement,Kudu.Core.Functions,FunctionManager,C:\repos\projectkudu_kudu\Kudu.Core\Functions\FunctionManager.cs,GetKeyObjectFromFile,The length of the statement  "                throw new InvalidOperationException("Runtime keys are stored on blob storage. This API doesn't support this configuration."); " is 125.
Long Statement,Kudu.Core.Functions,FunctionManager,C:\repos\projectkudu_kudu\Kudu.Core\Functions\FunctionManager.cs,GetKeyObjectFromFile,The length of the statement  "                        string jsonContent = keyOp.GenerateKeyJson(SecurityUtility.GenerateSecretStringsKeyPair(keyOp.NumberOfKeysInDefaultFormat)' FunctionSiteExtensionVersion' out key); " is 163.
Long Statement,Kudu.Core.Functions,FunctionManager,C:\repos\projectkudu_kudu\Kudu.Core\Functions\FunctionManager.cs,DeterminePrimaryScriptFile,The length of the statement  "                    TraceAndThrowError(new ConfigurationErrorsException("Invalid script file name configuration. The 'scriptFile' property is set to a file that does not exist.")); " is 160.
Long Statement,Kudu.Core.Functions,FunctionManager,C:\repos\projectkudu_kudu\Kudu.Core\Functions\FunctionManager.cs,DeterminePrimaryScriptFile,The length of the statement  "                TraceAndThrowError(new ConfigurationErrorsException("Unable to determine the primary function script. Try renaming your entry point script to 'run' (or 'index' in the case of Node)' " + " is 185.
Long Statement,Kudu.Core.Functions,FunctionManager,C:\repos\projectkudu_kudu\Kudu.Core\Functions\FunctionManager.cs,DeterminePrimaryScriptFile,The length of the statement  "                    "or alternatively you can specify the name of the entry point script explicitly by adding a 'scriptFile' property to your function metadata.")); " is 144.
Long Statement,Kudu.Core.Functions,FunctionManager,C:\repos\projectkudu_kudu\Kudu.Core\Functions\FunctionManager.cs,GetFunctionTestData,The length of the statement  "                    return $"Test_Data is of size {fileSize} bytes' but there's only {packageLimit.BytesLeftInPackage} bytes left in ARM response"; " is 127.
Long Statement,Kudu.Core.Functions,FunctionManager,C:\repos\projectkudu_kudu\Kudu.Core\Functions\FunctionManager.cs,AddCsprojFile,The length of the statement  "    <PackageReference Include=""Microsoft.Azure.WebJobs.Extensions.Http"" Version=""{microsoftAzureWebJobsExtensionsHttpVersion}"" /> " is 129.
Long Statement,Kudu.Core.Functions,FunctionManager,C:\repos\projectkudu_kudu\Kudu.Core\Functions\FunctionManager.cs,AddAppSettingsFile,The length of the statement  "            var localSettings = JsonConvert.SerializeObject(new { IsEncrypted = false' Values = appSettings }' Formatting.Indented); " is 120.
Long Statement,Kudu.Core.Helpers,PermissionHelper,C:\repos\projectkudu_kudu\Kudu.Core\Helpers\PermissionHelper.cs,Chmod,The length of the statement  "            Executable exe = exeFactory.BuildCommandExecutable("/bin/chmod"' folder' deploymentSettingManager.GetCommandIdleTimeout()' logger); " is 131.
Long Statement,Kudu.Core.Helpers,PostDeploymentHelper,C:\repos\projectkudu_kudu\Kudu.Core\Helpers\PostDeploymentHelper.cs,SyncFunctionsTriggers,The length of the statement  "                Trace(TraceEventType.Verbose' string.Format("Skip function trigger and logicapp sync because sku ({0}) is not dynamic (consumption plan)."' WebSiteSku)); " is 153.
Long Statement,Kudu.Core.Helpers,PostDeploymentHelper,C:\repos\projectkudu_kudu\Kudu.Core\Helpers\PostDeploymentHelper.cs,PerformAutoSwap,The length of the statement  "                await PostAsync(string.Format("/operations/autoswap?slot={0}&operationId={1}"' slotSwapName' operationId)' requestId' siteRestrictedJwt); " is 137.
Long Statement,Kudu.Core.Helpers,PostDeploymentHelper,C:\repos\projectkudu_kudu\Kudu.Core\Helpers\PostDeploymentHelper.cs,DeserializeFunctionTrigger,The length of the statement  "                // https://github.com/Azure/azure-webjobs-sdk-script/blob/a9bafba78a3a8092bfd61a8c7093200dae867efb/src/WebJobs.Script/Host/ScriptHost.cs#L1476-L1498 " is 148.
Long Statement,Kudu.Core.Helpers,PostDeploymentHelper,C:\repos\projectkudu_kudu\Kudu.Core\Helpers\PostDeploymentHelper.cs,ExecuteScript,The length of the statement  "                processInfo = new ProcessStartInfo("PowerShell.exe"' string.Format("-ExecutionPolicy RemoteSigned -File \"{0}\""' file)); " is 121.
Long Statement,Kudu.Core.Helpers,PostDeploymentHelper,C:\repos\projectkudu_kudu\Kudu.Core\Helpers\PostDeploymentHelper.cs,ExecuteScript,The length of the statement  "                throw new InvalidOperationException(String.Format("Process {0}({1}) exited with {2} exitcode."' processName' processId' process.ExitCode)); " is 139.
Long Statement,Kudu.Core.Helpers,PostDeploymentHelper,C:\repos\projectkudu_kudu\Kudu.Core\Helpers\PostDeploymentHelper.cs,GetPostBuildActionScripts,The length of the statement  "                postDeploymentPath = System.Environment.ExpandEnvironmentVariables(@"%HOME%\site\deployments\tools\PostDeploymentActions"); " is 123.
Long Statement,Kudu.Core.Helpers,ProjectGuidParser,C:\repos\projectkudu_kudu\Kudu.Core\Helpers\ProjectGuidParser.cs,GetProjectGuidFromWebConfig,The length of the statement  "                        while (lastNode != null && lastNode.NodeType != XmlNodeType.EndElement && lastNode.NodeType != XmlNodeType.Element && lastNode.NodeType != XmlNodeType.XmlDeclaration) " is 166.
Long Statement,Kudu.Core.Helpers,ProjectGuidParser,C:\repos\projectkudu_kudu\Kudu.Core\Helpers\ProjectGuidParser.cs,GetProjectGuidFromWebConfig,The length of the statement  "                                    bool isProjectGuidPrefixPresent = projectGuidValue.Trim().StartsWith(ProjectGuidPrefix' StringComparison.OrdinalIgnoreCase); " is 124.
Long Statement,Kudu.Core.Hooks,WebHooksManager,C:\repos\projectkudu_kudu\Kudu.Core\Hooks\WebHooksManager.cs,AddWebHook,The length of the statement  "                    WebHook existingWebHook = webHooks.FirstOrDefault(h => String.Equals(h.HookAddress' webHook.HookAddress' StringComparison.OrdinalIgnoreCase)); " is 142.
Long Statement,Kudu.Core.Hooks,WebHooksManager,C:\repos\projectkudu_kudu\Kudu.Core\Hooks\WebHooksManager.cs,AddWebHook,The length of the statement  "                        createdWebHook = new WebHook(webHook.HookEventType' webHook.HookAddress' id: DateTime.UtcNow.Ticks.ToString()' insecureSsl: webHook.InsecureSsl); " is 145.
Long Statement,Kudu.Core.Hooks,WebHooksManager,C:\repos\projectkudu_kudu\Kudu.Core\Hooks\WebHooksManager.cs,PublishToHookAsync,The length of the statement  "                        _tracer.Trace("Publish {0}#{1} to address - {2}' json - {3}' insecure - {4}"' webHook.HookEventType' webHook.Id' webHook.HookAddress' jsonString' webHook.InsecureSsl); " is 167.
Long Statement,Kudu.Core.Hooks,WebHooksManager,C:\repos\projectkudu_kudu\Kudu.Core\Hooks\WebHooksManager.cs,PublishToHookAsync,The length of the statement  "                            _tracer.Trace("Publish {0}#{1} to address - {2}' response - {3}"' webHook.HookEventType' webHook.Id' webHook.HookAddress' response.StatusCode); " is 143.
Long Statement,Kudu.Core.Hooks,WebHooksManager,C:\repos\projectkudu_kudu\Kudu.Core\Hooks\WebHooksManager.cs,PublishToHookAsync,The length of the statement  "                        _tracer.Trace("Error while publishing hook - {0}#{1}' to address - {1}"' webHook.HookEventType' webHook.Id' webHook.HookAddress); " is 129.
Long Statement,Kudu.Core.Hooks,WebHooksManager,C:\repos\projectkudu_kudu\Kudu.Core\Hooks\WebHooksManager.cs,PublishToHooksAsync,The length of the statement  "                foreach (var webHook in webHooks.Where(h => String.Equals(h.HookEventType' hookType' StringComparison.OrdinalIgnoreCase))) " is 122.
Long Statement,Kudu.Core.Hooks,WebHooksManager,C:\repos\projectkudu_kudu\Kudu.Core\Hooks\WebHooksManager.cs,ReadWebHooksFromFile,The length of the statement  "                    return JsonConvert.DeserializeObject<IEnumerable<WebHook>>(fileContent' JsonSerializerSettings) ?? Enumerable.Empty<WebHook>(); " is 127.
Long Statement,Kudu.Core.Infrastructure,NaiveFileSystemWatcher,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\NaiveFileSystemWatcher.cs,Poll,The length of the statement  "                        .Where(p => logFileExtensions.Any(ext => ext.Equals(System.IO.Path.GetExtension(p)' StringComparison.OrdinalIgnoreCase))); " is 122.
Long Statement,Kudu.Core.Infrastructure,PathWindowsUtility,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\PathUtils\PathWindowsUtility.cs,ResolveVsTestPath,The length of the statement  "            return Path.Combine(programFiles' "Microsoft Visual Studio 11.0"' "Common7"' "IDE"' "CommonExtensions"' "Microsoft"' "TestWindow"' "vstest.console.exe"); " is 153.
Long Statement,Kudu.Core.Infrastructure,PathWindowsUtility,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\PathUtils\PathWindowsUtility.cs,ResolveGitInstallDirPath,The length of the statement  "            programFiles = SystemEnvironment.GetEnvironmentVariable(ProgramFiles64bitKey) ?? SystemEnvironment.GetFolderPath(SystemEnvironment.SpecialFolder.ProgramFiles); " is 159.
Long Statement,Kudu.Core.Infrastructure,PathWindowsUtility,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\PathUtils\PathWindowsUtility.cs,ResolveNpmVersion,The length of the statement  "                // This case is only to work around node version 4.1.2 with npm 2.x failing to publish ASP.NET 5 apps due to long path issues. " is 126.
Long Statement,Kudu.Core.Infrastructure,PathWindowsUtility,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\PathUtils\PathWindowsUtility.cs,ResolveNpmVersion,The length of the statement  "                return FileSystemHelpers.FileExists(npmTxtPath) ? FileSystemHelpers.ReadAllTextFromFile(npmTxtPath).Trim() : DefaultNpmVersion; " is 127.
Long Statement,Kudu.Core.Infrastructure,PathWindowsUtility,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\PathUtils\PathWindowsUtility.cs,ResolveRelativePathToProgramFiles,The length of the statement  "                programFiles = SystemEnvironment.GetEnvironmentVariable(ProgramFiles64bitKey) ?? SystemEnvironment.GetFolderPath(SystemEnvironment.SpecialFolder.ProgramFiles); " is 159.
Long Statement,Kudu.Core.Infrastructure,ZipArchiveExtensions,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\ZipArchiveExtensions.cs,Extract,The length of the statement  "                if (entry.Length == 0 && (path.EndsWith("/"' StringComparison.Ordinal) || path.EndsWith("\\"' StringComparison.Ordinal))) " is 121.
Long Statement,Kudu.Core.Infrastructure,ProcessExtensions,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\ProcessExtensions.cs,GetTotalProcessorTime,The length of the statement  "                var processes = process.GetChildren(tracer).Concat(new[] { process }).Select(p => new { Name = p.ProcessName' Id = p.Id' Cpu = p.TotalProcessorTime }); " is 151.
Long Statement,Kudu.Core.Infrastructure,ProcessExtensions,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\ProcessExtensions.cs,GetTotalProcessorTime,The length of the statement  "                var info = String.Join("+"' processes.Select(p => String.Format("{0}({1}'{2:0.000}s)"' p.Name' p.Id' p.Cpu.TotalSeconds)).ToArray()); " is 133.
Long Statement,Kudu.Core.Infrastructure,ProcessExtensions,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\ProcessExtensions.cs,GetParentProcess,The length of the statement  "                int status = ProcessNativeMethods.NtQueryInformationProcess(processHandle' 0' ref pbi' Marshal.SizeOf(pbi)' out returnLength); " is 126.
Long Statement,Kudu.Core.Infrastructure,ProcessExtensions,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\ProcessExtensions.cs,MiniDump,The length of the statement  "                if (!MiniDumpNativeMethods.MiniDumpWriteDump(process.Handle' (uint)process.Id' fs.SafeFileHandle' dumpType' IntPtr.Zero' IntPtr.Zero' IntPtr.Zero)) " is 147.
Long Statement,Kudu.Core.Infrastructure,ProcessExtensions,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\ProcessExtensions.cs,Start,The length of the statement  "                tasks.Add(CopyStreamAsync(input' process.StandardInput.BaseStream' idleManager' cancellationTokenSource.Token' closeAfterCopy: true)); " is 134.
Long Statement,Kudu.Core.Infrastructure,ProcessExtensions,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\ProcessExtensions.cs,GetCommandLineCore,The length of the statement  "                if (!ProcessNativeMethods.ReadProcessMemory(hProcess' ptr + unicodeStringOffset' ref unicodeString' new IntPtr(Marshal.SizeOf(unicodeString))' IntPtr.Zero)) " is 156.
Long Statement,Kudu.Core.Infrastructure,ProcessExtensions,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\ProcessExtensions.cs,GetCommandLineCore,The length of the statement  "                if (!ProcessNativeMethods.ReadProcessMemory(hProcess' ptr + unicodeStringOffset' ref unicodeString' new IntPtr(Marshal.SizeOf(unicodeString))' IntPtr.Zero)) " is 156.
Long Statement,Kudu.Core.Infrastructure,ProcessExtensions,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\ProcessExtensions.cs,GetCommandLineCore,The length of the statement  "            if (!ProcessNativeMethods.ReadProcessMemory(hProcess' commandLineBuffer' bytes' new IntPtr(commandLineLength)' IntPtr.Zero)) " is 124.
Long Statement,Kudu.Core.Infrastructure,LockFile,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\LockFile.cs,InitializeAsyncLocks,The length of the statement  "            // Set up lock file watcher. Note that depending on how the file is accessed the file watcher may generate multiple events. " is 123.
Long Statement,Kudu.Core.Infrastructure,LockFile,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\LockFile.cs,Lock,The length of the statement  "                    //      There is one drawback' previously for write action' even acquire lock will fail with UnauthorizedAccessException' " is 121.
Long Statement,Kudu.Core.Infrastructure,LockFile,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\LockFile.cs,Lock,The length of the statement  "                    //      there will be retry within given timeout. so if exception is temporary' previous`s implementation will still go thru. " is 125.
Long Statement,Kudu.Core.Infrastructure,LockFile,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\LockFile.cs,ReadLockInfo,The length of the statement  "                return JsonConvert.DeserializeObject<OperationLockInfo>(FileSystemHelpers.ReadAllTextFromFile(_path)) ?? new OperationLockInfo { OperationName = "unknown" }; " is 157.
Long Statement,Kudu.Core.Infrastructure,LockFile,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\LockFile.cs,Release,The length of the statement  "            // Normally' this should never be null here' but currently some LiveScmEditorController code calls Release() incorrectly " is 120.
Long Statement,Kudu.Core.Infrastructure,LockFile,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\LockFile.cs,DeleteFileSafe,The length of the statement  "            // When running on Mono with SMB share' delete action would cause wierd behavior on later OpenWrite action if a file has already been opened by another process " is 159.
Long Statement,Kudu.Core.Infrastructure,VsHelper,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\VsHelper.cs,IncludesReferencePackage,The length of the statement  "                           where packageReferenceName != null && String.Equals(packageReferenceName.Value' packageName' StringComparison.OrdinalIgnoreCase) " is 128.
Long Statement,Kudu.Core.Infrastructure,ReflectionUtility,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\ReflectionUtility.cs,GetInternalMethod,The length of the statement  "            return typeName.GetMethod(methodName' BindingFlags.NonPublic | BindingFlags.Instance' binder: null' types: types' modifiers: null); " is 131.
Long Statement,Kudu.Core.Infrastructure,Executable,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\Executable.cs,ExecuteInternal,The length of the statement  "                exitCode = Task.Run(() => ExecuteAsync(tracer' cmdArguments' outputStream' errorStream' idleManager: idleManager)).Result; " is 122.
Long Statement,Kudu.Core.Infrastructure,VsSolution,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\VsSolution.cs,GetSolutionParserInstance,The length of the statement  "            var ctor = _solutionParser.GetConstructor(BindingFlags.Instance | BindingFlags.NonPublic' binder: null' types: Type.EmptyTypes' modifiers: null); " is 145.
Long Statement,Kudu.Core.Infrastructure,VsSolutionProject,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\VsSolutionProject.cs,EnsureProperties,The length of the statement  "                FieldInfo aspNetPhysicalPathField = configurationObject.GetType().GetField("aspNetPhysicalPath"' BindingFlags.NonPublic | BindingFlags.Instance); " is 145.
Long Statement,Kudu.Core.Jobs,ContinuousJobRunner,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\ContinuousJobRunner.cs,StartJob,The length of the statement  "                                TimeSpan webJobsRestartTime = liveStopwatch.Elapsed < WarmupTimeSpan ? Settings.GetWebJobsRestartTime() : TimeSpan.Zero; " is 120.
Long Statement,Kudu.Core.Jobs,ContinuousJobRunner,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\ContinuousJobRunner.cs,StartJob,The length of the statement  "                                _continuousJobLogger.LogInformation("Process went down' waiting for {0} seconds".FormatInvariant(webJobsRestartTime.TotalSeconds)); " is 131.
Long Statement,Kudu.Core.Jobs,JobsFileWatcher,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\JobsFileWatcher.cs,StartWatcher,The length of the statement  "                    _fileSystemWatcher = _filter != null ? new FileSystemWatcher(_watchedDirectoryPath' _filter) : new FileSystemWatcher(_watchedDirectoryPath); " is 140.
Long Statement,Kudu.Core.Jobs,BaseJobRunner,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\BaseJobRunner.cs,JobDirectoryHasChanged,The length of the statement  "                        logger.LogInformation(string.Format("Job directory change detected: Job file '{0}' timestamp differs between source and working directories."' entry.Key)); " is 155.
Long Statement,Kudu.Core.Jobs,BaseJobRunner,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\BaseJobRunner.cs,JobDirectoryHasChanged,The length of the statement  "                    logger.LogInformation(string.Format("Job directory change detected: Job file '{0}' exists in source directory but not in working directory."' entry.Key)); " is 154.
Long Statement,Kudu.Core.Jobs,BaseJobRunner,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\BaseJobRunner.cs,GetJobDirectoryFileMap,The length of the statement  "            return files.ToDictionary(p => p.FullName.Substring(sourceDirectoryPathLength)' q => q' StringComparer.OrdinalIgnoreCase); " is 122.
Long Statement,Kudu.Core.Jobs,BaseJobRunner,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\BaseJobRunner.cs,CacheJobBinaries,The length of the statement  "                    logger.LogWarning("Failed to diff WebJob directories for changes. Continuing to copy WebJob binaries (this will not affect the WebJob run)\n" + ex); " is 148.
Long Statement,Kudu.Core.Jobs,BaseJobRunner,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\BaseJobRunner.cs,InitializeJobInstance,The length of the statement  "                    "The job runner can only run jobs with the same name it was configured' configured - {0}' trying to run - {1}".FormatInvariant( " is 127.
Long Statement,Kudu.Core.Jobs,BaseJobRunner,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\BaseJobRunner.cs,RunJobInstance,The length of the statement  "            logger.LogInformation("Run script '{0}' with script host - '{1}'".FormatCurrentCulture(scriptFileName' job.ScriptHost.GetType().Name)); " is 135.
Long Statement,Kudu.Core.Jobs,BaseJobRunner,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\BaseJobRunner.cs,RunJobInstance,The length of the statement  "            using (var jobStartedReporter = new JobStartedReporter(_analytics' job' trigger' Settings.GetWebSiteSku()' JobDataPath)) " is 120.
Long Statement,Kudu.Core.Jobs,BaseJobRunner,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\BaseJobRunner.cs,RunJobInstance,The length of the statement  "                    var exe = _externalCommandFactory.BuildCommandExecutable(job.ScriptHost.HostPath' workingDirectoryForScript' IdleTimeout' NullLogger.Instance); " is 143.
Long Statement,Kudu.Core.Jobs,BaseJobRunner,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\BaseJobRunner.cs,RunJobInstance,The length of the statement  "                        exe.EnvironmentVariables[WellKnownEnvironmentVariables.WebJobsShutdownNotificationFile] = _shutdownNotificationFilePath; " is 120.
Long Statement,Kudu.Core.Jobs,BaseJobRunner,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\BaseJobRunner.cs,UpdateAppConfigs,The length of the statement  "            IEnumerable<string> configFilePaths = FileSystemHelpers.ListFiles(tempJobInstancePath' SearchOption.AllDirectories' AppConfigFilesLookupList); " is 142.
Long Statement,Kudu.Core.Jobs,JobLogger,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\JobLogger.cs,GetFormattedMessage,The length of the statement  "                ? "[{0} > {1}: SYS {2'-4}] {3}\r\n".FormatInvariant(DateTime.UtcNow' InstanceId' level.ToString().ToUpperInvariant()' message) " is 126.
Long Statement,Kudu.Core.Jobs,JobLogger,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\JobLogger.cs,GetFormattedMessage,The length of the statement  "                : "[{0} > {1}: {2'-4}] {3}\r\n".FormatInvariant(DateTime.UtcNow' InstanceId' level.ToString().ToUpperInvariant()' message); " is 123.
Long Statement,Kudu.Core.Jobs,Schedule,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\Schedule.cs,BuildSchedule,The length of the statement  "                var crontabSchedule = CrontabSchedule.Parse(cronExpression' new CrontabSchedule.ParseOptions() {IncludingSeconds = true}); " is 122.
Long Statement,Kudu.Core.Jobs,Schedule,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\Schedule.cs,GetNextInterval,The length of the statement  "                _logger.LogWarning("Missed {0} schedules' most recent at {1}".FormatCurrentCulture(nextOccurrencesCount' nextOccurrences.Last())); " is 130.
Long Statement,Kudu.Core.Jobs,TriggeredJobRunLogger,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\TriggeredJobRunLogger.cs,LogNewRun,The length of the statement  "            var logger = new TriggeredJobRunLogger(triggeredJob.Name' id' environment' traceFactory' settings.LogTriggeredJobsToAppLogs()); " is 127.
Long Statement,Kudu.Core.Jobs,TriggeredJobRunLogger,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\TriggeredJobRunLogger.cs,ReportEndRun,The length of the statement  "            var triggeredJobStatus = ReadJobStatusFromFile<TriggeredJobStatus>(Analytics' GetStatusFilePath()) ?? new TriggeredJobStatus(); " is 127.
Long Statement,Kudu.Core.Jobs,TriggeredJobRunLogger,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\TriggeredJobRunLogger.cs,ReportStatus,The length of the statement  "            var triggeredJobStatus = ReadJobStatusFromFile<TriggeredJobStatus>(Analytics' GetStatusFilePath()) ?? new TriggeredJobStatus(); " is 127.
Long Statement,Kudu.Core.Jobs,TriggeredJobRunLogger,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\TriggeredJobRunLogger.cs,LogError,The length of the statement  "            var triggeredJobStatus = ReadJobStatusFromFile<TriggeredJobStatus>(Analytics' GetStatusFilePath()) ?? new TriggeredJobStatus(); " is 127.
Long Statement,Kudu.Core.Jobs,TriggeredJobRunner,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\TriggeredJobRunner.cs,StartJobRun,The length of the statement  "            TriggeredJobRunLogger logger = TriggeredJobRunLogger.LogNewRun(triggeredJob' trigger' Environment' TraceFactory' Settings); " is 123.
Long Statement,Kudu.Core.Jobs,JobsManagerBase<TJob>,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\JobsManagerBase.cs,CreateOrReplaceJob,The length of the statement  "            jobDirectory = GetJobDirectory(jobName); // regenerating the DirectoryInfoBase instance to populate the Exists method with true. " is 128.
Long Statement,Kudu.Core.Jobs,JobsManagerBase<TJob>,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\JobsManagerBase.cs,FindCommandToRun,The length of the statement  "                    var supportedFiles = files.Where(f => String.Equals(f.Extension' supportedExtension' StringComparison.OrdinalIgnoreCase)); " is 122.
Long Statement,Kudu.Core.Jobs,JobsManagerBase<TJob>,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\JobsManagerBase.cs,FindCommandToRun,The length of the statement  "                            supportedFiles.FirstOrDefault(f => String.Equals(f.Name' DefaultScriptFileName + supportedExtension' StringComparison.OrdinalIgnoreCase)); " is 138.
Long Statement,Kudu.Core.Jobs,TriggeredJobsManager,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\TriggeredJobsManager.cs,UpdateJob,The length of the statement  "            string triggeredJobSchedulerLogFilePath = Path.Combine(JobsDataPath' job.Name' TriggeredJobSchedulerLogger.LogFileName); " is 120.
Long Statement,Kudu.Core.Jobs,TriggeredJobsManager,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\TriggeredJobsManager.cs,BuildJobRun,The length of the statement  "                    LockFile triggeredJobRunLockFile = TriggeredJobRunner.BuildTriggeredJobRunnerLockFile(triggeredJobDataPath' TraceFactory); " is 122.
Long Statement,Kudu.Core.Settings,JsonSettings,C:\repos\projectkudu_kudu\Kudu.Core\Settings\JsonSettings.cs,Save,The length of the statement  "                using (var writer = new JsonTextWriter(new StreamWriter(FileSystemHelpers.OpenFile(_path' FileMode.Create' FileAccess.Write' FileShare.Read)))) " is 143.
Long Statement,Kudu.Core.Settings,JsonSettings,C:\repos\projectkudu_kudu\Kudu.Core\Settings\JsonSettings.cs,Read,The length of the statement  "                using (var reader = new JsonTextReader(new StreamReader(FileSystemHelpers.OpenFile(_path' FileMode.Open' FileAccess.Read' FileShare.ReadWrite)))) " is 145.
Long Statement,Kudu.Core.SiteExtensions,FeedExtensions,C:\repos\projectkudu_kudu\Kudu.Core\SiteExtensions\FeedExtensions.cs,GetLatestPackageByIdFromMetaRes,The length of the statement  "            IEnumerable<UIPackageMetadata> packages = await metadataResource.GetMetadata(packageId' includePrerelease' includeUnlisted' token: CancellationToken.None); " is 155.
Long Statement,Kudu.Core.SiteExtensions,FeedExtensions,C:\repos\projectkudu_kudu\Kudu.Core\SiteExtensions\FeedExtensions.cs,GetLatestPackageByIdFromMetaRes,The length of the statement  "                latestPackage = await GetLatestPackageByIdFromMetaRes(metadataResource' packageId' includePrerelease' includeUnlisted: true' explicitTag: explicitTag); " is 151.
Long Statement,Kudu.Core.SiteExtensions,FeedExtensions,C:\repos\projectkudu_kudu\Kudu.Core\SiteExtensions\FeedExtensions.cs,DownloadPackageToFolder,The length of the statement  "                    IEnumerable<ZipEntry> contentEntries = zipFile.Entries.Where(e => e.FileName.StartsWith(@"content/"' StringComparison.InvariantCultureIgnoreCase)); " is 147.
Long Statement,Kudu.Core.SiteExtensions,FeedExtensions,C:\repos\projectkudu_kudu\Kudu.Core\SiteExtensions\FeedExtensions.cs,DownloadPackageToFolder,The length of the statement  "                            // let the thread go with itself' so that once file finishes writing' doesn't need to request thread context from main thread " is 125.
Long Statement,Kudu.Core.SiteExtensions,FeedExtensions,C:\repos\projectkudu_kudu\Kudu.Core\SiteExtensions\FeedExtensions.cs,UpdateLocalPackage,The length of the statement  "                    throw new FileNotFoundException(string.Format(CultureInfo.InvariantCulture' "Package {0} not found from local repo."' identity.Id)); " is 132.
Long Statement,Kudu.Core.SiteExtensions,FeedExtensions,C:\repos\projectkudu_kudu\Kudu.Core\SiteExtensions\FeedExtensions.cs,UpdateLocalPackage,The length of the statement  "                    IEnumerable<ZipEntry> oldContentEntries = oldPackageZip.Entries.Where(e => e.FileName.StartsWith(@"content/"' StringComparison.InvariantCultureIgnoreCase)); " is 156.
Long Statement,Kudu.Core.SiteExtensions,FeedExtensions,C:\repos\projectkudu_kudu\Kudu.Core\SiteExtensions\FeedExtensions.cs,UpdateLocalPackage,The length of the statement  "                    IEnumerable<ZipEntry> newContentEntries = newPackageZip.Entries.Where(e => e.FileName.StartsWith(@"content/"' StringComparison.InvariantCultureIgnoreCase)); " is 156.
Long Statement,Kudu.Core.SiteExtensions,FeedExtensions,C:\repos\projectkudu_kudu\Kudu.Core\SiteExtensions\FeedExtensions.cs,UpdateLocalPackage,The length of the statement  "                                // let the thread go with itself' so that once file finishes writing' doesn't need to request thread context from main thread " is 125.
Long Statement,Kudu.Core.SiteExtensions,FeedExtensions,C:\repos\projectkudu_kudu\Kudu.Core\SiteExtensions\FeedExtensions.cs,UpdateLocalPackage,The length of the statement  "                            // in case the two zip file was created from different tool. some tool will include folder as seperate entry' some don`t. " is 121.
Long Statement,Kudu.Core.SiteExtensions,FeedExtensions,C:\repos\projectkudu_kudu\Kudu.Core\SiteExtensions\FeedExtensions.cs,UpdateLocalPackage,The length of the statement  "                        using (tracer.Step("New package has difference version {0} from old package {1}. Remove old nupkg file."' identity.Version' localPackage.Identity.Version)) " is 155.
Long Statement,Kudu.Core.SiteExtensions,FeedExtensions,C:\repos\projectkudu_kudu\Kudu.Core\SiteExtensions\FeedExtensions.cs,UpdateLocalPackage,The length of the statement  "                                string.Format(CultureInfo.InvariantCulture' "{0}.{1}.nupkg"' localPackage.Identity.Id' localPackage.Identity.Version.ToNormalizedString())); " is 140.
Long Statement,Kudu.Core.SiteExtensions,FeedExtensions,C:\repos\projectkudu_kudu\Kudu.Core\SiteExtensions\FeedExtensions.cs,GetPackageStream,The length of the statement  "                    throw new FileNotFoundException(string.Format(CultureInfo.InvariantCulture' "Package {0} - {1} not found when try to download."' identity.Id' identity.Version.ToNormalizedString())); " is 182.
Long Statement,Kudu.Core.SiteExtensions,SemanticVersion,C:\repos\projectkudu_kudu\Kudu.Core\SiteExtensions\SemanticVersion.cs,TryParseInternal,The length of the statement  "            semVer = new SemanticVersion(NormalizeVersionValue(versionValue)' match.Groups["Release"].Value.TrimStart('-')' version.Replace(" "' "")); " is 138.
Long Statement,Kudu.Core.SiteExtensions,SiteExtensionStatus,C:\repos\projectkudu_kudu\Kudu.Core\SiteExtensions\SiteExtensionStatus.cs,IsTerminalStatus,The length of the statement  "            return string.Equals(Constants.SiteExtensionProvisioningStateSucceeded' ProvisioningState' StringComparison.OrdinalIgnoreCase) " is 126.
Long Statement,Kudu.Core.SiteExtensions,SiteExtensionStatus,C:\repos\projectkudu_kudu\Kudu.Core\SiteExtensions\SiteExtensionStatus.cs,IsTerminalStatus,The length of the statement  "                || string.Equals(Constants.SiteExtensionProvisioningStateCanceled' ProvisioningState' StringComparison.OrdinalIgnoreCase); " is 122.
Long Statement,Kudu.Core.SiteExtensions,SiteExtensionStatus,C:\repos\projectkudu_kudu\Kudu.Core\SiteExtensions\SiteExtensionStatus.cs,IsSiteExtensionRequireRestart,The length of the statement  "                    // if it is intalled to webroot' restart site ONLY if there is an applicationHost.xdt/scmApplicationHost.xdt file under site extension folder " is 141.
Long Statement,Kudu.Core.SiteExtensions,SiteExtensionManager,C:\repos\projectkudu_kudu\Kudu.Core\SiteExtensions\SiteExtensionManager.cs,GetRemoteExtensions,The length of the statement  "                    var foundUIPackages = await remoteRepo.Search(string.IsNullOrWhiteSpace(filter) ? string.Empty : filter' filterOptions: filterOptions); " is 135.
Long Statement,Kudu.Core.SiteExtensions,SiteExtensionManager,C:\repos\projectkudu_kudu\Kudu.Core\SiteExtensions\SiteExtensionManager.cs,GetRemoteExtensions,The length of the statement  "            using (tracer.Step("Convert search result to SiteExtensionInfos with max concurrent requests: {0}"' System.Environment.ProcessorCount)) " is 135.
Long Statement,Kudu.Core.SiteExtensions,SiteExtensionManager,C:\repos\projectkudu_kudu\Kudu.Core\SiteExtensions\SiteExtensionManager.cs,InstallExtensionCore,The length of the statement  "                    var installationLock = SiteExtensionInstallationLock.CreateLock(_environment.SiteExtensionSettingsPath' id' enableAsync: true); " is 127.
Long Statement,Kudu.Core.SiteExtensions,SiteExtensionManager,C:\repos\projectkudu_kudu\Kudu.Core\SiteExtensions\SiteExtensionManager.cs,TryInstallExtension,The length of the statement  "                // Check if site extension already installed (id' version' feedUrl)' if already install with correct installation arguments then return right away " is 146.
Long Statement,Kudu.Core.SiteExtensions,SiteExtensionManager,C:\repos\projectkudu_kudu\Kudu.Core\SiteExtensions\SiteExtensionManager.cs,TryInstallExtension,The length of the statement  "                    tracer.Trace("Package {0} with version {1} from {2} with installation arguments '{3}' already installed."' id' version' feedUrl' installationArgs); " is 147.
Long Statement,Kudu.Core.SiteExtensions,SiteExtensionManager,C:\repos\projectkudu_kudu\Kudu.Core\SiteExtensions\SiteExtensionManager.cs,TryInstallExtension,The length of the statement  "                        // WebRoot is a special type that install package to wwwroot' when perform update we need to update new content to wwwroot even if type is not specified " is 152.
Long Statement,Kudu.Core.SiteExtensions,SiteExtensionManager,C:\repos\projectkudu_kudu\Kudu.Core\SiteExtensions\SiteExtensionManager.cs,TryInstallExtension,The length of the statement  "            else if (!string.Equals(Constants.SiteExtensionProvisioningStateFailed' info.ProvisioningState' StringComparison.OrdinalIgnoreCase)) " is 132.
Long Statement,Kudu.Core.SiteExtensions,SiteExtensionManager,C:\repos\projectkudu_kudu\Kudu.Core\SiteExtensions\SiteExtensionManager.cs,EnsureInstallationEnviroment,The length of the statement  "            bool isInstalledPackageBroken = FileSystemHelpers.DirectoryExists(installationDir) && FileSystemHelpers.GetFiles(installationDir' "*.nupkg").Length == 0; " is 153.
Long Statement,Kudu.Core.SiteExtensions,SiteExtensionManager,C:\repos\projectkudu_kudu\Kudu.Core\SiteExtensions\SiteExtensionManager.cs,IsSiteExtensionInstalled,The length of the statement  "            // Shortcircuit check: if the installation arguments do not match' then we should return false here to avoid other checks which are now unnecessary. " is 148.
Long Statement,Kudu.Core.SiteExtensions,SiteExtensionManager,C:\repos\projectkudu_kudu\Kudu.Core\SiteExtensions\SiteExtensionManager.cs,GetNuGetPackageFile,The length of the statement  "            return Path.Combine(GetInstallationDirectory(id)' String.Format(CultureInfo.InvariantCulture' "{0}.{1}.nupkg"' id' version)); " is 125.
Long Statement,Kudu.Core.SiteExtensions,SiteExtensionManager,C:\repos\projectkudu_kudu\Kudu.Core\SiteExtensions\SiteExtensionManager.cs,CreateDefaultScmXdtFile,The length of the statement  "            Stream stream = typeof(SiteExtensionManager).Assembly.GetManifestResourceStream("Kudu.Core.SiteExtensions." + Constants.ScmApplicationHostXdtFileName + ".xml"); " is 160.
Long Statement,Kudu.Core.SiteExtensions,SiteExtensionManager,C:\repos\projectkudu_kudu\Kudu.Core\SiteExtensions\SiteExtensionManager.cs,GetUrlFromApplicationHost,The length of the statement  "            string xdtFilePath = FileSystemHelpers.FileExists(scmXdtFile) ? scmXdtFile : FileSystemHelpers.FileExists(xdtFile) ? xdtFile : null; " is 132.
Long Statement,Kudu.Core.SiteExtensions,SiteExtensionManager,C:\repos\projectkudu_kudu\Kudu.Core\SiteExtensions\SiteExtensionManager.cs,ConvertNuGetPackagesToSiteExtensionInfos,The length of the statement  "            // in case there are a large amount of package come back from search result' we limited number of concurrent requests to be the number of CPU cores " is 147.
Long Statement,Kudu.Core.SourceControl.Git,LibGit2SharpRepository,C:\repos\projectkudu_kudu\Kudu.Core\SourceControl\Git\LibGit2SharpRepository.cs,ListFiles,The length of the statement  "                throw new NotSupportedException("Only paths relative to the repository root path are supported' path provided: '{0}' is not a child folder of '{1}'".FormatCurrentCulture(path' RepositoryPath)); " is 193.
Long Statement,Kudu.Core.SourceControl.Git,LibGit2SharpRepository,C:\repos\projectkudu_kudu\Kudu.Core\SourceControl\Git\LibGit2SharpRepository.cs,ListFiles,The length of the statement  "                var files = repo.Diff.Compare<TreeChanges>(null' DiffTargets.Index' lookupList' compareOptions: new CompareOptions() { IncludeUnmodified = true' Similarity = SimilarityOptions.None }) " is 183.
Long Statement,Kudu.Core.SourceControl.Git,GitExeRepository,C:\repos\projectkudu_kudu\Kudu.Core\SourceControl\Git\GitExeRepository.cs,UpdateSubmodules,The length of the statement  "                ExecuteGenericGitCommandWithRetryAndCatchingWellKnownGitErrors(() => Execute("submodule update --init --recursive --force")); " is 125.
Long Statement,Kudu.Core.SourceControl.Git,GitExeRepository,C:\repos\projectkudu_kudu\Kudu.Core\SourceControl\Git\GitExeRepository.cs,ClearLock,The length of the statement  "                // perform a seperated EnumerateFiles' otherwise will need to do extra string compare for every files udner .git folder and subfolder " is 133.
Long Statement,Kudu.Core.SourceControl.Git,GitExeRepository,C:\repos\projectkudu_kudu\Kudu.Core\SourceControl\Git\GitExeRepository.cs,ListFiles,The length of the statement  "                throw new NotSupportedException("Only paths relative to the repository root path are supported' path provided: '{0}' is not a child folder of '{1}'".FormatCurrentCulture(path' RepositoryPath)); " is 193.
Long Statement,Kudu.Core.SourceControl.Git,GitExeRepository,C:\repos\projectkudu_kudu\Kudu.Core\SourceControl\Git\GitExeRepository.cs,ListFiles,The length of the statement  "                // TODO: Consider an implementation where the gitExe returns the list of files as a list (not storing the files list output as a blob) " is 134.
Long Statement,Kudu.Core.SourceControl.Git,GitExeRepository,C:\repos\projectkudu_kudu\Kudu.Core\SourceControl\Git\GitExeRepository.cs,ListFiles,The length of the statement  "                            lines = lines.Where(line => !line.Substring(path.Length).TrimStart(Path.DirectorySeparatorChar).Contains(Path.DirectorySeparatorChar)); " is 135.
Long Statement,Kudu.Core.SourceControl.Git,GitExeRepository,C:\repos\projectkudu_kudu\Kudu.Core\SourceControl\Git\GitExeRepository.cs,ParseCommit,The length of the statement  "            return new ChangeSet(id' author' email' message' DateTimeOffset.ParseExact(date' "ddd MMM d HH:mm:ss yyyy zzz"' CultureInfo.InvariantCulture)); " is 143.
Long Statement,Kudu.Core.SourceControl.Git,GitExeServer,C:\repos\projectkudu_kudu\Kudu.Core\SourceControl\Git\GitExeServer.cs,Advertise,The length of the statement  "            _gitExe.Execute(tracer' null' output' @"{0} --stateless-rpc --advertise-refs ""{1}"""' serviceName' _gitExe.WorkingDirectory); " is 126.
Long Statement,Kudu.Core.Tracing,KuduEventSource,C:\repos\projectkudu_kudu\Kudu.Core\Tracing\KuduEventSource.cs,ProjectDeployed,The length of the statement  "                WriteEvent(65501' siteName' projectType' result' error' deploymentDurationInMilliseconds' siteMode' scmType' vsProjectId); " is 122.
Long Statement,Kudu.Core.Tracing,SiteExtensionLogManager,C:\repos\projectkudu_kudu\Kudu.Core\Tracing\SiteExtensionLogManager.cs,Log,The length of the statement  "                        using (var streamWriter = new StreamWriter(FileSystemHelpers.OpenFile(_currentPath' FileMode.Append' FileAccess.Write' FileShare.Read))) " is 136.
Long Statement,Kudu.Core.Tracing,SiteExtensionLogManager,C:\repos\projectkudu_kudu\Kudu.Core\Tracing\SiteExtensionLogManager.cs,HandleCleanup,The length of the statement  "            FileInfoBase currentFileInfo = extentionLogFiles.FirstOrDefault(file => String.Equals(file.Name' _currentFileName' StringComparison.OrdinalIgnoreCase)); " is 152.
Long Statement,Kudu.Core.Tracing,LogFileHelper,C:\repos\projectkudu_kudu\Kudu.Core\Tracing\TextLogger.cs,WriteLine,The length of the statement  "                using (StreamWriter writer = new StreamWriter(FileSystemHelpers.OpenFile(_logFile' FileMode.Append' FileAccess.Write' FileShare.ReadWrite))) " is 140.
Long Statement,Kudu.Core.Tracing,LogFileHelper,C:\repos\projectkudu_kudu\Kudu.Core\Tracing\TextLogger.cs,WriteLine,The length of the statement  "                using (StreamWriter writer = new StreamWriter(FileSystemHelpers.OpenFile(_logFile' FileMode.Append' FileAccess.Write' FileShare.ReadWrite))) " is 140.
Long Statement,Kudu.Core.Tracing,TraceExtensions,C:\repos\projectkudu_kudu\Kudu.Core\Tracing\TraceExtensions.cs,ShouldTrace,The length of the statement  "            return tracer.TraceLevel >= TraceLevel.Verbose || tracer.TraceLevel >= GetTraceLevel(attributes) || attributes.ContainsKey(AlwaysTrace); " is 136.
Long Statement,Kudu.Core,Environment,C:\repos\projectkudu_kudu\Kudu.Core\Environment.cs,GetFreeSpaceHtml,The length of the statement  "                return String.Format(CultureInfo.InvariantCulture' "<span style='color:{0}'>{1:#'##0} MB total; {2:#'##0} MB free</span>"' color' totalBytes / (1024 * 1024)' freeBytes / (1024 * 1024)); " is 185.
Long Statement,Kudu.Core.SourceControl,RepositoryFactory,C:\repos\projectkudu_kudu\Kudu.Core\SourceControl\RepositoryFactory.cs,EnsureRepository,The length of the statement  "                throw new InvalidOperationException(String.Format(CultureInfo.CurrentCulture' Resources.Error_MismatchRepository' repositoryType' existingType' _environment.RepositoryPath)); " is 174.
Long Statement,Kudu.Core.SourceControl,HgRepository,C:\repos\projectkudu_kudu\Kudu.Core\SourceControl\Hg\HgRepository.cs,FetchWithoutConflict,The length of the statement  "                _hgExecutable.Execute(tracer' "pull {0} --branch {1} --noninteractive"' remote' branchNameWithQuotes' PathUtilityFactory.Instance.ResolveSSHPath()); " is 148.
Long Statement,Kudu.Core.SourceControl,HgRepository,C:\repos\projectkudu_kudu\Kudu.Core\SourceControl\Hg\HgRepository.cs,CreateChangeSet,The length of the statement  "            return new ChangeSet(changeSet.Hash' changeSet.AuthorName' changeSet.AuthorEmailAddress' changeSet.CommitMessage' new DateTimeOffset(changeSet.Timestamp)); " is 155.
Complex Conditional,Kudu.Core.Helpers,ProjectGuidParser,C:\repos\projectkudu_kudu\Kudu.Core\Helpers\ProjectGuidParser.cs,GetProjectGuidFromWebConfig,The conditional expression  "lastNode != null && lastNode.NodeType != XmlNodeType.EndElement && lastNode.NodeType != XmlNodeType.Element && lastNode.NodeType != XmlNodeType.XmlDeclaration"  is complex.
Complex Conditional,Kudu.Core.Infrastructure,ProcessExtensions,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\ProcessExtensions.cs,GetCommandLineCore,The conditional expression  "(targetProcessBitness == 64 && System.Environment.Is64BitProcess) ||                  (targetProcessBitness == 32 && !System.Environment.Is64BitProcess)"  is complex.
Complex Conditional,Kudu.Core.Infrastructure,ProcessExtensions,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\ProcessExtensions.cs,EnvToDictionary,The conditional expression  "c1 == 0 && c2 == 0 && c3 == 0 && c4 == 0"  is complex.
Virtual Method Call from Constructor,Kudu.Core.SourceControl.Git,GitExecutable,C:\repos\projectkudu_kudu\Kudu.Core\SourceControl\Git\GitExecutable.cs,GitExecutable,The constructor "GitExecutable" calls a virtual method "ResolveGitPath".
Empty Catch Block,Kudu.Core.Commands,CommandExecutor,C:\repos\projectkudu_kudu\Kudu.Core\Commands\CommandExecutor.cs,CancelCommand,The method has an empty catch block.
Empty Catch Block,Kudu.Core.Deployment,DeploymentStatusFileExtensions,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\DeploymentStatusFileExtensions.cs,UpdateProgress,The method has an empty catch block.
Empty Catch Block,Kudu.Core.Functions,FunctionManager,C:\repos\projectkudu_kudu\Kudu.Core\Functions\FunctionManager.cs,GetKeyObjectFromFile,The method has an empty catch block.
Empty Catch Block,Kudu.Core.Functions,FunctionManager,C:\repos\projectkudu_kudu\Kudu.Core\Functions\FunctionManager.cs,TryGetHostConfigAsync,The method has an empty catch block.
Empty Catch Block,Kudu.Core.Functions,FunctionManager,C:\repos\projectkudu_kudu\Kudu.Core\Functions\FunctionManager.cs,TryGetFunctionConfigAsync,The method has an empty catch block.
Empty Catch Block,Kudu.Core.Helpers,ProjectGuidParser,C:\repos\projectkudu_kudu\Kudu.Core\Helpers\ProjectGuidParser.cs,GetProjectGuidFromWebConfig,The method has an empty catch block.
Empty Catch Block,Kudu.Core.Infrastructure,ProcessExtensions,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\ProcessExtensions.cs,SafeCloseStream,The method has an empty catch block.
Empty Catch Block,Kudu.Core.Infrastructure,OperationManager,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\OperationManager.cs,SafeExecute,The method has an empty catch block.
Empty Catch Block,Kudu.Core.Jobs,ContinuousJobRunner,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\ContinuousJobRunner.cs,LogStillRunning,The method has an empty catch block.
Empty Catch Block,Kudu.Core.Jobs,FilePerJobLogger,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\FilePerJobLogger.cs,CleanupLogFileIfNeeded,The method has an empty catch block.
Empty Catch Block,Kudu.Core.Jobs,TriggeredJobsScheduler,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\TriggeredJobsScheduler.cs,OnSchedule,The method has an empty catch block.
Empty Catch Block,Kudu.Core.SiteExtensions,SiteExtensionInstallationLock,C:\repos\projectkudu_kudu\Kudu.Core\SiteExtensions\SiteExtensionInstallationLock.cs,OnLockRelease,The method has an empty catch block.
Empty Catch Block,Kudu.Core.SiteExtensions,SemanticVersion,C:\repos\projectkudu_kudu\Kudu.Core\SiteExtensions\SemanticVersion.cs,TryParseVersion,The method has an empty catch block.
Empty Catch Block,Kudu.Core.SiteExtensions,SiteExtensionManager,C:\repos\projectkudu_kudu\Kudu.Core\SiteExtensions\SiteExtensionManager.cs,GetUrlFromApplicationHost,The method has an empty catch block.
Empty Catch Block,Kudu.Core.SourceControl.Git,GitExeRepository,C:\repos\projectkudu_kudu\Kudu.Core\SourceControl\Git\GitExeRepository.cs,TryDeleteRemote,The method has an empty catch block.
Empty Catch Block,Kudu.Core.Tracing,XmlTracer,C:\repos\projectkudu_kudu\Kudu.Core\Tracing\XmlTracer.cs,WriteUnexpectedException,The method has an empty catch block.
Magic Number,Kudu.Core.Deployment,StructuredTextLogger,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\StructuredTextLogger.cs,StructuredTextLogger,The following statement contains a magic number: _structuredTextDocument = new StructuredTextDocument<LogEntry>(path'                  // DateTime.ToString("o") => "2015-08-04T00:08:38.5489308Z"                  e => string.Join(LogEntrySeparator' e.LogTime.ToString("o")' e.Message' e.Id' (int)e.Type)'                  str =>                  {                      var splitted = str.Split(new[] { LogEntrySeparator }' StringSplitOptions.None);                      if (splitted.Length == 4)                      {                          var time = DateTime.Parse(splitted[0]).ToUniversalTime();                          var message = UnsanitizeValue(splitted[1]);                          var id = splitted[2];                          var type = (LogEntryType)Int32.Parse(splitted[3]);                          return new LogEntry(time' id' message' type);                      }                      else                      {                          throw new FormatException(string.Format("the log line \"{0}\" is in an invalid format"' str));                      }                  });
Magic Number,Kudu.Core.Deployment,StructuredTextLogger,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\StructuredTextLogger.cs,StructuredTextLogger,The following statement contains a magic number: _structuredTextDocument = new StructuredTextDocument<LogEntry>(path'                  // DateTime.ToString("o") => "2015-08-04T00:08:38.5489308Z"                  e => string.Join(LogEntrySeparator' e.LogTime.ToString("o")' e.Message' e.Id' (int)e.Type)'                  str =>                  {                      var splitted = str.Split(new[] { LogEntrySeparator }' StringSplitOptions.None);                      if (splitted.Length == 4)                      {                          var time = DateTime.Parse(splitted[0]).ToUniversalTime();                          var message = UnsanitizeValue(splitted[1]);                          var id = splitted[2];                          var type = (LogEntryType)Int32.Parse(splitted[3]);                          return new LogEntry(time' id' message' type);                      }                      else                      {                          throw new FormatException(string.Format("the log line \"{0}\" is in an invalid format"' str));                      }                  });
Magic Number,Kudu.Core.Deployment,StructuredTextLogger,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\StructuredTextLogger.cs,StructuredTextLogger,The following statement contains a magic number: _structuredTextDocument = new StructuredTextDocument<LogEntry>(path'                  // DateTime.ToString("o") => "2015-08-04T00:08:38.5489308Z"                  e => string.Join(LogEntrySeparator' e.LogTime.ToString("o")' e.Message' e.Id' (int)e.Type)'                  str =>                  {                      var splitted = str.Split(new[] { LogEntrySeparator }' StringSplitOptions.None);                      if (splitted.Length == 4)                      {                          var time = DateTime.Parse(splitted[0]).ToUniversalTime();                          var message = UnsanitizeValue(splitted[1]);                          var id = splitted[2];                          var type = (LogEntryType)Int32.Parse(splitted[3]);                          return new LogEntry(time' id' message' type);                      }                      else                      {                          throw new FormatException(string.Format("the log line \"{0}\" is in an invalid format"' str));                      }                  });
Magic Number,Kudu.Core.Deployment,DeploymentManager,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\DeploymentManager.cs,PurgeDeployments,The following statement contains a magic number: if (results.Any())              {                  var toDelete = new List<DeployResult>();                  toDelete.AddRange(GetPurgeTemporaryDeployments(results));                  toDelete.AddRange(GetPurgeFailedDeployments(results));                  toDelete.AddRange(this.GetPurgeObsoleteDeployments(results));                    if (toDelete.Any())                  {                      var tracer = _traceFactory.GetTracer();                      using (tracer.Step("Purge deployment items"))                      {                          foreach (DeployResult delete in toDelete)                          {                              _status.Delete(delete.Id);                                tracer.Trace("Remove {0}' {1}' received at {2}"'                                           delete.Id.Substring(0' Math.Min(delete.Id.Length' 9))'                                           delete.Status'                                           delete.ReceivedTime);                          }                      }                        results = results.Where(r => !toDelete.Any(i => i.Id == r.Id));                  }              }
Magic Number,Kudu.Core.Deployment,DeploymentManager,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\DeploymentManager.cs,TrimId,The following statement contains a magic number: return id.Substring(0' 10);
Magic Number,Kudu.Core.Deployment.Generator,GeneratorSiteBuilder,C:\repos\projectkudu_kudu\Kudu.Core\Deployment\Generator\GeneratorSiteBuilder.cs,UseCachedDeploymentScript,The following statement contains a magic number: try              {                  if (!File.Exists(cacheKeyFilePath))                  {                      return false;                  }                    string[] cacheKeyFileContent = File.ReadAllLines(cacheKeyFilePath).Where(line => !String.IsNullOrEmpty(line)).ToArray();                    // Make sure the cache key file contains exacly 2 lines and the first one is the same as the current running kudu version                  if (cacheKeyFileContent.Length != 2 || cacheKeyFileContent[0] != KuduVersion)                  {                      return false;                  }                    string cachedDeploymentCommandArguments = cacheKeyFileContent[1];                    // If we use the same deployment script generator command                  if (scriptGeneratorCommand == cachedDeploymentCommandArguments)                  {                      // And if there is a cached deployment script from previous deployment                      if (File.Exists(deploymentScriptPath))                      {                          context.Tracer.Trace("Using cached version of the deployment script for command: {0}"' scriptGeneratorCommand);                            return true;                      }                  }                    return false;              }              catch (Exception ex)              {                  // Do not fail the deployment on failure to use cache but log the failure                  context.Tracer.Trace("Failed to use cached version of the deployment script for command: {0}"' scriptGeneratorCommand);                  context.Tracer.TraceError(ex);                  return false;              }
Magic Number,Kudu.Core.Functions,FunctionManager,C:\repos\projectkudu_kudu\Kudu.Core\Functions\FunctionManager.cs,GetKeyObjectFromFile,The following statement contains a magic number: int timeOut = 5;
Magic Number,Kudu.Core.Functions,FunctionManager,C:\repos\projectkudu_kudu\Kudu.Core\Functions\FunctionManager.cs,GetKeyObjectFromFile,The following statement contains a magic number: while (true)              {                  try                  {                      jsonStr = await FileSystemHelpers.ReadAllTextFromFileAsync(keyPath);                      break;                  }                  catch (Exception)                  {                      if (timeOut == 0)                      {                          throw new TimeoutException($"Fail to read {keyPath}' the file is being held by another process");                      }                      timeOut--;                      await Task.Delay(250);                  }              }
Magic Number,Kudu.Core.Helpers,EnvironmentHelper,C:\repos\projectkudu_kudu\Kudu.Core\Helpers\EnvironmentHelper.cs,NormalizeBinPath,The following statement contains a magic number: if (!string.IsNullOrWhiteSpace(binPath) && !OSDetector.IsOnWindows())              {                  int binIdx = binPath.LastIndexOf("Bin"' StringComparison.Ordinal);                  if (binIdx >= 0)                  {                      string subStr = binPath.Substring(binIdx);                      // make sure file path is end with ".....Bin" or "....Bin/"                      if (subStr.Length < 5 && binPath.EndsWith(subStr' StringComparison.OrdinalIgnoreCase))                      {                          // real bin folder is lower case' but in mono' value is "Bin" instead of "bin"                          binPath = binPath.Substring(0' binIdx) + subStr.ToLowerInvariant();                      }                  }              }
Magic Number,Kudu.Core.Helpers,PostDeploymentHelper,C:\repos\projectkudu_kudu\Kudu.Core\Helpers\PostDeploymentHelper.cs,IsAutoSwapOngoing,The following statement contains a magic number: return fileInfo.Exists && fileInfo.LastWriteTimeUtc.AddMinutes(2) >= DateTime.UtcNow;
Magic Number,Kudu.Core.Helpers,PostDeploymentHelper,C:\repos\projectkudu_kudu\Kudu.Core\Helpers\PostDeploymentHelper.cs,TrackPendingOperation,The following statement contains a magic number: const int DefaultTimeoutMinutes = 30;
Magic Number,Kudu.Core.Helpers,PostDeploymentHelper,C:\repos\projectkudu_kudu\Kudu.Core\Helpers\PostDeploymentHelper.cs,TrackPendingOperation,The following statement contains a magic number: const int DefaultUpdateMarkerIntervalMS = 10000;
Magic Number,Kudu.Core.Helpers,PostDeploymentHelper,C:\repos\projectkudu_kudu\Kudu.Core\Helpers\PostDeploymentHelper.cs,GetCommandTimeOut,The following statement contains a magic number: const int DefaultCommandTimeout = 60;
Magic Number,Kudu.Core.Helpers,ProjectGuidParser,C:\repos\projectkudu_kudu\Kudu.Core\Helpers\ProjectGuidParser.cs,GetProjectGuidFromWebConfig,The following statement contains a magic number: int DefaultBufferSize = 1024;
Magic Number,Kudu.Core.Hooks,WebHooksManager,C:\repos\projectkudu_kudu\Kudu.Core\Hooks\WebHooksManager.cs,CreateHttpClient,The following statement contains a magic number: if (userInfo != null)              {                  string[] userInfos = userInfo.Split(':');                  if (userInfos.Length == 2)                  {                      webRequestHandler.Credentials = new NetworkCredential(userInfos[0]' userInfos[1]);                  }              }
Magic Number,Kudu.Core.Hooks,WebHooksManager,C:\repos\projectkudu_kudu\Kudu.Core\Hooks\WebHooksManager.cs,CreateHttpClient,The following statement contains a magic number: return new HttpClient(webRequestHandler)              {                  Timeout = TimeSpan.FromSeconds(10)              };
Magic Number,Kudu.Core.Infrastructure,InstanceIdUtility,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\InstanceIdUtility.cs,EnsureInstanceId,The following statement contains a magic number: _shortInstanceId = _instanceId.Length > 6 ? _instanceId.Substring(0' 6) : _instanceId;
Magic Number,Kudu.Core.Infrastructure,InstanceIdUtility,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\InstanceIdUtility.cs,EnsureInstanceId,The following statement contains a magic number: _shortInstanceId = _instanceId.Length > 6 ? _instanceId.Substring(0' 6) : _instanceId;
Magic Number,Kudu.Core.Infrastructure,SecurityUtility,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\SecurityUtility.cs,GenerateSecretString,The following statement contains a magic number: using (var rng = RandomNumberGenerator.Create())              {                  byte[] data = new byte[40];                  rng.GetBytes(data);                  string secret = Convert.ToBase64String(data);                  // Replace pluses as they are problematic as URL values                  return secret.Replace('+'' 'a');              }
Magic Number,Kudu.Core.Infrastructure,SecurityUtility,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\SecurityUtility.cs,GenerateFunctionToken,The following statement contains a magic number: return JwtGenerator.GenerateToken(issuer' audience' expires: DateTime.UtcNow.AddMinutes(2));
Magic Number,Kudu.Core.Infrastructure,IdleManager,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\IdleManager.cs,CreateIdleTimeoutException,The following statement contains a magic number: if (arguments.Length > 15)              {                  arguments = arguments.Substring(0' 15) + " ...";              }
Magic Number,Kudu.Core.Infrastructure,IdleManager,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\IdleManager.cs,CreateIdleTimeoutException,The following statement contains a magic number: if (arguments.Length > 15)              {                  arguments = arguments.Substring(0' 15) + " ...";              }
Magic Number,Kudu.Core.Infrastructure,ProcessExtensions,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\ProcessExtensions.cs,GetParentProcessLinux,The following statement contains a magic number: try              {                  var procPath = "/proc/" + process.Id + "/stat";                    var lines = File.ReadLines("/proc/" + process.Id + "/stat");                  var match = Regex.Match(lines.First()' @"\d+\s+\((.*?)\)\s+\w+\s+(\d+)\s");                    if (match.Success)                  {                      var ppid = Int32.Parse(match.Groups[2].Value);                      return ppid < 1 ? null : Process.GetProcessById(ppid);                  }                  tracer.TraceError("GetParentProcessLinux: Invalid proc stat format: " + procPath);              }              catch(FileNotFoundException)              {                  tracer.TraceError("Could not find process with PID=" + process.Id);              }              catch(Exception ex)              {                  tracer.TraceError(ex' "GetParentProcessLinux ({0}) failed."' process.Id);              }
Magic Number,Kudu.Core.Infrastructure,ProcessExtensions,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\ProcessExtensions.cs,TryGetProcessHandle,The following statement contains a magic number: try              {                  // for public kudu' this may fail due to access denied.                  // handle the exception to reduce noises in trace errors.                  processHandle = process.Handle;              }              catch (Win32Exception ex)              {                  if (ex.NativeErrorCode != 5)                  {                      throw;                  }                    processHandle = IntPtr.Zero;              }
Magic Number,Kudu.Core.Infrastructure,ProcessExtensions,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\ProcessExtensions.cs,CopyStreamAsync,The following statement contains a magic number: try              {                  byte[] bytes = new byte[1024];                  int read = 0;                  while ((read = await from.ReadAsync(bytes' 0' bytes.Length' cancellationToken)) != 0)                  {                      idleManager.UpdateActivity();                      await to.WriteAsync(bytes' 0' read' cancellationToken);                  }                    idleManager.UpdateActivity();              }              finally              {                  // this is needed specifically for input stream                  // in order to tell executable that the input is done                  if (closeAfterCopy)                  {                      to.Close();                  }              }
Magic Number,Kudu.Core.Infrastructure,ProcessExtensions,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\ProcessExtensions.cs,GetEnvironmentVariablesCore,The following statement contains a magic number: const int maxEnvSize = 10 * 1000 * 1000;
Magic Number,Kudu.Core.Infrastructure,ProcessExtensions,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\ProcessExtensions.cs,GetEnvironmentVariablesCore,The following statement contains a magic number: const int maxEnvSize = 10 * 1000 * 1000;
Magic Number,Kudu.Core.Infrastructure,ProcessExtensions,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\ProcessExtensions.cs,GetEnvironmentVariablesCore,The following statement contains a magic number: const int maxEnvSize = 10 * 1000 * 1000;
Magic Number,Kudu.Core.Infrastructure,ProcessExtensions,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\ProcessExtensions.cs,GetCommandLineCore,The following statement contains a magic number: if (targetProcessBitness == 64 && !System.Environment.Is64BitProcess)              {                  throw new Win32Exception(                      "The current process should run in 64 bit mode to be able to get the environment of another 64 bit process.");              }
Magic Number,Kudu.Core.Infrastructure,ProcessExtensions,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\ProcessExtensions.cs,GetCommandLineCore,The following statement contains a magic number: var pPeb = targetProcessBitness == 64 ? GetPeb64(hProcess) : GetPeb32(hProcess);
Magic Number,Kudu.Core.Infrastructure,ProcessExtensions,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\ProcessExtensions.cs,GetCommandLineCore,The following statement contains a magic number: var offset = targetProcessBitness == 64 ? 0x20 : 0x10;
Magic Number,Kudu.Core.Infrastructure,ProcessExtensions,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\ProcessExtensions.cs,GetCommandLineCore,The following statement contains a magic number: var unicodeStringOffset = targetProcessBitness == 64 ? 0x70 : 0x40;
Magic Number,Kudu.Core.Infrastructure,ProcessExtensions,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\ProcessExtensions.cs,GetCommandLineCore,The following statement contains a magic number: if ((targetProcessBitness == 64 && System.Environment.Is64BitProcess) ||                  (targetProcessBitness == 32 && !System.Environment.Is64BitProcess))              {                  //we running same bitness as the target process' use native UNICODE_STRING                  var unicodeString = new ProcessNativeMethods.UNICODE_STRING();                  if (!ProcessNativeMethods.ReadProcessMemory(hProcess' ptr + unicodeStringOffset' ref unicodeString' new IntPtr(Marshal.SizeOf(unicodeString))' IntPtr.Zero))                  {                      throw new Win32Exception(String.Format("Unable to read command line' win32 error {0}"' Marshal.GetLastWin32Error()));                  }                  commandLineLength = unicodeString.Length;                  commandLineBuffer = unicodeString.Buffer;              }              else              {                  //we are running 64 but target process is 32' use UNICODE_STRING_32                  var unicodeString = new ProcessNativeMethods.UNICODE_STRING_32();                  if (!ProcessNativeMethods.ReadProcessMemory(hProcess' ptr + unicodeStringOffset' ref unicodeString' new IntPtr(Marshal.SizeOf(unicodeString))' IntPtr.Zero))                  {                      throw new Win32Exception(String.Format("Unable to read command line' win32 error {0}"' Marshal.GetLastWin32Error()));                  }                  commandLineLength = unicodeString.Length;                  commandLineBuffer = new IntPtr(unicodeString.Buffer);              }
Magic Number,Kudu.Core.Infrastructure,ProcessExtensions,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\ProcessExtensions.cs,GetCommandLineCore,The following statement contains a magic number: if ((targetProcessBitness == 64 && System.Environment.Is64BitProcess) ||                  (targetProcessBitness == 32 && !System.Environment.Is64BitProcess))              {                  //we running same bitness as the target process' use native UNICODE_STRING                  var unicodeString = new ProcessNativeMethods.UNICODE_STRING();                  if (!ProcessNativeMethods.ReadProcessMemory(hProcess' ptr + unicodeStringOffset' ref unicodeString' new IntPtr(Marshal.SizeOf(unicodeString))' IntPtr.Zero))                  {                      throw new Win32Exception(String.Format("Unable to read command line' win32 error {0}"' Marshal.GetLastWin32Error()));                  }                  commandLineLength = unicodeString.Length;                  commandLineBuffer = unicodeString.Buffer;              }              else              {                  //we are running 64 but target process is 32' use UNICODE_STRING_32                  var unicodeString = new ProcessNativeMethods.UNICODE_STRING_32();                  if (!ProcessNativeMethods.ReadProcessMemory(hProcess' ptr + unicodeStringOffset' ref unicodeString' new IntPtr(Marshal.SizeOf(unicodeString))' IntPtr.Zero))                  {                      throw new Win32Exception(String.Format("Unable to read command line' win32 error {0}"' Marshal.GetLastWin32Error()));                  }                  commandLineLength = unicodeString.Length;                  commandLineBuffer = new IntPtr(unicodeString.Buffer);              }
Magic Number,Kudu.Core.Infrastructure,ProcessExtensions,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\ProcessExtensions.cs,EnvToDictionary,The following statement contains a magic number: if (len < 4)              {                  return result;              }
Magic Number,Kudu.Core.Infrastructure,ProcessExtensions,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\ProcessExtensions.cs,EnvToDictionary,The following statement contains a magic number: int n = len - 3;
Magic Number,Kudu.Core.Infrastructure,ProcessExtensions,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\ProcessExtensions.cs,EnvToDictionary,The following statement contains a magic number: for (int i = 0; i < n; ++i)              {                  byte c1 = env[i];                  byte c2 = env[i + 1];                  byte c3 = env[i + 2];                  byte c4 = env[i + 3];                    if (c1 == 0 && c2 == 0 && c3 == 0 && c4 == 0)                  {                      len = i + 3;                      break;                  }              }
Magic Number,Kudu.Core.Infrastructure,ProcessExtensions,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\ProcessExtensions.cs,EnvToDictionary,The following statement contains a magic number: for (int i = 0; i < n; ++i)              {                  byte c1 = env[i];                  byte c2 = env[i + 1];                  byte c3 = env[i + 2];                  byte c4 = env[i + 3];                    if (c1 == 0 && c2 == 0 && c3 == 0 && c4 == 0)                  {                      len = i + 3;                      break;                  }              }
Magic Number,Kudu.Core.Infrastructure,ProcessExtensions,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\ProcessExtensions.cs,EnvToDictionary,The following statement contains a magic number: for (int i = 0; i < n; ++i)              {                  byte c1 = env[i];                  byte c2 = env[i + 1];                  byte c3 = env[i + 2];                  byte c4 = env[i + 3];                    if (c1 == 0 && c2 == 0 && c3 == 0 && c4 == 0)                  {                      len = i + 3;                      break;                  }              }
Magic Number,Kudu.Core.Infrastructure,ProcessExtensions,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\ProcessExtensions.cs,EnvToDictionary,The following statement contains a magic number: for (int i = 0; i < envs.Length; i++)              {                  var pair = envs[i].Split(separators' 2);                  if (pair.Length != 2)                  {                      continue;                  }                  result[pair[0]] = pair[1];              }
Magic Number,Kudu.Core.Infrastructure,ProcessExtensions,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\ProcessExtensions.cs,EnvToDictionary,The following statement contains a magic number: for (int i = 0; i < envs.Length; i++)              {                  var pair = envs[i].Split(separators' 2);                  if (pair.Length != 2)                  {                      continue;                  }                  result[pair[0]] = pair[1];              }
Magic Number,Kudu.Core.Infrastructure,ProcessExtensions,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\ProcessExtensions.cs,GetPenv,The following statement contains a magic number: if (processBitness == 64)              {                  if (!System.Environment.Is64BitProcess)                  {                      throw new Win32Exception(                          "The current process should run in 64 bit mode to be able to get the environment of another 64 bit process.");                  }                    IntPtr pPeb = GetPeb64(hProcess);                    IntPtr ptr;                  if (!TryReadIntPtr(hProcess' pPeb + 0x20' out ptr))                  {                      throw new Win32Exception("Unable to read PEB.");                  }                    IntPtr penv;                  if (!TryReadIntPtr(hProcess' ptr + 0x80' out penv))                  {                      throw new Win32Exception("Unable to read RTL_USER_PROCESS_PARAMETERS.");                  }                    return penv;              }              else              {                  IntPtr pPeb = GetPeb32(hProcess);                    IntPtr ptr;                  if (!TryReadIntPtr(hProcess' pPeb + 0x10' out ptr))                  {                      throw new Win32Exception("Unable to read PEB.");                  }                    IntPtr penv;                  if (!TryReadIntPtr(hProcess' ptr + 0x48' out penv))                  {                      throw new Win32Exception("Unable to read RTL_USER_PROCESS_PARAMETERS.");                  }                    return penv;              }
Magic Number,Kudu.Core.Infrastructure,ProcessExtensions,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\ProcessExtensions.cs,GetProcessBitness,The following statement contains a magic number: if (System.Environment.Is64BitOperatingSystem)              {                  bool wow64;                  if (!ProcessNativeMethods.IsWow64Process(hProcess' out wow64))                  {                      return 32;                  }                  if (wow64)                  {                      return 32;                  }                    return 64;              }              else              {                  return 32;              }
Magic Number,Kudu.Core.Infrastructure,ProcessExtensions,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\ProcessExtensions.cs,GetProcessBitness,The following statement contains a magic number: if (System.Environment.Is64BitOperatingSystem)              {                  bool wow64;                  if (!ProcessNativeMethods.IsWow64Process(hProcess' out wow64))                  {                      return 32;                  }                  if (wow64)                  {                      return 32;                  }                    return 64;              }              else              {                  return 32;              }
Magic Number,Kudu.Core.Infrastructure,ProcessExtensions,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\ProcessExtensions.cs,GetProcessBitness,The following statement contains a magic number: if (System.Environment.Is64BitOperatingSystem)              {                  bool wow64;                  if (!ProcessNativeMethods.IsWow64Process(hProcess' out wow64))                  {                      return 32;                  }                  if (wow64)                  {                      return 32;                  }                    return 64;              }              else              {                  return 32;              }
Magic Number,Kudu.Core.Infrastructure,ProcessExtensions,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\ProcessExtensions.cs,GetProcessBitness,The following statement contains a magic number: if (System.Environment.Is64BitOperatingSystem)              {                  bool wow64;                  if (!ProcessNativeMethods.IsWow64Process(hProcess' out wow64))                  {                      return 32;                  }                  if (wow64)                  {                      return 32;                  }                    return 64;              }              else              {                  return 32;              }
Magic Number,Kudu.Core.Infrastructure,IniFile,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\IniFile.cs,ParseValues,The following statement contains a magic number: foreach (var line in lines)              {                  if (String.IsNullOrWhiteSpace(line))                  {                      continue;                  }                    var value = line.Trim();                  if (value.Length > 2 &&                      value[0] == '[' &&                      value[value.Length - 1] == ']')                  {                      // Get the section name                      string sectionValue = value.Substring(1' value.Length - 2).Trim();                        if (!String.IsNullOrEmpty(sectionValue))                      {                          // Create a new section                          currentSection = new Dictionary<string' string>(StringComparer.OrdinalIgnoreCase);                            // Create a new section                          iniFile[sectionValue] = currentSection;                      }                  }                  else if (currentSection == null)                  {                      // If there's no section then ignore the values                      continue;                  }                  else                  {                      int index = value.IndexOf('=');                      if (index != -1)                      {                          var key = value.Substring(0' index);                          var keyValue = value.Substring(index + 1);                            if (String.IsNullOrEmpty(key))                          {                              // Skip empty keys                              continue;                          }                            // Add it to the list of keys                          currentSection[key.Trim()] = keyValue.Trim();                      }                  }              }
Magic Number,Kudu.Core.Infrastructure,IniFile,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\IniFile.cs,ParseValues,The following statement contains a magic number: foreach (var line in lines)              {                  if (String.IsNullOrWhiteSpace(line))                  {                      continue;                  }                    var value = line.Trim();                  if (value.Length > 2 &&                      value[0] == '[' &&                      value[value.Length - 1] == ']')                  {                      // Get the section name                      string sectionValue = value.Substring(1' value.Length - 2).Trim();                        if (!String.IsNullOrEmpty(sectionValue))                      {                          // Create a new section                          currentSection = new Dictionary<string' string>(StringComparer.OrdinalIgnoreCase);                            // Create a new section                          iniFile[sectionValue] = currentSection;                      }                  }                  else if (currentSection == null)                  {                      // If there's no section then ignore the values                      continue;                  }                  else                  {                      int index = value.IndexOf('=');                      if (index != -1)                      {                          var key = value.Substring(0' index);                          var keyValue = value.Substring(index + 1);                            if (String.IsNullOrEmpty(key))                          {                              // Skip empty keys                              continue;                          }                            // Add it to the list of keys                          currentSection[key.Trim()] = keyValue.Trim();                      }                  }              }
Magic Number,Kudu.Core.Infrastructure,ParserHelpers,C:\repos\projectkudu_kudu\Kudu.Core\Infrastructure\ParserHelpers.cs,IsSingleNewLine,The following statement contains a magic number: if (value.Length == 2 && value[0] == '\r' && value[1] == '\n')              {                  return true;              }
Magic Number,Kudu.Core.Jobs,ContinuousJobRunner,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\ContinuousJobRunner.cs,StartJob,The following statement contains a magic number: _continuousJobThread = new Thread(() =>              {                  var threadAborted = false;                  while (!threadAborted && _started == 1 && !IsDisabled)                  {                      try                      {                          // Try getting the singleton lock if single is enabled                          bool acquired;                          if (!TryGetLockIfSingleton(out acquired))                          {                              // Wait 5 seconds and retry to take the lock                              WaitForTimeOrStop(TimeSpan.FromSeconds(5));                              continue;                          }                            try                          {                              Stopwatch liveStopwatch = Stopwatch.StartNew();                                _continuousJobLogger.StartingNewRun();                                var tracer = TraceFactory.GetTracer();                              using (tracer.Step("Run {0} {1}"' continuousJob.JobType' continuousJob.Name))                              using (new Timer(LogStillRunning' null' TimeSpan.FromHours(1)' TimeSpan.FromHours(12)))                              {                                  InitializeJobInstance(continuousJob' _continuousJobLogger);                                  WebJobPort = GetAvailableJobPort();                                  RunJobInstance(continuousJob' _continuousJobLogger' String.Empty' String.Empty' tracer' WebJobPort);                              }                                if (_started == 1 && !IsDisabled)                              {                                  // The wait time between WebJob invocations is either WebJobsRestartTime (60 seconds by default) or if the WebJob                                  // Was running for at least 2 minutes there is no wait time.                                  TimeSpan webJobsRestartTime = liveStopwatch.Elapsed < WarmupTimeSpan ? Settings.GetWebJobsRestartTime() : TimeSpan.Zero;                                  _continuousJobLogger.LogInformation("Process went down' waiting for {0} seconds".FormatInvariant(webJobsRestartTime.TotalSeconds));                                  _continuousJobLogger.ReportStatus(ContinuousJobStatus.PendingRestart);                                  WaitForTimeOrStop(webJobsRestartTime);                              }                          }                          finally                          {                              if (acquired)                              {                                  // Make sure lock is released before re-iterating and trying to get the lock again                                  ReleaseSingletonLock();                              }                          }                      }                      catch (ThreadAbortException ex)                      {                          // by nature' ThreadAbortException will be rethrown at the end of this catch block and                          // this bool may not be neccessary since while loop will be exited anyway.  we added                          // it to be explicit.                          threadAborted = true;                            if (!ex.AbortedByKudu())                          {                              TraceFactory.GetTracer().TraceWarning("Thread was aborted' make sure WebJob was about to stop.");                          }                      }                      catch (Exception ex)                      {                          _analytics.UnexpectedException(ex' trace: true);                            // sleep to avoid tight exception loop                          WaitForTimeOrStop(TimeSpan.FromSeconds(60));                      }                  }              });
Magic Number,Kudu.Core.Jobs,ContinuousJobRunner,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\ContinuousJobRunner.cs,StartJob,The following statement contains a magic number: _continuousJobThread = new Thread(() =>              {                  var threadAborted = false;                  while (!threadAborted && _started == 1 && !IsDisabled)                  {                      try                      {                          // Try getting the singleton lock if single is enabled                          bool acquired;                          if (!TryGetLockIfSingleton(out acquired))                          {                              // Wait 5 seconds and retry to take the lock                              WaitForTimeOrStop(TimeSpan.FromSeconds(5));                              continue;                          }                            try                          {                              Stopwatch liveStopwatch = Stopwatch.StartNew();                                _continuousJobLogger.StartingNewRun();                                var tracer = TraceFactory.GetTracer();                              using (tracer.Step("Run {0} {1}"' continuousJob.JobType' continuousJob.Name))                              using (new Timer(LogStillRunning' null' TimeSpan.FromHours(1)' TimeSpan.FromHours(12)))                              {                                  InitializeJobInstance(continuousJob' _continuousJobLogger);                                  WebJobPort = GetAvailableJobPort();                                  RunJobInstance(continuousJob' _continuousJobLogger' String.Empty' String.Empty' tracer' WebJobPort);                              }                                if (_started == 1 && !IsDisabled)                              {                                  // The wait time between WebJob invocations is either WebJobsRestartTime (60 seconds by default) or if the WebJob                                  // Was running for at least 2 minutes there is no wait time.                                  TimeSpan webJobsRestartTime = liveStopwatch.Elapsed < WarmupTimeSpan ? Settings.GetWebJobsRestartTime() : TimeSpan.Zero;                                  _continuousJobLogger.LogInformation("Process went down' waiting for {0} seconds".FormatInvariant(webJobsRestartTime.TotalSeconds));                                  _continuousJobLogger.ReportStatus(ContinuousJobStatus.PendingRestart);                                  WaitForTimeOrStop(webJobsRestartTime);                              }                          }                          finally                          {                              if (acquired)                              {                                  // Make sure lock is released before re-iterating and trying to get the lock again                                  ReleaseSingletonLock();                              }                          }                      }                      catch (ThreadAbortException ex)                      {                          // by nature' ThreadAbortException will be rethrown at the end of this catch block and                          // this bool may not be neccessary since while loop will be exited anyway.  we added                          // it to be explicit.                          threadAborted = true;                            if (!ex.AbortedByKudu())                          {                              TraceFactory.GetTracer().TraceWarning("Thread was aborted' make sure WebJob was about to stop.");                          }                      }                      catch (Exception ex)                      {                          _analytics.UnexpectedException(ex' trace: true);                            // sleep to avoid tight exception loop                          WaitForTimeOrStop(TimeSpan.FromSeconds(60));                      }                  }              });
Magic Number,Kudu.Core.Jobs,ContinuousJobRunner,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\ContinuousJobRunner.cs,StartJob,The following statement contains a magic number: _continuousJobThread = new Thread(() =>              {                  var threadAborted = false;                  while (!threadAborted && _started == 1 && !IsDisabled)                  {                      try                      {                          // Try getting the singleton lock if single is enabled                          bool acquired;                          if (!TryGetLockIfSingleton(out acquired))                          {                              // Wait 5 seconds and retry to take the lock                              WaitForTimeOrStop(TimeSpan.FromSeconds(5));                              continue;                          }                            try                          {                              Stopwatch liveStopwatch = Stopwatch.StartNew();                                _continuousJobLogger.StartingNewRun();                                var tracer = TraceFactory.GetTracer();                              using (tracer.Step("Run {0} {1}"' continuousJob.JobType' continuousJob.Name))                              using (new Timer(LogStillRunning' null' TimeSpan.FromHours(1)' TimeSpan.FromHours(12)))                              {                                  InitializeJobInstance(continuousJob' _continuousJobLogger);                                  WebJobPort = GetAvailableJobPort();                                  RunJobInstance(continuousJob' _continuousJobLogger' String.Empty' String.Empty' tracer' WebJobPort);                              }                                if (_started == 1 && !IsDisabled)                              {                                  // The wait time between WebJob invocations is either WebJobsRestartTime (60 seconds by default) or if the WebJob                                  // Was running for at least 2 minutes there is no wait time.                                  TimeSpan webJobsRestartTime = liveStopwatch.Elapsed < WarmupTimeSpan ? Settings.GetWebJobsRestartTime() : TimeSpan.Zero;                                  _continuousJobLogger.LogInformation("Process went down' waiting for {0} seconds".FormatInvariant(webJobsRestartTime.TotalSeconds));                                  _continuousJobLogger.ReportStatus(ContinuousJobStatus.PendingRestart);                                  WaitForTimeOrStop(webJobsRestartTime);                              }                          }                          finally                          {                              if (acquired)                              {                                  // Make sure lock is released before re-iterating and trying to get the lock again                                  ReleaseSingletonLock();                              }                          }                      }                      catch (ThreadAbortException ex)                      {                          // by nature' ThreadAbortException will be rethrown at the end of this catch block and                          // this bool may not be neccessary since while loop will be exited anyway.  we added                          // it to be explicit.                          threadAborted = true;                            if (!ex.AbortedByKudu())                          {                              TraceFactory.GetTracer().TraceWarning("Thread was aborted' make sure WebJob was about to stop.");                          }                      }                      catch (Exception ex)                      {                          _analytics.UnexpectedException(ex' trace: true);                            // sleep to avoid tight exception loop                          WaitForTimeOrStop(TimeSpan.FromSeconds(60));                      }                  }              });
Magic Number,Kudu.Core.Jobs,ContinuousJobRunner,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\ContinuousJobRunner.cs,WaitForTimeOrStop,The following statement contains a magic number: while (stopwatch.Elapsed < timeSpan && _started == 1)              {                  Thread.Sleep(200);              }
Magic Number,Kudu.Core.Jobs,JobLogger,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\JobLogger.cs,ReadJobStatusFromFile,The following statement contains a magic number: try              {                  if (!FileSystemHelpers.FileExists(statusFilePath))                  {                      return null;                  }                    // since we don't have proper lock on file' we are more forgiving in retry (10 times 250 ms interval).                  return OperationManager.Attempt(() =>                  {                      string content = FileSystemHelpers.ReadAllTextFromFile(statusFilePath).Trim();                      return JsonConvert.DeserializeObject<TJobStatus>(content' JsonSerializerSettings);                  }' retries: 10);              }              catch (Exception ex)              {                  analytics.UnexpectedException(ex);                  return null;              }
Magic Number,Kudu.Core.Jobs,JobLogger,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\JobLogger.cs,SafeLogToFile,The following statement contains a magic number: try              {                  // since we don't have proper lock on file' we are more forgiving in retry (10 times 250 ms interval).                  if (isAppend)                  {                      OperationManager.Attempt(() => FileSystemHelpers.AppendAllTextToFile(path' content)' retries: 10);                  }                  else                  {                      OperationManager.Attempt(() => FileSystemHelpers.WriteAllTextToFile(path' content)' retries: 10);                  }              }              catch (Exception ex)              {                  Analytics.UnexpectedException(ex);              }
Magic Number,Kudu.Core.Jobs,JobLogger,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\JobLogger.cs,SafeLogToFile,The following statement contains a magic number: try              {                  // since we don't have proper lock on file' we are more forgiving in retry (10 times 250 ms interval).                  if (isAppend)                  {                      OperationManager.Attempt(() => FileSystemHelpers.AppendAllTextToFile(path' content)' retries: 10);                  }                  else                  {                      OperationManager.Attempt(() => FileSystemHelpers.WriteAllTextToFile(path' content)' retries: 10);                  }              }              catch (Exception ex)              {                  Analytics.UnexpectedException(ex);              }
Magic Number,Kudu.Core.Jobs,Schedule,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\Schedule.cs,GetNextInterval,The following statement contains a magic number: if (ignoreMissed || nextOccurrence >= now - TimeSpan.FromMinutes(10))              {                  return TimeSpan.Zero;              }
Magic Number,Kudu.Core.Jobs,JobsManagerBase<TJob>,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\JobsManagerBase.cs,DeleteJob,The following statement contains a magic number: try              {                  var jobDirectory = GetJobDirectory(jobName);                  if (!jobDirectory.Exists)                  {                      return;                  }                    var jobsSpecificDataPath = GetSpecificJobDataPath(jobName);                    // Remove both job binaries and data directories                  OperationManager.Attempt(() =>                  {                      FileSystemHelpers.DeleteDirectorySafe(jobDirectory.FullName' ignoreErrors: false);                      FileSystemHelpers.DeleteDirectorySafe(jobsSpecificDataPath' ignoreErrors: false);                  }' retries: 3' delayBeforeRetry: 2000);                    ClearJobListCache();              }              catch (Exception ex)              {                  // Ignore failure to remove job here                  TraceFactory.GetTracer().TraceError(ex.ToString());              }
Magic Number,Kudu.Core.Jobs,JobsManagerBase<TJob>,C:\repos\projectkudu_kudu\Kudu.Core\Jobs\JobsManagerBase.cs,DeleteJob,The following statement contains a magic number: try              {                  var jobDirectory = GetJobDirectory(jobName);                  if (!jobDirectory.Exists)                  {                      return;                  }                    var jobsSpecificDataPath = GetSpecificJobDataPath(jobName);                    // Remove both job binaries and data directories                  OperationManager.Attempt(() =>                  {                      FileSystemHelpers.DeleteDirectorySafe(jobDirectory.FullName' ignoreErrors: false);                      FileSystemHelpers.DeleteDirectorySafe(jobsSpecificDataPath' ignoreErrors: false);                  }' retries: 3' delayBeforeRetry: 2000);                    ClearJobListCache();              }              catch (Exception ex)              {                  // Ignore failure to remove job here                  TraceFactory.GetTracer().TraceError(ex.ToString());              }
Magic Number,Kudu.Core.SiteExtensions,FeedExtensions,C:\repos\projectkudu_kudu\Kudu.Core\SiteExtensions\FeedExtensions.cs,GetPackageStream,The following statement contains a magic number: try              {                  sourceStream = await downloadResource.GetStream(identity' CancellationToken.None);                  if (sourceStream == null)                  {                      // package not exist from feed                      throw new FileNotFoundException(string.Format(CultureInfo.InvariantCulture' "Package {0} - {1} not found when try to download."' identity.Id' identity.Version.ToNormalizedString()));                  }                    packageStream = sourceStream;                  if (!sourceStream.CanSeek)                  {                      // V3 DownloadResource.GetStream does not support seek operations.                      // https://github.com/NuGet/NuGet.Protocol/issues/15                        MemoryStream memStream = new MemoryStream();                        try                      {                          byte[] buffer = new byte[2048];                            int bytesRead = 0;                          do                          {                              bytesRead = sourceStream.Read(buffer' 0' buffer.Length);                              memStream.Write(buffer' 0' bytesRead);                          } while (bytesRead != 0);                            await memStream.FlushAsync();                          memStream.Position = 0;                            packageStream = memStream;                      }                      catch                      {                          memStream.Dispose();                          throw;                      }                  }                    return packageStream;              }              catch              {                  if (packageStream != null && packageStream != sourceStream)                  {                      packageStream.Dispose();                  }                    if (sourceStream != null)                  {                      sourceStream.Dispose();                  }                    throw;              }              finally              {                  if (packageStream != null && sourceStream != null && !sourceStream.CanSeek)                  {                      // packageStream is a copy of sourceStream' dispose sourceStream                      sourceStream.Dispose();                  }              }
Magic Number,Kudu.Core.SiteExtensions,SemanticVersion,C:\repos\projectkudu_kudu\Kudu.Core\SiteExtensions\SemanticVersion.cs,GetHashCode,The following statement contains a magic number: if (SpecialVersion != null)              {                  hashCode = hashCode * 4567 + SpecialVersion.GetHashCode();              }
Magic Number,Kudu.Core.SiteExtensions,SiteExtensionStatus,C:\repos\projectkudu_kudu\Kudu.Core\SiteExtensions\SiteExtensionStatus.cs,RemoveStatus,The following statement contains a magic number: try              {                  string dirName = Path.GetDirectoryName(_filePath);                  if (FileSystemHelpers.DirectoryExists(dirName))                  {                      FileSystemHelpers.DeleteDirectoryContentsSafe(dirName);                      // call DeleteDirectorySafe directly would sometime causing "Access denied" on folder                      // work-around: remove content and wait briefly before delete folder                       await Task.Delay(300);                      FileSystemHelpers.DeleteDirectorySafe(dirName);                  }              }              catch (Exception ex)              {                  // no-op                  _tracer.TraceError(ex);              }
Magic Number,Kudu.Core.SiteExtensions,SiteExtensionManager,C:\repos\projectkudu_kudu\Kudu.Core\SiteExtensions\SiteExtensionManager.cs,EnsureInstallationEnviroment,The following statement contains a magic number: using (tracer.Step("There was leftover data from previous uninstallation. Trying to cleanup now."))              {                  try                  {                      OperationManager.Attempt(() => FileSystemHelpers.DeleteDirectorySafe(installationDir' ignoreErrors: false));                      return;                  }                  catch (Exception ex)                  {                      tracer.TraceError(ex);                  }                    FileSystemHelpers.EnsureDirectory(_toBeDeletedDirectoryPath);                  DirectoryInfo dirInfo = new DirectoryInfo(installationDir);                  string tmpFoder = Path.Combine(                      _toBeDeletedDirectoryPath'                      string.Format(CultureInfo.InvariantCulture' "{0}-{1}"' dirInfo.Name' Guid.NewGuid().ToString("N").Substring(0' 8)));                    using (tracer.Step("Failed to cleanup. Moving leftover data to {0}"' tmpFoder))                  {                      // if failed' let exception bubble up to trigger bad request                      OperationManager.Attempt(() => FileSystemHelpers.MoveDirectory(installationDir' tmpFoder));                  }              }
Magic Number,Kudu.Core.SourceControl.Git,GitExeRepository,C:\repos\projectkudu_kudu\Kudu.Core\SourceControl\Git\GitExeRepository.cs,DecodeGitLsOutput,The following statement contains a magic number: if (original.Contains('"'))              {                  output = System.Text.RegularExpressions.Regex.Unescape(original);                    byte[] rawBytes = Encoding.GetEncoding(1252).GetBytes(output);                    output = Encoding.UTF8.GetString(rawBytes);              }
Magic Number,Kudu.Core.SourceControl.Git,GitExeRepository,C:\repos\projectkudu_kudu\Kudu.Core\SourceControl\Git\GitExeRepository.cs,ExecuteGenericGitCommandWithRetryAndCatchingWellKnownGitErrors,The following statement contains a magic number: return OperationManager.Attempt(func' delayBeforeRetry: 1000' shouldRetry: ex =>              {                  string error = ex.Message;                  if (RetriableFetchFailures.Any(retriableFailureMessage => error.Contains(retriableFailureMessage)))                  {                      _tracerFactory.GetTracer().Trace("Retry due to {0}"' error);                      return true;                  }                    return false;              });
Magic Number,Kudu.Core.Tracing,KuduEventSource,C:\repos\projectkudu_kudu\Kudu.Core\Tracing\KuduEventSource.cs,ProjectDeployed,The following statement contains a magic number: if (IsEnabled())              {                  WriteEvent(65501' siteName' projectType' result' error' deploymentDurationInMilliseconds' siteMode' scmType' vsProjectId);              }
Magic Number,Kudu.Core.Tracing,KuduEventSource,C:\repos\projectkudu_kudu\Kudu.Core\Tracing\KuduEventSource.cs,WebJobStarted,The following statement contains a magic number: if (IsEnabled())              {                  WriteEvent(65508' siteName' jobName' scriptExtension' jobType' siteMode' error' trigger);              }
Magic Number,Kudu.Core.Tracing,KuduEventSource,C:\repos\projectkudu_kudu\Kudu.Core\Tracing\KuduEventSource.cs,KuduException,The following statement contains a magic number: if (IsEnabled())              {                  WriteEvent(65512' siteName' method' path' result' Message' exception);              }
Magic Number,Kudu.Core.Tracing,KuduEventSource,C:\repos\projectkudu_kudu\Kudu.Core\Tracing\KuduEventSource.cs,DeprecatedApiUsed,The following statement contains a magic number: if (IsEnabled())              {                  WriteEvent(65510' siteName' route' userAgent' method' path);              }
Magic Number,Kudu.Core.Tracing,KuduEventSource,C:\repos\projectkudu_kudu\Kudu.Core\Tracing\KuduEventSource.cs,KuduSiteExtensionEvent,The following statement contains a magic number: if (IsEnabled())              {                  WriteEvent(65511' siteName' method' path' result' deploymentDurationInMilliseconds' Message);              }
Magic Number,Kudu.Core.Tracing,KuduEventSource,C:\repos\projectkudu_kudu\Kudu.Core\Tracing\KuduEventSource.cs,WebJobEvent,The following statement contains a magic number: if (IsEnabled())              {                  WriteEvent(65513' siteName' jobName' Message' jobType' error);              }
Magic Number,Kudu.Core.Tracing,KuduEventSource,C:\repos\projectkudu_kudu\Kudu.Core\Tracing\KuduEventSource.cs,GenericEvent,The following statement contains a magic number: if (IsEnabled())              {                  WriteEvent(65514' siteName' Message' requestId' scmType' siteMode' buildVersion);              }
Magic Number,Kudu.Core.Tracing,KuduEventSource,C:\repos\projectkudu_kudu\Kudu.Core\Tracing\KuduEventSource.cs,ApiEvent,The following statement contains a magic number: if (IsEnabled())              {                  WriteEvent(65515' siteName' Message' address' verb' requestId' statusCode' latencyInMilliseconds' userAgent);              }
Magic Number,Kudu.Core.Tracing,LogFileHelper,C:\repos\projectkudu_kudu\Kudu.Core\Tracing\TextLogger.cs,GetIndentation,The following statement contains a magic number: return new String(' '' count * 2);
Magic Number,Kudu.Core.Tracing,LogFileHelper,C:\repos\projectkudu_kudu\Kudu.Core\Tracing\TextLogger.cs,GetIndentation,The following statement contains a magic number: return new String(' '' count * 2);
Magic Number,Kudu.Core.Tracing,XmlTracer,C:\repos\projectkudu_kudu\Kudu.Core\Tracing\XmlTracer.cs,WriteStartElement,The following statement contains a magic number: try              {                  var info = new TraceInfo(title' attribs);                    var ensureMaxXmlFiles = false;                  if (String.IsNullOrEmpty(_file))                  {                      ensureMaxXmlFiles = true;                        // generate trace file name base on attribs                      _file = GenerateFileName(info);                  }                    var strb = new StringBuilder();                    if (_isStartElement)                  {                      strb.AppendLine(">");                  }                    strb.Append(new String(' '' _infos.Count * 2));                  strb.AppendFormat("<step title=\"{0}\" "' XmlUtility.EscapeXmlText(title));                  strb.AppendFormat("date=\"{0}\" "' info.StartTime.ToString("yyyy-MM-ddTHH:mm:ss.fff"));                  if (_infos.Count == 0)                  {                      strb.AppendFormat("instance=\"{0}\" "' InstanceIdUtility.GetShortInstanceId());                  }                    foreach (var attrib in attribs)                  {                      if (TraceExtensions.IsNonDisplayableAttribute(attrib.Key))                      {                          continue;                      }                        strb.AppendFormat("{0}=\"{1}\" "' attrib.Key' XmlUtility.EscapeXmlText(attrib.Value));                  }                    FileSystemHelpers.AppendAllTextToFile(_file' strb.ToString());                  _infos.Push(info);                  _isStartElement = true;                    if (ensureMaxXmlFiles)                  {                      EnsureMaxXmlFiles();                  }                    return new DisposableAction(() => WriteEndTrace());              }              catch (Exception ex)              {                  WriteUnexpectedException(ex);              }
Magic Number,Kudu.Core.Tracing,XmlTracer,C:\repos\projectkudu_kudu\Kudu.Core\Tracing\XmlTracer.cs,WriteEndTrace,The following statement contains a magic number: try              {                  var info = _infos.Pop();                  var elapsed = DateTime.UtcNow - info.StartTime;                  var strb = new StringBuilder();                  if (_isStartElement)                  {                      strb.Append("/>");                  }                  else                  {                      strb.Append(new String(' '' _infos.Count * 2));                      strb.Append("</step>");                  }                    strb.AppendLine(String.Format("<!-- duration: {0:0}ms -->"' elapsed.TotalMilliseconds));                    FileSystemHelpers.AppendAllTextToFile(_file' strb.ToString());                  _isStartElement = false;                    // adjust filename with statusCode                  if (info.Title == XmlTracer.OutgoingResponseTrace && _file.EndsWith(PendingXml' StringComparison.OrdinalIgnoreCase))                  {                      if (!Int32.TryParse(info.Attributes["statusCode"]' out _statusCode))                      {                          _statusCode = 0;                      }                  }                    if (_infos.Count == 0)                  {                      // avoid spamming the traces                      if (!ShouldTrace(_level' info' _statusCode))                      {                          FileSystemHelpers.DeleteFileSafe(_file);                      }                      else                      {                          var file = _file;                          if (_file.EndsWith(PendingXml' StringComparison.OrdinalIgnoreCase))                          {                              file = file.Replace(PendingXml' _statusCode <= 0 ? ".xml" : String.Format("_{0}.xml"' _statusCode));                          }                            file = file.Replace(".xml"' String.Format("_{0:0}s.xml"' elapsed.TotalSeconds));                          FileSystemHelpers.MoveFile(_file' file);                      }                        _file = null;                  }              }              catch (Exception ex)              {                  WriteUnexpectedException(ex);              }
Magic Number,Kudu.Core.Tracing,XmlTracer,C:\repos\projectkudu_kudu\Kudu.Core\Tracing\XmlTracer.cs,ShouldTrace,The following statement contains a magic number: if (statusCode == 304)              {                  return false;              }
Magic Number,Kudu.Core.Tracing,XmlTracer,C:\repos\projectkudu_kudu\Kudu.Core\Tracing\XmlTracer.cs,ShouldTrace,The following statement contains a magic number: if (statusCode != 200)              {                  return true;              }
Magic Number,Kudu.Core.Tracing,XmlTracer,C:\repos\projectkudu_kudu\Kudu.Core\Tracing\XmlTracer.cs,EnsureMaxXmlFiles,The following statement contains a magic number: try              {                  ITracer tracer = this;                  using (tracer.Step("Cleanup Xml Logs"))                  {                      try                      {                          var files = FileSystemHelpers.GetFiles(_path' "*.xml");                          if (files.Length < MaxXmlFiles)                          {                              return;                          }                            var toCleanup = files.Length - (MaxXmlFiles * 80) / 100;                          var attribs = new Dictionary<string' string>                          {                              { "totalFiles"' files.Length.ToString() }'                              { "totalCleanup"' toCleanup.ToString() }                          };                          using (tracer.Step("Cleanup Infos"' attribs))                          {                              foreach (var file in files.OrderBy(n => n).Take(toCleanup))                              {                                  FileSystemHelpers.DeleteFileSafe(file);                              }                          }                      }                      catch (Exception ex)                      {                          tracer.TraceError(ex);                      }                  }              }              finally              {                  _cleanupPending = false;              }
Magic Number,Kudu.Core.Tracing,XmlTracer,C:\repos\projectkudu_kudu\Kudu.Core\Tracing\XmlTracer.cs,EnsureMaxXmlFiles,The following statement contains a magic number: try              {                  ITracer tracer = this;                  using (tracer.Step("Cleanup Xml Logs"))                  {                      try                      {                          var files = FileSystemHelpers.GetFiles(_path' "*.xml");                          if (files.Length < MaxXmlFiles)                          {                              return;                          }                            var toCleanup = files.Length - (MaxXmlFiles * 80) / 100;                          var attribs = new Dictionary<string' string>                          {                              { "totalFiles"' files.Length.ToString() }'                              { "totalCleanup"' toCleanup.ToString() }                          };                          using (tracer.Step("Cleanup Infos"' attribs))                          {                              foreach (var file in files.OrderBy(n => n).Take(toCleanup))                              {                                  FileSystemHelpers.DeleteFileSafe(file);                              }                          }                      }                      catch (Exception ex)                      {                          tracer.TraceError(ex);                      }                  }              }              finally              {                  _cleanupPending = false;              }
Magic Number,Kudu.Core.Tracing,XmlTracer,C:\repos\projectkudu_kudu\Kudu.Core\Tracing\XmlTracer.cs,GenerateFileName,The following statement contains a magic number: strb.AppendFormat("{0}_{1}_{2:000}"'                  info.StartTime.ToString("yyyy-MM-ddTHH-mm-ss")'                  InstanceIdUtility.GetShortInstanceId()'                  Interlocked.Increment(ref _salt) % 1000);
Magic Number,Kudu.Core.Tracing,XmlTracer,C:\repos\projectkudu_kudu\Kudu.Core\Tracing\XmlTracer.cs,WriteUnexpectedException,The following statement contains a magic number: try              {                  var strb = new StringBuilder();                  strb.AppendFormat("{0}_{1}_{2:000}_UnexpectedException.xml"'                      DateTime.UtcNow.ToString("yyyy-MM-ddTHH-mm-ss")'                      InstanceIdUtility.GetShortInstanceId()'                      Interlocked.Increment(ref _salt) % 1000);                    FileSystemHelpers.AppendAllTextToFile(                      Path.Combine(_path' strb.ToString())'                      String.Format("<exception>{0}</exception>"' XmlUtility.EscapeXmlText(ex.ToString())));              }              catch              {                  // no-op              }
Magic Number,Kudu.Core,Environment,C:\repos\projectkudu_kudu\Kudu.Core\Environment.cs,GetFreeSpaceHtml,The following statement contains a magic number: try              {                  ulong freeBytes;                  ulong totalBytes;                  GetDiskFreeSpace(path' out freeBytes' out totalBytes);                    var usage = Math.Round(((totalBytes - freeBytes) * 100.0) / totalBytes);                  var color = usage > 97 ? "red" : (usage > 90 ? "orange" : "green");                  return String.Format(CultureInfo.InvariantCulture' "<span style='color:{0}'>{1:#'##0} MB total; {2:#'##0} MB free</span>"' color' totalBytes / (1024 * 1024)' freeBytes / (1024 * 1024));              }              catch (Exception ex)              {                  return ex.ToString();              }
Magic Number,Kudu.Core,Environment,C:\repos\projectkudu_kudu\Kudu.Core\Environment.cs,GetFreeSpaceHtml,The following statement contains a magic number: try              {                  ulong freeBytes;                  ulong totalBytes;                  GetDiskFreeSpace(path' out freeBytes' out totalBytes);                    var usage = Math.Round(((totalBytes - freeBytes) * 100.0) / totalBytes);                  var color = usage > 97 ? "red" : (usage > 90 ? "orange" : "green");                  return String.Format(CultureInfo.InvariantCulture' "<span style='color:{0}'>{1:#'##0} MB total; {2:#'##0} MB free</span>"' color' totalBytes / (1024 * 1024)' freeBytes / (1024 * 1024));              }              catch (Exception ex)              {                  return ex.ToString();              }
Magic Number,Kudu.Core,Environment,C:\repos\projectkudu_kudu\Kudu.Core\Environment.cs,GetFreeSpaceHtml,The following statement contains a magic number: try              {                  ulong freeBytes;                  ulong totalBytes;                  GetDiskFreeSpace(path' out freeBytes' out totalBytes);                    var usage = Math.Round(((totalBytes - freeBytes) * 100.0) / totalBytes);                  var color = usage > 97 ? "red" : (usage > 90 ? "orange" : "green");                  return String.Format(CultureInfo.InvariantCulture' "<span style='color:{0}'>{1:#'##0} MB total; {2:#'##0} MB free</span>"' color' totalBytes / (1024 * 1024)' freeBytes / (1024 * 1024));              }              catch (Exception ex)              {                  return ex.ToString();              }
Magic Number,Kudu.Core,Environment,C:\repos\projectkudu_kudu\Kudu.Core\Environment.cs,GetFreeSpaceHtml,The following statement contains a magic number: try              {                  ulong freeBytes;                  ulong totalBytes;                  GetDiskFreeSpace(path' out freeBytes' out totalBytes);                    var usage = Math.Round(((totalBytes - freeBytes) * 100.0) / totalBytes);                  var color = usage > 97 ? "red" : (usage > 90 ? "orange" : "green");                  return String.Format(CultureInfo.InvariantCulture' "<span style='color:{0}'>{1:#'##0} MB total; {2:#'##0} MB free</span>"' color' totalBytes / (1024 * 1024)' freeBytes / (1024 * 1024));              }              catch (Exception ex)              {                  return ex.ToString();              }
Magic Number,Kudu.Core,Environment,C:\repos\projectkudu_kudu\Kudu.Core\Environment.cs,GetFreeSpaceHtml,The following statement contains a magic number: try              {                  ulong freeBytes;                  ulong totalBytes;                  GetDiskFreeSpace(path' out freeBytes' out totalBytes);                    var usage = Math.Round(((totalBytes - freeBytes) * 100.0) / totalBytes);                  var color = usage > 97 ? "red" : (usage > 90 ? "orange" : "green");                  return String.Format(CultureInfo.InvariantCulture' "<span style='color:{0}'>{1:#'##0} MB total; {2:#'##0} MB free</span>"' color' totalBytes / (1024 * 1024)' freeBytes / (1024 * 1024));              }              catch (Exception ex)              {                  return ex.ToString();              }
Magic Number,Kudu.Core,Environment,C:\repos\projectkudu_kudu\Kudu.Core\Environment.cs,GetFreeSpaceHtml,The following statement contains a magic number: try              {                  ulong freeBytes;                  ulong totalBytes;                  GetDiskFreeSpace(path' out freeBytes' out totalBytes);                    var usage = Math.Round(((totalBytes - freeBytes) * 100.0) / totalBytes);                  var color = usage > 97 ? "red" : (usage > 90 ? "orange" : "green");                  return String.Format(CultureInfo.InvariantCulture' "<span style='color:{0}'>{1:#'##0} MB total; {2:#'##0} MB free</span>"' color' totalBytes / (1024 * 1024)' freeBytes / (1024 * 1024));              }              catch (Exception ex)              {                  return ex.ToString();              }
Magic Number,Kudu.Core,Environment,C:\repos\projectkudu_kudu\Kudu.Core\Environment.cs,GetFreeSpaceHtml,The following statement contains a magic number: try              {                  ulong freeBytes;                  ulong totalBytes;                  GetDiskFreeSpace(path' out freeBytes' out totalBytes);                    var usage = Math.Round(((totalBytes - freeBytes) * 100.0) / totalBytes);                  var color = usage > 97 ? "red" : (usage > 90 ? "orange" : "green");                  return String.Format(CultureInfo.InvariantCulture' "<span style='color:{0}'>{1:#'##0} MB total; {2:#'##0} MB free</span>"' color' totalBytes / (1024 * 1024)' freeBytes / (1024 * 1024));              }              catch (Exception ex)              {                  return ex.ToString();              }
Magic Number,Kudu.Core.SourceControl,HgRepository,C:\repos\projectkudu_kudu\Kudu.Core\SourceControl\Hg\HgRepository.cs,GetChanges,The following statement contains a magic number: const int bufferSize = 10;
Magic Number,Kudu.Core.SSHKey,PEMEncoding,C:\repos\projectkudu_kudu\Kudu.Core\SSHKey\PEMEncoder.cs,GetString,The following statement contains a magic number: List<byte[]> seq = new List<byte[]>(9);
Magic Number,Kudu.Core.SSHKey,PEMEncoding,C:\repos\projectkudu_kudu\Kudu.Core\SSHKey\PEMEncoder.cs,WriteLength,The following statement contains a magic number: if (length > 127)              {                  int size = 1;                  uint val = (uint)length;                    while ((val >>= 8) != 0)                  {                      size++;                  }                    mem.WriteByte((byte)(size | 0x80));                    for (int i = (size - 1) * 8; i >= 0; i -= 8)                  {                      mem.WriteByte((byte)(length >> i));                  }              }              else              {                  mem.WriteByte((byte)length);              }
Magic Number,Kudu.Core.SSHKey,PEMEncoding,C:\repos\projectkudu_kudu\Kudu.Core\SSHKey\PEMEncoder.cs,WriteLength,The following statement contains a magic number: if (length > 127)              {                  int size = 1;                  uint val = (uint)length;                    while ((val >>= 8) != 0)                  {                      size++;                  }                    mem.WriteByte((byte)(size | 0x80));                    for (int i = (size - 1) * 8; i >= 0; i -= 8)                  {                      mem.WriteByte((byte)(length >> i));                  }              }              else              {                  mem.WriteByte((byte)length);              }
Magic Number,Kudu.Core.SSHKey,PEMEncoding,C:\repos\projectkudu_kudu\Kudu.Core\SSHKey\PEMEncoder.cs,WriteLength,The following statement contains a magic number: if (length > 127)              {                  int size = 1;                  uint val = (uint)length;                    while ((val >>= 8) != 0)                  {                      size++;                  }                    mem.WriteByte((byte)(size | 0x80));                    for (int i = (size - 1) * 8; i >= 0; i -= 8)                  {                      mem.WriteByte((byte)(length >> i));                  }              }              else              {                  mem.WriteByte((byte)length);              }
Magic Number,Kudu.Core.SSHKey,PEMEncoding,C:\repos\projectkudu_kudu\Kudu.Core\SSHKey\PEMEncoder.cs,WriteLength,The following statement contains a magic number: if (length > 127)              {                  int size = 1;                  uint val = (uint)length;                    while ((val >>= 8) != 0)                  {                      size++;                  }                    mem.WriteByte((byte)(size | 0x80));                    for (int i = (size - 1) * 8; i >= 0; i -= 8)                  {                      mem.WriteByte((byte)(length >> i));                  }              }              else              {                  mem.WriteByte((byte)length);              }
Magic Number,Kudu.Core.SSHKey,SSHEncoding,C:\repos\projectkudu_kudu\Kudu.Core\SSHKey\SSHEncoding.cs,GetString,The following statement contains a magic number: int length = sshHeader.Length + 4 + param.Exponent.Length + 4 + param.Modulus.Length;
Magic Number,Kudu.Core.SSHKey,SSHEncoding,C:\repos\projectkudu_kudu\Kudu.Core\SSHKey\SSHEncoding.cs,GetString,The following statement contains a magic number: int length = sshHeader.Length + 4 + param.Exponent.Length + 4 + param.Modulus.Length;
Magic Number,Kudu.Core.SSHKey,SSHEncoding,C:\repos\projectkudu_kudu\Kudu.Core\SSHKey\SSHEncoding.cs,SshEncodeBuffer,The following statement contains a magic number: int index = 4;
Magic Number,Kudu.Core.SSHKey,SSHEncoding,C:\repos\projectkudu_kudu\Kudu.Core\SSHKey\SSHEncoding.cs,SshEncodeBuffer,The following statement contains a magic number: if ((input[0] & 0x80) != 0x00)              {                  adjustedLen++;                  encoded[offset + 4] = 0;                  index = 5;              }
Magic Number,Kudu.Core.SSHKey,SSHEncoding,C:\repos\projectkudu_kudu\Kudu.Core\SSHKey\SSHEncoding.cs,SshEncodeBuffer,The following statement contains a magic number: if ((input[0] & 0x80) != 0x00)              {                  adjustedLen++;                  encoded[offset + 4] = 0;                  index = 5;              }
Magic Number,Kudu.Core.SSHKey,SSHEncoding,C:\repos\projectkudu_kudu\Kudu.Core\SSHKey\SSHEncoding.cs,SshEncodeBuffer,The following statement contains a magic number: encoded[offset] = (byte)(adjustedLen >> 24);
Magic Number,Kudu.Core.SSHKey,SSHEncoding,C:\repos\projectkudu_kudu\Kudu.Core\SSHKey\SSHEncoding.cs,SshEncodeBuffer,The following statement contains a magic number: encoded[offset + 1] = (byte)(adjustedLen >> 16);
Magic Number,Kudu.Core.SSHKey,SSHEncoding,C:\repos\projectkudu_kudu\Kudu.Core\SSHKey\SSHEncoding.cs,SshEncodeBuffer,The following statement contains a magic number: encoded[offset + 2] = (byte)(adjustedLen >> 8);
Magic Number,Kudu.Core.SSHKey,SSHEncoding,C:\repos\projectkudu_kudu\Kudu.Core\SSHKey\SSHEncoding.cs,SshEncodeBuffer,The following statement contains a magic number: encoded[offset + 2] = (byte)(adjustedLen >> 8);
Magic Number,Kudu.Core.SSHKey,SSHEncoding,C:\repos\projectkudu_kudu\Kudu.Core\SSHKey\SSHEncoding.cs,SshEncodeBuffer,The following statement contains a magic number: encoded[offset + 3] = (byte)adjustedLen;
