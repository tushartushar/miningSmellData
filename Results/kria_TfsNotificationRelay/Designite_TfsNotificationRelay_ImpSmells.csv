Implementation smell,Namespace,Class,File,Method,Description
Long Method,DevCore.TfsNotificationRelay.EventHandlers,DiscussionsHandler,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\EventHandlers\DiscussionsHandler.cs,CreateNotifications,The method has 141 lines of code.
Complex Method,DevCore.TfsNotificationRelay,Build2Converter,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\Build2Converter.cs,ConvertBuildStatus,Cyclomatic complexity of the method is 15
Complex Method,DevCore.TfsNotificationRelay,Build2Converter,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\Build2Converter.cs,ConvertBuildResult,Cyclomatic complexity of the method is 13
Complex Method,DevCore.TfsNotificationRelay,Build2Converter,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\Build2Converter.cs,ConvertReason,Cyclomatic complexity of the method is 17
Complex Method,DevCore.TfsNotificationRelay,HtmlToText,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\HtmlToText.cs,ConvertTo,Cyclomatic complexity of the method is 20
Complex Method,DevCore.TfsNotificationRelay.EventHandlers,BaseHandler,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\EventHandlers\BaseHandler.cs,ProcessEvent,Cyclomatic complexity of the method is 8
Complex Method,DevCore.TfsNotificationRelay.EventHandlers,DiscussionsHandler,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\EventHandlers\DiscussionsHandler.cs,CreateNotifications,Cyclomatic complexity of the method is 18
Complex Method,DevCore.TfsNotificationRelay.EventHandlers,RepositoryHandler,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\EventHandlers\RepositoryHandler.cs,CreateNotifications,Cyclomatic complexity of the method is 8
Complex Method,DevCore.TfsNotificationRelay.EventHandlers,WorkItemChangedHandler,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\EventHandlers\WorkItemChangedHandler.cs,CreateNotifications,Cyclomatic complexity of the method is 9
Complex Method,DevCore.TfsNotificationRelay.EventHandlers,GitPushHandler,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\EventHandlers\GitPushHandler.cs,CreateNotifications,Cyclomatic complexity of the method is 14
Complex Method,DevCore.TfsNotificationRelay.Notifications,UnifiedField,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\Notifications\WorkItemChangedNotification.cs,UnifiedField,Cyclomatic complexity of the method is 11
Long Parameter List,DevCore.TfsNotificationRelay.EventHandlers,BaseHandler,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\EventHandlers\BaseHandler.cs,ProcessEvent,The method has 6 parameters.
Long Parameter List,DevCore.TfsNotificationRelay.EventHandlers,BaseHandler,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\EventHandlers\BaseHandler.cs,NotifyAsync,The method has 5 parameters.
Long Parameter List,DevCore.TfsNotificationRelay.EventHandlers,GitPushHandler,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\EventHandlers\GitPushHandler.cs,CreateCommitRow,The method has 7 parameters.
Long Parameter List,DevCore.TfsNotificationRelay.Notifications.GitPush,GitPushNotification,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\Notifications\GitPush\GitPushNotification.cs,GitPushNotification,The method has 6 parameters.
Long Statement,DevCore.TfsNotificationRelay,TextHelper,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\TextHelper.cs,FormatWith,The length of the statement  "	Regex r = new Regex (@"(?<start>\{)+(?<property>[\w\.\[\]]+)(?<format>:[^}]+)?(?<end>\})+"' RegexOptions.Compiled | RegexOptions.CultureInvariant | RegexOptions.IgnoreCase); " is 173.
Long Statement,DevCore.TfsNotificationRelay,TextHelper,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\TextHelper.cs,FormatWith,The length of the statement  "		return new string ('{'' startGroup.Captures.Count) + (values.Count - 1) + formatGroup.Value + new string ('}'' endGroup.Captures.Count); " is 136.
Long Statement,DevCore.TfsNotificationRelay.EventHandlers,BaseHandler,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\EventHandlers\BaseHandler.cs,ProcessEvent,The length of the statement  "	requestContext.Trace (0' TraceLevel.Info' Constants.TraceArea' "BaseHandler"' "ProcessEvent: notificationType={0}' notificationEventArgs={1}"' notificationType' notificationEventArgs); " is 184.
Long Statement,DevCore.TfsNotificationRelay.EventHandlers,BaseHandler,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\EventHandlers\BaseHandler.cs,ProcessEvent,The length of the statement  "		requestContext.Trace (0' TraceLevel.Info' Constants.TraceArea' "BaseHandler"' "Time spent in ProcessEvent: {0}"' timer.Elapsed); " is 128.
Long Statement,DevCore.TfsNotificationRelay.EventHandlers,BaseHandler,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\EventHandlers\BaseHandler.cs,GetUserTeamsByProjectUri,The length of the statement  "	var teamNames = projectTeams.Join (userTeams' pt => pt.Identity.Descriptor' ut => ut.Identity.Descriptor' (pt' ut) => pt.Name' IdentityDescriptorComparer.Instance); " is 164.
Long Statement,DevCore.TfsNotificationRelay.EventHandlers,BuildCompletionHandler,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\EventHandlers\BuildCompletionHandler.cs,CreateNotifications,The length of the statement  "		string buildUrl = string.Format ("{0}/{1}/{2}/_build#_a=summary&buildId={3}"' locationService.GetAccessMapping (requestContext' "PublicAccessMapping").AccessPoint' requestContext.ServiceHost.Name' build.TeamProject' qb.BuildId); " is 228.
Long Statement,DevCore.TfsNotificationRelay.EventHandlers,BuildQualityChangedHandler,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\EventHandlers\BuildQualityChangedHandler.cs,CreateNotifications,The length of the statement  "		string buildUrl = String.Format ("{0}/{1}/{2}/_build#_a=summary&buildId={3}"' locationService.GetAccessMapping (requestContext' "PublicAccessMapping").AccessPoint' requestContext.ServiceHost.Name' build.TeamProject' qb.BuildId); " is 228.
Long Statement,DevCore.TfsNotificationRelay.EventHandlers,CheckinHandler,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\EventHandlers\CheckinHandler.cs,CreateNotifications,The length of the statement  "	string baseUrl = String.Format ("{0}/{1}/"' locationService.GetAccessMapping (requestContext' "PublicAccessMapping").AccessPoint' requestContext.ServiceHost.Name); " is 163.
Long Statement,DevCore.TfsNotificationRelay.EventHandlers,DiscussionsHandler,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\EventHandlers\DiscussionsHandler.cs,CreateNotifications,The length of the statement  "			using (ITfsGitRepository repository = repositoryService.FindRepositoryById (requestContext' pullRequest.RepositoryId)) { " is 120.
Long Statement,DevCore.TfsNotificationRelay.EventHandlers,DiscussionsHandler,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\EventHandlers\DiscussionsHandler.cs,CreateNotifications,The length of the statement  "			string baseUrl = String.Format ("{0}/{1}/"' locationService.GetAccessMapping (requestContext' "PublicAccessMapping").AccessPoint' requestContext.ServiceHost.Name); " is 163.
Long Statement,DevCore.TfsNotificationRelay.EventHandlers,DiscussionsHandler,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\EventHandlers\DiscussionsHandler.cs,CreateNotifications,The length of the statement  "			if (thread.Properties != null && thread.Properties.TryGetValue<string> ("Microsoft.TeamFoundation.Discussion.ItemPath"' out itemPath)) { " is 136.
Long Statement,DevCore.TfsNotificationRelay.EventHandlers,DiscussionsHandler,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\EventHandlers\DiscussionsHandler.cs,CreateNotifications,The length of the statement  "				changesetUrl += string.Format ("#path={0}&discussionId={1}&_a=contents"' Uri.EscapeDataString (itemPath)' discussionId); " is 120.
Long Statement,DevCore.TfsNotificationRelay.EventHandlers,PullRequestCreatedHandler,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\EventHandlers\PullRequestCreatedHandler.cs,CreateNotifications,The length of the statement  "	var identity = identityService.ReadIdentity (requestContext' IdentitySearchFactor.Identifier' ev.Creator.Descriptor.Identifier); " is 128.
Long Statement,DevCore.TfsNotificationRelay.EventHandlers,PullRequestCreatedHandler,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\EventHandlers\PullRequestCreatedHandler.cs,CreateNotifications,The length of the statement  "			var reviewers = identityService.ReadIdentities (requestContext' pullRequest.Reviewers.Select (r => r.Reviewer).ToArray ()); " is 123.
Long Statement,DevCore.TfsNotificationRelay.EventHandlers,PullRequestReviewerVoteHandler,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\EventHandlers\PullRequestReviewerVoteHandler.cs,CreateNotifications,The length of the statement  "	var identity = identityService.ReadIdentity (requestContext' IdentitySearchFactor.Identifier' ev.Reviewer.Descriptor.Identifier); " is 129.
Long Statement,DevCore.TfsNotificationRelay.EventHandlers,PullRequestReviewerVoteHandler,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\EventHandlers\PullRequestReviewerVoteHandler.cs,CreateNotifications,The length of the statement  "			var reviewers = identityService.ReadIdentities (requestContext' pullRequest.Reviewers.Select (r => r.Reviewer).ToArray ()); " is 123.
Long Statement,DevCore.TfsNotificationRelay.EventHandlers,PullRequestStatusUpdateHandler,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\EventHandlers\PullRequestStatusUpdateHandler.cs,CreateNotifications,The length of the statement  "	var identity = identityService.ReadIdentity (requestContext' IdentitySearchFactor.Identifier' ev.Updater.Descriptor.Identifier); " is 128.
Long Statement,DevCore.TfsNotificationRelay.EventHandlers,PullRequestStatusUpdateHandler,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\EventHandlers\PullRequestStatusUpdateHandler.cs,CreateNotifications,The length of the statement  "			var reviewers = identityService.ReadIdentities (requestContext' pullRequest.Reviewers.Select (r => r.Reviewer).ToArray ()); " is 123.
Long Statement,DevCore.TfsNotificationRelay.EventHandlers,RepositoryHandler,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\EventHandlers\RepositoryHandler.cs,CreateNotifications,The length of the statement  "	string baseUrl = String.Format ("{0}/{1}/"' locationService.GetAccessMapping (requestContext' "PublicAccessMapping").AccessPoint' requestContext.ServiceHost.Name); " is 163.
Long Statement,DevCore.TfsNotificationRelay.EventHandlers,RepositoryHandler,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\EventHandlers\RepositoryHandler.cs,CreateNotifications,The length of the statement  "		notification.TeamNames = GetUserTeamsByProjectUri (requestContext' gitNotification.TeamProjectUri' identity.Descriptor); " is 120.
Long Statement,DevCore.TfsNotificationRelay.EventHandlers,RepositoryHandler,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\EventHandlers\RepositoryHandler.cs,CreateNotifications,The length of the statement  "		using (ITfsGitRepository repository = repositoryService.FindRepositoryById (requestContext' gitNotification.RepositoryId)) { " is 124.
Long Statement,DevCore.TfsNotificationRelay.EventHandlers,RepositoryHandler,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\EventHandlers\RepositoryHandler.cs,CreateNotifications,The length of the statement  "		using (ITfsGitRepository repository = repositoryService.FindRepositoryById (requestContext' gitNotification.RepositoryId)) { " is 124.
Long Statement,DevCore.TfsNotificationRelay.EventHandlers,RepositoryHandler,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\EventHandlers\RepositoryHandler.cs,CreateNotifications,The length of the statement  "		var repoInfo = repositoryService.QueryDeletedRepositories (requestContext' gitNotification.TeamProjectUri).Single (r => r.RepositoryId == gitNotification.RepositoryId); " is 168.
Long Statement,DevCore.TfsNotificationRelay.EventHandlers,RepositoryHandler,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\EventHandlers\RepositoryHandler.cs,CreateNotifications,The length of the statement  "		notification.TeamNames = GetUserTeamsByProjectUri (requestContext' gitNotification.TeamProjectUri' identity.Descriptor); " is 120.
Long Statement,DevCore.TfsNotificationRelay.EventHandlers,ProjectCreatedHandler,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\EventHandlers\ProjectCreatedHandler.cs,CreateNotifications,The length of the statement  "	string projectUrl = String.Format ("{0}/{1}/{2}"' locationService.GetAccessMapping (requestContext' "PublicAccessMapping").AccessPoint' requestContext.ServiceHost.Name' ev.Name); " is 178.
Long Statement,DevCore.TfsNotificationRelay.EventHandlers,WorkItemChangedHandler,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\EventHandlers\WorkItemChangedHandler.cs,CreateNotifications,The length of the statement  "	var comment = ev.TextFields.FirstOrDefault (f => f.ReferenceName == "System.History" && !string.IsNullOrEmpty (f.Value)); " is 121.
Long Statement,DevCore.TfsNotificationRelay.EventHandlers,GitPushHandler,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\EventHandlers\GitPushHandler.cs,CreateNotifications,The length of the statement  "	var identity = identityService.ReadIdentity (requestContext' IdentitySearchFactor.Identifier' pushNotification.Pusher.Identifier); " is 130.
Long Statement,DevCore.TfsNotificationRelay.EventHandlers,GitPushHandler,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\EventHandlers\GitPushHandler.cs,CreateNotifications,The length of the statement  "	using (ITfsGitRepository repository = repositoryService.FindRepositoryById (requestContext' pushNotification.RepositoryId)) { " is 125.
Long Statement,DevCore.TfsNotificationRelay.EventHandlers,GitPushHandler,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\EventHandlers\GitPushHandler.cs,CreateNotifications,The length of the statement  "		var notification = new GitPushNotification (requestContext.ServiceHost.Name' pushRow.ProjectName' pushNotification.AuthenticatedUserName' pushRow.RepoName' teamNames' pushNotification.RefUpdateResults.Where (r => r.Succeeded).Select (r => new GitRef (r))); " is 256.
Long Statement,DevCore.TfsNotificationRelay.EventHandlers,GitPushHandler,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\EventHandlers\GitPushHandler.cs,CreateNotifications,The length of the statement  "			notification.Add (CreateCommitRow (requestContext' commitService' repository' gitCommit' CommitRowType.Commit' pushNotification' refLookup)); " is 141.
Long Statement,DevCore.TfsNotificationRelay.EventHandlers,GitPushHandler,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\EventHandlers\GitPushHandler.cs,CreateNotifications,The length of the statement  "		foreach (TfsGitCommit gitCommit in oldCommits.OrderByDescending (c => c.GetCommitter ().Time).TakeWhile (c => notification.Count < maxLines)) { " is 143.
Long Statement,DevCore.TfsNotificationRelay.EventHandlers,GitPushHandler,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\EventHandlers\GitPushHandler.cs,CreateNotifications,The length of the statement  "			notification.Add (CreateCommitRow (requestContext' commitService' repository' gitCommit' CommitRowType.RefUpdate' pushNotification' refLookup)); " is 144.
Long Statement,DevCore.TfsNotificationRelay.Notifications,ChangesetCommentNotification,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\Notifications\ChangesetCommentNotification.cs,GetRuleMatch,The length of the statement  "	var rule = eventRules.FirstOrDefault (r => r.Events.HasFlag (TfsEvents.ChangesetComment) && collection.IsMatchOrNoPattern (r.TeamProjectCollection) && ProjectName.IsMatchOrNoPattern (r.TeamProject) && TeamNames.IsMatchOrNoPattern (r.TeamName) && SourcePath.IsMatchOrNoPattern (r.SourcePath) && Comment.IsMatchOrNoPattern (r.Text)); " is 331.
Long Statement,DevCore.TfsNotificationRelay.Notifications,CommitCommentNotification,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\Notifications\CommitCommentNotification.cs,GetRuleMatch,The length of the statement  "	var rule = eventRules.FirstOrDefault (r => r.Events.HasFlag (TfsEvents.GitCommitComment) && collection.IsMatchOrNoPattern (r.TeamProjectCollection) && ProjectName.IsMatchOrNoPattern (r.TeamProject) && RepoName.IsMatchOrNoPattern (r.GitRepository) && TeamNames.IsMatchOrNoPattern (r.TeamName) && Comment.IsMatchOrNoPattern (r.Text)); " is 332.
Long Statement,DevCore.TfsNotificationRelay.Notifications,PullRequestCommentNotification,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\Notifications\PullRequestCommentNotification.cs,GetRuleMatch,The length of the statement  "	var rule = GetRulesMatch (collection' eventRules).FirstOrDefault (r => r.Events.HasFlag (TfsEvents.PullRequestComment) && Comment.IsMatchOrNoPattern (r.Text)); " is 159.
Long Statement,DevCore.TfsNotificationRelay.Notifications,PullRequestNotification,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\Notifications\PullRequestNotification.cs,GetRulesMatch,The length of the statement  "	var rules = eventRules.Where (r => collection.IsMatchOrNoPattern (r.TeamProjectCollection) && ProjectName.IsMatchOrNoPattern (r.TeamProject) && TeamNames.IsMatchOrNoPattern (r.TeamName) && RepoName.IsMatchOrNoPattern (r.GitRepository) && TargetBranch.Name.IsMatchOrNoPattern (r.GitBranch)); " is 290.
Long Statement,DevCore.TfsNotificationRelay.Notifications,ReleaseEnvironmentCompletedNotification,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\Notifications\ReleaseEnvironmentCompletedNotification.cs,GetRuleMatch,The length of the statement  "	var rule = GetRulesMatch (collection' eventRules).FirstOrDefault (r => r.Events.HasFlag (TfsEvents.ReleaseEnvironmentCompleted) && EnvironmentName.IsMatchOrNoPattern (r.Environment) && (!r.EnvironmentStatusesEnums.Any () || r.EnvironmentStatusesEnums.Contains (EnvironmentStatus))); " is 282.
Long Statement,DevCore.TfsNotificationRelay.Notifications,ReleaseNotification,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\Notifications\ReleaseNotification.cs,GetRulesMatch,The length of the statement  "	var rules = eventRules.Where (r => r.Events.HasFlag (TfsEvents.ReleaseCreated) && collection.IsMatchOrNoPattern (r.TeamProjectCollection) && ProjectName.IsMatchOrNoPattern (r.TeamProject) && TeamNames.IsMatchOrNoPattern (r.TeamName) && ReleaseDefinition.IsMatchOrNoPattern (r.ReleaseDefinition)); " is 296.
Long Statement,DevCore.TfsNotificationRelay.Notifications,BuildNotification,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\Notifications\BuildNotification.cs,FormatBuildDuration,The length of the statement  "	return string.IsNullOrEmpty (text.TimeSpanFormat) ? duration.ToString (@"hh\:mm\:ss") : duration.ToString (text.TimeSpanFormat); " is 128.
Long Statement,DevCore.TfsNotificationRelay.Notifications,BuildNotification,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\Notifications\BuildNotification.cs,GetRuleMatch,The length of the statement  "	var rule = eventRules.FirstOrDefault (r => r.Events.HasFlag (TfsEvents.BuildCompleted) && (r.BuildStatuses & BuildStatus) != 0 && collection.IsMatchOrNoPattern (r.TeamProjectCollection) && ProjectName.IsMatchOrNoPattern (r.TeamProject) && TeamNames.IsMatchOrNoPattern (r.TeamName) && BuildDefinition.IsMatchOrNoPattern (r.BuildDefinition)); " is 340.
Long Statement,DevCore.TfsNotificationRelay.Notifications,BuildQualityChangedNotification,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\Notifications\BuildQualityChangedNotification.cs,GetRuleMatch,The length of the statement  "	var rule = eventRules.FirstOrDefault (r => r.Events.HasFlag (TfsEvents.BuildQualityChanged) && (r.BuildStatuses & BuildStatus) != 0 && collection.IsMatchOrNoPattern (r.TeamProjectCollection) && ProjectName.IsMatchOrNoPattern (r.TeamProject) && TeamNames.IsMatchOrNoPattern (r.TeamName) && BuildDefinition.IsMatchOrNoPattern (r.BuildDefinition)); " is 345.
Long Statement,DevCore.TfsNotificationRelay.Notifications,CheckinNotification,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\Notifications\CheckinNotification.cs,GetRuleMatch,The length of the statement  "	var rule = eventRules.FirstOrDefault (r => r.Events.HasFlag (TfsEvents.Checkin) && collection.IsMatchOrNoPattern (r.TeamProjectCollection) && Projects.Keys.IsMatchOrNoPattern (r.TeamProject) && TeamNames.IsMatchOrNoPattern (r.TeamName) && SubmittedItems.IsMatchOrNoPattern (r.SourcePath) && Comment.IsMatchOrNoPattern (r.Text)); " is 328.
Long Statement,DevCore.TfsNotificationRelay.Notifications,ProjectCreatedNotification,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\Notifications\ProjectCreatedNotification.cs,GetRuleMatch,The length of the statement  "	var rule = eventRules.FirstOrDefault (r => r.Events.HasFlag (TfsEvents.ProjectCreated) && collection.IsMatchOrNoPattern (r.TeamProjectCollection) && ProjectName.IsMatchOrNoPattern (r.TeamProject)); " is 197.
Long Statement,DevCore.TfsNotificationRelay.Notifications,ProjectDeletedNotification,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\Notifications\ProjectDeletedNotification.cs,GetRuleMatch,The length of the statement  "	var rule = eventRules.FirstOrDefault (r => r.Events.HasFlag (TfsEvents.ProjectDeleted) && collection.IsMatchOrNoPattern (r.TeamProjectCollection)); " is 147.
Long Statement,DevCore.TfsNotificationRelay.Notifications,PullRequestCreatedNotification,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\Notifications\PullRequestCreatedNotification.cs,GetRuleMatch,The length of the statement  "	var rule = GetRulesMatch (collection' eventRules).FirstOrDefault (r => r.Events.HasFlag (TfsEvents.PullRequestCreated)); " is 120.
Long Statement,DevCore.TfsNotificationRelay.Notifications,PullRequestReviewerVoteNotification,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\Notifications\PullRequestReviewerVoteNotification.cs,GetRuleMatch,The length of the statement  "	var rule = GetRulesMatch (collection' eventRules).FirstOrDefault (r => r.Events.HasFlag (TfsEvents.PullRequestReviewerVote)); " is 125.
Long Statement,DevCore.TfsNotificationRelay.Notifications,PullRequestStatusUpdateNotification,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\Notifications\PullRequestStatusUpdateNotification.cs,GetRuleMatch,The length of the statement  "	var rule = GetRulesMatch (collection' eventRules).FirstOrDefault (r => r.Events.HasFlag (TfsEvents.PullRequestStatusUpdate)); " is 125.
Long Statement,DevCore.TfsNotificationRelay.Notifications,RepositoryNotification,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\Notifications\RepositoryNotification.cs,GetRulesMatch,The length of the statement  "	var rules = eventRules.Where (r => collection.IsMatchOrNoPattern (r.TeamProjectCollection) && ProjectName.IsMatchOrNoPattern (r.TeamProject) && TeamNames.IsMatchOrNoPattern (r.TeamName) && RepoName.IsMatchOrNoPattern (r.GitRepository)); " is 236.
Long Statement,DevCore.TfsNotificationRelay.Notifications,WorkItemChangedNotification,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\Notifications\WorkItemChangedNotification.cs,GetRuleMatch,The length of the statement  "	var rule = eventRules.FirstOrDefault (r => (r.Events.HasFlag (TfsEvents.WorkItemCreated) && IsNew || r.Events.HasFlag (TfsEvents.WorkItemChanged) && IsChangedFieldMatchOrNotSet (ChangedFields' r.WorkItemFieldItems)) && collection.IsMatchOrNoPattern (r.TeamProjectCollection) && ProjectName.IsMatchOrNoPattern (r.TeamProject) && TeamNames.IsMatchOrNoPattern (r.TeamName) && WiType.IsMatchOrNoPattern (r.WorkItemType) && AreaPath.IsMatchOrNoPattern (r.AreaPath)); " is 461.
Long Statement,DevCore.TfsNotificationRelay.Notifications,WorkItemCommentNotification,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\Notifications\WorkItemCommentNotification.cs,GetRuleMatch,The length of the statement  "	var rule = eventRules.FirstOrDefault (r => r.Events.HasFlag (TfsEvents.WorkItemComment) && collection.IsMatchOrNoPattern (r.TeamProjectCollection) && ProjectName.IsMatchOrNoPattern (r.TeamProject) && TeamNames.IsMatchOrNoPattern (r.TeamName) && WiType.IsMatchOrNoPattern (r.WorkItemType) && AreaPath.IsMatchOrNoPattern (r.AreaPath) && Comment.IsMatchOrNoPattern (r.Text)); " is 372.
Long Statement,DevCore.TfsNotificationRelay.Notifications.GitPush,CommitRow,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\Notifications\GitPush\CommitRow.cs,ToString,The length of the statement  "	string formattedTime = string.IsNullOrEmpty (text.DateTimeFormat) ? AuthorTime.ToString () : AuthorTime.ToString (text.DateTimeFormat); " is 135.
Long Statement,DevCore.TfsNotificationRelay.Notifications.GitPush,GitPushNotification,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\Notifications\GitPush\GitPushNotification.cs,GetRuleMatch,The length of the statement  "	var rule = eventRules.FirstOrDefault (r => r.Events.HasFlag (TfsEvents.GitPush) && collection.IsMatchOrNoPattern (r.TeamProjectCollection) && _projectName.IsMatchOrNoPattern (r.TeamProject) && _teamNames.IsMatchOrNoPattern (r.TeamName) && _repoName.IsMatchOrNoPattern (r.GitRepository) && (string.IsNullOrEmpty (r.GitBranch) || _refs.Any (n => Regex.IsMatch (n.Name' r.GitBranch))) && (string.IsNullOrEmpty (r.GitTag) || _refs.Any (n => Regex.IsMatch (n.Name' r.GitTag))) && (string.IsNullOrEmpty (r.Text) || this.Any (row => row.IsMatch (r.Text)))); " is 550.
Long Statement,DevCore.TfsNotificationRelay.Notifications.GitPush,RefUpdateRow,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\Notifications\GitPush\RefUpdateRow.cs,ToString,The length of the statement  "	return String.Format ("{0} {1} {2} {3}"' Refs.ToString (text' transform)' text.RefPointer' transform (ObjectType.ToString ())' transform (NewObjectId.ToHexString ())); " is 167.
Magic Number,DevCore.TfsNotificationRelay,Build2Converter,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\Build2Converter.cs,ConvertBuildStatus,The following statement contains a magic number: switch (value) {  case BuildStatus.None:  	return Microsoft.TeamFoundation.Build.Server.BuildStatus.None;  case BuildStatus.InProgress:  	return Microsoft.TeamFoundation.Build.Server.BuildStatus.InProgress;  case BuildStatus.Completed:  	return this.ConvertBuildResult (result);  case (BuildStatus)3:  case (BuildStatus)5:  case (BuildStatus)6:  case (BuildStatus)7:  	break;  case BuildStatus.Cancelling:  	return Microsoft.TeamFoundation.Build.Server.BuildStatus.Stopped;  case BuildStatus.Postponed:  	return Microsoft.TeamFoundation.Build.Server.BuildStatus.NotStarted;  default:  	if (value == BuildStatus.NotStarted) {  		return Microsoft.TeamFoundation.Build.Server.BuildStatus.NotStarted;  	}  	break;  }  
Magic Number,DevCore.TfsNotificationRelay,Build2Converter,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\Build2Converter.cs,ConvertBuildStatus,The following statement contains a magic number: switch (value) {  case BuildStatus.None:  	return Microsoft.TeamFoundation.Build.Server.BuildStatus.None;  case BuildStatus.InProgress:  	return Microsoft.TeamFoundation.Build.Server.BuildStatus.InProgress;  case BuildStatus.Completed:  	return this.ConvertBuildResult (result);  case (BuildStatus)3:  case (BuildStatus)5:  case (BuildStatus)6:  case (BuildStatus)7:  	break;  case BuildStatus.Cancelling:  	return Microsoft.TeamFoundation.Build.Server.BuildStatus.Stopped;  case BuildStatus.Postponed:  	return Microsoft.TeamFoundation.Build.Server.BuildStatus.NotStarted;  default:  	if (value == BuildStatus.NotStarted) {  		return Microsoft.TeamFoundation.Build.Server.BuildStatus.NotStarted;  	}  	break;  }  
Magic Number,DevCore.TfsNotificationRelay,Build2Converter,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\Build2Converter.cs,ConvertBuildStatus,The following statement contains a magic number: switch (value) {  case BuildStatus.None:  	return Microsoft.TeamFoundation.Build.Server.BuildStatus.None;  case BuildStatus.InProgress:  	return Microsoft.TeamFoundation.Build.Server.BuildStatus.InProgress;  case BuildStatus.Completed:  	return this.ConvertBuildResult (result);  case (BuildStatus)3:  case (BuildStatus)5:  case (BuildStatus)6:  case (BuildStatus)7:  	break;  case BuildStatus.Cancelling:  	return Microsoft.TeamFoundation.Build.Server.BuildStatus.Stopped;  case BuildStatus.Postponed:  	return Microsoft.TeamFoundation.Build.Server.BuildStatus.NotStarted;  default:  	if (value == BuildStatus.NotStarted) {  		return Microsoft.TeamFoundation.Build.Server.BuildStatus.NotStarted;  	}  	break;  }  
Magic Number,DevCore.TfsNotificationRelay,Build2Converter,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\Build2Converter.cs,ConvertBuildStatus,The following statement contains a magic number: switch (value) {  case BuildStatus.None:  	return Microsoft.TeamFoundation.Build.Server.BuildStatus.None;  case BuildStatus.InProgress:  	return Microsoft.TeamFoundation.Build.Server.BuildStatus.InProgress;  case BuildStatus.Completed:  	return this.ConvertBuildResult (result);  case (BuildStatus)3:  case (BuildStatus)5:  case (BuildStatus)6:  case (BuildStatus)7:  	break;  case BuildStatus.Cancelling:  	return Microsoft.TeamFoundation.Build.Server.BuildStatus.Stopped;  case BuildStatus.Postponed:  	return Microsoft.TeamFoundation.Build.Server.BuildStatus.NotStarted;  default:  	if (value == BuildStatus.NotStarted) {  		return Microsoft.TeamFoundation.Build.Server.BuildStatus.NotStarted;  	}  	break;  }  
Magic Number,DevCore.TfsNotificationRelay,Build2Converter,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\Build2Converter.cs,ConvertBuildResult,The following statement contains a magic number: switch (value) {  case BuildResult.None:  	return Microsoft.TeamFoundation.Build.Server.BuildStatus.None;  case (BuildResult)1:  case (BuildResult)3:  	break;  case BuildResult.Succeeded:  	return Microsoft.TeamFoundation.Build.Server.BuildStatus.Succeeded;  case BuildResult.PartiallySucceeded:  	return Microsoft.TeamFoundation.Build.Server.BuildStatus.PartiallySucceeded;  default:  	if (value == BuildResult.Failed) {  		return Microsoft.TeamFoundation.Build.Server.BuildStatus.Failed;  	}  	if (value == BuildResult.Canceled) {  		return Microsoft.TeamFoundation.Build.Server.BuildStatus.Stopped;  	}  	break;  }  
Magic Number,DevCore.TfsNotificationRelay,Build2Converter,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\Build2Converter.cs,ConvertReason,The following statement contains a magic number: if (reason <= BuildReason.UserCreated) {  	switch (reason) {  	case BuildReason.None:  		return Microsoft.TeamFoundation.Build.Server.BuildReason.None;  	case BuildReason.Manual:  		return Microsoft.TeamFoundation.Build.Server.BuildReason.Manual;  	case BuildReason.IndividualCI:  		return Microsoft.TeamFoundation.Build.Server.BuildReason.IndividualCI;  	case (BuildReason)3:  	case (BuildReason)5:  	case (BuildReason)6:  	case (BuildReason)7:  		break;  	case BuildReason.BatchedCI:  		return Microsoft.TeamFoundation.Build.Server.BuildReason.BatchedCI;  	case BuildReason.Schedule:  		return Microsoft.TeamFoundation.Build.Server.BuildReason.Schedule;  	default:  		if (reason == BuildReason.UserCreated) {  			return Microsoft.TeamFoundation.Build.Server.BuildReason.UserCreated;  		}  		break;  	}  } else {  	if (reason == BuildReason.ValidateShelveset) {  		return Microsoft.TeamFoundation.Build.Server.BuildReason.ValidateShelveset;  	}  	if (reason == BuildReason.CheckInShelveset) {  		return Microsoft.TeamFoundation.Build.Server.BuildReason.CheckInShelveset;  	}  }  
Magic Number,DevCore.TfsNotificationRelay,Build2Converter,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\Build2Converter.cs,ConvertReason,The following statement contains a magic number: if (reason <= BuildReason.UserCreated) {  	switch (reason) {  	case BuildReason.None:  		return Microsoft.TeamFoundation.Build.Server.BuildReason.None;  	case BuildReason.Manual:  		return Microsoft.TeamFoundation.Build.Server.BuildReason.Manual;  	case BuildReason.IndividualCI:  		return Microsoft.TeamFoundation.Build.Server.BuildReason.IndividualCI;  	case (BuildReason)3:  	case (BuildReason)5:  	case (BuildReason)6:  	case (BuildReason)7:  		break;  	case BuildReason.BatchedCI:  		return Microsoft.TeamFoundation.Build.Server.BuildReason.BatchedCI;  	case BuildReason.Schedule:  		return Microsoft.TeamFoundation.Build.Server.BuildReason.Schedule;  	default:  		if (reason == BuildReason.UserCreated) {  			return Microsoft.TeamFoundation.Build.Server.BuildReason.UserCreated;  		}  		break;  	}  } else {  	if (reason == BuildReason.ValidateShelveset) {  		return Microsoft.TeamFoundation.Build.Server.BuildReason.ValidateShelveset;  	}  	if (reason == BuildReason.CheckInShelveset) {  		return Microsoft.TeamFoundation.Build.Server.BuildReason.CheckInShelveset;  	}  }  
Magic Number,DevCore.TfsNotificationRelay,Build2Converter,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\Build2Converter.cs,ConvertReason,The following statement contains a magic number: if (reason <= BuildReason.UserCreated) {  	switch (reason) {  	case BuildReason.None:  		return Microsoft.TeamFoundation.Build.Server.BuildReason.None;  	case BuildReason.Manual:  		return Microsoft.TeamFoundation.Build.Server.BuildReason.Manual;  	case BuildReason.IndividualCI:  		return Microsoft.TeamFoundation.Build.Server.BuildReason.IndividualCI;  	case (BuildReason)3:  	case (BuildReason)5:  	case (BuildReason)6:  	case (BuildReason)7:  		break;  	case BuildReason.BatchedCI:  		return Microsoft.TeamFoundation.Build.Server.BuildReason.BatchedCI;  	case BuildReason.Schedule:  		return Microsoft.TeamFoundation.Build.Server.BuildReason.Schedule;  	default:  		if (reason == BuildReason.UserCreated) {  			return Microsoft.TeamFoundation.Build.Server.BuildReason.UserCreated;  		}  		break;  	}  } else {  	if (reason == BuildReason.ValidateShelveset) {  		return Microsoft.TeamFoundation.Build.Server.BuildReason.ValidateShelveset;  	}  	if (reason == BuildReason.CheckInShelveset) {  		return Microsoft.TeamFoundation.Build.Server.BuildReason.CheckInShelveset;  	}  }  
Magic Number,DevCore.TfsNotificationRelay,Build2Converter,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\Build2Converter.cs,ConvertReason,The following statement contains a magic number: if (reason <= BuildReason.UserCreated) {  	switch (reason) {  	case BuildReason.None:  		return Microsoft.TeamFoundation.Build.Server.BuildReason.None;  	case BuildReason.Manual:  		return Microsoft.TeamFoundation.Build.Server.BuildReason.Manual;  	case BuildReason.IndividualCI:  		return Microsoft.TeamFoundation.Build.Server.BuildReason.IndividualCI;  	case (BuildReason)3:  	case (BuildReason)5:  	case (BuildReason)6:  	case (BuildReason)7:  		break;  	case BuildReason.BatchedCI:  		return Microsoft.TeamFoundation.Build.Server.BuildReason.BatchedCI;  	case BuildReason.Schedule:  		return Microsoft.TeamFoundation.Build.Server.BuildReason.Schedule;  	default:  		if (reason == BuildReason.UserCreated) {  			return Microsoft.TeamFoundation.Build.Server.BuildReason.UserCreated;  		}  		break;  	}  } else {  	if (reason == BuildReason.ValidateShelveset) {  		return Microsoft.TeamFoundation.Build.Server.BuildReason.ValidateShelveset;  	}  	if (reason == BuildReason.CheckInShelveset) {  		return Microsoft.TeamFoundation.Build.Server.BuildReason.CheckInShelveset;  	}  }  
Magic Number,DevCore.TfsNotificationRelay,Build2Converter,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\Build2Converter.cs,ConvertReason,The following statement contains a magic number: switch (reason) {  case BuildReason.None:  	return Microsoft.TeamFoundation.Build.Server.BuildReason.None;  case BuildReason.Manual:  	return Microsoft.TeamFoundation.Build.Server.BuildReason.Manual;  case BuildReason.IndividualCI:  	return Microsoft.TeamFoundation.Build.Server.BuildReason.IndividualCI;  case (BuildReason)3:  case (BuildReason)5:  case (BuildReason)6:  case (BuildReason)7:  	break;  case BuildReason.BatchedCI:  	return Microsoft.TeamFoundation.Build.Server.BuildReason.BatchedCI;  case BuildReason.Schedule:  	return Microsoft.TeamFoundation.Build.Server.BuildReason.Schedule;  default:  	if (reason == BuildReason.UserCreated) {  		return Microsoft.TeamFoundation.Build.Server.BuildReason.UserCreated;  	}  	break;  }  
Magic Number,DevCore.TfsNotificationRelay,Build2Converter,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\Build2Converter.cs,ConvertReason,The following statement contains a magic number: switch (reason) {  case BuildReason.None:  	return Microsoft.TeamFoundation.Build.Server.BuildReason.None;  case BuildReason.Manual:  	return Microsoft.TeamFoundation.Build.Server.BuildReason.Manual;  case BuildReason.IndividualCI:  	return Microsoft.TeamFoundation.Build.Server.BuildReason.IndividualCI;  case (BuildReason)3:  case (BuildReason)5:  case (BuildReason)6:  case (BuildReason)7:  	break;  case BuildReason.BatchedCI:  	return Microsoft.TeamFoundation.Build.Server.BuildReason.BatchedCI;  case BuildReason.Schedule:  	return Microsoft.TeamFoundation.Build.Server.BuildReason.Schedule;  default:  	if (reason == BuildReason.UserCreated) {  		return Microsoft.TeamFoundation.Build.Server.BuildReason.UserCreated;  	}  	break;  }  
Magic Number,DevCore.TfsNotificationRelay,Build2Converter,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\Build2Converter.cs,ConvertReason,The following statement contains a magic number: switch (reason) {  case BuildReason.None:  	return Microsoft.TeamFoundation.Build.Server.BuildReason.None;  case BuildReason.Manual:  	return Microsoft.TeamFoundation.Build.Server.BuildReason.Manual;  case BuildReason.IndividualCI:  	return Microsoft.TeamFoundation.Build.Server.BuildReason.IndividualCI;  case (BuildReason)3:  case (BuildReason)5:  case (BuildReason)6:  case (BuildReason)7:  	break;  case BuildReason.BatchedCI:  	return Microsoft.TeamFoundation.Build.Server.BuildReason.BatchedCI;  case BuildReason.Schedule:  	return Microsoft.TeamFoundation.Build.Server.BuildReason.Schedule;  default:  	if (reason == BuildReason.UserCreated) {  		return Microsoft.TeamFoundation.Build.Server.BuildReason.UserCreated;  	}  	break;  }  
Magic Number,DevCore.TfsNotificationRelay,Build2Converter,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\Build2Converter.cs,ConvertReason,The following statement contains a magic number: switch (reason) {  case BuildReason.None:  	return Microsoft.TeamFoundation.Build.Server.BuildReason.None;  case BuildReason.Manual:  	return Microsoft.TeamFoundation.Build.Server.BuildReason.Manual;  case BuildReason.IndividualCI:  	return Microsoft.TeamFoundation.Build.Server.BuildReason.IndividualCI;  case (BuildReason)3:  case (BuildReason)5:  case (BuildReason)6:  case (BuildReason)7:  	break;  case BuildReason.BatchedCI:  	return Microsoft.TeamFoundation.Build.Server.BuildReason.BatchedCI;  case BuildReason.Schedule:  	return Microsoft.TeamFoundation.Build.Server.BuildReason.Schedule;  default:  	if (reason == BuildReason.UserCreated) {  		return Microsoft.TeamFoundation.Build.Server.BuildReason.UserCreated;  	}  	break;  }  
Magic Number,DevCore.TfsNotificationRelay,ByteArrayComparer,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\ByteArrayComparer.cs,GetHashCode,The following statement contains a magic number: for (int i = 0; i < x.Length; ++i)  	iHash ^= (x [i] << ((0x03 & i) << 3));  
Magic Number,DevCore.TfsNotificationRelay,ByteArrayComparer,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\ByteArrayComparer.cs,GetHashCode,The following statement contains a magic number: iHash ^= (x [i] << ((0x03 & i) << 3));  
Magic Number,DevCore.TfsNotificationRelay,Utils,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\Utils.cs,ToShortHexString,The following statement contains a magic number: return buffer.ToHexString ().Substring (0' 7);  
Magic Number,DevCore.TfsNotificationRelay.EventHandlers,UserField,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\EventHandlers\UserField.cs,TryParse,The following statement contains a magic number: if (!Guid.TryParse (match.Groups [2].Value' out id))  	return false;  
Magic Number,DevCore.TfsNotificationRelay.Notifications,PullRequestReviewerVoteNotification,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\Notifications\PullRequestReviewerVoteNotification.cs,FormatAction,The following statement contains a magic number: switch (Vote) {  case -10:  	return text.VoteRejected;  case 0:  	return text.VoteRescinded;  case 10:  	return text.VoteApproved;  default:  	return;  }  
Magic Number,DevCore.TfsNotificationRelay.Notifications,PullRequestReviewerVoteNotification,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\Notifications\PullRequestReviewerVoteNotification.cs,FormatAction,The following statement contains a magic number: switch (Vote) {  case -10:  	return text.VoteRejected;  case 0:  	return text.VoteRescinded;  case 10:  	return text.VoteApproved;  default:  	return;  }  
Missing Default,DevCore.TfsNotificationRelay,HtmlToText,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\HtmlToText.cs,ConvertTo,The following switch statement is missing a default case: switch (node.NodeType) {  case HtmlNodeType.Comment:  	// don't output comments  	break;  case HtmlNodeType.Document:  	ConvertContentTo (node' outText);  	break;  case HtmlNodeType.Text:  	// script and style must not be output  	string parentName = node.ParentNode.Name;  	if ((parentName == "script") || (parentName == "style"))  		break;  	// get text  	var html = ((HtmlTextNode)node).Text;  	// is it in fact a special closing node output as text?  	if (HtmlNode.IsOverlappedClosingElement (html))  		break;  	// check the text is meaningful and not a bunch of whitespaces  	if (html.Trim ().Length > 0) {  		outText.Write (HtmlEntity.DeEntitize (html));  	}  	break;  case HtmlNodeType.Element:  	switch (node.Name) {  	case "div":  	case "br":  	case "p":  		// treat paragraphs as crlf  		outText.Write ("\r\n");  		break;  	}  	if (node.HasChildNodes) {  		ConvertContentTo (node' outText);  	}  	break;  }  
Missing Default,DevCore.TfsNotificationRelay,HtmlToText,F:\newReposMay17\kria_TfsNotificationRelay\TfsNotificationRelay\HtmlToText.cs,ConvertTo,The following switch statement is missing a default case: switch (node.Name) {  case "div":  case "br":  case "p":  	// treat paragraphs as crlf  	outText.Write ("\r\n");  	break;  }  
