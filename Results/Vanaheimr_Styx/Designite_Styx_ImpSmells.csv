Implementation smell,Namespace,Class,File,Method,Description
Complex Method,org.GraphDefined.Vanaheimr.Styx.Arrows,Sniper<TOut>,C:\repos\Vanaheimr_Styx\Styx\Arrows\Sniper.cs,StartFireing,Cyclomatic complexity of the method is 8
Complex Method,org.GraphDefined.Vanaheimr.Styx,CSVReaderPipe,C:\repos\Vanaheimr_Styx\Styx\Pipes\IOPipes\CSV\CSVReaderPipe.cs,MoveNext,Cyclomatic complexity of the method is 15
Complex Method,org.GraphDefined.Vanaheimr.Styx,PropertyPipe<TKey;TValue>,C:\repos\Vanaheimr_Styx\Styx\Pipes\Properties\PropertyPipe.cs,MoveNext,Cyclomatic complexity of the method is 8
Complex Method,org.GraphDefined.Vanaheimr.Styx,HasCountPipe<S>,C:\repos\Vanaheimr_Styx\Styx\Pipes\Utils\HasCountPipe.cs,MoveNext,Cyclomatic complexity of the method is 8
Long Parameter List,org.GraphDefined.Vanaheimr.Styx.Arrows,IArrowReceiver,C:\repos\Vanaheimr_Styx\Styx\Arrows\Interfaces\IArrowReceiver.cs,ProcessArrow,The method has 5 parameters. Parameters: Message1' Message2' Message3' Message4' Message5
Long Parameter List,org.GraphDefined.Vanaheimr.Styx.Arrows,IBoomerangReceiver,C:\repos\Vanaheimr_Styx\Styx\Arrows\Interfaces\IBoomerangReceiver.cs,ProcessBoomerang,The method has 5 parameters. Parameters: Message1' Message2' Message3' Message4' Message5
Long Parameter List,org.GraphDefined.Vanaheimr.Styx.Arrows,INotificator,C:\repos\Vanaheimr_Styx\Styx\Arrows\Interfaces\INotificator.cs,SendNotification,The method has 5 parameters. Parameters: Message1' Message2' Message3' Message4' Message5
Long Parameter List,org.GraphDefined.Vanaheimr.Styx.Arrows,IVotingNotificator,C:\repos\Vanaheimr_Styx\Styx\Arrows\Interfaces\IVotingNotificator.cs,SendVoting,The method has 5 parameters. Parameters: Message1' Message2' Message3' Message4' Vote
Long Parameter List,org.GraphDefined.Vanaheimr.Styx.Arrows,IVotingNotificator,C:\repos\Vanaheimr_Styx\Styx\Arrows\Interfaces\IVotingNotificator.cs,SendVoting,The method has 5 parameters. Parameters: Message1' Message2' Message3' Message4' Message5
Long Parameter List,org.GraphDefined.Vanaheimr.Styx.Arrows,IVotingNotificator,C:\repos\Vanaheimr_Styx\Styx\Arrows\Interfaces\IVotingNotificator.cs,SendVoting,The method has 6 parameters. Parameters: Message1' Message2' Message3' Message4' Message5' Vote
Long Parameter List,org.GraphDefined.Vanaheimr.Styx.Arrows,IVotingReceiver,C:\repos\Vanaheimr_Styx\Styx\Arrows\Interfaces\IVotingReceiver.cs,ProcessVoting,The method has 5 parameters. Parameters: Message1' Message2' Message3' Message4' Vote
Long Parameter List,org.GraphDefined.Vanaheimr.Styx.Arrows,IVotingReceiver,C:\repos\Vanaheimr_Styx\Styx\Arrows\Interfaces\IVotingReceiver.cs,ProcessVoting,The method has 6 parameters. Parameters: Message1' Message2' Message3' Message4' Message5' Vote
Long Parameter List,org.GraphDefined.Vanaheimr.Styx.Arrows,Statistics,C:\repos\Vanaheimr_Styx\Styx\Arrows\StatisticsArrow.cs,Statistics,The method has 5 parameters. Parameters: Min' Avg' StdDev' Variance' Max
Long Parameter List,org.GraphDefined.Vanaheimr.Styx,IEndPipeExtentions,C:\repos\Vanaheimr_Styx\Styx\Pipes\Helpers\EndPipeEnumerable.cs,Aggregate,The method has 6 parameters. Parameters: SourcePipe' Prefix' Map' Reduce' Suffix' DefaultValue
Long Parameter List,org.GraphDefined.Vanaheimr.Styx,IEndPipeExtentions,C:\repos\Vanaheimr_Styx\Styx\Pipes\Helpers\EndPipeEnumerable.cs,ToDictionary,The method has 6 parameters. Parameters: SourcePipe' KeySelector' ValueSelector' Comparer' ResetPipeBefore' ResetPipeAfter
Long Parameter List,org.GraphDefined.Vanaheimr.Styx,CSVReaderPipeExtensions,C:\repos\Vanaheimr_Styx\Styx\Pipes\IOPipes\CSV\CSVReaderPipe.cs,ToCSV,The method has 7 parameters. Parameters: SourcePipe' IgnoreLines' Seperators' StringSplitOptions' ExpectedNumberOfColumns' FailOnWrongNumberOfColumns' TrimColumns
Long Parameter List,org.GraphDefined.Vanaheimr.Styx,CSVReaderPipe,C:\repos\Vanaheimr_Styx\Styx\Pipes\IOPipes\CSV\CSVReaderPipe.cs,CSVReaderPipe,The method has 7 parameters. Parameters: SourcePipe' IgnoreLines' Seperators' StringSplitOptions' ExpectedNumberOfColumns' FailOnWrongNumberOfColumns' TrimColumns
Long Parameter List,org.GraphDefined.Vanaheimr.Styx,FileFilterPipe,C:\repos\Vanaheimr_Styx\Styx\Pipes\IOPipes\FileFilterPipe.cs,FileFilterPipe,The method has 6 parameters. Parameters: SourcePipe' SearchPattern' SearchOption' FileFilter' IEnumerable' IEnumerator
Long Parameter List,org.GraphDefined.Vanaheimr.Styx,OpenStreamPipe,C:\repos\Vanaheimr_Styx\Styx\Pipes\IOPipes\OpenStreamPipe.cs,OpenStreamPipe,The method has 8 parameters. Parameters: SourcePipe' FileMode' FileAccess' FileShare' BufferSize' FileOptions' IEnumerable' IEnumerator
Long Statement,org.GraphDefined.Vanaheimr.Styx.Arrows,FileLogger<TEnum>,C:\repos\Vanaheimr_Styx\Styx\Arrows\Applications\FileLogger.cs,Log,The length of the statement  "            LogfileWriter.WriteLine(Timestamp + " - " + Arguments.Select(v => v.ToString()).AggregateOrDefault((a' b) => a + "' " + b' String.Empty)); " is 138.
Long Statement,org.GraphDefined.Vanaheimr.Styx,CSVReaderPipeExtensions,C:\repos\Vanaheimr_Styx\Styx\Pipes\IOPipes\CSV\CSVReaderPipe.cs,ToCSV,The length of the statement  "            return new CSVReaderPipe(SourcePipe' IgnoreLines' Seperators' StringSplitOptions' ExpectedNumberOfColumns' FailOnWrongNumberOfColumns' TrimColumns); " is 148.
Long Statement,org.GraphDefined.Vanaheimr.Styx,OpenStreamPipe,C:\repos\Vanaheimr_Styx\Styx\Pipes\IOPipes\OpenStreamPipe.cs,MoveNext,The length of the statement  "                _CurrentElement = new FileStream(_InternalEnumerator.Current.FullName' _FileMode' _FileAccess' _FileShare' (Int32) _BufferSize); " is 128.
Long Statement,org.GraphDefined.Vanaheimr.Styx,OpenStreamPipe,C:\repos\Vanaheimr_Styx\Styx\Pipes\IOPipes\OpenStreamPipe.cs,MoveNext,The length of the statement  "                _CurrentElement = new FileStream(SourcePipe.Current.FullName' _FileMode' _FileAccess' _FileShare' (Int32) _BufferSize' _FileOptions); " is 133.
Long Statement,org.GraphDefined.Vanaheimr.Styx,StdDevPipe,C:\repos\Vanaheimr_Styx\Styx\Pipes\StdDevPipe.cs,ToString,The length of the statement  "            return base.ToString() + "<Counter: " + Counter + "' StdDev: " + InternalSideEffect1 + "' Average: " + InternalSideEffect2 + ">"; " is 129.
Complex Conditional,org.GraphDefined.Vanaheimr.Styx,RangeFilterPipe<S>,C:\repos\Vanaheimr_Styx\Styx\Pipes\FilterPipes\RangeFilterPipe.cs,MoveNext,The conditional expression  "(Low  == -1 || Counter >= Low) &&                      (High == -1 || Counter <= High)"  is complex.
Empty Catch Block,org.GraphDefined.Vanaheimr.Styx.Arrows,AbstractArrowReceiver<TIn>,C:\repos\Vanaheimr_Styx\Styx\Arrows\AbstractArrowReceiver.cs,ProcessExceptionOccured,The method has an empty catch block.
Magic Number,org.GraphDefined.Vanaheimr.Styx.Arrows,ConcurrentCombineArrow<TIn1;TIn2;TOut>,C:\repos\Vanaheimr_Styx\Styx\Arrows\ConcurrentCombineArrow.cs,ConcurrentCombineArrow,The following statement contains a magic number: this.MaxQueueSize         = 1000;
Magic Number,org.GraphDefined.Vanaheimr.Styx.Arrows,AggregatedNotificator<T>,C:\repos\Vanaheimr_Styx\Styx\Arrows\Notificator.cs,SendNotification,The following statement contains a magic number: UpdateEVSEStatusTimer.Change(5000' Timeout.Infinite);
Magic Number,org.GraphDefined.Vanaheimr.Styx.Arrows,Sniper<TOut>,C:\repos\Vanaheimr_Styx\Styx\Arrows\Sniper.cs,Sniper,The following statement contains a magic number: this.Intervall               = TimeSpan.FromSeconds(10);
Magic Number,org.GraphDefined.Vanaheimr.Styx.Arrows,Sniper<TOut>,C:\repos\Vanaheimr_Styx\Styx\Arrows\Sniper.cs,Sniper,The following statement contains a magic number: this.ThrottlingSleepDuration = 1000;
Magic Number,org.GraphDefined.Vanaheimr.Styx.Arrows,Sniper<TOut>,C:\repos\Vanaheimr_Styx\Styx\Arrows\Sniper.cs,Sniper,The following statement contains a magic number: this.Intervall               = TimeSpan.FromSeconds(10);
Magic Number,org.GraphDefined.Vanaheimr.Styx.Arrows,Sniper<TOut>,C:\repos\Vanaheimr_Styx\Styx\Arrows\Sniper.cs,Sniper,The following statement contains a magic number: this.ThrottlingSleepDuration = 1000;
Magic Number,org.GraphDefined.Vanaheimr.Styx.Arrows,Sniper<TOut>,C:\repos\Vanaheimr_Styx\Styx\Arrows\Sniper.cs,Sniper,The following statement contains a magic number: this.Intervall               = TimeSpan.FromSeconds(10);
Magic Number,org.GraphDefined.Vanaheimr.Styx.Arrows,Sniper<TOut>,C:\repos\Vanaheimr_Styx\Styx\Arrows\Sniper.cs,Sniper,The following statement contains a magic number: this.ThrottlingSleepDuration = 1000;
Magic Number,org.GraphDefined.Vanaheimr.Styx.Arrows,StatisticsArrow,C:\repos\Vanaheimr_Styx\Styx\Arrows\StatisticsArrow.cs,ProcessMessage,The following statement contains a magic number: var _Variance = AddToQuadratSum(Value) - (Math.Pow(_Sum' 2) / _Counter);
Magic Number,org.GraphDefined.Vanaheimr.Styx.Arrows,StatisticsArrow,C:\repos\Vanaheimr_Styx\Styx\Arrows\StatisticsArrow.cs,ProcessMessage,The following statement contains a magic number: if (Counter > 1 && Counter < 30)                  _Variance = _Variance / (_Counter - 1);  // corr. Var.              else                  _Variance = _Variance / _Counter;
Magic Number,org.GraphDefined.Vanaheimr.Styx.Arrows,StdDevSideEffectArrow,C:\repos\Vanaheimr_Styx\Styx\Arrows\StdDevSideEffectArrow.cs,ProcessMessage,The following statement contains a magic number: _SideEffect1 = AddToQuadratSum(MessageOut) - (Math.Pow(_Sum' 2) / _Counter);
Magic Number,org.GraphDefined.Vanaheimr.Styx.Arrows,StdDevSideEffectArrow,C:\repos\Vanaheimr_Styx\Styx\Arrows\StdDevSideEffectArrow.cs,ProcessMessage,The following statement contains a magic number: if (Counter > 1 && Counter < 30)                  _SideEffect1 = _SideEffect1 / (_Counter - 1);  // corr. Var.              else                  _SideEffect1 = _SideEffect1 / _Counter;
Magic Number,org.GraphDefined.Vanaheimr.Styx,BackFilterPipe<E;S>,C:\repos\Vanaheimr_Styx\Styx\Pipes\FilterPipes\BackFilterPipe.cs,MoveNext,The following statement contains a magic number: while (SourcePipe.MoveNext())              {                    var aa = this.Path;                  var bb = this.Path.ToList()[this.Path.Count() - 2 - (Int32) Steps];                    //_CurrentElement = _InternalEnumerator.Current;                  _CurrentElement = (S) bb;                    return true;                }
Magic Number,org.GraphDefined.Vanaheimr.Styx,IEndPipeExtentions,C:\repos\Vanaheimr_Styx\Styx\Pipes\Helpers\EndPipeEnumerable.cs,ToArray,The following statement contains a magic number: var Values = new T[8];
Magic Number,org.GraphDefined.Vanaheimr.Styx,IEndPipeExtentions,C:\repos\Vanaheimr_Styx\Styx\Pipes\Helpers\EndPipeEnumerable.cs,ToArray,The following statement contains a magic number: foreach (var Item in SourcePipe)              {                    if (Size == Values.Length)                      Array.Resize(ref Values' Size * 2);                    Values[Size++] = Item;                }
Magic Number,org.GraphDefined.Vanaheimr.Styx,CSVReaderPipe,C:\repos\Vanaheimr_Styx\Styx\Pipes\IOPipes\CSV\CSVReaderPipe.cs,MoveNext,The following statement contains a magic number: while (true)              {                    if (SourcePipe.MoveNext())                  {                        // Remove leading and trailing whitespaces                      _CurrentLine = SourcePipe.Current.Trim();                        // The side effect is the current line number                      InternalSideEffect++;                          // Ignore empty lines                      if (_CurrentLine == null | _CurrentLine == "")                          continue;                          // Ignore lines matching the IgnoreLines regular expression                      if (IgnoreLines.IsMatch(_CurrentLine))                          continue;                          // Remove patterns like "'  '"                      if (StringSplitOptions == StringSplitOptions.RemoveEmptyEntries)                          _CurrentLine = EmptyColumRegex.Replace(_CurrentLine' Seperators[0]);                          // Split the current line                      _CurrentElement = _CurrentLine.Split(Seperators' StringSplitOptions);                          // Remove empty arrays                      if (StringSplitOptions == StringSplitOptions.RemoveEmptyEntries &                          _CurrentElement.Length == 0)                          continue;                          // Original columns having the seperator character(s) within quotation marks \"...' ...\"                      //   might end up as multiple columns. This will fix it!                      for (var i = 0; i < _CurrentElement.Length; i++)                      {                            if (_CurrentElement[i] == null)                              continue;                            if (_CurrentElement[i].StartsWith(@"""") &&                             !_CurrentElement[i].EndsWith  (@""""))                          {                                var j=i+1;                                do                              {                                  _CurrentElement[i] += _CurrentElement[j];                                  _CurrentElement[j] = null;                                  j++;                              }                              while (!_CurrentElement[i].EndsWith(@""""));                              }                            if (_CurrentElement[i].StartsWith(@"""") &&                              _CurrentElement[i].EndsWith  (@""""))                          {                              _CurrentElement[i] = _CurrentElement[i].Substring(1' _CurrentElement[i].Length - 2);                          }                            _CurrentElement[i] = _CurrentElement[i].Replace(@""""""' @"""");                        }                        _CurrentElement = _CurrentElement.Where(column => column != null).ToArray();                        // The found number of columns does not fit the expected number                      if (ExpectedNumberOfColumns != null &&                          ExpectedNumberOfColumns != _CurrentElement.Length)                      {                          if (FailOnWrongNumberOfColumns)                              throw new Exception("CVSPipe!");                          else                              continue;                      }                          // Remove leading and trailing whitespaces from each column                      if (TrimColumns)                          _CurrentElement = _CurrentElement.Select(s => s.Trim()).ToArray();                        return true;                    }                    return false;                }
Magic Number,org.GraphDefined.Vanaheimr.Styx,StdDevPipe,C:\repos\Vanaheimr_Styx\Styx\Pipes\StdDevPipe.cs,MoveNext,The following statement contains a magic number: if (SourcePipe.MoveNext())              {                    _CurrentElement = SourcePipe.Current;                  var _Counter = Interlocked.Increment(ref Counter);                    var _Sum = AddToSum(_CurrentElement);                  InternalSideEffect1 = AddToQuadratSum(_CurrentElement) - (Math.Pow(_Sum' 2) / _Counter);                  InternalSideEffect2 = _Sum / _Counter;                    if (Counter > 1 && Counter < 30)                      InternalSideEffect1 = InternalSideEffect1 / (_Counter - 1);  // corr. Var.                  else                      InternalSideEffect1 = InternalSideEffect1 / _Counter;                    return true;                }
Magic Number,org.GraphDefined.Vanaheimr.Styx,StdDevPipe,C:\repos\Vanaheimr_Styx\Styx\Pipes\StdDevPipe.cs,MoveNext,The following statement contains a magic number: if (SourcePipe.MoveNext())              {                    _CurrentElement = SourcePipe.Current;                  var _Counter = Interlocked.Increment(ref Counter);                    var _Sum = AddToSum(_CurrentElement);                  InternalSideEffect1 = AddToQuadratSum(_CurrentElement) - (Math.Pow(_Sum' 2) / _Counter);                  InternalSideEffect2 = _Sum / _Counter;                    if (Counter > 1 && Counter < 30)                      InternalSideEffect1 = InternalSideEffect1 / (_Counter - 1);  // corr. Var.                  else                      InternalSideEffect1 = InternalSideEffect1 / _Counter;                    return true;                }
Magic Number,org.GraphDefined.Vanaheimr.Styx,BackPipe<E;S>,C:\repos\Vanaheimr_Styx\Styx\Pipes\Utils\BackPipe.cs,MoveNext,The following statement contains a magic number: while (SourcePipe.MoveNext())              {                    _ReturnPosition = this.Path.Count() - 2 - (Int32) Steps;                    if (_ReturnPosition < 0)                      throw new Exception("The path is shorter than the given number of steps!");                    try                  {                      _CurrentElement = (S) this.Path.ElementAt(_ReturnPosition);                  }                  catch (Exception)                  {                      throw new Exception("Invalid type of element within path!");                  }                    return true;                }
Magic Number,org.GraphDefined.Vanaheimr.Styx.Concurrent,AndFilterPipeConcurrent<S>,C:\repos\Vanaheimr_Styx\Styx\Pipes\AndFilterPipeConcurrent.cs,MoveNext,The following statement contains a magic number: while (SourcePipe.MoveNext())              {                    var _S                = SourcePipe.Current;                  var _TaskCancellation = new CancellationTokenSource();  //                    var _NumberOfTasks    = _Pipes.Count();                                        Task[] _Tasks = (from _Pipe in _Pipes                                      select Task<Boolean>.Factory.StartNew((_Pipe2) =>                                      {                                            ((IPipe<S'Boolean>) _Pipe2).SetSource(new SingleEnumerator<S>(_S));                                                            var _return = ((IPipe<S'Boolean>) _Pipe2).MoveNext();                            //                                         Interlocked.Decrement(ref _NumberOfTasks);                                                                    if (_return == false)                                          _And = false;                                                                    return _return;                                                                }'                                          _Pipe'                                          _TaskCancellation.Token'                                          TaskCreationOptions.AttachedToParent'                                          TaskScheduler.Current)).ToArray();                                          while (_And == true && !_Tasks.All(_T => _T.IsCompleted))                  {                      // Wait until a task completes' but no longer than 100ms!                      Task.WaitAny(_Tasks' 100);                  }                                        // Canel remaining tasks!                  _TaskCancellation.Cancel();                                        return _And;                }
Missing Default,org.GraphDefined.Vanaheimr.Styx,SingleEnumerator<T>,C:\repos\Vanaheimr_Styx\Styx\Enumerators\SingleEnumerator.cs,MoveNext,The following switch statement is missing a default case: switch (_InternalState)              {                    case SingleEnumeratorState.BEFORE:                      _InternalState = SingleEnumeratorState.AT;                      return true;                    case SingleEnumeratorState.AT:                      _InternalState = SingleEnumeratorState.BEHIND;                      return false;                    case SingleEnumeratorState.BEHIND:                      return false;                }
