Implementation smell,Namespace,Class,File,Method,Description
Long Method,AsterNET,Helper,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Helper.cs,ToString,The method has 139 lines of code.
Long Method,AsterNET,Helper,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Helper.cs,SetAttributes,The method has 109 lines of code.
Long Method,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The method has 575 lines of code.
Long Method,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,DispatchResponse,The method has 132 lines of code.
Long Method,AsterNET.Manager,ManagerReader,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerReader.cs,Run,The method has 147 lines of code.
Complex Method,AsterNET,Helper,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Helper.cs,ToString,Cyclomatic complexity of the method is 19
Complex Method,AsterNET,Helper,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Helper.cs,stripIllegalCharacters,Cyclomatic complexity of the method is 9
Complex Method,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,determineVersion,Cyclomatic complexity of the method is 9
Complex Method,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,BuildAction,Cyclomatic complexity of the method is 12
Complex Method,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,DispatchResponse,Cyclomatic complexity of the method is 20
Complex Method,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,DispatchEvent,Cyclomatic complexity of the method is 8
Complex Method,AsterNET.Manager,ManagerReader,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerReader.cs,Run,Cyclomatic complexity of the method is 18
Complex Method,AsterNET.Manager.Response,GetConfigResponse,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\Response\GetConfigResponse.cs,Lines,Cyclomatic complexity of the method is 11
Long Parameter List,AsterNET.FastAGI,AsteriskFastAGI,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\FastAGI\AsteriskFastAGI.cs,AsteriskFastAGI,The method has 5 parameters. Parameters: ipaddress' port' poolSize' sc511_CausesException' scHangUp_CausesException
Long Parameter List,AsterNET.FastAGI,AGIScript,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\FastAGI\AGIScript.cs,RecordFile,The method has 7 parameters. Parameters: file' format' escapeDigits' timeout' offset' beep' maxSilence
Long Parameter List,AsterNET.FastAGI,AGIScript,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\FastAGI\AGIScript.cs,ControlStreamFile,The method has 6 parameters. Parameters: file' escapeDigits' offset' forwardDigit' rewindDigit' pauseDigit
Long Parameter List,AsterNET.FastAGI.Command,ControlStreamFileCommand,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\FastAGI\Command\ControlStreamFileCommand.cs,ControlStreamFileCommand,The method has 6 parameters. Parameters: file' escapeDigits' offset' forwardDigit' rewindDigit' pauseDigit
Long Parameter List,AsterNET.FastAGI.Command,RecordFileCommand,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\FastAGI\Command\RecordFileCommand.cs,RecordFileCommand,The method has 7 parameters. Parameters: file' format' escapeDigits' timeout' offset' beep' maxSilence
Long Parameter List,AsterNET.Manager.Action,AOCMessageAction,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\Action\AOCMessageAction.cs,AOCMessageAction,The method has 14 parameters. Parameters: channel' channelPrefix' msgType' chargeType' unitAmount' unitType' currencyName' currencyAmount' currencyMultiplier' totalType' aocBillingId' chargingAssociationId' chargingAssociationNumber' chargingrAssociationPlan
Long Parameter List,AsterNET.Manager.Action,QueueLogAction,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\Action\QueueLogAction.cs,QueueLogAction,The method has 5 parameters. Parameters: queue' event' uniqueid' interface' message
Long Parameter List,AsterNET.Manager.Action,RedirectAction,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\Action\RedirectAction.cs,RedirectAction,The method has 5 parameters. Parameters: channel' extraChannel' context' exten' priority
Long Parameter List,AsterNET.Manager.Action,UpdateConfigAction,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\Action\UpdateConfigAction.cs,AddCommand,The method has 5 parameters. Parameters: action' category' variable' value' match
Long Parameter List,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The method has 5 parameters. Parameters: hostname' port' username' password' encoding
Long Identifier,AsterNET,Common,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Common.cs,,The length of the parameter AGI_DEFAULT_RESOURCE_BUNDLE_NAME is 32.
Long Identifier,AsterNET,Common,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Common.cs,,The length of the parameter AGI_ADDITIONAL_ATTRIBUTES_PATTERN is 33.
Long Identifier,AsterNET,Common,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Common.cs,,The length of the parameter AGI_ADDITIONAL_ATTRIBUTE_PATTERN is 32.
Long Identifier,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,,The length of the parameter keepAliveAfterAuthenticationFailure is 35.
Long Statement,AsterNET,Helper,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Helper.cs,SetAttributes,The length of the statement  "							throw new ManagerException("Unable to convert value '" + attributes[name] + "' of property '" + name + "' on " + o.GetType() + " to required enum type " + dataType' ex);  " is 169.
Long Statement,AsterNET,Helper,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Helper.cs,SetAttributes,The length of the statement  "							throw new ManagerException("Unable to convert value '" + attributes[name] + "' of property '" + name + "' on " + o.GetType() + " to required type " + dataType' ex); " is 164.
Long Statement,AsterNET.FastAGI,AGIScript,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\FastAGI\AGIScript.cs,ControlStreamFile,The length of the statement  "			channel.SendCommand(new Command.ControlStreamFileCommand(file' escapeDigits' offset' forwardDigit' rewindDigit' pauseDigit)); " is 125.
Long Statement,AsterNET.FastAGI.Command,RecordFileCommand,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\FastAGI\Command\RecordFileCommand.cs,BuildCommand,The length of the statement  "			return "RECORD FILE " + EscapeAndQuote(file) + " " + EscapeAndQuote(format) + " " + EscapeAndQuote(escapeDigits) + " " + timeout + " " + offset + (beep == true?" BEEP":"") + " s=" + maxSilence; " is 193.
Long Statement,AsterNET.FastAGI.MappingStrategies,GeneralMappingStrategy,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\FastAGI\MappingStrategies\GeneralMappingStrategy.cs,Load,The length of the statement  "                            throw new AGIException(string.Format("Unable to load AGI Script {0}' file not found."' Path.Combine(Environment.CurrentDirectory' de.ScriptAssmebly))' fnfex); " is 158.
Long Statement,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,login,The length of the statement  "				throw new ManagerException("Unknown response during login to Asterisk - " + response.GetType().Name + " with message " + response.Message); " is 139.
Long Statement,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,determineVersion,The length of the statement  "			Response.ManagerResponse showVersionFilesResponse = SendAction(new Action.CommandAction("show version files")' defaultResponseTimeout * 2); " is 139.
Long Statement,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,SendEventGeneratingAction,The length of the statement  "			throw new EventTimeoutException("Timeout waiting for response or response events to " + action.Action' handler.ResponseEvents); " is 127.
Long Statement,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,BuildAction,The length of the statement  "                    sb.Append( string.Concat( "Variable: "' Helper.JoinVariables( actionVar.GetVariables()' VAR_DELIMITER' "=" )' Common.LINE_SEPARATOR ) ); " is 136.
Long Statement,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,DispatchEvent,The length of the statement  "					ResponseEventHandler eventHandler = (ResponseEventHandler)GetResponseEventHandler(responseEvent.InternalActionId.GetHashCode()); " is 128.
Complex Conditional,AsterNET,Helper,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Helper.cs,IsTrue,The conditional expression  "sx == "yes" || sx == "true" || sx == "y" || sx == "t" || sx == "1" || sx == "on""  is complex.
Complex Conditional,AsterNET,Helper,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Helper.cs,ToString,The conditional expression  "!(propType == typeof (string) || propType == typeof (bool) || propType == typeof (double) ||                        propType == typeof (DateTime) || propType == typeof (int) || propType == typeof (long))"  is complex.
Complex Conditional,AsterNET,Helper,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Helper.cs,BuildResponse,The conditional expression  "attributes.ContainsKey("exten") && attributes.ContainsKey("context") &&                       attributes.ContainsKey("hint") && attributes.ContainsKey("status")"  is complex.
Complex Conditional,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,BuildAction,The conditional expression  "!(propType == typeof(string)  					|| propType == typeof(bool)  					|| propType == typeof(double)  					|| propType == typeof(DateTime)  					|| propType == typeof(int)  					|| propType == typeof(long)  					|| propType == typeof(Dictionary<string' string>)  					)"  is complex.
Complex Conditional,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,DispatchEvent,The conditional expression  "!reconnected && reconnectEnable && (e is DisconnectEvent || e is ReloadEvent || e is ShutdownEvent)"  is complex.
Complex Conditional,AsterNET.Manager,ManagerReader,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerReader.cs,Run,The conditional expression  "lastPacketTime.AddMilliseconds(mrConnector.PingInterval) < DateTime.Now  								&& mrConnector.PingInterval > 0  								&& mrSocket != null  								&& !wait4identiier  								&& !is_logoff"  is complex.
Complex Conditional,AsterNET.Manager,ManagerReader,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerReader.cs,Run,The conditional expression  "lineLower.StartsWith("privilege: ")  								|| lineLower.StartsWith("actionid: ")  								|| lineLower.StartsWith("timestamp: ")  								|| lineLower.StartsWith("server: ")"  is complex.
Empty Catch Block,AsterNET.FastAGI,AGIConnectionHandler,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\FastAGI\AGIConnectionHandler.cs,Run,The method has an empty catch block.
Empty Catch Block,AsterNET.FastAGI,AGIConnectionHandler,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\FastAGI\AGIConnectionHandler.cs,Run,The method has an empty catch block.
Empty Catch Block,AsterNET.FastAGI,AGIReply,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\FastAGI\AGIReply.cs,AGIReply,The method has an empty catch block.
Empty Catch Block,AsterNET.FastAGI.MappingStrategies,MappingAssembly,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\FastAGI\MappingStrategies\GeneralMappingStrategy.cs,CreateInstance,The method has an empty catch block.
Empty Catch Block,AsterNET.IO,SocketConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\IO\SocketConnection.cs,Close,The method has an empty catch block.
Empty Catch Block,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,login,The method has an empty catch block.
Empty Catch Block,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,Logoff,The method has an empty catch block.
Empty Catch Block,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,DispatchResponse,The method has an empty catch block.
Magic Number,AsterNET,Logger,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Logger.cs,debugInfo,The following statement contains a magic number: var sf = new StackFrame(2' true);
Magic Number,AsterNET,Helper,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Helper.cs,ToHexString,The following statement contains a magic number: var sb = new StringBuilder(b.Length*2);
Magic Number,AsterNET,Helper,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Helper.cs,ToHexString,The following statement contains a magic number: for (int i = 0; i < b.Length; i++)              {                  sb.Append(hexChar[URShift((b[i] & 0xf0)' 4)]);                  sb.Append(hexChar[b[i] & 0x0f]);              }
Magic Number,AsterNET,Helper,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Helper.cs,URShift,The following statement contains a magic number: return (number >> bits) + (2 << ~bits);
Magic Number,AsterNET,Helper,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Helper.cs,GetGetters,The following statement contains a magic number: for (int i = 0; i < methods.Length; i++)              {                  method = methods[i];                  methodName = method.Name;                    // skip not "get..." methods and  skip methods with != 0 parameters                  if (!methodName.StartsWith("get_") || method.GetParameters().Length != 0)                      continue;                    name = methodName.Substring(4);                  if (name.Length == 0)                      continue;                  accessors[name] = method;              }
Magic Number,AsterNET,Helper,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Helper.cs,ToString,The following statement contains a magic number: var sb = new StringBuilder(obj.GetType().Name' 1024);
Magic Number,AsterNET,Helper,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Helper.cs,ToString,The following statement contains a magic number: foreach (string name in getters.Keys)              {                  var getter = (MethodInfo) getters[name];                  Type propType = getter.ReturnType;                  if (propType == typeof (object))                      continue;                  if (                      !(propType == typeof (string) || propType == typeof (bool) || propType == typeof (double) ||                        propType == typeof (DateTime) || propType == typeof (int) || propType == typeof (long)))                  {                      string propTypeName = propType.Name;                      if (propTypeName.StartsWith("Dictionary") || propTypeName.StartsWith("List"))                      {                          arrays.Add(getter);                      }                      continue;                  }                    try                  {                      value = getter.Invoke(obj' new object[] {});                  }                  catch                  {                      continue;                  }                    if (value == null)                      continue;                  if (value is string)                  {                      strValue = (string) value;                      if (strValue.Length == 0)                          continue;                  }                  else if (value is bool)                  {                      strValue = ((bool) value ? "true" : "false");                  }                  else if (value is double)                  {                      var d = (double) value;                      if (d == 0.0)                          continue;                      strValue = d.ToString();                  }                  else if (value is DateTime)                  {                      var dt = (DateTime) value;                      if (dt == DateTime.MinValue)                          continue;                      strValue = dt.ToLongTimeString();                  }                  else if (value is int)                  {                      var i = (int) value;                      if (i == 0)                          continue;                      strValue = i.ToString();                  }                  else if (value is long)                  {                      var l = (long) value;                      if (l == 0)                          continue;                      strValue = l.ToString();                  }                  else                      strValue = value.ToString();                    if (notFirst)                      sb.Append("; ");                  notFirst = true;                  sb.Append(string.Concat(getter.Name.Substring(4)' ":"' strValue));              }
Magic Number,AsterNET,Helper,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Helper.cs,ToString,The following statement contains a magic number: foreach (var getter in arrays)              {                  value = null;                  try                  {                      value = getter.Invoke(obj' new object[] {});                  }                  catch                  {                      continue;                  }                  if (value == null)                      continue;                    #region List                     IList list;                  if (value is IList && (list = (IList) value).Count > 0)                  {                      if (notFirst)                          sb.Append("; ");                      notFirst = true;                      sb.Append(getter.Name.Substring(4));                      sb.Append(":[");                      bool notFirst2 = false;                      foreach (var o in list)                      {                          if (notFirst2)                              sb.Append("; ");                          notFirst2 = true;                          sb.Append(o);                      }                      sb.Append("]");                  }                      #endregion                        #region IDictionary                   if (value is IDictionary && ((IDictionary) value).Count > 0)                  {                      if (notFirst)                          sb.Append("; ");                      notFirst = true;                      sb.Append(getter.Name.Substring(4));                      sb.Append(":[");                      bool notFirst2 = false;                      foreach (var key in ((IDictionary) value).Keys)                      {                          object o = ((IDictionary) value)[key];                          if (notFirst2)                              sb.Append("; ");                          notFirst2 = true;                          sb.Append(string.Concat(key' ":"' o));                      }                      sb.Append("]");                  }                    #endregion              }
Magic Number,AsterNET,Helper,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Helper.cs,ToString,The following statement contains a magic number: foreach (var getter in arrays)              {                  value = null;                  try                  {                      value = getter.Invoke(obj' new object[] {});                  }                  catch                  {                      continue;                  }                  if (value == null)                      continue;                    #region List                     IList list;                  if (value is IList && (list = (IList) value).Count > 0)                  {                      if (notFirst)                          sb.Append("; ");                      notFirst = true;                      sb.Append(getter.Name.Substring(4));                      sb.Append(":[");                      bool notFirst2 = false;                      foreach (var o in list)                      {                          if (notFirst2)                              sb.Append("; ");                          notFirst2 = true;                          sb.Append(o);                      }                      sb.Append("]");                  }                      #endregion                        #region IDictionary                   if (value is IDictionary && ((IDictionary) value).Count > 0)                  {                      if (notFirst)                          sb.Append("; ");                      notFirst = true;                      sb.Append(getter.Name.Substring(4));                      sb.Append(":[");                      bool notFirst2 = false;                      foreach (var key in ((IDictionary) value).Keys)                      {                          object o = ((IDictionary) value)[key];                          if (notFirst2)                              sb.Append("; ");                          notFirst2 = true;                          sb.Append(string.Concat(key' ":"' o));                      }                      sb.Append("]");                  }                    #endregion              }
Magic Number,AsterNET,Helper,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Helper.cs,BuildEvent,The following statement contains a magic number: if (eventType.EndsWith("event"))                  eventType = eventType.Substring(0' eventType.Length - 5);
Magic Number,AsterNET,Helper,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Helper.cs,RegisterEventClass,The following statement contains a magic number: if (eventType.EndsWith("event"))                  eventType = eventType.Substring(0' eventType.Length - 5);
Magic Number,AsterNET.FastAGI,AGIReply,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\FastAGI\AGIReply.cs,GetAttribute,The following statement contains a magic number: if (!attributesCreated)              {                  matcher = Common.AGI_ADDITIONAL_ATTRIBUTES_PATTERN.Match(firstLine);                  if (matcher.Success)                  {                      string s;                      Match attributeMatcher;                        attributes = new Dictionary<string' string>();                      s = matcher.Groups[2].Value;                      attributeMatcher = Common.AGI_ADDITIONAL_ATTRIBUTE_PATTERN.Match(s);                      while (attributeMatcher.Success)                      {                          string key;                          string value_Renamed;                            key = attributeMatcher.Groups[1].Value;                          value_Renamed = attributeMatcher.Groups[2].Value;                          attributes[key.ToLower(Helper.CultureInfo)] = value_Renamed;                      }                  }                  attributesCreated = true;              }
Magic Number,AsterNET.FastAGI,AGIReply,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\FastAGI\AGIReply.cs,GetAttribute,The following statement contains a magic number: if (!attributesCreated)              {                  matcher = Common.AGI_ADDITIONAL_ATTRIBUTES_PATTERN.Match(firstLine);                  if (matcher.Success)                  {                      string s;                      Match attributeMatcher;                        attributes = new Dictionary<string' string>();                      s = matcher.Groups[2].Value;                      attributeMatcher = Common.AGI_ADDITIONAL_ATTRIBUTE_PATTERN.Match(s);                      while (attributeMatcher.Success)                      {                          string key;                          string value_Renamed;                            key = attributeMatcher.Groups[1].Value;                          value_Renamed = attributeMatcher.Groups[2].Value;                          attributes[key.ToLower(Helper.CultureInfo)] = value_Renamed;                      }                  }                  attributesCreated = true;              }
Magic Number,AsterNET.FastAGI,AGIReply,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\FastAGI\AGIReply.cs,GetSynopsis,The following statement contains a magic number: if (!synopsisCreated)              {                  if (lines.Count > 1)                  {                      string secondLine;                      Match synopsisMatcher;                        secondLine = lines[1];                      synopsisMatcher = Common.AGI_SYNOPSIS_PATTERN.Match(secondLine);                      if (synopsisMatcher.Success)                          synopsis = synopsisMatcher.Groups[1].Value;                  }                  synopsisCreated = true;                    var sbUsage = new StringBuilder();                  string line;                  for (int i = 2; i < lines.Count; i++)                  {                      line = lines[i];                      if (line == Common.AGI_END_OF_PROPER_USAGE)                          break;                      sbUsage.Append(line.Trim());                      sbUsage.Append(" ");                  }                  usage = sbUsage.ToString().Trim();              }
Magic Number,AsterNET.FastAGI,AGIRequest,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\FastAGI\AGIRequest.cs,buildMap,The following statement contains a magic number: foreach (var line in lines)              {                  colonPosition = line.IndexOf(':');                  if (colonPosition < 0 || !line.StartsWith("agi_") || line.Length < colonPosition + 2)                      continue;                    key = line.Substring(4' colonPosition - 4).ToLower(Helper.CultureInfo);                  value = line.Substring(colonPosition + 2);                  if (value.Length != 0)                      map.Add(key' value);              }
Magic Number,AsterNET.FastAGI,AGIRequest,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\FastAGI\AGIRequest.cs,buildMap,The following statement contains a magic number: foreach (var line in lines)              {                  colonPosition = line.IndexOf(':');                  if (colonPosition < 0 || !line.StartsWith("agi_") || line.Length < colonPosition + 2)                      continue;                    key = line.Substring(4' colonPosition - 4).ToLower(Helper.CultureInfo);                  value = line.Substring(colonPosition + 2);                  if (value.Length != 0)                      map.Add(key' value);              }
Magic Number,AsterNET.FastAGI,AGIRequest,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\FastAGI\AGIRequest.cs,buildMap,The following statement contains a magic number: foreach (var line in lines)              {                  colonPosition = line.IndexOf(':');                  if (colonPosition < 0 || !line.StartsWith("agi_") || line.Length < colonPosition + 2)                      continue;                    key = line.Substring(4' colonPosition - 4).ToLower(Helper.CultureInfo);                  value = line.Substring(colonPosition + 2);                  if (value.Length != 0)                      map.Add(key' value);              }
Magic Number,AsterNET.FastAGI,AGIRequest,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\FastAGI\AGIRequest.cs,buildMap,The following statement contains a magic number: foreach (var line in lines)              {                  colonPosition = line.IndexOf(':');                  if (colonPosition < 0 || !line.StartsWith("agi_") || line.Length < colonPosition + 2)                      continue;                    key = line.Substring(4' colonPosition - 4).ToLower(Helper.CultureInfo);                  value = line.Substring(colonPosition + 2);                  if (value.Length != 0)                      map.Add(key' value);              }
Magic Number,AsterNET.Manager.Action,UpdateConfigAction,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\Action\UpdateConfigAction.cs,AddCommand,The following statement contains a magic number: var index = i.ToString().PadLeft(6' '0');
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 2' typeof(AgentCalledEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 3' typeof(AgentCompleteEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 4' typeof(AgentConnectEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 5' typeof(AgentDumpEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 6' typeof(AgentLoginEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 7' typeof(AgentLogoffEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 8' typeof(AgentsCompleteEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 9' typeof(AgentsEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 10' typeof(AlarmClearEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 11' typeof(AlarmEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 12' typeof(CdrEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 14' typeof(DBGetResponseEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 15' typeof(DialEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 17' typeof(DNDStateEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 18' typeof(ExtensionStatusEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 19' typeof(HangupEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 20' typeof(HoldedCallEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 21' typeof(HoldEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 22' typeof(JoinEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 23' typeof(LeaveEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 24' typeof(LinkEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 25' typeof(LogChannelEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 26' typeof(MeetmeJoinEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 27' typeof(MeetmeLeaveEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 28' typeof(MeetmeTalkingEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 29' typeof(MessageWaitingEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 30' typeof(NewCallerIdEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 31' typeof(NewChannelEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 32' typeof(NewExtenEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 33' typeof(NewStateEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 34' typeof(OriginateResponseEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 35' typeof(ParkedCallEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 36' typeof(ParkedCallGiveUpEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 37' typeof(ParkedCallsCompleteEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 38' typeof(ParkedCallTimeOutEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 39' typeof(PeerEntryEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 40' typeof(PeerlistCompleteEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 41' typeof(PeerStatusEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 42' typeof(QueueEntryEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 43' typeof(QueueMemberAddedEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 44' typeof(QueueMemberEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 45' typeof(QueueMemberPausedEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 46' typeof(QueueMemberRemovedEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 47' typeof(QueueMemberStatusEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 48' typeof(QueueParamsEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 49' typeof(QueueStatusCompleteEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 50' typeof(RegistryEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 51' typeof(QueueCallerAbandonEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 52' typeof(RenameEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 54' typeof(StatusCompleteEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 55' typeof(StatusEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 56' typeof(UnholdEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 57' typeof(UnlinkEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 58' typeof(UnparkedCallEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 59' typeof(UserEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 60' typeof(ZapShowChannelsCompleteEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 61' typeof(ZapShowChannelsEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 62' typeof(ConnectEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 62' typeof(DisconnectEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 62' typeof(ReloadEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 62' typeof(ShutdownEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 63' typeof(BridgeEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 64' typeof(TransferEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 65' typeof(DTMFEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 70' typeof(VarSetEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 80' typeof(AGIExecEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 81' typeof(ConfbridgeStartEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 82' typeof(ConfbridgeJoinEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 83' typeof(ConfbridgeLeaveEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 84' typeof(ConfbridgeEndEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 85' typeof(ConfbridgeTalkingEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 86' typeof(FailedACLEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 87' typeof(AttendedTransferEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 88' typeof(BridgeCreateEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 89' typeof(BridgeDestroyEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 90' typeof(BridgeEnterEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 91' typeof(BridgeLeaveEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 92' typeof(BlindTransferEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 93' typeof(DialBeginEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 94' typeof(DialEndEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 95' typeof(QueueCallerJoinEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 96' typeof(QueueCallerLeaveEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,ManagerConnection,The following statement contains a magic number: Helper.RegisterEventHandler(registeredEventHandlers' 97' typeof(QueueMemberPauseEvent));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,internalEventHandler,The following statement contains a magic number: if (registeredEventHandlers.ContainsKey(eventHash))  			{  				switch (registeredEventHandlers[eventHash])  				{  					#region A-C  					case 0:  						if (AgentCallbackLogin != null)  						{  							AgentCallbackLogin(this' (AgentCallbackLoginEvent)e);  							return;  						}  						break;  					case 1:  						if (AgentCallbackLogoff != null)  						{  							AgentCallbackLogoff(this' (AgentCallbackLogoffEvent)e);  							return;  						}  						break;  					case 2:  						if (AgentCalled != null)  						{  							AgentCalled(this' (Event.AgentCalledEvent)e);  							return;  						}  						break;  					case 3:  						if (AgentComplete != null)  						{  							AgentComplete(this' (Event.AgentCompleteEvent)e);  							return;  						}  						break;  					case 4:  						if (AgentConnect != null)  						{  							AgentConnect(this' (Event.AgentConnectEvent)e);  							return;  						}  						break;  					case 5:  						if (AgentDump != null)  						{  							AgentDump(this' (Event.AgentDumpEvent)e);  							return;  						}  						break;  					case 6:  						if (AgentLogin != null)  						{  							AgentLogin(this' (Event.AgentLoginEvent)e);  							return;  						}  						break;  					case 7:  						if (AgentLogoff != null)  						{  							AgentLogoff(this' (Event.AgentLogoffEvent)e);  							return;  						}  						break;  					case 8:  						if (AgentsComplete != null)  						{  							AgentsComplete(this' (AgentsCompleteEvent)e);  							return;  						}  						break;  					case 9:  						if (Agents != null)  						{  							Agents(this' (AgentsEvent)e);  							return;  						}  						break;  					case 10:  						if (AlarmClear != null)  						{  							AlarmClear(this' (AlarmClearEvent)e);  							return;  						}  						break;  					case 11:  						if (Alarm != null)  						{  							Alarm(this' (AlarmEvent)e);  							return;  						}  						break;  					case 12:  						if (Cdr != null)  						{  							Cdr(this' (CdrEvent)e);  							return;  						}  						break;  					#endregion  					#region D-L  					case 14:  						if (DBGetResponse != null)  						{  							DBGetResponse(this' (DBGetResponseEvent)e);  							return;  						}  						break;  					case 15:  						if (Dial != null)  						{  							Dial(this' (DialEvent)e);  							return;  						}  						break;  					case 17:  						if (DNDState != null)  						{  							DNDState(this' (DNDStateEvent)e);  							return;  						}  						break;  					case 18:  						if (ExtensionStatus != null)  						{  							ExtensionStatus(this' (ExtensionStatusEvent)e);  							return;  						}  						break;  					case 19:  						if (Hangup != null)  						{  							Hangup(this' (HangupEvent)e);  							return;  						}  						break;  					case 20:  						if (HoldedCall != null)  						{  							HoldedCall(this' (HoldedCallEvent)e);  							return;  						}  						break;  					case 21:  						if (Hold != null)  						{  							Hold(this' (HoldEvent)e);  							return;  						}  						break;  					case 22:  						if (Join != null)  						{  							Join(this' (JoinEvent)e);  							return;  						}  						break;  					case 23:  						if (Leave != null)  						{  							Leave(this' (LeaveEvent)e);  							return;  						}  						break;  					case 24:  						if (Link != null)  						{  							Link(this' (LinkEvent)e);  							return;  						}  						break;  					case 25:  						if (LogChannel != null)  						{  							LogChannel(this' (LogChannelEvent)e);  							return;  						}  						break;  					#endregion  					#region M-P  					case 26:  						if (MeetMeJoin != null)  						{  							MeetMeJoin(this' (MeetmeJoinEvent)e);  							return;  						}  						break;  					case 27:  						if (MeetMeLeave != null)  						{  							MeetMeLeave(this' (MeetmeLeaveEvent)e);  							return;  						}  						break;  					case 28:  						if (MeetMeTalking != null)  						{  							MeetMeTalking(this' (MeetmeTalkingEvent)e);  							return;  						}  						break;  					case 29:  						if (MessageWaiting != null)  						{  							MessageWaiting(this' (MessageWaitingEvent)e);  							return;  						}  						break;  					case 30:  						if (NewCallerId != null)  						{  							NewCallerId(this' (NewCallerIdEvent)e);  							return;  						}  						break;  					case 31:  						if (NewChannel != null)  						{  							NewChannel(this' (NewChannelEvent)e);  							return;  						}  						break;  					case 32:  						if (NewExten != null)  						{  							NewExten(this' (NewExtenEvent)e);  							return;  						}  						break;  					case 33:  						if (NewState != null)  						{  							NewState(this' (NewStateEvent)e);  							return;  						}  						break;  					case 34:  						if (OriginateResponse != null)  						{  							OriginateResponse(this' (OriginateResponseEvent)e);  							return;  						}  						break;  					case 35:  						if (ParkedCall != null)  						{  							ParkedCall(this' (ParkedCallEvent)e);  							return;  						}  						break;  					case 36:  						if (ParkedCallGiveUp != null)  						{  							ParkedCallGiveUp(this' (ParkedCallGiveUpEvent)e);  							return;  						}  						break;  					case 37:  						if (ParkedCallsComplete != null)  						{  							ParkedCallsComplete(this' (ParkedCallsCompleteEvent)e);  							return;  						}  						break;  					case 38:  						if (ParkedCallTimeOut != null)  						{  							ParkedCallTimeOut(this' (ParkedCallTimeOutEvent)e);  							return;  						}  						break;  					case 39:  						if (PeerEntry != null)  						{  							PeerEntry(this' (PeerEntryEvent)e);  							return;  						}  						break;  					case 40:  						if (PeerlistComplete != null)  						{  							PeerlistComplete(this' (PeerlistCompleteEvent)e);  							return;  						}  						break;  					case 41:  						if (PeerStatus != null)  						{  							PeerStatus(this' (PeerStatusEvent)e);  							return;  						}  						break;  					#endregion  					#region Q-Z  					case 42:  						if (QueueEntry != null)  						{  							QueueEntry(this' (QueueEntryEvent)e);  							return;  						}  						break;  					case 43:  						if (QueueMemberAdded != null)  						{  							QueueMemberAdded(this' (QueueMemberAddedEvent)e);  							return;  						}  						break;  					case 44:  						if (QueueMember != null)  						{  							QueueMember(this' (QueueMemberEvent)e);  							return;  						}  						break;  					case 45:  						if (QueueMemberPaused != null)  						{  							QueueMemberPaused(this' (QueueMemberPausedEvent)e);  							return;  						}  						break;  					case 46:  						if (QueueMemberRemoved != null)  						{  							QueueMemberRemoved(this' (QueueMemberRemovedEvent)e);  							return;  						}  						break;  					case 47:  						if (QueueMemberStatus != null)  						{  							QueueMemberStatus(this' (QueueMemberStatusEvent)e);  							return;  						}  						break;  					case 48:  						if (QueueParams != null)  						{  							QueueParams(this' (QueueParamsEvent)e);  							return;  						}  						break;  					case 49:  						if (QueueStatusComplete != null)  						{  							QueueStatusComplete(this' (QueueStatusCompleteEvent)e);  							return;  						}  						break;  					case 50:  						if (Registry != null)  						{  							Registry(this' (RegistryEvent)e);  							return;  						}  						break;  					case 51:  						if (QueueCallerAbandon != null)  						{  							QueueCallerAbandon(this' (QueueCallerAbandonEvent)e);  							return;  						}  						break;  					case 52:  						if (Rename != null)  						{  							Rename(this' (RenameEvent)e);  							return;  						}  						break;  					case 54:  						if (StatusComplete != null)  						{  							StatusComplete(this' (StatusCompleteEvent)e);  							return;  						}  						break;  					case 55:  						if (Status != null)  						{  							Status(this' (StatusEvent)e);  							return;  						}  						break;  					case 56:  						if (Unhold != null)  						{  							Unhold(this' (UnholdEvent)e);  							return;  						}  						break;  					case 57:  						if (Unlink != null)  						{  							Unlink(this' (UnlinkEvent)e);  							return;  						}  						break;  					case 58:  						if (UnparkedCall != null)  						{  							UnparkedCall(this' (UnparkedCallEvent)e);  							return;  						}  						break;  					case 59:  						if (UserEvents != null)  						{  							UserEvents(this' (UserEvent)e);  							return;  						}  						break;  					case 60:  						if (ZapShowChannelsComplete != null)  						{  							ZapShowChannelsComplete(this' (ZapShowChannelsCompleteEvent)e);  							return;  						}  						break;  					case 61:  						if (ZapShowChannels != null)  						{  							ZapShowChannels(this' (ZapShowChannelsEvent)e);  							return;  						}  						break;  					#endregion    					case 62:  						if (ConnectionState != null)  						{  							ConnectionState(this' (ConnectionStateEvent)e);  							return;  						}  						break;  					case 63:  						if (Bridge != null)  						{  							Bridge(this' (BridgeEvent)e);  						}  						break;  					case 64:  						if (Transfer != null)  						{  							Transfer(this' (TransferEvent)e);  						}  						break;  					case 65:  						if (DTMF != null)  						{  							DTMF(this' (DTMFEvent)e);  						}  						break;  					case 70:  						if (VarSet != null)  						{  							VarSet(this' (VarSetEvent)e);  						}  						break;  					case 80:  						if (AGIExec != null)  						{  							AGIExec(this' (AGIExecEvent)e);  						}  						break;  					case 81:  						if (ConfbridgeStart != null)  						{  							ConfbridgeStart(this' (ConfbridgeStartEvent)e);  						}  						break;  					case 82:  						if (ConfbridgeJoin != null)  						{  							ConfbridgeJoin(this' (ConfbridgeJoinEvent)e);  						}  						break;  					case 83:  						if (ConfbridgeLeave != null)  						{  							ConfbridgeLeave(this' (ConfbridgeLeaveEvent)e);  						}  						break;  					case 84:  						if (ConfbridgeEnd != null)  						{  							ConfbridgeEnd(this' (ConfbridgeEndEvent)e);  						}  						break;  					case 85:  						if (ConfbridgeTalking != null)  						{  							ConfbridgeTalking(this' (ConfbridgeTalkingEvent)e);  						}  						break;                      case 86:                          if (FailedACL != null)                          {                              FailedACL(this' (FailedACLEvent)e);                          }                          break;                      case 87:  				        if (AttendedTransfer != null)  				        {  				            AttendedTransfer(this' (AttendedTransferEvent) e);  				        }  				        break;                      case 88:  				        if (BridgeCreate != null)  				        {  				            BridgeCreate(this' (BridgeCreateEvent) e);  				        }  				        break;                      case 89:                          if (BridgeDestroy != null)                          {                              BridgeDestroy(this' (BridgeDestroyEvent)e);                          }                          break;                      case 90:                          if (BridgeEnter != null)                          {                              BridgeEnter(this' (BridgeEnterEvent)e);                          }                          break;                      case 91:                          if (BridgeLeave != null)                          {                              BridgeLeave(this' (BridgeLeaveEvent)e);                          }                          break;                      case 92:                          if (BlindTransfer != null)                          {                              BlindTransfer(this' (BlindTransferEvent)e);                          }                          break;                      case 93:                          if (DialBegin != null)                          {                              DialBegin(this' (DialBeginEvent)e);                          }                          break;                      case 94:                          if (DialEnd != null)                          {                              DialEnd(this' (DialEndEvent)e);                          }                          break;                      case 95:                          if (QueueCallerJoin != null)                          {                              QueueCallerJoin(this' (QueueCallerJoinEvent)e);                          }                          break;                      case 96:                          if (QueueCallerLeave != null)                          {                              QueueCallerLeave(this' (QueueCallerLeaveEvent)e);                          }                          break;                      case 97:                          if (QueueMemberPause != null)                          {                              QueueMemberPause(this' (QueueMemberPauseEvent)e);                          }                          break;                      default:  						if (UnhandledEvent != null)  							UnhandledEvent(this' e);  						return;  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,login,The following statement contains a magic number: do  			{  				if (connect())  				{  					// Increase delay after connection up to 500 ms  					Thread.Sleep(10 * sleepTime);	// 200 milliseconds delay  				}  				try  				{  					Thread.Sleep(4 * sleepTime);	// 200 milliseconds delay  				}  				catch  				{ }    				if (string.IsNullOrEmpty(protocolIdentifier) && timeout > 0 && Helper.GetMillisecondsFrom(start) > timeout)  				{  					disconnect(true);  					throw new TimeoutException("Timeout waiting for protocol identifier");  				}  			} while (string.IsNullOrEmpty(protocolIdentifier));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,login,The following statement contains a magic number: do  			{  				if (connect())  				{  					// Increase delay after connection up to 500 ms  					Thread.Sleep(10 * sleepTime);	// 200 milliseconds delay  				}  				try  				{  					Thread.Sleep(4 * sleepTime);	// 200 milliseconds delay  				}  				catch  				{ }    				if (string.IsNullOrEmpty(protocolIdentifier) && timeout > 0 && Helper.GetMillisecondsFrom(start) > timeout)  				{  					disconnect(true);  					throw new TimeoutException("Timeout waiting for protocol identifier");  				}  			} while (string.IsNullOrEmpty(protocolIdentifier));
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,login,The following statement contains a magic number: Response.ManagerResponse response = SendAction(challengeAction' defaultResponseTimeout * 2);
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,determineVersion,The following statement contains a magic number: response = SendAction(new Action.CommandAction("core show version")' defaultResponseTimeout * 2);
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,determineVersion,The following statement contains a magic number: if (response is Response.CommandResponse)  			{  				foreach (string line in ((Response.CommandResponse)response).Result)  				{  					foreach (Match m in Common.ASTERISK_VERSION.Matches(line))  					{  						if (m.Groups.Count >= 2)  						{  							version = m.Groups[1].Value;                              if (version.StartsWith("1.4."))                              {                                  VAR_DELIMITER = new char[] { '|' };                                  return AsteriskVersion.ASTERISK_1_4;                              }                              else if (version.StartsWith("1.6."))                              {                                  VAR_DELIMITER = new char[] { '|' };                                  return Manager.AsteriskVersion.ASTERISK_1_6;                              }                              else if (version.StartsWith("1.8."))                              {                                  VAR_DELIMITER = new char[] { '|' };                                  return Manager.AsteriskVersion.ASTERISK_1_8;                              }                              else if (version.StartsWith("10."))                              {                                  VAR_DELIMITER = new char[] { '|' };                                  return Manager.AsteriskVersion.ASTERISK_10;                              }                              else if (version.StartsWith("11."))                              {                                  VAR_DELIMITER = new char[] { ''' };                                  return Manager.AsteriskVersion.ASTERISK_11;                              }                              else if (version.StartsWith("12."))                              {                                  VAR_DELIMITER = new char[] { ''' };                                  return Manager.AsteriskVersion.ASTERISK_12;                              }                              else if (version.StartsWith("13."))                              {                                  VAR_DELIMITER = new char[] { ''' };                                  return Manager.AsteriskVersion.ASTERISK_13;                              }                              else                                  throw new ManagerException("Unknown Asterisk version " + version);  						}  					}  				}  			}
Magic Number,AsterNET.Manager,ManagerConnection,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerConnection.cs,determineVersion,The following statement contains a magic number: Response.ManagerResponse showVersionFilesResponse = SendAction(new Action.CommandAction("show version files")' defaultResponseTimeout * 2);
Magic Number,AsterNET.Manager,ManagerReader,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\ManagerReader.cs,Run,The following statement contains a magic number: while (true)  			{  				try  				{  					while (!die)  					{  						#region check line from *    						if (!is_logoff)  						{  							if (mrSocket != null && mrSocket.Initial)  							{  								Reinitialize();  							}  							else if (disconnect)  							{  								disconnect = false;  								mrConnector.DispatchEvent(new DisconnectEvent(mrConnector));  							}  						}  						if (lineQueue.Count == 0)  						{  							if (lastPacketTime.AddMilliseconds(mrConnector.PingInterval) < DateTime.Now  								&& mrConnector.PingInterval > 0  								&& mrSocket != null  								&& !wait4identiier  								&& !is_logoff  								)  							{  								if (pingHandler != null)  								{  									if (pingHandler.Response == null)  									{  										// If one PingInterval from Ping without Pong then send Disconnect event  										mrConnector.RemoveResponseHandler(pingHandler);  										mrConnector.DispatchEvent(new DisconnectEvent(mrConnector));  									}  									pingHandler.Free();  									pingHandler = null;  								}  								else  								{  									// Send PING to *  									try  									{  										pingHandler = new ResponseHandler(new PingAction()' null);  										mrConnector.SendAction(pingHandler.Action' pingHandler);  									}  									catch  									{  										disconnect = true;  										mrSocket = null;  									}  								}  								lastPacketTime = DateTime.Now;  							}  							Thread.Sleep(50);    							continue;  						}    						#endregion    						lastPacketTime = DateTime.Now;  						lock (((ICollection) lineQueue).SyncRoot)  							line = lineQueue.Dequeue().Trim();  #if LOGGER  						logger.Debug(line);  #endif    						#region processing Response: Follows    						if (processingCommandResult)  						{  							string lineLower = line.ToLower(Helper.CultureInfo);  							if (lineLower == "--end command--")  							{  								var commandResponse = new CommandResponse();  								Helper.SetAttributes(commandResponse' packet);  								commandList.Add(line);  								commandResponse.Result = commandList;  								processingCommandResult = false;  								packet.Clear();  								mrConnector.DispatchResponse(commandResponse);  							}  							else if (lineLower.StartsWith("privilege: ")  								|| lineLower.StartsWith("actionid: ")  								|| lineLower.StartsWith("timestamp: ")  								|| lineLower.StartsWith("server: ")  								)  								Helper.AddKeyValue(packet' line);  							else  								commandList.Add(line);  							continue;  						}    						#endregion    						#region collect key: value and ProtocolIdentifier    						if (!string.IsNullOrEmpty(line))  						{  							if (wait4identiier && line.StartsWith("Asterisk Call Manager"))  							{  								wait4identiier = false;  								var connectEvent = new ConnectEvent(mrConnector);  								connectEvent.ProtocolIdentifier = line;  								mrConnector.DispatchEvent(connectEvent);  								continue;  							}  							if (line.Trim().ToLower(Helper.CultureInfo) == "response: follows")  							{  								// Switch to wait "--END COMMAND--" mode  								processingCommandResult = true;  								packet.Clear();  								commandList.Clear();  								Helper.AddKeyValue(packet' line);  								continue;  							}  							Helper.AddKeyValue(packet' line);  							continue;  						}    						#endregion    						#region process events and responses    						if (packet.ContainsKey("event"))  							mrConnector.DispatchEvent(packet);    						else if (packet.ContainsKey("response"))  							mrConnector.DispatchResponse(packet);    						#endregion    						packet.Clear();  					}  					if (mrSocket != null)  						mrSocket.Close();  					break;  				}  #if LOGGER  				catch (Exception ex)  				{  					logger.Info("Exception : {0}"' ex.Message);  #else  				catch  				{  #endif  				}    				if (die)  					break;    #if LOGGER  				logger.Info("No die' any error - send disconnect.");  #endif  				mrConnector.DispatchEvent(new DisconnectEvent(mrConnector));  			}
Magic Number,AsterNET.Manager.Response,GetConfigResponse,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\Response\GetConfigResponse.cs,Lines,The following statement contains a magic number: if (lines == null)              {                  lines = new Dictionary<int' Dictionary<int' string>>();                  if (attributes != null)                      foreach (string key in attributes.Keys)                          if (key.ToLower(Helper.CultureInfo).StartsWith("line-"))                          {                              string[] parts = key.Split(Common.MINUS_SEPARATOR);                              if (parts.Length < 3)                                  continue;                                int categoryNumber;                              if (!int.TryParse(parts[1]' out categoryNumber))                                  continue;                                int lineNumber;                              if (!int.TryParse(parts[2]' out lineNumber))                                  continue;                              if (!lines.ContainsKey(categoryNumber))                                  lines.Add(categoryNumber' new Dictionary<int' string>());                                if (lines[categoryNumber].ContainsKey(lineNumber))                                  lines[categoryNumber][lineNumber] = attributes[key];                              else                                  lines[categoryNumber].Add(lineNumber' attributes[key]);                          }              }
Magic Number,AsterNET.Manager.Response,GetConfigResponse,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\Response\GetConfigResponse.cs,Lines,The following statement contains a magic number: if (lines == null)              {                  lines = new Dictionary<int' Dictionary<int' string>>();                  if (attributes != null)                      foreach (string key in attributes.Keys)                          if (key.ToLower(Helper.CultureInfo).StartsWith("line-"))                          {                              string[] parts = key.Split(Common.MINUS_SEPARATOR);                              if (parts.Length < 3)                                  continue;                                int categoryNumber;                              if (!int.TryParse(parts[1]' out categoryNumber))                                  continue;                                int lineNumber;                              if (!int.TryParse(parts[2]' out lineNumber))                                  continue;                              if (!lines.ContainsKey(categoryNumber))                                  lines.Add(categoryNumber' new Dictionary<int' string>());                                if (lines[categoryNumber].ContainsKey(lineNumber))                                  lines[categoryNumber][lineNumber] = attributes[key];                              else                                  lines[categoryNumber].Add(lineNumber' attributes[key]);                          }              }
Magic Number,AsterNET.Manager.Response,OriginateResponse,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\Response\OriginateResponse.cs,CalcDuration,The following statement contains a magic number: return (compTime.Ticks - startTime.Ticks)/10000;
Missing Default,AsterNET,Logger,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Logger.cs,isVisible,The following switch statement is missing a default case: switch (messageLevel)              {                  case MessageLevel.Debug:                      return (visibleDebug.ContainsKey(hash) ? (bool) visibleDebug[hash] : visibleDebugDef);                  case MessageLevel.Error:                      return (visibleError.ContainsKey(hash) ? (bool) visibleError[hash] : visibleErrorDef);                  case MessageLevel.Info:                      return (visibleInfo.ContainsKey(hash) ? (bool) visibleInfo[hash] : visibleInfoDef);                  case MessageLevel.Warning:                      return (visibleWarning.ContainsKey(hash) ? (bool) visibleWarning[hash] : visibleWarningDef);              }
Missing Default,AsterNET,Logger,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Logger.cs,Visible,The following switch statement is missing a default case: switch (messageLevel)              {                  case MessageLevel.Debug:                      visibleDebug[hash] = visible;                      return;                  case MessageLevel.Error:                      visibleError[hash] = visible;                      return;                  case MessageLevel.Info:                      visibleInfo[hash] = visible;                      return;                  case MessageLevel.Warning:                      visibleWarning[hash] = visible;                      return;              }
Missing Default,AsterNET,Logger,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Logger.cs,Visible,The following switch statement is missing a default case: switch (messageLevel)              {                  case MessageLevel.Debug:                      visibleDebugDef = visible;                      return;                  case MessageLevel.Error:                      visibleErrorDef = visible;                      return;                  case MessageLevel.Info:                      visibleInfoDef = visible;                      return;                  case MessageLevel.Warning:                      visibleWarningDef = visible;                      return;              }
Missing Default,AsterNET.Manager.Event,BridgeEvent,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\Event\BridgeEvent.cs,ParseSpecial,The following switch statement is missing a default case: switch(value)  							{  								case "link":  									this.BridgeState = BridgeStates.BRIDGE_STATE_LINK;  									break;  								case "unlink":  									this.BridgeState = BridgeStates.BRIDGE_STATE_UNLINK;  									break;  							}
Missing Default,AsterNET.Manager.Event,BridgeEvent,C:\repos\skrusty_AsterNET\Asterisk.2013\Asterisk.NET\Manager\Event\BridgeEvent.cs,ParseSpecial,The following switch statement is missing a default case: switch (value)  							{  								case "rtp-native":  									this.BridgeType = BridgeTypes.BRIDGE_TYPE_RTP_NATIVE;  									break;  								case "rtp-direct":  									this.BridgeType = BridgeTypes.BRIDGE_TYPE_RTP_DIRECT;  									break;  								case "rtp-remote":  									this.BridgeType = BridgeTypes.BRIDGE_TYPE_RTP_REMOTE;  									break;  								case "core":  									this.BridgeType = BridgeTypes.BRIDGE_TYPE_CORE;  									break;  							}
