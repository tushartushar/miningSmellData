Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,HealthGraphNet.Tests.Unit,FitnessActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\FitnessActivitiesEndpointTest.cs,UpdateActivity_TypeOtherSecondaryTypeSixtyFiveCharacters_ArgumentException,The length of the parameter sixtyFiveCharacterSecondaryType is 31.
Long Identifier,HealthGraphNet.Tests.Unit,FitnessActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\FitnessActivitiesEndpointTest.cs,CreateActivity_TypeOtherSecondaryTypeSixtyFiveCharacters_ArgumentException,The length of the parameter sixtyFiveCharacterSecondaryType is 31.
Long Statement,HealthGraphNet.Tests.Unit,BackgroundActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\BackgroundActivitiesEndpointTest.cs,GetActivity_UriValid_DoesNotThrowArgumentException,The length of the statement  "            BackgroundActivitiesEndpoint activityRequest = new BackgroundActivitiesEndpoint(tokenManager.Object' new UsersModel { BackgroundActivities = validPath }); " is 154.
Long Statement,HealthGraphNet.Tests.Unit,BackgroundActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\BackgroundActivitiesEndpointTest.cs,GetActivity_UriNotValid_ArgumentException,The length of the statement  "            BackgroundActivitiesEndpoint activityRequest = new BackgroundActivitiesEndpoint(tokenManager.Object' new UsersModel { BackgroundActivities = validPath }); " is 154.
Long Statement,HealthGraphNet.Tests.Unit,BackgroundActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\BackgroundActivitiesEndpointTest.cs,DeleteActivity_UriValid_DoesNotThrowArgumentException,The length of the statement  "            BackgroundActivitiesEndpoint activityRequest = new BackgroundActivitiesEndpoint(tokenManager.Object' new UsersModel { BackgroundActivities = validPath }); " is 154.
Long Statement,HealthGraphNet.Tests.Unit,BackgroundActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\BackgroundActivitiesEndpointTest.cs,DeleteActivity_UriNotValid_ArgumentException,The length of the statement  "            BackgroundActivitiesEndpoint activityRequest = new BackgroundActivitiesEndpoint(tokenManager.Object' new UsersModel { BackgroundActivities = validPath }); " is 154.
Long Statement,HealthGraphNet.Tests.Unit,DiabetesMeasurementsEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\DiabetesMeasurementsEndpointTest.cs,GetMeasurement_UriValid_DoesNotThrowArgumentException,The length of the statement  "            DiabetesMeasurementsEndpoint measurementRequest = new DiabetesMeasurementsEndpoint(tokenManager.Object' new UsersModel { Diabetes = validPath }); " is 145.
Long Statement,HealthGraphNet.Tests.Unit,DiabetesMeasurementsEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\DiabetesMeasurementsEndpointTest.cs,GetMeasurement_UriNotValid_ArgumentException,The length of the statement  "            DiabetesMeasurementsEndpoint measurementRequest = new DiabetesMeasurementsEndpoint(tokenManager.Object' new UsersModel { Diabetes = validPath }); " is 145.
Long Statement,HealthGraphNet.Tests.Unit,DiabetesMeasurementsEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\DiabetesMeasurementsEndpointTest.cs,GetMeasurement_UriNotValid_ArgumentException,The length of the statement  "            Assert.ThrowsAsync(typeof(ArgumentException)' async () => { await measurementRequest.GetMeasurement("Not validPath."); }); " is 122.
Long Statement,HealthGraphNet.Tests.Unit,DiabetesMeasurementsEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\DiabetesMeasurementsEndpointTest.cs,DeleteMeasurement_UriValid_DoesNotThrowArgumentException,The length of the statement  "            DiabetesMeasurementsEndpoint measurementRequest = new DiabetesMeasurementsEndpoint(tokenManager.Object' new UsersModel { Diabetes = validPath }); " is 145.
Long Statement,HealthGraphNet.Tests.Unit,DiabetesMeasurementsEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\DiabetesMeasurementsEndpointTest.cs,DeleteMeasurement_UriNotValid_ArgumentException,The length of the statement  "            DiabetesMeasurementsEndpoint measurementRequest = new DiabetesMeasurementsEndpoint(tokenManager.Object' new UsersModel { Diabetes = validPath }); " is 145.
Long Statement,HealthGraphNet.Tests.Unit,DiabetesMeasurementsEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\DiabetesMeasurementsEndpointTest.cs,DeleteMeasurement_UriNotValid_ArgumentException,The length of the statement  "            Assert.ThrowsAsync(typeof(ArgumentException)' async () => { await measurementRequest.DeleteMeasurement("Not validPath."); }); " is 125.
Long Statement,HealthGraphNet.Tests.Unit,DiabetesMeasurementsEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\DiabetesMeasurementsEndpointTest.cs,UpdateMeasurement_AllPropertiesValid_DoesNotThrowArgumentException,The length of the statement  "            DiabetesMeasurementsEndpoint measurementRequest = new DiabetesMeasurementsEndpoint(tokenManager.Object' new UsersModel()); " is 122.
Long Statement,HealthGraphNet.Tests.Unit,DiabetesMeasurementsEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\DiabetesMeasurementsEndpointTest.cs,UpdateMeasurement_AllMeasurementsNull_ArgumentException,The length of the statement  "            DiabetesMeasurementsEndpoint measurementRequest = new DiabetesMeasurementsEndpoint(tokenManager.Object' new UsersModel()); " is 122.
Long Statement,HealthGraphNet.Tests.Unit,DiabetesMeasurementsEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\DiabetesMeasurementsEndpointTest.cs,CreateMeasurement_AllPropertiesValid_DoesNotThrowArgumentException,The length of the statement  "            DiabetesMeasurementsEndpoint measurementRequest = new DiabetesMeasurementsEndpoint(tokenManager.Object' new UsersModel()); " is 122.
Long Statement,HealthGraphNet.Tests.Unit,DiabetesMeasurementsEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\DiabetesMeasurementsEndpointTest.cs,CreateMeasurement_AllMeasurementsNull_ArgumentException,The length of the statement  "            DiabetesMeasurementsEndpoint measurementRequest = new DiabetesMeasurementsEndpoint(tokenManager.Object' new UsersModel()); " is 122.
Long Statement,HealthGraphNet.Tests.Unit,DiabetesMeasurementsEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\DiabetesMeasurementsEndpointTest.cs,CreateMeasurement_AllMeasurementsNull_ArgumentException,The length of the statement  "            Assert.ThrowsAsync(typeof(ArgumentException)' async () => { await measurementRequest.CreateMeasurement(ValidMeasurementNew); }); " is 128.
Long Statement,HealthGraphNet.Tests.Unit,FitnessActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\FitnessActivitiesEndpointTest.cs,GetActivity_UriValid_DoesNotThrowArgumentException,The length of the statement  "            FitnessActivitiesEndpoint activitiesRequest = new FitnessActivitiesEndpoint(tokenManager.Object' new UsersModel { FitnessActivities = validPath }); " is 147.
Long Statement,HealthGraphNet.Tests.Unit,FitnessActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\FitnessActivitiesEndpointTest.cs,GetActivity_UriNotValid_ArgumentException,The length of the statement  "            FitnessActivitiesEndpoint activitiesRequest = new FitnessActivitiesEndpoint(tokenManager.Object' new UsersModel { FitnessActivities = validPath }); " is 147.
Long Statement,HealthGraphNet.Tests.Unit,FitnessActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\FitnessActivitiesEndpointTest.cs,DeleteActivity_UriValid_DoesNotThrowArgumentException,The length of the statement  "            FitnessActivitiesEndpoint activitiesRequest = new FitnessActivitiesEndpoint(tokenManager.Object' new UsersModel { FitnessActivities = validPath }); " is 147.
Long Statement,HealthGraphNet.Tests.Unit,FitnessActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\FitnessActivitiesEndpointTest.cs,DeleteActivity_UriNotValid_ArgumentException,The length of the statement  "            FitnessActivitiesEndpoint activitiesRequest = new FitnessActivitiesEndpoint(tokenManager.Object' new UsersModel { FitnessActivities = validPath }); " is 147.
Long Statement,HealthGraphNet.Tests.Unit,FitnessActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\FitnessActivitiesEndpointTest.cs,DeleteActivity_UriNotValid_ArgumentException,The length of the statement  "            Assert.ThrowsAsync(typeof(ArgumentException)' async () => { await activitiesRequest.DeleteActivity("Not validPath."); }); " is 121.
Long Statement,HealthGraphNet.Tests.Unit,FitnessActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\FitnessActivitiesEndpointTest.cs,CreateActivity_EquipmentNotValid_ArgumentException,The length of the statement  "            Assert.ThrowsAsync(typeof(ArgumentException)' async () => { await activitiesRequest.CreateActivity(ValidActivityNew); }); " is 121.
Long Statement,HealthGraphNet.Tests.Unit,FitnessActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\FitnessActivitiesEndpointTest.cs,CreateActivity_PathTypeNotValid_ArgumentException,The length of the statement  "            Assert.ThrowsAsync(typeof(ArgumentException)' async () => { await activitiesRequest.CreateActivity(ValidActivityNew); }); " is 121.
Long Statement,HealthGraphNet.Tests.Unit,FitnessActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\FitnessActivitiesEndpointTest.cs,CreateActivity_OnePathItemInArray_ArgumentException,The length of the statement  "            Assert.ThrowsAsync(typeof(ArgumentException)' async () => { await activitiesRequest.CreateActivity(ValidActivityNew); }); " is 121.
Long Statement,HealthGraphNet.Tests.Unit,FitnessActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\FitnessActivitiesEndpointTest.cs,CreateActivity_TypeOtherSecondaryTypeSixtyFiveCharacters_ArgumentException,The length of the statement  "            Assert.ThrowsAsync(typeof(ArgumentException)' async () => { await activitiesRequest.CreateActivity(ValidActivityNew); }); " is 121.
Long Statement,HealthGraphNet.Tests.Unit,GeneralMeasurementsEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\GeneralMeasurementsEndpointTest.cs,GetMeasurement_UriValid_DoesNotThrowArgumentException,The length of the statement  "            GeneralMeasurementsEndpoint measurementRequest = new GeneralMeasurementsEndpoint(tokenManager.Object' new UsersModel { GeneralMeasurements = validPath }); " is 154.
Long Statement,HealthGraphNet.Tests.Unit,GeneralMeasurementsEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\GeneralMeasurementsEndpointTest.cs,GetMeasurement_UriNotValid_ArgumentException,The length of the statement  "            GeneralMeasurementsEndpoint measurementRequest = new GeneralMeasurementsEndpoint(tokenManager.Object' new UsersModel { GeneralMeasurements = validPath }); " is 154.
Long Statement,HealthGraphNet.Tests.Unit,GeneralMeasurementsEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\GeneralMeasurementsEndpointTest.cs,GetMeasurement_UriNotValid_ArgumentException,The length of the statement  "            Assert.ThrowsAsync(typeof(ArgumentException)' async() => { await measurementRequest.GetMeasurement("Not validPath."); }); " is 121.
Long Statement,HealthGraphNet.Tests.Unit,GeneralMeasurementsEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\GeneralMeasurementsEndpointTest.cs,DeleteMeasurement_UriValid_DoesNotThrowArgumentException,The length of the statement  "            GeneralMeasurementsEndpoint measurementRequest = new GeneralMeasurementsEndpoint(tokenManager.Object' new UsersModel { GeneralMeasurements = validPath }); " is 154.
Long Statement,HealthGraphNet.Tests.Unit,GeneralMeasurementsEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\GeneralMeasurementsEndpointTest.cs,DeleteMeasurement_UriNotValid_ArgumentException,The length of the statement  "            GeneralMeasurementsEndpoint measurementRequest = new GeneralMeasurementsEndpoint(tokenManager.Object' new UsersModel { GeneralMeasurements = validPath }); " is 154.
Long Statement,HealthGraphNet.Tests.Unit,GeneralMeasurementsEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\GeneralMeasurementsEndpointTest.cs,DeleteMeasurement_UriNotValid_ArgumentException,The length of the statement  "            Assert.ThrowsAsync(typeof(ArgumentException)' async() => { await measurementRequest.DeleteMeasurement("Not validPath."); }); " is 124.
Long Statement,HealthGraphNet.Tests.Unit,GeneralMeasurementsEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\GeneralMeasurementsEndpointTest.cs,UpdateMeasurement_AllPropertiesValid_DoesNotThrowArgumentException,The length of the statement  "            GeneralMeasurementsEndpoint measurementRequest = new GeneralMeasurementsEndpoint(tokenManager.Object' new UsersModel()); " is 120.
Long Statement,HealthGraphNet.Tests.Unit,GeneralMeasurementsEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\GeneralMeasurementsEndpointTest.cs,UpdateMeasurement_AllMeasurementsNull_ArgumentException,The length of the statement  "            GeneralMeasurementsEndpoint measurementRequest = new GeneralMeasurementsEndpoint(tokenManager.Object' new UsersModel()); " is 120.
Long Statement,HealthGraphNet.Tests.Unit,GeneralMeasurementsEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\GeneralMeasurementsEndpointTest.cs,UpdateMeasurement_AllMeasurementsNull_ArgumentException,The length of the statement  "            Assert.ThrowsAsync(typeof(ArgumentException)' async () => { await measurementRequest.UpdateMeasurement(ValidMeasurement); }); " is 125.
Long Statement,HealthGraphNet.Tests.Unit,GeneralMeasurementsEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\GeneralMeasurementsEndpointTest.cs,CreateMeasurement_AllPropertiesValid_DoesNotThrowArgumentException,The length of the statement  "            GeneralMeasurementsEndpoint measurementRequest = new GeneralMeasurementsEndpoint(tokenManager.Object' new UsersModel()); " is 120.
Long Statement,HealthGraphNet.Tests.Unit,GeneralMeasurementsEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\GeneralMeasurementsEndpointTest.cs,CreateMeasurement_AllMeasurementsNull_ArgumentException,The length of the statement  "            GeneralMeasurementsEndpoint measurementRequest = new GeneralMeasurementsEndpoint(tokenManager.Object' new UsersModel()); " is 120.
Long Statement,HealthGraphNet.Tests.Unit,GeneralMeasurementsEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\GeneralMeasurementsEndpointTest.cs,CreateMeasurement_AllMeasurementsNull_ArgumentException,The length of the statement  "            Assert.ThrowsAsync(typeof(ArgumentException)' async () => { await measurementRequest.CreateMeasurement(ValidMeasurementNew); }); " is 128.
Long Statement,HealthGraphNet.Tests.Unit,NutritionEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\NutritionEndpointTest.cs,GetNutrition_UriValid_DoesNotThrowArgumentException,The length of the statement  "            NutritionEndpoint nutritionRequest = new NutritionEndpoint(tokenManager.Object' new UsersModel { Nutrition = validPath }); " is 122.
Long Statement,HealthGraphNet.Tests.Unit,NutritionEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\NutritionEndpointTest.cs,GetNutrition_UriNotValid_ArgumentException,The length of the statement  "            NutritionEndpoint nutritionRequest = new NutritionEndpoint(tokenManager.Object' new UsersModel { Nutrition = validPath }); " is 122.
Long Statement,HealthGraphNet.Tests.Unit,NutritionEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\NutritionEndpointTest.cs,DeleteNutrition_UriValid_DoesNotThrowArgumentException,The length of the statement  "            NutritionEndpoint nutritionRequest = new NutritionEndpoint(tokenManager.Object' new UsersModel { Nutrition = validPath }); " is 122.
Long Statement,HealthGraphNet.Tests.Unit,NutritionEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\NutritionEndpointTest.cs,DeleteNutrition_UriNotValid_ArgumentException,The length of the statement  "            NutritionEndpoint nutritionRequest = new NutritionEndpoint(tokenManager.Object' new UsersModel { Nutrition = validPath }); " is 122.
Long Statement,HealthGraphNet.Tests.Unit,NutritionEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\NutritionEndpointTest.cs,DeleteNutrition_UriNotValid_ArgumentException,The length of the statement  "            Assert.ThrowsAsync(typeof(ArgumentException)' async () => { await nutritionRequest.DeleteNutrition("Not validPath."); }); " is 121.
Long Statement,HealthGraphNet.Tests.Unit,NutritionEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\NutritionEndpointTest.cs,CreateNutrition_AllMeasurementsNull_ArgumentException,The length of the statement  "            Assert.ThrowsAsync(typeof(ArgumentException)' async () => { await nutritionRequest.CreateNutrition(ValidNutritionNew); }); " is 122.
Long Statement,HealthGraphNet.Tests.Unit,StreetTeamEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StreetTeamEndpointTest.cs,GetStreetTeam_UriValid_DoesNotThrowArgumentException,The length of the statement  "            StreetTeamEndpoint streetTeamRequest = new StreetTeamEndpoint(tokenManager.Object' new UsersModel { Team = validPath }); " is 120.
Long Statement,HealthGraphNet.Tests.Unit,StreetTeamEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StreetTeamEndpointTest.cs,GetStreetTeam_UriNotValid_ArgumentException,The length of the statement  "            StreetTeamEndpoint streetTeamRequest = new StreetTeamEndpoint(tokenManager.Object' new UsersModel { Team = validPath }); " is 120.
Long Statement,HealthGraphNet.Tests.Unit,StreetTeamEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StreetTeamEndpointTest.cs,GetStreetTeam_UriNotValid_ArgumentException,The length of the statement  "            Assert.ThrowsAsync(typeof(ArgumentException)' async () => { await streetTeamRequest.GetStreetTeam("Not validPath."); }); " is 120.
Long Statement,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,GetActivity_UriValid_DoesNotThrowArgumentException,The length of the statement  "            StrengthTrainingActivitiesEndpoint activitiesRequest = new StrengthTrainingActivitiesEndpoint(tokenManager.Object' new UsersModel { StrengthTrainingActivities = validPath }); " is 174.
Long Statement,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,GetActivity_UriNotValid_ArgumentException,The length of the statement  "            StrengthTrainingActivitiesEndpoint activitiesRequest = new StrengthTrainingActivitiesEndpoint(tokenManager.Object' new UsersModel { StrengthTrainingActivities = validPath }); " is 174.
Long Statement,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,DeleteActivity_UriValid_DoesNotThrowArgumentException,The length of the statement  "            StrengthTrainingActivitiesEndpoint activitiesRequest = new StrengthTrainingActivitiesEndpoint(tokenManager.Object' new UsersModel { StrengthTrainingActivities = validPath }); " is 174.
Long Statement,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,DeleteActivity_UriNotValid_ArgumentException,The length of the statement  "            StrengthTrainingActivitiesEndpoint activitiesRequest = new StrengthTrainingActivitiesEndpoint(tokenManager.Object' new UsersModel { StrengthTrainingActivities = validPath }); " is 174.
Long Statement,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,DeleteActivity_UriNotValid_ArgumentException,The length of the statement  "            Assert.ThrowsAsync(typeof(ArgumentException)' async () => { await activitiesRequest.DeleteActivity("Not validPath."); }); " is 121.
Long Statement,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,UpdateActivity_AllPropertiesValid_DoesNotThrowArgumentException,The length of the statement  "            StrengthTrainingActivitiesEndpoint activitiesRequest = new StrengthTrainingActivitiesEndpoint(tokenManager.Object' new UsersModel()); " is 133.
Long Statement,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,UpdateActivity_NotesNull_DoesNotThrowArgumentException,The length of the statement  "            StrengthTrainingActivitiesEndpoint activitiesRequest = new StrengthTrainingActivitiesEndpoint(tokenManager.Object' new UsersModel()); " is 133.
Long Statement,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,UpdateActivity_NotesTenThousandTwentyFiveCharacters_ArgumentException,The length of the statement  "            StrengthTrainingActivitiesEndpoint activitiesRequest = new StrengthTrainingActivitiesEndpoint(tokenManager.Object' new UsersModel()); " is 133.
Long Statement,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,UpdateActivity_ExercisesNull_ArgumentException,The length of the statement  "            StrengthTrainingActivitiesEndpoint activitiesRequest = new StrengthTrainingActivitiesEndpoint(tokenManager.Object' new UsersModel()); " is 133.
Long Statement,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,UpdateActivity_ExercisesEmptyList_ArgumentException,The length of the statement  "            StrengthTrainingActivitiesEndpoint activitiesRequest = new StrengthTrainingActivitiesEndpoint(tokenManager.Object' new UsersModel()); " is 133.
Long Statement,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,UpdateActivity_ExercisePrimaryTypeNotValid_ArgumentException,The length of the statement  "            StrengthTrainingActivitiesEndpoint activitiesRequest = new StrengthTrainingActivitiesEndpoint(tokenManager.Object' new UsersModel()); " is 133.
Long Statement,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,UpdateActivity_ExercisePrimaryMuscleGroupNotValid_ArgumentException,The length of the statement  "            StrengthTrainingActivitiesEndpoint activitiesRequest = new StrengthTrainingActivitiesEndpoint(tokenManager.Object' new UsersModel()); " is 133.
Long Statement,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,UpdateActivity_ExerciseSecondaryMuscleGroupNull_DoesNotThrowArgumentException,The length of the statement  "            StrengthTrainingActivitiesEndpoint activitiesRequest = new StrengthTrainingActivitiesEndpoint(tokenManager.Object' new UsersModel()); " is 133.
Long Statement,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,UpdateActivity_ExerciseSecondaryMuscleGroupNotValid_ArgumentException,The length of the statement  "            StrengthTrainingActivitiesEndpoint activitiesRequest = new StrengthTrainingActivitiesEndpoint(tokenManager.Object' new UsersModel()); " is 133.
Long Statement,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,UpdateActivity_ExerciseRoutineNull_DoesNotThrowArgumentException,The length of the statement  "            StrengthTrainingActivitiesEndpoint activitiesRequest = new StrengthTrainingActivitiesEndpoint(tokenManager.Object' new UsersModel()); " is 133.
Long Statement,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,UpdateActivity_ExerciseRoutineThirtyThreeCharacters_ArgumentException,The length of the statement  "            StrengthTrainingActivitiesEndpoint activitiesRequest = new StrengthTrainingActivitiesEndpoint(tokenManager.Object' new UsersModel()); " is 133.
Long Statement,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,UpdateActivity_ExerciseNotesNull_DoesNotThrowArgumentException,The length of the statement  "            StrengthTrainingActivitiesEndpoint activitiesRequest = new StrengthTrainingActivitiesEndpoint(tokenManager.Object' new UsersModel()); " is 133.
Long Statement,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,UpdateActivity_ExerciseNotesTenThousandTwentyFiveCharacters_ArgumentException,The length of the statement  "            StrengthTrainingActivitiesEndpoint activitiesRequest = new StrengthTrainingActivitiesEndpoint(tokenManager.Object' new UsersModel()); " is 133.
Long Statement,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,UpdateActivity_ExerciseSetNull_ArgumentException,The length of the statement  "            StrengthTrainingActivitiesEndpoint activitiesRequest = new StrengthTrainingActivitiesEndpoint(tokenManager.Object' new UsersModel()); " is 133.
Long Statement,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,UpdateActivity_ExerciseSetEmptyList_ArgumentException,The length of the statement  "            StrengthTrainingActivitiesEndpoint activitiesRequest = new StrengthTrainingActivitiesEndpoint(tokenManager.Object' new UsersModel()); " is 133.
Long Statement,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,UpdateActivity_ExerciseSetNotesNull_DoesNotThrowArgumentException,The length of the statement  "            StrengthTrainingActivitiesEndpoint activitiesRequest = new StrengthTrainingActivitiesEndpoint(tokenManager.Object' new UsersModel()); " is 133.
Long Statement,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,UpdateActivity_ExerciseSetNotesTenThousandTwentyFiveCharacters_ArgumentException,The length of the statement  "            StrengthTrainingActivitiesEndpoint activitiesRequest = new StrengthTrainingActivitiesEndpoint(tokenManager.Object' new UsersModel()); " is 133.
Long Statement,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,CreateActivity_AllPropertiesValid_DoesNotThrowArgumentException,The length of the statement  "            StrengthTrainingActivitiesEndpoint activitiesRequest = new StrengthTrainingActivitiesEndpoint(tokenManager.Object' new UsersModel()); " is 133.
Long Statement,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,CreateActivity_NotesNull_DoesNotThrowArgumentException,The length of the statement  "            StrengthTrainingActivitiesEndpoint activitiesRequest = new StrengthTrainingActivitiesEndpoint(tokenManager.Object' new UsersModel()); " is 133.
Long Statement,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,CreateActivity_NotesTenThousandTwentyFiveCharacters_ArgumentException,The length of the statement  "            StrengthTrainingActivitiesEndpoint activitiesRequest = new StrengthTrainingActivitiesEndpoint(tokenManager.Object' new UsersModel()); " is 133.
Long Statement,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,CreateActivity_NotesTenThousandTwentyFiveCharacters_ArgumentException,The length of the statement  "            Assert.ThrowsAsync(typeof(ArgumentException)' async () => { await activitiesRequest.CreateActivity(ValidActivityNew); }); " is 121.
Long Statement,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,CreateActivity_ExercisesNull_ArgumentException,The length of the statement  "            StrengthTrainingActivitiesEndpoint activitiesRequest = new StrengthTrainingActivitiesEndpoint(tokenManager.Object' new UsersModel()); " is 133.
Long Statement,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,CreateActivity_ExercisesNull_ArgumentException,The length of the statement  "            Assert.ThrowsAsync(typeof(ArgumentException)' async () => { await activitiesRequest.CreateActivity(ValidActivityNew); }); " is 121.
Long Statement,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,CreateActivity_ExercisesEmptyList_ArgumentException,The length of the statement  "            StrengthTrainingActivitiesEndpoint activitiesRequest = new StrengthTrainingActivitiesEndpoint(tokenManager.Object' new UsersModel()); " is 133.
Long Statement,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,CreateActivity_ExercisesEmptyList_ArgumentException,The length of the statement  "            Assert.ThrowsAsync(typeof(ArgumentException)' async () => { await activitiesRequest.CreateActivity(ValidActivityNew); }); " is 121.
Long Statement,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,CreateActivity_ExercisePrimaryTypeNotValid_ArgumentException,The length of the statement  "            StrengthTrainingActivitiesEndpoint activitiesRequest = new StrengthTrainingActivitiesEndpoint(tokenManager.Object' new UsersModel()); " is 133.
Long Statement,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,CreateActivity_ExercisePrimaryTypeNotValid_ArgumentException,The length of the statement  "            Assert.ThrowsAsync(typeof(ArgumentException)' async () => { await activitiesRequest.CreateActivity(ValidActivityNew); }); " is 121.
Long Statement,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,CreateActivity_ExercisePrimaryMuscleGroupNotValid_ArgumentException,The length of the statement  "            StrengthTrainingActivitiesEndpoint activitiesRequest = new StrengthTrainingActivitiesEndpoint(tokenManager.Object' new UsersModel()); " is 133.
Long Statement,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,CreateActivity_ExercisePrimaryMuscleGroupNotValid_ArgumentException,The length of the statement  "            Assert.ThrowsAsync(typeof(ArgumentException)' async () => { await activitiesRequest.CreateActivity(ValidActivityNew); }); " is 121.
Long Statement,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,CreateActivity_ExerciseSecondaryMuscleGroupNull_DoesNotThrowArgumentException,The length of the statement  "            StrengthTrainingActivitiesEndpoint activitiesRequest = new StrengthTrainingActivitiesEndpoint(tokenManager.Object' new UsersModel()); " is 133.
Long Statement,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,CreateActivity_ExerciseSecondaryMuscleGroupNotValid_ArgumentException,The length of the statement  "            StrengthTrainingActivitiesEndpoint activitiesRequest = new StrengthTrainingActivitiesEndpoint(tokenManager.Object' new UsersModel()); " is 133.
Long Statement,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,CreateActivity_ExerciseSecondaryMuscleGroupNotValid_ArgumentException,The length of the statement  "            Assert.ThrowsAsync(typeof(ArgumentException)' async () => { await activitiesRequest.CreateActivity(ValidActivityNew); }); " is 121.
Long Statement,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,CreateActivity_ExerciseRoutineNull_DoesNotThrowArgumentException,The length of the statement  "            StrengthTrainingActivitiesEndpoint activitiesRequest = new StrengthTrainingActivitiesEndpoint(tokenManager.Object' new UsersModel()); " is 133.
Long Statement,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,CreateActivity_ExerciseRoutineThirtyThreeCharacters_ArgumentException,The length of the statement  "            StrengthTrainingActivitiesEndpoint activitiesRequest = new StrengthTrainingActivitiesEndpoint(tokenManager.Object' new UsersModel()); " is 133.
Long Statement,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,CreateActivity_ExerciseRoutineThirtyThreeCharacters_ArgumentException,The length of the statement  "            Assert.ThrowsAsync(typeof(ArgumentException)' async () => { await activitiesRequest.CreateActivity(ValidActivityNew); }); " is 121.
Long Statement,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,CreateActivity_ExerciseNotesNull_DoesNotThrowArgumentException,The length of the statement  "            StrengthTrainingActivitiesEndpoint activitiesRequest = new StrengthTrainingActivitiesEndpoint(tokenManager.Object' new UsersModel()); " is 133.
Long Statement,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,CreateActivity_ExerciseNotesTenThousandTwentyFiveCharacters_ArgumentException,The length of the statement  "            StrengthTrainingActivitiesEndpoint activitiesRequest = new StrengthTrainingActivitiesEndpoint(tokenManager.Object' new UsersModel()); " is 133.
Long Statement,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,CreateActivity_ExerciseNotesTenThousandTwentyFiveCharacters_ArgumentException,The length of the statement  "            Assert.ThrowsAsync(typeof(ArgumentException)' async () => { await activitiesRequest.CreateActivity(ValidActivityNew); }); " is 121.
Long Statement,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,CreateActivity_ExerciseSetNull_ArgumentException,The length of the statement  "            StrengthTrainingActivitiesEndpoint activitiesRequest = new StrengthTrainingActivitiesEndpoint(tokenManager.Object' new UsersModel()); " is 133.
Long Statement,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,CreateActivity_ExerciseSetNull_ArgumentException,The length of the statement  "            Assert.ThrowsAsync(typeof(ArgumentException)' async () => { await activitiesRequest.CreateActivity(ValidActivityNew); }); " is 121.
Long Statement,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,CreateActivity_ExerciseSetEmptyList_ArgumentException,The length of the statement  "            StrengthTrainingActivitiesEndpoint activitiesRequest = new StrengthTrainingActivitiesEndpoint(tokenManager.Object' new UsersModel()); " is 133.
Long Statement,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,CreateActivity_ExerciseSetEmptyList_ArgumentException,The length of the statement  "            Assert.ThrowsAsync(typeof(ArgumentException)' async () => { await activitiesRequest.CreateActivity(ValidActivityNew); }); " is 121.
Long Statement,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,CreateActivity_ExerciseSetNotesNull_DoesNotThrowArgumentException,The length of the statement  "            StrengthTrainingActivitiesEndpoint activitiesRequest = new StrengthTrainingActivitiesEndpoint(tokenManager.Object' new UsersModel()); " is 133.
Long Statement,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,CreateActivity_ExerciseSetNotesTenThousandTwentyFiveCharacters_ArgumentException,The length of the statement  "            StrengthTrainingActivitiesEndpoint activitiesRequest = new StrengthTrainingActivitiesEndpoint(tokenManager.Object' new UsersModel()); " is 133.
Long Statement,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,CreateActivity_ExerciseSetNotesTenThousandTwentyFiveCharacters_ArgumentException,The length of the statement  "            Assert.ThrowsAsync(typeof(ArgumentException)' async () => { await activitiesRequest.CreateActivity(ValidActivityNew); }); " is 121.
Long Statement,HealthGraphNet.Tests.Unit.RestSharp,ValidateHelperTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\RestSharp\ValidateHelperTest.cs,IsValueValid_ValueIsNotInValidValueList_ArgumentException,The length of the statement  "            Assert.Throws(typeof(ArgumentException)' () => { ValidateHelper.IsValueValid<string>(invalidValue' ValidValues' "Fruit"); }); " is 125.
Magic Number,HealthGraphNet.Tests.Integration,FitnessActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Integration\Endpoints\FitnessActivitiesEndpointTest.cs,FitnessActivity_CRUD,The following statement contains a magic number: var newActivity = new FitnessActivitiesNewModel              {                  Type = FitnessActivityType.Cycling'                  Equipment = "Treadmill"'                  StartTime = DateTime.Now'                  TotalDistance = 237903.79842947799d'                  Duration = 120'                  AverageHeartRate = 100'                  HeartRate = new List<HeartRateModel> { new HeartRateModel { Timestamp = 60' HeartRate = 100 } }'                  TotalCalories = 44'                  Notes = "Integration test!"'                  Path = new List<PathModel>                   {                       new PathModel { Timestamp = 0' Latitude = 100' Longitude = 100' Altitude = 0' Type = "start" }'                       new PathModel { Timestamp = 120' Latitude = 102' Longitude = 104' Altitude = 0' Type = "end" }                  }'                  PostToFacebook = false'                  PostToTwitter = false'                  DetectPauses = false              };
Magic Number,HealthGraphNet.Tests.Integration,FitnessActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Integration\Endpoints\FitnessActivitiesEndpointTest.cs,FitnessActivity_CRUD,The following statement contains a magic number: var newActivity = new FitnessActivitiesNewModel              {                  Type = FitnessActivityType.Cycling'                  Equipment = "Treadmill"'                  StartTime = DateTime.Now'                  TotalDistance = 237903.79842947799d'                  Duration = 120'                  AverageHeartRate = 100'                  HeartRate = new List<HeartRateModel> { new HeartRateModel { Timestamp = 60' HeartRate = 100 } }'                  TotalCalories = 44'                  Notes = "Integration test!"'                  Path = new List<PathModel>                   {                       new PathModel { Timestamp = 0' Latitude = 100' Longitude = 100' Altitude = 0' Type = "start" }'                       new PathModel { Timestamp = 120' Latitude = 102' Longitude = 104' Altitude = 0' Type = "end" }                  }'                  PostToFacebook = false'                  PostToTwitter = false'                  DetectPauses = false              };
Magic Number,HealthGraphNet.Tests.Integration,FitnessActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Integration\Endpoints\FitnessActivitiesEndpointTest.cs,FitnessActivity_CRUD,The following statement contains a magic number: var newActivity = new FitnessActivitiesNewModel              {                  Type = FitnessActivityType.Cycling'                  Equipment = "Treadmill"'                  StartTime = DateTime.Now'                  TotalDistance = 237903.79842947799d'                  Duration = 120'                  AverageHeartRate = 100'                  HeartRate = new List<HeartRateModel> { new HeartRateModel { Timestamp = 60' HeartRate = 100 } }'                  TotalCalories = 44'                  Notes = "Integration test!"'                  Path = new List<PathModel>                   {                       new PathModel { Timestamp = 0' Latitude = 100' Longitude = 100' Altitude = 0' Type = "start" }'                       new PathModel { Timestamp = 120' Latitude = 102' Longitude = 104' Altitude = 0' Type = "end" }                  }'                  PostToFacebook = false'                  PostToTwitter = false'                  DetectPauses = false              };
Magic Number,HealthGraphNet.Tests.Integration,FitnessActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Integration\Endpoints\FitnessActivitiesEndpointTest.cs,FitnessActivity_CRUD,The following statement contains a magic number: var newActivity = new FitnessActivitiesNewModel              {                  Type = FitnessActivityType.Cycling'                  Equipment = "Treadmill"'                  StartTime = DateTime.Now'                  TotalDistance = 237903.79842947799d'                  Duration = 120'                  AverageHeartRate = 100'                  HeartRate = new List<HeartRateModel> { new HeartRateModel { Timestamp = 60' HeartRate = 100 } }'                  TotalCalories = 44'                  Notes = "Integration test!"'                  Path = new List<PathModel>                   {                       new PathModel { Timestamp = 0' Latitude = 100' Longitude = 100' Altitude = 0' Type = "start" }'                       new PathModel { Timestamp = 120' Latitude = 102' Longitude = 104' Altitude = 0' Type = "end" }                  }'                  PostToFacebook = false'                  PostToTwitter = false'                  DetectPauses = false              };
Magic Number,HealthGraphNet.Tests.Integration,FitnessActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Integration\Endpoints\FitnessActivitiesEndpointTest.cs,FitnessActivity_CRUD,The following statement contains a magic number: var newActivity = new FitnessActivitiesNewModel              {                  Type = FitnessActivityType.Cycling'                  Equipment = "Treadmill"'                  StartTime = DateTime.Now'                  TotalDistance = 237903.79842947799d'                  Duration = 120'                  AverageHeartRate = 100'                  HeartRate = new List<HeartRateModel> { new HeartRateModel { Timestamp = 60' HeartRate = 100 } }'                  TotalCalories = 44'                  Notes = "Integration test!"'                  Path = new List<PathModel>                   {                       new PathModel { Timestamp = 0' Latitude = 100' Longitude = 100' Altitude = 0' Type = "start" }'                       new PathModel { Timestamp = 120' Latitude = 102' Longitude = 104' Altitude = 0' Type = "end" }                  }'                  PostToFacebook = false'                  PostToTwitter = false'                  DetectPauses = false              };
Magic Number,HealthGraphNet.Tests.Integration,FitnessActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Integration\Endpoints\FitnessActivitiesEndpointTest.cs,FitnessActivity_CRUD,The following statement contains a magic number: var newActivity = new FitnessActivitiesNewModel              {                  Type = FitnessActivityType.Cycling'                  Equipment = "Treadmill"'                  StartTime = DateTime.Now'                  TotalDistance = 237903.79842947799d'                  Duration = 120'                  AverageHeartRate = 100'                  HeartRate = new List<HeartRateModel> { new HeartRateModel { Timestamp = 60' HeartRate = 100 } }'                  TotalCalories = 44'                  Notes = "Integration test!"'                  Path = new List<PathModel>                   {                       new PathModel { Timestamp = 0' Latitude = 100' Longitude = 100' Altitude = 0' Type = "start" }'                       new PathModel { Timestamp = 120' Latitude = 102' Longitude = 104' Altitude = 0' Type = "end" }                  }'                  PostToFacebook = false'                  PostToTwitter = false'                  DetectPauses = false              };
Magic Number,HealthGraphNet.Tests.Integration,FitnessActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Integration\Endpoints\FitnessActivitiesEndpointTest.cs,FitnessActivity_CRUD,The following statement contains a magic number: var newActivity = new FitnessActivitiesNewModel              {                  Type = FitnessActivityType.Cycling'                  Equipment = "Treadmill"'                  StartTime = DateTime.Now'                  TotalDistance = 237903.79842947799d'                  Duration = 120'                  AverageHeartRate = 100'                  HeartRate = new List<HeartRateModel> { new HeartRateModel { Timestamp = 60' HeartRate = 100 } }'                  TotalCalories = 44'                  Notes = "Integration test!"'                  Path = new List<PathModel>                   {                       new PathModel { Timestamp = 0' Latitude = 100' Longitude = 100' Altitude = 0' Type = "start" }'                       new PathModel { Timestamp = 120' Latitude = 102' Longitude = 104' Altitude = 0' Type = "end" }                  }'                  PostToFacebook = false'                  PostToTwitter = false'                  DetectPauses = false              };
Magic Number,HealthGraphNet.Tests.Integration,FitnessActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Integration\Endpoints\FitnessActivitiesEndpointTest.cs,FitnessActivity_CRUD,The following statement contains a magic number: var newActivity = new FitnessActivitiesNewModel              {                  Type = FitnessActivityType.Cycling'                  Equipment = "Treadmill"'                  StartTime = DateTime.Now'                  TotalDistance = 237903.79842947799d'                  Duration = 120'                  AverageHeartRate = 100'                  HeartRate = new List<HeartRateModel> { new HeartRateModel { Timestamp = 60' HeartRate = 100 } }'                  TotalCalories = 44'                  Notes = "Integration test!"'                  Path = new List<PathModel>                   {                       new PathModel { Timestamp = 0' Latitude = 100' Longitude = 100' Altitude = 0' Type = "start" }'                       new PathModel { Timestamp = 120' Latitude = 102' Longitude = 104' Altitude = 0' Type = "end" }                  }'                  PostToFacebook = false'                  PostToTwitter = false'                  DetectPauses = false              };
Magic Number,HealthGraphNet.Tests.Integration,FitnessActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Integration\Endpoints\FitnessActivitiesEndpointTest.cs,FitnessActivity_CRUD,The following statement contains a magic number: var newActivity = new FitnessActivitiesNewModel              {                  Type = FitnessActivityType.Cycling'                  Equipment = "Treadmill"'                  StartTime = DateTime.Now'                  TotalDistance = 237903.79842947799d'                  Duration = 120'                  AverageHeartRate = 100'                  HeartRate = new List<HeartRateModel> { new HeartRateModel { Timestamp = 60' HeartRate = 100 } }'                  TotalCalories = 44'                  Notes = "Integration test!"'                  Path = new List<PathModel>                   {                       new PathModel { Timestamp = 0' Latitude = 100' Longitude = 100' Altitude = 0' Type = "start" }'                       new PathModel { Timestamp = 120' Latitude = 102' Longitude = 104' Altitude = 0' Type = "end" }                  }'                  PostToFacebook = false'                  PostToTwitter = false'                  DetectPauses = false              };
Magic Number,HealthGraphNet.Tests.Integration,FitnessActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Integration\Endpoints\FitnessActivitiesEndpointTest.cs,FitnessActivity_CRUD,The following statement contains a magic number: var newActivity = new FitnessActivitiesNewModel              {                  Type = FitnessActivityType.Cycling'                  Equipment = "Treadmill"'                  StartTime = DateTime.Now'                  TotalDistance = 237903.79842947799d'                  Duration = 120'                  AverageHeartRate = 100'                  HeartRate = new List<HeartRateModel> { new HeartRateModel { Timestamp = 60' HeartRate = 100 } }'                  TotalCalories = 44'                  Notes = "Integration test!"'                  Path = new List<PathModel>                   {                       new PathModel { Timestamp = 0' Latitude = 100' Longitude = 100' Altitude = 0' Type = "start" }'                       new PathModel { Timestamp = 120' Latitude = 102' Longitude = 104' Altitude = 0' Type = "end" }                  }'                  PostToFacebook = false'                  PostToTwitter = false'                  DetectPauses = false              };
Magic Number,HealthGraphNet.Tests.Integration,FitnessActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Integration\Endpoints\FitnessActivitiesEndpointTest.cs,FitnessActivity_CRUD,The following statement contains a magic number: var newActivity = new FitnessActivitiesNewModel              {                  Type = FitnessActivityType.Cycling'                  Equipment = "Treadmill"'                  StartTime = DateTime.Now'                  TotalDistance = 237903.79842947799d'                  Duration = 120'                  AverageHeartRate = 100'                  HeartRate = new List<HeartRateModel> { new HeartRateModel { Timestamp = 60' HeartRate = 100 } }'                  TotalCalories = 44'                  Notes = "Integration test!"'                  Path = new List<PathModel>                   {                       new PathModel { Timestamp = 0' Latitude = 100' Longitude = 100' Altitude = 0' Type = "start" }'                       new PathModel { Timestamp = 120' Latitude = 102' Longitude = 104' Altitude = 0' Type = "end" }                  }'                  PostToFacebook = false'                  PostToTwitter = false'                  DetectPauses = false              };
Magic Number,HealthGraphNet.Tests.Unit,BackgroundActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\BackgroundActivitiesEndpointTest.cs,Init,The following statement contains a magic number: ValidActivity = new BackgroundActivitiesPastModel              {                  Steps = 500              };
Magic Number,HealthGraphNet.Tests.Unit,BackgroundActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\BackgroundActivitiesEndpointTest.cs,Init,The following statement contains a magic number: ValidActivityNew = new BackgroundActivitiesNewModel              {                  Timestamp = DateTime.Now'                  Steps = 500'                  PostToFacebook = null'                  PostToTwitter = null              };
Magic Number,HealthGraphNet.Tests.Unit,DiabetesMeasurementsEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\DiabetesMeasurementsEndpointTest.cs,Init,The following statement contains a magic number: ValidMeasurement = new DiabetesMeasurementsPastModel              {                  Insulin = 100              };
Magic Number,HealthGraphNet.Tests.Unit,DiabetesMeasurementsEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\DiabetesMeasurementsEndpointTest.cs,Init,The following statement contains a magic number: ValidMeasurementNew = new DiabetesMeasurementsNewModel              {                  Timestamp = DateTime.Now'                  Insulin = 10'                  PostToFacebook = null'                  PostToTwitter = null              };
Magic Number,HealthGraphNet.Tests.Unit,FitnessActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\FitnessActivitiesEndpointTest.cs,Init,The following statement contains a magic number: ValidActivity = new FitnessActivitiesPastModel              {                  Type = FitnessActivityType.Cycling'                  SecondaryType = string.Empty'                  Equipment = FitnessActivitiesEndpoint.ValidEquipment.First()'                  StartTime = DateTime.Now'                  Duration = 120'                  AverageHeartRate = 0'                  HeartRate = null'                  TotalCalories = 500'                  Notes = null'                  Path = new List<PathModel>                  {                      new PathModel                      {                          Timestamp = 0'                          Latitude = 100.0'                          Longitude = 100.0'                          Altitude = 100.0'                          Type = FitnessActivitiesEndpoint.ValidPathType.First()                      }'                      new PathModel                      {                          Timestamp = 60'                          Latitude = 120.0'                          Longitude = 120.0'                          Altitude = 50.0'                          Type = FitnessActivitiesEndpoint.ValidPathType.First()                      }                  }              };
Magic Number,HealthGraphNet.Tests.Unit,FitnessActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\FitnessActivitiesEndpointTest.cs,Init,The following statement contains a magic number: ValidActivity = new FitnessActivitiesPastModel              {                  Type = FitnessActivityType.Cycling'                  SecondaryType = string.Empty'                  Equipment = FitnessActivitiesEndpoint.ValidEquipment.First()'                  StartTime = DateTime.Now'                  Duration = 120'                  AverageHeartRate = 0'                  HeartRate = null'                  TotalCalories = 500'                  Notes = null'                  Path = new List<PathModel>                  {                      new PathModel                      {                          Timestamp = 0'                          Latitude = 100.0'                          Longitude = 100.0'                          Altitude = 100.0'                          Type = FitnessActivitiesEndpoint.ValidPathType.First()                      }'                      new PathModel                      {                          Timestamp = 60'                          Latitude = 120.0'                          Longitude = 120.0'                          Altitude = 50.0'                          Type = FitnessActivitiesEndpoint.ValidPathType.First()                      }                  }              };
Magic Number,HealthGraphNet.Tests.Unit,FitnessActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\FitnessActivitiesEndpointTest.cs,Init,The following statement contains a magic number: ValidActivity = new FitnessActivitiesPastModel              {                  Type = FitnessActivityType.Cycling'                  SecondaryType = string.Empty'                  Equipment = FitnessActivitiesEndpoint.ValidEquipment.First()'                  StartTime = DateTime.Now'                  Duration = 120'                  AverageHeartRate = 0'                  HeartRate = null'                  TotalCalories = 500'                  Notes = null'                  Path = new List<PathModel>                  {                      new PathModel                      {                          Timestamp = 0'                          Latitude = 100.0'                          Longitude = 100.0'                          Altitude = 100.0'                          Type = FitnessActivitiesEndpoint.ValidPathType.First()                      }'                      new PathModel                      {                          Timestamp = 60'                          Latitude = 120.0'                          Longitude = 120.0'                          Altitude = 50.0'                          Type = FitnessActivitiesEndpoint.ValidPathType.First()                      }                  }              };
Magic Number,HealthGraphNet.Tests.Unit,FitnessActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\FitnessActivitiesEndpointTest.cs,Init,The following statement contains a magic number: ValidActivity = new FitnessActivitiesPastModel              {                  Type = FitnessActivityType.Cycling'                  SecondaryType = string.Empty'                  Equipment = FitnessActivitiesEndpoint.ValidEquipment.First()'                  StartTime = DateTime.Now'                  Duration = 120'                  AverageHeartRate = 0'                  HeartRate = null'                  TotalCalories = 500'                  Notes = null'                  Path = new List<PathModel>                  {                      new PathModel                      {                          Timestamp = 0'                          Latitude = 100.0'                          Longitude = 100.0'                          Altitude = 100.0'                          Type = FitnessActivitiesEndpoint.ValidPathType.First()                      }'                      new PathModel                      {                          Timestamp = 60'                          Latitude = 120.0'                          Longitude = 120.0'                          Altitude = 50.0'                          Type = FitnessActivitiesEndpoint.ValidPathType.First()                      }                  }              };
Magic Number,HealthGraphNet.Tests.Unit,FitnessActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\FitnessActivitiesEndpointTest.cs,Init,The following statement contains a magic number: ValidActivity = new FitnessActivitiesPastModel              {                  Type = FitnessActivityType.Cycling'                  SecondaryType = string.Empty'                  Equipment = FitnessActivitiesEndpoint.ValidEquipment.First()'                  StartTime = DateTime.Now'                  Duration = 120'                  AverageHeartRate = 0'                  HeartRate = null'                  TotalCalories = 500'                  Notes = null'                  Path = new List<PathModel>                  {                      new PathModel                      {                          Timestamp = 0'                          Latitude = 100.0'                          Longitude = 100.0'                          Altitude = 100.0'                          Type = FitnessActivitiesEndpoint.ValidPathType.First()                      }'                      new PathModel                      {                          Timestamp = 60'                          Latitude = 120.0'                          Longitude = 120.0'                          Altitude = 50.0'                          Type = FitnessActivitiesEndpoint.ValidPathType.First()                      }                  }              };
Magic Number,HealthGraphNet.Tests.Unit,FitnessActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\FitnessActivitiesEndpointTest.cs,Init,The following statement contains a magic number: ValidActivity = new FitnessActivitiesPastModel              {                  Type = FitnessActivityType.Cycling'                  SecondaryType = string.Empty'                  Equipment = FitnessActivitiesEndpoint.ValidEquipment.First()'                  StartTime = DateTime.Now'                  Duration = 120'                  AverageHeartRate = 0'                  HeartRate = null'                  TotalCalories = 500'                  Notes = null'                  Path = new List<PathModel>                  {                      new PathModel                      {                          Timestamp = 0'                          Latitude = 100.0'                          Longitude = 100.0'                          Altitude = 100.0'                          Type = FitnessActivitiesEndpoint.ValidPathType.First()                      }'                      new PathModel                      {                          Timestamp = 60'                          Latitude = 120.0'                          Longitude = 120.0'                          Altitude = 50.0'                          Type = FitnessActivitiesEndpoint.ValidPathType.First()                      }                  }              };
Magic Number,HealthGraphNet.Tests.Unit,FitnessActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\FitnessActivitiesEndpointTest.cs,Init,The following statement contains a magic number: ValidActivity = new FitnessActivitiesPastModel              {                  Type = FitnessActivityType.Cycling'                  SecondaryType = string.Empty'                  Equipment = FitnessActivitiesEndpoint.ValidEquipment.First()'                  StartTime = DateTime.Now'                  Duration = 120'                  AverageHeartRate = 0'                  HeartRate = null'                  TotalCalories = 500'                  Notes = null'                  Path = new List<PathModel>                  {                      new PathModel                      {                          Timestamp = 0'                          Latitude = 100.0'                          Longitude = 100.0'                          Altitude = 100.0'                          Type = FitnessActivitiesEndpoint.ValidPathType.First()                      }'                      new PathModel                      {                          Timestamp = 60'                          Latitude = 120.0'                          Longitude = 120.0'                          Altitude = 50.0'                          Type = FitnessActivitiesEndpoint.ValidPathType.First()                      }                  }              };
Magic Number,HealthGraphNet.Tests.Unit,FitnessActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\FitnessActivitiesEndpointTest.cs,Init,The following statement contains a magic number: ValidActivity = new FitnessActivitiesPastModel              {                  Type = FitnessActivityType.Cycling'                  SecondaryType = string.Empty'                  Equipment = FitnessActivitiesEndpoint.ValidEquipment.First()'                  StartTime = DateTime.Now'                  Duration = 120'                  AverageHeartRate = 0'                  HeartRate = null'                  TotalCalories = 500'                  Notes = null'                  Path = new List<PathModel>                  {                      new PathModel                      {                          Timestamp = 0'                          Latitude = 100.0'                          Longitude = 100.0'                          Altitude = 100.0'                          Type = FitnessActivitiesEndpoint.ValidPathType.First()                      }'                      new PathModel                      {                          Timestamp = 60'                          Latitude = 120.0'                          Longitude = 120.0'                          Altitude = 50.0'                          Type = FitnessActivitiesEndpoint.ValidPathType.First()                      }                  }              };
Magic Number,HealthGraphNet.Tests.Unit,FitnessActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\FitnessActivitiesEndpointTest.cs,Init,The following statement contains a magic number: ValidActivity = new FitnessActivitiesPastModel              {                  Type = FitnessActivityType.Cycling'                  SecondaryType = string.Empty'                  Equipment = FitnessActivitiesEndpoint.ValidEquipment.First()'                  StartTime = DateTime.Now'                  Duration = 120'                  AverageHeartRate = 0'                  HeartRate = null'                  TotalCalories = 500'                  Notes = null'                  Path = new List<PathModel>                  {                      new PathModel                      {                          Timestamp = 0'                          Latitude = 100.0'                          Longitude = 100.0'                          Altitude = 100.0'                          Type = FitnessActivitiesEndpoint.ValidPathType.First()                      }'                      new PathModel                      {                          Timestamp = 60'                          Latitude = 120.0'                          Longitude = 120.0'                          Altitude = 50.0'                          Type = FitnessActivitiesEndpoint.ValidPathType.First()                      }                  }              };
Magic Number,HealthGraphNet.Tests.Unit,FitnessActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\FitnessActivitiesEndpointTest.cs,Init,The following statement contains a magic number: ValidActivityNew = new FitnessActivitiesNewModel              {                  Type = FitnessActivityType.Cycling'                  SecondaryType = string.Empty'                  Equipment = FitnessActivitiesEndpoint.ValidEquipment.First()'                  StartTime = DateTime.Now'                  Duration = 120'                  AverageHeartRate = 0'                  HeartRate = null'                  TotalCalories = 500'                  Notes = null'                  Path = new List<PathModel>                  {                      new PathModel                      {                          Timestamp = 0'                          Latitude = 100.0'                          Longitude = 100.0'                          Altitude = 100.0'                          Type = FitnessActivitiesEndpoint.ValidPathType.First()                      }'                      new PathModel                      {                          Timestamp = 60'                          Latitude = 120.0'                          Longitude = 120.0'                          Altitude = 50.0'                          Type = FitnessActivitiesEndpoint.ValidPathType.First()                      }                  }'                  PostToFacebook = null'                  PostToTwitter = null'                  DetectPauses = null              };
Magic Number,HealthGraphNet.Tests.Unit,FitnessActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\FitnessActivitiesEndpointTest.cs,Init,The following statement contains a magic number: ValidActivityNew = new FitnessActivitiesNewModel              {                  Type = FitnessActivityType.Cycling'                  SecondaryType = string.Empty'                  Equipment = FitnessActivitiesEndpoint.ValidEquipment.First()'                  StartTime = DateTime.Now'                  Duration = 120'                  AverageHeartRate = 0'                  HeartRate = null'                  TotalCalories = 500'                  Notes = null'                  Path = new List<PathModel>                  {                      new PathModel                      {                          Timestamp = 0'                          Latitude = 100.0'                          Longitude = 100.0'                          Altitude = 100.0'                          Type = FitnessActivitiesEndpoint.ValidPathType.First()                      }'                      new PathModel                      {                          Timestamp = 60'                          Latitude = 120.0'                          Longitude = 120.0'                          Altitude = 50.0'                          Type = FitnessActivitiesEndpoint.ValidPathType.First()                      }                  }'                  PostToFacebook = null'                  PostToTwitter = null'                  DetectPauses = null              };
Magic Number,HealthGraphNet.Tests.Unit,FitnessActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\FitnessActivitiesEndpointTest.cs,Init,The following statement contains a magic number: ValidActivityNew = new FitnessActivitiesNewModel              {                  Type = FitnessActivityType.Cycling'                  SecondaryType = string.Empty'                  Equipment = FitnessActivitiesEndpoint.ValidEquipment.First()'                  StartTime = DateTime.Now'                  Duration = 120'                  AverageHeartRate = 0'                  HeartRate = null'                  TotalCalories = 500'                  Notes = null'                  Path = new List<PathModel>                  {                      new PathModel                      {                          Timestamp = 0'                          Latitude = 100.0'                          Longitude = 100.0'                          Altitude = 100.0'                          Type = FitnessActivitiesEndpoint.ValidPathType.First()                      }'                      new PathModel                      {                          Timestamp = 60'                          Latitude = 120.0'                          Longitude = 120.0'                          Altitude = 50.0'                          Type = FitnessActivitiesEndpoint.ValidPathType.First()                      }                  }'                  PostToFacebook = null'                  PostToTwitter = null'                  DetectPauses = null              };
Magic Number,HealthGraphNet.Tests.Unit,FitnessActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\FitnessActivitiesEndpointTest.cs,Init,The following statement contains a magic number: ValidActivityNew = new FitnessActivitiesNewModel              {                  Type = FitnessActivityType.Cycling'                  SecondaryType = string.Empty'                  Equipment = FitnessActivitiesEndpoint.ValidEquipment.First()'                  StartTime = DateTime.Now'                  Duration = 120'                  AverageHeartRate = 0'                  HeartRate = null'                  TotalCalories = 500'                  Notes = null'                  Path = new List<PathModel>                  {                      new PathModel                      {                          Timestamp = 0'                          Latitude = 100.0'                          Longitude = 100.0'                          Altitude = 100.0'                          Type = FitnessActivitiesEndpoint.ValidPathType.First()                      }'                      new PathModel                      {                          Timestamp = 60'                          Latitude = 120.0'                          Longitude = 120.0'                          Altitude = 50.0'                          Type = FitnessActivitiesEndpoint.ValidPathType.First()                      }                  }'                  PostToFacebook = null'                  PostToTwitter = null'                  DetectPauses = null              };
Magic Number,HealthGraphNet.Tests.Unit,FitnessActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\FitnessActivitiesEndpointTest.cs,Init,The following statement contains a magic number: ValidActivityNew = new FitnessActivitiesNewModel              {                  Type = FitnessActivityType.Cycling'                  SecondaryType = string.Empty'                  Equipment = FitnessActivitiesEndpoint.ValidEquipment.First()'                  StartTime = DateTime.Now'                  Duration = 120'                  AverageHeartRate = 0'                  HeartRate = null'                  TotalCalories = 500'                  Notes = null'                  Path = new List<PathModel>                  {                      new PathModel                      {                          Timestamp = 0'                          Latitude = 100.0'                          Longitude = 100.0'                          Altitude = 100.0'                          Type = FitnessActivitiesEndpoint.ValidPathType.First()                      }'                      new PathModel                      {                          Timestamp = 60'                          Latitude = 120.0'                          Longitude = 120.0'                          Altitude = 50.0'                          Type = FitnessActivitiesEndpoint.ValidPathType.First()                      }                  }'                  PostToFacebook = null'                  PostToTwitter = null'                  DetectPauses = null              };
Magic Number,HealthGraphNet.Tests.Unit,FitnessActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\FitnessActivitiesEndpointTest.cs,Init,The following statement contains a magic number: ValidActivityNew = new FitnessActivitiesNewModel              {                  Type = FitnessActivityType.Cycling'                  SecondaryType = string.Empty'                  Equipment = FitnessActivitiesEndpoint.ValidEquipment.First()'                  StartTime = DateTime.Now'                  Duration = 120'                  AverageHeartRate = 0'                  HeartRate = null'                  TotalCalories = 500'                  Notes = null'                  Path = new List<PathModel>                  {                      new PathModel                      {                          Timestamp = 0'                          Latitude = 100.0'                          Longitude = 100.0'                          Altitude = 100.0'                          Type = FitnessActivitiesEndpoint.ValidPathType.First()                      }'                      new PathModel                      {                          Timestamp = 60'                          Latitude = 120.0'                          Longitude = 120.0'                          Altitude = 50.0'                          Type = FitnessActivitiesEndpoint.ValidPathType.First()                      }                  }'                  PostToFacebook = null'                  PostToTwitter = null'                  DetectPauses = null              };
Magic Number,HealthGraphNet.Tests.Unit,FitnessActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\FitnessActivitiesEndpointTest.cs,Init,The following statement contains a magic number: ValidActivityNew = new FitnessActivitiesNewModel              {                  Type = FitnessActivityType.Cycling'                  SecondaryType = string.Empty'                  Equipment = FitnessActivitiesEndpoint.ValidEquipment.First()'                  StartTime = DateTime.Now'                  Duration = 120'                  AverageHeartRate = 0'                  HeartRate = null'                  TotalCalories = 500'                  Notes = null'                  Path = new List<PathModel>                  {                      new PathModel                      {                          Timestamp = 0'                          Latitude = 100.0'                          Longitude = 100.0'                          Altitude = 100.0'                          Type = FitnessActivitiesEndpoint.ValidPathType.First()                      }'                      new PathModel                      {                          Timestamp = 60'                          Latitude = 120.0'                          Longitude = 120.0'                          Altitude = 50.0'                          Type = FitnessActivitiesEndpoint.ValidPathType.First()                      }                  }'                  PostToFacebook = null'                  PostToTwitter = null'                  DetectPauses = null              };
Magic Number,HealthGraphNet.Tests.Unit,FitnessActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\FitnessActivitiesEndpointTest.cs,Init,The following statement contains a magic number: ValidActivityNew = new FitnessActivitiesNewModel              {                  Type = FitnessActivityType.Cycling'                  SecondaryType = string.Empty'                  Equipment = FitnessActivitiesEndpoint.ValidEquipment.First()'                  StartTime = DateTime.Now'                  Duration = 120'                  AverageHeartRate = 0'                  HeartRate = null'                  TotalCalories = 500'                  Notes = null'                  Path = new List<PathModel>                  {                      new PathModel                      {                          Timestamp = 0'                          Latitude = 100.0'                          Longitude = 100.0'                          Altitude = 100.0'                          Type = FitnessActivitiesEndpoint.ValidPathType.First()                      }'                      new PathModel                      {                          Timestamp = 60'                          Latitude = 120.0'                          Longitude = 120.0'                          Altitude = 50.0'                          Type = FitnessActivitiesEndpoint.ValidPathType.First()                      }                  }'                  PostToFacebook = null'                  PostToTwitter = null'                  DetectPauses = null              };
Magic Number,HealthGraphNet.Tests.Unit,FitnessActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\FitnessActivitiesEndpointTest.cs,Init,The following statement contains a magic number: ValidActivityNew = new FitnessActivitiesNewModel              {                  Type = FitnessActivityType.Cycling'                  SecondaryType = string.Empty'                  Equipment = FitnessActivitiesEndpoint.ValidEquipment.First()'                  StartTime = DateTime.Now'                  Duration = 120'                  AverageHeartRate = 0'                  HeartRate = null'                  TotalCalories = 500'                  Notes = null'                  Path = new List<PathModel>                  {                      new PathModel                      {                          Timestamp = 0'                          Latitude = 100.0'                          Longitude = 100.0'                          Altitude = 100.0'                          Type = FitnessActivitiesEndpoint.ValidPathType.First()                      }'                      new PathModel                      {                          Timestamp = 60'                          Latitude = 120.0'                          Longitude = 120.0'                          Altitude = 50.0'                          Type = FitnessActivitiesEndpoint.ValidPathType.First()                      }                  }'                  PostToFacebook = null'                  PostToTwitter = null'                  DetectPauses = null              };
Magic Number,HealthGraphNet.Tests.Unit,FitnessActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\FitnessActivitiesEndpointTest.cs,UpdateActivity_TypeOtherSecondaryTypeSixtyFiveCharacters_ArgumentException,The following statement contains a magic number: count < 65
Magic Number,HealthGraphNet.Tests.Unit,FitnessActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\FitnessActivitiesEndpointTest.cs,UpdateActivity_TypeOtherSecondaryTypeSixtyFiveCharacters_ArgumentException,The following statement contains a magic number: Assert.AreEqual(65' ValidActivity.SecondaryType.Length);
Magic Number,HealthGraphNet.Tests.Unit,FitnessActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\FitnessActivitiesEndpointTest.cs,CreateActivity_TypeOtherSecondaryTypeSixtyFiveCharacters_ArgumentException,The following statement contains a magic number: count < 65
Magic Number,HealthGraphNet.Tests.Unit,FitnessActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\FitnessActivitiesEndpointTest.cs,CreateActivity_TypeOtherSecondaryTypeSixtyFiveCharacters_ArgumentException,The following statement contains a magic number: Assert.AreEqual(65' ValidActivityNew.SecondaryType.Length);
Magic Number,HealthGraphNet.Tests.Unit,GeneralMeasurementsEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\GeneralMeasurementsEndpointTest.cs,Init,The following statement contains a magic number: ValidMeasurement = new GeneralMeasurementsPastModel              {                  RestingHeartrate = 90              };
Magic Number,HealthGraphNet.Tests.Unit,GeneralMeasurementsEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\GeneralMeasurementsEndpointTest.cs,Init,The following statement contains a magic number: ValidMeasurementNew = new GeneralMeasurementsNewModel              {                  Timestamp = DateTime.Now'                  RestingHeartrate = 90'                  PostToFacebook = null'                  PostToTwitter = null              };
Magic Number,HealthGraphNet.Tests.Unit,NutritionEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\NutritionEndpointTest.cs,Init,The following statement contains a magic number: ValidNutrition = new NutritionPastModel              {                  Calories = 100              };
Magic Number,HealthGraphNet.Tests.Unit,NutritionEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\NutritionEndpointTest.cs,Init,The following statement contains a magic number: ValidNutritionNew = new NutritionNewModel              {                  Timestamp = DateTime.Now'                  Calories = 100'                  PostToFacebook = null'                  PostToTwitter = null              };
Magic Number,HealthGraphNet.Tests.Unit,SleepEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\SleepEndpointTest.cs,Init,The following statement contains a magic number: ValidSleep = new SleepPastModel              {                  TotalSleep = 60              };
Magic Number,HealthGraphNet.Tests.Unit,SleepEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\SleepEndpointTest.cs,Init,The following statement contains a magic number: ValidSleepNew = new SleepNewModel              {                  Timestamp = DateTime.Now'                  TotalSleep = 60'                  PostToFacebook = null'                  PostToTwitter = null              };
Magic Number,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,Init,The following statement contains a magic number: ValidActivity = new StrengthTrainingActivitiesPastModel              {                  StartTime = DateTime.Now'                  TotalCalories = 100'                  Notes = "Good workout!"'                  Exercises = new List<ExercisesModel>                  {                      new ExercisesModel                      {                          PrimaryType = "Dumbbell Tricep Press"'                          SecondaryType = "Exercising the tricep."'                          PrimaryMuscleGroup = "Arms"'                          SecondaryMuscleGroup = "Shoulders"'                          Routine = "Exercising the tricep."'                          Notes = "Exercising the tricep."'                          Sets = new List<SetsModel>                          {                              new SetsModel                              {                                  Weight = 20'                                  Repetitions = 10'                                  Notes = "Not too heavy."                              }'                              new SetsModel                              {                                  Weight = 50'                                  Repetitions = 20'                                  Notes = "Whoa' too heavy."                              }                          }                      }                  }              };
Magic Number,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,Init,The following statement contains a magic number: ValidActivity = new StrengthTrainingActivitiesPastModel              {                  StartTime = DateTime.Now'                  TotalCalories = 100'                  Notes = "Good workout!"'                  Exercises = new List<ExercisesModel>                  {                      new ExercisesModel                      {                          PrimaryType = "Dumbbell Tricep Press"'                          SecondaryType = "Exercising the tricep."'                          PrimaryMuscleGroup = "Arms"'                          SecondaryMuscleGroup = "Shoulders"'                          Routine = "Exercising the tricep."'                          Notes = "Exercising the tricep."'                          Sets = new List<SetsModel>                          {                              new SetsModel                              {                                  Weight = 20'                                  Repetitions = 10'                                  Notes = "Not too heavy."                              }'                              new SetsModel                              {                                  Weight = 50'                                  Repetitions = 20'                                  Notes = "Whoa' too heavy."                              }                          }                      }                  }              };
Magic Number,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,Init,The following statement contains a magic number: ValidActivity = new StrengthTrainingActivitiesPastModel              {                  StartTime = DateTime.Now'                  TotalCalories = 100'                  Notes = "Good workout!"'                  Exercises = new List<ExercisesModel>                  {                      new ExercisesModel                      {                          PrimaryType = "Dumbbell Tricep Press"'                          SecondaryType = "Exercising the tricep."'                          PrimaryMuscleGroup = "Arms"'                          SecondaryMuscleGroup = "Shoulders"'                          Routine = "Exercising the tricep."'                          Notes = "Exercising the tricep."'                          Sets = new List<SetsModel>                          {                              new SetsModel                              {                                  Weight = 20'                                  Repetitions = 10'                                  Notes = "Not too heavy."                              }'                              new SetsModel                              {                                  Weight = 50'                                  Repetitions = 20'                                  Notes = "Whoa' too heavy."                              }                          }                      }                  }              };
Magic Number,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,Init,The following statement contains a magic number: ValidActivity = new StrengthTrainingActivitiesPastModel              {                  StartTime = DateTime.Now'                  TotalCalories = 100'                  Notes = "Good workout!"'                  Exercises = new List<ExercisesModel>                  {                      new ExercisesModel                      {                          PrimaryType = "Dumbbell Tricep Press"'                          SecondaryType = "Exercising the tricep."'                          PrimaryMuscleGroup = "Arms"'                          SecondaryMuscleGroup = "Shoulders"'                          Routine = "Exercising the tricep."'                          Notes = "Exercising the tricep."'                          Sets = new List<SetsModel>                          {                              new SetsModel                              {                                  Weight = 20'                                  Repetitions = 10'                                  Notes = "Not too heavy."                              }'                              new SetsModel                              {                                  Weight = 50'                                  Repetitions = 20'                                  Notes = "Whoa' too heavy."                              }                          }                      }                  }              };
Magic Number,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,Init,The following statement contains a magic number: ValidActivity = new StrengthTrainingActivitiesPastModel              {                  StartTime = DateTime.Now'                  TotalCalories = 100'                  Notes = "Good workout!"'                  Exercises = new List<ExercisesModel>                  {                      new ExercisesModel                      {                          PrimaryType = "Dumbbell Tricep Press"'                          SecondaryType = "Exercising the tricep."'                          PrimaryMuscleGroup = "Arms"'                          SecondaryMuscleGroup = "Shoulders"'                          Routine = "Exercising the tricep."'                          Notes = "Exercising the tricep."'                          Sets = new List<SetsModel>                          {                              new SetsModel                              {                                  Weight = 20'                                  Repetitions = 10'                                  Notes = "Not too heavy."                              }'                              new SetsModel                              {                                  Weight = 50'                                  Repetitions = 20'                                  Notes = "Whoa' too heavy."                              }                          }                      }                  }              };
Magic Number,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,Init,The following statement contains a magic number: ValidActivityNew = new StrengthTrainingActivitiesNewModel              {                  StartTime = DateTime.Now'                  TotalCalories = 100'                  Notes = "Good workout!"'                  Exercises = new List<ExercisesModel>                  {                      new ExercisesModel                      {                          PrimaryType = "Dumbbell Tricep Press"'                          SecondaryType = "Exercising the tricep."'                          PrimaryMuscleGroup = "Arms"'                          SecondaryMuscleGroup = "Shoulders"'                          Routine = "Exercising the tricep."'                          Notes = "Exercising the tricep."'                          Sets = new List<SetsModel>                          {                              new SetsModel                              {                                  Weight = 20'                                  Repetitions = 10'                                  Notes = "Not too heavy."                              }'                              new SetsModel                              {                                  Weight = 50'                                  Repetitions = 20'                                  Notes = "Whoa' too heavy."                              }                          }                      }                  }'                  PostToFacebook = false'                  PostToTwitter = false              };
Magic Number,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,Init,The following statement contains a magic number: ValidActivityNew = new StrengthTrainingActivitiesNewModel              {                  StartTime = DateTime.Now'                  TotalCalories = 100'                  Notes = "Good workout!"'                  Exercises = new List<ExercisesModel>                  {                      new ExercisesModel                      {                          PrimaryType = "Dumbbell Tricep Press"'                          SecondaryType = "Exercising the tricep."'                          PrimaryMuscleGroup = "Arms"'                          SecondaryMuscleGroup = "Shoulders"'                          Routine = "Exercising the tricep."'                          Notes = "Exercising the tricep."'                          Sets = new List<SetsModel>                          {                              new SetsModel                              {                                  Weight = 20'                                  Repetitions = 10'                                  Notes = "Not too heavy."                              }'                              new SetsModel                              {                                  Weight = 50'                                  Repetitions = 20'                                  Notes = "Whoa' too heavy."                              }                          }                      }                  }'                  PostToFacebook = false'                  PostToTwitter = false              };
Magic Number,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,Init,The following statement contains a magic number: ValidActivityNew = new StrengthTrainingActivitiesNewModel              {                  StartTime = DateTime.Now'                  TotalCalories = 100'                  Notes = "Good workout!"'                  Exercises = new List<ExercisesModel>                  {                      new ExercisesModel                      {                          PrimaryType = "Dumbbell Tricep Press"'                          SecondaryType = "Exercising the tricep."'                          PrimaryMuscleGroup = "Arms"'                          SecondaryMuscleGroup = "Shoulders"'                          Routine = "Exercising the tricep."'                          Notes = "Exercising the tricep."'                          Sets = new List<SetsModel>                          {                              new SetsModel                              {                                  Weight = 20'                                  Repetitions = 10'                                  Notes = "Not too heavy."                              }'                              new SetsModel                              {                                  Weight = 50'                                  Repetitions = 20'                                  Notes = "Whoa' too heavy."                              }                          }                      }                  }'                  PostToFacebook = false'                  PostToTwitter = false              };
Magic Number,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,Init,The following statement contains a magic number: ValidActivityNew = new StrengthTrainingActivitiesNewModel              {                  StartTime = DateTime.Now'                  TotalCalories = 100'                  Notes = "Good workout!"'                  Exercises = new List<ExercisesModel>                  {                      new ExercisesModel                      {                          PrimaryType = "Dumbbell Tricep Press"'                          SecondaryType = "Exercising the tricep."'                          PrimaryMuscleGroup = "Arms"'                          SecondaryMuscleGroup = "Shoulders"'                          Routine = "Exercising the tricep."'                          Notes = "Exercising the tricep."'                          Sets = new List<SetsModel>                          {                              new SetsModel                              {                                  Weight = 20'                                  Repetitions = 10'                                  Notes = "Not too heavy."                              }'                              new SetsModel                              {                                  Weight = 50'                                  Repetitions = 20'                                  Notes = "Whoa' too heavy."                              }                          }                      }                  }'                  PostToFacebook = false'                  PostToTwitter = false              };
Magic Number,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,Init,The following statement contains a magic number: ValidActivityNew = new StrengthTrainingActivitiesNewModel              {                  StartTime = DateTime.Now'                  TotalCalories = 100'                  Notes = "Good workout!"'                  Exercises = new List<ExercisesModel>                  {                      new ExercisesModel                      {                          PrimaryType = "Dumbbell Tricep Press"'                          SecondaryType = "Exercising the tricep."'                          PrimaryMuscleGroup = "Arms"'                          SecondaryMuscleGroup = "Shoulders"'                          Routine = "Exercising the tricep."'                          Notes = "Exercising the tricep."'                          Sets = new List<SetsModel>                          {                              new SetsModel                              {                                  Weight = 20'                                  Repetitions = 10'                                  Notes = "Not too heavy."                              }'                              new SetsModel                              {                                  Weight = 50'                                  Repetitions = 20'                                  Notes = "Whoa' too heavy."                              }                          }                      }                  }'                  PostToFacebook = false'                  PostToTwitter = false              };
Magic Number,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,UpdateActivity_NotesTenThousandTwentyFiveCharacters_ArgumentException,The following statement contains a magic number: count <= 1024
Magic Number,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,UpdateActivity_NotesTenThousandTwentyFiveCharacters_ArgumentException,The following statement contains a magic number: Assert.AreEqual(1025' ValidActivity.Notes.Length);
Magic Number,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,UpdateActivity_ExerciseRoutineThirtyThreeCharacters_ArgumentException,The following statement contains a magic number: count <= 32
Magic Number,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,UpdateActivity_ExerciseRoutineThirtyThreeCharacters_ArgumentException,The following statement contains a magic number: Assert.AreEqual(33' ValidActivity.Exercises.First().Routine.Length);
Magic Number,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,UpdateActivity_ExerciseNotesTenThousandTwentyFiveCharacters_ArgumentException,The following statement contains a magic number: count <= 1024
Magic Number,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,UpdateActivity_ExerciseNotesTenThousandTwentyFiveCharacters_ArgumentException,The following statement contains a magic number: Assert.AreEqual(1025' ValidActivity.Exercises.First().Notes.Length);
Magic Number,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,UpdateActivity_ExerciseSetNotesTenThousandTwentyFiveCharacters_ArgumentException,The following statement contains a magic number: count <= 1024
Magic Number,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,UpdateActivity_ExerciseSetNotesTenThousandTwentyFiveCharacters_ArgumentException,The following statement contains a magic number: Assert.AreEqual(1025' ValidActivity.Exercises.First().Sets.First().Notes.Length);
Magic Number,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,CreateActivity_NotesTenThousandTwentyFiveCharacters_ArgumentException,The following statement contains a magic number: count <= 1024
Magic Number,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,CreateActivity_NotesTenThousandTwentyFiveCharacters_ArgumentException,The following statement contains a magic number: Assert.AreEqual(1025' ValidActivityNew.Notes.Length);
Magic Number,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,CreateActivity_ExerciseRoutineThirtyThreeCharacters_ArgumentException,The following statement contains a magic number: count <= 32
Magic Number,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,CreateActivity_ExerciseRoutineThirtyThreeCharacters_ArgumentException,The following statement contains a magic number: Assert.AreEqual(33' ValidActivityNew.Exercises.First().Routine.Length);
Magic Number,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,CreateActivity_ExerciseNotesTenThousandTwentyFiveCharacters_ArgumentException,The following statement contains a magic number: count <= 1024
Magic Number,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,CreateActivity_ExerciseNotesTenThousandTwentyFiveCharacters_ArgumentException,The following statement contains a magic number: Assert.AreEqual(1025' ValidActivityNew.Exercises.First().Notes.Length);
Magic Number,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,CreateActivity_ExerciseSetNotesTenThousandTwentyFiveCharacters_ArgumentException,The following statement contains a magic number: count <= 1024
Magic Number,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,CreateActivity_ExerciseSetNotesTenThousandTwentyFiveCharacters_ArgumentException,The following statement contains a magic number: Assert.AreEqual(1025' ValidActivityNew.Exercises.First().Sets.First().Notes.Length);
Magic Number,HealthGraphNet.Tests.Unit,WeightEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\WeightEndpointTest.cs,Init,The following statement contains a magic number: ValidWeight = new WeightPastModel              {                  Weight = 10              };
Magic Number,HealthGraphNet.Tests.Unit,WeightEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\WeightEndpointTest.cs,Init,The following statement contains a magic number: ValidWeightNew = new WeightNewModel              {                  Timestamp = DateTime.Now'                  Weight = 10'                  PostToFacebook = null'                  PostToTwitter = null              };
Duplicate Code,HealthGraphNet.Tests.Unit,FitnessActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\FitnessActivitiesEndpointTest.cs,Init,The method contains a code clone-set at the following line numbers (starting from the method definition): ((3' 30)' (35' 62))
Duplicate Code,HealthGraphNet.Tests.Unit,StrengthTrainingActivitiesEndpointTest,D:\research\architectureSmells\repos1\Tron5000_HealthGraphNet\HealthGraphNet.Tests\Unit\Endpoints\StrengthTrainingActivitiesEndpointTest.cs,Init,The method contains a code clone-set at the following line numbers (starting from the method definition): ((3' 32)' (37' 66))
