Implementation smell,Namespace,Class,File,Method,Description
Complex Method,UIAComWrapperTests,AppHost,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\AppHost.cs,TryFindWindowNow,Cyclomatic complexity of the method is 10
Long Statement,UIAComWrapperTests,AutomationElementTest,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\AutomationElementTest.cs,GetCurrentPatternTest,The length of the statement  "            LegacyIAccessiblePattern pattern = (LegacyIAccessiblePattern)GetTaskbar().GetCurrentPattern(LegacyIAccessiblePattern.Pattern); " is 126.
Long Statement,UIAComWrapperTests,AutomationElementTest,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\AutomationElementTest.cs,GetCachedPatternTest,The length of the statement  "                LegacyIAccessiblePattern pattern = (LegacyIAccessiblePattern)GetTaskbar().GetCachedPattern(LegacyIAccessiblePattern.Pattern); " is 125.
Long Statement,UIAComWrapperTests,AutomationElementTest,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\AutomationElementTest.cs,ProviderDescriptionTest,The length of the statement  "            string description = (string)AutomationElement.RootElement.GetCurrentPropertyValue(AutomationElement.ProviderDescriptionProperty); " is 130.
Long Statement,UIAComWrapperTests,ObjectConverterTest,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\Internal_ObjectConverterTest.cs,TestObjectConverter,The length of the statement  "                new ObjectTestMapping(AutomationElement.BoundingRectangleProperty' new double[] {1' 2' 3' 4}' new System.Windows.Rect(1' 2' 3' 4))'  " is 131.
Long Statement,UIAComWrapperTests,ObjectConverterTest,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\Internal_ObjectConverterTest.cs,TestObjectConverter,The length of the statement  "                new ObjectTestMapping(AutomationElement.LabeledByProperty' Automation.Factory.GetRootElement()' AutomationElement.RootElement)'  " is 127.
Long Statement,UIAComWrapperTests,ScenarioTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\ScenarioTests.cs,TextPatternTest,The length of the statement  "                System.Globalization.CultureInfo culture = (System.Globalization.CultureInfo)range3.GetAttributeValue(TextPattern.CultureAttribute); " is 132.
Long Statement,UIAComWrapperTests,ScenarioTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\ScenarioTests.cs,IAccessibleInterop,The length of the statement  "            LegacyIAccessiblePattern legacy = (LegacyIAccessiblePattern)element.GetCurrentPattern(LegacyIAccessiblePattern.Pattern); " is 120.
Complex Conditional,UIAComWrapperTests,MockPatternProvider,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\MockPatternTest.cs,GetPatternProvider,The conditional expression  "patternId == AnnotationPattern.Pattern.Id ||                  patternId == StylesPattern.Pattern.Id ||                  patternId == SpreadsheetPattern.Pattern.Id ||                  patternId == SpreadsheetItemPattern.Pattern.Id ||                  patternId == TransformPattern.Pattern.Id ||                  patternId == TransformPattern2.Pattern.Id ||                  patternId == DragPattern.Pattern.Id ||                  patternId == DropTargetPattern.Pattern.Id ||                  patternId == TextPattern.Pattern.Id ||                  patternId == TextPattern2.Pattern.Id ||                  patternId == TextChildPattern.Pattern.Id"  is complex.
Empty Catch Block,UIAComWrapperTests,AutomationElementTest,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\AutomationElementTest.cs,GetUpdatedCacheTest,The method has an empty catch block.
Empty Catch Block,UIAComWrapperTests,CacheRequestTest,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\CacheRequestTest.cs,PushPopTest,The method has an empty catch block.
Empty Catch Block,UIAComWrapperTests,ConditionTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\ConditionTest.cs,AndConditionTest,The method has an empty catch block.
Empty Catch Block,UIAComWrapperTests,ConditionTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\ConditionTest.cs,OrConditionTest,The method has an empty catch block.
Empty Catch Block,UIAComWrapperTests,ConditionTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\ConditionTest.cs,PropertyConditionTest,The method has an empty catch block.
Empty Catch Block,UIAComWrapperTests,MockPatternTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\MockPatternTest.cs,TransformPattern2Test,The method has an empty catch block.
Empty Catch Block,UIAComWrapperTests,MockPatternTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\MockPatternTest.cs,TextPattern2Test,The method has an empty catch block.
Empty Catch Block,UIAComWrapperTests,ScenarioTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\ScenarioTests.cs,NoClickablePointTest,The method has an empty catch block.
Magic Number,UIAComWrapperTests,AppHost,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\AppHost.cs,ActiveWaitForHwnd,The following statement contains a magic number: System.Threading.Thread.Sleep( 500 );
Magic Number,UIAComWrapperTests,AppHost,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\AppHost.cs,ActiveWaitForHwnd,The following statement contains a magic number: attempt < 240
Magic Number,UIAComWrapperTests,AppHost,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\AppHost.cs,TryFindWindowNow,The following statement contains a magic number: System.Text.StringBuilder realClassName = new System.Text.StringBuilder( 64 );
Magic Number,UIAComWrapperTests,AppHost,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\AppHost.cs,TryFindWindowNow,The following statement contains a magic number: GetClassName(hwndChild' realClassName' 64);
Magic Number,UIAComWrapperTests,AppHost,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\AppHost.cs,TryFindWindowNow,The following statement contains a magic number: System.Text.StringBuilder testWindowTitle = new System.Text.StringBuilder( 64 );
Magic Number,UIAComWrapperTests,AppHost,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\AppHost.cs,TryFindWindowNow,The following statement contains a magic number: GetWindowText( hwndChild' testWindowTitle' 64 );
Magic Number,UIAComWrapperTests,ConditionTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\ConditionTest.cs,AndConditionTest,The following statement contains a magic number: Assert.AreEqual(actual.Length' 2);
Magic Number,UIAComWrapperTests,ConditionTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\ConditionTest.cs,OrConditionTest,The following statement contains a magic number: Assert.AreEqual(actual.Length' 2);
Magic Number,UIAComWrapperTests,ConditionTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\ConditionTest.cs,PropertyConditionTest,The following statement contains a magic number: System.Windows.Rect rect = new System.Windows.Rect(0' 0' 20' 20);
Magic Number,UIAComWrapperTests,ConditionTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\ConditionTest.cs,PropertyConditionTest,The following statement contains a magic number: System.Windows.Rect rect = new System.Windows.Rect(0' 0' 20' 20);
Magic Number,UIAComWrapperTests,ConditionTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\ConditionTest.cs,PropertyConditionTest,The following statement contains a magic number: Assert.AreEqual(((double[])value).Length' 4);
Magic Number,UIAComWrapperTests,ConditionTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\ConditionTest.cs,PropertyConditionTest,The following statement contains a magic number: Assert.AreEqual(((double[])value).Length' 2);
Magic Number,UIAComWrapperTests,EventHandlerBase,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\EventTests.cs,Confirm,The following statement contains a magic number: return this._syncEvent.WaitOne(3000 /* ms */);
Magic Number,UIAComWrapperTests,EventTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\EventTests.cs,TestPropChangeEvent,The following statement contains a magic number: System.Threading.Thread.Sleep(100 /* ms */);
Magic Number,UIAComWrapperTests,EventTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\EventTests.cs,TestPropChangeEvent,The following statement contains a magic number: transformPattern.Move(200' 200);
Magic Number,UIAComWrapperTests,EventTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\EventTests.cs,TestPropChangeEvent,The following statement contains a magic number: transformPattern.Move(200' 200);
Magic Number,UIAComWrapperTests,ExplorerHost,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\ExplorerHost.cs,ExplorerHost,The following statement contains a magic number: System.Threading.Thread.Sleep(2000 /* ms */);
Magic Number,UIAComWrapperTests,ExplorerTargetTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\ExplorerTargetTests.cs,VirtualizedPatternTest,The following statement contains a magic number: System.Threading.Thread.Sleep(100 /* ms */);
Magic Number,UIAComWrapperTests,ObjectConverterTest,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\Internal_ObjectConverterTest.cs,TestObjectConverter,The following statement contains a magic number: ObjectTestMapping[] testMap = new ObjectTestMapping[] {                  new ObjectTestMapping(AutomationElement.BoundingRectangleProperty' new double[] {1' 2' 3' 4}' new System.Windows.Rect(1' 2' 3' 4))'                   new ObjectTestMapping(AutomationElement.ControlTypeProperty' (int)50000' ControlType.Button)'                   new ObjectTestMapping(AutomationElement.ClickablePointProperty' new double[] {1' 2}' new System.Windows.Point(1' 2))'                   new ObjectTestMapping(AutomationElement.CultureProperty' 0x0409' new System.Globalization.CultureInfo(0x0409))'                   new ObjectTestMapping(AutomationElement.CultureProperty' 0' System.Globalization.CultureInfo.InvariantCulture)'                  new ObjectTestMapping(AutomationElement.LabeledByProperty' null' null)'                   new ObjectTestMapping(AutomationElement.LabeledByProperty' Automation.Factory.GetRootElement()' AutomationElement.RootElement)'                   new ObjectTestMapping(AutomationElement.OrientationProperty' 2' OrientationType.Vertical)'                  new ObjectTestMapping(DockPattern.DockPositionProperty' 4' DockPosition.Fill)'                   new ObjectTestMapping(ExpandCollapsePattern.ExpandCollapseStateProperty' 2' ExpandCollapseState.PartiallyExpanded)'                  new ObjectTestMapping(WindowPattern.WindowVisualStateProperty' 2' WindowVisualState.Minimized)'                  new ObjectTestMapping(WindowPattern.WindowInteractionStateProperty' 1' WindowInteractionState.Closing)'                  new ObjectTestMapping(TablePattern.RowOrColumnMajorProperty' 2' RowOrColumnMajor.Indeterminate)'                  new ObjectTestMapping(TogglePattern.ToggleStateProperty' 1' ToggleState.On)              };
Magic Number,UIAComWrapperTests,ObjectConverterTest,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\Internal_ObjectConverterTest.cs,TestObjectConverter,The following statement contains a magic number: ObjectTestMapping[] testMap = new ObjectTestMapping[] {                  new ObjectTestMapping(AutomationElement.BoundingRectangleProperty' new double[] {1' 2' 3' 4}' new System.Windows.Rect(1' 2' 3' 4))'                   new ObjectTestMapping(AutomationElement.ControlTypeProperty' (int)50000' ControlType.Button)'                   new ObjectTestMapping(AutomationElement.ClickablePointProperty' new double[] {1' 2}' new System.Windows.Point(1' 2))'                   new ObjectTestMapping(AutomationElement.CultureProperty' 0x0409' new System.Globalization.CultureInfo(0x0409))'                   new ObjectTestMapping(AutomationElement.CultureProperty' 0' System.Globalization.CultureInfo.InvariantCulture)'                  new ObjectTestMapping(AutomationElement.LabeledByProperty' null' null)'                   new ObjectTestMapping(AutomationElement.LabeledByProperty' Automation.Factory.GetRootElement()' AutomationElement.RootElement)'                   new ObjectTestMapping(AutomationElement.OrientationProperty' 2' OrientationType.Vertical)'                  new ObjectTestMapping(DockPattern.DockPositionProperty' 4' DockPosition.Fill)'                   new ObjectTestMapping(ExpandCollapsePattern.ExpandCollapseStateProperty' 2' ExpandCollapseState.PartiallyExpanded)'                  new ObjectTestMapping(WindowPattern.WindowVisualStateProperty' 2' WindowVisualState.Minimized)'                  new ObjectTestMapping(WindowPattern.WindowInteractionStateProperty' 1' WindowInteractionState.Closing)'                  new ObjectTestMapping(TablePattern.RowOrColumnMajorProperty' 2' RowOrColumnMajor.Indeterminate)'                  new ObjectTestMapping(TogglePattern.ToggleStateProperty' 1' ToggleState.On)              };
Magic Number,UIAComWrapperTests,ObjectConverterTest,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\Internal_ObjectConverterTest.cs,TestObjectConverter,The following statement contains a magic number: ObjectTestMapping[] testMap = new ObjectTestMapping[] {                  new ObjectTestMapping(AutomationElement.BoundingRectangleProperty' new double[] {1' 2' 3' 4}' new System.Windows.Rect(1' 2' 3' 4))'                   new ObjectTestMapping(AutomationElement.ControlTypeProperty' (int)50000' ControlType.Button)'                   new ObjectTestMapping(AutomationElement.ClickablePointProperty' new double[] {1' 2}' new System.Windows.Point(1' 2))'                   new ObjectTestMapping(AutomationElement.CultureProperty' 0x0409' new System.Globalization.CultureInfo(0x0409))'                   new ObjectTestMapping(AutomationElement.CultureProperty' 0' System.Globalization.CultureInfo.InvariantCulture)'                  new ObjectTestMapping(AutomationElement.LabeledByProperty' null' null)'                   new ObjectTestMapping(AutomationElement.LabeledByProperty' Automation.Factory.GetRootElement()' AutomationElement.RootElement)'                   new ObjectTestMapping(AutomationElement.OrientationProperty' 2' OrientationType.Vertical)'                  new ObjectTestMapping(DockPattern.DockPositionProperty' 4' DockPosition.Fill)'                   new ObjectTestMapping(ExpandCollapsePattern.ExpandCollapseStateProperty' 2' ExpandCollapseState.PartiallyExpanded)'                  new ObjectTestMapping(WindowPattern.WindowVisualStateProperty' 2' WindowVisualState.Minimized)'                  new ObjectTestMapping(WindowPattern.WindowInteractionStateProperty' 1' WindowInteractionState.Closing)'                  new ObjectTestMapping(TablePattern.RowOrColumnMajorProperty' 2' RowOrColumnMajor.Indeterminate)'                  new ObjectTestMapping(TogglePattern.ToggleStateProperty' 1' ToggleState.On)              };
Magic Number,UIAComWrapperTests,ObjectConverterTest,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\Internal_ObjectConverterTest.cs,TestObjectConverter,The following statement contains a magic number: ObjectTestMapping[] testMap = new ObjectTestMapping[] {                  new ObjectTestMapping(AutomationElement.BoundingRectangleProperty' new double[] {1' 2' 3' 4}' new System.Windows.Rect(1' 2' 3' 4))'                   new ObjectTestMapping(AutomationElement.ControlTypeProperty' (int)50000' ControlType.Button)'                   new ObjectTestMapping(AutomationElement.ClickablePointProperty' new double[] {1' 2}' new System.Windows.Point(1' 2))'                   new ObjectTestMapping(AutomationElement.CultureProperty' 0x0409' new System.Globalization.CultureInfo(0x0409))'                   new ObjectTestMapping(AutomationElement.CultureProperty' 0' System.Globalization.CultureInfo.InvariantCulture)'                  new ObjectTestMapping(AutomationElement.LabeledByProperty' null' null)'                   new ObjectTestMapping(AutomationElement.LabeledByProperty' Automation.Factory.GetRootElement()' AutomationElement.RootElement)'                   new ObjectTestMapping(AutomationElement.OrientationProperty' 2' OrientationType.Vertical)'                  new ObjectTestMapping(DockPattern.DockPositionProperty' 4' DockPosition.Fill)'                   new ObjectTestMapping(ExpandCollapsePattern.ExpandCollapseStateProperty' 2' ExpandCollapseState.PartiallyExpanded)'                  new ObjectTestMapping(WindowPattern.WindowVisualStateProperty' 2' WindowVisualState.Minimized)'                  new ObjectTestMapping(WindowPattern.WindowInteractionStateProperty' 1' WindowInteractionState.Closing)'                  new ObjectTestMapping(TablePattern.RowOrColumnMajorProperty' 2' RowOrColumnMajor.Indeterminate)'                  new ObjectTestMapping(TogglePattern.ToggleStateProperty' 1' ToggleState.On)              };
Magic Number,UIAComWrapperTests,ObjectConverterTest,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\Internal_ObjectConverterTest.cs,TestObjectConverter,The following statement contains a magic number: ObjectTestMapping[] testMap = new ObjectTestMapping[] {                  new ObjectTestMapping(AutomationElement.BoundingRectangleProperty' new double[] {1' 2' 3' 4}' new System.Windows.Rect(1' 2' 3' 4))'                   new ObjectTestMapping(AutomationElement.ControlTypeProperty' (int)50000' ControlType.Button)'                   new ObjectTestMapping(AutomationElement.ClickablePointProperty' new double[] {1' 2}' new System.Windows.Point(1' 2))'                   new ObjectTestMapping(AutomationElement.CultureProperty' 0x0409' new System.Globalization.CultureInfo(0x0409))'                   new ObjectTestMapping(AutomationElement.CultureProperty' 0' System.Globalization.CultureInfo.InvariantCulture)'                  new ObjectTestMapping(AutomationElement.LabeledByProperty' null' null)'                   new ObjectTestMapping(AutomationElement.LabeledByProperty' Automation.Factory.GetRootElement()' AutomationElement.RootElement)'                   new ObjectTestMapping(AutomationElement.OrientationProperty' 2' OrientationType.Vertical)'                  new ObjectTestMapping(DockPattern.DockPositionProperty' 4' DockPosition.Fill)'                   new ObjectTestMapping(ExpandCollapsePattern.ExpandCollapseStateProperty' 2' ExpandCollapseState.PartiallyExpanded)'                  new ObjectTestMapping(WindowPattern.WindowVisualStateProperty' 2' WindowVisualState.Minimized)'                  new ObjectTestMapping(WindowPattern.WindowInteractionStateProperty' 1' WindowInteractionState.Closing)'                  new ObjectTestMapping(TablePattern.RowOrColumnMajorProperty' 2' RowOrColumnMajor.Indeterminate)'                  new ObjectTestMapping(TogglePattern.ToggleStateProperty' 1' ToggleState.On)              };
Magic Number,UIAComWrapperTests,ObjectConverterTest,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\Internal_ObjectConverterTest.cs,TestObjectConverter,The following statement contains a magic number: ObjectTestMapping[] testMap = new ObjectTestMapping[] {                  new ObjectTestMapping(AutomationElement.BoundingRectangleProperty' new double[] {1' 2' 3' 4}' new System.Windows.Rect(1' 2' 3' 4))'                   new ObjectTestMapping(AutomationElement.ControlTypeProperty' (int)50000' ControlType.Button)'                   new ObjectTestMapping(AutomationElement.ClickablePointProperty' new double[] {1' 2}' new System.Windows.Point(1' 2))'                   new ObjectTestMapping(AutomationElement.CultureProperty' 0x0409' new System.Globalization.CultureInfo(0x0409))'                   new ObjectTestMapping(AutomationElement.CultureProperty' 0' System.Globalization.CultureInfo.InvariantCulture)'                  new ObjectTestMapping(AutomationElement.LabeledByProperty' null' null)'                   new ObjectTestMapping(AutomationElement.LabeledByProperty' Automation.Factory.GetRootElement()' AutomationElement.RootElement)'                   new ObjectTestMapping(AutomationElement.OrientationProperty' 2' OrientationType.Vertical)'                  new ObjectTestMapping(DockPattern.DockPositionProperty' 4' DockPosition.Fill)'                   new ObjectTestMapping(ExpandCollapsePattern.ExpandCollapseStateProperty' 2' ExpandCollapseState.PartiallyExpanded)'                  new ObjectTestMapping(WindowPattern.WindowVisualStateProperty' 2' WindowVisualState.Minimized)'                  new ObjectTestMapping(WindowPattern.WindowInteractionStateProperty' 1' WindowInteractionState.Closing)'                  new ObjectTestMapping(TablePattern.RowOrColumnMajorProperty' 2' RowOrColumnMajor.Indeterminate)'                  new ObjectTestMapping(TogglePattern.ToggleStateProperty' 1' ToggleState.On)              };
Magic Number,UIAComWrapperTests,ObjectConverterTest,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\Internal_ObjectConverterTest.cs,TestObjectConverter,The following statement contains a magic number: ObjectTestMapping[] testMap = new ObjectTestMapping[] {                  new ObjectTestMapping(AutomationElement.BoundingRectangleProperty' new double[] {1' 2' 3' 4}' new System.Windows.Rect(1' 2' 3' 4))'                   new ObjectTestMapping(AutomationElement.ControlTypeProperty' (int)50000' ControlType.Button)'                   new ObjectTestMapping(AutomationElement.ClickablePointProperty' new double[] {1' 2}' new System.Windows.Point(1' 2))'                   new ObjectTestMapping(AutomationElement.CultureProperty' 0x0409' new System.Globalization.CultureInfo(0x0409))'                   new ObjectTestMapping(AutomationElement.CultureProperty' 0' System.Globalization.CultureInfo.InvariantCulture)'                  new ObjectTestMapping(AutomationElement.LabeledByProperty' null' null)'                   new ObjectTestMapping(AutomationElement.LabeledByProperty' Automation.Factory.GetRootElement()' AutomationElement.RootElement)'                   new ObjectTestMapping(AutomationElement.OrientationProperty' 2' OrientationType.Vertical)'                  new ObjectTestMapping(DockPattern.DockPositionProperty' 4' DockPosition.Fill)'                   new ObjectTestMapping(ExpandCollapsePattern.ExpandCollapseStateProperty' 2' ExpandCollapseState.PartiallyExpanded)'                  new ObjectTestMapping(WindowPattern.WindowVisualStateProperty' 2' WindowVisualState.Minimized)'                  new ObjectTestMapping(WindowPattern.WindowInteractionStateProperty' 1' WindowInteractionState.Closing)'                  new ObjectTestMapping(TablePattern.RowOrColumnMajorProperty' 2' RowOrColumnMajor.Indeterminate)'                  new ObjectTestMapping(TogglePattern.ToggleStateProperty' 1' ToggleState.On)              };
Magic Number,UIAComWrapperTests,ObjectConverterTest,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\Internal_ObjectConverterTest.cs,TestObjectConverter,The following statement contains a magic number: ObjectTestMapping[] testMap = new ObjectTestMapping[] {                  new ObjectTestMapping(AutomationElement.BoundingRectangleProperty' new double[] {1' 2' 3' 4}' new System.Windows.Rect(1' 2' 3' 4))'                   new ObjectTestMapping(AutomationElement.ControlTypeProperty' (int)50000' ControlType.Button)'                   new ObjectTestMapping(AutomationElement.ClickablePointProperty' new double[] {1' 2}' new System.Windows.Point(1' 2))'                   new ObjectTestMapping(AutomationElement.CultureProperty' 0x0409' new System.Globalization.CultureInfo(0x0409))'                   new ObjectTestMapping(AutomationElement.CultureProperty' 0' System.Globalization.CultureInfo.InvariantCulture)'                  new ObjectTestMapping(AutomationElement.LabeledByProperty' null' null)'                   new ObjectTestMapping(AutomationElement.LabeledByProperty' Automation.Factory.GetRootElement()' AutomationElement.RootElement)'                   new ObjectTestMapping(AutomationElement.OrientationProperty' 2' OrientationType.Vertical)'                  new ObjectTestMapping(DockPattern.DockPositionProperty' 4' DockPosition.Fill)'                   new ObjectTestMapping(ExpandCollapsePattern.ExpandCollapseStateProperty' 2' ExpandCollapseState.PartiallyExpanded)'                  new ObjectTestMapping(WindowPattern.WindowVisualStateProperty' 2' WindowVisualState.Minimized)'                  new ObjectTestMapping(WindowPattern.WindowInteractionStateProperty' 1' WindowInteractionState.Closing)'                  new ObjectTestMapping(TablePattern.RowOrColumnMajorProperty' 2' RowOrColumnMajor.Indeterminate)'                  new ObjectTestMapping(TogglePattern.ToggleStateProperty' 1' ToggleState.On)              };
Magic Number,UIAComWrapperTests,ObjectConverterTest,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\Internal_ObjectConverterTest.cs,TestObjectConverter,The following statement contains a magic number: ObjectTestMapping[] testMap = new ObjectTestMapping[] {                  new ObjectTestMapping(AutomationElement.BoundingRectangleProperty' new double[] {1' 2' 3' 4}' new System.Windows.Rect(1' 2' 3' 4))'                   new ObjectTestMapping(AutomationElement.ControlTypeProperty' (int)50000' ControlType.Button)'                   new ObjectTestMapping(AutomationElement.ClickablePointProperty' new double[] {1' 2}' new System.Windows.Point(1' 2))'                   new ObjectTestMapping(AutomationElement.CultureProperty' 0x0409' new System.Globalization.CultureInfo(0x0409))'                   new ObjectTestMapping(AutomationElement.CultureProperty' 0' System.Globalization.CultureInfo.InvariantCulture)'                  new ObjectTestMapping(AutomationElement.LabeledByProperty' null' null)'                   new ObjectTestMapping(AutomationElement.LabeledByProperty' Automation.Factory.GetRootElement()' AutomationElement.RootElement)'                   new ObjectTestMapping(AutomationElement.OrientationProperty' 2' OrientationType.Vertical)'                  new ObjectTestMapping(DockPattern.DockPositionProperty' 4' DockPosition.Fill)'                   new ObjectTestMapping(ExpandCollapsePattern.ExpandCollapseStateProperty' 2' ExpandCollapseState.PartiallyExpanded)'                  new ObjectTestMapping(WindowPattern.WindowVisualStateProperty' 2' WindowVisualState.Minimized)'                  new ObjectTestMapping(WindowPattern.WindowInteractionStateProperty' 1' WindowInteractionState.Closing)'                  new ObjectTestMapping(TablePattern.RowOrColumnMajorProperty' 2' RowOrColumnMajor.Indeterminate)'                  new ObjectTestMapping(TogglePattern.ToggleStateProperty' 1' ToggleState.On)              };
Magic Number,UIAComWrapperTests,ObjectConverterTest,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\Internal_ObjectConverterTest.cs,TestObjectConverter,The following statement contains a magic number: ObjectTestMapping[] testMap = new ObjectTestMapping[] {                  new ObjectTestMapping(AutomationElement.BoundingRectangleProperty' new double[] {1' 2' 3' 4}' new System.Windows.Rect(1' 2' 3' 4))'                   new ObjectTestMapping(AutomationElement.ControlTypeProperty' (int)50000' ControlType.Button)'                   new ObjectTestMapping(AutomationElement.ClickablePointProperty' new double[] {1' 2}' new System.Windows.Point(1' 2))'                   new ObjectTestMapping(AutomationElement.CultureProperty' 0x0409' new System.Globalization.CultureInfo(0x0409))'                   new ObjectTestMapping(AutomationElement.CultureProperty' 0' System.Globalization.CultureInfo.InvariantCulture)'                  new ObjectTestMapping(AutomationElement.LabeledByProperty' null' null)'                   new ObjectTestMapping(AutomationElement.LabeledByProperty' Automation.Factory.GetRootElement()' AutomationElement.RootElement)'                   new ObjectTestMapping(AutomationElement.OrientationProperty' 2' OrientationType.Vertical)'                  new ObjectTestMapping(DockPattern.DockPositionProperty' 4' DockPosition.Fill)'                   new ObjectTestMapping(ExpandCollapsePattern.ExpandCollapseStateProperty' 2' ExpandCollapseState.PartiallyExpanded)'                  new ObjectTestMapping(WindowPattern.WindowVisualStateProperty' 2' WindowVisualState.Minimized)'                  new ObjectTestMapping(WindowPattern.WindowInteractionStateProperty' 1' WindowInteractionState.Closing)'                  new ObjectTestMapping(TablePattern.RowOrColumnMajorProperty' 2' RowOrColumnMajor.Indeterminate)'                  new ObjectTestMapping(TogglePattern.ToggleStateProperty' 1' ToggleState.On)              };
Magic Number,UIAComWrapperTests,ObjectConverterTest,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\Internal_ObjectConverterTest.cs,TestObjectConverter,The following statement contains a magic number: ObjectTestMapping[] testMap = new ObjectTestMapping[] {                  new ObjectTestMapping(AutomationElement.BoundingRectangleProperty' new double[] {1' 2' 3' 4}' new System.Windows.Rect(1' 2' 3' 4))'                   new ObjectTestMapping(AutomationElement.ControlTypeProperty' (int)50000' ControlType.Button)'                   new ObjectTestMapping(AutomationElement.ClickablePointProperty' new double[] {1' 2}' new System.Windows.Point(1' 2))'                   new ObjectTestMapping(AutomationElement.CultureProperty' 0x0409' new System.Globalization.CultureInfo(0x0409))'                   new ObjectTestMapping(AutomationElement.CultureProperty' 0' System.Globalization.CultureInfo.InvariantCulture)'                  new ObjectTestMapping(AutomationElement.LabeledByProperty' null' null)'                   new ObjectTestMapping(AutomationElement.LabeledByProperty' Automation.Factory.GetRootElement()' AutomationElement.RootElement)'                   new ObjectTestMapping(AutomationElement.OrientationProperty' 2' OrientationType.Vertical)'                  new ObjectTestMapping(DockPattern.DockPositionProperty' 4' DockPosition.Fill)'                   new ObjectTestMapping(ExpandCollapsePattern.ExpandCollapseStateProperty' 2' ExpandCollapseState.PartiallyExpanded)'                  new ObjectTestMapping(WindowPattern.WindowVisualStateProperty' 2' WindowVisualState.Minimized)'                  new ObjectTestMapping(WindowPattern.WindowInteractionStateProperty' 1' WindowInteractionState.Closing)'                  new ObjectTestMapping(TablePattern.RowOrColumnMajorProperty' 2' RowOrColumnMajor.Indeterminate)'                  new ObjectTestMapping(TogglePattern.ToggleStateProperty' 1' ToggleState.On)              };
Magic Number,UIAComWrapperTests,ObjectConverterTest,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\Internal_ObjectConverterTest.cs,TestObjectConverter,The following statement contains a magic number: ObjectTestMapping[] testMap = new ObjectTestMapping[] {                  new ObjectTestMapping(AutomationElement.BoundingRectangleProperty' new double[] {1' 2' 3' 4}' new System.Windows.Rect(1' 2' 3' 4))'                   new ObjectTestMapping(AutomationElement.ControlTypeProperty' (int)50000' ControlType.Button)'                   new ObjectTestMapping(AutomationElement.ClickablePointProperty' new double[] {1' 2}' new System.Windows.Point(1' 2))'                   new ObjectTestMapping(AutomationElement.CultureProperty' 0x0409' new System.Globalization.CultureInfo(0x0409))'                   new ObjectTestMapping(AutomationElement.CultureProperty' 0' System.Globalization.CultureInfo.InvariantCulture)'                  new ObjectTestMapping(AutomationElement.LabeledByProperty' null' null)'                   new ObjectTestMapping(AutomationElement.LabeledByProperty' Automation.Factory.GetRootElement()' AutomationElement.RootElement)'                   new ObjectTestMapping(AutomationElement.OrientationProperty' 2' OrientationType.Vertical)'                  new ObjectTestMapping(DockPattern.DockPositionProperty' 4' DockPosition.Fill)'                   new ObjectTestMapping(ExpandCollapsePattern.ExpandCollapseStateProperty' 2' ExpandCollapseState.PartiallyExpanded)'                  new ObjectTestMapping(WindowPattern.WindowVisualStateProperty' 2' WindowVisualState.Minimized)'                  new ObjectTestMapping(WindowPattern.WindowInteractionStateProperty' 1' WindowInteractionState.Closing)'                  new ObjectTestMapping(TablePattern.RowOrColumnMajorProperty' 2' RowOrColumnMajor.Indeterminate)'                  new ObjectTestMapping(TogglePattern.ToggleStateProperty' 1' ToggleState.On)              };
Magic Number,UIAComWrapperTests,ObjectConverterTest,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\Internal_ObjectConverterTest.cs,TestObjectConverter,The following statement contains a magic number: ObjectTestMapping[] testMap = new ObjectTestMapping[] {                  new ObjectTestMapping(AutomationElement.BoundingRectangleProperty' new double[] {1' 2' 3' 4}' new System.Windows.Rect(1' 2' 3' 4))'                   new ObjectTestMapping(AutomationElement.ControlTypeProperty' (int)50000' ControlType.Button)'                   new ObjectTestMapping(AutomationElement.ClickablePointProperty' new double[] {1' 2}' new System.Windows.Point(1' 2))'                   new ObjectTestMapping(AutomationElement.CultureProperty' 0x0409' new System.Globalization.CultureInfo(0x0409))'                   new ObjectTestMapping(AutomationElement.CultureProperty' 0' System.Globalization.CultureInfo.InvariantCulture)'                  new ObjectTestMapping(AutomationElement.LabeledByProperty' null' null)'                   new ObjectTestMapping(AutomationElement.LabeledByProperty' Automation.Factory.GetRootElement()' AutomationElement.RootElement)'                   new ObjectTestMapping(AutomationElement.OrientationProperty' 2' OrientationType.Vertical)'                  new ObjectTestMapping(DockPattern.DockPositionProperty' 4' DockPosition.Fill)'                   new ObjectTestMapping(ExpandCollapsePattern.ExpandCollapseStateProperty' 2' ExpandCollapseState.PartiallyExpanded)'                  new ObjectTestMapping(WindowPattern.WindowVisualStateProperty' 2' WindowVisualState.Minimized)'                  new ObjectTestMapping(WindowPattern.WindowInteractionStateProperty' 1' WindowInteractionState.Closing)'                  new ObjectTestMapping(TablePattern.RowOrColumnMajorProperty' 2' RowOrColumnMajor.Indeterminate)'                  new ObjectTestMapping(TogglePattern.ToggleStateProperty' 1' ToggleState.On)              };
Magic Number,UIAComWrapperTests,ObjectConverterTest,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\Internal_ObjectConverterTest.cs,TestObjectConverter,The following statement contains a magic number: ObjectTestMapping[] testMap = new ObjectTestMapping[] {                  new ObjectTestMapping(AutomationElement.BoundingRectangleProperty' new double[] {1' 2' 3' 4}' new System.Windows.Rect(1' 2' 3' 4))'                   new ObjectTestMapping(AutomationElement.ControlTypeProperty' (int)50000' ControlType.Button)'                   new ObjectTestMapping(AutomationElement.ClickablePointProperty' new double[] {1' 2}' new System.Windows.Point(1' 2))'                   new ObjectTestMapping(AutomationElement.CultureProperty' 0x0409' new System.Globalization.CultureInfo(0x0409))'                   new ObjectTestMapping(AutomationElement.CultureProperty' 0' System.Globalization.CultureInfo.InvariantCulture)'                  new ObjectTestMapping(AutomationElement.LabeledByProperty' null' null)'                   new ObjectTestMapping(AutomationElement.LabeledByProperty' Automation.Factory.GetRootElement()' AutomationElement.RootElement)'                   new ObjectTestMapping(AutomationElement.OrientationProperty' 2' OrientationType.Vertical)'                  new ObjectTestMapping(DockPattern.DockPositionProperty' 4' DockPosition.Fill)'                   new ObjectTestMapping(ExpandCollapsePattern.ExpandCollapseStateProperty' 2' ExpandCollapseState.PartiallyExpanded)'                  new ObjectTestMapping(WindowPattern.WindowVisualStateProperty' 2' WindowVisualState.Minimized)'                  new ObjectTestMapping(WindowPattern.WindowInteractionStateProperty' 1' WindowInteractionState.Closing)'                  new ObjectTestMapping(TablePattern.RowOrColumnMajorProperty' 2' RowOrColumnMajor.Indeterminate)'                  new ObjectTestMapping(TogglePattern.ToggleStateProperty' 1' ToggleState.On)              };
Magic Number,UIAComWrapperTests,MockPatternProvider,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\MockPatternTest.cs,GetAnnotationObjects,The following statement contains a magic number: return new IRawElementProviderSimple[2] { this' this };
Magic Number,UIAComWrapperTests,MockPatternProvider,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\MockPatternTest.cs,GetAnnotationTypes,The following statement contains a magic number: return new AnnotationType[2] { AnnotationType.SpellingError' AnnotationType.GrammarError };
Magic Number,UIAComWrapperTests,MockPatternProvider,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\MockPatternTest.cs,Zoom,The following statement contains a magic number: zoom < 0.25 || zoom > 4.0
Magic Number,UIAComWrapperTests,MockPatternProvider,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\MockPatternTest.cs,Zoom,The following statement contains a magic number: zoom < 0.25 || zoom > 4.0
Magic Number,UIAComWrapperTests,MockPatternProvider,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\MockPatternTest.cs,ZoomByUnit,The following statement contains a magic number: switch (zoomUnit)              {                  case ZoomUnit.LargeDecrement: delta = -0.25; break;                  case ZoomUnit.SmallDecrement: delta = -0.1; break;                  case ZoomUnit.LargeIncrement: delta = 0.25; break;                  case ZoomUnit.SmallIncrement: delta = 0.1; break;                  case ZoomUnit.NoAmount: delta = 0; break;              }
Magic Number,UIAComWrapperTests,MockPatternProvider,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\MockPatternTest.cs,ZoomByUnit,The following statement contains a magic number: switch (zoomUnit)              {                  case ZoomUnit.LargeDecrement: delta = -0.25; break;                  case ZoomUnit.SmallDecrement: delta = -0.1; break;                  case ZoomUnit.LargeIncrement: delta = 0.25; break;                  case ZoomUnit.SmallIncrement: delta = 0.1; break;                  case ZoomUnit.NoAmount: delta = 0; break;              }
Magic Number,UIAComWrapperTests,MockPatternProvider,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\MockPatternTest.cs,ZoomByUnit,The following statement contains a magic number: switch (zoomUnit)              {                  case ZoomUnit.LargeDecrement: delta = -0.25; break;                  case ZoomUnit.SmallDecrement: delta = -0.1; break;                  case ZoomUnit.LargeIncrement: delta = 0.25; break;                  case ZoomUnit.SmallIncrement: delta = 0.1; break;                  case ZoomUnit.NoAmount: delta = 0; break;              }
Magic Number,UIAComWrapperTests,MockPatternProvider,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\MockPatternTest.cs,ZoomByUnit,The following statement contains a magic number: switch (zoomUnit)              {                  case ZoomUnit.LargeDecrement: delta = -0.25; break;                  case ZoomUnit.SmallDecrement: delta = -0.1; break;                  case ZoomUnit.LargeIncrement: delta = 0.25; break;                  case ZoomUnit.SmallIncrement: delta = 0.1; break;                  case ZoomUnit.NoAmount: delta = 0; break;              }
Magic Number,UIAComWrapperTests,MockPatternProvider,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\MockPatternTest.cs,ZoomByUnit,The following statement contains a magic number: proposed < 0.25 || proposed > 4.0
Magic Number,UIAComWrapperTests,MockPatternProvider,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\MockPatternTest.cs,ZoomByUnit,The following statement contains a magic number: proposed < 0.25 || proposed > 4.0
Magic Number,UIAComWrapperTests,MockPatternProvider,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\MockPatternTest.cs,GetGrabbedItems,The following statement contains a magic number: return new IRawElementProviderSimple[2] { this' this };
Magic Number,UIAComWrapperTests,MockPatternTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\MockPatternTest.cs,SpreadsheetItemPatternTest,The following statement contains a magic number: Assert.AreEqual(2' annotationObjects.Length);
Magic Number,UIAComWrapperTests,MockPatternTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\MockPatternTest.cs,SpreadsheetItemPatternTest,The following statement contains a magic number: Assert.AreEqual(2' annotationTypes.Length);
Magic Number,UIAComWrapperTests,MockPatternTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\MockPatternTest.cs,TransformPattern2Test,The following statement contains a magic number: Assert.AreEqual(0.25' pattern.Current.ZoomMinimum);
Magic Number,UIAComWrapperTests,MockPatternTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\MockPatternTest.cs,TransformPattern2Test,The following statement contains a magic number: Assert.AreEqual(4.0' pattern.Current.ZoomMaximum);
Magic Number,UIAComWrapperTests,MockPatternTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\MockPatternTest.cs,TransformPattern2Test,The following statement contains a magic number: pattern.Zoom(2.0);
Magic Number,UIAComWrapperTests,MockPatternTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\MockPatternTest.cs,TransformPattern2Test,The following statement contains a magic number: Assert.AreEqual(2.0' pattern.Current.ZoomLevel);
Magic Number,UIAComWrapperTests,MockPatternTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\MockPatternTest.cs,TransformPattern2Test,The following statement contains a magic number: pattern.Zoom(10.0);
Magic Number,UIAComWrapperTests,MockPatternTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\MockPatternTest.cs,TransformPattern2Test,The following statement contains a magic number: Assert.AreEqual(1.75' pattern.Current.ZoomLevel);
Magic Number,UIAComWrapperTests,MockPatternTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\MockPatternTest.cs,TransformPattern2Test,The following statement contains a magic number: Assert.AreEqual(1.75' pattern.Current.ZoomLevel);
Magic Number,UIAComWrapperTests,MockPatternTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\MockPatternTest.cs,DragPatternTest,The following statement contains a magic number: Assert.AreEqual(2' pattern.Current.DropEffects.Length);
Magic Number,UIAComWrapperTests,MockPatternTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\MockPatternTest.cs,DragPatternTest,The following statement contains a magic number: Assert.AreEqual(2' grabbedItems.Length);
Magic Number,UIAComWrapperTests,MockPatternTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\MockPatternTest.cs,DropTargetPatternTest,The following statement contains a magic number: Assert.AreEqual(2' pattern.Current.DropTargetEffects.Length);
Magic Number,UIAComWrapperTests,MockPatternTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\MockPatternTest.cs,CheckWin8,The following statement contains a magic number: var win8version = new Version(6' 2' 9200' 0);
Magic Number,UIAComWrapperTests,MockPatternTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\MockPatternTest.cs,CheckWin8,The following statement contains a magic number: var win8version = new Version(6' 2' 9200' 0);
Magic Number,UIAComWrapperTests,MockPatternTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\MockPatternTest.cs,CheckWin8,The following statement contains a magic number: var win8version = new Version(6' 2' 9200' 0);
Magic Number,UIAComWrapperTests,ScenarioTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\ScenarioTests.cs,ExpandCollapsePatternTest,The following statement contains a magic number: System.Threading.Thread.Sleep(100 /* ms */);
Magic Number,UIAComWrapperTests,ScenarioTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\ScenarioTests.cs,ExpandCollapsePatternTest,The following statement contains a magic number: System.Threading.Thread.Sleep(100 /* ms */);
Magic Number,UIAComWrapperTests,ScenarioTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\ScenarioTests.cs,NoClickablePointTest,The following statement contains a magic number: transformPattern1.Resize(400' 300);
Magic Number,UIAComWrapperTests,ScenarioTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\ScenarioTests.cs,NoClickablePointTest,The following statement contains a magic number: transformPattern1.Resize(400' 300);
Magic Number,UIAComWrapperTests,ScenarioTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\ScenarioTests.cs,NoClickablePointTest,The following statement contains a magic number: transformPattern2.Resize(400' 300);
Magic Number,UIAComWrapperTests,ScenarioTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\ScenarioTests.cs,NoClickablePointTest,The following statement contains a magic number: transformPattern2.Resize(400' 300);
Magic Number,UIAComWrapperTests,ScenarioTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\ScenarioTests.cs,RangeValuePatternTest,The following statement contains a magic number: System.Threading.Thread.Sleep(100 /* ms */);
Magic Number,UIAComWrapperTests,ScenarioTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\ScenarioTests.cs,RangeValuePatternTest,The following statement contains a magic number: System.Threading.Thread.Sleep(100 /* ms */);
Magic Number,UIAComWrapperTests,ScenarioTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\ScenarioTests.cs,RangeValuePatternTest,The following statement contains a magic number: double midpoint = (range.Current.Maximum + range.Current.Minimum) / 2;
Magic Number,UIAComWrapperTests,ScenarioTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\ScenarioTests.cs,RangeValuePatternTest,The following statement contains a magic number: System.Threading.Thread.Sleep(100 /* ms */);
Magic Number,UIAComWrapperTests,ScenarioTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\ScenarioTests.cs,TogglePatternTest,The following statement contains a magic number: System.Threading.Thread.Sleep(100 /* ms */);
Magic Number,UIAComWrapperTests,ScenarioTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\ScenarioTests.cs,TogglePatternTest,The following statement contains a magic number: System.Threading.Thread.Sleep(100 /* ms */);
Magic Number,UIAComWrapperTests,ScenarioTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\ScenarioTests.cs,TransformPatternTest,The following statement contains a magic number: transformPattern.Move(10' 10);
Magic Number,UIAComWrapperTests,ScenarioTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\ScenarioTests.cs,TransformPatternTest,The following statement contains a magic number: transformPattern.Move(10' 10);
Magic Number,UIAComWrapperTests,ScenarioTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\ScenarioTests.cs,TransformPatternTest,The following statement contains a magic number: transformPattern.Resize(200' 200);
Magic Number,UIAComWrapperTests,ScenarioTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\ScenarioTests.cs,TransformPatternTest,The following statement contains a magic number: transformPattern.Resize(200' 200);
Magic Number,UIAComWrapperTests,ScenarioTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\ScenarioTests.cs,TransformPatternCachedTest,The following statement contains a magic number: transformPattern.Move(10' 10);
Magic Number,UIAComWrapperTests,ScenarioTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\ScenarioTests.cs,TransformPatternCachedTest,The following statement contains a magic number: transformPattern.Move(10' 10);
Magic Number,UIAComWrapperTests,ScenarioTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\ScenarioTests.cs,TransformPatternCachedTest,The following statement contains a magic number: transformPattern.Resize(200' 200);
Magic Number,UIAComWrapperTests,ScenarioTests,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\ScenarioTests.cs,TransformPatternCachedTest,The following statement contains a magic number: transformPattern.Resize(200' 200);
Missing Default,UIAComWrapperTests,MockPatternProvider,D:\research\architectureSmells\repos\JakeGinnivan_UIAComWrapper\UiaComWrapperTests\MockPatternTest.cs,ZoomByUnit,The following switch statement is missing a default case: switch (zoomUnit)              {                  case ZoomUnit.LargeDecrement: delta = -0.25; break;                  case ZoomUnit.SmallDecrement: delta = -0.1; break;                  case ZoomUnit.LargeIncrement: delta = 0.25; break;                  case ZoomUnit.SmallIncrement: delta = 0.1; break;                  case ZoomUnit.NoAmount: delta = 0; break;              }
