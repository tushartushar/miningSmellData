Implementation smell,Namespace,Class,File,Method,Description
Complex Method,BlockAlignmentScanner,Program,C:\repos\XboxChaos_Assembly\src\BlockAlignmentScanner\Program.cs,Main,Cyclomatic complexity of the method is 8
Complex Method,BlockAlignmentScanner,Program,C:\repos\XboxChaos_Assembly\src\BlockAlignmentScanner\Program.cs,DetectAlignment,Cyclomatic complexity of the method is 9
Long Parameter List,BlockAlignmentScanner,Program,C:\repos\XboxChaos_Assembly\src\BlockAlignmentScanner\Program.cs,DetectAlignment,The method has 6 parameters. Parameters: cacheFile' reader' baseOffset' baseElement' alignsByElem' visitedTagBlocks
Magic Number,BlockAlignmentScanner,Program,C:\repos\XboxChaos_Assembly\src\BlockAlignmentScanner\Program.cs,Main,The following statement contains a magic number: if (args.Length != 3)  			{  				Console.WriteLine("Usage: BlockAlignmentScanner <map dir> <in plugin dir> <out plugin dir>");  				return;  			}
Magic Number,BlockAlignmentScanner,Program,C:\repos\XboxChaos_Assembly\src\BlockAlignmentScanner\Program.cs,Main,The following statement contains a magic number: var outDir = args[2];
Magic Number,BlockAlignmentScanner,Program,C:\repos\XboxChaos_Assembly\src\BlockAlignmentScanner\Program.cs,Main,The following statement contains a magic number: foreach (var align in alignsByElem)  			{  				if (align.Value != 4)  				{  					Console.WriteLine("- \"{0}\" -> align 0x{1:X}"' align.Key.Attribute("name").Value' align.Value);  					align.Key.SetAttributeValue(XName.Get("align")' "0x" + align.Value.ToString("X"));  				}  			}
Magic Number,BlockAlignmentScanner,Program,C:\repos\XboxChaos_Assembly\src\BlockAlignmentScanner\Program.cs,GetAlignment,The following statement contains a magic number: if (val == 0)  				return 32;
Magic Number,BlockAlignmentScanner,Program,C:\repos\XboxChaos_Assembly\src\BlockAlignmentScanner\Program.cs,ParseInteger,The following statement contains a magic number: if (str.StartsWith("0x"))  				return int.Parse(str.Substring(2)' NumberStyles.HexNumber);
