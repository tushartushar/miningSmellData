Implementation smell,Namespace,Class,File,Method,Description
Long Method,HeapShot.Reader,HeapSnapshot,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\HeapSnapshot.cs,Build,The method has 142 lines of code.
Complex Method,HeapShot.Reader,ObjectMapReader,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\ObjectMapFileReader.cs,ReadLogFile,Cyclomatic complexity of the method is 12
Complex Method,HeapShot.Reader,ObjectMapReader,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\ObjectMapFileReader.cs,ReadLogFileChunk_Object,Cyclomatic complexity of the method is 13
Complex Method,HeapShot.Reader,ReferenceNode,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\ReferenceNode.cs,AddReference,Cyclomatic complexity of the method is 9
Complex Method,HeapShot.Reader,HeapSnapshot,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\HeapSnapshot.cs,Build,Cyclomatic complexity of the method is 19
Complex Method,HeapShot.Reader,HeapSnapshot,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\HeapSnapshot.cs,FindRoot,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.Profiler,Event,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\Event.cs,CreateEvent,Cyclomatic complexity of the method is 14
Complex Method,MonoDevelop.Profiler,MetadataEvent,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\Event.cs,MetadataEvent,Cyclomatic complexity of the method is 9
Complex Method,HeapShot.Reader.Graphs,Node,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\Graph.cs,WriteDot,Cyclomatic complexity of the method is 8
Long Parameter List,HeapShot.Reader,ReferenceNode,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\ReferenceNode.cs,AddReference,The method has 6 parameters. Parameters: parentObject' obj' tnode' refsToRoot' rootMem' fieldName
Long Identifier,MonoDevelop.Profiler,MonitiorEvent,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\Event.cs,,The length of the parameter MONO_PROFILER_MONITOR_CONTENTION is 32.
Long Statement,HeapShot.Reader,LogFileReader,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\LogFileReader.cs,ReadInt32,The length of the statement  "			res = (buffer [position] | (buffer [position + 1] << 8) | (buffer [position + 2] << 16) | (buffer [position + 3] << 24));" is 121.
Magic Number,HeapShot.Reader,ObjectMapReader,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\ObjectMapFileReader.cs,WaitForHeapShot,The following statement contains a magic number: System.Threading.Thread.Sleep (500);
Magic Number,HeapShot.Reader,ObjectMapReader,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\ObjectMapFileReader.cs,ReadLogFile,The following statement contains a magic number: long pct = (reader.Position - start_position) * 100 / (reader.Length - start_position);
Magic Number,HeapShot.Reader,ObjectMapReader,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\ObjectMapFileReader.cs,ReadLogFile,The following statement contains a magic number: progress.ReportProgress ("Loading profiler log"' pct / 100.0f);
Magic Number,HeapShot.Reader,ReferenceNode,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\ReferenceNode.cs,Print,The following statement contains a magic number: Console.Write (new string (' '' level*3));
Magic Number,HeapShot.Reader,ReferenceNode,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\ReferenceNode.cs,Print,The following statement contains a magic number: Console.Write (new string (' '' level*3) + new string (' '' RefCount.ToString().Length) + " ");
Magic Number,HeapShot.Reader,HeapSnapshot,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\HeapSnapshot.cs,FindRoot,The following statement contains a magic number: return -2;
Magic Number,HeapShot.Reader,HeapSnapshot,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\HeapSnapshot.cs,FindRoot,The following statement contains a magic number: fr != -2 && fr < findresult
Magic Number,HeapShot.Reader,PathTree,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\HeapSnapshot.cs,Dump,The following statement contains a magic number: Console.WriteLine (new string (' '' ind*2) + pathTree [n]);
Magic Number,HeapShot.Reader,LogFileReader,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\LogFileReader.cs,ReadUInt16,The following statement contains a magic number: res = (ushort) (buffer [position] | (buffer [position + 1] << 8));
Magic Number,HeapShot.Reader,LogFileReader,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\LogFileReader.cs,ReadUInt16,The following statement contains a magic number: position += 2;
Magic Number,HeapShot.Reader,LogFileReader,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\LogFileReader.cs,ReadInt32,The following statement contains a magic number: res = (buffer [position] | (buffer [position + 1] << 8) | (buffer [position + 2] << 16) | (buffer [position + 3] << 24));
Magic Number,HeapShot.Reader,LogFileReader,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\LogFileReader.cs,ReadInt32,The following statement contains a magic number: res = (buffer [position] | (buffer [position + 1] << 8) | (buffer [position + 2] << 16) | (buffer [position + 3] << 24));
Magic Number,HeapShot.Reader,LogFileReader,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\LogFileReader.cs,ReadInt32,The following statement contains a magic number: res = (buffer [position] | (buffer [position + 1] << 8) | (buffer [position + 2] << 16) | (buffer [position + 3] << 24));
Magic Number,HeapShot.Reader,LogFileReader,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\LogFileReader.cs,ReadInt32,The following statement contains a magic number: res = (buffer [position] | (buffer [position + 1] << 8) | (buffer [position + 2] << 16) | (buffer [position + 3] << 24));
Magic Number,HeapShot.Reader,LogFileReader,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\LogFileReader.cs,ReadInt32,The following statement contains a magic number: res = (buffer [position] | (buffer [position + 1] << 8) | (buffer [position + 2] << 16) | (buffer [position + 3] << 24));
Magic Number,HeapShot.Reader,LogFileReader,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\LogFileReader.cs,ReadInt32,The following statement contains a magic number: position += 4;
Magic Number,HeapShot.Reader,LogFileReader,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\LogFileReader.cs,ReadInt64,The following statement contains a magic number: uint ret_low  = (uint) (((uint)buffer [position + 0])        | 			                       (((uint)buffer [position + 1]) << 8)  | 			                       (((uint)buffer [position + 2]) << 16) | 			                       (((uint)buffer [position + 3]) << 24) 			                       );
Magic Number,HeapShot.Reader,LogFileReader,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\LogFileReader.cs,ReadInt64,The following statement contains a magic number: uint ret_low  = (uint) (((uint)buffer [position + 0])        | 			                       (((uint)buffer [position + 1]) << 8)  | 			                       (((uint)buffer [position + 2]) << 16) | 			                       (((uint)buffer [position + 3]) << 24) 			                       );
Magic Number,HeapShot.Reader,LogFileReader,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\LogFileReader.cs,ReadInt64,The following statement contains a magic number: uint ret_low  = (uint) (((uint)buffer [position + 0])        | 			                       (((uint)buffer [position + 1]) << 8)  | 			                       (((uint)buffer [position + 2]) << 16) | 			                       (((uint)buffer [position + 3]) << 24) 			                       );
Magic Number,HeapShot.Reader,LogFileReader,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\LogFileReader.cs,ReadInt64,The following statement contains a magic number: uint ret_low  = (uint) (((uint)buffer [position + 0])        | 			                       (((uint)buffer [position + 1]) << 8)  | 			                       (((uint)buffer [position + 2]) << 16) | 			                       (((uint)buffer [position + 3]) << 24) 			                       );
Magic Number,HeapShot.Reader,LogFileReader,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\LogFileReader.cs,ReadInt64,The following statement contains a magic number: uint ret_low  = (uint) (((uint)buffer [position + 0])        | 			                       (((uint)buffer [position + 1]) << 8)  | 			                       (((uint)buffer [position + 2]) << 16) | 			                       (((uint)buffer [position + 3]) << 24) 			                       );
Magic Number,HeapShot.Reader,LogFileReader,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\LogFileReader.cs,ReadInt64,The following statement contains a magic number: uint ret_high = (uint) (((uint)buffer [position + 4])        | 			                       (((uint)buffer [position + 5]) << 8)  | 			                       (((uint)buffer [position + 6]) << 16) | 			                       (((uint)buffer [position + 7]) << 24) 			                       );
Magic Number,HeapShot.Reader,LogFileReader,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\LogFileReader.cs,ReadInt64,The following statement contains a magic number: uint ret_high = (uint) (((uint)buffer [position + 4])        | 			                       (((uint)buffer [position + 5]) << 8)  | 			                       (((uint)buffer [position + 6]) << 16) | 			                       (((uint)buffer [position + 7]) << 24) 			                       );
Magic Number,HeapShot.Reader,LogFileReader,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\LogFileReader.cs,ReadInt64,The following statement contains a magic number: uint ret_high = (uint) (((uint)buffer [position + 4])        | 			                       (((uint)buffer [position + 5]) << 8)  | 			                       (((uint)buffer [position + 6]) << 16) | 			                       (((uint)buffer [position + 7]) << 24) 			                       );
Magic Number,HeapShot.Reader,LogFileReader,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\LogFileReader.cs,ReadInt64,The following statement contains a magic number: uint ret_high = (uint) (((uint)buffer [position + 4])        | 			                       (((uint)buffer [position + 5]) << 8)  | 			                       (((uint)buffer [position + 6]) << 16) | 			                       (((uint)buffer [position + 7]) << 24) 			                       );
Magic Number,HeapShot.Reader,LogFileReader,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\LogFileReader.cs,ReadInt64,The following statement contains a magic number: uint ret_high = (uint) (((uint)buffer [position + 4])        | 			                       (((uint)buffer [position + 5]) << 8)  | 			                       (((uint)buffer [position + 6]) << 16) | 			                       (((uint)buffer [position + 7]) << 24) 			                       );
Magic Number,HeapShot.Reader,LogFileReader,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\LogFileReader.cs,ReadInt64,The following statement contains a magic number: uint ret_high = (uint) (((uint)buffer [position + 4])        | 			                       (((uint)buffer [position + 5]) << 8)  | 			                       (((uint)buffer [position + 6]) << 16) | 			                       (((uint)buffer [position + 7]) << 24) 			                       );
Magic Number,HeapShot.Reader,LogFileReader,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\LogFileReader.cs,ReadInt64,The following statement contains a magic number: uint ret_high = (uint) (((uint)buffer [position + 4])        | 			                       (((uint)buffer [position + 5]) << 8)  | 			                       (((uint)buffer [position + 6]) << 16) | 			                       (((uint)buffer [position + 7]) << 24) 			                       );
Magic Number,HeapShot.Reader,LogFileReader,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\LogFileReader.cs,ReadInt64,The following statement contains a magic number: position += 8;
Magic Number,HeapShot.Reader,LogFileReader,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\LogFileReader.cs,ReadInt64,The following statement contains a magic number: return (long) ((((ulong) ret_high) << 32) | ret_low);
Magic Number,HeapShot.Reader,LogFileReader,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\LogFileReader.cs,ReadUInt64,The following statement contains a magic number: uint ret_low  = (uint) (((uint)buffer [position + 0])        | 			                       (((uint)buffer [position + 1]) << 8)  | 			                       (((uint)buffer [position + 2]) << 16) | 			                       (((uint)buffer [position + 3]) << 24) 			                       );
Magic Number,HeapShot.Reader,LogFileReader,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\LogFileReader.cs,ReadUInt64,The following statement contains a magic number: uint ret_low  = (uint) (((uint)buffer [position + 0])        | 			                       (((uint)buffer [position + 1]) << 8)  | 			                       (((uint)buffer [position + 2]) << 16) | 			                       (((uint)buffer [position + 3]) << 24) 			                       );
Magic Number,HeapShot.Reader,LogFileReader,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\LogFileReader.cs,ReadUInt64,The following statement contains a magic number: uint ret_low  = (uint) (((uint)buffer [position + 0])        | 			                       (((uint)buffer [position + 1]) << 8)  | 			                       (((uint)buffer [position + 2]) << 16) | 			                       (((uint)buffer [position + 3]) << 24) 			                       );
Magic Number,HeapShot.Reader,LogFileReader,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\LogFileReader.cs,ReadUInt64,The following statement contains a magic number: uint ret_low  = (uint) (((uint)buffer [position + 0])        | 			                       (((uint)buffer [position + 1]) << 8)  | 			                       (((uint)buffer [position + 2]) << 16) | 			                       (((uint)buffer [position + 3]) << 24) 			                       );
Magic Number,HeapShot.Reader,LogFileReader,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\LogFileReader.cs,ReadUInt64,The following statement contains a magic number: uint ret_low  = (uint) (((uint)buffer [position + 0])        | 			                       (((uint)buffer [position + 1]) << 8)  | 			                       (((uint)buffer [position + 2]) << 16) | 			                       (((uint)buffer [position + 3]) << 24) 			                       );
Magic Number,HeapShot.Reader,LogFileReader,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\LogFileReader.cs,ReadUInt64,The following statement contains a magic number: uint ret_high = (uint) (((uint)buffer [position + 4])        | 			                       (((uint)buffer [position + 5]) << 8)  | 			                       (((uint)buffer [position + 6]) << 16) | 			                       (((uint)buffer [position + 7]) << 24) 			                       );
Magic Number,HeapShot.Reader,LogFileReader,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\LogFileReader.cs,ReadUInt64,The following statement contains a magic number: uint ret_high = (uint) (((uint)buffer [position + 4])        | 			                       (((uint)buffer [position + 5]) << 8)  | 			                       (((uint)buffer [position + 6]) << 16) | 			                       (((uint)buffer [position + 7]) << 24) 			                       );
Magic Number,HeapShot.Reader,LogFileReader,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\LogFileReader.cs,ReadUInt64,The following statement contains a magic number: uint ret_high = (uint) (((uint)buffer [position + 4])        | 			                       (((uint)buffer [position + 5]) << 8)  | 			                       (((uint)buffer [position + 6]) << 16) | 			                       (((uint)buffer [position + 7]) << 24) 			                       );
Magic Number,HeapShot.Reader,LogFileReader,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\LogFileReader.cs,ReadUInt64,The following statement contains a magic number: uint ret_high = (uint) (((uint)buffer [position + 4])        | 			                       (((uint)buffer [position + 5]) << 8)  | 			                       (((uint)buffer [position + 6]) << 16) | 			                       (((uint)buffer [position + 7]) << 24) 			                       );
Magic Number,HeapShot.Reader,LogFileReader,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\LogFileReader.cs,ReadUInt64,The following statement contains a magic number: uint ret_high = (uint) (((uint)buffer [position + 4])        | 			                       (((uint)buffer [position + 5]) << 8)  | 			                       (((uint)buffer [position + 6]) << 16) | 			                       (((uint)buffer [position + 7]) << 24) 			                       );
Magic Number,HeapShot.Reader,LogFileReader,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\LogFileReader.cs,ReadUInt64,The following statement contains a magic number: uint ret_high = (uint) (((uint)buffer [position + 4])        | 			                       (((uint)buffer [position + 5]) << 8)  | 			                       (((uint)buffer [position + 6]) << 16) | 			                       (((uint)buffer [position + 7]) << 24) 			                       );
Magic Number,HeapShot.Reader,LogFileReader,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\LogFileReader.cs,ReadUInt64,The following statement contains a magic number: uint ret_high = (uint) (((uint)buffer [position + 4])        | 			                       (((uint)buffer [position + 5]) << 8)  | 			                       (((uint)buffer [position + 6]) << 16) | 			                       (((uint)buffer [position + 7]) << 24) 			                       );
Magic Number,HeapShot.Reader,LogFileReader,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\LogFileReader.cs,ReadUInt64,The following statement contains a magic number: position += 8;
Magic Number,HeapShot.Reader,LogFileReader,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\LogFileReader.cs,ReadUInt64,The following statement contains a magic number: return (((ulong) ret_high) << 32) | ret_low;
Magic Number,HeapShot.Reader,LogFileReader,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\LogFileReader.cs,ReadULeb128,The following statement contains a magic number: shift += 7;
Magic Number,HeapShot.Reader,LogFileReader,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\LogFileReader.cs,ReadSLeb128,The following statement contains a magic number: shift += 7;
Magic Number,HeapShot.Reader,LogFileReader,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\LogFileReader.cs,ReadSLeb128,The following statement contains a magic number: shift < sizeof(long) * 8 && (b & 0x40) == 0x40
Magic Number,MonoDevelop.Profiler,BufferHeader,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\Buffer.cs,Read,The following statement contains a magic number: !reader.LoadData (48)
Magic Number,MonoDevelop.Profiler,MetadataEvent,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\Event.cs,MetadataEvent,The following statement contains a magic number: switch (MType) { 			case MetaDataType.Class: 				Image = reader.ReadSLeb128 (); 				Flags = reader.ReadULeb128 (); 				Name = reader.ReadNullTerminatedString (); 				break; 			case MetaDataType.Image: 				Flags = reader.ReadULeb128 (); 				Name = reader.ReadNullTerminatedString (); 				break; 			case MetaDataType.Assembly: 				Flags = reader.ReadULeb128 (); 				Name = reader.ReadNullTerminatedString (); 				break; 			case MetaDataType.Thread: 				Flags = reader.ReadULeb128 (); 				if (reader.Header.Format < 11 || (reader.Header.Format > 10 && extendedInfo == 0)) { 					Name = reader.ReadNullTerminatedString (); 				} 				break; 			case MetaDataType.Domain: 				Flags = reader.ReadULeb128 (); 				if (extendedInfo == 0) 					Name = reader.ReadNullTerminatedString (); 				break; 			case MetaDataType.Context: 				Flags = reader.ReadULeb128 (); 				Domain = reader.ReadSLeb128 (); 				break; 			default: 				throw new ArgumentException ("Unknown metadata type: " + MType); 			}
Magic Number,MonoDevelop.Profiler,MetadataEvent,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\Event.cs,MetadataEvent,The following statement contains a magic number: switch (MType) { 			case MetaDataType.Class: 				Image = reader.ReadSLeb128 (); 				Flags = reader.ReadULeb128 (); 				Name = reader.ReadNullTerminatedString (); 				break; 			case MetaDataType.Image: 				Flags = reader.ReadULeb128 (); 				Name = reader.ReadNullTerminatedString (); 				break; 			case MetaDataType.Assembly: 				Flags = reader.ReadULeb128 (); 				Name = reader.ReadNullTerminatedString (); 				break; 			case MetaDataType.Thread: 				Flags = reader.ReadULeb128 (); 				if (reader.Header.Format < 11 || (reader.Header.Format > 10 && extendedInfo == 0)) { 					Name = reader.ReadNullTerminatedString (); 				} 				break; 			case MetaDataType.Domain: 				Flags = reader.ReadULeb128 (); 				if (extendedInfo == 0) 					Name = reader.ReadNullTerminatedString (); 				break; 			case MetaDataType.Context: 				Flags = reader.ReadULeb128 (); 				Domain = reader.ReadSLeb128 (); 				break; 			default: 				throw new ArgumentException ("Unknown metadata type: " + MType); 			}
Magic Number,MonoDevelop.Profiler,MonitiorEvent,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\Event.cs,MonitiorEvent,The following statement contains a magic number: byte ev = (byte)((exinfo >> 4) & 0x3);
Magic Number,MonoDevelop.Profiler,Util,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\Util.cs,ReadULeb128,The following statement contains a magic number: shift += 7;
Magic Number,MonoDevelop.Profiler,Util,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\Util.cs,ReadSLeb128,The following statement contains a magic number: shift += 7;
Magic Number,MonoDevelop.Profiler,Util,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\Util.cs,ReadSLeb128,The following statement contains a magic number: shift < sizeof(long) * 8 && (b & 0x40) == 0x40
Magic Number,MonoDevelop.Profiler,Header,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\Header.cs,Read,The following statement contains a magic number: !reader.LoadData (32)
Missing Default,MonoDevelop.Profiler,Event,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\Event.cs,CreateEvent,The following switch statement is missing a default case: switch (type) { 			case EventType.Alloc: 				return AllocEvent.Read (reader' extendedInfo);  			case EventType.Exception: 				return ExceptionEvent.Read (reader' extendedInfo); 			case EventType.Gc: 				switch (extendedInfo) { 				case TYPE_GC_EVENT: 					return GcEvent.Read (reader); 				case TYPE_GC_RESIZE: 					return ResizeGcEvent.Read (reader); 				case TYPE_GC_MOVE: 					return MoveGcEvent.Read (reader); 				case TYPE_GC_HANDLE_CREATED: 				case TYPE_GC_HANDLE_CREATED_BT: 					return HandleCreatedGcEvent.Read (reader' extendedInfo); 				case TYPE_GC_HANDLE_DESTROYED: 				case TYPE_GC_HANDLE_DESTROYED_BT: 					return HandleDestroyedGcEvent.Read (reader' extendedInfo); 				} 				throw new InvalidOperationException ("unknown gc type:" + extendedInfo); 			case EventType.Heap: 				return HeapEvent.Read (reader' extendedInfo);  			case EventType.Metadata: 				return MetadataEvent.Read (reader' extendedInfo);  			case EventType.Method: 				return MethodEvent.Read (reader' extendedInfo);  			case EventType.Monitor: 				return MonitiorEvent.Read (reader' extendedInfo);  			case EventType.Sample: 				return SampleEvent.Read (reader' extendedInfo); 			case EventType.Runtime: 				return RuntimeEvent.Read (reader' extendedInfo); 			case EventType.Coverage: 				return CoverageEvent.Read (reader' extendedInfo); 			}
Missing Default,MonoDevelop.Profiler,Event,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\Event.cs,CreateEvent,The following switch statement is missing a default case: switch (extendedInfo) { 				case TYPE_GC_EVENT: 					return GcEvent.Read (reader); 				case TYPE_GC_RESIZE: 					return ResizeGcEvent.Read (reader); 				case TYPE_GC_MOVE: 					return MoveGcEvent.Read (reader); 				case TYPE_GC_HANDLE_CREATED: 				case TYPE_GC_HANDLE_CREATED_BT: 					return HandleCreatedGcEvent.Read (reader' extendedInfo); 				case TYPE_GC_HANDLE_DESTROYED: 				case TYPE_GC_HANDLE_DESTROYED_BT: 					return HandleDestroyedGcEvent.Read (reader' extendedInfo); 				}
Missing Default,MonoDevelop.Profiler,CoverageEvent,C:\research\architectureSmells\repos\mono_heap-shot\HeapShot.Reader\Event.cs,Read,The following switch statement is missing a default case: switch (extendedInfo) { 				case TYPE_COVERAGE_ASSEMBLY: return new CoverageAssemblyEvent (reader); 				case TYPE_COVERAGE_METHOD: return new CoverageMethodEvent (reader); 				case TYPE_COVERAGE_STATEMENT: return new CoverageStatementEvent (reader); 				case TYPE_COVERAGE_CLASS: return new CoverageClassEvent (reader); 			}
