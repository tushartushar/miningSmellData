Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Client.localhost,WebService1,C:\repos\nage31_PasswordCrackerAssignment\Client\Web References\localhost\Reference.cs,RunCrack,The method has 8 parameters.
Long Parameter List,Client.localhost,WebService1,C:\repos\nage31_PasswordCrackerAssignment\Client\Web References\localhost\Reference.cs,RunCrackAsync,The method has 8 parameters.
Long Parameter List,Client.localhost,WebService1,C:\repos\nage31_PasswordCrackerAssignment\Client\Web References\localhost\Reference.cs,RunCrackAsync,The method has 9 parameters.
Long Parameter List,Client.WebReference1,WebService1,C:\repos\nage31_PasswordCrackerAssignment\Client\Web References\WebReference1\Reference.cs,RunCrack,The method has 8 parameters.
Long Parameter List,Client.WebReference1,WebService1,C:\repos\nage31_PasswordCrackerAssignment\Client\Web References\WebReference1\Reference.cs,RunCrackAsync,The method has 8 parameters.
Long Parameter List,Client.WebReference1,WebService1,C:\repos\nage31_PasswordCrackerAssignment\Client\Web References\WebReference1\Reference.cs,RunCrackAsync,The method has 9 parameters.
Long Parameter List,Client.WebReference,WebService1,C:\repos\nage31_PasswordCrackerAssignment\Client\Web References\WebReference\Reference.cs,RunCrack,The method has 8 parameters.
Long Parameter List,Client.WebReference,WebService1,C:\repos\nage31_PasswordCrackerAssignment\Client\Web References\WebReference\Reference.cs,RunCrackAsync,The method has 8 parameters.
Long Parameter List,Client.WebReference,WebService1,C:\repos\nage31_PasswordCrackerAssignment\Client\Web References\WebReference\Reference.cs,RunCrackAsync,The method has 9 parameters.
Long Statement,Client.GamerService,WebService1,C:\repos\nage31_PasswordCrackerAssignment\Client\Web References\GamerService\Reference.cs,OnRunCrackOperationCompleted,The length of the statement  "		System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg)); " is 132.
Long Statement,Client.GamerService,WebService1,C:\repos\nage31_PasswordCrackerAssignment\Client\Web References\GamerService\Reference.cs,OnRunCrackOperationCompleted,The length of the statement  "		this.RunCrackCompleted (this' new RunCrackCompletedEventArgs (invokeArgs.Results' invokeArgs.Error' invokeArgs.Cancelled' invokeArgs.UserState)); " is 145.
Long Statement,Client.GamerService,WebService1,C:\repos\nage31_PasswordCrackerAssignment\Client\Web References\GamerService\Reference.cs,IsLocalFileSystemWebService,The length of the statement  "	if (((wsUri.Port >= 1024) && (string.Compare (wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))) { " is 123.
Long Statement,Client.localhost,WebService1,C:\repos\nage31_PasswordCrackerAssignment\Client\Web References\localhost\Reference.cs,OnRunCrackOperationCompleted,The length of the statement  "		System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg)); " is 132.
Long Statement,Client.localhost,WebService1,C:\repos\nage31_PasswordCrackerAssignment\Client\Web References\localhost\Reference.cs,OnRunCrackOperationCompleted,The length of the statement  "		this.RunCrackCompleted (this' new RunCrackCompletedEventArgs (invokeArgs.Results' invokeArgs.Error' invokeArgs.Cancelled' invokeArgs.UserState)); " is 145.
Long Statement,Client.localhost,WebService1,C:\repos\nage31_PasswordCrackerAssignment\Client\Web References\localhost\Reference.cs,IsLocalFileSystemWebService,The length of the statement  "	if (((wsUri.Port >= 1024) && (string.Compare (wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))) { " is 123.
Long Statement,Client.WebReference1,WebService1,C:\repos\nage31_PasswordCrackerAssignment\Client\Web References\WebReference1\Reference.cs,OnRunCrackOperationCompleted,The length of the statement  "		System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg)); " is 132.
Long Statement,Client.WebReference1,WebService1,C:\repos\nage31_PasswordCrackerAssignment\Client\Web References\WebReference1\Reference.cs,OnRunCrackOperationCompleted,The length of the statement  "		this.RunCrackCompleted (this' new RunCrackCompletedEventArgs (invokeArgs.Results' invokeArgs.Error' invokeArgs.Cancelled' invokeArgs.UserState)); " is 145.
Long Statement,Client.WebReference1,WebService1,C:\repos\nage31_PasswordCrackerAssignment\Client\Web References\WebReference1\Reference.cs,IsLocalFileSystemWebService,The length of the statement  "	if (((wsUri.Port >= 1024) && (string.Compare (wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))) { " is 123.
Long Statement,Client.WebReference,WebService1,C:\repos\nage31_PasswordCrackerAssignment\Client\Web References\WebReference\Reference.cs,OnRunCrackOperationCompleted,The length of the statement  "		System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg)); " is 132.
Long Statement,Client.WebReference,WebService1,C:\repos\nage31_PasswordCrackerAssignment\Client\Web References\WebReference\Reference.cs,OnRunCrackOperationCompleted,The length of the statement  "		this.RunCrackCompleted (this' new RunCrackCompletedEventArgs (invokeArgs.Results' invokeArgs.Error' invokeArgs.Cancelled' invokeArgs.UserState)); " is 145.
Long Statement,Client.WebReference,WebService1,C:\repos\nage31_PasswordCrackerAssignment\Client\Web References\WebReference\Reference.cs,IsLocalFileSystemWebService,The length of the statement  "	if (((wsUri.Port >= 1024) && (string.Compare (wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))) { " is 123.
Magic Number,Client,Program,C:\repos\nage31_PasswordCrackerAssignment\Client\Program.cs,Main,The following statement contains a magic number: using (FileStream fs = new FileStream ("passwords.txt"' FileMode.Open' FileAccess.Read)) {  	using (StreamReader sr = new StreamReader (fs)) {  		List<string> parts = new List<string> ();  		while (!sr.EndOfStream) {  			parts.Add (sr.ReadLine ());  		}  		//opdeling af list da soap clienten bare ikke vil tage imod en array.  		string first' second' thrid' fourth' fifth' sixth' seventh' eigth;  		first = parts [0];  		second = parts [1];  		thrid = parts [2];  		fourth = parts [3];  		fifth = parts [4];  		sixth = parts [5];  		seventh = parts [6];  		eigth = parts [7];  		localhost.WebService1 s = new WebService1 ();  		WebReference1.WebService1 s2 = new WebReference1.WebService1 ();  		WebReference.WebService1 s3 = new WebReference.WebService1 ();  		GamerService.WebService1 s4 = new GamerService.WebService1 ();  		//sættelse af timeout tid så denne ikke timeouter efter 2 minutter.  		s4.Timeout = 1000000000;  		s3.Timeout = 1000000000;  		s2.Timeout = 100000000;  		s.Timeout = 1000000000;  		//List<Task> tasklist = new List<Task>();  		//string hej = null;  		//tasklist.Add(Task.Run(() =>  		//{  		//    Stopwatch stop2 = new Stopwatch();  		//    stop2.Start();  		//    hej = s.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  		//    stop2.Stop();  		//    Console.WriteLine(stop2.Elapsed);  		//    Console.WriteLine("service 1 done");  		//}));  		//string hej2 = null;  		//tasklist.Add(Task.Run(() =>  		//{  		//    Stopwatch stop3 = new Stopwatch();  		//    stop3.Start();  		//    hej2 = s2.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  		//    stop3.Stop();  		//    Console.WriteLine(stop3.Elapsed);  		//    Console.WriteLine("service 2 done");  		//}));  		//string hej3 = null;  		//tasklist.Add(Task.Run(() =>  		//{  		//    Stopwatch stop4 = new Stopwatch();  		//    stop4.Start();  		//    hej3 = s3.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  		//    stop4.Stop();  		//    Console.WriteLine(stop4.Elapsed);  		//    Console.WriteLine("service 3 done");  		//}));  		//foreach (var t in tasklist)  		//{  		//    t.Wait();  		//}  		//stop1.Stop();  		//Console.WriteLine(hej);  		//Console.WriteLine(hej2);  		//Console.WriteLine(hej3);  		string hej = s4.RunCrack (first);  		Console.WriteLine (hej);  		Console.WriteLine (stop1.Elapsed);  		Console.WriteLine ("done");  	}  }  
Magic Number,Client,Program,C:\repos\nage31_PasswordCrackerAssignment\Client\Program.cs,Main,The following statement contains a magic number: using (FileStream fs = new FileStream ("passwords.txt"' FileMode.Open' FileAccess.Read)) {  	using (StreamReader sr = new StreamReader (fs)) {  		List<string> parts = new List<string> ();  		while (!sr.EndOfStream) {  			parts.Add (sr.ReadLine ());  		}  		//opdeling af list da soap clienten bare ikke vil tage imod en array.  		string first' second' thrid' fourth' fifth' sixth' seventh' eigth;  		first = parts [0];  		second = parts [1];  		thrid = parts [2];  		fourth = parts [3];  		fifth = parts [4];  		sixth = parts [5];  		seventh = parts [6];  		eigth = parts [7];  		localhost.WebService1 s = new WebService1 ();  		WebReference1.WebService1 s2 = new WebReference1.WebService1 ();  		WebReference.WebService1 s3 = new WebReference.WebService1 ();  		GamerService.WebService1 s4 = new GamerService.WebService1 ();  		//sættelse af timeout tid så denne ikke timeouter efter 2 minutter.  		s4.Timeout = 1000000000;  		s3.Timeout = 1000000000;  		s2.Timeout = 100000000;  		s.Timeout = 1000000000;  		//List<Task> tasklist = new List<Task>();  		//string hej = null;  		//tasklist.Add(Task.Run(() =>  		//{  		//    Stopwatch stop2 = new Stopwatch();  		//    stop2.Start();  		//    hej = s.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  		//    stop2.Stop();  		//    Console.WriteLine(stop2.Elapsed);  		//    Console.WriteLine("service 1 done");  		//}));  		//string hej2 = null;  		//tasklist.Add(Task.Run(() =>  		//{  		//    Stopwatch stop3 = new Stopwatch();  		//    stop3.Start();  		//    hej2 = s2.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  		//    stop3.Stop();  		//    Console.WriteLine(stop3.Elapsed);  		//    Console.WriteLine("service 2 done");  		//}));  		//string hej3 = null;  		//tasklist.Add(Task.Run(() =>  		//{  		//    Stopwatch stop4 = new Stopwatch();  		//    stop4.Start();  		//    hej3 = s3.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  		//    stop4.Stop();  		//    Console.WriteLine(stop4.Elapsed);  		//    Console.WriteLine("service 3 done");  		//}));  		//foreach (var t in tasklist)  		//{  		//    t.Wait();  		//}  		//stop1.Stop();  		//Console.WriteLine(hej);  		//Console.WriteLine(hej2);  		//Console.WriteLine(hej3);  		string hej = s4.RunCrack (first);  		Console.WriteLine (hej);  		Console.WriteLine (stop1.Elapsed);  		Console.WriteLine ("done");  	}  }  
Magic Number,Client,Program,C:\repos\nage31_PasswordCrackerAssignment\Client\Program.cs,Main,The following statement contains a magic number: using (FileStream fs = new FileStream ("passwords.txt"' FileMode.Open' FileAccess.Read)) {  	using (StreamReader sr = new StreamReader (fs)) {  		List<string> parts = new List<string> ();  		while (!sr.EndOfStream) {  			parts.Add (sr.ReadLine ());  		}  		//opdeling af list da soap clienten bare ikke vil tage imod en array.  		string first' second' thrid' fourth' fifth' sixth' seventh' eigth;  		first = parts [0];  		second = parts [1];  		thrid = parts [2];  		fourth = parts [3];  		fifth = parts [4];  		sixth = parts [5];  		seventh = parts [6];  		eigth = parts [7];  		localhost.WebService1 s = new WebService1 ();  		WebReference1.WebService1 s2 = new WebReference1.WebService1 ();  		WebReference.WebService1 s3 = new WebReference.WebService1 ();  		GamerService.WebService1 s4 = new GamerService.WebService1 ();  		//sættelse af timeout tid så denne ikke timeouter efter 2 minutter.  		s4.Timeout = 1000000000;  		s3.Timeout = 1000000000;  		s2.Timeout = 100000000;  		s.Timeout = 1000000000;  		//List<Task> tasklist = new List<Task>();  		//string hej = null;  		//tasklist.Add(Task.Run(() =>  		//{  		//    Stopwatch stop2 = new Stopwatch();  		//    stop2.Start();  		//    hej = s.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  		//    stop2.Stop();  		//    Console.WriteLine(stop2.Elapsed);  		//    Console.WriteLine("service 1 done");  		//}));  		//string hej2 = null;  		//tasklist.Add(Task.Run(() =>  		//{  		//    Stopwatch stop3 = new Stopwatch();  		//    stop3.Start();  		//    hej2 = s2.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  		//    stop3.Stop();  		//    Console.WriteLine(stop3.Elapsed);  		//    Console.WriteLine("service 2 done");  		//}));  		//string hej3 = null;  		//tasklist.Add(Task.Run(() =>  		//{  		//    Stopwatch stop4 = new Stopwatch();  		//    stop4.Start();  		//    hej3 = s3.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  		//    stop4.Stop();  		//    Console.WriteLine(stop4.Elapsed);  		//    Console.WriteLine("service 3 done");  		//}));  		//foreach (var t in tasklist)  		//{  		//    t.Wait();  		//}  		//stop1.Stop();  		//Console.WriteLine(hej);  		//Console.WriteLine(hej2);  		//Console.WriteLine(hej3);  		string hej = s4.RunCrack (first);  		Console.WriteLine (hej);  		Console.WriteLine (stop1.Elapsed);  		Console.WriteLine ("done");  	}  }  
Magic Number,Client,Program,C:\repos\nage31_PasswordCrackerAssignment\Client\Program.cs,Main,The following statement contains a magic number: using (FileStream fs = new FileStream ("passwords.txt"' FileMode.Open' FileAccess.Read)) {  	using (StreamReader sr = new StreamReader (fs)) {  		List<string> parts = new List<string> ();  		while (!sr.EndOfStream) {  			parts.Add (sr.ReadLine ());  		}  		//opdeling af list da soap clienten bare ikke vil tage imod en array.  		string first' second' thrid' fourth' fifth' sixth' seventh' eigth;  		first = parts [0];  		second = parts [1];  		thrid = parts [2];  		fourth = parts [3];  		fifth = parts [4];  		sixth = parts [5];  		seventh = parts [6];  		eigth = parts [7];  		localhost.WebService1 s = new WebService1 ();  		WebReference1.WebService1 s2 = new WebReference1.WebService1 ();  		WebReference.WebService1 s3 = new WebReference.WebService1 ();  		GamerService.WebService1 s4 = new GamerService.WebService1 ();  		//sættelse af timeout tid så denne ikke timeouter efter 2 minutter.  		s4.Timeout = 1000000000;  		s3.Timeout = 1000000000;  		s2.Timeout = 100000000;  		s.Timeout = 1000000000;  		//List<Task> tasklist = new List<Task>();  		//string hej = null;  		//tasklist.Add(Task.Run(() =>  		//{  		//    Stopwatch stop2 = new Stopwatch();  		//    stop2.Start();  		//    hej = s.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  		//    stop2.Stop();  		//    Console.WriteLine(stop2.Elapsed);  		//    Console.WriteLine("service 1 done");  		//}));  		//string hej2 = null;  		//tasklist.Add(Task.Run(() =>  		//{  		//    Stopwatch stop3 = new Stopwatch();  		//    stop3.Start();  		//    hej2 = s2.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  		//    stop3.Stop();  		//    Console.WriteLine(stop3.Elapsed);  		//    Console.WriteLine("service 2 done");  		//}));  		//string hej3 = null;  		//tasklist.Add(Task.Run(() =>  		//{  		//    Stopwatch stop4 = new Stopwatch();  		//    stop4.Start();  		//    hej3 = s3.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  		//    stop4.Stop();  		//    Console.WriteLine(stop4.Elapsed);  		//    Console.WriteLine("service 3 done");  		//}));  		//foreach (var t in tasklist)  		//{  		//    t.Wait();  		//}  		//stop1.Stop();  		//Console.WriteLine(hej);  		//Console.WriteLine(hej2);  		//Console.WriteLine(hej3);  		string hej = s4.RunCrack (first);  		Console.WriteLine (hej);  		Console.WriteLine (stop1.Elapsed);  		Console.WriteLine ("done");  	}  }  
Magic Number,Client,Program,C:\repos\nage31_PasswordCrackerAssignment\Client\Program.cs,Main,The following statement contains a magic number: using (FileStream fs = new FileStream ("passwords.txt"' FileMode.Open' FileAccess.Read)) {  	using (StreamReader sr = new StreamReader (fs)) {  		List<string> parts = new List<string> ();  		while (!sr.EndOfStream) {  			parts.Add (sr.ReadLine ());  		}  		//opdeling af list da soap clienten bare ikke vil tage imod en array.  		string first' second' thrid' fourth' fifth' sixth' seventh' eigth;  		first = parts [0];  		second = parts [1];  		thrid = parts [2];  		fourth = parts [3];  		fifth = parts [4];  		sixth = parts [5];  		seventh = parts [6];  		eigth = parts [7];  		localhost.WebService1 s = new WebService1 ();  		WebReference1.WebService1 s2 = new WebReference1.WebService1 ();  		WebReference.WebService1 s3 = new WebReference.WebService1 ();  		GamerService.WebService1 s4 = new GamerService.WebService1 ();  		//sættelse af timeout tid så denne ikke timeouter efter 2 minutter.  		s4.Timeout = 1000000000;  		s3.Timeout = 1000000000;  		s2.Timeout = 100000000;  		s.Timeout = 1000000000;  		//List<Task> tasklist = new List<Task>();  		//string hej = null;  		//tasklist.Add(Task.Run(() =>  		//{  		//    Stopwatch stop2 = new Stopwatch();  		//    stop2.Start();  		//    hej = s.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  		//    stop2.Stop();  		//    Console.WriteLine(stop2.Elapsed);  		//    Console.WriteLine("service 1 done");  		//}));  		//string hej2 = null;  		//tasklist.Add(Task.Run(() =>  		//{  		//    Stopwatch stop3 = new Stopwatch();  		//    stop3.Start();  		//    hej2 = s2.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  		//    stop3.Stop();  		//    Console.WriteLine(stop3.Elapsed);  		//    Console.WriteLine("service 2 done");  		//}));  		//string hej3 = null;  		//tasklist.Add(Task.Run(() =>  		//{  		//    Stopwatch stop4 = new Stopwatch();  		//    stop4.Start();  		//    hej3 = s3.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  		//    stop4.Stop();  		//    Console.WriteLine(stop4.Elapsed);  		//    Console.WriteLine("service 3 done");  		//}));  		//foreach (var t in tasklist)  		//{  		//    t.Wait();  		//}  		//stop1.Stop();  		//Console.WriteLine(hej);  		//Console.WriteLine(hej2);  		//Console.WriteLine(hej3);  		string hej = s4.RunCrack (first);  		Console.WriteLine (hej);  		Console.WriteLine (stop1.Elapsed);  		Console.WriteLine ("done");  	}  }  
Magic Number,Client,Program,C:\repos\nage31_PasswordCrackerAssignment\Client\Program.cs,Main,The following statement contains a magic number: using (FileStream fs = new FileStream ("passwords.txt"' FileMode.Open' FileAccess.Read)) {  	using (StreamReader sr = new StreamReader (fs)) {  		List<string> parts = new List<string> ();  		while (!sr.EndOfStream) {  			parts.Add (sr.ReadLine ());  		}  		//opdeling af list da soap clienten bare ikke vil tage imod en array.  		string first' second' thrid' fourth' fifth' sixth' seventh' eigth;  		first = parts [0];  		second = parts [1];  		thrid = parts [2];  		fourth = parts [3];  		fifth = parts [4];  		sixth = parts [5];  		seventh = parts [6];  		eigth = parts [7];  		localhost.WebService1 s = new WebService1 ();  		WebReference1.WebService1 s2 = new WebReference1.WebService1 ();  		WebReference.WebService1 s3 = new WebReference.WebService1 ();  		GamerService.WebService1 s4 = new GamerService.WebService1 ();  		//sættelse af timeout tid så denne ikke timeouter efter 2 minutter.  		s4.Timeout = 1000000000;  		s3.Timeout = 1000000000;  		s2.Timeout = 100000000;  		s.Timeout = 1000000000;  		//List<Task> tasklist = new List<Task>();  		//string hej = null;  		//tasklist.Add(Task.Run(() =>  		//{  		//    Stopwatch stop2 = new Stopwatch();  		//    stop2.Start();  		//    hej = s.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  		//    stop2.Stop();  		//    Console.WriteLine(stop2.Elapsed);  		//    Console.WriteLine("service 1 done");  		//}));  		//string hej2 = null;  		//tasklist.Add(Task.Run(() =>  		//{  		//    Stopwatch stop3 = new Stopwatch();  		//    stop3.Start();  		//    hej2 = s2.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  		//    stop3.Stop();  		//    Console.WriteLine(stop3.Elapsed);  		//    Console.WriteLine("service 2 done");  		//}));  		//string hej3 = null;  		//tasklist.Add(Task.Run(() =>  		//{  		//    Stopwatch stop4 = new Stopwatch();  		//    stop4.Start();  		//    hej3 = s3.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  		//    stop4.Stop();  		//    Console.WriteLine(stop4.Elapsed);  		//    Console.WriteLine("service 3 done");  		//}));  		//foreach (var t in tasklist)  		//{  		//    t.Wait();  		//}  		//stop1.Stop();  		//Console.WriteLine(hej);  		//Console.WriteLine(hej2);  		//Console.WriteLine(hej3);  		string hej = s4.RunCrack (first);  		Console.WriteLine (hej);  		Console.WriteLine (stop1.Elapsed);  		Console.WriteLine ("done");  	}  }  
Magic Number,Client,Program,C:\repos\nage31_PasswordCrackerAssignment\Client\Program.cs,Main,The following statement contains a magic number: using (FileStream fs = new FileStream ("passwords.txt"' FileMode.Open' FileAccess.Read)) {  	using (StreamReader sr = new StreamReader (fs)) {  		List<string> parts = new List<string> ();  		while (!sr.EndOfStream) {  			parts.Add (sr.ReadLine ());  		}  		//opdeling af list da soap clienten bare ikke vil tage imod en array.  		string first' second' thrid' fourth' fifth' sixth' seventh' eigth;  		first = parts [0];  		second = parts [1];  		thrid = parts [2];  		fourth = parts [3];  		fifth = parts [4];  		sixth = parts [5];  		seventh = parts [6];  		eigth = parts [7];  		localhost.WebService1 s = new WebService1 ();  		WebReference1.WebService1 s2 = new WebReference1.WebService1 ();  		WebReference.WebService1 s3 = new WebReference.WebService1 ();  		GamerService.WebService1 s4 = new GamerService.WebService1 ();  		//sættelse af timeout tid så denne ikke timeouter efter 2 minutter.  		s4.Timeout = 1000000000;  		s3.Timeout = 1000000000;  		s2.Timeout = 100000000;  		s.Timeout = 1000000000;  		//List<Task> tasklist = new List<Task>();  		//string hej = null;  		//tasklist.Add(Task.Run(() =>  		//{  		//    Stopwatch stop2 = new Stopwatch();  		//    stop2.Start();  		//    hej = s.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  		//    stop2.Stop();  		//    Console.WriteLine(stop2.Elapsed);  		//    Console.WriteLine("service 1 done");  		//}));  		//string hej2 = null;  		//tasklist.Add(Task.Run(() =>  		//{  		//    Stopwatch stop3 = new Stopwatch();  		//    stop3.Start();  		//    hej2 = s2.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  		//    stop3.Stop();  		//    Console.WriteLine(stop3.Elapsed);  		//    Console.WriteLine("service 2 done");  		//}));  		//string hej3 = null;  		//tasklist.Add(Task.Run(() =>  		//{  		//    Stopwatch stop4 = new Stopwatch();  		//    stop4.Start();  		//    hej3 = s3.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  		//    stop4.Stop();  		//    Console.WriteLine(stop4.Elapsed);  		//    Console.WriteLine("service 3 done");  		//}));  		//foreach (var t in tasklist)  		//{  		//    t.Wait();  		//}  		//stop1.Stop();  		//Console.WriteLine(hej);  		//Console.WriteLine(hej2);  		//Console.WriteLine(hej3);  		string hej = s4.RunCrack (first);  		Console.WriteLine (hej);  		Console.WriteLine (stop1.Elapsed);  		Console.WriteLine ("done");  	}  }  
Magic Number,Client,Program,C:\repos\nage31_PasswordCrackerAssignment\Client\Program.cs,Main,The following statement contains a magic number: using (FileStream fs = new FileStream ("passwords.txt"' FileMode.Open' FileAccess.Read)) {  	using (StreamReader sr = new StreamReader (fs)) {  		List<string> parts = new List<string> ();  		while (!sr.EndOfStream) {  			parts.Add (sr.ReadLine ());  		}  		//opdeling af list da soap clienten bare ikke vil tage imod en array.  		string first' second' thrid' fourth' fifth' sixth' seventh' eigth;  		first = parts [0];  		second = parts [1];  		thrid = parts [2];  		fourth = parts [3];  		fifth = parts [4];  		sixth = parts [5];  		seventh = parts [6];  		eigth = parts [7];  		localhost.WebService1 s = new WebService1 ();  		WebReference1.WebService1 s2 = new WebReference1.WebService1 ();  		WebReference.WebService1 s3 = new WebReference.WebService1 ();  		GamerService.WebService1 s4 = new GamerService.WebService1 ();  		//sættelse af timeout tid så denne ikke timeouter efter 2 minutter.  		s4.Timeout = 1000000000;  		s3.Timeout = 1000000000;  		s2.Timeout = 100000000;  		s.Timeout = 1000000000;  		//List<Task> tasklist = new List<Task>();  		//string hej = null;  		//tasklist.Add(Task.Run(() =>  		//{  		//    Stopwatch stop2 = new Stopwatch();  		//    stop2.Start();  		//    hej = s.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  		//    stop2.Stop();  		//    Console.WriteLine(stop2.Elapsed);  		//    Console.WriteLine("service 1 done");  		//}));  		//string hej2 = null;  		//tasklist.Add(Task.Run(() =>  		//{  		//    Stopwatch stop3 = new Stopwatch();  		//    stop3.Start();  		//    hej2 = s2.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  		//    stop3.Stop();  		//    Console.WriteLine(stop3.Elapsed);  		//    Console.WriteLine("service 2 done");  		//}));  		//string hej3 = null;  		//tasklist.Add(Task.Run(() =>  		//{  		//    Stopwatch stop4 = new Stopwatch();  		//    stop4.Start();  		//    hej3 = s3.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  		//    stop4.Stop();  		//    Console.WriteLine(stop4.Elapsed);  		//    Console.WriteLine("service 3 done");  		//}));  		//foreach (var t in tasklist)  		//{  		//    t.Wait();  		//}  		//stop1.Stop();  		//Console.WriteLine(hej);  		//Console.WriteLine(hej2);  		//Console.WriteLine(hej3);  		string hej = s4.RunCrack (first);  		Console.WriteLine (hej);  		Console.WriteLine (stop1.Elapsed);  		Console.WriteLine ("done");  	}  }  
Magic Number,Client,Program,C:\repos\nage31_PasswordCrackerAssignment\Client\Program.cs,Main,The following statement contains a magic number: using (FileStream fs = new FileStream ("passwords.txt"' FileMode.Open' FileAccess.Read)) {  	using (StreamReader sr = new StreamReader (fs)) {  		List<string> parts = new List<string> ();  		while (!sr.EndOfStream) {  			parts.Add (sr.ReadLine ());  		}  		//opdeling af list da soap clienten bare ikke vil tage imod en array.  		string first' second' thrid' fourth' fifth' sixth' seventh' eigth;  		first = parts [0];  		second = parts [1];  		thrid = parts [2];  		fourth = parts [3];  		fifth = parts [4];  		sixth = parts [5];  		seventh = parts [6];  		eigth = parts [7];  		localhost.WebService1 s = new WebService1 ();  		WebReference1.WebService1 s2 = new WebReference1.WebService1 ();  		WebReference.WebService1 s3 = new WebReference.WebService1 ();  		GamerService.WebService1 s4 = new GamerService.WebService1 ();  		//sættelse af timeout tid så denne ikke timeouter efter 2 minutter.  		s4.Timeout = 1000000000;  		s3.Timeout = 1000000000;  		s2.Timeout = 100000000;  		s.Timeout = 1000000000;  		//List<Task> tasklist = new List<Task>();  		//string hej = null;  		//tasklist.Add(Task.Run(() =>  		//{  		//    Stopwatch stop2 = new Stopwatch();  		//    stop2.Start();  		//    hej = s.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  		//    stop2.Stop();  		//    Console.WriteLine(stop2.Elapsed);  		//    Console.WriteLine("service 1 done");  		//}));  		//string hej2 = null;  		//tasklist.Add(Task.Run(() =>  		//{  		//    Stopwatch stop3 = new Stopwatch();  		//    stop3.Start();  		//    hej2 = s2.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  		//    stop3.Stop();  		//    Console.WriteLine(stop3.Elapsed);  		//    Console.WriteLine("service 2 done");  		//}));  		//string hej3 = null;  		//tasklist.Add(Task.Run(() =>  		//{  		//    Stopwatch stop4 = new Stopwatch();  		//    stop4.Start();  		//    hej3 = s3.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  		//    stop4.Stop();  		//    Console.WriteLine(stop4.Elapsed);  		//    Console.WriteLine("service 3 done");  		//}));  		//foreach (var t in tasklist)  		//{  		//    t.Wait();  		//}  		//stop1.Stop();  		//Console.WriteLine(hej);  		//Console.WriteLine(hej2);  		//Console.WriteLine(hej3);  		string hej = s4.RunCrack (first);  		Console.WriteLine (hej);  		Console.WriteLine (stop1.Elapsed);  		Console.WriteLine ("done");  	}  }  
Magic Number,Client,Program,C:\repos\nage31_PasswordCrackerAssignment\Client\Program.cs,Main,The following statement contains a magic number: using (FileStream fs = new FileStream ("passwords.txt"' FileMode.Open' FileAccess.Read)) {  	using (StreamReader sr = new StreamReader (fs)) {  		List<string> parts = new List<string> ();  		while (!sr.EndOfStream) {  			parts.Add (sr.ReadLine ());  		}  		//opdeling af list da soap clienten bare ikke vil tage imod en array.  		string first' second' thrid' fourth' fifth' sixth' seventh' eigth;  		first = parts [0];  		second = parts [1];  		thrid = parts [2];  		fourth = parts [3];  		fifth = parts [4];  		sixth = parts [5];  		seventh = parts [6];  		eigth = parts [7];  		localhost.WebService1 s = new WebService1 ();  		WebReference1.WebService1 s2 = new WebReference1.WebService1 ();  		WebReference.WebService1 s3 = new WebReference.WebService1 ();  		GamerService.WebService1 s4 = new GamerService.WebService1 ();  		//sættelse af timeout tid så denne ikke timeouter efter 2 minutter.  		s4.Timeout = 1000000000;  		s3.Timeout = 1000000000;  		s2.Timeout = 100000000;  		s.Timeout = 1000000000;  		//List<Task> tasklist = new List<Task>();  		//string hej = null;  		//tasklist.Add(Task.Run(() =>  		//{  		//    Stopwatch stop2 = new Stopwatch();  		//    stop2.Start();  		//    hej = s.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  		//    stop2.Stop();  		//    Console.WriteLine(stop2.Elapsed);  		//    Console.WriteLine("service 1 done");  		//}));  		//string hej2 = null;  		//tasklist.Add(Task.Run(() =>  		//{  		//    Stopwatch stop3 = new Stopwatch();  		//    stop3.Start();  		//    hej2 = s2.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  		//    stop3.Stop();  		//    Console.WriteLine(stop3.Elapsed);  		//    Console.WriteLine("service 2 done");  		//}));  		//string hej3 = null;  		//tasklist.Add(Task.Run(() =>  		//{  		//    Stopwatch stop4 = new Stopwatch();  		//    stop4.Start();  		//    hej3 = s3.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  		//    stop4.Stop();  		//    Console.WriteLine(stop4.Elapsed);  		//    Console.WriteLine("service 3 done");  		//}));  		//foreach (var t in tasklist)  		//{  		//    t.Wait();  		//}  		//stop1.Stop();  		//Console.WriteLine(hej);  		//Console.WriteLine(hej2);  		//Console.WriteLine(hej3);  		string hej = s4.RunCrack (first);  		Console.WriteLine (hej);  		Console.WriteLine (stop1.Elapsed);  		Console.WriteLine ("done");  	}  }  
Magic Number,Client,Program,C:\repos\nage31_PasswordCrackerAssignment\Client\Program.cs,Main,The following statement contains a magic number: using (StreamReader sr = new StreamReader (fs)) {  	List<string> parts = new List<string> ();  	while (!sr.EndOfStream) {  		parts.Add (sr.ReadLine ());  	}  	//opdeling af list da soap clienten bare ikke vil tage imod en array.  	string first' second' thrid' fourth' fifth' sixth' seventh' eigth;  	first = parts [0];  	second = parts [1];  	thrid = parts [2];  	fourth = parts [3];  	fifth = parts [4];  	sixth = parts [5];  	seventh = parts [6];  	eigth = parts [7];  	localhost.WebService1 s = new WebService1 ();  	WebReference1.WebService1 s2 = new WebReference1.WebService1 ();  	WebReference.WebService1 s3 = new WebReference.WebService1 ();  	GamerService.WebService1 s4 = new GamerService.WebService1 ();  	//sættelse af timeout tid så denne ikke timeouter efter 2 minutter.  	s4.Timeout = 1000000000;  	s3.Timeout = 1000000000;  	s2.Timeout = 100000000;  	s.Timeout = 1000000000;  	//List<Task> tasklist = new List<Task>();  	//string hej = null;  	//tasklist.Add(Task.Run(() =>  	//{  	//    Stopwatch stop2 = new Stopwatch();  	//    stop2.Start();  	//    hej = s.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  	//    stop2.Stop();  	//    Console.WriteLine(stop2.Elapsed);  	//    Console.WriteLine("service 1 done");  	//}));  	//string hej2 = null;  	//tasklist.Add(Task.Run(() =>  	//{  	//    Stopwatch stop3 = new Stopwatch();  	//    stop3.Start();  	//    hej2 = s2.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  	//    stop3.Stop();  	//    Console.WriteLine(stop3.Elapsed);  	//    Console.WriteLine("service 2 done");  	//}));  	//string hej3 = null;  	//tasklist.Add(Task.Run(() =>  	//{  	//    Stopwatch stop4 = new Stopwatch();  	//    stop4.Start();  	//    hej3 = s3.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  	//    stop4.Stop();  	//    Console.WriteLine(stop4.Elapsed);  	//    Console.WriteLine("service 3 done");  	//}));  	//foreach (var t in tasklist)  	//{  	//    t.Wait();  	//}  	//stop1.Stop();  	//Console.WriteLine(hej);  	//Console.WriteLine(hej2);  	//Console.WriteLine(hej3);  	string hej = s4.RunCrack (first);  	Console.WriteLine (hej);  	Console.WriteLine (stop1.Elapsed);  	Console.WriteLine ("done");  }  
Magic Number,Client,Program,C:\repos\nage31_PasswordCrackerAssignment\Client\Program.cs,Main,The following statement contains a magic number: using (StreamReader sr = new StreamReader (fs)) {  	List<string> parts = new List<string> ();  	while (!sr.EndOfStream) {  		parts.Add (sr.ReadLine ());  	}  	//opdeling af list da soap clienten bare ikke vil tage imod en array.  	string first' second' thrid' fourth' fifth' sixth' seventh' eigth;  	first = parts [0];  	second = parts [1];  	thrid = parts [2];  	fourth = parts [3];  	fifth = parts [4];  	sixth = parts [5];  	seventh = parts [6];  	eigth = parts [7];  	localhost.WebService1 s = new WebService1 ();  	WebReference1.WebService1 s2 = new WebReference1.WebService1 ();  	WebReference.WebService1 s3 = new WebReference.WebService1 ();  	GamerService.WebService1 s4 = new GamerService.WebService1 ();  	//sættelse af timeout tid så denne ikke timeouter efter 2 minutter.  	s4.Timeout = 1000000000;  	s3.Timeout = 1000000000;  	s2.Timeout = 100000000;  	s.Timeout = 1000000000;  	//List<Task> tasklist = new List<Task>();  	//string hej = null;  	//tasklist.Add(Task.Run(() =>  	//{  	//    Stopwatch stop2 = new Stopwatch();  	//    stop2.Start();  	//    hej = s.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  	//    stop2.Stop();  	//    Console.WriteLine(stop2.Elapsed);  	//    Console.WriteLine("service 1 done");  	//}));  	//string hej2 = null;  	//tasklist.Add(Task.Run(() =>  	//{  	//    Stopwatch stop3 = new Stopwatch();  	//    stop3.Start();  	//    hej2 = s2.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  	//    stop3.Stop();  	//    Console.WriteLine(stop3.Elapsed);  	//    Console.WriteLine("service 2 done");  	//}));  	//string hej3 = null;  	//tasklist.Add(Task.Run(() =>  	//{  	//    Stopwatch stop4 = new Stopwatch();  	//    stop4.Start();  	//    hej3 = s3.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  	//    stop4.Stop();  	//    Console.WriteLine(stop4.Elapsed);  	//    Console.WriteLine("service 3 done");  	//}));  	//foreach (var t in tasklist)  	//{  	//    t.Wait();  	//}  	//stop1.Stop();  	//Console.WriteLine(hej);  	//Console.WriteLine(hej2);  	//Console.WriteLine(hej3);  	string hej = s4.RunCrack (first);  	Console.WriteLine (hej);  	Console.WriteLine (stop1.Elapsed);  	Console.WriteLine ("done");  }  
Magic Number,Client,Program,C:\repos\nage31_PasswordCrackerAssignment\Client\Program.cs,Main,The following statement contains a magic number: using (StreamReader sr = new StreamReader (fs)) {  	List<string> parts = new List<string> ();  	while (!sr.EndOfStream) {  		parts.Add (sr.ReadLine ());  	}  	//opdeling af list da soap clienten bare ikke vil tage imod en array.  	string first' second' thrid' fourth' fifth' sixth' seventh' eigth;  	first = parts [0];  	second = parts [1];  	thrid = parts [2];  	fourth = parts [3];  	fifth = parts [4];  	sixth = parts [5];  	seventh = parts [6];  	eigth = parts [7];  	localhost.WebService1 s = new WebService1 ();  	WebReference1.WebService1 s2 = new WebReference1.WebService1 ();  	WebReference.WebService1 s3 = new WebReference.WebService1 ();  	GamerService.WebService1 s4 = new GamerService.WebService1 ();  	//sættelse af timeout tid så denne ikke timeouter efter 2 minutter.  	s4.Timeout = 1000000000;  	s3.Timeout = 1000000000;  	s2.Timeout = 100000000;  	s.Timeout = 1000000000;  	//List<Task> tasklist = new List<Task>();  	//string hej = null;  	//tasklist.Add(Task.Run(() =>  	//{  	//    Stopwatch stop2 = new Stopwatch();  	//    stop2.Start();  	//    hej = s.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  	//    stop2.Stop();  	//    Console.WriteLine(stop2.Elapsed);  	//    Console.WriteLine("service 1 done");  	//}));  	//string hej2 = null;  	//tasklist.Add(Task.Run(() =>  	//{  	//    Stopwatch stop3 = new Stopwatch();  	//    stop3.Start();  	//    hej2 = s2.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  	//    stop3.Stop();  	//    Console.WriteLine(stop3.Elapsed);  	//    Console.WriteLine("service 2 done");  	//}));  	//string hej3 = null;  	//tasklist.Add(Task.Run(() =>  	//{  	//    Stopwatch stop4 = new Stopwatch();  	//    stop4.Start();  	//    hej3 = s3.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  	//    stop4.Stop();  	//    Console.WriteLine(stop4.Elapsed);  	//    Console.WriteLine("service 3 done");  	//}));  	//foreach (var t in tasklist)  	//{  	//    t.Wait();  	//}  	//stop1.Stop();  	//Console.WriteLine(hej);  	//Console.WriteLine(hej2);  	//Console.WriteLine(hej3);  	string hej = s4.RunCrack (first);  	Console.WriteLine (hej);  	Console.WriteLine (stop1.Elapsed);  	Console.WriteLine ("done");  }  
Magic Number,Client,Program,C:\repos\nage31_PasswordCrackerAssignment\Client\Program.cs,Main,The following statement contains a magic number: using (StreamReader sr = new StreamReader (fs)) {  	List<string> parts = new List<string> ();  	while (!sr.EndOfStream) {  		parts.Add (sr.ReadLine ());  	}  	//opdeling af list da soap clienten bare ikke vil tage imod en array.  	string first' second' thrid' fourth' fifth' sixth' seventh' eigth;  	first = parts [0];  	second = parts [1];  	thrid = parts [2];  	fourth = parts [3];  	fifth = parts [4];  	sixth = parts [5];  	seventh = parts [6];  	eigth = parts [7];  	localhost.WebService1 s = new WebService1 ();  	WebReference1.WebService1 s2 = new WebReference1.WebService1 ();  	WebReference.WebService1 s3 = new WebReference.WebService1 ();  	GamerService.WebService1 s4 = new GamerService.WebService1 ();  	//sættelse af timeout tid så denne ikke timeouter efter 2 minutter.  	s4.Timeout = 1000000000;  	s3.Timeout = 1000000000;  	s2.Timeout = 100000000;  	s.Timeout = 1000000000;  	//List<Task> tasklist = new List<Task>();  	//string hej = null;  	//tasklist.Add(Task.Run(() =>  	//{  	//    Stopwatch stop2 = new Stopwatch();  	//    stop2.Start();  	//    hej = s.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  	//    stop2.Stop();  	//    Console.WriteLine(stop2.Elapsed);  	//    Console.WriteLine("service 1 done");  	//}));  	//string hej2 = null;  	//tasklist.Add(Task.Run(() =>  	//{  	//    Stopwatch stop3 = new Stopwatch();  	//    stop3.Start();  	//    hej2 = s2.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  	//    stop3.Stop();  	//    Console.WriteLine(stop3.Elapsed);  	//    Console.WriteLine("service 2 done");  	//}));  	//string hej3 = null;  	//tasklist.Add(Task.Run(() =>  	//{  	//    Stopwatch stop4 = new Stopwatch();  	//    stop4.Start();  	//    hej3 = s3.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  	//    stop4.Stop();  	//    Console.WriteLine(stop4.Elapsed);  	//    Console.WriteLine("service 3 done");  	//}));  	//foreach (var t in tasklist)  	//{  	//    t.Wait();  	//}  	//stop1.Stop();  	//Console.WriteLine(hej);  	//Console.WriteLine(hej2);  	//Console.WriteLine(hej3);  	string hej = s4.RunCrack (first);  	Console.WriteLine (hej);  	Console.WriteLine (stop1.Elapsed);  	Console.WriteLine ("done");  }  
Magic Number,Client,Program,C:\repos\nage31_PasswordCrackerAssignment\Client\Program.cs,Main,The following statement contains a magic number: using (StreamReader sr = new StreamReader (fs)) {  	List<string> parts = new List<string> ();  	while (!sr.EndOfStream) {  		parts.Add (sr.ReadLine ());  	}  	//opdeling af list da soap clienten bare ikke vil tage imod en array.  	string first' second' thrid' fourth' fifth' sixth' seventh' eigth;  	first = parts [0];  	second = parts [1];  	thrid = parts [2];  	fourth = parts [3];  	fifth = parts [4];  	sixth = parts [5];  	seventh = parts [6];  	eigth = parts [7];  	localhost.WebService1 s = new WebService1 ();  	WebReference1.WebService1 s2 = new WebReference1.WebService1 ();  	WebReference.WebService1 s3 = new WebReference.WebService1 ();  	GamerService.WebService1 s4 = new GamerService.WebService1 ();  	//sættelse af timeout tid så denne ikke timeouter efter 2 minutter.  	s4.Timeout = 1000000000;  	s3.Timeout = 1000000000;  	s2.Timeout = 100000000;  	s.Timeout = 1000000000;  	//List<Task> tasklist = new List<Task>();  	//string hej = null;  	//tasklist.Add(Task.Run(() =>  	//{  	//    Stopwatch stop2 = new Stopwatch();  	//    stop2.Start();  	//    hej = s.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  	//    stop2.Stop();  	//    Console.WriteLine(stop2.Elapsed);  	//    Console.WriteLine("service 1 done");  	//}));  	//string hej2 = null;  	//tasklist.Add(Task.Run(() =>  	//{  	//    Stopwatch stop3 = new Stopwatch();  	//    stop3.Start();  	//    hej2 = s2.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  	//    stop3.Stop();  	//    Console.WriteLine(stop3.Elapsed);  	//    Console.WriteLine("service 2 done");  	//}));  	//string hej3 = null;  	//tasklist.Add(Task.Run(() =>  	//{  	//    Stopwatch stop4 = new Stopwatch();  	//    stop4.Start();  	//    hej3 = s3.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  	//    stop4.Stop();  	//    Console.WriteLine(stop4.Elapsed);  	//    Console.WriteLine("service 3 done");  	//}));  	//foreach (var t in tasklist)  	//{  	//    t.Wait();  	//}  	//stop1.Stop();  	//Console.WriteLine(hej);  	//Console.WriteLine(hej2);  	//Console.WriteLine(hej3);  	string hej = s4.RunCrack (first);  	Console.WriteLine (hej);  	Console.WriteLine (stop1.Elapsed);  	Console.WriteLine ("done");  }  
Magic Number,Client,Program,C:\repos\nage31_PasswordCrackerAssignment\Client\Program.cs,Main,The following statement contains a magic number: using (StreamReader sr = new StreamReader (fs)) {  	List<string> parts = new List<string> ();  	while (!sr.EndOfStream) {  		parts.Add (sr.ReadLine ());  	}  	//opdeling af list da soap clienten bare ikke vil tage imod en array.  	string first' second' thrid' fourth' fifth' sixth' seventh' eigth;  	first = parts [0];  	second = parts [1];  	thrid = parts [2];  	fourth = parts [3];  	fifth = parts [4];  	sixth = parts [5];  	seventh = parts [6];  	eigth = parts [7];  	localhost.WebService1 s = new WebService1 ();  	WebReference1.WebService1 s2 = new WebReference1.WebService1 ();  	WebReference.WebService1 s3 = new WebReference.WebService1 ();  	GamerService.WebService1 s4 = new GamerService.WebService1 ();  	//sættelse af timeout tid så denne ikke timeouter efter 2 minutter.  	s4.Timeout = 1000000000;  	s3.Timeout = 1000000000;  	s2.Timeout = 100000000;  	s.Timeout = 1000000000;  	//List<Task> tasklist = new List<Task>();  	//string hej = null;  	//tasklist.Add(Task.Run(() =>  	//{  	//    Stopwatch stop2 = new Stopwatch();  	//    stop2.Start();  	//    hej = s.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  	//    stop2.Stop();  	//    Console.WriteLine(stop2.Elapsed);  	//    Console.WriteLine("service 1 done");  	//}));  	//string hej2 = null;  	//tasklist.Add(Task.Run(() =>  	//{  	//    Stopwatch stop3 = new Stopwatch();  	//    stop3.Start();  	//    hej2 = s2.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  	//    stop3.Stop();  	//    Console.WriteLine(stop3.Elapsed);  	//    Console.WriteLine("service 2 done");  	//}));  	//string hej3 = null;  	//tasklist.Add(Task.Run(() =>  	//{  	//    Stopwatch stop4 = new Stopwatch();  	//    stop4.Start();  	//    hej3 = s3.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  	//    stop4.Stop();  	//    Console.WriteLine(stop4.Elapsed);  	//    Console.WriteLine("service 3 done");  	//}));  	//foreach (var t in tasklist)  	//{  	//    t.Wait();  	//}  	//stop1.Stop();  	//Console.WriteLine(hej);  	//Console.WriteLine(hej2);  	//Console.WriteLine(hej3);  	string hej = s4.RunCrack (first);  	Console.WriteLine (hej);  	Console.WriteLine (stop1.Elapsed);  	Console.WriteLine ("done");  }  
Magic Number,Client,Program,C:\repos\nage31_PasswordCrackerAssignment\Client\Program.cs,Main,The following statement contains a magic number: using (StreamReader sr = new StreamReader (fs)) {  	List<string> parts = new List<string> ();  	while (!sr.EndOfStream) {  		parts.Add (sr.ReadLine ());  	}  	//opdeling af list da soap clienten bare ikke vil tage imod en array.  	string first' second' thrid' fourth' fifth' sixth' seventh' eigth;  	first = parts [0];  	second = parts [1];  	thrid = parts [2];  	fourth = parts [3];  	fifth = parts [4];  	sixth = parts [5];  	seventh = parts [6];  	eigth = parts [7];  	localhost.WebService1 s = new WebService1 ();  	WebReference1.WebService1 s2 = new WebReference1.WebService1 ();  	WebReference.WebService1 s3 = new WebReference.WebService1 ();  	GamerService.WebService1 s4 = new GamerService.WebService1 ();  	//sættelse af timeout tid så denne ikke timeouter efter 2 minutter.  	s4.Timeout = 1000000000;  	s3.Timeout = 1000000000;  	s2.Timeout = 100000000;  	s.Timeout = 1000000000;  	//List<Task> tasklist = new List<Task>();  	//string hej = null;  	//tasklist.Add(Task.Run(() =>  	//{  	//    Stopwatch stop2 = new Stopwatch();  	//    stop2.Start();  	//    hej = s.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  	//    stop2.Stop();  	//    Console.WriteLine(stop2.Elapsed);  	//    Console.WriteLine("service 1 done");  	//}));  	//string hej2 = null;  	//tasklist.Add(Task.Run(() =>  	//{  	//    Stopwatch stop3 = new Stopwatch();  	//    stop3.Start();  	//    hej2 = s2.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  	//    stop3.Stop();  	//    Console.WriteLine(stop3.Elapsed);  	//    Console.WriteLine("service 2 done");  	//}));  	//string hej3 = null;  	//tasklist.Add(Task.Run(() =>  	//{  	//    Stopwatch stop4 = new Stopwatch();  	//    stop4.Start();  	//    hej3 = s3.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  	//    stop4.Stop();  	//    Console.WriteLine(stop4.Elapsed);  	//    Console.WriteLine("service 3 done");  	//}));  	//foreach (var t in tasklist)  	//{  	//    t.Wait();  	//}  	//stop1.Stop();  	//Console.WriteLine(hej);  	//Console.WriteLine(hej2);  	//Console.WriteLine(hej3);  	string hej = s4.RunCrack (first);  	Console.WriteLine (hej);  	Console.WriteLine (stop1.Elapsed);  	Console.WriteLine ("done");  }  
Magic Number,Client,Program,C:\repos\nage31_PasswordCrackerAssignment\Client\Program.cs,Main,The following statement contains a magic number: using (StreamReader sr = new StreamReader (fs)) {  	List<string> parts = new List<string> ();  	while (!sr.EndOfStream) {  		parts.Add (sr.ReadLine ());  	}  	//opdeling af list da soap clienten bare ikke vil tage imod en array.  	string first' second' thrid' fourth' fifth' sixth' seventh' eigth;  	first = parts [0];  	second = parts [1];  	thrid = parts [2];  	fourth = parts [3];  	fifth = parts [4];  	sixth = parts [5];  	seventh = parts [6];  	eigth = parts [7];  	localhost.WebService1 s = new WebService1 ();  	WebReference1.WebService1 s2 = new WebReference1.WebService1 ();  	WebReference.WebService1 s3 = new WebReference.WebService1 ();  	GamerService.WebService1 s4 = new GamerService.WebService1 ();  	//sættelse af timeout tid så denne ikke timeouter efter 2 minutter.  	s4.Timeout = 1000000000;  	s3.Timeout = 1000000000;  	s2.Timeout = 100000000;  	s.Timeout = 1000000000;  	//List<Task> tasklist = new List<Task>();  	//string hej = null;  	//tasklist.Add(Task.Run(() =>  	//{  	//    Stopwatch stop2 = new Stopwatch();  	//    stop2.Start();  	//    hej = s.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  	//    stop2.Stop();  	//    Console.WriteLine(stop2.Elapsed);  	//    Console.WriteLine("service 1 done");  	//}));  	//string hej2 = null;  	//tasklist.Add(Task.Run(() =>  	//{  	//    Stopwatch stop3 = new Stopwatch();  	//    stop3.Start();  	//    hej2 = s2.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  	//    stop3.Stop();  	//    Console.WriteLine(stop3.Elapsed);  	//    Console.WriteLine("service 2 done");  	//}));  	//string hej3 = null;  	//tasklist.Add(Task.Run(() =>  	//{  	//    Stopwatch stop4 = new Stopwatch();  	//    stop4.Start();  	//    hej3 = s3.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  	//    stop4.Stop();  	//    Console.WriteLine(stop4.Elapsed);  	//    Console.WriteLine("service 3 done");  	//}));  	//foreach (var t in tasklist)  	//{  	//    t.Wait();  	//}  	//stop1.Stop();  	//Console.WriteLine(hej);  	//Console.WriteLine(hej2);  	//Console.WriteLine(hej3);  	string hej = s4.RunCrack (first);  	Console.WriteLine (hej);  	Console.WriteLine (stop1.Elapsed);  	Console.WriteLine ("done");  }  
Magic Number,Client,Program,C:\repos\nage31_PasswordCrackerAssignment\Client\Program.cs,Main,The following statement contains a magic number: using (StreamReader sr = new StreamReader (fs)) {  	List<string> parts = new List<string> ();  	while (!sr.EndOfStream) {  		parts.Add (sr.ReadLine ());  	}  	//opdeling af list da soap clienten bare ikke vil tage imod en array.  	string first' second' thrid' fourth' fifth' sixth' seventh' eigth;  	first = parts [0];  	second = parts [1];  	thrid = parts [2];  	fourth = parts [3];  	fifth = parts [4];  	sixth = parts [5];  	seventh = parts [6];  	eigth = parts [7];  	localhost.WebService1 s = new WebService1 ();  	WebReference1.WebService1 s2 = new WebReference1.WebService1 ();  	WebReference.WebService1 s3 = new WebReference.WebService1 ();  	GamerService.WebService1 s4 = new GamerService.WebService1 ();  	//sættelse af timeout tid så denne ikke timeouter efter 2 minutter.  	s4.Timeout = 1000000000;  	s3.Timeout = 1000000000;  	s2.Timeout = 100000000;  	s.Timeout = 1000000000;  	//List<Task> tasklist = new List<Task>();  	//string hej = null;  	//tasklist.Add(Task.Run(() =>  	//{  	//    Stopwatch stop2 = new Stopwatch();  	//    stop2.Start();  	//    hej = s.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  	//    stop2.Stop();  	//    Console.WriteLine(stop2.Elapsed);  	//    Console.WriteLine("service 1 done");  	//}));  	//string hej2 = null;  	//tasklist.Add(Task.Run(() =>  	//{  	//    Stopwatch stop3 = new Stopwatch();  	//    stop3.Start();  	//    hej2 = s2.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  	//    stop3.Stop();  	//    Console.WriteLine(stop3.Elapsed);  	//    Console.WriteLine("service 2 done");  	//}));  	//string hej3 = null;  	//tasklist.Add(Task.Run(() =>  	//{  	//    Stopwatch stop4 = new Stopwatch();  	//    stop4.Start();  	//    hej3 = s3.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  	//    stop4.Stop();  	//    Console.WriteLine(stop4.Elapsed);  	//    Console.WriteLine("service 3 done");  	//}));  	//foreach (var t in tasklist)  	//{  	//    t.Wait();  	//}  	//stop1.Stop();  	//Console.WriteLine(hej);  	//Console.WriteLine(hej2);  	//Console.WriteLine(hej3);  	string hej = s4.RunCrack (first);  	Console.WriteLine (hej);  	Console.WriteLine (stop1.Elapsed);  	Console.WriteLine ("done");  }  
Magic Number,Client,Program,C:\repos\nage31_PasswordCrackerAssignment\Client\Program.cs,Main,The following statement contains a magic number: using (StreamReader sr = new StreamReader (fs)) {  	List<string> parts = new List<string> ();  	while (!sr.EndOfStream) {  		parts.Add (sr.ReadLine ());  	}  	//opdeling af list da soap clienten bare ikke vil tage imod en array.  	string first' second' thrid' fourth' fifth' sixth' seventh' eigth;  	first = parts [0];  	second = parts [1];  	thrid = parts [2];  	fourth = parts [3];  	fifth = parts [4];  	sixth = parts [5];  	seventh = parts [6];  	eigth = parts [7];  	localhost.WebService1 s = new WebService1 ();  	WebReference1.WebService1 s2 = new WebReference1.WebService1 ();  	WebReference.WebService1 s3 = new WebReference.WebService1 ();  	GamerService.WebService1 s4 = new GamerService.WebService1 ();  	//sættelse af timeout tid så denne ikke timeouter efter 2 minutter.  	s4.Timeout = 1000000000;  	s3.Timeout = 1000000000;  	s2.Timeout = 100000000;  	s.Timeout = 1000000000;  	//List<Task> tasklist = new List<Task>();  	//string hej = null;  	//tasklist.Add(Task.Run(() =>  	//{  	//    Stopwatch stop2 = new Stopwatch();  	//    stop2.Start();  	//    hej = s.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  	//    stop2.Stop();  	//    Console.WriteLine(stop2.Elapsed);  	//    Console.WriteLine("service 1 done");  	//}));  	//string hej2 = null;  	//tasklist.Add(Task.Run(() =>  	//{  	//    Stopwatch stop3 = new Stopwatch();  	//    stop3.Start();  	//    hej2 = s2.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  	//    stop3.Stop();  	//    Console.WriteLine(stop3.Elapsed);  	//    Console.WriteLine("service 2 done");  	//}));  	//string hej3 = null;  	//tasklist.Add(Task.Run(() =>  	//{  	//    Stopwatch stop4 = new Stopwatch();  	//    stop4.Start();  	//    hej3 = s3.RunCrack(first' second' thrid' fourth' fifth' sixth' seventh' eigth);  	//    stop4.Stop();  	//    Console.WriteLine(stop4.Elapsed);  	//    Console.WriteLine("service 3 done");  	//}));  	//foreach (var t in tasklist)  	//{  	//    t.Wait();  	//}  	//stop1.Stop();  	//Console.WriteLine(hej);  	//Console.WriteLine(hej2);  	//Console.WriteLine(hej3);  	string hej = s4.RunCrack (first);  	Console.WriteLine (hej);  	Console.WriteLine (stop1.Elapsed);  	Console.WriteLine ("done");  }  
Magic Number,Client,Program,C:\repos\nage31_PasswordCrackerAssignment\Client\Program.cs,Main,The following statement contains a magic number: thrid = parts [2];  
Magic Number,Client,Program,C:\repos\nage31_PasswordCrackerAssignment\Client\Program.cs,Main,The following statement contains a magic number: fourth = parts [3];  
Magic Number,Client,Program,C:\repos\nage31_PasswordCrackerAssignment\Client\Program.cs,Main,The following statement contains a magic number: fifth = parts [4];  
Magic Number,Client,Program,C:\repos\nage31_PasswordCrackerAssignment\Client\Program.cs,Main,The following statement contains a magic number: sixth = parts [5];  
Magic Number,Client,Program,C:\repos\nage31_PasswordCrackerAssignment\Client\Program.cs,Main,The following statement contains a magic number: seventh = parts [6];  
Magic Number,Client,Program,C:\repos\nage31_PasswordCrackerAssignment\Client\Program.cs,Main,The following statement contains a magic number: eigth = parts [7];  
Magic Number,Client,Program,C:\repos\nage31_PasswordCrackerAssignment\Client\Program.cs,Main,The following statement contains a magic number: s4.Timeout = 1000000000;  
Magic Number,Client,Program,C:\repos\nage31_PasswordCrackerAssignment\Client\Program.cs,Main,The following statement contains a magic number: s3.Timeout = 1000000000;  
Magic Number,Client,Program,C:\repos\nage31_PasswordCrackerAssignment\Client\Program.cs,Main,The following statement contains a magic number: s2.Timeout = 100000000;  
Magic Number,Client,Program,C:\repos\nage31_PasswordCrackerAssignment\Client\Program.cs,Main,The following statement contains a magic number: s.Timeout = 1000000000;  
Magic Number,Client.GamerService,WebService1,C:\repos\nage31_PasswordCrackerAssignment\Client\Web References\GamerService\Reference.cs,IsLocalFileSystemWebService,The following statement contains a magic number: if (((wsUri.Port >= 1024) && (string.Compare (wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))) {  	return true;  }  
Magic Number,Client.localhost,WebService1,C:\repos\nage31_PasswordCrackerAssignment\Client\Web References\localhost\Reference.cs,IsLocalFileSystemWebService,The following statement contains a magic number: if (((wsUri.Port >= 1024) && (string.Compare (wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))) {  	return true;  }  
Magic Number,Client.WebReference1,WebService1,C:\repos\nage31_PasswordCrackerAssignment\Client\Web References\WebReference1\Reference.cs,IsLocalFileSystemWebService,The following statement contains a magic number: if (((wsUri.Port >= 1024) && (string.Compare (wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))) {  	return true;  }  
Magic Number,Client.WebReference,WebService1,C:\repos\nage31_PasswordCrackerAssignment\Client\Web References\WebReference\Reference.cs,IsLocalFileSystemWebService,The following statement contains a magic number: if (((wsUri.Port >= 1024) && (string.Compare (wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))) {  	return true;  }  
