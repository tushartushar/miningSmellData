Implementation smell,Namespace,Class,File,Method,Description
Long Statement,AngularJSAuthentication.API,AuthRepository,C:\repos\tjoudeh_AngularJSAuthentication\AngularJSAuthentication.API\AuthRepository.cs,AddRefreshToken,The length of the statement  "           var existingToken = _ctx.RefreshTokens.Where(r => r.Subject == token.Subject && r.ClientId == token.ClientId).SingleOrDefault(); " is 128.
Long Statement,AngularJSAuthentication.API,Startup,C:\repos\tjoudeh_AngularJSAuthentication\AngularJSAuthentication.API\Startup.cs,Configuration,The length of the statement  "            Database.SetInitializer(new MigrateDatabaseToLatestVersion<AuthContext' AngularJSAuthentication.API.Migrations.Configuration>()); " is 129.
Long Statement,AngularJSAuthentication.API.Controllers,AccountController,C:\repos\tjoudeh_AngularJSAuthentication\AngularJSAuthentication.API\Controllers\AccountController.cs,ValidateClientAndRedirectUri,The length of the statement  "            if (!string.Equals(client.AllowedOrigin' redirectUri.GetLeftPart(UriPartial.Authority)' StringComparison.OrdinalIgnoreCase)) " is 124.
Long Statement,AngularJSAuthentication.API.Controllers,AccountController,C:\repos\tjoudeh_AngularJSAuthentication\AngularJSAuthentication.API\Controllers\AccountController.cs,VerifyExternalAccessToken,The length of the statement  "                //More about debug_tokn here: http://stackoverflow.com/questions/16641083/how-does-one-get-the-app-access-token-for-debug-token-inspection-on-facebook " is 150.
Long Statement,AngularJSAuthentication.API.Controllers,AccountController,C:\repos\tjoudeh_AngularJSAuthentication\AngularJSAuthentication.API\Controllers\AccountController.cs,VerifyExternalAccessToken,The length of the statement  "                verifyTokenEndPoint = string.Format("https://graph.facebook.com/debug_token?input_token={0}&access_token={1}"' accessToken' appToken); " is 134.
Long Statement,AngularJSAuthentication.API.Controllers,ExternalLoginData,C:\repos\tjoudeh_AngularJSAuthentication\AngularJSAuthentication.API\Controllers\AccountController.cs,FromIdentity,The length of the statement  "                if (providerKeyClaim == null || String.IsNullOrEmpty(providerKeyClaim.Issuer) || String.IsNullOrEmpty(providerKeyClaim.Value)) " is 126.
Magic Number,AngularJSAuthentication.API,Startup,C:\repos\tjoudeh_AngularJSAuthentication\AngularJSAuthentication.API\Startup.cs,ConfigureOAuth,The following statement contains a magic number: OAuthAuthorizationServerOptions OAuthServerOptions = new OAuthAuthorizationServerOptions() {                                AllowInsecureHttp = true'                  TokenEndpointPath = new PathString("/token")'                  AccessTokenExpireTimeSpan = TimeSpan.FromMinutes(30)'                  Provider = new SimpleAuthorizationServerProvider()'                  RefreshTokenProvider = new SimpleRefreshTokenProvider()              };
Magic Number,AngularJSAuthentication.API.Controllers,Order,C:\repos\tjoudeh_AngularJSAuthentication\AngularJSAuthentication.API\Controllers\OrdersController.cs,CreateOrders,The following statement contains a magic number: List<Order> OrderList = new List<Order>               {                  new Order {OrderID = 10248' CustomerName = "Taiseer Joudeh"' ShipperCity = "Amman"' IsShipped = true }'                  new Order {OrderID = 10249' CustomerName = "Ahmad Hasan"' ShipperCity = "Dubai"' IsShipped = false}'                  new Order {OrderID = 10250'CustomerName = "Tamer Yaser"' ShipperCity = "Jeddah"' IsShipped = false }'                  new Order {OrderID = 10251'CustomerName = "Lina Majed"' ShipperCity = "Abu Dhabi"' IsShipped = false}'                  new Order {OrderID = 10252'CustomerName = "Yasmeen Rami"' ShipperCity = "Kuwait"' IsShipped = true}              };
Magic Number,AngularJSAuthentication.API.Controllers,Order,C:\repos\tjoudeh_AngularJSAuthentication\AngularJSAuthentication.API\Controllers\OrdersController.cs,CreateOrders,The following statement contains a magic number: List<Order> OrderList = new List<Order>               {                  new Order {OrderID = 10248' CustomerName = "Taiseer Joudeh"' ShipperCity = "Amman"' IsShipped = true }'                  new Order {OrderID = 10249' CustomerName = "Ahmad Hasan"' ShipperCity = "Dubai"' IsShipped = false}'                  new Order {OrderID = 10250'CustomerName = "Tamer Yaser"' ShipperCity = "Jeddah"' IsShipped = false }'                  new Order {OrderID = 10251'CustomerName = "Lina Majed"' ShipperCity = "Abu Dhabi"' IsShipped = false}'                  new Order {OrderID = 10252'CustomerName = "Yasmeen Rami"' ShipperCity = "Kuwait"' IsShipped = true}              };
Magic Number,AngularJSAuthentication.API.Controllers,Order,C:\repos\tjoudeh_AngularJSAuthentication\AngularJSAuthentication.API\Controllers\OrdersController.cs,CreateOrders,The following statement contains a magic number: List<Order> OrderList = new List<Order>               {                  new Order {OrderID = 10248' CustomerName = "Taiseer Joudeh"' ShipperCity = "Amman"' IsShipped = true }'                  new Order {OrderID = 10249' CustomerName = "Ahmad Hasan"' ShipperCity = "Dubai"' IsShipped = false}'                  new Order {OrderID = 10250'CustomerName = "Tamer Yaser"' ShipperCity = "Jeddah"' IsShipped = false }'                  new Order {OrderID = 10251'CustomerName = "Lina Majed"' ShipperCity = "Abu Dhabi"' IsShipped = false}'                  new Order {OrderID = 10252'CustomerName = "Yasmeen Rami"' ShipperCity = "Kuwait"' IsShipped = true}              };
Magic Number,AngularJSAuthentication.API.Controllers,Order,C:\repos\tjoudeh_AngularJSAuthentication\AngularJSAuthentication.API\Controllers\OrdersController.cs,CreateOrders,The following statement contains a magic number: List<Order> OrderList = new List<Order>               {                  new Order {OrderID = 10248' CustomerName = "Taiseer Joudeh"' ShipperCity = "Amman"' IsShipped = true }'                  new Order {OrderID = 10249' CustomerName = "Ahmad Hasan"' ShipperCity = "Dubai"' IsShipped = false}'                  new Order {OrderID = 10250'CustomerName = "Tamer Yaser"' ShipperCity = "Jeddah"' IsShipped = false }'                  new Order {OrderID = 10251'CustomerName = "Lina Majed"' ShipperCity = "Abu Dhabi"' IsShipped = false}'                  new Order {OrderID = 10252'CustomerName = "Yasmeen Rami"' ShipperCity = "Kuwait"' IsShipped = true}              };
Magic Number,AngularJSAuthentication.API.Controllers,Order,C:\repos\tjoudeh_AngularJSAuthentication\AngularJSAuthentication.API\Controllers\OrdersController.cs,CreateOrders,The following statement contains a magic number: List<Order> OrderList = new List<Order>               {                  new Order {OrderID = 10248' CustomerName = "Taiseer Joudeh"' ShipperCity = "Amman"' IsShipped = true }'                  new Order {OrderID = 10249' CustomerName = "Ahmad Hasan"' ShipperCity = "Dubai"' IsShipped = false}'                  new Order {OrderID = 10250'CustomerName = "Tamer Yaser"' ShipperCity = "Jeddah"' IsShipped = false }'                  new Order {OrderID = 10251'CustomerName = "Lina Majed"' ShipperCity = "Abu Dhabi"' IsShipped = false}'                  new Order {OrderID = 10252'CustomerName = "Yasmeen Rami"' ShipperCity = "Kuwait"' IsShipped = true}              };
Magic Number,AngularJSAuthentication.API.Migrations,AddClientsAndRefreshTokenTables,C:\repos\tjoudeh_AngularJSAuthentication\AngularJSAuthentication.API\Migrations\201407121205456_AddClientsAndRefreshTokenTables.cs,Up,The following statement contains a magic number: CreateTable(                  "dbo.Clients"'                  c => new                      {                          Id = c.String(nullable: false' maxLength: 128)'                          Secret = c.String(nullable: false)'                          Name = c.String(nullable: false' maxLength: 100)'                          ApplicationType = c.Int(nullable: false)'                          Active = c.Boolean(nullable: false)'                          RefreshTokenLifeTime = c.Int(nullable: false)'                          AllowedOrigin = c.String(maxLength: 100)'                      })                  .PrimaryKey(t => t.Id);
Magic Number,AngularJSAuthentication.API.Migrations,AddClientsAndRefreshTokenTables,C:\repos\tjoudeh_AngularJSAuthentication\AngularJSAuthentication.API\Migrations\201407121205456_AddClientsAndRefreshTokenTables.cs,Up,The following statement contains a magic number: CreateTable(                  "dbo.Clients"'                  c => new                      {                          Id = c.String(nullable: false' maxLength: 128)'                          Secret = c.String(nullable: false)'                          Name = c.String(nullable: false' maxLength: 100)'                          ApplicationType = c.Int(nullable: false)'                          Active = c.Boolean(nullable: false)'                          RefreshTokenLifeTime = c.Int(nullable: false)'                          AllowedOrigin = c.String(maxLength: 100)'                      })                  .PrimaryKey(t => t.Id);
Magic Number,AngularJSAuthentication.API.Migrations,AddClientsAndRefreshTokenTables,C:\repos\tjoudeh_AngularJSAuthentication\AngularJSAuthentication.API\Migrations\201407121205456_AddClientsAndRefreshTokenTables.cs,Up,The following statement contains a magic number: CreateTable(                  "dbo.Clients"'                  c => new                      {                          Id = c.String(nullable: false' maxLength: 128)'                          Secret = c.String(nullable: false)'                          Name = c.String(nullable: false' maxLength: 100)'                          ApplicationType = c.Int(nullable: false)'                          Active = c.Boolean(nullable: false)'                          RefreshTokenLifeTime = c.Int(nullable: false)'                          AllowedOrigin = c.String(maxLength: 100)'                      })                  .PrimaryKey(t => t.Id);
Magic Number,AngularJSAuthentication.API.Migrations,AddClientsAndRefreshTokenTables,C:\repos\tjoudeh_AngularJSAuthentication\AngularJSAuthentication.API\Migrations\201407121205456_AddClientsAndRefreshTokenTables.cs,Up,The following statement contains a magic number: CreateTable(                  "dbo.RefreshTokens"'                  c => new                      {                          Id = c.String(nullable: false' maxLength: 128)'                          Subject = c.String(nullable: false' maxLength: 50)'                          ClientId = c.String(nullable: false' maxLength: 50)'                          IssuedUtc = c.DateTime(nullable: false)'                          ExpiresUtc = c.DateTime(nullable: false)'                          ProtectedTicket = c.String(nullable: false)'                      })                  .PrimaryKey(t => t.Id);
Magic Number,AngularJSAuthentication.API.Migrations,AddClientsAndRefreshTokenTables,C:\repos\tjoudeh_AngularJSAuthentication\AngularJSAuthentication.API\Migrations\201407121205456_AddClientsAndRefreshTokenTables.cs,Up,The following statement contains a magic number: CreateTable(                  "dbo.RefreshTokens"'                  c => new                      {                          Id = c.String(nullable: false' maxLength: 128)'                          Subject = c.String(nullable: false' maxLength: 50)'                          ClientId = c.String(nullable: false' maxLength: 50)'                          IssuedUtc = c.DateTime(nullable: false)'                          ExpiresUtc = c.DateTime(nullable: false)'                          ProtectedTicket = c.String(nullable: false)'                      })                  .PrimaryKey(t => t.Id);
Magic Number,AngularJSAuthentication.API.Migrations,AddClientsAndRefreshTokenTables,C:\repos\tjoudeh_AngularJSAuthentication\AngularJSAuthentication.API\Migrations\201407121205456_AddClientsAndRefreshTokenTables.cs,Up,The following statement contains a magic number: CreateTable(                  "dbo.RefreshTokens"'                  c => new                      {                          Id = c.String(nullable: false' maxLength: 128)'                          Subject = c.String(nullable: false' maxLength: 50)'                          ClientId = c.String(nullable: false' maxLength: 50)'                          IssuedUtc = c.DateTime(nullable: false)'                          ExpiresUtc = c.DateTime(nullable: false)'                          ProtectedTicket = c.String(nullable: false)'                      })                  .PrimaryKey(t => t.Id);
Magic Number,AngularJSAuthentication.API.Migrations,AddClientsAndRefreshTokenTables,C:\repos\tjoudeh_AngularJSAuthentication\AngularJSAuthentication.API\Migrations\201407121205456_AddClientsAndRefreshTokenTables.cs,Up,The following statement contains a magic number: CreateTable(                "dbo.AspNetRoles"'                c => new                {                    Id = c.String(nullable: false' maxLength: 128)'                    Name = c.String(nullable: false' maxLength: 256)'                })                .PrimaryKey(t => t.Id)                .Index(t => t.Name' unique: true' name: "RoleNameIndex");
Magic Number,AngularJSAuthentication.API.Migrations,AddClientsAndRefreshTokenTables,C:\repos\tjoudeh_AngularJSAuthentication\AngularJSAuthentication.API\Migrations\201407121205456_AddClientsAndRefreshTokenTables.cs,Up,The following statement contains a magic number: CreateTable(                "dbo.AspNetRoles"'                c => new                {                    Id = c.String(nullable: false' maxLength: 128)'                    Name = c.String(nullable: false' maxLength: 256)'                })                .PrimaryKey(t => t.Id)                .Index(t => t.Name' unique: true' name: "RoleNameIndex");
Magic Number,AngularJSAuthentication.API.Migrations,AddClientsAndRefreshTokenTables,C:\repos\tjoudeh_AngularJSAuthentication\AngularJSAuthentication.API\Migrations\201407121205456_AddClientsAndRefreshTokenTables.cs,Up,The following statement contains a magic number: CreateTable(                  "dbo.AspNetUserRoles"'                  c => new                  {                      UserId = c.String(nullable: false' maxLength: 128)'                      RoleId = c.String(nullable: false' maxLength: 128)'                  })                  .PrimaryKey(t => new { t.UserId' t.RoleId })                  .ForeignKey("dbo.AspNetRoles"' t => t.RoleId' cascadeDelete: true)                  .ForeignKey("dbo.AspNetUsers"' t => t.UserId' cascadeDelete: true)                  .Index(t => t.UserId)                  .Index(t => t.RoleId);
Magic Number,AngularJSAuthentication.API.Migrations,AddClientsAndRefreshTokenTables,C:\repos\tjoudeh_AngularJSAuthentication\AngularJSAuthentication.API\Migrations\201407121205456_AddClientsAndRefreshTokenTables.cs,Up,The following statement contains a magic number: CreateTable(                  "dbo.AspNetUserRoles"'                  c => new                  {                      UserId = c.String(nullable: false' maxLength: 128)'                      RoleId = c.String(nullable: false' maxLength: 128)'                  })                  .PrimaryKey(t => new { t.UserId' t.RoleId })                  .ForeignKey("dbo.AspNetRoles"' t => t.RoleId' cascadeDelete: true)                  .ForeignKey("dbo.AspNetUsers"' t => t.UserId' cascadeDelete: true)                  .Index(t => t.UserId)                  .Index(t => t.RoleId);
Magic Number,AngularJSAuthentication.API.Migrations,AddClientsAndRefreshTokenTables,C:\repos\tjoudeh_AngularJSAuthentication\AngularJSAuthentication.API\Migrations\201407121205456_AddClientsAndRefreshTokenTables.cs,Up,The following statement contains a magic number: CreateTable(                  "dbo.AspNetUsers"'                  c => new                  {                      Id = c.String(nullable: false' maxLength: 128)'                      Email = c.String(maxLength: 256)'                      EmailConfirmed = c.Boolean(nullable: false)'                      PasswordHash = c.String()'                      SecurityStamp = c.String()'                      PhoneNumber = c.String()'                      PhoneNumberConfirmed = c.Boolean(nullable: false)'                      TwoFactorEnabled = c.Boolean(nullable: false)'                      LockoutEndDateUtc = c.DateTime()'                      LockoutEnabled = c.Boolean(nullable: false)'                      AccessFailedCount = c.Int(nullable: false)'                      UserName = c.String(nullable: false' maxLength: 256)'                  })                  .PrimaryKey(t => t.Id)                  .Index(t => t.UserName' unique: true' name: "UserNameIndex");
Magic Number,AngularJSAuthentication.API.Migrations,AddClientsAndRefreshTokenTables,C:\repos\tjoudeh_AngularJSAuthentication\AngularJSAuthentication.API\Migrations\201407121205456_AddClientsAndRefreshTokenTables.cs,Up,The following statement contains a magic number: CreateTable(                  "dbo.AspNetUsers"'                  c => new                  {                      Id = c.String(nullable: false' maxLength: 128)'                      Email = c.String(maxLength: 256)'                      EmailConfirmed = c.Boolean(nullable: false)'                      PasswordHash = c.String()'                      SecurityStamp = c.String()'                      PhoneNumber = c.String()'                      PhoneNumberConfirmed = c.Boolean(nullable: false)'                      TwoFactorEnabled = c.Boolean(nullable: false)'                      LockoutEndDateUtc = c.DateTime()'                      LockoutEnabled = c.Boolean(nullable: false)'                      AccessFailedCount = c.Int(nullable: false)'                      UserName = c.String(nullable: false' maxLength: 256)'                  })                  .PrimaryKey(t => t.Id)                  .Index(t => t.UserName' unique: true' name: "UserNameIndex");
Magic Number,AngularJSAuthentication.API.Migrations,AddClientsAndRefreshTokenTables,C:\repos\tjoudeh_AngularJSAuthentication\AngularJSAuthentication.API\Migrations\201407121205456_AddClientsAndRefreshTokenTables.cs,Up,The following statement contains a magic number: CreateTable(                  "dbo.AspNetUsers"'                  c => new                  {                      Id = c.String(nullable: false' maxLength: 128)'                      Email = c.String(maxLength: 256)'                      EmailConfirmed = c.Boolean(nullable: false)'                      PasswordHash = c.String()'                      SecurityStamp = c.String()'                      PhoneNumber = c.String()'                      PhoneNumberConfirmed = c.Boolean(nullable: false)'                      TwoFactorEnabled = c.Boolean(nullable: false)'                      LockoutEndDateUtc = c.DateTime()'                      LockoutEnabled = c.Boolean(nullable: false)'                      AccessFailedCount = c.Int(nullable: false)'                      UserName = c.String(nullable: false' maxLength: 256)'                  })                  .PrimaryKey(t => t.Id)                  .Index(t => t.UserName' unique: true' name: "UserNameIndex");
Magic Number,AngularJSAuthentication.API.Migrations,AddClientsAndRefreshTokenTables,C:\repos\tjoudeh_AngularJSAuthentication\AngularJSAuthentication.API\Migrations\201407121205456_AddClientsAndRefreshTokenTables.cs,Up,The following statement contains a magic number: CreateTable(                  "dbo.AspNetUserClaims"'                  c => new                  {                      Id = c.Int(nullable: false' identity: true)'                      UserId = c.String(nullable: false' maxLength: 128)'                      ClaimType = c.String()'                      ClaimValue = c.String()'                  })                  .PrimaryKey(t => t.Id)                  .ForeignKey("dbo.AspNetUsers"' t => t.UserId' cascadeDelete: true)                  .Index(t => t.UserId);
Magic Number,AngularJSAuthentication.API.Migrations,AddClientsAndRefreshTokenTables,C:\repos\tjoudeh_AngularJSAuthentication\AngularJSAuthentication.API\Migrations\201407121205456_AddClientsAndRefreshTokenTables.cs,Up,The following statement contains a magic number: CreateTable(                  "dbo.AspNetUserLogins"'                  c => new                  {                      LoginProvider = c.String(nullable: false' maxLength: 128)'                      ProviderKey = c.String(nullable: false' maxLength: 128)'                      UserId = c.String(nullable: false' maxLength: 128)'                  })                  .PrimaryKey(t => new { t.LoginProvider' t.ProviderKey' t.UserId })                  .ForeignKey("dbo.AspNetUsers"' t => t.UserId' cascadeDelete: true)                  .Index(t => t.UserId);
Magic Number,AngularJSAuthentication.API.Migrations,AddClientsAndRefreshTokenTables,C:\repos\tjoudeh_AngularJSAuthentication\AngularJSAuthentication.API\Migrations\201407121205456_AddClientsAndRefreshTokenTables.cs,Up,The following statement contains a magic number: CreateTable(                  "dbo.AspNetUserLogins"'                  c => new                  {                      LoginProvider = c.String(nullable: false' maxLength: 128)'                      ProviderKey = c.String(nullable: false' maxLength: 128)'                      UserId = c.String(nullable: false' maxLength: 128)'                  })                  .PrimaryKey(t => new { t.LoginProvider' t.ProviderKey' t.UserId })                  .ForeignKey("dbo.AspNetUsers"' t => t.UserId' cascadeDelete: true)                  .Index(t => t.UserId);
Magic Number,AngularJSAuthentication.API.Migrations,AddClientsAndRefreshTokenTables,C:\repos\tjoudeh_AngularJSAuthentication\AngularJSAuthentication.API\Migrations\201407121205456_AddClientsAndRefreshTokenTables.cs,Up,The following statement contains a magic number: CreateTable(                  "dbo.AspNetUserLogins"'                  c => new                  {                      LoginProvider = c.String(nullable: false' maxLength: 128)'                      ProviderKey = c.String(nullable: false' maxLength: 128)'                      UserId = c.String(nullable: false' maxLength: 128)'                  })                  .PrimaryKey(t => new { t.LoginProvider' t.ProviderKey' t.UserId })                  .ForeignKey("dbo.AspNetUsers"' t => t.UserId' cascadeDelete: true)                  .Index(t => t.UserId);
Magic Number,AngularJSAuthentication.API.Migrations,Configuration,C:\repos\tjoudeh_AngularJSAuthentication\AngularJSAuthentication.API\Migrations\Configuration.cs,BuildClientsList,The following statement contains a magic number: List<Client> ClientsList = new List<Client>               {                  new Client                  { Id = "ngAuthApp"'                       Secret= Helper.GetHash("abc@123")'                       Name="AngularJS front-end Application"'                       ApplicationType =  Models.ApplicationTypes.JavaScript'                       Active = true'                       RefreshTokenLifeTime = 7200'                       AllowedOrigin = "http://ngauthenticationweb.azurewebsites.net"                  }'                  new Client                  { Id = "consoleApp"'                       Secret=Helper.GetHash("123@abc")'                       Name="Console Application"'                       ApplicationType =Models.ApplicationTypes.NativeConfidential'                       Active = true'                       RefreshTokenLifeTime = 14400'                       AllowedOrigin = "*"                  }              };
Magic Number,AngularJSAuthentication.API.Migrations,Configuration,C:\repos\tjoudeh_AngularJSAuthentication\AngularJSAuthentication.API\Migrations\Configuration.cs,BuildClientsList,The following statement contains a magic number: List<Client> ClientsList = new List<Client>               {                  new Client                  { Id = "ngAuthApp"'                       Secret= Helper.GetHash("abc@123")'                       Name="AngularJS front-end Application"'                       ApplicationType =  Models.ApplicationTypes.JavaScript'                       Active = true'                       RefreshTokenLifeTime = 7200'                       AllowedOrigin = "http://ngauthenticationweb.azurewebsites.net"                  }'                  new Client                  { Id = "consoleApp"'                       Secret=Helper.GetHash("123@abc")'                       Name="Console Application"'                       ApplicationType =Models.ApplicationTypes.NativeConfidential'                       Active = true'                       RefreshTokenLifeTime = 14400'                       AllowedOrigin = "*"                  }              };
