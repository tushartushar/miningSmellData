Implementation smell,Namespace,Class,File,Method,Description
Long Method,JTL.Tax1040.EfileServices.PingService,IRSOutputFilter,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\EfileIRSFilter\IRSOutputFilter.cs,ProcessMessage,The method has 106 lines of code.
Long Method,JTL.Tax1040.EfileServices.PingService,GetAck,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\GetAck.cs,GetAcknowledgement,The method has 153 lines of code.
Complex Method,JTL.Tax1040.EfileServices.PingService,IRSOutputFilter,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\EfileIRSFilter\IRSOutputFilter.cs,ProcessMessage,Cyclomatic complexity of the method is 12
Complex Method,JTL.Tax1040.EfileServices.PingService,GetAck,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\GetAck.cs,GetErrorMessageforLoginLogout,Cyclomatic complexity of the method is 9
Complex Method,JTL.Tax1040.EfileServices.PingService,GetAck,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\GetAck.cs,GetAcknowledgement,Cyclomatic complexity of the method is 18
Complex Method,JTL.Tax1040.EfileServices.PingService,GetAck,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\GetAck.cs,GetAttachmentError,Cyclomatic complexity of the method is 11
Complex Method,JTL.Tax1040.EfileServices.PingService,GetAck,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\GetAck.cs,GetErrorMessage,Cyclomatic complexity of the method is 9
Long Identifier,JTL.Tax1040.EfileServices.PingService.ETECTransmitterServicesMTOM,Get2290Schedule1sByMsgID,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\ETECTransmitterServicesMTOM\Reference.cs,CallGet2290Schedule1sByMsgID,The length of the parameter Get2290Schedule1sByMsgIDRequest is 31.
Long Identifier,JTL.Tax1040.EfileServices.PingService.ETECTransmitterServicesMTOM,Get2290Schedule1sByMsgID,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\ETECTransmitterServicesMTOM\Reference.cs,CallGet2290Schedule1sByMsgIDAsync,The length of the parameter Get2290Schedule1sByMsgIDRequest is 31.
Long Identifier,JTL.Tax1040.EfileServices.PingService.ETECTransmitterServicesMTOM,Get2290Schedule1sByMsgID,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\ETECTransmitterServicesMTOM\Reference.cs,CallGet2290Schedule1sByMsgIDAsync,The length of the parameter Get2290Schedule1sByMsgIDRequest is 31.
Long Identifier,JTL.Tax1040.EfileServices.PingService.MeFMSIServices,GetStateParticipantsList,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFMSIServices\Reference.cs,CallGetStateParticipantsList,The length of the parameter GetStateParticipantsListRequest is 31.
Long Identifier,JTL.Tax1040.EfileServices.PingService.MeFMSIServices,GetStateParticipantsList,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFMSIServices\Reference.cs,CallGetStateParticipantsListAsync,The length of the parameter GetStateParticipantsListRequest is 31.
Long Identifier,JTL.Tax1040.EfileServices.PingService.MeFMSIServices,GetStateParticipantsList,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFMSIServices\Reference.cs,CallGetStateParticipantsListAsync,The length of the parameter GetStateParticipantsListRequest is 31.
Long Identifier,JTL.Tax1040.EfileServices.PingService.MeFTransmitterServicesMTOM,GetNewSubmissionsStatus,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFTransmitterServicesMTOM\Reference.cs,CallGetNewSubmissionsStatus,The length of the parameter GetNewSubmissionsStatusRequest is 30.
Long Identifier,JTL.Tax1040.EfileServices.PingService.MeFTransmitterServicesMTOM,GetNewSubmissionsStatus,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFTransmitterServicesMTOM\Reference.cs,CallGetNewSubmissionsStatusAsync,The length of the parameter GetNewSubmissionsStatusRequest is 30.
Long Identifier,JTL.Tax1040.EfileServices.PingService.MeFTransmitterServicesMTOM,GetNewSubmissionsStatus,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFTransmitterServicesMTOM\Reference.cs,CallGetNewSubmissionsStatusAsync,The length of the parameter GetNewSubmissionsStatusRequest is 30.
Long Statement,JTL.Tax1040.EfileServices.PingService,Utilities,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Business\Utilities.cs,SendMail,The length of the statement  "	if (null != ConfigurationManager.AppSettings ["MailServerHost"] && null != ConfigurationManager.AppSettings ["FromAddress"] && null != ConfigurationManager.AppSettings ["ToAddress"] && null != ConfigurationManager.AppSettings ["BccAddress"] && null != ConfigurationManager.AppSettings ["DefaultSubject"]) { " is 306.
Long Statement,JTL.Tax1040.EfileServices.PingService,Utilities,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Business\Utilities.cs,SendMail,The length of the statement  "		if (!string.IsNullOrEmpty (host) && !string.IsNullOrEmpty (frommail) && !string.IsNullOrEmpty (tomail) && !string.IsNullOrEmpty (bccmail) && !string.IsNullOrEmpty (Subject)) { " is 175.
Long Statement,JTL.Tax1040.EfileServices.PingService,GetAckDAL,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\DataAccess\GetAckDAL.cs,SaveAckAttachment,The length of the statement  "	taxDB.AddInParameter (cmd' Parameters.ReceiverType' DbType.Binary' System.Text.Encoding.ASCII.GetBytes (ReceiverType.Acknowledgement)); " is 135.
Long Statement,JTL.Tax1040.EfileServices.PingService,IRSInputFilter,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\EfileIRSFilter\IRSInputFilter.cs,ProcessMessage,The length of the statement  "	SecurityExpression = doc.CreateNavigator ().Compile ("/" + ObjSop.Prefix + ":" + SoapElementNames.Envelope + "/" + ObjSop.Prefix + ":" + SoapElementNames.Header + "/" + WSSecurity.Prefix + ":" + WSSecurity.ElementNames.Security); " is 229.
Long Statement,JTL.Tax1040.EfileServices.PingService,IRSOutputFilter,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\EfileIRSFilter\IRSOutputFilter.cs,ProcessMessage,The length of the statement  "	XmlNode securityNode = envelope.CreateNode (XmlNodeType.Element' "wsse:Security"' "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"); " is 167.
Long Statement,JTL.Tax1040.EfileServices.PingService,IRSOutputFilter,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\EfileIRSFilter\IRSOutputFilter.cs,ProcessMessage,The length of the statement  "	XmlNode usernameTokenNode = envelope.CreateNode (XmlNodeType.Element' "wsse:UsernameToken"' "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"); " is 177.
Long Statement,JTL.Tax1040.EfileServices.PingService,IRSOutputFilter,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\EfileIRSFilter\IRSOutputFilter.cs,ProcessMessage,The length of the statement  "	userElement.SetAttribute ("xmlns:wsu"' "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"); " is 125.
Long Statement,JTL.Tax1040.EfileServices.PingService,IRSOutputFilter,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\EfileIRSFilter\IRSOutputFilter.cs,ProcessMessage,The length of the statement  "	XmlNode userNameNode = envelope.CreateNode (XmlNodeType.Element' "wsse:Username"' "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"); " is 167.
Long Statement,JTL.Tax1040.EfileServices.PingService,IRSOutputFilter,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\EfileIRSFilter\IRSOutputFilter.cs,ProcessMessage,The length of the statement  "	XmlNode pwdNode = envelope.CreateNode (XmlNodeType.Element' "wsse:Password"' "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"); " is 162.
Long Statement,JTL.Tax1040.EfileServices.PingService,IRSOutputFilter,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\EfileIRSFilter\IRSOutputFilter.cs,ProcessMessage,The length of the statement  "	pwdElement.SetAttribute ("Type"' "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText"); " is 132.
Long Statement,JTL.Tax1040.EfileServices.PingService,IRSOutputFilter,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\EfileIRSFilter\IRSOutputFilter.cs,ProcessMessage,The length of the statement  "	SecurityExpression = doc.CreateNavigator ().Compile ("/" + ObjSop.Prefix + ":" + SoapElementNames.Envelope + "/" + ObjSop.Prefix + ":" + SoapElementNames.Header + "/" + WSSecurity.Prefix + ":" + WSSecurity.ElementNames.Security); " is 229.
Long Statement,JTL.Tax1040.EfileServices.PingService,GetAck,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\GetAck.cs,GetSecurityInfo,The length of the statement  "			if (htSecurityInfo.Contains ("Password") && !string.IsNullOrEmpty (htSecurityInfo ["Password"].ToString ()) && htSecurityInfo.Contains ("EncryptKey") && !string.IsNullOrEmpty (htSecurityInfo ["EncryptKey"].ToString ())) { " is 221.
Long Statement,JTL.Tax1040.EfileServices.PingService,GetAck,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\GetAck.cs,GetSecurityInfo,The length of the statement  "			if (htSecurityInfo.Contains ("ConfirmationToken") && !string.IsNullOrEmpty (htSecurityInfo ["ConfirmationToken"].ToString ())) { " is 128.
Long Statement,JTL.Tax1040.EfileServices.PingService,GetAck,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\GetAck.cs,GetSecurityInfo,The length of the statement  "			if (htSecurityInfo.Contains ("TestIndicator") && !string.IsNullOrEmpty (htSecurityInfo ["TestIndicator"].ToString ())) { " is 120.
Long Statement,JTL.Tax1040.EfileServices.PingService,GetAck,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\GetAck.cs,FillMefHeaderGetAcks,The length of the statement  "	JTL.Tax1040.EfileServices.PingService.MeFTransmitterServicesMTOM.MeFHeaderType meF = new JTL.Tax1040.EfileServices.PingService.MeFTransmitterServicesMTOM.MeFHeaderType (); " is 171.
Long Statement,JTL.Tax1040.EfileServices.PingService,GetAck,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\GetAck.cs,GetAcknowledgement,The length of the statement  "					Stream XMLstream = new MemoryStream (ASCIIEncoding.Default.GetBytes (getAck.ResponseSoapContext.Envelope.Body.InnerXml)); " is 121.
Long Statement,JTL.Tax1040.EfileServices.PingService,GetAck,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\GetAck.cs,DecryptData,The length of the statement  "		//Code added to prevent "System.ArgumentOutOfRangeException: Index and length must refer to alocation within the string". " is 121.
Long Statement,JTL.Tax1040.EfileServices.PingService.ETECTransmitterServicesMTOM,GetNew2290Schedule1s,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\ETECTransmitterServicesMTOM\Reference.cs,CallGetNew2290Schedule1sAsync,The length of the statement  "		this.CallGetNew2290Schedule1sOperationCompleted = new System.Threading.SendOrPostCallback (this.OnCallGetNew2290Schedule1sOperationCompleted); " is 142.
Long Statement,JTL.Tax1040.EfileServices.PingService.ETECTransmitterServicesMTOM,GetNew2290Schedule1s,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\ETECTransmitterServicesMTOM\Reference.cs,OnCallGetNew2290Schedule1sOperationCompleted,The length of the statement  "		System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg)); " is 132.
Long Statement,JTL.Tax1040.EfileServices.PingService.ETECTransmitterServicesMTOM,GetNew2290Schedule1s,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\ETECTransmitterServicesMTOM\Reference.cs,OnCallGetNew2290Schedule1sOperationCompleted,The length of the statement  "		this.CallGetNew2290Schedule1sCompleted (this' new CallGetNew2290Schedule1sCompletedEventArgs (invokeArgs.Results' invokeArgs.Error' invokeArgs.Cancelled' invokeArgs.UserState)); " is 177.
Long Statement,JTL.Tax1040.EfileServices.PingService.ETECTransmitterServicesMTOM,GetNew2290Schedule1s,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\ETECTransmitterServicesMTOM\Reference.cs,IsLocalFileSystemWebService,The length of the statement  "	if (((wsUri.Port >= 1024) && (string.Compare (wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))) { " is 123.
Long Statement,JTL.Tax1040.EfileServices.PingService.ETECTransmitterServicesMTOM,Get2290Schedule1s,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\ETECTransmitterServicesMTOM\Reference.cs,CallGet2290Schedule1sAsync,The length of the statement  "		this.CallGet2290Schedule1sOperationCompleted = new System.Threading.SendOrPostCallback (this.OnCallGet2290Schedule1sOperationCompleted); " is 136.
Long Statement,JTL.Tax1040.EfileServices.PingService.ETECTransmitterServicesMTOM,Get2290Schedule1s,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\ETECTransmitterServicesMTOM\Reference.cs,OnCallGet2290Schedule1sOperationCompleted,The length of the statement  "		System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg)); " is 132.
Long Statement,JTL.Tax1040.EfileServices.PingService.ETECTransmitterServicesMTOM,Get2290Schedule1s,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\ETECTransmitterServicesMTOM\Reference.cs,OnCallGet2290Schedule1sOperationCompleted,The length of the statement  "		this.CallGet2290Schedule1sCompleted (this' new CallGet2290Schedule1sCompletedEventArgs (invokeArgs.Results' invokeArgs.Error' invokeArgs.Cancelled' invokeArgs.UserState)); " is 171.
Long Statement,JTL.Tax1040.EfileServices.PingService.ETECTransmitterServicesMTOM,Get2290Schedule1s,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\ETECTransmitterServicesMTOM\Reference.cs,IsLocalFileSystemWebService,The length of the statement  "	if (((wsUri.Port >= 1024) && (string.Compare (wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))) { " is 123.
Long Statement,JTL.Tax1040.EfileServices.PingService.ETECTransmitterServicesMTOM,Get2290Schedule1,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\ETECTransmitterServicesMTOM\Reference.cs,CallGet2290Schedule1Async,The length of the statement  "		this.CallGet2290Schedule1OperationCompleted = new System.Threading.SendOrPostCallback (this.OnCallGet2290Schedule1OperationCompleted); " is 134.
Long Statement,JTL.Tax1040.EfileServices.PingService.ETECTransmitterServicesMTOM,Get2290Schedule1,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\ETECTransmitterServicesMTOM\Reference.cs,OnCallGet2290Schedule1OperationCompleted,The length of the statement  "		System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg)); " is 132.
Long Statement,JTL.Tax1040.EfileServices.PingService.ETECTransmitterServicesMTOM,Get2290Schedule1,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\ETECTransmitterServicesMTOM\Reference.cs,OnCallGet2290Schedule1OperationCompleted,The length of the statement  "		this.CallGet2290Schedule1Completed (this' new CallGet2290Schedule1CompletedEventArgs (invokeArgs.Results' invokeArgs.Error' invokeArgs.Cancelled' invokeArgs.UserState)); " is 169.
Long Statement,JTL.Tax1040.EfileServices.PingService.ETECTransmitterServicesMTOM,Get2290Schedule1,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\ETECTransmitterServicesMTOM\Reference.cs,IsLocalFileSystemWebService,The length of the statement  "	if (((wsUri.Port >= 1024) && (string.Compare (wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))) { " is 123.
Long Statement,JTL.Tax1040.EfileServices.PingService.ETECTransmitterServicesMTOM,Get2290Schedule1sByMsgID,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\ETECTransmitterServicesMTOM\Reference.cs,CallGet2290Schedule1sByMsgIDAsync,The length of the statement  "		this.CallGet2290Schedule1sByMsgIDOperationCompleted = new System.Threading.SendOrPostCallback (this.OnCallGet2290Schedule1sByMsgIDOperationCompleted); " is 150.
Long Statement,JTL.Tax1040.EfileServices.PingService.ETECTransmitterServicesMTOM,Get2290Schedule1sByMsgID,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\ETECTransmitterServicesMTOM\Reference.cs,OnCallGet2290Schedule1sByMsgIDOperationCompleted,The length of the statement  "		System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg)); " is 132.
Long Statement,JTL.Tax1040.EfileServices.PingService.ETECTransmitterServicesMTOM,Get2290Schedule1sByMsgID,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\ETECTransmitterServicesMTOM\Reference.cs,OnCallGet2290Schedule1sByMsgIDOperationCompleted,The length of the statement  "		this.CallGet2290Schedule1sByMsgIDCompleted (this' new CallGet2290Schedule1sByMsgIDCompletedEventArgs (invokeArgs.Results' invokeArgs.Error' invokeArgs.Cancelled' invokeArgs.UserState)); " is 185.
Long Statement,JTL.Tax1040.EfileServices.PingService.ETECTransmitterServicesMTOM,Get2290Schedule1sByMsgID,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\ETECTransmitterServicesMTOM\Reference.cs,IsLocalFileSystemWebService,The length of the statement  "	if (((wsUri.Port >= 1024) && (string.Compare (wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))) { " is 123.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFMSIServices,ChangePassword,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFMSIServices\Reference.cs,CallChangePasswordAsync,The length of the statement  "		this.CallChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback (this.OnCallChangePasswordOperationCompleted); " is 130.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFMSIServices,ChangePassword,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFMSIServices\Reference.cs,OnCallChangePasswordOperationCompleted,The length of the statement  "		System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg)); " is 132.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFMSIServices,ChangePassword,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFMSIServices\Reference.cs,OnCallChangePasswordOperationCompleted,The length of the statement  "		this.CallChangePasswordCompleted (this' new CallChangePasswordCompletedEventArgs (invokeArgs.Results' invokeArgs.Error' invokeArgs.Cancelled' invokeArgs.UserState)); " is 165.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFMSIServices,ChangePassword,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFMSIServices\Reference.cs,IsLocalFileSystemWebService,The length of the statement  "	if (((wsUri.Port >= 1024) && (string.Compare (wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))) { " is 123.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFMSIServices,EtinRetrieval,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFMSIServices\Reference.cs,CallEtinRetrievalAsync,The length of the statement  "		this.CallEtinRetrievalOperationCompleted = new System.Threading.SendOrPostCallback (this.OnCallEtinRetrievalOperationCompleted); " is 128.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFMSIServices,EtinRetrieval,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFMSIServices\Reference.cs,OnCallEtinRetrievalOperationCompleted,The length of the statement  "		System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg)); " is 132.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFMSIServices,EtinRetrieval,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFMSIServices\Reference.cs,OnCallEtinRetrievalOperationCompleted,The length of the statement  "		this.CallEtinRetrievalCompleted (this' new CallEtinRetrievalCompletedEventArgs (invokeArgs.Results' invokeArgs.Error' invokeArgs.Cancelled' invokeArgs.UserState)); " is 163.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFMSIServices,EtinRetrieval,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFMSIServices\Reference.cs,IsLocalFileSystemWebService,The length of the statement  "	if (((wsUri.Port >= 1024) && (string.Compare (wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))) { " is 123.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFMSIServices,EtinStatus,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFMSIServices\Reference.cs,CallEtinStatusAsync,The length of the statement  "		this.CallEtinStatusOperationCompleted = new System.Threading.SendOrPostCallback (this.OnCallEtinStatusOperationCompleted); " is 122.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFMSIServices,EtinStatus,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFMSIServices\Reference.cs,OnCallEtinStatusOperationCompleted,The length of the statement  "		System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg)); " is 132.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFMSIServices,EtinStatus,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFMSIServices\Reference.cs,OnCallEtinStatusOperationCompleted,The length of the statement  "		this.CallEtinStatusCompleted (this' new CallEtinStatusCompletedEventArgs (invokeArgs.Results' invokeArgs.Error' invokeArgs.Cancelled' invokeArgs.UserState)); " is 157.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFMSIServices,EtinStatus,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFMSIServices\Reference.cs,IsLocalFileSystemWebService,The length of the statement  "	if (((wsUri.Port >= 1024) && (string.Compare (wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))) { " is 123.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFMSIServices,GetStateParticipantsList,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFMSIServices\Reference.cs,CallGetStateParticipantsListAsync,The length of the statement  "		this.CallGetStateParticipantsListOperationCompleted = new System.Threading.SendOrPostCallback (this.OnCallGetStateParticipantsListOperationCompleted); " is 150.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFMSIServices,GetStateParticipantsList,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFMSIServices\Reference.cs,OnCallGetStateParticipantsListOperationCompleted,The length of the statement  "		System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg)); " is 132.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFMSIServices,GetStateParticipantsList,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFMSIServices\Reference.cs,OnCallGetStateParticipantsListOperationCompleted,The length of the statement  "		this.CallGetStateParticipantsListCompleted (this' new CallGetStateParticipantsListCompletedEventArgs (invokeArgs.Results' invokeArgs.Error' invokeArgs.Cancelled' invokeArgs.UserState)); " is 185.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFMSIServices,GetStateParticipantsList,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFMSIServices\Reference.cs,IsLocalFileSystemWebService,The length of the statement  "	if (((wsUri.Port >= 1024) && (string.Compare (wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))) { " is 123.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFMSIServices,InitialLogin,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFMSIServices\Reference.cs,CallInitialLoginAsync,The length of the statement  "		this.CallInitialLoginOperationCompleted = new System.Threading.SendOrPostCallback (this.OnCallInitialLoginOperationCompleted); " is 126.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFMSIServices,InitialLogin,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFMSIServices\Reference.cs,OnCallInitialLoginOperationCompleted,The length of the statement  "		System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg)); " is 132.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFMSIServices,InitialLogin,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFMSIServices\Reference.cs,OnCallInitialLoginOperationCompleted,The length of the statement  "		this.CallInitialLoginCompleted (this' new CallInitialLoginCompletedEventArgs (invokeArgs.Results' invokeArgs.Error' invokeArgs.Cancelled' invokeArgs.UserState)); " is 161.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFMSIServices,InitialLogin,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFMSIServices\Reference.cs,IsLocalFileSystemWebService,The length of the statement  "	if (((wsUri.Port >= 1024) && (string.Compare (wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))) { " is 123.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFMSIServices,Logout,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFMSIServices\Reference.cs,OnCallLogoutOperationCompleted,The length of the statement  "		System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg)); " is 132.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFMSIServices,Logout,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFMSIServices\Reference.cs,OnCallLogoutOperationCompleted,The length of the statement  "		this.CallLogoutCompleted (this' new CallLogoutCompletedEventArgs (invokeArgs.Results' invokeArgs.Error' invokeArgs.Cancelled' invokeArgs.UserState)); " is 149.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFMSIServices,Logout,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFMSIServices\Reference.cs,IsLocalFileSystemWebService,The length of the statement  "	if (((wsUri.Port >= 1024) && (string.Compare (wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))) { " is 123.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFMSIServices,Login,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFMSIServices\Reference.cs,OnCallLoginOperationCompleted,The length of the statement  "		System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg)); " is 132.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFMSIServices,Login,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFMSIServices\Reference.cs,OnCallLoginOperationCompleted,The length of the statement  "		this.CallLoginCompleted (this' new CallLoginCompletedEventArgs (invokeArgs.Results' invokeArgs.Error' invokeArgs.Cancelled' invokeArgs.UserState)); " is 147.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFMSIServices,Login,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFMSIServices\Reference.cs,IsLocalFileSystemWebService,The length of the statement  "	if (((wsUri.Port >= 1024) && (string.Compare (wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))) { " is 123.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFTransmitterServicesMTOM,SendSubmissions,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFTransmitterServicesMTOM\Reference.cs,CallSendSubmissionsAsync,The length of the statement  "		this.CallSendSubmissionsOperationCompleted = new System.Threading.SendOrPostCallback (this.OnCallSendSubmissionsOperationCompleted); " is 132.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFTransmitterServicesMTOM,SendSubmissions,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFTransmitterServicesMTOM\Reference.cs,OnCallSendSubmissionsOperationCompleted,The length of the statement  "		System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg)); " is 132.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFTransmitterServicesMTOM,SendSubmissions,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFTransmitterServicesMTOM\Reference.cs,OnCallSendSubmissionsOperationCompleted,The length of the statement  "		this.CallSendSubmissionsCompleted (this' new CallSendSubmissionsCompletedEventArgs (invokeArgs.Results' invokeArgs.Error' invokeArgs.Cancelled' invokeArgs.UserState)); " is 167.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFTransmitterServicesMTOM,SendSubmissions,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFTransmitterServicesMTOM\Reference.cs,IsLocalFileSystemWebService,The length of the statement  "	if (((wsUri.Port >= 1024) && (string.Compare (wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))) { " is 123.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFTransmitterServicesMTOM,GetNewAcks,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFTransmitterServicesMTOM\Reference.cs,CallGetNewAcksAsync,The length of the statement  "		this.CallGetNewAcksOperationCompleted = new System.Threading.SendOrPostCallback (this.OnCallGetNewAcksOperationCompleted); " is 122.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFTransmitterServicesMTOM,GetNewAcks,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFTransmitterServicesMTOM\Reference.cs,OnCallGetNewAcksOperationCompleted,The length of the statement  "		System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg)); " is 132.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFTransmitterServicesMTOM,GetNewAcks,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFTransmitterServicesMTOM\Reference.cs,OnCallGetNewAcksOperationCompleted,The length of the statement  "		this.CallGetNewAcksCompleted (this' new CallGetNewAcksCompletedEventArgs (invokeArgs.Results' invokeArgs.Error' invokeArgs.Cancelled' invokeArgs.UserState)); " is 157.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFTransmitterServicesMTOM,GetNewAcks,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFTransmitterServicesMTOM\Reference.cs,IsLocalFileSystemWebService,The length of the statement  "	if (((wsUri.Port >= 1024) && (string.Compare (wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))) { " is 123.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFTransmitterServicesMTOM,GetAcks,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFTransmitterServicesMTOM\Reference.cs,OnCallGetAcksOperationCompleted,The length of the statement  "		System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg)); " is 132.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFTransmitterServicesMTOM,GetAcks,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFTransmitterServicesMTOM\Reference.cs,OnCallGetAcksOperationCompleted,The length of the statement  "		this.CallGetAcksCompleted (this' new CallGetAcksCompletedEventArgs (invokeArgs.Results' invokeArgs.Error' invokeArgs.Cancelled' invokeArgs.UserState)); " is 151.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFTransmitterServicesMTOM,GetAcks,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFTransmitterServicesMTOM\Reference.cs,IsLocalFileSystemWebService,The length of the statement  "	if (((wsUri.Port >= 1024) && (string.Compare (wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))) { " is 123.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFTransmitterServicesMTOM,GetAck,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFTransmitterServicesMTOM\Reference.cs,OnCallGetAckOperationCompleted,The length of the statement  "		System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg)); " is 132.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFTransmitterServicesMTOM,GetAck,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFTransmitterServicesMTOM\Reference.cs,OnCallGetAckOperationCompleted,The length of the statement  "		this.CallGetAckCompleted (this' new CallGetAckCompletedEventArgs (invokeArgs.Results' invokeArgs.Error' invokeArgs.Cancelled' invokeArgs.UserState)); " is 149.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFTransmitterServicesMTOM,GetAck,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFTransmitterServicesMTOM\Reference.cs,IsLocalFileSystemWebService,The length of the statement  "	if (((wsUri.Port >= 1024) && (string.Compare (wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))) { " is 123.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFTransmitterServicesMTOM,GetNewSubmissionsStatus,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFTransmitterServicesMTOM\Reference.cs,CallGetNewSubmissionsStatusAsync,The length of the statement  "		this.CallGetNewSubmissionsStatusOperationCompleted = new System.Threading.SendOrPostCallback (this.OnCallGetNewSubmissionsStatusOperationCompleted); " is 148.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFTransmitterServicesMTOM,GetNewSubmissionsStatus,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFTransmitterServicesMTOM\Reference.cs,OnCallGetNewSubmissionsStatusOperationCompleted,The length of the statement  "		System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg)); " is 132.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFTransmitterServicesMTOM,GetNewSubmissionsStatus,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFTransmitterServicesMTOM\Reference.cs,OnCallGetNewSubmissionsStatusOperationCompleted,The length of the statement  "		this.CallGetNewSubmissionsStatusCompleted (this' new CallGetNewSubmissionsStatusCompletedEventArgs (invokeArgs.Results' invokeArgs.Error' invokeArgs.Cancelled' invokeArgs.UserState)); " is 183.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFTransmitterServicesMTOM,GetNewSubmissionsStatus,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFTransmitterServicesMTOM\Reference.cs,IsLocalFileSystemWebService,The length of the statement  "	if (((wsUri.Port >= 1024) && (string.Compare (wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))) { " is 123.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFTransmitterServicesMTOM,GetSubmissionsStatus,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFTransmitterServicesMTOM\Reference.cs,CallGetSubmissionsStatusAsync,The length of the statement  "		this.CallGetSubmissionsStatusOperationCompleted = new System.Threading.SendOrPostCallback (this.OnCallGetSubmissionsStatusOperationCompleted); " is 142.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFTransmitterServicesMTOM,GetSubmissionsStatus,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFTransmitterServicesMTOM\Reference.cs,OnCallGetSubmissionsStatusOperationCompleted,The length of the statement  "		System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg)); " is 132.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFTransmitterServicesMTOM,GetSubmissionsStatus,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFTransmitterServicesMTOM\Reference.cs,OnCallGetSubmissionsStatusOperationCompleted,The length of the statement  "		this.CallGetSubmissionsStatusCompleted (this' new CallGetSubmissionsStatusCompletedEventArgs (invokeArgs.Results' invokeArgs.Error' invokeArgs.Cancelled' invokeArgs.UserState)); " is 177.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFTransmitterServicesMTOM,GetSubmissionsStatus,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFTransmitterServicesMTOM\Reference.cs,IsLocalFileSystemWebService,The length of the statement  "	if (((wsUri.Port >= 1024) && (string.Compare (wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))) { " is 123.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFTransmitterServicesMTOM,GetSubmissionStatus,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFTransmitterServicesMTOM\Reference.cs,CallGetSubmissionStatusAsync,The length of the statement  "		this.CallGetSubmissionStatusOperationCompleted = new System.Threading.SendOrPostCallback (this.OnCallGetSubmissionStatusOperationCompleted); " is 140.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFTransmitterServicesMTOM,GetSubmissionStatus,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFTransmitterServicesMTOM\Reference.cs,OnCallGetSubmissionStatusOperationCompleted,The length of the statement  "		System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg)); " is 132.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFTransmitterServicesMTOM,GetSubmissionStatus,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFTransmitterServicesMTOM\Reference.cs,OnCallGetSubmissionStatusOperationCompleted,The length of the statement  "		this.CallGetSubmissionStatusCompleted (this' new CallGetSubmissionStatusCompletedEventArgs (invokeArgs.Results' invokeArgs.Error' invokeArgs.Cancelled' invokeArgs.UserState)); " is 175.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFTransmitterServicesMTOM,GetSubmissionStatus,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFTransmitterServicesMTOM\Reference.cs,IsLocalFileSystemWebService,The length of the statement  "	if (((wsUri.Port >= 1024) && (string.Compare (wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))) { " is 123.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFTransmitterServicesMTOM,GetAcksByMsgID,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFTransmitterServicesMTOM\Reference.cs,CallGetAcksByMsgIDAsync,The length of the statement  "		this.CallGetAcksByMsgIDOperationCompleted = new System.Threading.SendOrPostCallback (this.OnCallGetAcksByMsgIDOperationCompleted); " is 130.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFTransmitterServicesMTOM,GetAcksByMsgID,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFTransmitterServicesMTOM\Reference.cs,OnCallGetAcksByMsgIDOperationCompleted,The length of the statement  "		System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg)); " is 132.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFTransmitterServicesMTOM,GetAcksByMsgID,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFTransmitterServicesMTOM\Reference.cs,OnCallGetAcksByMsgIDOperationCompleted,The length of the statement  "		this.CallGetAcksByMsgIDCompleted (this' new CallGetAcksByMsgIDCompletedEventArgs (invokeArgs.Results' invokeArgs.Error' invokeArgs.Cancelled' invokeArgs.UserState)); " is 165.
Long Statement,JTL.Tax1040.EfileServices.PingService.MeFTransmitterServicesMTOM,GetAcksByMsgID,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFTransmitterServicesMTOM\Reference.cs,IsLocalFileSystemWebService,The length of the statement  "	if (((wsUri.Port >= 1024) && (string.Compare (wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))) { " is 123.
Complex Conditional,JTL.Tax1040.EfileServices.PingService,Utilities,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Business\Utilities.cs,SendMail,The conditional expression  "null != ConfigurationManager.AppSettings ["MailServerHost"] && null != ConfigurationManager.AppSettings ["FromAddress"] && null != ConfigurationManager.AppSettings ["ToAddress"] && null != ConfigurationManager.AppSettings ["BccAddress"] && null != ConfigurationManager.AppSettings ["DefaultSubject"]"  is complex.
Complex Conditional,JTL.Tax1040.EfileServices.PingService,Utilities,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Business\Utilities.cs,SendMail,The conditional expression  "!string.IsNullOrEmpty (host) && !string.IsNullOrEmpty (frommail) && !string.IsNullOrEmpty (tomail) && !string.IsNullOrEmpty (bccmail) && !string.IsNullOrEmpty (Subject)"  is complex.
Complex Conditional,JTL.Tax1040.EfileServices.PingService,GetAck,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\GetAck.cs,GetSecurityInfo,The conditional expression  "htSecurityInfo.Contains ("Password") && !string.IsNullOrEmpty (htSecurityInfo ["Password"].ToString ()) && htSecurityInfo.Contains ("EncryptKey") && !string.IsNullOrEmpty (htSecurityInfo ["EncryptKey"].ToString ())"  is complex.
Magic Number,JTL.Tax1040.EfileServices.PingService,Utilities,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Business\Utilities.cs,GetMessageID,The following statement contains a magic number: try {  	int SequenceLength = 8;  	String _allowedChars = "abcdefghijkmnopqrstuvwxyz0123456789";  	Byte[] randomBytes = new Byte[SequenceLength];  	RNGCryptoServiceProvider rng = new RNGCryptoServiceProvider ();  	rng.GetBytes (randomBytes);  	char[] chars = new char[SequenceLength];  	int allowedCharCount = _allowedChars.Length;  	for (int i = 0; i < SequenceLength; i++) {  		chars [i] = _allowedChars [(int)randomBytes [i] % allowedCharCount];  	}  	string result = ETIN + ToJDEDate (DateTime.Today) + new string (chars);  	return result;  }  catch {  	throw;  }  
Magic Number,JTL.Tax1040.EfileServices.PingService,GetAck,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\GetAck.cs,GetAcknowledgement,The following statement contains a magic number: try {  	GetAckBL getAckBL = new GetAckBL ();  	foreach (string subID in subIds) {  		AckError = false;  		getAckBL.SetStatus (subID' Stage.GetAcknowledgement' State.Blank);  		bool ISFailedAck = false;  		bool iRSReceivedSucc = false;  		byte[] ackArray = null;  		MeFTransmitterServicesMTOM.GetAck getAck = new MeFTransmitterServicesMTOM.GetAck ();  		try {  			ConfigureProxy (getAck);  			getAck.Url = URL + "mtom/GetAck";  			getAck.MeF = FillMefHeaderGetAcks ();  			MeFTransmitterServicesMTOM.GetAckRequestType getAcksRequest = new MeFTransmitterServicesMTOM.GetAckRequestType ();  			getAck.RequireMtom = true;  			getAck.Timeout = timeout;  			getAcksRequest.SubmissionId = subID;  			MeFTransmitterServicesMTOM.GetAckResponseType getAckResponse = new MeFTransmitterServicesMTOM.GetAckResponseType ();  			//invokes getAck method of IRS service  			getAckResponse = getAck.CallGetAck (getAcksRequest);  			GetAckDE getAckDE;  			if (getAckResponse != null) {  				ackArray = getAckResponse.AcknowledgementAttachmentMTOM.Value;  				FileStream fileStream = null;  				fileStream = File.Create (AcknowledgementStoringPath + subID + ".Zip");  				fileStream.Write (ackArray' 0' ackArray.Length);  				fileStream.Close ();  				//unzips the attachment  				using (ZipInputStream zipIn = new ZipInputStream (File.OpenRead (AcknowledgementStoringPath + subID + ".Zip"))) {  					ZipEntry entry1;  					string attachment = string.Empty;  					while ((entry1 = zipIn.GetNextEntry ()) != null) {  						long size = entry1.Size;  						byte[] data = new byte[ackArray.Length * 12];  						size = zipIn.Read (data' 0' data.Length);  						System.Text.ASCIIEncoding enc = new ASCIIEncoding ();  						attachment = enc.GetString (data);  						attachment = attachment.Replace ("\0"' "");  						getAckDE = new GetAckDE ();  						getAckDE.SubmissionID = subID;  						getAckDE = GetAttachmentError (getAckDE' attachment' subID);  						if (!string.IsNullOrEmpty (getAckDE.AcceptanceStatus)) {  							if (getAckDE.AcceptanceStatus.ToLower () == "rejected") {  								getAckDE.Action = "GetAck";  								getAckDE.StatusID = Status.RejectedFromIRS;  								getAckBL.SaveAckAttachmentErrors (getAckDE' Stage.GetAcknowledgement' State.Rejected);  							}  							else if (getAckDE.AcceptanceStatus.ToLower () == "accepted") {  								iRSReceivedSucc = true;  							}  						}  						//Commented By Peter on Nov-04-2009   						//Uncommented By Prabhu on Nov-09-2009  						//FilingStatus was missing in responseXML  						if (!string.IsNullOrEmpty (getAckDE.FilingStatus)) {  							if (getAckDE.FilingStatus.ToLower () == "rejected") {  								getAckDE.Action = "GetAck";  								getAckDE.StatusID = Status.RejectedFromIRS;  								getAckBL.SaveAckAttachmentErrors (getAckDE' Stage.GetAcknowledgement' State.Rejected);  							}  							else if (getAckDE.FilingStatus.ToLower () == "accepted") {  								iRSReceivedSucc = true;  							}  						}  					}  				}  			}  			//checks for an empty 'GetAckResponse' node of the soap body  			ISFailedAck = true;  			if (getAck.ResponseSoapContext.Envelope.Body != null) {  				XmlTextReader reader = null;  				Stream XMLstream = new MemoryStream (ASCIIEncoding.Default.GetBytes (getAck.ResponseSoapContext.Envelope.Body.InnerXml));  				reader = new XmlTextReader (XMLstream);  				object AckResponse1 = reader.NameTable.Add ("ns9:GetAckResponse");  				object AckResponse2 = reader.NameTable.Add ("ns10:GetAckResponse");  				object AckResponse3 = reader.NameTable.Add ("ns11:GetAckResponse");  				reader.WhitespaceHandling = WhitespaceHandling.None;  				while (reader.Read ()) {  					if (reader.NodeType == XmlNodeType.Element) {  						if (reader.Name.Equals (AckResponse1) || reader.Name.Equals (AckResponse2) || reader.Name.Equals (AckResponse3)) {  							ISFailedAck = false;  							break;  						}  						else {  							ISFailedAck = true;  						}  					}  				}  			}  			else {  				ISFailedAck = true;  			}  		}  		catch (Exception ex) {  			ISFailedAck = true;  			WriteException (subID' ex);  		}  		finally {  			string strState = State.Error;  			GetAckDE getAckDE = new GetAckDE ();  			getAckDE.RequestXML = IRSOutputFilter.RequestXML;  			getAckDE.ResponseXML = IRSInputFilter.ResponseXML;  			getAckDE.MessageID = MessageId;  			IRSErrorDE iRSRespErrorDE = new IRSErrorDE ();  			iRSRespErrorDE = GetErrorMessage (getAckDE.ResponseXML' iRSRespErrorDE' subID);  			if (ISFailedAck) {  				strState = State.Error;  				getAckDE.StatusID = Status.FailedToGetAckFromIRS;  			}  			else {  				if (iRSReceivedSucc) {  					strState = State.Success;  					getAckDE.StatusID = Status.IRSSubmissionAccepted;  				}  				else if (iRSRespErrorDE.IsErrorPresent) {  					strState = State.Error;  					getAckDE.Action = "GetAck";  					getAckDE.StatusID = Status.FailedToGetAckFromIRS;  					SendAlertMail (getAckDE.ResponseXML' subID);  				}  				else if (AckError) {  					strState = State.Error;  				}  				else {  					strState = State.Rejected;  					getAckDE.StatusID = Status.RejectedFromIRS;  				}  			}  			getAckDE.Error = iRSRespErrorDE;  			getAckDE.SubmissionID = subID;  			getAckDE.ServiceAction = serviceAction;  			StoreRequestResponseXMLSubmissionError (getAckDE);  			try {  				if (ackArray != null && ackArray.Length > 0) {  					getAckBL.SaveAckAttachment (ackArray' subID' Stage.GetAcknowledgement' strState);  				}  				else {  					getAckBL.SetStatus (subID' Stage.GetAcknowledgement' strState);  				}  			}  			catch (Exception ex) {  				WriteException (subID' ex);  			}  			IRSOutputFilter.RequestXML = null;  			IRSInputFilter.ResponseXML = null;  		}  	}  }  catch (Exception exp) {  	eventLog1.WriteEntry (exp.ToString ()' EventLogEntryType.Error);  }  
Magic Number,JTL.Tax1040.EfileServices.PingService,GetAck,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\GetAck.cs,GetAcknowledgement,The following statement contains a magic number: foreach (string subID in subIds) {  	AckError = false;  	getAckBL.SetStatus (subID' Stage.GetAcknowledgement' State.Blank);  	bool ISFailedAck = false;  	bool iRSReceivedSucc = false;  	byte[] ackArray = null;  	MeFTransmitterServicesMTOM.GetAck getAck = new MeFTransmitterServicesMTOM.GetAck ();  	try {  		ConfigureProxy (getAck);  		getAck.Url = URL + "mtom/GetAck";  		getAck.MeF = FillMefHeaderGetAcks ();  		MeFTransmitterServicesMTOM.GetAckRequestType getAcksRequest = new MeFTransmitterServicesMTOM.GetAckRequestType ();  		getAck.RequireMtom = true;  		getAck.Timeout = timeout;  		getAcksRequest.SubmissionId = subID;  		MeFTransmitterServicesMTOM.GetAckResponseType getAckResponse = new MeFTransmitterServicesMTOM.GetAckResponseType ();  		//invokes getAck method of IRS service  		getAckResponse = getAck.CallGetAck (getAcksRequest);  		GetAckDE getAckDE;  		if (getAckResponse != null) {  			ackArray = getAckResponse.AcknowledgementAttachmentMTOM.Value;  			FileStream fileStream = null;  			fileStream = File.Create (AcknowledgementStoringPath + subID + ".Zip");  			fileStream.Write (ackArray' 0' ackArray.Length);  			fileStream.Close ();  			//unzips the attachment  			using (ZipInputStream zipIn = new ZipInputStream (File.OpenRead (AcknowledgementStoringPath + subID + ".Zip"))) {  				ZipEntry entry1;  				string attachment = string.Empty;  				while ((entry1 = zipIn.GetNextEntry ()) != null) {  					long size = entry1.Size;  					byte[] data = new byte[ackArray.Length * 12];  					size = zipIn.Read (data' 0' data.Length);  					System.Text.ASCIIEncoding enc = new ASCIIEncoding ();  					attachment = enc.GetString (data);  					attachment = attachment.Replace ("\0"' "");  					getAckDE = new GetAckDE ();  					getAckDE.SubmissionID = subID;  					getAckDE = GetAttachmentError (getAckDE' attachment' subID);  					if (!string.IsNullOrEmpty (getAckDE.AcceptanceStatus)) {  						if (getAckDE.AcceptanceStatus.ToLower () == "rejected") {  							getAckDE.Action = "GetAck";  							getAckDE.StatusID = Status.RejectedFromIRS;  							getAckBL.SaveAckAttachmentErrors (getAckDE' Stage.GetAcknowledgement' State.Rejected);  						}  						else if (getAckDE.AcceptanceStatus.ToLower () == "accepted") {  							iRSReceivedSucc = true;  						}  					}  					//Commented By Peter on Nov-04-2009   					//Uncommented By Prabhu on Nov-09-2009  					//FilingStatus was missing in responseXML  					if (!string.IsNullOrEmpty (getAckDE.FilingStatus)) {  						if (getAckDE.FilingStatus.ToLower () == "rejected") {  							getAckDE.Action = "GetAck";  							getAckDE.StatusID = Status.RejectedFromIRS;  							getAckBL.SaveAckAttachmentErrors (getAckDE' Stage.GetAcknowledgement' State.Rejected);  						}  						else if (getAckDE.FilingStatus.ToLower () == "accepted") {  							iRSReceivedSucc = true;  						}  					}  				}  			}  		}  		//checks for an empty 'GetAckResponse' node of the soap body  		ISFailedAck = true;  		if (getAck.ResponseSoapContext.Envelope.Body != null) {  			XmlTextReader reader = null;  			Stream XMLstream = new MemoryStream (ASCIIEncoding.Default.GetBytes (getAck.ResponseSoapContext.Envelope.Body.InnerXml));  			reader = new XmlTextReader (XMLstream);  			object AckResponse1 = reader.NameTable.Add ("ns9:GetAckResponse");  			object AckResponse2 = reader.NameTable.Add ("ns10:GetAckResponse");  			object AckResponse3 = reader.NameTable.Add ("ns11:GetAckResponse");  			reader.WhitespaceHandling = WhitespaceHandling.None;  			while (reader.Read ()) {  				if (reader.NodeType == XmlNodeType.Element) {  					if (reader.Name.Equals (AckResponse1) || reader.Name.Equals (AckResponse2) || reader.Name.Equals (AckResponse3)) {  						ISFailedAck = false;  						break;  					}  					else {  						ISFailedAck = true;  					}  				}  			}  		}  		else {  			ISFailedAck = true;  		}  	}  	catch (Exception ex) {  		ISFailedAck = true;  		WriteException (subID' ex);  	}  	finally {  		string strState = State.Error;  		GetAckDE getAckDE = new GetAckDE ();  		getAckDE.RequestXML = IRSOutputFilter.RequestXML;  		getAckDE.ResponseXML = IRSInputFilter.ResponseXML;  		getAckDE.MessageID = MessageId;  		IRSErrorDE iRSRespErrorDE = new IRSErrorDE ();  		iRSRespErrorDE = GetErrorMessage (getAckDE.ResponseXML' iRSRespErrorDE' subID);  		if (ISFailedAck) {  			strState = State.Error;  			getAckDE.StatusID = Status.FailedToGetAckFromIRS;  		}  		else {  			if (iRSReceivedSucc) {  				strState = State.Success;  				getAckDE.StatusID = Status.IRSSubmissionAccepted;  			}  			else if (iRSRespErrorDE.IsErrorPresent) {  				strState = State.Error;  				getAckDE.Action = "GetAck";  				getAckDE.StatusID = Status.FailedToGetAckFromIRS;  				SendAlertMail (getAckDE.ResponseXML' subID);  			}  			else if (AckError) {  				strState = State.Error;  			}  			else {  				strState = State.Rejected;  				getAckDE.StatusID = Status.RejectedFromIRS;  			}  		}  		getAckDE.Error = iRSRespErrorDE;  		getAckDE.SubmissionID = subID;  		getAckDE.ServiceAction = serviceAction;  		StoreRequestResponseXMLSubmissionError (getAckDE);  		try {  			if (ackArray != null && ackArray.Length > 0) {  				getAckBL.SaveAckAttachment (ackArray' subID' Stage.GetAcknowledgement' strState);  			}  			else {  				getAckBL.SetStatus (subID' Stage.GetAcknowledgement' strState);  			}  		}  		catch (Exception ex) {  			WriteException (subID' ex);  		}  		IRSOutputFilter.RequestXML = null;  		IRSInputFilter.ResponseXML = null;  	}  }  
Magic Number,JTL.Tax1040.EfileServices.PingService,GetAck,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\GetAck.cs,GetAcknowledgement,The following statement contains a magic number: try {  	ConfigureProxy (getAck);  	getAck.Url = URL + "mtom/GetAck";  	getAck.MeF = FillMefHeaderGetAcks ();  	MeFTransmitterServicesMTOM.GetAckRequestType getAcksRequest = new MeFTransmitterServicesMTOM.GetAckRequestType ();  	getAck.RequireMtom = true;  	getAck.Timeout = timeout;  	getAcksRequest.SubmissionId = subID;  	MeFTransmitterServicesMTOM.GetAckResponseType getAckResponse = new MeFTransmitterServicesMTOM.GetAckResponseType ();  	//invokes getAck method of IRS service  	getAckResponse = getAck.CallGetAck (getAcksRequest);  	GetAckDE getAckDE;  	if (getAckResponse != null) {  		ackArray = getAckResponse.AcknowledgementAttachmentMTOM.Value;  		FileStream fileStream = null;  		fileStream = File.Create (AcknowledgementStoringPath + subID + ".Zip");  		fileStream.Write (ackArray' 0' ackArray.Length);  		fileStream.Close ();  		//unzips the attachment  		using (ZipInputStream zipIn = new ZipInputStream (File.OpenRead (AcknowledgementStoringPath + subID + ".Zip"))) {  			ZipEntry entry1;  			string attachment = string.Empty;  			while ((entry1 = zipIn.GetNextEntry ()) != null) {  				long size = entry1.Size;  				byte[] data = new byte[ackArray.Length * 12];  				size = zipIn.Read (data' 0' data.Length);  				System.Text.ASCIIEncoding enc = new ASCIIEncoding ();  				attachment = enc.GetString (data);  				attachment = attachment.Replace ("\0"' "");  				getAckDE = new GetAckDE ();  				getAckDE.SubmissionID = subID;  				getAckDE = GetAttachmentError (getAckDE' attachment' subID);  				if (!string.IsNullOrEmpty (getAckDE.AcceptanceStatus)) {  					if (getAckDE.AcceptanceStatus.ToLower () == "rejected") {  						getAckDE.Action = "GetAck";  						getAckDE.StatusID = Status.RejectedFromIRS;  						getAckBL.SaveAckAttachmentErrors (getAckDE' Stage.GetAcknowledgement' State.Rejected);  					}  					else if (getAckDE.AcceptanceStatus.ToLower () == "accepted") {  						iRSReceivedSucc = true;  					}  				}  				//Commented By Peter on Nov-04-2009   				//Uncommented By Prabhu on Nov-09-2009  				//FilingStatus was missing in responseXML  				if (!string.IsNullOrEmpty (getAckDE.FilingStatus)) {  					if (getAckDE.FilingStatus.ToLower () == "rejected") {  						getAckDE.Action = "GetAck";  						getAckDE.StatusID = Status.RejectedFromIRS;  						getAckBL.SaveAckAttachmentErrors (getAckDE' Stage.GetAcknowledgement' State.Rejected);  					}  					else if (getAckDE.FilingStatus.ToLower () == "accepted") {  						iRSReceivedSucc = true;  					}  				}  			}  		}  	}  	//checks for an empty 'GetAckResponse' node of the soap body  	ISFailedAck = true;  	if (getAck.ResponseSoapContext.Envelope.Body != null) {  		XmlTextReader reader = null;  		Stream XMLstream = new MemoryStream (ASCIIEncoding.Default.GetBytes (getAck.ResponseSoapContext.Envelope.Body.InnerXml));  		reader = new XmlTextReader (XMLstream);  		object AckResponse1 = reader.NameTable.Add ("ns9:GetAckResponse");  		object AckResponse2 = reader.NameTable.Add ("ns10:GetAckResponse");  		object AckResponse3 = reader.NameTable.Add ("ns11:GetAckResponse");  		reader.WhitespaceHandling = WhitespaceHandling.None;  		while (reader.Read ()) {  			if (reader.NodeType == XmlNodeType.Element) {  				if (reader.Name.Equals (AckResponse1) || reader.Name.Equals (AckResponse2) || reader.Name.Equals (AckResponse3)) {  					ISFailedAck = false;  					break;  				}  				else {  					ISFailedAck = true;  				}  			}  		}  	}  	else {  		ISFailedAck = true;  	}  }  catch (Exception ex) {  	ISFailedAck = true;  	WriteException (subID' ex);  }  finally {  	string strState = State.Error;  	GetAckDE getAckDE = new GetAckDE ();  	getAckDE.RequestXML = IRSOutputFilter.RequestXML;  	getAckDE.ResponseXML = IRSInputFilter.ResponseXML;  	getAckDE.MessageID = MessageId;  	IRSErrorDE iRSRespErrorDE = new IRSErrorDE ();  	iRSRespErrorDE = GetErrorMessage (getAckDE.ResponseXML' iRSRespErrorDE' subID);  	if (ISFailedAck) {  		strState = State.Error;  		getAckDE.StatusID = Status.FailedToGetAckFromIRS;  	}  	else {  		if (iRSReceivedSucc) {  			strState = State.Success;  			getAckDE.StatusID = Status.IRSSubmissionAccepted;  		}  		else if (iRSRespErrorDE.IsErrorPresent) {  			strState = State.Error;  			getAckDE.Action = "GetAck";  			getAckDE.StatusID = Status.FailedToGetAckFromIRS;  			SendAlertMail (getAckDE.ResponseXML' subID);  		}  		else if (AckError) {  			strState = State.Error;  		}  		else {  			strState = State.Rejected;  			getAckDE.StatusID = Status.RejectedFromIRS;  		}  	}  	getAckDE.Error = iRSRespErrorDE;  	getAckDE.SubmissionID = subID;  	getAckDE.ServiceAction = serviceAction;  	StoreRequestResponseXMLSubmissionError (getAckDE);  	try {  		if (ackArray != null && ackArray.Length > 0) {  			getAckBL.SaveAckAttachment (ackArray' subID' Stage.GetAcknowledgement' strState);  		}  		else {  			getAckBL.SetStatus (subID' Stage.GetAcknowledgement' strState);  		}  	}  	catch (Exception ex) {  		WriteException (subID' ex);  	}  	IRSOutputFilter.RequestXML = null;  	IRSInputFilter.ResponseXML = null;  }  
Magic Number,JTL.Tax1040.EfileServices.PingService,GetAck,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\GetAck.cs,GetAcknowledgement,The following statement contains a magic number: if (getAckResponse != null) {  	ackArray = getAckResponse.AcknowledgementAttachmentMTOM.Value;  	FileStream fileStream = null;  	fileStream = File.Create (AcknowledgementStoringPath + subID + ".Zip");  	fileStream.Write (ackArray' 0' ackArray.Length);  	fileStream.Close ();  	//unzips the attachment  	using (ZipInputStream zipIn = new ZipInputStream (File.OpenRead (AcknowledgementStoringPath + subID + ".Zip"))) {  		ZipEntry entry1;  		string attachment = string.Empty;  		while ((entry1 = zipIn.GetNextEntry ()) != null) {  			long size = entry1.Size;  			byte[] data = new byte[ackArray.Length * 12];  			size = zipIn.Read (data' 0' data.Length);  			System.Text.ASCIIEncoding enc = new ASCIIEncoding ();  			attachment = enc.GetString (data);  			attachment = attachment.Replace ("\0"' "");  			getAckDE = new GetAckDE ();  			getAckDE.SubmissionID = subID;  			getAckDE = GetAttachmentError (getAckDE' attachment' subID);  			if (!string.IsNullOrEmpty (getAckDE.AcceptanceStatus)) {  				if (getAckDE.AcceptanceStatus.ToLower () == "rejected") {  					getAckDE.Action = "GetAck";  					getAckDE.StatusID = Status.RejectedFromIRS;  					getAckBL.SaveAckAttachmentErrors (getAckDE' Stage.GetAcknowledgement' State.Rejected);  				}  				else if (getAckDE.AcceptanceStatus.ToLower () == "accepted") {  					iRSReceivedSucc = true;  				}  			}  			//Commented By Peter on Nov-04-2009   			//Uncommented By Prabhu on Nov-09-2009  			//FilingStatus was missing in responseXML  			if (!string.IsNullOrEmpty (getAckDE.FilingStatus)) {  				if (getAckDE.FilingStatus.ToLower () == "rejected") {  					getAckDE.Action = "GetAck";  					getAckDE.StatusID = Status.RejectedFromIRS;  					getAckBL.SaveAckAttachmentErrors (getAckDE' Stage.GetAcknowledgement' State.Rejected);  				}  				else if (getAckDE.FilingStatus.ToLower () == "accepted") {  					iRSReceivedSucc = true;  				}  			}  		}  	}  }  
Magic Number,JTL.Tax1040.EfileServices.PingService,GetAck,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\GetAck.cs,GetAcknowledgement,The following statement contains a magic number: using (ZipInputStream zipIn = new ZipInputStream (File.OpenRead (AcknowledgementStoringPath + subID + ".Zip"))) {  	ZipEntry entry1;  	string attachment = string.Empty;  	while ((entry1 = zipIn.GetNextEntry ()) != null) {  		long size = entry1.Size;  		byte[] data = new byte[ackArray.Length * 12];  		size = zipIn.Read (data' 0' data.Length);  		System.Text.ASCIIEncoding enc = new ASCIIEncoding ();  		attachment = enc.GetString (data);  		attachment = attachment.Replace ("\0"' "");  		getAckDE = new GetAckDE ();  		getAckDE.SubmissionID = subID;  		getAckDE = GetAttachmentError (getAckDE' attachment' subID);  		if (!string.IsNullOrEmpty (getAckDE.AcceptanceStatus)) {  			if (getAckDE.AcceptanceStatus.ToLower () == "rejected") {  				getAckDE.Action = "GetAck";  				getAckDE.StatusID = Status.RejectedFromIRS;  				getAckBL.SaveAckAttachmentErrors (getAckDE' Stage.GetAcknowledgement' State.Rejected);  			}  			else if (getAckDE.AcceptanceStatus.ToLower () == "accepted") {  				iRSReceivedSucc = true;  			}  		}  		//Commented By Peter on Nov-04-2009   		//Uncommented By Prabhu on Nov-09-2009  		//FilingStatus was missing in responseXML  		if (!string.IsNullOrEmpty (getAckDE.FilingStatus)) {  			if (getAckDE.FilingStatus.ToLower () == "rejected") {  				getAckDE.Action = "GetAck";  				getAckDE.StatusID = Status.RejectedFromIRS;  				getAckBL.SaveAckAttachmentErrors (getAckDE' Stage.GetAcknowledgement' State.Rejected);  			}  			else if (getAckDE.FilingStatus.ToLower () == "accepted") {  				iRSReceivedSucc = true;  			}  		}  	}  }  
Magic Number,JTL.Tax1040.EfileServices.PingService,GetAck,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\GetAck.cs,GetAcknowledgement,The following statement contains a magic number: while ((entry1 = zipIn.GetNextEntry ()) != null) {  	long size = entry1.Size;  	byte[] data = new byte[ackArray.Length * 12];  	size = zipIn.Read (data' 0' data.Length);  	System.Text.ASCIIEncoding enc = new ASCIIEncoding ();  	attachment = enc.GetString (data);  	attachment = attachment.Replace ("\0"' "");  	getAckDE = new GetAckDE ();  	getAckDE.SubmissionID = subID;  	getAckDE = GetAttachmentError (getAckDE' attachment' subID);  	if (!string.IsNullOrEmpty (getAckDE.AcceptanceStatus)) {  		if (getAckDE.AcceptanceStatus.ToLower () == "rejected") {  			getAckDE.Action = "GetAck";  			getAckDE.StatusID = Status.RejectedFromIRS;  			getAckBL.SaveAckAttachmentErrors (getAckDE' Stage.GetAcknowledgement' State.Rejected);  		}  		else if (getAckDE.AcceptanceStatus.ToLower () == "accepted") {  			iRSReceivedSucc = true;  		}  	}  	//Commented By Peter on Nov-04-2009   	//Uncommented By Prabhu on Nov-09-2009  	//FilingStatus was missing in responseXML  	if (!string.IsNullOrEmpty (getAckDE.FilingStatus)) {  		if (getAckDE.FilingStatus.ToLower () == "rejected") {  			getAckDE.Action = "GetAck";  			getAckDE.StatusID = Status.RejectedFromIRS;  			getAckBL.SaveAckAttachmentErrors (getAckDE' Stage.GetAcknowledgement' State.Rejected);  		}  		else if (getAckDE.FilingStatus.ToLower () == "accepted") {  			iRSReceivedSucc = true;  		}  	}  }  
Magic Number,JTL.Tax1040.EfileServices.PingService,GetAck,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\GetAck.cs,DecryptData,The following statement contains a magic number: try {  	//Code added to prevent "System.ArgumentOutOfRangeException: Index and length must refer to alocation within the string".  	if (!string.IsNullOrEmpty (strText) && !string.IsNullOrEmpty (strEncrKey) && (strEncrKey.Length > 7)) {  		byte[] bKey = new byte[8];  		byte[] IV =  {  			0x12'  			0x34'  			0x56'  			0x78'  			0x90'  			0xAB'  			0xCD'  			0xEF  		};  		bKey = System.Text.Encoding.UTF8.GetBytes (strEncrKey.Substring (0' 8));  		des = new DESCryptoServiceProvider ();  		inputByteArray = inputByteArray = Convert.FromBase64String (strText);  		ms = new MemoryStream ();  		CryptoStream cs = new CryptoStream (ms' des.CreateDecryptor (bKey' IV)' CryptoStreamMode.Write);  		cs.Write (inputByteArray' 0' inputByteArray.Length);  		cs.FlushFinalBlock ();  		encoding = System.Text.Encoding.UTF8;  		return encoding.GetString (ms.ToArray ());  	}  	else  		return "";  }  finally {  	des = null;  	inputByteArray = null;  	ms = null;  	encoding = null;  }  
Magic Number,JTL.Tax1040.EfileServices.PingService,GetAck,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\GetAck.cs,DecryptData,The following statement contains a magic number: try {  	//Code added to prevent "System.ArgumentOutOfRangeException: Index and length must refer to alocation within the string".  	if (!string.IsNullOrEmpty (strText) && !string.IsNullOrEmpty (strEncrKey) && (strEncrKey.Length > 7)) {  		byte[] bKey = new byte[8];  		byte[] IV =  {  			0x12'  			0x34'  			0x56'  			0x78'  			0x90'  			0xAB'  			0xCD'  			0xEF  		};  		bKey = System.Text.Encoding.UTF8.GetBytes (strEncrKey.Substring (0' 8));  		des = new DESCryptoServiceProvider ();  		inputByteArray = inputByteArray = Convert.FromBase64String (strText);  		ms = new MemoryStream ();  		CryptoStream cs = new CryptoStream (ms' des.CreateDecryptor (bKey' IV)' CryptoStreamMode.Write);  		cs.Write (inputByteArray' 0' inputByteArray.Length);  		cs.FlushFinalBlock ();  		encoding = System.Text.Encoding.UTF8;  		return encoding.GetString (ms.ToArray ());  	}  	else  		return "";  }  finally {  	des = null;  	inputByteArray = null;  	ms = null;  	encoding = null;  }  
Magic Number,JTL.Tax1040.EfileServices.PingService,GetAck,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\GetAck.cs,DecryptData,The following statement contains a magic number: try {  	//Code added to prevent "System.ArgumentOutOfRangeException: Index and length must refer to alocation within the string".  	if (!string.IsNullOrEmpty (strText) && !string.IsNullOrEmpty (strEncrKey) && (strEncrKey.Length > 7)) {  		byte[] bKey = new byte[8];  		byte[] IV =  {  			0x12'  			0x34'  			0x56'  			0x78'  			0x90'  			0xAB'  			0xCD'  			0xEF  		};  		bKey = System.Text.Encoding.UTF8.GetBytes (strEncrKey.Substring (0' 8));  		des = new DESCryptoServiceProvider ();  		inputByteArray = inputByteArray = Convert.FromBase64String (strText);  		ms = new MemoryStream ();  		CryptoStream cs = new CryptoStream (ms' des.CreateDecryptor (bKey' IV)' CryptoStreamMode.Write);  		cs.Write (inputByteArray' 0' inputByteArray.Length);  		cs.FlushFinalBlock ();  		encoding = System.Text.Encoding.UTF8;  		return encoding.GetString (ms.ToArray ());  	}  	else  		return "";  }  finally {  	des = null;  	inputByteArray = null;  	ms = null;  	encoding = null;  }  
Magic Number,JTL.Tax1040.EfileServices.PingService,GetAck,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\GetAck.cs,DecryptData,The following statement contains a magic number: if (!string.IsNullOrEmpty (strText) && !string.IsNullOrEmpty (strEncrKey) && (strEncrKey.Length > 7)) {  	byte[] bKey = new byte[8];  	byte[] IV =  {  		0x12'  		0x34'  		0x56'  		0x78'  		0x90'  		0xAB'  		0xCD'  		0xEF  	};  	bKey = System.Text.Encoding.UTF8.GetBytes (strEncrKey.Substring (0' 8));  	des = new DESCryptoServiceProvider ();  	inputByteArray = inputByteArray = Convert.FromBase64String (strText);  	ms = new MemoryStream ();  	CryptoStream cs = new CryptoStream (ms' des.CreateDecryptor (bKey' IV)' CryptoStreamMode.Write);  	cs.Write (inputByteArray' 0' inputByteArray.Length);  	cs.FlushFinalBlock ();  	encoding = System.Text.Encoding.UTF8;  	return encoding.GetString (ms.ToArray ());  }  else  	return "";  
Magic Number,JTL.Tax1040.EfileServices.PingService,GetAck,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\GetAck.cs,DecryptData,The following statement contains a magic number: if (!string.IsNullOrEmpty (strText) && !string.IsNullOrEmpty (strEncrKey) && (strEncrKey.Length > 7)) {  	byte[] bKey = new byte[8];  	byte[] IV =  {  		0x12'  		0x34'  		0x56'  		0x78'  		0x90'  		0xAB'  		0xCD'  		0xEF  	};  	bKey = System.Text.Encoding.UTF8.GetBytes (strEncrKey.Substring (0' 8));  	des = new DESCryptoServiceProvider ();  	inputByteArray = inputByteArray = Convert.FromBase64String (strText);  	ms = new MemoryStream ();  	CryptoStream cs = new CryptoStream (ms' des.CreateDecryptor (bKey' IV)' CryptoStreamMode.Write);  	cs.Write (inputByteArray' 0' inputByteArray.Length);  	cs.FlushFinalBlock ();  	encoding = System.Text.Encoding.UTF8;  	return encoding.GetString (ms.ToArray ());  }  else  	return "";  
Magic Number,JTL.Tax1040.EfileServices.PingService,GetAck,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\GetAck.cs,DecryptData,The following statement contains a magic number: if (!string.IsNullOrEmpty (strText) && !string.IsNullOrEmpty (strEncrKey) && (strEncrKey.Length > 7)) {  	byte[] bKey = new byte[8];  	byte[] IV =  {  		0x12'  		0x34'  		0x56'  		0x78'  		0x90'  		0xAB'  		0xCD'  		0xEF  	};  	bKey = System.Text.Encoding.UTF8.GetBytes (strEncrKey.Substring (0' 8));  	des = new DESCryptoServiceProvider ();  	inputByteArray = inputByteArray = Convert.FromBase64String (strText);  	ms = new MemoryStream ();  	CryptoStream cs = new CryptoStream (ms' des.CreateDecryptor (bKey' IV)' CryptoStreamMode.Write);  	cs.Write (inputByteArray' 0' inputByteArray.Length);  	cs.FlushFinalBlock ();  	encoding = System.Text.Encoding.UTF8;  	return encoding.GetString (ms.ToArray ());  }  else  	return "";  
Magic Number,JTL.Tax1040.EfileServices.PingService,GetAck,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\GetAck.cs,DecryptData,The following statement contains a magic number: bKey = System.Text.Encoding.UTF8.GetBytes (strEncrKey.Substring (0' 8));  
Magic Number,JTL.Tax1040.EfileServices.PingService.ETECTransmitterServicesMTOM,GetNew2290Schedule1s,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\ETECTransmitterServicesMTOM\Reference.cs,IsLocalFileSystemWebService,The following statement contains a magic number: if (((wsUri.Port >= 1024) && (string.Compare (wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))) {  	return true;  }  
Magic Number,JTL.Tax1040.EfileServices.PingService.ETECTransmitterServicesMTOM,Get2290Schedule1s,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\ETECTransmitterServicesMTOM\Reference.cs,IsLocalFileSystemWebService,The following statement contains a magic number: if (((wsUri.Port >= 1024) && (string.Compare (wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))) {  	return true;  }  
Magic Number,JTL.Tax1040.EfileServices.PingService.ETECTransmitterServicesMTOM,Get2290Schedule1,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\ETECTransmitterServicesMTOM\Reference.cs,IsLocalFileSystemWebService,The following statement contains a magic number: if (((wsUri.Port >= 1024) && (string.Compare (wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))) {  	return true;  }  
Magic Number,JTL.Tax1040.EfileServices.PingService.ETECTransmitterServicesMTOM,Get2290Schedule1sByMsgID,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\ETECTransmitterServicesMTOM\Reference.cs,IsLocalFileSystemWebService,The following statement contains a magic number: if (((wsUri.Port >= 1024) && (string.Compare (wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))) {  	return true;  }  
Magic Number,JTL.Tax1040.EfileServices.PingService.MeFMSIServices,ChangePassword,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFMSIServices\Reference.cs,IsLocalFileSystemWebService,The following statement contains a magic number: if (((wsUri.Port >= 1024) && (string.Compare (wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))) {  	return true;  }  
Magic Number,JTL.Tax1040.EfileServices.PingService.MeFMSIServices,EtinRetrieval,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFMSIServices\Reference.cs,IsLocalFileSystemWebService,The following statement contains a magic number: if (((wsUri.Port >= 1024) && (string.Compare (wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))) {  	return true;  }  
Magic Number,JTL.Tax1040.EfileServices.PingService.MeFMSIServices,EtinStatus,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFMSIServices\Reference.cs,IsLocalFileSystemWebService,The following statement contains a magic number: if (((wsUri.Port >= 1024) && (string.Compare (wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))) {  	return true;  }  
Magic Number,JTL.Tax1040.EfileServices.PingService.MeFMSIServices,GetStateParticipantsList,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFMSIServices\Reference.cs,IsLocalFileSystemWebService,The following statement contains a magic number: if (((wsUri.Port >= 1024) && (string.Compare (wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))) {  	return true;  }  
Magic Number,JTL.Tax1040.EfileServices.PingService.MeFMSIServices,InitialLogin,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFMSIServices\Reference.cs,IsLocalFileSystemWebService,The following statement contains a magic number: if (((wsUri.Port >= 1024) && (string.Compare (wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))) {  	return true;  }  
Magic Number,JTL.Tax1040.EfileServices.PingService.MeFMSIServices,Logout,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFMSIServices\Reference.cs,IsLocalFileSystemWebService,The following statement contains a magic number: if (((wsUri.Port >= 1024) && (string.Compare (wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))) {  	return true;  }  
Magic Number,JTL.Tax1040.EfileServices.PingService.MeFMSIServices,Login,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFMSIServices\Reference.cs,IsLocalFileSystemWebService,The following statement contains a magic number: if (((wsUri.Port >= 1024) && (string.Compare (wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))) {  	return true;  }  
Magic Number,JTL.Tax1040.EfileServices.PingService.MeFTransmitterServicesMTOM,SendSubmissions,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFTransmitterServicesMTOM\Reference.cs,IsLocalFileSystemWebService,The following statement contains a magic number: if (((wsUri.Port >= 1024) && (string.Compare (wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))) {  	return true;  }  
Magic Number,JTL.Tax1040.EfileServices.PingService.MeFTransmitterServicesMTOM,GetNewAcks,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFTransmitterServicesMTOM\Reference.cs,IsLocalFileSystemWebService,The following statement contains a magic number: if (((wsUri.Port >= 1024) && (string.Compare (wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))) {  	return true;  }  
Magic Number,JTL.Tax1040.EfileServices.PingService.MeFTransmitterServicesMTOM,GetAcks,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFTransmitterServicesMTOM\Reference.cs,IsLocalFileSystemWebService,The following statement contains a magic number: if (((wsUri.Port >= 1024) && (string.Compare (wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))) {  	return true;  }  
Magic Number,JTL.Tax1040.EfileServices.PingService.MeFTransmitterServicesMTOM,GetAck,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFTransmitterServicesMTOM\Reference.cs,IsLocalFileSystemWebService,The following statement contains a magic number: if (((wsUri.Port >= 1024) && (string.Compare (wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))) {  	return true;  }  
Magic Number,JTL.Tax1040.EfileServices.PingService.MeFTransmitterServicesMTOM,GetNewSubmissionsStatus,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFTransmitterServicesMTOM\Reference.cs,IsLocalFileSystemWebService,The following statement contains a magic number: if (((wsUri.Port >= 1024) && (string.Compare (wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))) {  	return true;  }  
Magic Number,JTL.Tax1040.EfileServices.PingService.MeFTransmitterServicesMTOM,GetSubmissionsStatus,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFTransmitterServicesMTOM\Reference.cs,IsLocalFileSystemWebService,The following statement contains a magic number: if (((wsUri.Port >= 1024) && (string.Compare (wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))) {  	return true;  }  
Magic Number,JTL.Tax1040.EfileServices.PingService.MeFTransmitterServicesMTOM,GetSubmissionStatus,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFTransmitterServicesMTOM\Reference.cs,IsLocalFileSystemWebService,The following statement contains a magic number: if (((wsUri.Port >= 1024) && (string.Compare (wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))) {  	return true;  }  
Magic Number,JTL.Tax1040.EfileServices.PingService.MeFTransmitterServicesMTOM,GetAcksByMsgID,C:\repos\vivekkumarm_Tax1040EZ\POC\EfileService\JTL.Tax1040.EfileServices\JTL.Tax1040.EfileServices.PingService\Web References\MeFTransmitterServicesMTOM\Reference.cs,IsLocalFileSystemWebService,The following statement contains a magic number: if (((wsUri.Port >= 1024) && (string.Compare (wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))) {  	return true;  }  
