Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Appccelerate.EvaluationEngine.Aggregators,ExpressionAggregatorTest,D:\research\architectureSmells\repos\appccelerate_appccelerate\source\Appccelerate.EvaluationEngine.Test\Aggregators\ExpressionAggregatorTest.cs,DescribesItselfWithSeedAndAggregationFunction,The length of the statement  "            description.Should().Be("expression aggregator with seed 'seed' and aggregate function (aggregate' value) => (aggregate + value)"); " is 131.
Long Statement,Appccelerate.EvaluationEngine.Internals,DefinitionTest,D:\research\architectureSmells\repos\appccelerate_appccelerate\source\Appccelerate.EvaluationEngine.Test\Internals\DefinitionTest.cs,ReturnsExpressionProvidersOfExpressionProviderSetsWhichConditionIsMetByTheQuestion,The length of the statement  "            var provider1InMatchingSet = new SingleExpressionProvider<TestQuestion' Answer' Parameter' ExpressionResult>(q => new TestExpression()); " is 136.
Long Statement,Appccelerate.EvaluationEngine.Internals,DefinitionTest,D:\research\architectureSmells\repos\appccelerate_appccelerate\source\Appccelerate.EvaluationEngine.Test\Internals\DefinitionTest.cs,ReturnsExpressionProvidersOfExpressionProviderSetsWhichConditionIsMetByTheQuestion,The length of the statement  "            var provider2InMatchingSet = new SingleExpressionProvider<TestQuestion' Answer' Parameter' ExpressionResult>(q => new TestExpression()); " is 136.
Long Statement,Appccelerate.EvaluationEngine.Internals,DefinitionTest,D:\research\architectureSmells\repos\appccelerate_appccelerate\source\Appccelerate.EvaluationEngine.Test\Internals\DefinitionTest.cs,ReturnsExpressionProvidersOfExpressionProviderSetsWhichConditionIsMetByTheQuestion,The length of the statement  "            this.testee.AddExpressionProviderSet(CreateSet(q => false' new SingleExpressionProvider<TestQuestion' Answer' Parameter' ExpressionResult>(q => new TestExpression()))); " is 168.
Long Statement,Appccelerate.EvaluationEngine.Internals,DefinitionTest,D:\research\architectureSmells\repos\appccelerate_appccelerate\source\Appccelerate.EvaluationEngine.Test\Internals\DefinitionTest.cs,CopiesExpressionProviderSetsToClone,The length of the statement  "            var providers = clone.As<Definition<TestQuestion' Answer' Parameter' ExpressionResult>>().GetExpressionProviders(question); " is 123.
Long Statement,Appccelerate.EvaluationEngine.Internals,EngineAnswerTest,D:\research\architectureSmells\repos\appccelerate_appccelerate\source\Appccelerate.EvaluationEngine.Test\Internals\EngineAnswerTest.cs,AnswersQuestionsByExecutingTheStategyReturnedByTheDefinitionReturnedByTheDefinitionHostForTheQuestion,The length of the statement  "            strategyMock.Setup(strategy => strategy.Execute(question' Parameter' definitionMock.Object' It.IsAny<Context>())).Returns(Answer); " is 130.
Long Statement,Appccelerate.EvaluationEngine.Internals,EngineAnswerTest,D:\research\architectureSmells\repos\appccelerate_appccelerate\source\Appccelerate.EvaluationEngine.Test\Internals\EngineAnswerTest.cs,ThrowsException_WhenNoStrategyExists,The length of the statement  "            this.definitionHostMock.Setup(host => host.FindDefinition<string>(typeof(TestQuestion))).Returns(definitionMock.Object); " is 120.
Long Statement,Appccelerate.EvaluationEngine.ExpressionProviders,InlineExpressionProviderTest,D:\research\architectureSmells\repos\appccelerate_appccelerate\source\Appccelerate.EvaluationEngine.Test\ExpressionProviders\InlineExpressionProviderTest.cs,ReturnsExpressionForSpecifiedFunc,The length of the statement  "            IEnumerable<IExpression<string' string>> expressions = testee.GetExpressions(new TestQuestion { Value = "Q" }).ToList(); " is 120.
Long Statement,Appccelerate.EvaluationEngine.ExpressionProviders,InlineExpressionProviderTest,D:\research\architectureSmells\repos\appccelerate_appccelerate\source\Appccelerate.EvaluationEngine.Test\ExpressionProviders\InlineExpressionProviderTest.cs,ReturnsExpressionForSpecifiedFunc,The length of the statement  "            expressions.ElementAt(0).Evaluate("P").Should().Be("QP"' "question and parameter must be passed to inline expression."); " is 120.
Magic Number,Appccelerate.EvaluationEngine.Aggregators,ExpressionAggregatorTest,D:\research\architectureSmells\repos\appccelerate_appccelerate\source\Appccelerate.EvaluationEngine.Test\Aggregators\ExpressionAggregatorTest.cs,AggregatesResultsOfEvaluatedExpressionsWithSpecifiedAggregationFunction,The following statement contains a magic number: var expressions = new IExpression<int' int>[]                  {                      new TestExpression { Value = 1 }'                      new TestExpression { Value = 2 }                  };
Magic Number,Appccelerate.EvaluationEngine.Aggregators,ExpressionAggregatorTest,D:\research\architectureSmells\repos\appccelerate_appccelerate\source\Appccelerate.EvaluationEngine.Test\Aggregators\ExpressionAggregatorTest.cs,AggregatesResultsOfEvaluatedExpressionsWithSpecifiedAggregationFunction,The following statement contains a magic number: var answer = testee.Aggregate(expressions' 5' new Context());
Magic Number,Appccelerate.EvaluationEngine.Aggregators,SingleExpressionAggregatorTest,D:\research\architectureSmells\repos\appccelerate_appccelerate\source\Appccelerate.EvaluationEngine.Test\Aggregators\SingleExpressionAggregatorTest.cs,AggregatesByReturningTheValueReturnedByTheExpression,The following statement contains a magic number: const int Parameter = 7;
Magic Number,Appccelerate.EvaluationEngine.Aggregators,SingleExpressionAggregatorTest,D:\research\architectureSmells\repos\appccelerate_appccelerate\source\Appccelerate.EvaluationEngine.Test\Aggregators\SingleExpressionAggregatorTest.cs,ThrowsException_WhenAggregatingNoExpression,The following statement contains a magic number: const int Parameter = 7;
Magic Number,Appccelerate.EvaluationEngine.Aggregators,SingleExpressionAggregatorTest,D:\research\architectureSmells\repos\appccelerate_appccelerate\source\Appccelerate.EvaluationEngine.Test\Aggregators\SingleExpressionAggregatorTest.cs,ThrowsException_WhenAggregatingSeveralExpressions,The following statement contains a magic number: const int Parameter = 7;
Magic Number,Appccelerate.EvaluationEngine.Internals,DefinitionTest,D:\research\architectureSmells\repos\appccelerate_appccelerate\source\Appccelerate.EvaluationEngine.Test\Internals\DefinitionTest.cs,ReturnsExpressionProvidersOfExpressionProviderSetsWhichConditionIsMetByTheQuestion,The following statement contains a magic number: providers                  .Should().HaveCount(2)                  .And.Equal(provider1InMatchingSet' provider2InMatchingSet);
Magic Number,Appccelerate.EvaluationEngine.Internals,DefinitionTest,D:\research\architectureSmells\repos\appccelerate_appccelerate\source\Appccelerate.EvaluationEngine.Test\Internals\DefinitionTest.cs,CopiesExpressionProviderSetsToClone,The following statement contains a magic number: providers.Should().HaveCount(3);
Magic Number,Appccelerate.EvaluationEngine.Expressions,InlineExpressionTest,D:\research\architectureSmells\repos\appccelerate_appccelerate\source\Appccelerate.EvaluationEngine.Test\Expressions\InlineExpressionTest.cs,EvaluatesFunc,The following statement contains a magic number: const int Result = 3;
Magic Number,Appccelerate.EvaluationEngine.Strategies,AggregatorStrategyTest,D:\research\architectureSmells\repos\appccelerate_appccelerate\source\Appccelerate.EvaluationEngine.Test\Strategies\AggregatorStrategyTest.cs,ExecutesAggregator,The following statement contains a magic number: const int Parameter = 7;
Magic Number,Appccelerate.EvaluationEngine.Strategies,AggregatorStrategyTest,D:\research\architectureSmells\repos\appccelerate_appccelerate\source\Appccelerate.EvaluationEngine.Test\Strategies\AggregatorStrategyTest.cs,ExecutesAggregator_WhenStrategyWithMappingIsUsed,The following statement contains a magic number: const int Parameter = 7;
Magic Number,Appccelerate.EvaluationEngine.Syntax,DefinitionBuilderTest,D:\research\architectureSmells\repos\appccelerate_appccelerate\source\Appccelerate.EvaluationEngine.Test\Syntax\DefinitionBuilderTest.cs,ByEvaluatingWithMultipleExpressionsProvider,The following statement contains a magic number: expressions.Should().HaveCount(2);
Magic Number,Appccelerate.EvaluationEngine.Validation.Aggregators,ValidationAggregatorTest,D:\research\architectureSmells\repos\appccelerate_appccelerate\source\Appccelerate.EvaluationEngine.Test\Validation\Aggregators\ValidationAggregatorTest.cs,ReturnsValid_WhenAllExpressionsAreValid,The following statement contains a magic number: var answer = this.testee.Aggregate(expressions' 7' null);
Magic Number,Appccelerate.EvaluationEngine.Validation.Aggregators,ValidationAggregatorTest,D:\research\architectureSmells\repos\appccelerate_appccelerate\source\Appccelerate.EvaluationEngine.Test\Validation\Aggregators\ValidationAggregatorTest.cs,ReturnsInvalid_WhenAtLeastOneExpressionReturnsInvalid,The following statement contains a magic number: var answer = this.testee.Aggregate(expressions' 7' null);
Magic Number,Appccelerate.EvaluationEngine.Validation.Aggregators,ValidationAggregatorTest,D:\research\architectureSmells\repos\appccelerate_appccelerate\source\Appccelerate.EvaluationEngine.Test\Validation\Aggregators\ValidationAggregatorTest.cs,CombinesViolations_WhenSeveralExpressionsHaveViolations,The following statement contains a magic number: var answer = this.testee.Aggregate(expressions' 7' null);
Magic Number,Appccelerate.EvaluationEngine.Validation.Aggregators,ValidationAggregatorTest,D:\research\architectureSmells\repos\appccelerate_appccelerate\source\Appccelerate.EvaluationEngine.Test\Validation\Aggregators\ValidationAggregatorTest.cs,CombinesViolations_WhenSeveralExpressionsHaveViolations,The following statement contains a magic number: Assert.Equal(3' violations.Count());
Magic Number,Appccelerate.EvaluationEngine.Validation.Aggregators,ValidationAggregatorTest,D:\research\architectureSmells\repos\appccelerate_appccelerate\source\Appccelerate.EvaluationEngine.Test\Validation\Aggregators\ValidationAggregatorTest.cs,CombinesViolations_WhenSeveralExpressionsHaveViolations,The following statement contains a magic number: Assert.Equal(Reason3' violations.ElementAt(2).Reason);
Magic Number,Appccelerate.EvaluationEngine.Validation.Aggregators,ValidationAggregatorTest,D:\research\architectureSmells\repos\appccelerate_appccelerate\source\Appccelerate.EvaluationEngine.Test\Validation\Aggregators\ValidationAggregatorTest.cs,IgnoresExpressionsReturningNull,The following statement contains a magic number: var answer = this.testee.Aggregate(expressions' 7' null);
