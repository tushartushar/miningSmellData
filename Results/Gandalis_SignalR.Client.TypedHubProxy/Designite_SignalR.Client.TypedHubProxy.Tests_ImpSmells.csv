Implementation smell,Namespace,Class,File,Method,Description
Long Method,SignalR.Client.TypedHubProxy.Tests,TypedHubProxyTests,D:\research\architectureSmells\repos\Gandalis_SignalR.Client.TypedHubProxy\src\SignalR.Client.TypedHubProxy.Tests\HubProxyFacts.cs,TestSubscribeOnEventsWithAllPossibleParameters,The method has 100 lines of code.
Long Parameter List,SignalR.Client.TypedHubProxy.Tests.Contracts,TestClientContract,D:\research\architectureSmells\repos\Gandalis_SignalR.Client.TypedHubProxy\src\SignalR.Client.TypedHubProxy.Tests\Contracts\TestClientContract.cs,Passing5Params,The method has 5 parameters. Parameters: param1' param2' param3' param4' param5
Long Parameter List,SignalR.Client.TypedHubProxy.Tests.Contracts,TestClientContract,D:\research\architectureSmells\repos\Gandalis_SignalR.Client.TypedHubProxy\src\SignalR.Client.TypedHubProxy.Tests\Contracts\TestClientContract.cs,Passing6Params,The method has 6 parameters. Parameters: param1' param2' param3' param4' param5' param6
Long Parameter List,SignalR.Client.TypedHubProxy.Tests.Contracts,TestClientContract,D:\research\architectureSmells\repos\Gandalis_SignalR.Client.TypedHubProxy\src\SignalR.Client.TypedHubProxy.Tests\Contracts\TestClientContract.cs,Passing7Params,The method has 7 parameters. Parameters: param1' param2' param3' param4' param5' param6' param7
Long Parameter List,SignalR.Client.TypedHubProxy.Tests.Contracts,IClientContract,D:\research\architectureSmells\repos\Gandalis_SignalR.Client.TypedHubProxy\src\SignalR.Client.TypedHubProxy.Tests\Contracts\IClientContract.cs,Passing5Params,The method has 5 parameters. Parameters: param1' param2' param3' param4' param5
Long Parameter List,SignalR.Client.TypedHubProxy.Tests.Contracts,IClientContract,D:\research\architectureSmells\repos\Gandalis_SignalR.Client.TypedHubProxy\src\SignalR.Client.TypedHubProxy.Tests\Contracts\IClientContract.cs,Passing6Params,The method has 6 parameters. Parameters: param1' param2' param3' param4' param5' param6
Long Parameter List,SignalR.Client.TypedHubProxy.Tests.Contracts,IClientContract,D:\research\architectureSmells\repos\Gandalis_SignalR.Client.TypedHubProxy\src\SignalR.Client.TypedHubProxy.Tests\Contracts\IClientContract.cs,Passing7Params,The method has 7 parameters. Parameters: param1' param2' param3' param4' param5' param6' param7
Long Identifier,SignalR.Client.TypedHubProxy.Tests.Utils,TestConsts,D:\research\architectureSmells\repos\Gandalis_SignalR.Client.TypedHubProxy\src\SignalR.Client.TypedHubProxy.Tests\Utils\TestConsts.cs,,The length of the parameter ERR_PROXY_RECEIVE_EVENT_WHERE_TRUE is 34.
Long Identifier,SignalR.Client.TypedHubProxy.Tests.Utils,TestConsts,D:\research\architectureSmells\repos\Gandalis_SignalR.Client.TypedHubProxy\src\SignalR.Client.TypedHubProxy.Tests\Utils\TestConsts.cs,,The length of the parameter ERR_PROXY_RECEIVE_EVENT_WHERE_FALSE is 35.
Magic Number,SignalR.Client.TypedHubProxy.Tests,TypedHubProxyTests,D:\research\architectureSmells\repos\Gandalis_SignalR.Client.TypedHubProxy\src\SignalR.Client.TypedHubProxy.Tests\HubProxyFacts.cs,TestSubscribeOnEventWhereConditionIsFalse,The following statement contains a magic number: _fixture.Proxy.SubscribeOn<int>(                  eventToBind: hub => hub.Passing1Param'                  wherePredicate: param1 => param1 == 2'                  callback: param1 => notified = true);
Magic Number,SignalR.Client.TypedHubProxy.Tests,TypedHubProxyTests,D:\research\architectureSmells\repos\Gandalis_SignalR.Client.TypedHubProxy\src\SignalR.Client.TypedHubProxy.Tests\HubProxyFacts.cs,TestSubscribeOnEventsWithAllPossibleParameters,The following statement contains a magic number: const int inParam2 = 2;
Magic Number,SignalR.Client.TypedHubProxy.Tests,TypedHubProxyTests,D:\research\architectureSmells\repos\Gandalis_SignalR.Client.TypedHubProxy\src\SignalR.Client.TypedHubProxy.Tests\HubProxyFacts.cs,TestSubscribeOnEventsWithAllPossibleParameters,The following statement contains a magic number: const int inParam3 = 3;
Magic Number,SignalR.Client.TypedHubProxy.Tests,TypedHubProxyTests,D:\research\architectureSmells\repos\Gandalis_SignalR.Client.TypedHubProxy\src\SignalR.Client.TypedHubProxy.Tests\HubProxyFacts.cs,TestSubscribeOnEventsWithAllPossibleParameters,The following statement contains a magic number: const int inParam4 = 4;
Magic Number,SignalR.Client.TypedHubProxy.Tests,TypedHubProxyTests,D:\research\architectureSmells\repos\Gandalis_SignalR.Client.TypedHubProxy\src\SignalR.Client.TypedHubProxy.Tests\HubProxyFacts.cs,TestSubscribeOnEventsWithAllPossibleParameters,The following statement contains a magic number: const int inParam5 = 5;
Magic Number,SignalR.Client.TypedHubProxy.Tests,TypedHubProxyTests,D:\research\architectureSmells\repos\Gandalis_SignalR.Client.TypedHubProxy\src\SignalR.Client.TypedHubProxy.Tests\HubProxyFacts.cs,TestSubscribeOnEventsWithAllPossibleParameters,The following statement contains a magic number: const int inParam6 = 6;
Magic Number,SignalR.Client.TypedHubProxy.Tests,TypedHubProxyTests,D:\research\architectureSmells\repos\Gandalis_SignalR.Client.TypedHubProxy\src\SignalR.Client.TypedHubProxy.Tests\HubProxyFacts.cs,TestSubscribeOnEventsWithAllPossibleParameters,The following statement contains a magic number: const int inParam7 = 7;
Magic Number,SignalR.Client.TypedHubProxy.Tests,TypedHubProxyTests,D:\research\architectureSmells\repos\Gandalis_SignalR.Client.TypedHubProxy\src\SignalR.Client.TypedHubProxy.Tests\HubProxyFacts.cs,TestSubscribeOnAll,The following statement contains a magic number: Action<object[]> actCallback = args =>              {                  args[0].Should().Be(1);                  args[1].Should().Be(2);              };
Magic Number,SignalR.Client.TypedHubProxy.Tests,TypedHubProxyTests,D:\research\architectureSmells\repos\Gandalis_SignalR.Client.TypedHubProxy\src\SignalR.Client.TypedHubProxy.Tests\HubProxyFacts.cs,TestSubscribeOnAll,The following statement contains a magic number: _fixture.HubProxyMock.Object.InvokeEvent(hub => hub.Passing2Params(1' 2));
Magic Number,SignalR.Client.TypedHubProxy.Tests,TypedHubProxyTests,D:\research\architectureSmells\repos\Gandalis_SignalR.Client.TypedHubProxy\src\SignalR.Client.TypedHubProxy.Tests\HubProxyFacts.cs,TestSubscribeOnAllWithMoreThan2ParametersShouldNotFail,The following statement contains a magic number: Action<object[]> actCallback = args =>              {                  args[0].Should().Be(1);                  args[1].Should().Be(2);                  args[2].Should().Be(3);              };
Magic Number,SignalR.Client.TypedHubProxy.Tests,TypedHubProxyTests,D:\research\architectureSmells\repos\Gandalis_SignalR.Client.TypedHubProxy\src\SignalR.Client.TypedHubProxy.Tests\HubProxyFacts.cs,TestSubscribeOnAllWithMoreThan2ParametersShouldNotFail,The following statement contains a magic number: Action<object[]> actCallback = args =>              {                  args[0].Should().Be(1);                  args[1].Should().Be(2);                  args[2].Should().Be(3);              };
Magic Number,SignalR.Client.TypedHubProxy.Tests,TypedHubProxyTests,D:\research\architectureSmells\repos\Gandalis_SignalR.Client.TypedHubProxy\src\SignalR.Client.TypedHubProxy.Tests\HubProxyFacts.cs,TestSubscribeOnAllWithMoreThan2ParametersShouldNotFail,The following statement contains a magic number: Action<object[]> actCallback = args =>              {                  args[0].Should().Be(1);                  args[1].Should().Be(2);                  args[2].Should().Be(3);              };
Magic Number,SignalR.Client.TypedHubProxy.Tests,TypedHubProxyTests,D:\research\architectureSmells\repos\Gandalis_SignalR.Client.TypedHubProxy\src\SignalR.Client.TypedHubProxy.Tests\HubProxyFacts.cs,TestSubscribeOnAllWithMoreThan2ParametersShouldNotFail,The following statement contains a magic number: _fixture.HubProxyMock.Object.InvokeEvent(hub => hub.Passing3Params(1' 2' 3));
Magic Number,SignalR.Client.TypedHubProxy.Tests,TypedHubProxyTests,D:\research\architectureSmells\repos\Gandalis_SignalR.Client.TypedHubProxy\src\SignalR.Client.TypedHubProxy.Tests\HubProxyFacts.cs,TestSubscribeOnAllWithMoreThan2ParametersShouldNotFail,The following statement contains a magic number: _fixture.HubProxyMock.Object.InvokeEvent(hub => hub.Passing3Params(1' 2' 3));
