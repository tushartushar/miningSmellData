Implementation smell,Namespace,Class,File,Method,Description
Complex Method,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,ExplicitRangeAddRemove,Cyclomatic complexity of the method is 12
Complex Method,CSharpTest.Net.BPlusTree.Test,SequenceTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\SequenceTests.cs,SequencedTest,Cyclomatic complexity of the method is 16
Long Parameter List,CSharpTest.Net.BPlusTree.Test,TestBackupAndRecovery,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBackupAndRecovery.cs,Insert,The method has 5 parameters. Parameters: tree' testdata' threads' count' wait
Long Statement,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestRangeEnumerate,The length of the statement  "                foreach (KeyValuePair<int' int> range in new Dictionary<int' int> { { 6' 25 }' { 7' 25 }' { 8' 25 }' { 9' 25 }' { 22' 25 }' { 28' 28 } }) " is 137.
Long Statement,CSharpTest.Net.BPlusTree.Test,TestBackupAndRecovery,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBackupAndRecovery.cs,Insert,The length of the statement  "                work.Complete(true' wait == TimeSpan.MaxValue ? Timeout.Infinite : (int)Math.Min(int.MaxValue' wait.TotalMilliseconds)); " is 120.
Long Statement,CSharpTest.Net.BPlusTree.Test,TestBulkInsert,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBulkInsert.cs,TestMergeSequenceInFile,The length of the statement  "                TestMergeSequenceInFile(options.Clone()' options.MaximumValueNodes * options.MaximumChildNodes * options.MaximumChildNodes); " is 124.
Long Statement,CSharpTest.Net.BPlusTree.Test,TestBulkInsert,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBulkInsert.cs,TestMergeSequenceInFile,The length of the statement  "                TestMergeSequenceInFile(options.Clone()' options.MaximumValueNodes * options.MaximumChildNodes * options.MaximumChildNodes + 1); " is 128.
Long Statement,CSharpTest.Net.BPlusTree.Test,TestMultiInstance,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestMultiInstance.cs,TestSyncFromLogging,The length of the statement  "                    new TransactionLogOptions<int' string>(logfile.TempPath' PrimitiveSerializer.Int32' PrimitiveSerializer.String) { ReadOnly = true })) " is 133.
Long Statement,CSharpTest.Net.BPlusTree.Test,ThreadedBTreeTest,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\ThreadedBTreeTest.cs,TestAtomicUpdate,The length of the statement  "            Action<BPlusTree<int' int>> fnDoUpdates = delegate(BPlusTree<int' int> t) { for (int i = 0; i < updates; i++) t.TryUpdate(1' fnIncrement); }; " is 141.
Long Statement,CSharpTest.Net.BPlusTree.Test,ThreadedBTreeTest,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\ThreadedBTreeTest.cs,TestAtomicUpdate,The length of the statement  "            using (BPlusTree<int' int> tree = new BPlusTree<int' int>(new BPlusTree<int' int>.OptionsV2(PrimitiveSerializer.Instance' PrimitiveSerializer.Instance))) " is 153.
Long Statement,CSharpTest.Net.BPlusTree.Test,ThreadedBTreeTest,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\ThreadedBTreeTest.cs,TestAtomicUpdate,The length of the statement  "            Trace.TraceInformation("Updated {0} times on each of {1} threads in {2}ms"' updates' threads' time.ElapsedMilliseconds); " is 120.
Long Statement,CSharpTest.Net.BPlusTree.Test,ThreadedBTreeTest,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\ThreadedBTreeTest.cs,TestAbortWritersAndRecover,The length of the statement  "                    Assert.IsTrue(recoveredRecords >= minRecordCreated' "Expected at least " + minRecordCreated + " found " + recoveredRecords); " is 124.
Empty Catch Block,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestFirstAndLast,The method has an empty catch block.
Empty Catch Block,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestFirstAndLast,The method has an empty catch block.
Empty Catch Block,CSharpTest.Net.BPlusTree.Test,TestBPlusTreeOptions,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBPlusTreeOptions.cs,TestReadOnly,The method has an empty catch block.
Empty Catch Block,CSharpTest.Net.BPlusTree.Test,TestBPlusTreeOptions,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBPlusTreeOptions.cs,TestReadOnly,The method has an empty catch block.
Empty Catch Block,CSharpTest.Net.BPlusTree.Test,BasicFileTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestFileSerialized.cs,TestRecoverCorruptedFile,The method has an empty catch block.
Empty Catch Block,CSharpTest.Net.BPlusTree.Test,BasicFileTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestFileSerialized.cs,TestDeleteUnderlyingFile,The method has an empty catch block.
Empty Catch Block,CSharpTest.Net.BPlusTree.Test,ThreadedBTreeTest,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\ThreadedBTreeTest.cs,TestErrorsOnInsertAndDelete,The method has an empty catch block.
Empty Catch Block,CSharpTest.Net.BPlusTree.Test,ThreadedBTreeTest,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\ThreadedBTreeTest.cs,TestErrorsOnInsertAndDelete,The method has an empty catch block.
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestEnumeration,The following statement contains a magic number: options.BTreeOrder = 4;
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestEnumeration,The following statement contains a magic number: id < 10
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestEnumeration,The following statement contains a magic number: id < 10
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestEnumeration,The following statement contains a magic number: id < 11
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestEnumeration,The following statement contains a magic number: Assert.AreEqual(6' enu.Current.Key);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestEnumeration,The following statement contains a magic number: Assert.AreEqual(7' enu.Current.Key);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestEnumeration,The following statement contains a magic number: Assert.IsTrue(data.Remove(8));
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestEnumeration,The following statement contains a magic number: Assert.IsTrue(data.Remove(9));
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestEnumeration,The following statement contains a magic number: Assert.IsTrue(data.Remove(10));
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestEnumeration,The following statement contains a magic number: data.Add(11' 11.ToString());
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestEnumeration,The following statement contains a magic number: data.Add(11' 11.ToString());
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestEnumeration,The following statement contains a magic number: Assert.AreEqual(11' enu.Current.Key);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestRangeEnumerate,The following statement contains a magic number: i < 100
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestRangeEnumerate,The following statement contains a magic number: data.EnumerateRange(-500' 5000)
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestRangeEnumerate,The following statement contains a magic number: data.EnumerateRange(-500' 5000)
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestRangeEnumerate,The following statement contains a magic number: Assert.AreEqual(100' ix);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestRangeEnumerate,The following statement contains a magic number: new Dictionary<int' int> { { 6' 25 }' { 7' 25 }' { 8' 25 }' { 9' 25 }' { 22' 25 }' { 28' 28 } }
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestRangeEnumerate,The following statement contains a magic number: new Dictionary<int' int> { { 6' 25 }' { 7' 25 }' { 8' 25 }' { 9' 25 }' { 22' 25 }' { 28' 28 } }
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestRangeEnumerate,The following statement contains a magic number: new Dictionary<int' int> { { 6' 25 }' { 7' 25 }' { 8' 25 }' { 9' 25 }' { 22' 25 }' { 28' 28 } }
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestRangeEnumerate,The following statement contains a magic number: new Dictionary<int' int> { { 6' 25 }' { 7' 25 }' { 8' 25 }' { 9' 25 }' { 22' 25 }' { 28' 28 } }
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestRangeEnumerate,The following statement contains a magic number: new Dictionary<int' int> { { 6' 25 }' { 7' 25 }' { 8' 25 }' { 9' 25 }' { 22' 25 }' { 28' 28 } }
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestRangeEnumerate,The following statement contains a magic number: new Dictionary<int' int> { { 6' 25 }' { 7' 25 }' { 8' 25 }' { 9' 25 }' { 22' 25 }' { 28' 28 } }
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestRangeEnumerate,The following statement contains a magic number: new Dictionary<int' int> { { 6' 25 }' { 7' 25 }' { 8' 25 }' { 9' 25 }' { 22' 25 }' { 28' 28 } }
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestRangeEnumerate,The following statement contains a magic number: new Dictionary<int' int> { { 6' 25 }' { 7' 25 }' { 8' 25 }' { 9' 25 }' { 22' 25 }' { 28' 28 } }
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestRangeEnumerate,The following statement contains a magic number: new Dictionary<int' int> { { 6' 25 }' { 7' 25 }' { 8' 25 }' { 9' 25 }' { 22' 25 }' { 28' 28 } }
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestRangeEnumerate,The following statement contains a magic number: new Dictionary<int' int> { { 6' 25 }' { 7' 25 }' { 8' 25 }' { 9' 25 }' { 22' 25 }' { 28' 28 } }
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestRangeEnumerate,The following statement contains a magic number: new Dictionary<int' int> { { 6' 25 }' { 7' 25 }' { 8' 25 }' { 9' 25 }' { 22' 25 }' { 28' 28 } }
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestRangeEnumerate,The following statement contains a magic number: new Dictionary<int' int> { { 6' 25 }' { 7' 25 }' { 8' 25 }' { 9' 25 }' { 22' 25 }' { 28' 28 } }
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestEnumerateFrom,The following statement contains a magic number: i < 100
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestEnumerateFrom,The following statement contains a magic number: Assert.AreEqual(50' new List<KeyValuePair<int' string>>(data.EnumerateFrom(50)).Count);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestEnumerateFrom,The following statement contains a magic number: Assert.AreEqual(50' new List<KeyValuePair<int' string>>(data.EnumerateFrom(50)).Count);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestEnumerateFrom,The following statement contains a magic number: Assert.AreEqual(25' new List<KeyValuePair<int' string>>(data.EnumerateFrom(75)).Count);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestEnumerateFrom,The following statement contains a magic number: Assert.AreEqual(25' new List<KeyValuePair<int' string>>(data.EnumerateFrom(75)).Count);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestEnumerateFrom,The following statement contains a magic number: i < 100
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestConditionalRemove,The following statement contains a magic number: i < 100
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestConditionalRemove,The following statement contains a magic number: i < 100
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestConditionalRemove,The following statement contains a magic number: Assert.AreEqual(50' data.Count);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestConditionalRemove,The following statement contains a magic number: Assert.AreEqual((i % 10) == 0' data.TryRemove(i' (k' v) => (int.Parse(v) % 10) == 0));
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestConditionalRemove,The following statement contains a magic number: Assert.AreEqual((i % 10) == 0' data.TryRemove(i' (k' v) => (int.Parse(v) % 10) == 0));
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestConditionalRemove,The following statement contains a magic number: i < 100
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestConditionalRemove,The following statement contains a magic number: Assert.AreEqual(40' data.Count);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestAtomicAdd,The following statement contains a magic number: i < 100
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestAtomicAdd,The following statement contains a magic number: Assert.AreEqual(100' data.Count);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestAtomicAdd,The following statement contains a magic number: Assert.AreEqual(100' counter[0] + 1);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestAtomicAdd,The following statement contains a magic number: Assert.IsFalse(data.TryAdd(50' k => { throw new InvalidOperationException(); }));
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestAtomicAdd,The following statement contains a magic number: Assert.AreEqual(100' data.Count);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestBulkInsert,The following statement contains a magic number: Insert(data' CreateRandom(1000' 3000)' bulk' false);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestBulkInsert,The following statement contains a magic number: Insert(data' CreateRandom(1000' 3000)' bulk' false);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestBulkInsert,The following statement contains a magic number: Assert.AreEqual(1000' data.Count);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestBulkInsert,The following statement contains a magic number: Insert(data' CreateCount(data.Last().Key + 1' 1' 1000)' bulk' true);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestBulkInsert,The following statement contains a magic number: Assert.AreEqual(2000' data.Count);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestBulkInsert,The following statement contains a magic number: Insert(data' CreateCount(data.Last().Key + 10001' -1' 1000)' bulk' false);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestBulkInsert,The following statement contains a magic number: Insert(data' CreateCount(data.Last().Key + 10001' -1' 1000)' bulk' false);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestBulkInsert,The following statement contains a magic number: Assert.AreEqual(3000' data.Count);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestBulkInsert,The following statement contains a magic number: data.AddRange(CreateCount(1' 2' lastKey / 2)' true);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestBulkInsert,The following statement contains a magic number: data.AddRange(CreateCount(1' 2' lastKey / 2)' true);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestAtomicAddOrUpdate,The following statement contains a magic number: i < 100
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestAtomicAddOrUpdate,The following statement contains a magic number: i < 100
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestAtomicAddOrUpdate,The following statement contains a magic number: i < 100
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestAtomicAddOrUpdate,The following statement contains a magic number: Assert.AreEqual(100' data.Count);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestAtomicAddOrUpdate,The following statement contains a magic number: Assert.AreEqual(200' counter[0] + 1);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestAtomicAddOrUpdate,The following statement contains a magic number: Assert.IsTrue(data.TryRemove(i' (k' v) => int.Parse(v) - 100 == i));
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestAtomicAddOrUpdate,The following statement contains a magic number: i < 100
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestNewAddOrUpdate,The following statement contains a magic number: Assert.AreEqual("b"' data.AddOrUpdate(2' k => "b"' (k' v) => k.ToString()));
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestNewAddOrUpdate,The following statement contains a magic number: Assert.AreEqual("2"' data.AddOrUpdate(2' k => "b"' (k' v) => k.ToString()));
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestAtomicInterfaces,The following statement contains a magic number: Assert.IsFalse(data.AddOrUpdate(2' ref update));
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestAtomicInterfaces,The following statement contains a magic number: Assert.IsTrue(data.AddOrUpdate(2' ref update));
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestAtomicInterfaces,The following statement contains a magic number: Assert.AreEqual(2' data.Count);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestAtomicInterfaces,The following statement contains a magic number: Assert.AreEqual("b"' data[2]);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestAtomicInterfaces,The following statement contains a magic number: Assert.IsTrue(data.TryRemove(2' ref update));
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestGetOrAdd,The following statement contains a magic number: Assert.AreEqual("b"' data.GetOrAdd(2' k => "b"));
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestGetOrAdd,The following statement contains a magic number: Assert.AreEqual("b"' data.GetOrAdd(2' k => "c"));
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestTryRoutines,The following statement contains a magic number: Assert.IsFalse(data.TryUpdate(2' "b"));
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestTryRoutines,The following statement contains a magic number: Assert.IsFalse(data.TryRemove(2' out val));
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestFirstAndLast,The following statement contains a magic number: data.Add(2' "b");
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestFirstAndLast,The following statement contains a magic number: data.Add(3' "c");
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestFirstAndLast,The following statement contains a magic number: data.Add(4' "d");
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestFirstAndLast,The following statement contains a magic number: data.Add(5' "e");
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestFirstAndLast,The following statement contains a magic number: Assert.AreEqual(2' data.First().Key);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestFirstAndLast,The following statement contains a magic number: Assert.AreEqual(5' data.Last().Key);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestFirstAndLast,The following statement contains a magic number: data.Remove(5);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestFirstAndLast,The following statement contains a magic number: Assert.AreEqual(4' data.Last().Key);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestFirstAndLast,The following statement contains a magic number: data.Remove(4);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestFirstAndLast,The following statement contains a magic number: data.Remove(3);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestFirstAndLast,The following statement contains a magic number: data.Remove(2);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestCounts,The following statement contains a magic number: Assert.IsTrue(data.TryAdd(2' "test"));
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestCounts,The following statement contains a magic number: Assert.AreEqual(2' data.Count);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestCounts,The following statement contains a magic number: Assert.IsFalse(data.TryAdd(2' "test"));
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestCounts,The following statement contains a magic number: Assert.AreEqual(2' data.Count);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestCounts,The following statement contains a magic number: Assert.IsTrue(data.Remove(2));
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestInserts,The following statement contains a magic number: int[][] TestArrays = new int[][]                  {                      new int[] { 10' 18' 81' 121' 76' 31' 250' 174' 24' 38' 246' 79 }'                      new int[] { 110'191'84'218'170'217'199'232'184'254'32'90'241'136'181'28'226'69'52 }'                  };
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestInserts,The following statement contains a magic number: int[][] TestArrays = new int[][]                  {                      new int[] { 10' 18' 81' 121' 76' 31' 250' 174' 24' 38' 246' 79 }'                      new int[] { 110'191'84'218'170'217'199'232'184'254'32'90'241'136'181'28'226'69'52 }'                  };
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestInserts,The following statement contains a magic number: int[][] TestArrays = new int[][]                  {                      new int[] { 10' 18' 81' 121' 76' 31' 250' 174' 24' 38' 246' 79 }'                      new int[] { 110'191'84'218'170'217'199'232'184'254'32'90'241'136'181'28'226'69'52 }'                  };
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestInserts,The following statement contains a magic number: int[][] TestArrays = new int[][]                  {                      new int[] { 10' 18' 81' 121' 76' 31' 250' 174' 24' 38' 246' 79 }'                      new int[] { 110'191'84'218'170'217'199'232'184'254'32'90'241'136'181'28'226'69'52 }'                  };
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestInserts,The following statement contains a magic number: int[][] TestArrays = new int[][]                  {                      new int[] { 10' 18' 81' 121' 76' 31' 250' 174' 24' 38' 246' 79 }'                      new int[] { 110'191'84'218'170'217'199'232'184'254'32'90'241'136'181'28'226'69'52 }'                  };
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestInserts,The following statement contains a magic number: int[][] TestArrays = new int[][]                  {                      new int[] { 10' 18' 81' 121' 76' 31' 250' 174' 24' 38' 246' 79 }'                      new int[] { 110'191'84'218'170'217'199'232'184'254'32'90'241'136'181'28'226'69'52 }'                  };
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestInserts,The following statement contains a magic number: int[][] TestArrays = new int[][]                  {                      new int[] { 10' 18' 81' 121' 76' 31' 250' 174' 24' 38' 246' 79 }'                      new int[] { 110'191'84'218'170'217'199'232'184'254'32'90'241'136'181'28'226'69'52 }'                  };
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestInserts,The following statement contains a magic number: int[][] TestArrays = new int[][]                  {                      new int[] { 10' 18' 81' 121' 76' 31' 250' 174' 24' 38' 246' 79 }'                      new int[] { 110'191'84'218'170'217'199'232'184'254'32'90'241'136'181'28'226'69'52 }'                  };
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestInserts,The following statement contains a magic number: int[][] TestArrays = new int[][]                  {                      new int[] { 10' 18' 81' 121' 76' 31' 250' 174' 24' 38' 246' 79 }'                      new int[] { 110'191'84'218'170'217'199'232'184'254'32'90'241'136'181'28'226'69'52 }'                  };
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestInserts,The following statement contains a magic number: int[][] TestArrays = new int[][]                  {                      new int[] { 10' 18' 81' 121' 76' 31' 250' 174' 24' 38' 246' 79 }'                      new int[] { 110'191'84'218'170'217'199'232'184'254'32'90'241'136'181'28'226'69'52 }'                  };
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestInserts,The following statement contains a magic number: int[][] TestArrays = new int[][]                  {                      new int[] { 10' 18' 81' 121' 76' 31' 250' 174' 24' 38' 246' 79 }'                      new int[] { 110'191'84'218'170'217'199'232'184'254'32'90'241'136'181'28'226'69'52 }'                  };
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestInserts,The following statement contains a magic number: int[][] TestArrays = new int[][]                  {                      new int[] { 10' 18' 81' 121' 76' 31' 250' 174' 24' 38' 246' 79 }'                      new int[] { 110'191'84'218'170'217'199'232'184'254'32'90'241'136'181'28'226'69'52 }'                  };
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestInserts,The following statement contains a magic number: int[][] TestArrays = new int[][]                  {                      new int[] { 10' 18' 81' 121' 76' 31' 250' 174' 24' 38' 246' 79 }'                      new int[] { 110'191'84'218'170'217'199'232'184'254'32'90'241'136'181'28'226'69'52 }'                  };
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestInserts,The following statement contains a magic number: int[][] TestArrays = new int[][]                  {                      new int[] { 10' 18' 81' 121' 76' 31' 250' 174' 24' 38' 246' 79 }'                      new int[] { 110'191'84'218'170'217'199'232'184'254'32'90'241'136'181'28'226'69'52 }'                  };
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestInserts,The following statement contains a magic number: int[][] TestArrays = new int[][]                  {                      new int[] { 10' 18' 81' 121' 76' 31' 250' 174' 24' 38' 246' 79 }'                      new int[] { 110'191'84'218'170'217'199'232'184'254'32'90'241'136'181'28'226'69'52 }'                  };
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestInserts,The following statement contains a magic number: int[][] TestArrays = new int[][]                  {                      new int[] { 10' 18' 81' 121' 76' 31' 250' 174' 24' 38' 246' 79 }'                      new int[] { 110'191'84'218'170'217'199'232'184'254'32'90'241'136'181'28'226'69'52 }'                  };
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestInserts,The following statement contains a magic number: int[][] TestArrays = new int[][]                  {                      new int[] { 10' 18' 81' 121' 76' 31' 250' 174' 24' 38' 246' 79 }'                      new int[] { 110'191'84'218'170'217'199'232'184'254'32'90'241'136'181'28'226'69'52 }'                  };
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestInserts,The following statement contains a magic number: int[][] TestArrays = new int[][]                  {                      new int[] { 10' 18' 81' 121' 76' 31' 250' 174' 24' 38' 246' 79 }'                      new int[] { 110'191'84'218'170'217'199'232'184'254'32'90'241'136'181'28'226'69'52 }'                  };
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestInserts,The following statement contains a magic number: int[][] TestArrays = new int[][]                  {                      new int[] { 10' 18' 81' 121' 76' 31' 250' 174' 24' 38' 246' 79 }'                      new int[] { 110'191'84'218'170'217'199'232'184'254'32'90'241'136'181'28'226'69'52 }'                  };
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestInserts,The following statement contains a magic number: int[][] TestArrays = new int[][]                  {                      new int[] { 10' 18' 81' 121' 76' 31' 250' 174' 24' 38' 246' 79 }'                      new int[] { 110'191'84'218'170'217'199'232'184'254'32'90'241'136'181'28'226'69'52 }'                  };
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestInserts,The following statement contains a magic number: int[][] TestArrays = new int[][]                  {                      new int[] { 10' 18' 81' 121' 76' 31' 250' 174' 24' 38' 246' 79 }'                      new int[] { 110'191'84'218'170'217'199'232'184'254'32'90'241'136'181'28'226'69'52 }'                  };
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestInserts,The following statement contains a magic number: int[][] TestArrays = new int[][]                  {                      new int[] { 10' 18' 81' 121' 76' 31' 250' 174' 24' 38' 246' 79 }'                      new int[] { 110'191'84'218'170'217'199'232'184'254'32'90'241'136'181'28'226'69'52 }'                  };
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestInserts,The following statement contains a magic number: int[][] TestArrays = new int[][]                  {                      new int[] { 10' 18' 81' 121' 76' 31' 250' 174' 24' 38' 246' 79 }'                      new int[] { 110'191'84'218'170'217'199'232'184'254'32'90'241'136'181'28'226'69'52 }'                  };
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestInserts,The following statement contains a magic number: int[][] TestArrays = new int[][]                  {                      new int[] { 10' 18' 81' 121' 76' 31' 250' 174' 24' 38' 246' 79 }'                      new int[] { 110'191'84'218'170'217'199'232'184'254'32'90'241'136'181'28'226'69'52 }'                  };
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestInserts,The following statement contains a magic number: int[][] TestArrays = new int[][]                  {                      new int[] { 10' 18' 81' 121' 76' 31' 250' 174' 24' 38' 246' 79 }'                      new int[] { 110'191'84'218'170'217'199'232'184'254'32'90'241'136'181'28'226'69'52 }'                  };
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestInserts,The following statement contains a magic number: int[][] TestArrays = new int[][]                  {                      new int[] { 10' 18' 81' 121' 76' 31' 250' 174' 24' 38' 246' 79 }'                      new int[] { 110'191'84'218'170'217'199'232'184'254'32'90'241'136'181'28'226'69'52 }'                  };
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestInserts,The following statement contains a magic number: int[][] TestArrays = new int[][]                  {                      new int[] { 10' 18' 81' 121' 76' 31' 250' 174' 24' 38' 246' 79 }'                      new int[] { 110'191'84'218'170'217'199'232'184'254'32'90'241'136'181'28'226'69'52 }'                  };
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestInserts,The following statement contains a magic number: int[][] TestArrays = new int[][]                  {                      new int[] { 10' 18' 81' 121' 76' 31' 250' 174' 24' 38' 246' 79 }'                      new int[] { 110'191'84'218'170'217'199'232'184'254'32'90'241'136'181'28'226'69'52 }'                  };
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestInserts,The following statement contains a magic number: int[][] TestArrays = new int[][]                  {                      new int[] { 10' 18' 81' 121' 76' 31' 250' 174' 24' 38' 246' 79 }'                      new int[] { 110'191'84'218'170'217'199'232'184'254'32'90'241'136'181'28'226'69'52 }'                  };
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestInserts,The following statement contains a magic number: int[][] TestArrays = new int[][]                  {                      new int[] { 10' 18' 81' 121' 76' 31' 250' 174' 24' 38' 246' 79 }'                      new int[] { 110'191'84'218'170'217'199'232'184'254'32'90'241'136'181'28'226'69'52 }'                  };
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestInserts,The following statement contains a magic number: int[][] TestArrays = new int[][]                  {                      new int[] { 10' 18' 81' 121' 76' 31' 250' 174' 24' 38' 246' 79 }'                      new int[] { 110'191'84'218'170'217'199'232'184'254'32'90'241'136'181'28'226'69'52 }'                  };
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,RandomSequenceTest,The following statement contains a magic number: int iterations = 5;
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,RandomSequenceTest,The following statement contains a magic number: int limit = 255;
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,ExplicitRangeAddRemove,The following statement contains a magic number: data.Add(2' "v2");
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,ExplicitRangeAddRemove,The following statement contains a magic number: i < 8
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,ExplicitRangeAddRemove,The following statement contains a magic number: i >= 8
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,ExplicitRangeAddRemove,The following statement contains a magic number: data.TryAdd(13' "v" + i);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,ExplicitRangeAddRemove,The following statement contains a magic number: i <= 16
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,ExplicitRangeAddRemove,The following statement contains a magic number: data.Remove(3);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,ExplicitRangeAddRemove,The following statement contains a magic number: data.Add(3' "v3");
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,ExplicitRangeAddRemove,The following statement contains a magic number: data.Remove(8);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,ExplicitRangeAddRemove,The following statement contains a magic number: data.Add(8' "v8");
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,ExplicitRangeAddRemove,The following statement contains a magic number: i <= 16
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,ExplicitRangeAddRemove,The following statement contains a magic number: i <= 12
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,ExplicitRangeAddRemove,The following statement contains a magic number: i <= 12
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,ExplicitRangeAddRemove,The following statement contains a magic number: i <= 5
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,ExplicitRangeAddRemove,The following statement contains a magic number: i <= 16
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,ExplicitRangeAddRemove,The following statement contains a magic number: Assert.AreEqual(i < 6 || i > 12' data.Remove(i));
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,ExplicitRangeAddRemove,The following statement contains a magic number: Assert.AreEqual(i < 6 || i > 12' data.Remove(i));
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,ExplicitRangeAddRemove,The following statement contains a magic number: i <= 16
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestKeyValueCollections,The following statement contains a magic number: i < 20
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestKeyValueCollections,The following statement contains a magic number: i < sample.Count && i < 5
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestKeyValueCollections,The following statement contains a magic number: i < sample.Count && i < 5
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestRandomAddRemoveOrder4,The following statement contains a magic number: TestRandomAddRemove(1' 4' 1000);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestRandomAddRemoveOrder4,The following statement contains a magic number: TestRandomAddRemove(1' 4' 1000);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestRandomAddRemoveOrder16,The following statement contains a magic number: TestRandomAddRemove(1' 16' 1000);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestRandomAddRemoveOrder16,The following statement contains a magic number: TestRandomAddRemove(1' 16' 1000);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestRandomAddRemoveOrder64,The following statement contains a magic number: TestRandomAddRemove(1' 64' 1000);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestRandomAddRemoveOrder64,The following statement contains a magic number: TestRandomAddRemove(1' 64' 1000);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestRandomAddRemove,The following statement contains a magic number: List<int> keysAdded = new List<int>(250000);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestRandomAddRemove,The following statement contains a magic number: int del = keys.Count/3 + Random.Next(keys.Count/3);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTests.cs,TestRandomAddRemove,The following statement contains a magic number: int del = keys.Count/3 + Random.Next(keys.Count/3);
Magic Number,CSharpTest.Net.BPlusTree.Test,SampleCustomTypeTest,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\SampleCustomTypeTest.cs,GetSample,The following statement contains a magic number: byte[] data = new byte[255];
Magic Number,CSharpTest.Net.BPlusTree.Test,SampleCustomTypeTest,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\SampleCustomTypeTest.cs,GetSample,The following statement contains a magic number: i < 100
Magic Number,CSharpTest.Net.BPlusTree.Test,SampleCustomTypeTest,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\SampleCustomTypeTest.cs,TestCommonConfiguration,The following statement contains a magic number: options.CalcBTreeOrder(32' 300);
Magic Number,CSharpTest.Net.BPlusTree.Test,SampleCustomTypeTest,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\SampleCustomTypeTest.cs,TestCommonConfiguration,The following statement contains a magic number: options.CalcBTreeOrder(32' 300);
Magic Number,CSharpTest.Net.BPlusTree.Test,SampleCustomTypeTest,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\SampleCustomTypeTest.cs,TestCommonConfiguration,The following statement contains a magic number: byte[] data = new byte[255];
Magic Number,CSharpTest.Net.BPlusTree.Test,BTreeFactory,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\SampleCustomTypeTest.cs,Create,The following statement contains a magic number: BPlusTree<KeyInfo' DataValue>.Options options =                      new BPlusTree<KeyInfo' DataValue>.Options(new KeyInfoSerializer()' new DataValueSerializer()' new KeyInfoComparer())                      {                          MinimumChildNodes = 16'                          MaximumChildNodes = 24'                          MinimumValueNodes = 4'                          MaximumValueNodes = 12'                      };
Magic Number,CSharpTest.Net.BPlusTree.Test,BTreeFactory,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\SampleCustomTypeTest.cs,Create,The following statement contains a magic number: BPlusTree<KeyInfo' DataValue>.Options options =                      new BPlusTree<KeyInfo' DataValue>.Options(new KeyInfoSerializer()' new DataValueSerializer()' new KeyInfoComparer())                      {                          MinimumChildNodes = 16'                          MaximumChildNodes = 24'                          MinimumValueNodes = 4'                          MaximumValueNodes = 12'                      };
Magic Number,CSharpTest.Net.BPlusTree.Test,BTreeFactory,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\SampleCustomTypeTest.cs,Create,The following statement contains a magic number: BPlusTree<KeyInfo' DataValue>.Options options =                      new BPlusTree<KeyInfo' DataValue>.Options(new KeyInfoSerializer()' new DataValueSerializer()' new KeyInfoComparer())                      {                          MinimumChildNodes = 16'                          MaximumChildNodes = 24'                          MinimumValueNodes = 4'                          MaximumValueNodes = 12'                      };
Magic Number,CSharpTest.Net.BPlusTree.Test,BTreeFactory,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\SampleCustomTypeTest.cs,Create,The following statement contains a magic number: BPlusTree<KeyInfo' DataValue>.Options options =                      new BPlusTree<KeyInfo' DataValue>.Options(new KeyInfoSerializer()' new DataValueSerializer()' new KeyInfoComparer())                      {                          MinimumChildNodes = 16'                          MaximumChildNodes = 24'                          MinimumValueNodes = 4'                          MaximumValueNodes = 12'                      };
Magic Number,CSharpTest.Net.BPlusTree.Test,BTreeFactory,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\SampleCustomTypeTest.cs,Create,The following statement contains a magic number: BPlusTree<int' string> tree = new BPlusTree<int' string>(                      new BPlusTree<int' string>.Options(PrimitiveSerializer.Instance' PrimitiveSerializer.Instance)                          {                              BTreeOrder = 16'                              LockingFactory = new IgnoreLockFactory()'                              FileName = TempFile.TempPath'                              CreateFile = CreatePolicy.Always'                          }                      );
Magic Number,CSharpTest.Net.BPlusTree.Test,BTreeFactory,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\SampleCustomTypeTest.cs,Create,The following statement contains a magic number: BPlusTree<int' string> tree = new BPlusTree<int' string>(                      new BPlusTree<int' string>.OptionsV2(PrimitiveSerializer.Instance' PrimitiveSerializer.Instance)                      {                              CreateFile = CreatePolicy.Always'                              FileName = _tempFile.TempPath'                          }.CalcBTreeOrder(4' 10)                      );
Magic Number,CSharpTest.Net.BPlusTree.Test,BTreeFactory,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\SampleCustomTypeTest.cs,Create,The following statement contains a magic number: BPlusTree<int' string> tree = new BPlusTree<int' string>(                      new BPlusTree<int' string>.OptionsV2(PrimitiveSerializer.Instance' PrimitiveSerializer.Instance)                      {                              CreateFile = CreatePolicy.Always'                              FileName = _tempFile.TempPath'                          }.CalcBTreeOrder(4' 10)                      );
Magic Number,CSharpTest.Net.BPlusTree.Test,BTreeFactory,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\SampleCustomTypeTest.cs,Create,The following statement contains a magic number: BPlusTree<int' string> tree = new BPlusTree<int' string>(                      new BPlusTree<int' string>.Options(PrimitiveSerializer.Instance' PrimitiveSerializer.Instance)                          {                              BTreeOrder = 4'                              LockingFactory = new IgnoreLockFactory()                          }                      );
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBackupAndRecovery,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBackupAndRecovery.cs,TestRecoveryOnNewWithAsyncLog,The following statement contains a magic number: TestRecoveryOnNew(options' 100' 0);
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBackupAndRecovery,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBackupAndRecovery.cs,TestRestoreLargeLog,The following statement contains a magic number: options.FileBlockSize = 512;
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBackupAndRecovery,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBackupAndRecovery.cs,TestRestoreLargeLog,The following statement contains a magic number: Insert(tree' first' 1' 100' TimeSpan.FromMinutes(1));
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBackupAndRecovery,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBackupAndRecovery.cs,TestRestoreLargeLog,The following statement contains a magic number: Assert.AreEqual(100' tree.Count);
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBackupAndRecovery,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBackupAndRecovery.cs,TestRestoreLargeLog,The following statement contains a magic number: Insert(tree' sample' 7' 5000' TimeSpan.FromMinutes(1));
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBackupAndRecovery,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBackupAndRecovery.cs,TestRestoreLargeLog,The following statement contains a magic number: Insert(tree' sample' 7' 5000' TimeSpan.FromMinutes(1));
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBackupAndRecovery,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBackupAndRecovery.cs,TestRestoreLargeLog,The following statement contains a magic number: Assert.AreEqual(35100' tree.Count);
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBackupAndRecovery,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBackupAndRecovery.cs,TestRecoveryOnExistingWithAsyncLog,The following statement contains a magic number: TestRecoveryOnExisting(options' 100' 0);
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBackupAndRecovery,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBackupAndRecovery.cs,TestRecoveryOnNew,The following statement contains a magic number: TestRecoveryOnNew(options' 10' 0);
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBackupAndRecovery,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBackupAndRecovery.cs,TestRecoveryOnExisting,The following statement contains a magic number: TestRecoveryOnExisting(options' 10' 0);
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBackupAndRecovery,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBackupAndRecovery.cs,TestRecoveryOnNewLargeOrder,The following statement contains a magic number: options.MaximumValueNodes = 255;
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBackupAndRecovery,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBackupAndRecovery.cs,TestRecoveryOnNewLargeOrder,The following statement contains a magic number: options.MinimumValueNodes = 100;
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBackupAndRecovery,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBackupAndRecovery.cs,TestRecoveryOnNewLargeOrder,The following statement contains a magic number: TestRecoveryOnNew(options' 100' 10000);
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBackupAndRecovery,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBackupAndRecovery.cs,TestRecoveryOnNewLargeOrder,The following statement contains a magic number: TestRecoveryOnNew(options' 100' 10000);
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBackupAndRecovery,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBackupAndRecovery.cs,TestRecoveryOnExistingLargeOrder,The following statement contains a magic number: options.MaximumValueNodes = 255;
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBackupAndRecovery,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBackupAndRecovery.cs,TestRecoveryOnExistingLargeOrder,The following statement contains a magic number: options.MinimumValueNodes = 100;
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBackupAndRecovery,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBackupAndRecovery.cs,TestRecoveryOnExistingLargeOrder,The following statement contains a magic number: TestRecoveryOnExisting(options' 100' ushort.MaxValue);
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBackupAndRecovery,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBackupAndRecovery.cs,TestRecoveryOnExisting,The following statement contains a magic number: Insert(tree' data' 1' 100' TimeSpan.MaxValue);
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBackupAndRecovery,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBackupAndRecovery.cs,AppendToLog,The following statement contains a magic number: int count = 1000;
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBPlusTreeOptions,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBPlusTreeOptions.cs,TestICloneable,The following statement contains a magic number: ICloneable opt = new BPlusTree<int' int>.Options(PrimitiveSerializer.Int32' PrimitiveSerializer.Int32)               {                  CreateFile = CreatePolicy.IfNeeded'                  BTreeOrder = 4              };
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBPlusTreeOptions,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBPlusTreeOptions.cs,TestICloneable,The following statement contains a magic number: Assert.AreEqual(4' options.MaximumChildNodes);
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBPlusTreeOptions,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBPlusTreeOptions.cs,TestICloneable,The following statement contains a magic number: Assert.AreEqual(4' options.MaximumValueNodes);
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBPlusTreeOptions,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBPlusTreeOptions.cs,TestReadOnly,The following statement contains a magic number: tree.Add(1' 2);
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBPlusTreeOptions,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBPlusTreeOptions.cs,TestReadOnly,The following statement contains a magic number: tree.Add(3' 4);
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBPlusTreeOptions,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBPlusTreeOptions.cs,TestReadOnly,The following statement contains a magic number: tree.Add(3' 4);
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBPlusTreeOptions,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBPlusTreeOptions.cs,TestReadOnly,The following statement contains a magic number: tree.Add(5' 6);
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBPlusTreeOptions,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBPlusTreeOptions.cs,TestReadOnly,The following statement contains a magic number: tree.Add(5' 6);
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBPlusTreeOptions,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBPlusTreeOptions.cs,TestReadOnly,The following statement contains a magic number: Assert.AreEqual(tree[1]' 2);
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBPlusTreeOptions,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBPlusTreeOptions.cs,TestReadOnly,The following statement contains a magic number: Assert.AreEqual(tree[3]' 4);
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBPlusTreeOptions,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBPlusTreeOptions.cs,TestReadOnly,The following statement contains a magic number: Assert.AreEqual(tree[3]' 4);
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBPlusTreeOptions,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBPlusTreeOptions.cs,TestReadOnly,The following statement contains a magic number: Assert.AreEqual(tree[5]' 6);
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBPlusTreeOptions,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBPlusTreeOptions.cs,TestReadOnly,The following statement contains a magic number: Assert.AreEqual(tree[5]' 6);
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBPlusTreeOptions,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBPlusTreeOptions.cs,TestCloneWithCallLockV1,The following statement contains a magic number: var options = new BPlusTree<int' int>.Options(PrimitiveSerializer.Int32' PrimitiveSerializer.Int32)              {                  CreateFile = CreatePolicy.IfNeeded'                  BTreeOrder = 4              };
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBPlusTreeOptions,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBPlusTreeOptions.cs,TestCloneWithCallLockV2,The following statement contains a magic number: var options = new BPlusTree<int' int>.OptionsV2(PrimitiveSerializer.Int32' PrimitiveSerializer.Int32)              {                  CreateFile = CreatePolicy.IfNeeded'                  BTreeOrder = 4              };
Magic Number,CSharpTest.Net.BPlusTree.Test,TestCustomStorage,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestCustomStorage.cs,TestFailedWrite,The following statement contains a magic number: i < 10
Magic Number,CSharpTest.Net.BPlusTree.Test,TestCustomStorage,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestCustomStorage.cs,TestFailedWrite,The following statement contains a magic number: tree.Add(50' string.Empty);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicFileTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestFileSerialized.cs,TestRecoverCorruptedFile,The following statement contains a magic number: options.BTreeOrder = 4;
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicFileTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestFileSerialized.cs,TestRecoverCorruptedFile,The following statement contains a magic number: options.FileBlockSize = 512;
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicFileTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestFileSerialized.cs,TestRecoverCorruptedFile,The following statement contains a magic number: options.FileGrowthRate = 25;
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicFileTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestFileSerialized.cs,TestRecoverCorruptedFile,The following statement contains a magic number: options.ConcurrentWriters = 4;
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicFileTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestFileSerialized.cs,TestRecoverCorruptedFile,The following statement contains a magic number: i < 100
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicFileTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestFileSerialized.cs,TestRecoverCorruptedFile,The following statement contains a magic number: io.Seek(512' SeekOrigin.Begin);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicFileTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestFileSerialized.cs,TestRecoverCorruptedFile,The following statement contains a magic number: io.Write(new byte[512]' 0' 512);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicFileTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestFileSerialized.cs,TestRecoverCorruptedFile,The following statement contains a magic number: io.Write(new byte[512]' 0' 512);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicFileTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestFileSerialized.cs,TestRecoverCorruptedFile,The following statement contains a magic number: io.Seek(1024 + 16' SeekOrigin.Begin);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicFileTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestFileSerialized.cs,TestRecoverCorruptedFile,The following statement contains a magic number: io.Seek(1024 + 16' SeekOrigin.Begin);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicFileTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestFileSerialized.cs,TestRecoverCorruptedFile,The following statement contains a magic number: io.Seek(1024 + 32 + len - 1' SeekOrigin.Begin);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicFileTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestFileSerialized.cs,TestRecoverCorruptedFile,The following statement contains a magic number: io.Seek(1024 + 32 + len - 1' SeekOrigin.Begin);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicFileTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestFileSerialized.cs,TestRecoverCorruptedFile,The following statement contains a magic number: io.WriteByte(255);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicFileTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestFileSerialized.cs,TestRecoverCorruptedFile,The following statement contains a magic number: Assert.AreEqual(99' found.Count);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicFileTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestFileSerialized.cs,TestRecoverCorruptedFile,The following statement contains a magic number: Assert.IsFalse(found.ContainsKey(3)' "should be missing #3");
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicFileTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestFileSerialized.cs,TestDeleteAfterGarbageCollection,The following statement contains a magic number: System.Threading.Thread.Sleep(10);
Magic Number,CSharpTest.Net.BPlusTree.Test,TestFileSerialized,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestFileSerialized.cs,GetSample,The following statement contains a magic number: return new[]                          {                             new KeyValuePair<int'string>(1' "1")'                             new KeyValuePair<int'string>(3' "3")'                             new KeyValuePair<int'string>(5' "5")'                             new KeyValuePair<int'string>(7' "7")'                             new KeyValuePair<int'string>(9' "9")'                             new KeyValuePair<int'string>(11' "11")'                             new KeyValuePair<int'string>(13' "13")'                         };
Magic Number,CSharpTest.Net.BPlusTree.Test,TestFileSerialized,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestFileSerialized.cs,GetSample,The following statement contains a magic number: return new[]                          {                             new KeyValuePair<int'string>(1' "1")'                             new KeyValuePair<int'string>(3' "3")'                             new KeyValuePair<int'string>(5' "5")'                             new KeyValuePair<int'string>(7' "7")'                             new KeyValuePair<int'string>(9' "9")'                             new KeyValuePair<int'string>(11' "11")'                             new KeyValuePair<int'string>(13' "13")'                         };
Magic Number,CSharpTest.Net.BPlusTree.Test,TestFileSerialized,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestFileSerialized.cs,GetSample,The following statement contains a magic number: return new[]                          {                             new KeyValuePair<int'string>(1' "1")'                             new KeyValuePair<int'string>(3' "3")'                             new KeyValuePair<int'string>(5' "5")'                             new KeyValuePair<int'string>(7' "7")'                             new KeyValuePair<int'string>(9' "9")'                             new KeyValuePair<int'string>(11' "11")'                             new KeyValuePair<int'string>(13' "13")'                         };
Magic Number,CSharpTest.Net.BPlusTree.Test,TestFileSerialized,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestFileSerialized.cs,GetSample,The following statement contains a magic number: return new[]                          {                             new KeyValuePair<int'string>(1' "1")'                             new KeyValuePair<int'string>(3' "3")'                             new KeyValuePair<int'string>(5' "5")'                             new KeyValuePair<int'string>(7' "7")'                             new KeyValuePair<int'string>(9' "9")'                             new KeyValuePair<int'string>(11' "11")'                             new KeyValuePair<int'string>(13' "13")'                         };
Magic Number,CSharpTest.Net.BPlusTree.Test,TestFileSerialized,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestFileSerialized.cs,GetSample,The following statement contains a magic number: return new[]                          {                             new KeyValuePair<int'string>(1' "1")'                             new KeyValuePair<int'string>(3' "3")'                             new KeyValuePair<int'string>(5' "5")'                             new KeyValuePair<int'string>(7' "7")'                             new KeyValuePair<int'string>(9' "9")'                             new KeyValuePair<int'string>(11' "11")'                             new KeyValuePair<int'string>(13' "13")'                         };
Magic Number,CSharpTest.Net.BPlusTree.Test,TestFileSerialized,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestFileSerialized.cs,GetSample,The following statement contains a magic number: return new[]                          {                             new KeyValuePair<int'string>(1' "1")'                             new KeyValuePair<int'string>(3' "3")'                             new KeyValuePair<int'string>(5' "5")'                             new KeyValuePair<int'string>(7' "7")'                             new KeyValuePair<int'string>(9' "9")'                             new KeyValuePair<int'string>(11' "11")'                             new KeyValuePair<int'string>(13' "13")'                         };
Magic Number,CSharpTest.Net.BPlusTree.Test,SequenceTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\SequenceTests.cs,TestForwardInsertTo100,The following statement contains a magic number: SequencedTest(0' 1' 100' "Forward");
Magic Number,CSharpTest.Net.BPlusTree.Test,SequenceTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\SequenceTests.cs,TestForwardInsertTo1000,The following statement contains a magic number: SequencedTest(0' 1' 1000' "Forward");
Magic Number,CSharpTest.Net.BPlusTree.Test,SequenceTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\SequenceTests.cs,TestForwardInsertTo2000,The following statement contains a magic number: SequencedTest(0' 1' 2000' "Forward");
Magic Number,CSharpTest.Net.BPlusTree.Test,SequenceTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\SequenceTests.cs,TestForwardInsertTo3000,The following statement contains a magic number: SequencedTest(0' 1' 3000' "Forward");
Magic Number,CSharpTest.Net.BPlusTree.Test,SequenceTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\SequenceTests.cs,TestForwardInsertTo4000,The following statement contains a magic number: SequencedTest(0' 1' 4000' "Forward");
Magic Number,CSharpTest.Net.BPlusTree.Test,SequenceTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\SequenceTests.cs,TestForwardInsertTo5000,The following statement contains a magic number: SequencedTest(0' 1' 5000' "Forward");
Magic Number,CSharpTest.Net.BPlusTree.Test,SequenceTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\SequenceTests.cs,TestReverseInsertTo100,The following statement contains a magic number: SequencedTest(100' -1' 0' "Reverse");
Magic Number,CSharpTest.Net.BPlusTree.Test,SequenceTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\SequenceTests.cs,TestReverseInsertTo1000,The following statement contains a magic number: SequencedTest(1000' -1' 0' "Reverse");
Magic Number,CSharpTest.Net.BPlusTree.Test,SequenceTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\SequenceTests.cs,TestReverseInsertTo2000,The following statement contains a magic number: SequencedTest(2000' -1' 0' "Reverse");
Magic Number,CSharpTest.Net.BPlusTree.Test,SequenceTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\SequenceTests.cs,TestReverseInsertTo3000,The following statement contains a magic number: SequencedTest(3000' -1' 0' "Reverse");
Magic Number,CSharpTest.Net.BPlusTree.Test,SequenceTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\SequenceTests.cs,TestReverseInsertTo4000,The following statement contains a magic number: SequencedTest(4000' -1' 0' "Reverse");
Magic Number,CSharpTest.Net.BPlusTree.Test,SequenceTests,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\SequenceTests.cs,TestReverseInsertTo5000,The following statement contains a magic number: SequencedTest(5000' -1' 0' "Reverse");
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTestsVersion2,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTestsVersion2.cs,TestAutoCommit,The following statement contains a magic number: options.TransactionLogLimit = 30;
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTestsVersion2,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTestsVersion2.cs,TestAutoCommit,The following statement contains a magic number: tree.Add(2' "B");
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTestsVersion2,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTestsVersion2.cs,TestAutoCommit,The following statement contains a magic number: Assert.AreEqual(2' tree.Count);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTestsVersion2,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTestsVersion2.cs,TestAutoCommit,The following statement contains a magic number: tree.Add(3' "C");
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTestsVersion2,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTestsVersion2.cs,TestAutoCommit,The following statement contains a magic number: tree.Add(4' "D");
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTestsVersion2,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTestsVersion2.cs,TestAutoCommit,The following statement contains a magic number: tree.Add(5' "E");
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTestsVersion2,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTestsVersion2.cs,TestAutoCommit,The following statement contains a magic number: Assert.AreEqual(4' tree.Count);
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTestsVersion2,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTestsVersion2.cs,TestAutoCommit,The following statement contains a magic number: Assert.IsFalse(tree.ContainsKey(5));
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTestsVersion2,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTestsVersion2.cs,TestCommitRollback,The following statement contains a magic number: tree.Add(2' "B");
Magic Number,CSharpTest.Net.BPlusTree.Test,BasicTestsVersion2,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTestsVersion2.cs,TestCommitRollback,The following statement contains a magic number: Assert.IsFalse(tree.ContainsKey(2));
Magic Number,CSharpTest.Net.BPlusTree.Test,DictionaryTestsVersion2,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\BasicTestsVersion2.cs,GetSample,The following statement contains a magic number: i <= 1000
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBulkInsert,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBulkInsert.cs,TestMergeSortedEnumerations1000,The following statement contains a magic number: i < 1000
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBulkInsert,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBulkInsert.cs,CreateSets,The following statement contains a magic number: sets[i][j] = r.Next(size << 4);
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBulkInsert,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBulkInsert.cs,TestMergeSortedEnumerations,The following statement contains a magic number: List<IEnumerable<KeyValuePair<int' string>>> sets =                   new List<IEnumerable<KeyValuePair<int' string>>>(CreateSets(2' 100' test));
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBulkInsert,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBulkInsert.cs,TestMergeSortedEnumerations,The following statement contains a magic number: List<IEnumerable<KeyValuePair<int' string>>> sets =                   new List<IEnumerable<KeyValuePair<int' string>>>(CreateSets(2' 100' test));
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBulkInsert,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBulkInsert.cs,TestBulkInsertRandom,The following statement contains a magic number: count < 260
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBulkInsert,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBulkInsert.cs,TestMergeInsertRandom,The following statement contains a magic number: TestMergeRandom(Options' 4' count);
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBulkInsert,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBulkInsert.cs,TestMergeInsertRandom,The following statement contains a magic number: count < 260
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBulkInsert,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBulkInsert.cs,TestMergeSequenceInFile,The following statement contains a magic number: options.MaximumValueNodes = 14;
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBulkInsert,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBulkInsert.cs,TestMergeSequenceInFile,The following statement contains a magic number: options.MinimumValueNodes = 7;
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBulkInsert,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBulkInsert.cs,TestMergeSequenceInFile,The following statement contains a magic number: options.MaximumChildNodes = 6;
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBulkInsert,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBulkInsert.cs,TestMergeSequenceInFile,The following statement contains a magic number: options.MinimumChildNodes = 2;
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBulkInsert,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBulkInsert.cs,TestMergeRandomInFile,The following statement contains a magic number: options.CalcBTreeOrder(4' 4);
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBulkInsert,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBulkInsert.cs,TestMergeRandomInFile,The following statement contains a magic number: options.CalcBTreeOrder(4' 4);
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBulkInsert,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBulkInsert.cs,TestMergeRandomInFile,The following statement contains a magic number: Dictionary<int' string> expected =                       TestMergeRandom(options' 2' 300);
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBulkInsert,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBulkInsert.cs,TestMergeRandomInFile,The following statement contains a magic number: Dictionary<int' string> expected =                       TestMergeRandom(options' 2' 300);
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBulkInsert,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBulkInsert.cs,TestMergeRandomInFile,The following statement contains a magic number: options.CalcBTreeOrder(4' 4);
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBulkInsert,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBulkInsert.cs,TestMergeRandomInFile,The following statement contains a magic number: options.CalcBTreeOrder(4' 4);
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBulkInsert,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBulkInsert.cs,TestBulkInsertSorted,The following statement contains a magic number: IEnumerable<KeyValuePair<int' string>>[] sets =                   new List<IEnumerable<KeyValuePair<int' string>>>(CreateSets(1' 1000' test)).ToArray();
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBulkInsert,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBulkInsert.cs,TestReplaceContents,The following statement contains a magic number: IEnumerable<KeyValuePair<int' string>>[] sets =                  new List<IEnumerable<KeyValuePair<int' string>>>(CreateSets(1' 1000' test)).ToArray();
Magic Number,CSharpTest.Net.BPlusTree.Test,TestBulkInsert,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestBulkInsert.cs,TestReplaceContents,The following statement contains a magic number: sets = new List<IEnumerable<KeyValuePair<int' string>>>(CreateSets(1' 100' test)).ToArray();
Magic Number,CSharpTest.Net.BPlusTree.Test,TestMultiInstance,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestMultiInstance.cs,TestReadOnlyCopy,The following statement contains a magic number: var options = new BPlusTree<int' string>.OptionsV2(new PrimitiveSerializer()' new PrimitiveSerializer())                                    {                                        CreateFile = CreatePolicy.Always'                                        FileName = tempFile.TempPath'                                    }.CalcBTreeOrder(4' 10);
Magic Number,CSharpTest.Net.BPlusTree.Test,TestMultiInstance,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestMultiInstance.cs,TestReadOnlyCopy,The following statement contains a magic number: var options = new BPlusTree<int' string>.OptionsV2(new PrimitiveSerializer()' new PrimitiveSerializer())                                    {                                        CreateFile = CreatePolicy.Always'                                        FileName = tempFile.TempPath'                                    }.CalcBTreeOrder(4' 10);
Magic Number,CSharpTest.Net.BPlusTree.Test,TestMultiInstance,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestMultiInstance.cs,TestReadOnlyCopy,The following statement contains a magic number: tree.AddRange(MakeValues(0' 100));
Magic Number,CSharpTest.Net.BPlusTree.Test,TestMultiInstance,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestMultiInstance.cs,TestReadOnlyCopy,The following statement contains a magic number: i < 100
Magic Number,CSharpTest.Net.BPlusTree.Test,TestMultiInstance,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestMultiInstance.cs,TestReadOnlyCopy,The following statement contains a magic number: tree.AddRange(MakeValues(1000' 1000));
Magic Number,CSharpTest.Net.BPlusTree.Test,TestMultiInstance,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestMultiInstance.cs,TestReadOnlyCopy,The following statement contains a magic number: tree.AddRange(MakeValues(1000' 1000));
Magic Number,CSharpTest.Net.BPlusTree.Test,TestMultiInstance,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestMultiInstance.cs,TestReadOnlyCopy,The following statement contains a magic number: Assert.AreEqual(100' copy.Count);
Magic Number,CSharpTest.Net.BPlusTree.Test,TestMultiInstance,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestMultiInstance.cs,TestReadOnlyCopy,The following statement contains a magic number: Assert.AreEqual(99' copy.Last().Key);
Magic Number,CSharpTest.Net.BPlusTree.Test,TestMultiInstance,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestMultiInstance.cs,TestSyncFromLogging,The following statement contains a magic number: var options = new BPlusTree<int' string>.OptionsV2(new PrimitiveSerializer()' new PrimitiveSerializer())                  {                      CreateFile = CreatePolicy.Always'                      FileName = tempFile.TempPath'                      TransactionLogFileName = logfile.TempPath'                  }.CalcBTreeOrder(4' 10);
Magic Number,CSharpTest.Net.BPlusTree.Test,TestMultiInstance,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestMultiInstance.cs,TestSyncFromLogging,The following statement contains a magic number: var options = new BPlusTree<int' string>.OptionsV2(new PrimitiveSerializer()' new PrimitiveSerializer())                  {                      CreateFile = CreatePolicy.Always'                      FileName = tempFile.TempPath'                      TransactionLogFileName = logfile.TempPath'                  }.CalcBTreeOrder(4' 10);
Magic Number,CSharpTest.Net.BPlusTree.Test,TestMultiInstance,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestMultiInstance.cs,TestSyncFromLogging,The following statement contains a magic number: tree.AddRange(MakeValues(1' 99));
Magic Number,CSharpTest.Net.BPlusTree.Test,TestMultiInstance,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestMultiInstance.cs,TestSyncFromLogging,The following statement contains a magic number: Assert.AreEqual(100' copy.Count);
Magic Number,CSharpTest.Net.BPlusTree.Test,TestMultiInstance,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestMultiInstance.cs,TestSyncFromLogging,The following statement contains a magic number: i < 100
Magic Number,CSharpTest.Net.BPlusTree.Test,TestMultiInstance,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestMultiInstance.cs,TestSyncFromLogging,The following statement contains a magic number: tree.AddRange(MakeValues(1000' 1000));
Magic Number,CSharpTest.Net.BPlusTree.Test,TestMultiInstance,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestMultiInstance.cs,TestSyncFromLogging,The following statement contains a magic number: tree.AddRange(MakeValues(1000' 1000));
Magic Number,CSharpTest.Net.BPlusTree.Test,TestMultiInstance,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestMultiInstance.cs,TestSyncFromLogging,The following statement contains a magic number: Assert.AreEqual(1000' copy.Count);
Magic Number,CSharpTest.Net.BPlusTree.Test,TestSimpleDictionary,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestSimpleDictionary.cs,GetSample,The following statement contains a magic number: return new[]                          {                             new KeyValuePair<int'string>(1' "1")'                             new KeyValuePair<int'string>(3' "3")'                             new KeyValuePair<int'string>(5' "5")'                             new KeyValuePair<int'string>(7' "7")'                             new KeyValuePair<int'string>(9' "9")'                             new KeyValuePair<int'string>(11' "11")'                             new KeyValuePair<int'string>(13' "13")'                         };
Magic Number,CSharpTest.Net.BPlusTree.Test,TestSimpleDictionary,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestSimpleDictionary.cs,GetSample,The following statement contains a magic number: return new[]                          {                             new KeyValuePair<int'string>(1' "1")'                             new KeyValuePair<int'string>(3' "3")'                             new KeyValuePair<int'string>(5' "5")'                             new KeyValuePair<int'string>(7' "7")'                             new KeyValuePair<int'string>(9' "9")'                             new KeyValuePair<int'string>(11' "11")'                             new KeyValuePair<int'string>(13' "13")'                         };
Magic Number,CSharpTest.Net.BPlusTree.Test,TestSimpleDictionary,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestSimpleDictionary.cs,GetSample,The following statement contains a magic number: return new[]                          {                             new KeyValuePair<int'string>(1' "1")'                             new KeyValuePair<int'string>(3' "3")'                             new KeyValuePair<int'string>(5' "5")'                             new KeyValuePair<int'string>(7' "7")'                             new KeyValuePair<int'string>(9' "9")'                             new KeyValuePair<int'string>(11' "11")'                             new KeyValuePair<int'string>(13' "13")'                         };
Magic Number,CSharpTest.Net.BPlusTree.Test,TestSimpleDictionary,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestSimpleDictionary.cs,GetSample,The following statement contains a magic number: return new[]                          {                             new KeyValuePair<int'string>(1' "1")'                             new KeyValuePair<int'string>(3' "3")'                             new KeyValuePair<int'string>(5' "5")'                             new KeyValuePair<int'string>(7' "7")'                             new KeyValuePair<int'string>(9' "9")'                             new KeyValuePair<int'string>(11' "11")'                             new KeyValuePair<int'string>(13' "13")'                         };
Magic Number,CSharpTest.Net.BPlusTree.Test,TestSimpleDictionary,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestSimpleDictionary.cs,GetSample,The following statement contains a magic number: return new[]                          {                             new KeyValuePair<int'string>(1' "1")'                             new KeyValuePair<int'string>(3' "3")'                             new KeyValuePair<int'string>(5' "5")'                             new KeyValuePair<int'string>(7' "7")'                             new KeyValuePair<int'string>(9' "9")'                             new KeyValuePair<int'string>(11' "11")'                             new KeyValuePair<int'string>(13' "13")'                         };
Magic Number,CSharpTest.Net.BPlusTree.Test,TestSimpleDictionary,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestSimpleDictionary.cs,GetSample,The following statement contains a magic number: return new[]                          {                             new KeyValuePair<int'string>(1' "1")'                             new KeyValuePair<int'string>(3' "3")'                             new KeyValuePair<int'string>(5' "5")'                             new KeyValuePair<int'string>(7' "7")'                             new KeyValuePair<int'string>(9' "9")'                             new KeyValuePair<int'string>(11' "11")'                             new KeyValuePair<int'string>(13' "13")'                         };
Magic Number,CSharpTest.Net.BPlusTree.Test,TestTransactionLog,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestTransactionLog.cs,TestTransactionLogOptions,The following statement contains a magic number: Assert.AreEqual(8' opt.FileBuffer);
Magic Number,CSharpTest.Net.BPlusTree.Test,TestTransactionLog,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestTransactionLog.cs,TestMultipleWriteAndReplay,The following statement contains a magic number: log.AddValue(ref token' 2' "test");
Magic Number,CSharpTest.Net.BPlusTree.Test,TestTransactionLog,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestTransactionLog.cs,TestMultipleWriteAndReplay,The following statement contains a magic number: log.AddValue(ref token' 3' "test");
Magic Number,CSharpTest.Net.BPlusTree.Test,TestTransactionLog,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestTransactionLog.cs,TestMultipleWriteAndReplay,The following statement contains a magic number: Assert.AreEqual(3' test.Count);
Magic Number,CSharpTest.Net.BPlusTree.Test,TestTransactionLog,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestTransactionLog.cs,TestMultipleTransAndReplay,The following statement contains a magic number: log.AddValue(ref token' 2' "test");
Magic Number,CSharpTest.Net.BPlusTree.Test,TestTransactionLog,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestTransactionLog.cs,TestMultipleTransAndReplay,The following statement contains a magic number: log.AddValue(ref token' 3' "test");
Magic Number,CSharpTest.Net.BPlusTree.Test,TestTransactionLog,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestTransactionLog.cs,TestMultipleTransAndReplay,The following statement contains a magic number: Assert.AreEqual(3' test.Count);
Magic Number,CSharpTest.Net.BPlusTree.Test,TestTransactionLog,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestTransactionLog.cs,TestMultipleTransAndReplay,The following statement contains a magic number: i <= 3
Magic Number,CSharpTest.Net.BPlusTree.Test,TestTransactionLog,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestTransactionLog.cs,TestBenchmarkWriteSpeed,The following statement contains a magic number: Guid[] ids = new Guid[1000000];
Magic Number,CSharpTest.Net.BPlusTree.Test,TestTransactionLog,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestTransactionLog.cs,TestBenchmarkWriteSpeed,The following statement contains a magic number: bytes = new byte[100];
Magic Number,CSharpTest.Net.BPlusTree.Test,TestTransactionLog,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestTransactionLog.cs,TestBenchmarkWriteSpeed,The following statement contains a magic number: i < 20
Magic Number,CSharpTest.Net.BPlusTree.Test,TestTransactionLog,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestTransactionLog.cs,TestLargeWriteAndReplay,The following statement contains a magic number: string testdata = new String('*'' 512);
Magic Number,CSharpTest.Net.BPlusTree.Test,TestTransactionLog,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestTransactionLog.cs,TestLargeWriteAndReplay,The following statement contains a magic number: Assert.AreEqual(20' test.Count);
Magic Number,CSharpTest.Net.BPlusTree.Test,TestTransactionLog,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestTransactionLog.cs,TestProgressiveReplay,The following statement contains a magic number: log.AddValue(ref token' 2' "test");
Magic Number,CSharpTest.Net.BPlusTree.Test,TestTransactionLog,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestTransactionLog.cs,TestProgressiveReplay,The following statement contains a magic number: Assert.IsTrue(test.ContainsKey(2));
Magic Number,CSharpTest.Net.BPlusTree.Test,TestTransactionLog,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestTransactionLog.cs,TestProgressiveReplay,The following statement contains a magic number: Assert.AreEqual("test"' test[2]);
Magic Number,CSharpTest.Net.BPlusTree.Test,TestTransactionLog,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestTransactionLog.cs,TestPositionAndReplay,The following statement contains a magic number: log.AddValue(ref token' 2' "test");
Magic Number,CSharpTest.Net.BPlusTree.Test,TestTransactionLog,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestTransactionLog.cs,TestPositionAndReplay,The following statement contains a magic number: Assert.AreEqual("test"' test[2]);
Magic Number,CSharpTest.Net.BPlusTree.Test,TestTransactionLog,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestTransactionLog.cs,TestLogWithJunkAppended,The following statement contains a magic number: i < 20
Magic Number,CSharpTest.Net.BPlusTree.Test,TestTransactionLog,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestTransactionLog.cs,TestLogWithJunkAppended,The following statement contains a magic number: Assert.AreEqual(20' test.Count);
Magic Number,CSharpTest.Net.BPlusTree.Test,TestTransactionLog,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestTransactionLog.cs,TestLogWithJunkAppended,The following statement contains a magic number: i < 20
Magic Number,CSharpTest.Net.BPlusTree.Test,TestTransactionLog,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestTransactionLog.cs,TestLogWithJunkAppended,The following statement contains a magic number: byte[] junk = new byte[512];
Magic Number,CSharpTest.Net.BPlusTree.Test,TestTransactionLog,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestTransactionLog.cs,TestLogWithJunkAppended,The following statement contains a magic number: Assert.AreEqual(20' test.Count);
Magic Number,CSharpTest.Net.BPlusTree.Test,TestTransactionLog,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\TestTransactionLog.cs,TestLogWithJunkAppended,The following statement contains a magic number: i < 20
Magic Number,CSharpTest.Net.BPlusTree.Test,ThreadedBTreeTest,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\ThreadedBTreeTest.cs,TestAtomicUpdate,The following statement contains a magic number: const int updates = 10000;
Magic Number,CSharpTest.Net.BPlusTree.Test,ThreadedBTreeTest,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\ThreadedBTreeTest.cs,TestAtomicUpdate,The following statement contains a magic number: Assert.IsTrue(w.Complete(true' 60000));
Magic Number,CSharpTest.Net.BPlusTree.Test,ThreadedBTreeTest,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\ThreadedBTreeTest.cs,TestCallLevelLocking,The following statement contains a magic number: options.LockTimeout = 100;
Magic Number,CSharpTest.Net.BPlusTree.Test,ThreadedBTreeTest,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\ThreadedBTreeTest.cs,TestCallLevelLocking,The following statement contains a magic number: Assert.IsTrue(proc.BeginInvoke(null' null).AsyncWaitHandle.WaitOne(1000' false));
Magic Number,CSharpTest.Net.BPlusTree.Test,ThreadedBTreeTest,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\ThreadedBTreeTest.cs,TestCallLevelLocking,The following statement contains a magic number: Assert.IsTrue(proc.BeginInvoke(null' null).AsyncWaitHandle.WaitOne(1000' false));
Magic Number,CSharpTest.Net.BPlusTree.Test,ThreadedBTreeTest,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\ThreadedBTreeTest.cs,TestCallLevelLocking,The following statement contains a magic number: Assert.IsTrue(proc.BeginInvoke(null' null).AsyncWaitHandle.WaitOne(1000' false));
Magic Number,CSharpTest.Net.BPlusTree.Test,ThreadedBTreeTest,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\ThreadedBTreeTest.cs,TestCallLevelLocking,The following statement contains a magic number: Assert.IsTrue(proc.BeginInvoke(null' null).AsyncWaitHandle.WaitOne(1000' false));
Magic Number,CSharpTest.Net.BPlusTree.Test,ThreadedBTreeTest,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\ThreadedBTreeTest.cs,LoopTestAbortWritersAndRecover,The following statement contains a magic number: i < 10
Magic Number,CSharpTest.Net.BPlusTree.Test,ThreadedBTreeTest,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\ThreadedBTreeTest.cs,TestAbortWritersAndRecover,The following statement contains a magic number: options.CalcBTreeOrder(32' 300);
Magic Number,CSharpTest.Net.BPlusTree.Test,ThreadedBTreeTest,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\ThreadedBTreeTest.cs,TestAbortWritersAndRecover,The following statement contains a magic number: options.CalcBTreeOrder(32' 300);
Magic Number,CSharpTest.Net.BPlusTree.Test,ThreadedBTreeTest,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\ThreadedBTreeTest.cs,StartAndAbortWriters,The following statement contains a magic number: work.Enqueue(new ThreadedTest(dictionary' 10000000).Run);
Magic Number,CSharpTest.Net.BPlusTree.Test,ThreadedBTreeTest,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\ThreadedBTreeTest.cs,StartAndAbortWriters,The following statement contains a magic number: RecordsCreated < 1000
Magic Number,CSharpTest.Net.BPlusTree.Test,ThreadedBTreeTest,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\ThreadedBTreeTest.cs,TestErrorsOnInsertAndDelete,The following statement contains a magic number: const int CountPerThread = 100;
Magic Number,CSharpTest.Net.BPlusTree.Test,ThreadedBTreeTest,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\ThreadedBTreeTest.cs,TestErrorsOnInsertAndDelete,The following statement contains a magic number: options.CalcBTreeOrder(32' 300);
Magic Number,CSharpTest.Net.BPlusTree.Test,ThreadedBTreeTest,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\ThreadedBTreeTest.cs,TestErrorsOnInsertAndDelete,The following statement contains a magic number: options.CalcBTreeOrder(32' 300);
Magic Number,CSharpTest.Net.BPlusTree.Test,ThreadedBTreeTest,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\ThreadedBTreeTest.cs,TestErrorsOnInsertAndDelete,The following statement contains a magic number: Assert.IsTrue(work.Complete(true' 60000));
Magic Number,CSharpTest.Net.BPlusTree.Test,ThreadedBTreeTest,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\ThreadedBTreeTest.cs,TestConcurrentCreateReadUpdateDelete8000,The following statement contains a magic number: const int keysize = 16 + 4;
Magic Number,CSharpTest.Net.BPlusTree.Test,ThreadedBTreeTest,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\ThreadedBTreeTest.cs,TestConcurrentCreateReadUpdateDelete8000,The following statement contains a magic number: const int keysize = 16 + 4;
Magic Number,CSharpTest.Net.BPlusTree.Test,ThreadedBTreeTest,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\ThreadedBTreeTest.cs,TestConcurrentCreateReadUpdateDelete8000,The following statement contains a magic number: const int valuesize = keysize + 256 + 44;
Magic Number,CSharpTest.Net.BPlusTree.Test,ThreadedBTreeTest,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\ThreadedBTreeTest.cs,TestConcurrentCreateReadUpdateDelete8000,The following statement contains a magic number: const int valuesize = keysize + 256 + 44;
Magic Number,CSharpTest.Net.BPlusTree.Test,ThreadedBTreeTest,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\ThreadedBTreeTest.cs,TestConcurrentCreateReadUpdateDelete8000,The following statement contains a magic number: options.FileBlockSize = 8192;
Magic Number,CSharpTest.Net.BPlusTree.Test,ThreadedBTreeTest,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\ThreadedBTreeTest.cs,TestConcurrentCreateReadUpdateDelete8000,The following statement contains a magic number: options.CacheKeepAliveTimeout = 10000;
Magic Number,CSharpTest.Net.BPlusTree.Test,ThreadedBTreeTest,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\ThreadedBTreeTest.cs,TestConcurrentCreateReadUpdateDelete8000,The following statement contains a magic number: options.CacheKeepAliveMaximumHistory = 200;
Magic Number,CSharpTest.Net.BPlusTree.Test,ThreadedBTreeTest,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\ThreadedBTreeTest.cs,TestConcurrentCreateReadUpdateDelete8000,The following statement contains a magic number: options.LockTimeout = 10000;
Magic Number,CSharpTest.Net.BPlusTree.Test,ThreadedBTreeTest,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\ThreadedBTreeTest.cs,TestConcurrentCreateReadUpdateDelete8000,The following statement contains a magic number: work.Enqueue(new ThreadedTest(dictionary' 1000).Run);
Magic Number,CSharpTest.Net.BPlusTree.Test,ThreadedBTreeTest,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\ThreadedBTreeTest.cs,TestConcurrentCreateReadUpdateDelete8000,The following statement contains a magic number: Assert.IsTrue(work.Complete(true' 60000));
Magic Number,CSharpTest.Net.BPlusTree.Test,ThreadedTest,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\ThreadedBTreeTest.cs,Run,The following statement contains a magic number: byte[] bytes = new byte[255];
Magic Number,CSharpTest.Net.BPlusTree.Test,ThreadedMassInsertTest,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\ThreadedMassInsertTest.cs,TestConcurrency,The following statement contains a magic number: options.CalcBTreeOrder(16' 24);
Magic Number,CSharpTest.Net.BPlusTree.Test,ThreadedMassInsertTest,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\ThreadedMassInsertTest.cs,TestConcurrency,The following statement contains a magic number: options.CalcBTreeOrder(16' 24);
Magic Number,CSharpTest.Net.BPlusTree.Test,ThreadedMassInsertTest,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\ThreadedMassInsertTest.cs,TestConcurrency,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,CSharpTest.Net.BPlusTree.Test,ThreadedMassInsertTest,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\ThreadedMassInsertTest.cs,DeleteStuff,The following statement contains a magic number: int limit = tree.Count - 1000;
Magic Number,CSharpTest.Net.BPlusTree.Test,ThreadedMassInsertTest,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\ThreadedMassInsertTest.cs,DeleteStuff,The following statement contains a magic number: tree.Count > 1000
Magic Number,CSharpTest.Net.BPlusTree.Test,ThreadedMassInsertTest,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\ThreadedMassInsertTest.cs,AddIdle,The following statement contains a magic number: Thread.Sleep(size - 100000);
Magic Number,CSharpTest.Net.BPlusTree.Test,ThreadedMassInsertTest,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\ThreadedMassInsertTest.cs,AddIdle,The following statement contains a magic number: size > 100000
Magic Number,CSharpTest.Net.BPlusTree.Test,ThreadedMassInsertTest,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\ThreadedMassInsertTest.cs,AddStuff,The following statement contains a magic number: CreateData(100)
Magic Number,CSharpTest.Net.BPlusTree.Test,ThreadedMassInsertTest,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\ThreadedMassInsertTest.cs,AddRanges,The following statement contains a magic number: tree.AddRange(CreateData(100));
Magic Number,CSharpTest.Net.BPlusTree.Test,ThreadedMassInsertTest,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\ThreadedMassInsertTest.cs,BulkyInserts,The following statement contains a magic number: tree.BulkInsert(CreateData(100));
Magic Number,CSharpTest.Net.BPlusTree.Test,ThreadedMassInsertTest,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\ThreadedMassInsertTest.cs,BulkyInserts,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,CSharpTest.Net.Crypto,Hash,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\Crypto\Hash.cs,Hash,The following statement contains a magic number: Check.Assert<ArgumentOutOfRangeException>(sz == 16 || sz == 20 || sz == 32 || sz == 48 || sz == 64);
Magic Number,CSharpTest.Net.Crypto,Hash,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\Crypto\Hash.cs,Hash,The following statement contains a magic number: Check.Assert<ArgumentOutOfRangeException>(sz == 16 || sz == 20 || sz == 32 || sz == 48 || sz == 64);
Magic Number,CSharpTest.Net.Crypto,Hash,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\Crypto\Hash.cs,Hash,The following statement contains a magic number: Check.Assert<ArgumentOutOfRangeException>(sz == 16 || sz == 20 || sz == 32 || sz == 48 || sz == 64);
Magic Number,CSharpTest.Net.Crypto,Hash,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\Crypto\Hash.cs,Hash,The following statement contains a magic number: Check.Assert<ArgumentOutOfRangeException>(sz == 16 || sz == 20 || sz == 32 || sz == 48 || sz == 64);
Magic Number,CSharpTest.Net.Crypto,Hash,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\Crypto\Hash.cs,Hash,The following statement contains a magic number: Check.Assert<ArgumentOutOfRangeException>(sz == 16 || sz == 20 || sz == 32 || sz == 48 || sz == 64);
Magic Number,CSharpTest.Net.Threading,WorkQueue<T>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\Threading\WorkQueue.cs,WorkQueue,The following statement contains a magic number: Check.InRange(nThreads' 1' 10000);
Magic Number,CSharpTest.Net.Threading,WorkQueue<T>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\Threading\WorkQueue.cs,WorkQueue,The following statement contains a magic number: _queue = new Queue<T>(nThreads * 2);
Magic Number,CSharpTest.Net.Threading,WorkQueue<T>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\Threading\WorkQueue.cs,Dispose,The following statement contains a magic number: Complete(false' 100);
Magic Number,CSharpTest.Net.Threading,WorkQueue<T>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.BPlusTreeTest\Threading\WorkQueue.cs,Complete,The following statement contains a magic number: !t.Join(10000)
