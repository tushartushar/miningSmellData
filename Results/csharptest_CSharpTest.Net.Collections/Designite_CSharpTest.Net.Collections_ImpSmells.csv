Implementation smell,Namespace,Class,File,Method,Description
Long Method,CSharpTest.Net.Collections,TransactionLog<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\TransactionLog.cs,EnumerateLog,The method has 104 lines of code.
Complex Method,CSharpTest.Net.Collections,BPlusTree<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Debug.cs,Print,Cyclomatic complexity of the method is 11
Complex Method,CSharpTest.Net.Collections,BPlusTree<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Debug.cs,Validate,Cyclomatic complexity of the method is 9
Complex Method,CSharpTest.Net.Collections,BPlusTree<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Debug.cs,BPlusTree,Cyclomatic complexity of the method is 11
Complex Method,CSharpTest.Net.Collections,BPlusTree<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Debug.cs,EnumerateFile,Cyclomatic complexity of the method is 8
Complex Method,CSharpTest.Net.Collections,BPlusTree<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Debug.cs,AddRange,Cyclomatic complexity of the method is 13
Complex Method,CSharpTest.Net.Collections,BPlusTree<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Debug.cs,BulkWrite,Cyclomatic complexity of the method is 13
Complex Method,CSharpTest.Net.Collections,BPlusTree<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Debug.cs,EnumerateNodeContents,Cyclomatic complexity of the method is 8
Complex Method,CSharpTest.Net.Collections,BPlusTree<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Debug.cs,Delete,Cyclomatic complexity of the method is 11
Complex Method,CSharpTest.Net.Collections,BPlusTree<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Debug.cs,Insert,Cyclomatic complexity of the method is 10
Complex Method,CSharpTest.Net.Collections,OptionsV2,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Options.cs,CreateStorage,Cyclomatic complexity of the method is 10
Complex Method,CSharpTest.Net.Collections,BTreeDictionary<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BTreeDictionary.cs,Add,Cyclomatic complexity of the method is 8
Complex Method,CSharpTest.Net.Collections,BTreeDictionary<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BTreeDictionary.cs,Remove,Cyclomatic complexity of the method is 8
Complex Method,CSharpTest.Net.Collections,BTreeDictionary<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BTreeDictionary.cs,DebugAssert,Cyclomatic complexity of the method is 14
Complex Method,CSharpTest.Net.Collections,BTreeDictionary<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BTreeDictionary.cs,DescendAssert,Cyclomatic complexity of the method is 9
Complex Method,CSharpTest.Net.Collections,Enumerator,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BTreeDictionary.cs,MoveNext,Cyclomatic complexity of the method is 8
Complex Method,CSharpTest.Net.Collections,BTreeList<T>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BTreeList.cs,Add,Cyclomatic complexity of the method is 8
Complex Method,CSharpTest.Net.Collections,BTreeList<T>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BTreeList.cs,Remove,Cyclomatic complexity of the method is 8
Complex Method,CSharpTest.Net.Collections,LurchTable<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\LurchTable.cs,TryDequeue,Cyclomatic complexity of the method is 15
Complex Method,CSharpTest.Net.Collections,LurchTable<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\LurchTable.cs,InternalInsert,Cyclomatic complexity of the method is 9
Complex Method,CSharpTest.Net.Collections,LurchTable<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\LurchTable.cs,Delete,Cyclomatic complexity of the method is 8
Complex Method,CSharpTest.Net.Collections,LurchTable<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\LurchTable.cs,InternalUnlink,Cyclomatic complexity of the method is 10
Complex Method,CSharpTest.Net.Collections,LurchTable<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\LurchTable.cs,AllocSlot,Cyclomatic complexity of the method is 9
Complex Method,CSharpTest.Net.Collections,OrderedEnumeration<T>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\OrderedEnumeration.cs,PagedAndOrdered,Cyclomatic complexity of the method is 9
Complex Method,CSharpTest.Net.Collections,OrderedEnumerator,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\OrderedEnumeration.cs,MoveNext,Cyclomatic complexity of the method is 10
Complex Method,CSharpTest.Net.Collections,OrdinalList,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\OrdinalList.cs,OrdinalList,Cyclomatic complexity of the method is 10
Complex Method,CSharpTest.Net.Collections,OrdinalList,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\OrdinalList.cs,EnumerateRange,Cyclomatic complexity of the method is 12
Complex Method,CSharpTest.Net.Collections,TransactionLog<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\TransactionLog.cs,EnumerateLog,Cyclomatic complexity of the method is 16
Complex Method,CSharpTest.Net.Collections,NodeCacheNormal,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\NodeCache.Normal.cs,GetCache,Cyclomatic complexity of the method is 10
Complex Method,CSharpTest.Net.IO,FragmentedFile,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\FragmentedFile.cs,FragmentedFile,Cyclomatic complexity of the method is 8
Complex Method,CSharpTest.Net.IO,TransactedCompoundFile,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\TransactedCompoundFile.cs,LoadSections,Cyclomatic complexity of the method is 8
Complex Method,CSharpTest.Net.IO,TransactedCompoundFile,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\TransactedCompoundFile.cs,TakeBlocks,Cyclomatic complexity of the method is 10
Complex Method,CSharpTest.Net.Synchronization,SimpleReadWriteLocking,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Synchronization\SimpleReadWriteLocking.cs,WaitForExclusive,Cyclomatic complexity of the method is 8
Long Parameter List,CSharpTest.Net.Collections,BPlusTree<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Debug.cs,AddRange,The method has 5 parameters. Parameters: thisLock' range' value' parent' parentIx
Long Parameter List,CSharpTest.Net.Collections,BPlusTree<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Debug.cs,Delete,The method has 5 parameters. Parameters: thisLock' key' condition' parent' parentIx
Long Parameter List,CSharpTest.Net.Collections,BPlusTree<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Debug.cs,CopyElements,The method has 6 parameters. Parameters: src' srcIndex' dest' destIndex' count' firstSrcKey
Long Parameter List,CSharpTest.Net.Collections,BPlusTree<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Debug.cs,Join,The method has 5 parameters. Parameters: small' big' moveToBigger' parent' parentSmallIndex
Long Parameter List,CSharpTest.Net.Collections,BPlusTree<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Debug.cs,Insert,The method has 5 parameters. Parameters: thisLock' key' value' parent' parentIx
Long Parameter List,CSharpTest.Net.Collections,BPlusTree<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Debug.cs,Split,The method has 6 parameters. Parameters: trans' thisLock' parentLock' parentIx' splitKey' leftHeavy
Long Parameter List,CSharpTest.Net.Collections,BTreeDictionary<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BTreeDictionary.cs,Add,The method has 5 parameters. Parameters: parent' myIx' me' item' adding
Long Parameter List,CSharpTest.Net.Collections,Enumerator,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BTreeDictionary.cs,SeekNext,The method has 6 parameters. Parameters: thisLock' key' pin' offset' nextKey' hasMore
Long Parameter List,CSharpTest.Net.Collections,Node,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BTreeDictionary.cs,Node,The method has 5 parameters. Parameters: order' split' splitKey' first' last
Long Parameter List,CSharpTest.Net.Collections,Node,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BTreeDictionary.cs,Node,The method has 5 parameters. Parameters: order' split' splitKey' first' last
Long Parameter List,CSharpTest.Net.Collections,BTreeList<T>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BTreeList.cs,Add,The method has 5 parameters. Parameters: parent' myIx' me' item' adding
Long Parameter List,CSharpTest.Net.Collections,LurchTable<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\LurchTable.cs,LurchTable,The method has 6 parameters. Parameters: ordering' limit' hashSize' allocSize' lockSize' comparer
Long Parameter List,CSharpTest.Net.Collections,MergeSort,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\MergeSort.cs,Sort,The method has 5 parameters. Parameters: list' working' offset' count' compare
Long Parameter List,CSharpTest.Net.Collections,MergeSort,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\MergeSort.cs,Sort,The method has 5 parameters. Parameters: src' dest' offset' count' compare
Long Parameter List,CSharpTest.Net.Collections,OrderedKeyValuePairs<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\OrderedKeyValuePairs.cs,OrderedKeyValuePairs,The method has 5 parameters. Parameters: comparer' unordered' keySerializer' valueSerializer' memoryLimit
Long Parameter List,CSharpTest.Net.Collections,NodePin,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\NodePin.cs,NodePin,The method has 7 parameters. Parameters: handle' lck' ltype' lockHeld' refobj' original' updated
Long Parameter List,CSharpTest.Net.IO,FileStreamFactory,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\FileStreamFactory.cs,FileStreamFactory,The method has 5 parameters. Parameters: filename' mode' access' share' bufferSize
Long Parameter List,CSharpTest.Net.IO,FileStreamFactory,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\FileStreamFactory.cs,FileStreamFactory,The method has 6 parameters. Parameters: filename' mode' access' share' bufferSize' options
Long Parameter List,CSharpTest.Net.IO,FragmentedFile,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\FragmentedFile.cs,FragmentedFile,The method has 5 parameters. Parameters: filename' blockSize' growthRate' cacheLimit' options
Long Parameter List,CSharpTest.Net.IO,FragmentedFile,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\FragmentedFile.cs,FragmentedFile,The method has 7 parameters. Parameters: filename' blockSize' growthRate' cacheLimit' access' share' options
Long Parameter List,CSharpTest.Net.IO,FragmentedFile,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\FragmentedFile.cs,FragmentedFile,The method has 5 parameters. Parameters: streamFactory' blockSize' growthRate' cacheLimit' options
Long Parameter List,CSharpTest.Net.IO,FragmentedFile,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\FragmentedFile.cs,CreateNew,The method has 5 parameters. Parameters: filename' blockSize' growthRate' cacheLimit' options
Long Parameter List,CSharpTest.Net.IO,FragmentedFile,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\FragmentedFile.cs,ReadBlock,The method has 5 parameters. Parameters: ordinal' block' length' type' exactId
Long Parameter List,CSharpTest.Net.IO,FileSection,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\TransactedCompoundFile.cs,TryLoadSection,The method has 5 parameters. Parameters: stream' alt' sectionIndex' blockSize' section
Long Parameter List,CSharpTest.Net.IO,FileSection,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\TransactedCompoundFile.cs,Write,The method has 5 parameters. Parameters: block' fput' bytes' offset' length
Long Parameter List,CSharpTest.Net.Storage,BTreeFileStore,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Storage\Storage.Disk.cs,BTreeFileStore,The method has 6 parameters. Parameters: filePath' blockSize' growthRate' concurrentWriters' options' readOnly
Long Parameter List,CSharpTest.Net.Storage,BTreeFileStore,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Storage\Storage.Disk.cs,CreateNew,The method has 5 parameters. Parameters: filepath' blockSize' growthRate' concurrentWriters' options
Long Statement,CSharpTest.Net.Collections,BPlusTree<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Debug.cs,RecoveryScan,The length of the statement  "            using (FragmentedFile file = new FragmentedFile(filename' options.FileBlockSize' 1' 1' FileAccess.Read' sharing' FileOptions.None)) " is 131.
Long Statement,CSharpTest.Net.Collections,BPlusTree<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Debug.cs,RecoveryScan,The length of the statement  "                NodeSerializer nodeReader = new NodeSerializer(options' new NodeHandleSerializer(new Storage.BTreeFileStore.HandleSerializer())); " is 129.
Long Statement,CSharpTest.Net.Collections,BPlusTree<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Debug.cs,BulkInsert,The length of the statement  "                KeyValueSerializer<TKey' TValue> kvserializer = new KeyValueSerializer<TKey' TValue>(_options.KeySerializer' _options.ValueSerializer); " is 135.
Long Statement,CSharpTest.Net.Collections,BPlusTree<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Debug.cs,Join,The length of the statement  "                        CopyElements(big.Ptr' Math.Max(0' borrowing - small.Ptr.Count)' newBig.Ptr' newBig.Ptr.Count' Math.Min(big.Ptr.Count' total - borrowing)' bigZeroKey); " is 150.
Long Statement,CSharpTest.Net.Collections,Options,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Options.cs,CalculateOrder,The length of the statement  "                int maxValueNodes = Math.Min(256' Math.Max(4' (FileBlockSize - storeageOverhead) / Math.Max(1' (avgValueSizeBytes + avgKeySizeBytes)))); " is 136.
Long Statement,CSharpTest.Net.Collections,BTreeDictionary<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BTreeDictionary.cs,Seek,The length of the statement  "                int ix = Array.BinarySearch<KeyValuePair<TKey' Node>>(found.Parent.Children' 1' found.Parent.Count - 1' seek' _kvcomparer); " is 123.
Long Statement,CSharpTest.Net.Collections,TransactionLog<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\TransactionLog.cs,EnumerateLog,The length of the statement  "                using (Stream io = new FileStream(_options.FileName' FileMode.Open' FileAccess.Read' FileShare.ReadWrite' 0x10000' FileOptions.SequentialScan)) " is 143.
Long Statement,CSharpTest.Net.IO,TransactedCompoundFile,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\TransactedCompoundFile.cs,FlushStream,The length of the statement  "                SafeFileHandle handle = (SafeFileHandle)fs.GetType().GetField("_handle"' BindingFlags.Instance | BindingFlags.NonPublic).GetValue(fs); " is 134.
Long Statement,CSharpTest.Net,Resources,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Resources.Designer.cs,FailedToConstructSingleton,The length of the statement  "            return String.Format(resourceCulture' CSharpTest.Net.Resources.FormatStrings.FailedToConstructSingleton_System_Type_type_' type); " is 129.
Long Statement,CSharpTest.Net,Resources,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Resources.Designer.cs,StringConverterTryParse,The length of the statement  "            return String.Format(resourceCulture' CSharpTest.Net.Resources.FormatStrings.StringConverterTryParse_System_Type_type_' type); " is 126.
Long Statement,CSharpTest.Net.Utils,ObjectKeepAlive,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Utils\ObjectKeepAlive.cs,Tick,The length of the statement  "            while (entryCount > 0 && offset < BucketSize && (entryCount > _maxItems || (item.Age < expireBefore && entryCount > _minItems))) " is 128.
Complex Conditional,CSharpTest.Net.Collections,BPlusTree<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Debug.cs,BPlusTree,The conditional expression  "_options.LogFile.Size > 0 && (                          _options.ExistingLogAction == ExistingLogAction.Replay ||                          _options.ExistingLogAction == ExistingLogAction.ReplayAndCommit ||                          (_options.ExistingLogAction == ExistingLogAction.Default && fileExists)                      )"  is complex.
Complex Conditional,CSharpTest.Net.Collections,BPlusTree<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Debug.cs,Delete,The conditional expression  "parent != null && parent.Ptr.IsRoot && me.Count == 1 && !me.IsLeaf"  is complex.
Complex Conditional,CSharpTest.Net.Collections,BTreeDictionary<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BTreeDictionary.cs,Remove,The conditional expression  "parent == null && ReferenceEquals(me' _root) && me.Count == 1 && me.IsLeaf == false"  is complex.
Complex Conditional,CSharpTest.Net.Collections,BTreeList<T>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BTreeList.cs,Remove,The conditional expression  "parent == null && ReferenceEquals(me' _root) && me.Count == 1 && me.IsLeaf == false"  is complex.
Complex Conditional,CSharpTest.Net.IO,TransactedCompoundFile,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\TransactedCompoundFile.cs,FreeBlocks,The conditional expression  "((block.Count < 16 && block.ActualBlocks != block.Count) ||                           (block.Count == 16 && block.ActualBlocks < 16))"  is complex.
Complex Conditional,CSharpTest.Net.IO,HandleRef,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\TransactedCompoundFile.cs,HandleRef,The conditional expression  "Section < 0 || Section >= 0x10000000 || Offset <= 0 || Offset >= blocksPerSection - 1"  is complex.
Complex Conditional,CSharpTest.Net.IO,BlockRef,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\TransactedCompoundFile.cs,BlockRef,The conditional expression  "Section < 0 || Section >= 0x10000000 || Offset <= 0 || (Offset + Count - 1) >= blocksPerSection - 1"  is complex.
Complex Conditional,CSharpTest.Net.IO,FileSection,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\TransactedCompoundFile.cs,Read,The conditional expression  "headerSize < BlockHeaderSize || blockId != block.Identity ||                          ((block.Count < 16 && block.ActualBlocks != block.Count) ||                           (block.Count == 16 && block.ActualBlocks < 16))"  is complex.
Complex Conditional,CSharpTest.Net.Utils,ObjectKeepAlive,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Utils\ObjectKeepAlive.cs,Tick,The conditional expression  "entryCount > 0 && offset < BucketSize && (entryCount > _maxItems || (item.Age < expireBefore && entryCount > _minItems))"  is complex.
Empty Catch Block,CSharpTest.Net.Collections,BPlusTree<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Debug.cs,RecoveryScan,The method has an empty catch block.
Empty Catch Block,CSharpTest.Net.IO,FragmentedFile,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\FragmentedFile.cs,Dispose,The method has an empty catch block.
Empty Catch Block,CSharpTest.Net.IO,CachedStream,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\StreamCache.cs,Dispose,The method has an empty catch block.
Empty Catch Block,CSharpTest.Net.IO,TempFile,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\TempFile.cs,Delete,The method has an empty catch block.
Magic Number,CSharpTest.Net.Collections,BPlusTree<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Debug.cs,Print,The following statement contains a magic number: prefix = prefix.Substring(0' prefix.Length - 2);
Magic Number,CSharpTest.Net.Collections,BPlusTree<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Debug.cs,Dispose,The following statement contains a magic number: locked = _selfLock.TryWrite(Math.Max(1000' LockTimeout));
Magic Number,CSharpTest.Net.Collections,BPlusTree<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Debug.cs,AddRange,The following statement contains a magic number: KeyValuePair<TKey' TValue>[] items = new KeyValuePair<TKey' TValue>[2048];
Magic Number,CSharpTest.Net.Collections,BPlusTree<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Debug.cs,AddRange,The following statement contains a magic number: Array.Resize(ref items' items.Length * 2);
Magic Number,CSharpTest.Net.Collections,BPlusTree<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Debug.cs,BulkWrite,The following statement contains a magic number: int prev = parent.Count - 2;
Magic Number,CSharpTest.Net.Collections,BPlusTree<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Debug.cs,Join,The following statement contains a magic number: small.Ptr.Count + big.Ptr.Count <= fillFactor ||                      (small.Ptr.Count + big.Ptr.Count) <= (minimumKeys * 2)
Magic Number,CSharpTest.Net.Collections,OptionsV2,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Options.cs,OptionsV2,The following statement contains a magic number: CacheKeepAliveMinimumHistory = 128;
Magic Number,CSharpTest.Net.Collections,OptionsV2,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Options.cs,OptionsV2,The following statement contains a magic number: CacheKeepAliveMaximumHistory = 1024;
Magic Number,CSharpTest.Net.Collections,OptionsV2,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Options.cs,CalculateOrder,The following statement contains a magic number: const int childLinkSize = 8;
Magic Number,CSharpTest.Net.Collections,OptionsV2,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Options.cs,CalculateOrder,The following statement contains a magic number: int maxChildNodes = Math.Min(256' Math.Max(4' FileBlockSize / (avgKeySizeBytes + childLinkSize)));
Magic Number,CSharpTest.Net.Collections,OptionsV2,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Options.cs,CalculateOrder,The following statement contains a magic number: int maxChildNodes = Math.Min(256' Math.Max(4' FileBlockSize / (avgKeySizeBytes + childLinkSize)));
Magic Number,CSharpTest.Net.Collections,OptionsV2,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Options.cs,CalculateOrder,The following statement contains a magic number: int maxValueNodes = Math.Min(256' Math.Max(4' FileBlockSize / Math.Max(1' (avgValueSizeBytes + avgKeySizeBytes))));
Magic Number,CSharpTest.Net.Collections,OptionsV2,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Options.cs,CalculateOrder,The following statement contains a magic number: int maxValueNodes = Math.Min(256' Math.Max(4' FileBlockSize / Math.Max(1' (avgValueSizeBytes + avgKeySizeBytes))));
Magic Number,CSharpTest.Net.Collections,OptionsV2,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Options.cs,CalculateOrder,The following statement contains a magic number: MinimumChildNodes = Math.Max(2' maxChildNodes / 3);
Magic Number,CSharpTest.Net.Collections,OptionsV2,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Options.cs,CalculateOrder,The following statement contains a magic number: MinimumChildNodes = Math.Max(2' maxChildNodes / 3);
Magic Number,CSharpTest.Net.Collections,OptionsV2,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Options.cs,CalculateOrder,The following statement contains a magic number: MinimumValueNodes = Math.Max(2' maxValueNodes / 3);
Magic Number,CSharpTest.Net.Collections,OptionsV2,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Options.cs,CalculateOrder,The following statement contains a magic number: MinimumValueNodes = Math.Max(2' maxValueNodes / 3);
Magic Number,CSharpTest.Net.Collections,Options,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Options.cs,Options,The following statement contains a magic number: _concurrentWriters = Math.Max(4' Math.Min(16' Environment.ProcessorCount));
Magic Number,CSharpTest.Net.Collections,Options,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Options.cs,Options,The following statement contains a magic number: _concurrentWriters = Math.Max(4' Math.Min(16' Environment.ProcessorCount));
Magic Number,CSharpTest.Net.Collections,Options,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Options.cs,Options,The following statement contains a magic number: CacheKeepAliveMinimumHistory = 10;
Magic Number,CSharpTest.Net.Collections,Options,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Options.cs,Options,The following statement contains a magic number: CacheKeepAliveMaximumHistory = 100;
Magic Number,CSharpTest.Net.Collections,Options,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Options.cs,CalculateOrder,The following statement contains a magic number: const int storeageOverhead = 64;
Magic Number,CSharpTest.Net.Collections,Options,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Options.cs,CalculateOrder,The following statement contains a magic number: const int childLinkSize = 32;
Magic Number,CSharpTest.Net.Collections,Options,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Options.cs,CalculateOrder,The following statement contains a magic number: int maxChildNodes = Math.Min(256' Math.Max(4' (FileBlockSize - storeageOverhead) / (avgKeySizeBytes + childLinkSize)));
Magic Number,CSharpTest.Net.Collections,Options,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Options.cs,CalculateOrder,The following statement contains a magic number: int maxChildNodes = Math.Min(256' Math.Max(4' (FileBlockSize - storeageOverhead) / (avgKeySizeBytes + childLinkSize)));
Magic Number,CSharpTest.Net.Collections,Options,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Options.cs,CalculateOrder,The following statement contains a magic number: int maxValueNodes = Math.Min(256' Math.Max(4' (FileBlockSize - storeageOverhead) / Math.Max(1' (avgValueSizeBytes + avgKeySizeBytes))));
Magic Number,CSharpTest.Net.Collections,Options,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Options.cs,CalculateOrder,The following statement contains a magic number: int maxValueNodes = Math.Min(256' Math.Max(4' (FileBlockSize - storeageOverhead) / Math.Max(1' (avgValueSizeBytes + avgKeySizeBytes))));
Magic Number,CSharpTest.Net.Collections,Options,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Options.cs,CalculateOrder,The following statement contains a magic number: MinimumChildNodes = Math.Max(2' maxChildNodes / 3);
Magic Number,CSharpTest.Net.Collections,Options,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Options.cs,CalculateOrder,The following statement contains a magic number: MinimumChildNodes = Math.Max(2' maxChildNodes / 3);
Magic Number,CSharpTest.Net.Collections,Options,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Options.cs,CalculateOrder,The following statement contains a magic number: MinimumValueNodes = Math.Max(2' maxValueNodes / 3);
Magic Number,CSharpTest.Net.Collections,Options,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BPlusTree.Options.cs,CalculateOrder,The following statement contains a magic number: MinimumValueNodes = Math.Max(2' maxValueNodes / 3);
Magic Number,CSharpTest.Net.Collections,BTreeDictionary<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BTreeDictionary.cs,BTreeDictionary,The following statement contains a magic number: order < 4
Magic Number,CSharpTest.Net.Collections,BTreeDictionary<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BTreeDictionary.cs,Remove,The following statement contains a magic number: parent != null && me.Count <= (_order >> 2)
Magic Number,CSharpTest.Net.Collections,BTreeList<T>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\BTreeList.cs,Remove,The following statement contains a magic number: parent != null && me.Count <= (_order >> 2)
Magic Number,CSharpTest.Net.Collections,LurchTable<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\LurchTable.cs,LurchTable,The following statement contains a magic number: _shift < 24 && (1 << (_shift + 1)) < allocSize
Magic Number,CSharpTest.Net.Collections,LurchTable<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\LurchTable.cs,LurchTable,The following statement contains a magic number: _hsize = HashUtilities.SelectPrimeNumber(Math.Max(127' hashSize));
Magic Number,CSharpTest.Net.Collections,MergeSort,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\MergeSort.cs,Sort,The following statement contains a magic number: count > 2
Magic Number,CSharpTest.Net.Collections,OrderedEnumeration<T>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\OrderedEnumeration.cs,PagedAndOrdered,The following statement contains a magic number: T[] items = new T[Math.Min(InMemoryLimit' 2048)];
Magic Number,CSharpTest.Net.Collections,OrderedEnumeration<T>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\OrderedEnumeration.cs,PagedAndOrdered,The following statement contains a magic number: Array.Resize(ref items' Math.Min(InMemoryLimit' items.Length * 2));
Magic Number,CSharpTest.Net.Collections,OrderedEnumeration<T>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\OrderedEnumeration.cs,Merge,The following statement contains a magic number: count == 2
Magic Number,CSharpTest.Net.Collections,OrderedEnumeration<T>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\OrderedEnumeration.cs,Merge,The following statement contains a magic number: int half = count/2;
Magic Number,CSharpTest.Net.Collections,OrdinalList,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\OrdinalList.cs,AllocFor,The following statement contains a magic number: max = 1 + (max >> 3);
Magic Number,CSharpTest.Net.Collections,OrdinalList,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\OrdinalList.cs,AddRange,The following statement contains a magic number: int offset = item >> 3;
Magic Number,CSharpTest.Net.Collections,OrdinalList,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\OrdinalList.cs,Add,The following statement contains a magic number: int offset = item >> 3;
Magic Number,CSharpTest.Net.Collections,OrdinalList,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\OrdinalList.cs,Remove,The following statement contains a magic number: int offset = item >> 3;
Magic Number,CSharpTest.Net.Collections,OrdinalList,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\OrdinalList.cs,Contains,The following statement contains a magic number: int offset = item >> 3;
Magic Number,CSharpTest.Net.Collections,OrdinalList,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\OrdinalList.cs,EnumerateRange,The following statement contains a magic number: yield return ordinal + 2;
Magic Number,CSharpTest.Net.Collections,OrdinalList,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\OrdinalList.cs,EnumerateRange,The following statement contains a magic number: yield return ordinal + 3;
Magic Number,CSharpTest.Net.Collections,OrdinalList,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\OrdinalList.cs,EnumerateRange,The following statement contains a magic number: yield return ordinal + 4;
Magic Number,CSharpTest.Net.Collections,OrdinalList,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\OrdinalList.cs,EnumerateRange,The following statement contains a magic number: yield return ordinal + 5;
Magic Number,CSharpTest.Net.Collections,OrdinalList,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\OrdinalList.cs,EnumerateRange,The following statement contains a magic number: yield return ordinal + 6;
Magic Number,CSharpTest.Net.Collections,OrdinalList,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\OrdinalList.cs,EnumerateRange,The following statement contains a magic number: yield return ordinal + 7;
Magic Number,CSharpTest.Net.Collections,OrdinalList,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\OrdinalList.cs,EnumerateRange,The following statement contains a magic number: ordinal += 8;
Magic Number,CSharpTest.Net.Collections,TransactionLogOptions<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\TransactionLog.cs,TransactionLogOptions,The following statement contains a magic number: _fbuffer = 8;
Magic Number,CSharpTest.Net.Collections,TransactionLog<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\TransactionLog.cs,EnumerateLog,The following statement contains a magic number: const int minSize = 16;
Magic Number,CSharpTest.Net.Collections,TransactionLog<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\TransactionLog.cs,EnumerateLog,The following statement contains a magic number: size = ((byte)(size >> 24) == 0xbb) ? size & 0x00FFFFFF : -1;
Magic Number,CSharpTest.Net.Collections,TransactionLog<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\TransactionLog.cs,EnumerateLog,The following statement contains a magic number: buffer.Capacity = (size + 8192);
Magic Number,CSharpTest.Net.Collections,TransactionLog<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\TransactionLog.cs,EnumerateLog,The following statement contains a magic number: szcontent = size - 8;
Magic Number,CSharpTest.Net.Collections,TransactionLog<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\TransactionLog.cs,Write,The following statement contains a magic number: buffer.Position = 8;
Magic Number,CSharpTest.Net.Collections,TransactionLog<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\TransactionLog.cs,Write,The following statement contains a magic number: buffer.Position = 8;
Magic Number,CSharpTest.Net.Collections,TransactionLog<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\TransactionLog.cs,CommitTransaction,The following statement contains a magic number: crc.Add(bytes' 4' (int)buffer.Position - 4);
Magic Number,CSharpTest.Net.Collections,TransactionLog<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\TransactionLog.cs,CommitTransaction,The following statement contains a magic number: crc.Add(bytes' 4' (int)buffer.Position - 4);
Magic Number,CSharpTest.Net.Collections,TransactionLog<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\TransactionLog.cs,CommitTransaction,The following statement contains a magic number: PrimitiveSerializer.Int32.WriteTo((0xee << 24) + len' buffer);
Magic Number,CSharpTest.Net.Collections,TransactionLog<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\TransactionLog.cs,CommitTransaction,The following statement contains a magic number: PrimitiveSerializer.Int32.WriteTo((0xbb << 24) + len' buffer);
Magic Number,CSharpTest.Net.Collections,TransactionLog<TKey;TValue>,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Collections\TransactionLog.cs,CommitTransaction,The following statement contains a magic number: WriteBytes(bytes' 0' len + 4);
Magic Number,CSharpTest.Net.Collections,StorageCache,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Storage\Storage.Cache.cs,StorageCache,The following statement contains a magic number: _asyncThreshold = 50;
Magic Number,CSharpTest.Net.Collections,StorageCache,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Storage\Storage.Cache.cs,StorageCache,The following statement contains a magic number: _cache = new LurchTable<IStorageHandle' object>(  LurchTableOrder.Access' sizeLimit' 1000000' sizeLimit >> 4' 1000' EqualityComparer<IStorageHandle>.Default);
Magic Number,CSharpTest.Net.Collections,StorageCache,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Storage\Storage.Cache.cs,StorageCache,The following statement contains a magic number: _cache = new LurchTable<IStorageHandle' object>(  LurchTableOrder.Access' sizeLimit' 1000000' sizeLimit >> 4' 1000' EqualityComparer<IStorageHandle>.Default);
Magic Number,CSharpTest.Net.Collections,StorageCache,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Storage\Storage.Cache.cs,StorageCache,The following statement contains a magic number: _cache = new LurchTable<IStorageHandle' object>(  LurchTableOrder.Access' sizeLimit' 1000000' sizeLimit >> 4' 1000' EqualityComparer<IStorageHandle>.Default);
Magic Number,CSharpTest.Net.Collections,StorageCache,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Storage\Storage.Cache.cs,StorageCache,The following statement contains a magic number: _dirty = new LurchTable<IStorageHandle' object>(LurchTableOrder.Modified' sizeLimit' 1000000' sizeLimit >> 4' 1000' EqualityComparer<IStorageHandle>.Default);
Magic Number,CSharpTest.Net.Collections,StorageCache,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Storage\Storage.Cache.cs,StorageCache,The following statement contains a magic number: _dirty = new LurchTable<IStorageHandle' object>(LurchTableOrder.Modified' sizeLimit' 1000000' sizeLimit >> 4' 1000' EqualityComparer<IStorageHandle>.Default);
Magic Number,CSharpTest.Net.Collections,StorageCache,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Storage\Storage.Cache.cs,StorageCache,The following statement contains a magic number: _dirty = new LurchTable<IStorageHandle' object>(LurchTableOrder.Modified' sizeLimit' 1000000' sizeLimit >> 4' 1000' EqualityComparer<IStorageHandle>.Default);
Magic Number,CSharpTest.Net.IO,Crc32,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\Crc32.cs,Crc32,The following statement contains a magic number: Table = new int[256];
Magic Number,CSharpTest.Net.IO,Crc32,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\Crc32.cs,Crc32,The following statement contains a magic number: j < 8
Magic Number,CSharpTest.Net.IO,Crc32,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\Crc32.cs,Crc32,The following statement contains a magic number: i < 256
Magic Number,CSharpTest.Net.IO,Crc32,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\Crc32.cs,Add,The following statement contains a magic number: _crc32 = (((~_crc32 >> 8) & 0x00FFFFFF) ^ Table[(_crc32 ^ b) & 0x0ff]);
Magic Number,CSharpTest.Net.IO,Crc32,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\Crc32.cs,Add,The following statement contains a magic number: _crc32 = (((~_crc32 >> 8) & 0x00FFFFFF) ^ Table[(_crc32 ^ bytes[i]) & 0x0ff]);
Magic Number,CSharpTest.Net.IO,Crc32,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\Crc32.cs,Add,The following statement contains a magic number: _crc32 = (((~_crc32 >> 8) & 0x00FFFFFF) ^ Table[(_crc32 ^ ((byte)ch >> 8)) & 0x0ff]);
Magic Number,CSharpTest.Net.IO,Crc32,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\Crc32.cs,Add,The following statement contains a magic number: _crc32 = (((~_crc32 >> 8) & 0x00FFFFFF) ^ Table[(_crc32 ^ ((byte)ch >> 8)) & 0x0ff]);
Magic Number,CSharpTest.Net.IO,Crc32,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\Crc32.cs,Add,The following statement contains a magic number: _crc32 = (((~_crc32 >> 8) & 0x00FFFFFF) ^ Table[(_crc32 ^ ((byte)ch)) & 0x0ff]);
Magic Number,CSharpTest.Net.IO,FragmentedFile,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\FragmentedFile.cs,CreateNew,The following statement contains a magic number: return CreateNew(filename' blockSize' 100' Environment.ProcessorCount' OptionsWriteThrough);
Magic Number,CSharpTest.Net.IO,FragmentedFile,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\FragmentedFile.cs,SetBlockSize,The following statement contains a magic number: ++ix >= 32
Magic Number,CSharpTest.Net.IO,FileBlock,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\FragmentedFile.cs,FileBlock,The following statement contains a magic number: BlockData = new byte[alignIo ? blockSize * 2 : blockSize];
Magic Number,CSharpTest.Net.IO,FileBlock,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\FragmentedFile.cs,ReadLong,The following statement contains a magic number: return (                      ((long)BlockData[start + 0] << 56) |                      ((long)BlockData[start + 1] << 48) |                      ((long)BlockData[start + 2] << 40) |                      ((long)BlockData[start + 3] << 32) |                      ((long)BlockData[start + 4] << 24) |                      ((long)BlockData[start + 5] << 16) |                      ((long)BlockData[start + 6] << 8) |                      ((long)BlockData[start + 7] << 0)                      );
Magic Number,CSharpTest.Net.IO,FileBlock,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\FragmentedFile.cs,ReadLong,The following statement contains a magic number: return (                      ((long)BlockData[start + 0] << 56) |                      ((long)BlockData[start + 1] << 48) |                      ((long)BlockData[start + 2] << 40) |                      ((long)BlockData[start + 3] << 32) |                      ((long)BlockData[start + 4] << 24) |                      ((long)BlockData[start + 5] << 16) |                      ((long)BlockData[start + 6] << 8) |                      ((long)BlockData[start + 7] << 0)                      );
Magic Number,CSharpTest.Net.IO,FileBlock,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\FragmentedFile.cs,ReadLong,The following statement contains a magic number: return (                      ((long)BlockData[start + 0] << 56) |                      ((long)BlockData[start + 1] << 48) |                      ((long)BlockData[start + 2] << 40) |                      ((long)BlockData[start + 3] << 32) |                      ((long)BlockData[start + 4] << 24) |                      ((long)BlockData[start + 5] << 16) |                      ((long)BlockData[start + 6] << 8) |                      ((long)BlockData[start + 7] << 0)                      );
Magic Number,CSharpTest.Net.IO,FileBlock,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\FragmentedFile.cs,ReadLong,The following statement contains a magic number: return (                      ((long)BlockData[start + 0] << 56) |                      ((long)BlockData[start + 1] << 48) |                      ((long)BlockData[start + 2] << 40) |                      ((long)BlockData[start + 3] << 32) |                      ((long)BlockData[start + 4] << 24) |                      ((long)BlockData[start + 5] << 16) |                      ((long)BlockData[start + 6] << 8) |                      ((long)BlockData[start + 7] << 0)                      );
Magic Number,CSharpTest.Net.IO,FileBlock,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\FragmentedFile.cs,ReadLong,The following statement contains a magic number: return (                      ((long)BlockData[start + 0] << 56) |                      ((long)BlockData[start + 1] << 48) |                      ((long)BlockData[start + 2] << 40) |                      ((long)BlockData[start + 3] << 32) |                      ((long)BlockData[start + 4] << 24) |                      ((long)BlockData[start + 5] << 16) |                      ((long)BlockData[start + 6] << 8) |                      ((long)BlockData[start + 7] << 0)                      );
Magic Number,CSharpTest.Net.IO,FileBlock,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\FragmentedFile.cs,ReadLong,The following statement contains a magic number: return (                      ((long)BlockData[start + 0] << 56) |                      ((long)BlockData[start + 1] << 48) |                      ((long)BlockData[start + 2] << 40) |                      ((long)BlockData[start + 3] << 32) |                      ((long)BlockData[start + 4] << 24) |                      ((long)BlockData[start + 5] << 16) |                      ((long)BlockData[start + 6] << 8) |                      ((long)BlockData[start + 7] << 0)                      );
Magic Number,CSharpTest.Net.IO,FileBlock,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\FragmentedFile.cs,ReadLong,The following statement contains a magic number: return (                      ((long)BlockData[start + 0] << 56) |                      ((long)BlockData[start + 1] << 48) |                      ((long)BlockData[start + 2] << 40) |                      ((long)BlockData[start + 3] << 32) |                      ((long)BlockData[start + 4] << 24) |                      ((long)BlockData[start + 5] << 16) |                      ((long)BlockData[start + 6] << 8) |                      ((long)BlockData[start + 7] << 0)                      );
Magic Number,CSharpTest.Net.IO,FileBlock,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\FragmentedFile.cs,ReadLong,The following statement contains a magic number: return (                      ((long)BlockData[start + 0] << 56) |                      ((long)BlockData[start + 1] << 48) |                      ((long)BlockData[start + 2] << 40) |                      ((long)BlockData[start + 3] << 32) |                      ((long)BlockData[start + 4] << 24) |                      ((long)BlockData[start + 5] << 16) |                      ((long)BlockData[start + 6] << 8) |                      ((long)BlockData[start + 7] << 0)                      );
Magic Number,CSharpTest.Net.IO,FileBlock,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\FragmentedFile.cs,ReadLong,The following statement contains a magic number: return (                      ((long)BlockData[start + 0] << 56) |                      ((long)BlockData[start + 1] << 48) |                      ((long)BlockData[start + 2] << 40) |                      ((long)BlockData[start + 3] << 32) |                      ((long)BlockData[start + 4] << 24) |                      ((long)BlockData[start + 5] << 16) |                      ((long)BlockData[start + 6] << 8) |                      ((long)BlockData[start + 7] << 0)                      );
Magic Number,CSharpTest.Net.IO,FileBlock,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\FragmentedFile.cs,ReadLong,The following statement contains a magic number: return (                      ((long)BlockData[start + 0] << 56) |                      ((long)BlockData[start + 1] << 48) |                      ((long)BlockData[start + 2] << 40) |                      ((long)BlockData[start + 3] << 32) |                      ((long)BlockData[start + 4] << 24) |                      ((long)BlockData[start + 5] << 16) |                      ((long)BlockData[start + 6] << 8) |                      ((long)BlockData[start + 7] << 0)                      );
Magic Number,CSharpTest.Net.IO,FileBlock,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\FragmentedFile.cs,ReadLong,The following statement contains a magic number: return (                      ((long)BlockData[start + 0] << 56) |                      ((long)BlockData[start + 1] << 48) |                      ((long)BlockData[start + 2] << 40) |                      ((long)BlockData[start + 3] << 32) |                      ((long)BlockData[start + 4] << 24) |                      ((long)BlockData[start + 5] << 16) |                      ((long)BlockData[start + 6] << 8) |                      ((long)BlockData[start + 7] << 0)                      );
Magic Number,CSharpTest.Net.IO,FileBlock,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\FragmentedFile.cs,ReadLong,The following statement contains a magic number: return (                      ((long)BlockData[start + 0] << 56) |                      ((long)BlockData[start + 1] << 48) |                      ((long)BlockData[start + 2] << 40) |                      ((long)BlockData[start + 3] << 32) |                      ((long)BlockData[start + 4] << 24) |                      ((long)BlockData[start + 5] << 16) |                      ((long)BlockData[start + 6] << 8) |                      ((long)BlockData[start + 7] << 0)                      );
Magic Number,CSharpTest.Net.IO,FileBlock,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\FragmentedFile.cs,ReadLong,The following statement contains a magic number: return (                      ((long)BlockData[start + 0] << 56) |                      ((long)BlockData[start + 1] << 48) |                      ((long)BlockData[start + 2] << 40) |                      ((long)BlockData[start + 3] << 32) |                      ((long)BlockData[start + 4] << 24) |                      ((long)BlockData[start + 5] << 16) |                      ((long)BlockData[start + 6] << 8) |                      ((long)BlockData[start + 7] << 0)                      );
Magic Number,CSharpTest.Net.IO,FileBlock,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\FragmentedFile.cs,WriteLong,The following statement contains a magic number: BlockData[start + 0] = (byte)(value >> 56);
Magic Number,CSharpTest.Net.IO,FileBlock,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\FragmentedFile.cs,WriteLong,The following statement contains a magic number: BlockData[start + 1] = (byte)(value >> 48);
Magic Number,CSharpTest.Net.IO,FileBlock,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\FragmentedFile.cs,WriteLong,The following statement contains a magic number: BlockData[start + 2] = (byte)(value >> 40);
Magic Number,CSharpTest.Net.IO,FileBlock,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\FragmentedFile.cs,WriteLong,The following statement contains a magic number: BlockData[start + 2] = (byte)(value >> 40);
Magic Number,CSharpTest.Net.IO,FileBlock,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\FragmentedFile.cs,WriteLong,The following statement contains a magic number: BlockData[start + 3] = (byte)(value >> 32);
Magic Number,CSharpTest.Net.IO,FileBlock,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\FragmentedFile.cs,WriteLong,The following statement contains a magic number: BlockData[start + 3] = (byte)(value >> 32);
Magic Number,CSharpTest.Net.IO,FileBlock,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\FragmentedFile.cs,WriteLong,The following statement contains a magic number: BlockData[start + 4] = (byte)(value >> 24);
Magic Number,CSharpTest.Net.IO,FileBlock,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\FragmentedFile.cs,WriteLong,The following statement contains a magic number: BlockData[start + 4] = (byte)(value >> 24);
Magic Number,CSharpTest.Net.IO,FileBlock,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\FragmentedFile.cs,WriteLong,The following statement contains a magic number: BlockData[start + 5] = (byte)(value >> 16);
Magic Number,CSharpTest.Net.IO,FileBlock,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\FragmentedFile.cs,WriteLong,The following statement contains a magic number: BlockData[start + 5] = (byte)(value >> 16);
Magic Number,CSharpTest.Net.IO,FileBlock,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\FragmentedFile.cs,WriteLong,The following statement contains a magic number: BlockData[start + 6] = (byte)(value >> 8);
Magic Number,CSharpTest.Net.IO,FileBlock,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\FragmentedFile.cs,WriteLong,The following statement contains a magic number: BlockData[start + 6] = (byte)(value >> 8);
Magic Number,CSharpTest.Net.IO,FileBlock,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\FragmentedFile.cs,WriteLong,The following statement contains a magic number: BlockData[start + 7] = (byte)(value >> 0);
Magic Number,CSharpTest.Net.IO,FileBlock,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\FragmentedFile.cs,ReadInt,The following statement contains a magic number: return (                      (BlockData[start + 0] << 24) |                      (BlockData[start + 1] << 16) |                      (BlockData[start + 2] << 8) |                      (BlockData[start + 3] << 0)                      );
Magic Number,CSharpTest.Net.IO,FileBlock,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\FragmentedFile.cs,ReadInt,The following statement contains a magic number: return (                      (BlockData[start + 0] << 24) |                      (BlockData[start + 1] << 16) |                      (BlockData[start + 2] << 8) |                      (BlockData[start + 3] << 0)                      );
Magic Number,CSharpTest.Net.IO,FileBlock,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\FragmentedFile.cs,ReadInt,The following statement contains a magic number: return (                      (BlockData[start + 0] << 24) |                      (BlockData[start + 1] << 16) |                      (BlockData[start + 2] << 8) |                      (BlockData[start + 3] << 0)                      );
Magic Number,CSharpTest.Net.IO,FileBlock,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\FragmentedFile.cs,ReadInt,The following statement contains a magic number: return (                      (BlockData[start + 0] << 24) |                      (BlockData[start + 1] << 16) |                      (BlockData[start + 2] << 8) |                      (BlockData[start + 3] << 0)                      );
Magic Number,CSharpTest.Net.IO,FileBlock,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\FragmentedFile.cs,ReadInt,The following statement contains a magic number: return (                      (BlockData[start + 0] << 24) |                      (BlockData[start + 1] << 16) |                      (BlockData[start + 2] << 8) |                      (BlockData[start + 3] << 0)                      );
Magic Number,CSharpTest.Net.IO,FileBlock,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\FragmentedFile.cs,WriteInt,The following statement contains a magic number: BlockData[start + 0] = (byte)(value >> 24);
Magic Number,CSharpTest.Net.IO,FileBlock,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\FragmentedFile.cs,WriteInt,The following statement contains a magic number: BlockData[start + 1] = (byte)(value >> 16);
Magic Number,CSharpTest.Net.IO,FileBlock,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\FragmentedFile.cs,WriteInt,The following statement contains a magic number: BlockData[start + 2] = (byte)(value >> 8);
Magic Number,CSharpTest.Net.IO,FileBlock,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\FragmentedFile.cs,WriteInt,The following statement contains a magic number: BlockData[start + 2] = (byte)(value >> 8);
Magic Number,CSharpTest.Net.IO,FileBlock,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\FragmentedFile.cs,WriteInt,The following statement contains a magic number: BlockData[start + 3] = (byte)(value >> 0);
Magic Number,CSharpTest.Net.IO,TransactedCompoundFile,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\TransactedCompoundFile.cs,TransactedCompoundFile,The following statement contains a magic number: BlocksPerSection = BlockSize >> 2;
Magic Number,CSharpTest.Net.IO,TransactedCompoundFile,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\TransactedCompoundFile.cs,TransactedCompoundFile,The following statement contains a magic number: _stream =                  new FileStream(                  _options.FilePath'                  _options.CreateNew ? FileMode.Create : FileMode.Open'                  _options.ReadOnly ? FileAccess.Read : FileAccess.ReadWrite'                  _options.ReadOnly ? FileShare.ReadWrite : FileShare.Read'                  8'                  _options.FileOptions                  );
Magic Number,CSharpTest.Net.IO,TransactedCompoundFile,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\TransactedCompoundFile.cs,TransactedCompoundFile,The following statement contains a magic number: _readers = new StreamCache(                  new FileStreamFactory(_options.FilePath' FileMode.Open' FileAccess.Read' FileShare.ReadWrite' 8' FileOptions.None)'                   4);
Magic Number,CSharpTest.Net.IO,TransactedCompoundFile,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\TransactedCompoundFile.cs,TransactedCompoundFile,The following statement contains a magic number: _readers = new StreamCache(                  new FileStreamFactory(_options.FilePath' FileMode.Open' FileAccess.Read' FileShare.ReadWrite' 8' FileOptions.None)'                   4);
Magic Number,CSharpTest.Net.IO,TransactedCompoundFile,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\TransactedCompoundFile.cs,AddSection,The following statement contains a magic number: int firstFree = lastFree - BlocksPerSection + 2;
Magic Number,CSharpTest.Net.IO,TransactedCompoundFile,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\TransactedCompoundFile.cs,TakeBlocks,The following statement contains a magic number: blockId |= ((uint) Math.Min(16' blocksNeeded) - 1 << 28) & 0xF0000000u;
Magic Number,CSharpTest.Net.IO,TransactedCompoundFile,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\TransactedCompoundFile.cs,TakeBlocks,The following statement contains a magic number: blockId |= ((uint) Math.Min(16' blocksNeeded) - 1 << 28) & 0xF0000000u;
Magic Number,CSharpTest.Net.IO,TransactedCompoundFile,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\TransactedCompoundFile.cs,FreeBlocks,The following statement contains a magic number: ((block.Count < 16 && block.ActualBlocks != block.Count) ||                           (block.Count == 16 && block.ActualBlocks < 16))
Magic Number,CSharpTest.Net.IO,TransactedCompoundFile,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\TransactedCompoundFile.cs,FreeBlocks,The following statement contains a magic number: ((block.Count < 16 && block.ActualBlocks != block.Count) ||                           (block.Count == 16 && block.ActualBlocks < 16))
Magic Number,CSharpTest.Net.IO,TransactedCompoundFile,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\TransactedCompoundFile.cs,FreeBlocks,The following statement contains a magic number: ((block.Count < 16 && block.ActualBlocks != block.Count) ||                           (block.Count == 16 && block.ActualBlocks < 16))
Magic Number,CSharpTest.Net.IO,TransactedCompoundFile,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\TransactedCompoundFile.cs,FreeBlocks,The following statement contains a magic number: block.ActualBlocks == 16
Magic Number,CSharpTest.Net.IO,TransactedCompoundFile,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\TransactedCompoundFile.cs,Write,The following statement contains a magic number: blocksNeeded > BlocksPerSection-2
Magic Number,CSharpTest.Net.IO,TransactedCompoundFile,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\TransactedCompoundFile.cs,GetUInt32,The following statement contains a magic number: return unchecked((uint)                  (                  (bytes[start + 0] << 24) |                  (bytes[start + 1] << 16) |                  (bytes[start + 2] << 8) |                  (bytes[start + 3] << 0)                  ));
Magic Number,CSharpTest.Net.IO,TransactedCompoundFile,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\TransactedCompoundFile.cs,GetUInt32,The following statement contains a magic number: return unchecked((uint)                  (                  (bytes[start + 0] << 24) |                  (bytes[start + 1] << 16) |                  (bytes[start + 2] << 8) |                  (bytes[start + 3] << 0)                  ));
Magic Number,CSharpTest.Net.IO,TransactedCompoundFile,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\TransactedCompoundFile.cs,GetUInt32,The following statement contains a magic number: return unchecked((uint)                  (                  (bytes[start + 0] << 24) |                  (bytes[start + 1] << 16) |                  (bytes[start + 2] << 8) |                  (bytes[start + 3] << 0)                  ));
Magic Number,CSharpTest.Net.IO,TransactedCompoundFile,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\TransactedCompoundFile.cs,GetUInt32,The following statement contains a magic number: return unchecked((uint)                  (                  (bytes[start + 0] << 24) |                  (bytes[start + 1] << 16) |                  (bytes[start + 2] << 8) |                  (bytes[start + 3] << 0)                  ));
Magic Number,CSharpTest.Net.IO,TransactedCompoundFile,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\TransactedCompoundFile.cs,GetUInt32,The following statement contains a magic number: return unchecked((uint)                  (                  (bytes[start + 0] << 24) |                  (bytes[start + 1] << 16) |                  (bytes[start + 2] << 8) |                  (bytes[start + 3] << 0)                  ));
Magic Number,CSharpTest.Net.IO,TransactedCompoundFile,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\TransactedCompoundFile.cs,PutUInt32,The following statement contains a magic number: bytes[start + 0] = (byte)(value >> 24);
Magic Number,CSharpTest.Net.IO,TransactedCompoundFile,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\TransactedCompoundFile.cs,PutUInt32,The following statement contains a magic number: bytes[start + 1] = (byte)(value >> 16);
Magic Number,CSharpTest.Net.IO,TransactedCompoundFile,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\TransactedCompoundFile.cs,PutUInt32,The following statement contains a magic number: bytes[start + 2] = (byte)(value >> 8);
Magic Number,CSharpTest.Net.IO,TransactedCompoundFile,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\TransactedCompoundFile.cs,PutUInt32,The following statement contains a magic number: bytes[start + 2] = (byte)(value >> 8);
Magic Number,CSharpTest.Net.IO,TransactedCompoundFile,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\TransactedCompoundFile.cs,PutUInt32,The following statement contains a magic number: bytes[start + 3] = (byte)(value >> 0);
Magic Number,CSharpTest.Net.IO,Options,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\TransactedCompoundFile.cs,Options,The following statement contains a magic number: BlockSize = 4096;
Magic Number,CSharpTest.Net.IO,HandleRef,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\TransactedCompoundFile.cs,HandleRef,The following statement contains a magic number: int blocksPerSection = (blockSize >> 2);
Magic Number,CSharpTest.Net.IO,BlockRef,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\TransactedCompoundFile.cs,BlockRef,The following statement contains a magic number: ActualBlocks = Count = (int)(block >> 28 & 0x0F) + 1;
Magic Number,CSharpTest.Net.IO,BlockRef,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\TransactedCompoundFile.cs,BlockRef,The following statement contains a magic number: int blocksPerSection = (blockSize >> 2);
Magic Number,CSharpTest.Net.IO,FileSection,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\TransactedCompoundFile.cs,FileSection,The following statement contains a magic number: HandleCount = BlockSize >> 2;
Magic Number,CSharpTest.Net.IO,FileSection,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\TransactedCompoundFile.cs,FileSection,The following statement contains a magic number: BlocksPerSection = BlockSize >> 2;
Magic Number,CSharpTest.Net.IO,FileSection,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\TransactedCompoundFile.cs,Read,The following statement contains a magic number: headerSize < BlockHeaderSize || blockId != block.Identity ||                          ((block.Count < 16 && block.ActualBlocks != block.Count) ||                           (block.Count == 16 && block.ActualBlocks < 16))
Magic Number,CSharpTest.Net.IO,FileSection,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\TransactedCompoundFile.cs,Read,The following statement contains a magic number: headerSize < BlockHeaderSize || blockId != block.Identity ||                          ((block.Count < 16 && block.ActualBlocks != block.Count) ||                           (block.Count == 16 && block.ActualBlocks < 16))
Magic Number,CSharpTest.Net.IO,FileSection,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\TransactedCompoundFile.cs,Read,The following statement contains a magic number: headerSize < BlockHeaderSize || blockId != block.Identity ||                          ((block.Count < 16 && block.ActualBlocks != block.Count) ||                           (block.Count == 16 && block.ActualBlocks < 16))
Magic Number,CSharpTest.Net.IO,FileSection,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\TransactedCompoundFile.cs,ReadUInt32,The following statement contains a magic number: int offset = ordinal << 2;
Magic Number,CSharpTest.Net.IO,FileSection,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\TransactedCompoundFile.cs,WriteUInt32,The following statement contains a magic number: int offset = ordinal << 2;
Magic Number,CSharpTest.Net.IO,FileSection,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\TransactedCompoundFile.cs,MakeValid,The following statement contains a magic number: PutUInt32(_blockData' _blockData.Length - 4' crc);
Magic Number,CSharpTest.Net.IO,FileSection,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\TransactedCompoundFile.cs,CalcCrc32,The following statement contains a magic number: crc.Add(_blockData' 4' BlockSize - 8);
Magic Number,CSharpTest.Net.IO,FileSection,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\TransactedCompoundFile.cs,CalcCrc32,The following statement contains a magic number: crc.Add(_blockData' 4' BlockSize - 8);
Magic Number,CSharpTest.Net.IO,FileSection,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\IO\TransactedCompoundFile.cs,CheckValid,The following statement contains a magic number: uint crc2 = GetUInt32(_blockData' _blockData.Length - 4);
Magic Number,CSharpTest.Net,BaseAssertionException,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Exceptions.cs,AssertionText,The following statement contains a magic number: return String.Format("{0}\r\n    at {0}"' new StackFrame(2' true));
Magic Number,CSharpTest.Net.Serialization,PrimitiveSerializer,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Serialization\PrimitiveSerializer.cs,WriteTo,The following statement contains a magic number: stream.WriteByte((byte)(value >> 8));
Magic Number,CSharpTest.Net.Serialization,PrimitiveSerializer,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Serialization\PrimitiveSerializer.cs,ReadFrom,The following statement contains a magic number: return (ushort)((b1 << 8) | b2);
Magic Number,CSharpTest.Net.Serialization,PrimitiveSerializer,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Serialization\PrimitiveSerializer.cs,WriteTo,The following statement contains a magic number: stream.WriteByte((byte)(value >> 24));
Magic Number,CSharpTest.Net.Serialization,PrimitiveSerializer,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Serialization\PrimitiveSerializer.cs,WriteTo,The following statement contains a magic number: stream.WriteByte((byte)(value >> 16));
Magic Number,CSharpTest.Net.Serialization,PrimitiveSerializer,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Serialization\PrimitiveSerializer.cs,WriteTo,The following statement contains a magic number: stream.WriteByte((byte)(value >> 8));
Magic Number,CSharpTest.Net.Serialization,PrimitiveSerializer,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Serialization\PrimitiveSerializer.cs,ReadFrom,The following statement contains a magic number: return (                      (((uint)b1) << 24) |                      (((uint)b2) << 16) |                      (((uint)b3) << 8) |                      (((uint)b4) << 0)                      );
Magic Number,CSharpTest.Net.Serialization,PrimitiveSerializer,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Serialization\PrimitiveSerializer.cs,ReadFrom,The following statement contains a magic number: return (                      (((uint)b1) << 24) |                      (((uint)b2) << 16) |                      (((uint)b3) << 8) |                      (((uint)b4) << 0)                      );
Magic Number,CSharpTest.Net.Serialization,PrimitiveSerializer,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Serialization\PrimitiveSerializer.cs,ReadFrom,The following statement contains a magic number: return (                      (((uint)b1) << 24) |                      (((uint)b2) << 16) |                      (((uint)b3) << 8) |                      (((uint)b4) << 0)                      );
Magic Number,CSharpTest.Net.Serialization,PrimitiveSerializer,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Serialization\PrimitiveSerializer.cs,WriteTo,The following statement contains a magic number: stream.WriteByte((byte)(value >> 56));
Magic Number,CSharpTest.Net.Serialization,PrimitiveSerializer,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Serialization\PrimitiveSerializer.cs,WriteTo,The following statement contains a magic number: stream.WriteByte((byte)(value >> 48));
Magic Number,CSharpTest.Net.Serialization,PrimitiveSerializer,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Serialization\PrimitiveSerializer.cs,WriteTo,The following statement contains a magic number: stream.WriteByte((byte)(value >> 40));
Magic Number,CSharpTest.Net.Serialization,PrimitiveSerializer,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Serialization\PrimitiveSerializer.cs,WriteTo,The following statement contains a magic number: stream.WriteByte((byte)(value >> 32));
Magic Number,CSharpTest.Net.Serialization,PrimitiveSerializer,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Serialization\PrimitiveSerializer.cs,WriteTo,The following statement contains a magic number: stream.WriteByte((byte)(value >> 24));
Magic Number,CSharpTest.Net.Serialization,PrimitiveSerializer,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Serialization\PrimitiveSerializer.cs,WriteTo,The following statement contains a magic number: stream.WriteByte((byte)(value >> 16));
Magic Number,CSharpTest.Net.Serialization,PrimitiveSerializer,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Serialization\PrimitiveSerializer.cs,WriteTo,The following statement contains a magic number: stream.WriteByte((byte)(value >> 8));
Magic Number,CSharpTest.Net.Serialization,PrimitiveSerializer,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Serialization\PrimitiveSerializer.cs,ReadFrom,The following statement contains a magic number: return (                      (((ulong)b1) << 56) |                      (((ulong)b2) << 48) |                      (((ulong)b3) << 40) |                      (((ulong)b4) << 32) |                      (((ulong)b5) << 24) |                      (((ulong)b6) << 16) |                      (((ulong)b7) << 8) |                      (((ulong)b8) << 0)                      );
Magic Number,CSharpTest.Net.Serialization,PrimitiveSerializer,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Serialization\PrimitiveSerializer.cs,ReadFrom,The following statement contains a magic number: return (                      (((ulong)b1) << 56) |                      (((ulong)b2) << 48) |                      (((ulong)b3) << 40) |                      (((ulong)b4) << 32) |                      (((ulong)b5) << 24) |                      (((ulong)b6) << 16) |                      (((ulong)b7) << 8) |                      (((ulong)b8) << 0)                      );
Magic Number,CSharpTest.Net.Serialization,PrimitiveSerializer,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Serialization\PrimitiveSerializer.cs,ReadFrom,The following statement contains a magic number: return (                      (((ulong)b1) << 56) |                      (((ulong)b2) << 48) |                      (((ulong)b3) << 40) |                      (((ulong)b4) << 32) |                      (((ulong)b5) << 24) |                      (((ulong)b6) << 16) |                      (((ulong)b7) << 8) |                      (((ulong)b8) << 0)                      );
Magic Number,CSharpTest.Net.Serialization,PrimitiveSerializer,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Serialization\PrimitiveSerializer.cs,ReadFrom,The following statement contains a magic number: return (                      (((ulong)b1) << 56) |                      (((ulong)b2) << 48) |                      (((ulong)b3) << 40) |                      (((ulong)b4) << 32) |                      (((ulong)b5) << 24) |                      (((ulong)b6) << 16) |                      (((ulong)b7) << 8) |                      (((ulong)b8) << 0)                      );
Magic Number,CSharpTest.Net.Serialization,PrimitiveSerializer,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Serialization\PrimitiveSerializer.cs,ReadFrom,The following statement contains a magic number: return (                      (((ulong)b1) << 56) |                      (((ulong)b2) << 48) |                      (((ulong)b3) << 40) |                      (((ulong)b4) << 32) |                      (((ulong)b5) << 24) |                      (((ulong)b6) << 16) |                      (((ulong)b7) << 8) |                      (((ulong)b8) << 0)                      );
Magic Number,CSharpTest.Net.Serialization,PrimitiveSerializer,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Serialization\PrimitiveSerializer.cs,ReadFrom,The following statement contains a magic number: return (                      (((ulong)b1) << 56) |                      (((ulong)b2) << 48) |                      (((ulong)b3) << 40) |                      (((ulong)b4) << 32) |                      (((ulong)b5) << 24) |                      (((ulong)b6) << 16) |                      (((ulong)b7) << 8) |                      (((ulong)b8) << 0)                      );
Magic Number,CSharpTest.Net.Serialization,PrimitiveSerializer,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Serialization\PrimitiveSerializer.cs,ReadFrom,The following statement contains a magic number: return (                      (((ulong)b1) << 56) |                      (((ulong)b2) << 48) |                      (((ulong)b3) << 40) |                      (((ulong)b4) << 32) |                      (((ulong)b5) << 24) |                      (((ulong)b6) << 16) |                      (((ulong)b7) << 8) |                      (((ulong)b8) << 0)                      );
Magic Number,CSharpTest.Net.Serialization,PrimitiveSerializer,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Serialization\PrimitiveSerializer.cs,WriteTo,The following statement contains a magic number: stream.Write(value.ToByteArray()' 0' 16);
Magic Number,CSharpTest.Net.Serialization,PrimitiveSerializer,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Serialization\PrimitiveSerializer.cs,ReadFrom,The following statement contains a magic number: byte[] tmp = new byte[16];
Magic Number,CSharpTest.Net.Serialization,PrimitiveSerializer,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Serialization\PrimitiveSerializer.cs,ReadFrom,The following statement contains a magic number: bytesRead < 16 && 0 != (len = stream.Read(tmp' bytesRead' 16 - bytesRead))
Magic Number,CSharpTest.Net.Serialization,PrimitiveSerializer,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Serialization\PrimitiveSerializer.cs,ReadFrom,The following statement contains a magic number: bytesRead < 16 && 0 != (len = stream.Read(tmp' bytesRead' 16 - bytesRead))
Magic Number,CSharpTest.Net.Serialization,PrimitiveSerializer,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Serialization\PrimitiveSerializer.cs,ReadFrom,The following statement contains a magic number: Check.Assert<InvalidDataException>(16 == bytesRead);
Magic Number,CSharpTest.Net.Serialization,VariantNumberSerializer,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Serialization\VariantNumberSerializer.cs,WriteTo,The following statement contains a magic number: value >>= 7;
Magic Number,CSharpTest.Net.Serialization,VariantNumberSerializer,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Serialization\VariantNumberSerializer.cs,ReadFrom,The following statement contains a magic number: shift += 7;
Magic Number,CSharpTest.Net.Serialization,VariantNumberSerializer,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Serialization\VariantNumberSerializer.cs,WriteTo,The following statement contains a magic number: value >>= 7;
Magic Number,CSharpTest.Net.Serialization,VariantNumberSerializer,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Serialization\VariantNumberSerializer.cs,ReadFrom,The following statement contains a magic number: shift += 7;
Magic Number,CSharpTest.Net.Storage,FileId,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Storage\Storage.DiskV2.cs,FileId,The following statement contains a magic number: unique[i] ^= unique[i + 8];
Magic Number,CSharpTest.Net.Storage,FileId,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Storage\Storage.DiskV2.cs,FileId,The following statement contains a magic number: i < 8
Magic Number,CSharpTest.Net.Synchronization,SimpleReadWriteLocking,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Synchronization\SimpleReadWriteLocking.cs,SimpleReadWriteLocking,The following statement contains a magic number: SpinWaitTime = 25;
Magic Number,CSharpTest.Net.Synchronization,SimpleReadWriteLocking,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Synchronization\SimpleReadWriteLocking.cs,SimpleReadWriteLocking,The following statement contains a magic number: SpinLoops = 100;
Magic Number,CSharpTest.Net.Synchronization,SimpleReadWriteLocking,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Synchronization\SimpleReadWriteLocking.cs,WaitForExclusive,The following statement contains a magic number: loop += 10;
Magic Number,CSharpTest.Net.Synchronization,SimpleReadWriteLocking,D:\research\architectureSmells\repos\csharptest_CSharpTest.Net.Collections\src\CSharpTest.Net.Collections\Synchronization\SimpleReadWriteLocking.cs,WaitForExclusive,The following statement contains a magic number: !_event.WaitOne(10' false)
