Implementation smell,Namespace,Class,File,Method,Description
Long Method,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,InitAdapter,The method has 179 lines of code.
Long Method,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,InitAdapter,The method has 228 lines of code.
Long Method,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehiclesTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,InitAdapter,The method has 174 lines of code.
Long Method,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,TableAdapterManager,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,UpdateAll,The method has 185 lines of code.
Complex Method,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,setDatabaseConn,Cyclomatic complexity of the method is 11
Complex Method,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,setLanguage,Cyclomatic complexity of the method is 8
Complex Method,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,allStatusToggle,Cyclomatic complexity of the method is 8
Complex Method,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,dbConnCheckWorker_RunWorkerCompleted,Cyclomatic complexity of the method is 13
Complex Method,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,getBuildStatusFromStationId,Cyclomatic complexity of the method is 31
Complex Method,RadioTrack_ReaderClient,rfidtrackDataSet,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,rfidtrackDataSet,Cyclomatic complexity of the method is 8
Complex Method,RadioTrack_ReaderClient,rfidtrackDataSet,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,InitVars,Cyclomatic complexity of the method is 11
Complex Method,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,Cyclomatic complexity of the method is 10
Complex Method,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,Cyclomatic complexity of the method is 12
Complex Method,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehiclesTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,Cyclomatic complexity of the method is 10
Complex Method,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,TableAdapterManager,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,UpdateUpdatedRows,Cyclomatic complexity of the method is 11
Complex Method,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,TableAdapterManager,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,UpdateInsertedRows,Cyclomatic complexity of the method is 11
Complex Method,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,TableAdapterManager,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,UpdateDeletedRows,Cyclomatic complexity of the method is 11
Complex Method,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,TableAdapterManager,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,UpdateAll,Cyclomatic complexity of the method is 29
Long Parameter List,RFIDeas_pcProxAPI,pcProxDLLAPI,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\RFIDeas_pcProxAPI.cs,FindXport,The method has 5 parameters.
Long Parameter List,RFIDeas_pcProxAPI,pcProxDLLAPI,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\RFIDeas_pcProxAPI.cs,SetIpPort,The method has 5 parameters.
Long Parameter List,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The method has 8 parameters.
Long Parameter List,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The method has 7 parameters.
Long Parameter List,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The method has 5 parameters.
Long Parameter List,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Insert,The method has 5 parameters.
Long Parameter List,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The method has 10 parameters.
Long Parameter List,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The method has 9 parameters.
Long Parameter List,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehiclesTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The method has 5 parameters.
Long Parameter List,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehiclesTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Insert,The method has 5 parameters.
Long Parameter List,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehiclesTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The method has 10 parameters.
Long Parameter List,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehiclesTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The method has 9 parameters.
Long Identifier,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,TableAdapterManager,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,UpdateAll,The length of the parameter adaptersWithAcceptChangesDuringUpdate is 37.
Long Statement,RadioTrack_ReaderClient,db_editor,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\db_editor.cs,db_editor_Load,The length of the statement  "		primaryConnStr = config.ConnectionStrings.ConnectionStrings ["RadioTrack_ReaderClient.Properties.Settings.databaseConnStr_primary"].ConnectionString; " is 149.
Long Statement,RadioTrack_ReaderClient,db_editor,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\db_editor.cs,db_editor_Load,The length of the statement  "		backupConnStr = config.ConnectionStrings.ConnectionStrings ["RadioTrack_ReaderClient.Properties.Settings.databaseConnStr_backup"].ConnectionString; " is 147.
Long Statement,RadioTrack_ReaderClient,db_editor,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\db_editor.cs,btn_save_Click,The length of the statement  "			MessageBox.Show ("There is a problem with the backup connection configuration!" + Environment.NewLine + "Please verify that the configuration entered is correct." + Environment.NewLine + Environment.NewLine + "(" + ex_b.Message + ")"' "Backup Connection Error"' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 306.
Long Statement,RadioTrack_ReaderClient,db_editor,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\db_editor.cs,btn_save_Click,The length of the statement  "		MessageBox.Show ("There is a problem with the primary connection configuration!" + Environment.NewLine + "Please verify that the configuration entered is correct." + Environment.NewLine + Environment.NewLine + "(" + ex_p.Message + ")"' "Primary Connection Error"' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 308.
Long Statement,RadioTrack_ReaderClient,db_editor,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\db_editor.cs,save,The length of the statement  "	var pConfig = config.ConnectionStrings.ConnectionStrings ["RadioTrack_ReaderClient.Properties.Settings.databaseConnStr_primary"]; " is 129.
Long Statement,RadioTrack_ReaderClient,db_editor,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\db_editor.cs,save,The length of the statement  "	var bConfig = config.ConnectionStrings.ConnectionStrings ["RadioTrack_ReaderClient.Properties.Settings.databaseConnStr_backup"]; " is 128.
Long Statement,RadioTrack_ReaderClient,db_editor,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\db_editor.cs,validateConnection,The length of the statement  "	if (!String.IsNullOrWhiteSpace (ConnStrBuilder.Server) && !String.IsNullOrWhiteSpace (ConnStrBuilder.Database) && !String.IsNullOrWhiteSpace (ConnStrBuilder.UserID) && !String.IsNullOrWhiteSpace (ConnStrBuilder.Password)) { " is 223.
Long Statement,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,setDatabaseConn,The length of the statement  "		rfidtrackConnStr = config.ConnectionStrings.ConnectionStrings ["RadioTrack_ReaderClient.Properties.Settings.databaseConnStr_primary"].ConnectionString; " is 151.
Long Statement,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,setDatabaseConn,The length of the statement  "			rfidtrackConnStr = config.ConnectionStrings.ConnectionStrings ["RadioTrack_ReaderClient.Properties.Settings.databaseConnStr_backup"].ConnectionString; " is 150.
Long Statement,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,setDatabaseConn,The length of the statement  "			MessageBox.Show ("A Backup database connection has not been set."' "Backup Database"' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 130.
Long Statement,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,parseCard,The length of the statement  "	string query = "SELECT t.vehicle_vin' v.vehicle_orderno' v.vehicle_modelCode' v.vehicle_buildConfiguration FROM vehicle_tags t LEFT JOIN vehicles v ON t.vehicle_vin = v.vehicle_vin WHERE t.rfidtag_id = @rfid"; " is 209.
Long Statement,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,parseCard,The length of the statement  "	//    MessageBox.Show("Failed to update the database with the new vehicle!"' "Error updating Database"' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 148.
Long Statement,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,taktTimer_Tick,The length of the statement  "	lbl_taktTime.Text = time.Hours.ToString ("00") + ":" + time.Minutes.ToString ("00") + ":" + time.Seconds.ToString ("00"); " is 121.
Long Statement,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,usbConnCheckWorker_DoWork,The length of the statement  "			string tooltipString = String.Format (resMan.GetString ("status_reader_connected_to"' culture)' pcProxDLLAPI.GetDID ().ToString ()' pcProxDLLAPI.getPartNumberString ()); " is 169.
Long Statement,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,usbConnCheckWorker_RunWorkerCompleted,The length of the statement  "			notifIcon.ShowBalloonTip (5000' resMan.GetString ("notificon_reader_connected_title"' culture)' resMan.GetString ("notificon_reader_connected_text"' culture)' ToolTipIcon.Info); " is 177.
Long Statement,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,usbConnCheckWorker_RunWorkerCompleted,The length of the statement  "			notifIcon.ShowBalloonTip (5000' resMan.GetString ("notificon_reader_disconnected_title"' culture)' resMan.GetString ("notificon_reader_disconnected_text"' culture)' ToolTipIcon.Error); " is 184.
Long Statement,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,dbConnCheckWorker_DoWork,The length of the statement  "			if (status_databaseStatus.ToolTipText != String.Format (resMan.GetString ("status_database_connected_to"' culture)' dbConn.Database)) " is 133.
Long Statement,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,dbConnCheckWorker_DoWork,The length of the statement  "				status_databaseStatus.ToolTipText = String.Format (resMan.GetString ("status_database_connected_to"' culture)' dbConn.Database); " is 128.
Long Statement,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,dbConnCheckWorker_DoWork,The length of the statement  "		if (status_databaseStatus.ToolTipText != String.Format (resMan.GetString ("status_connection_error"' culture)' ex.Message)) " is 123.
Long Statement,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,dbConnCheckWorker_RunWorkerCompleted,The length of the statement  "			notifIcon.ShowBalloonTip (5000' resMan.GetString ("notificon_database_connected_title"' culture)' resMan.GetString ("notificon_database_connected_text"' culture)' ToolTipIcon.Info); " is 181.
Long Statement,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,dbConnCheckWorker_RunWorkerCompleted,The length of the statement  "			notifIcon.ShowBalloonTip (5000' resMan.GetString ("notificon_database_disconnected_title"' culture)' resMan.GetString ("notificon_database_disconnected_text"' culture)' ToolTipIcon.Error); " is 188.
Long Statement,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,dbConnCheckWorker_RunWorkerCompleted,The length of the statement  "					status_statusLabel.Text = String.Format (resMan.GetString ("status_applying_saved_station"' culture)' Properties.Settings.Default.thisStation); " is 143.
Long Statement,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,dbConnCheckWorker_RunWorkerCompleted,The length of the statement  "						status_statusLabel.Text = String.Format (resMan.GetString ("status_applying_saved_station_error"' culture)' ex.Message); " is 120.
Long Statement,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,form_Main_FormClosing,The length of the statement  "	if (MessageBox.Show (resMan.GetString ("misc_exit_confirmation_text"' culture)' resMan.GetString ("misc_exit_confirmation_title"' culture)' MessageBoxButtons.YesNo' MessageBoxIcon.Question) == System.Windows.Forms.DialogResult.No) { " is 232.
Long Statement,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,submitStationRegister,The length of the statement  "	string sqlGetHist = "SELECT stationhistory' station_id' timestamp FROM vehicle_tags WHERE (rfidtag_id=@rfid AND vehicle_vin=@vin)"; " is 131.
Long Statement,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,submitStationRegister,The length of the statement  "	string sql = "UPDATE vehicle_tags SET station_id=@stId' timestamp=STR_TO_DATE(@time''%d/%m/%Y %h:%i:%s')' stationhistory=@hist WHERE (rfidtag_id=@rfid AND vehicle_vin=@vin)"; " is 174.
Long Statement,RadioTrack_ReaderClient,rfidtrackDataSet,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,GetTypedDataSetSchema,The length of the statement  "			for (global::System.Collections.IEnumerator schemas = xs.Schemas (dsSchema.TargetNamespace).GetEnumerator (); schemas.MoveNext ();) { " is 133.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,buildconfig_codesTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,InitAdapter,The length of the statement  "	this._adapter.DeleteCommand.CommandText = "DELETE FROM `buildconfig_codes` WHERE ((`config_code` = @p1) AND (`config_desc` =" + " @p2))"; " is 137.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,buildconfig_codesTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,InitAdapter,The length of the statement  "	this._adapter.InsertCommand.CommandText = "INSERT INTO `buildconfig_codes` (`config_code`' `config_desc`) VALUES (@p1' @p2)"; " is 125.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,buildconfig_codesTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,InitAdapter,The length of the statement  "	this._adapter.UpdateCommand.CommandText = "UPDATE `buildconfig_codes` SET `config_code` = @p1' `config_desc` = @p2 WHERE ((`" + "config_code` = @p3) AND (`config_desc` = @p4))"; " is 177.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,buildconfig_codesTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,InitConnection,The length of the statement  "	this._connection.ConnectionString = global::RadioTrack_ReaderClient.Properties.Settings.Default.databaseConnStr_primary; " is 120.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,buildconfig_codesTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The length of the statement  "	if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)) { " is 141.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,buildconfig_codesTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Insert,The length of the statement  "	if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)) { " is 141.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,buildconfig_codesTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The length of the statement  "	if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)) { " is 141.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,buildstatusTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,InitAdapter,The length of the statement  "	this._adapter.DeleteCommand.CommandText = "DELETE FROM `buildstatus` WHERE ((`buildStatus_id` = @p1) AND (`buildStatus_desc`" + " = @p2))"; " is 139.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,buildstatusTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,InitAdapter,The length of the statement  "	this._adapter.UpdateCommand.CommandText = "UPDATE `buildstatus` SET `buildStatus_desc` = @p1 WHERE ((`buildStatus_id` = @p2)" + " AND (`buildStatus_desc` = @p3))"; " is 163.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,buildstatusTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,InitConnection,The length of the statement  "	this._connection.ConnectionString = global::RadioTrack_ReaderClient.Properties.Settings.Default.databaseConnStr_primary; " is 120.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,buildstatusTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The length of the statement  "	if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)) { " is 141.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,buildstatusTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Insert,The length of the statement  "	if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)) { " is 141.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,buildstatusTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The length of the statement  "	if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)) { " is 141.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,InitAdapter,The length of the statement  "	this._adapter.DeleteCommand.CommandText = "DELETE FROM `rfid_stations` WHERE ((`station_id` = @p1) AND (`station_desc` = @p2" + ") AND ((@p3 = 1 AND `stationmap_lat` IS NULL) OR (`stationmap_lat` = @p4)) AND (" + "(@p5 = 1 AND `stationmap_lng` IS NULL) OR (`stationmap_lng` = @p6)))"; " is 284.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,InitAdapter,The length of the statement  "	this._adapter.InsertCommand.CommandText = "INSERT INTO `rfid_stations` (`station_id`' `station_desc`' `stationmap_lat`' `sta" + "tionmap_lng`) VALUES (@p1' @p2' @p3' @p4)"; " is 172.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,InitAdapter,The length of the statement  "	this._adapter.UpdateCommand.CommandText = @"UPDATE `rfid_stations` SET `station_id` = @p1' `station_desc` = @p2' `stationmap_lat` = @p3' `stationmap_lng` = @p4 WHERE ((`station_id` = @p5) AND (`station_desc` = @p6) AND ((@p7 = 1 AND `stationmap_lat` IS NULL) OR (`stationmap_lat` = @p8)) AND ((@p9 = 1 AND `stationmap_lng` IS NULL) OR (`stationmap_lng` = @p10)))"; " is 364.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,InitConnection,The length of the statement  "	this._connection.ConnectionString = global::RadioTrack_ReaderClient.Properties.Settings.Default.databaseConnStr_primary; " is 120.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,InitCommandCollection,The length of the statement  "	this._commandCollection [0].CommandText = "SELECT `station_id`' `station_desc`' `stationmap_lat`' `stationmap_lng` FROM `rfi" + "d_stations`"; " is 142.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The length of the statement  "	if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)) { " is 141.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Insert,The length of the statement  "	if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)) { " is 141.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The length of the statement  "	if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)) { " is 141.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,InitAdapter,The length of the statement  "	this._adapter.DeleteCommand.CommandText = @"DELETE FROM `vehicle_tags` WHERE ((`rfidtag_id` = @p1) AND (`vehicle_vin` = @p2) AND ((@p3 = 1 AND `station_id` IS NULL) OR (`station_id` = @p4)) AND ((@p5 = 1 AND `timestamp` IS NULL) OR (`timestamp` = @p6)) AND ((@p7 = 1 AND `stationhistory` IS NULL) OR (`stationhistory` = @p8)))"; " is 328.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,InitAdapter,The length of the statement  "	this._adapter.InsertCommand.CommandText = "INSERT INTO `vehicle_tags` (`rfidtag_id`' `vehicle_vin`' `station_id`' `timestamp" + "`' `stationhistory`) VALUES (@p1' @p2' @p3' @p4' @p5)"; " is 184.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,InitAdapter,The length of the statement  "	this._adapter.UpdateCommand.CommandText = @"UPDATE `vehicle_tags` SET `rfidtag_id` = @p1' `vehicle_vin` = @p2' `station_id` = @p3' `timestamp` = @p4' `stationhistory` = @p5 WHERE ((`rfidtag_id` = @p6) AND (`vehicle_vin` = @p7) AND ((@p8 = 1 AND `station_id` IS NULL) OR (`station_id` = @p9)) AND ((@p10 = 1 AND `timestamp` IS NULL) OR (`timestamp` = @p11)) AND ((@p12 = 1 AND `stationhistory` IS NULL) OR (`stationhistory` = @p13)))"; " is 434.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,InitConnection,The length of the statement  "	this._connection.ConnectionString = global::RadioTrack_ReaderClient.Properties.Settings.Default.databaseConnStr_primary; " is 120.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,InitCommandCollection,The length of the statement  "	this._commandCollection [0].CommandText = "SELECT `rfidtag_id`' `vehicle_vin`' `station_id`' `timestamp`' `stationhistory` F" + "ROM `vehicle_tags`"; " is 149.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The length of the statement  "	if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)) { " is 141.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Insert,The length of the statement  "	if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)) { " is 141.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The length of the statement  "	if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)) { " is 141.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehiclesTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,InitAdapter,The length of the statement  "	this._adapter.DeleteCommand.CommandText = "DELETE FROM `vehicles` WHERE ((`vehicle_vin` = @p1) AND (`vehicle_orderno` = @p2)" + " AND (`vehicle_modelCode` = @p3) AND (`vehicle_buildStatus_id` = @p4) AND (`vehi" + "cle_buildConfiguration` = @p5))"; " is 247.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehiclesTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,InitAdapter,The length of the statement  "	this._adapter.InsertCommand.CommandText = "INSERT INTO `vehicles` (`vehicle_vin`' `vehicle_orderno`' `vehicle_modelCode`' `v" + "ehicle_buildStatus_id`' `vehicle_buildConfiguration`) VALUES (@p1' @p2' @p3' @p4" + "' @p5)"; " is 222.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehiclesTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,InitAdapter,The length of the statement  "	this._adapter.UpdateCommand.CommandText = @"UPDATE `vehicles` SET `vehicle_vin` = @p1' `vehicle_orderno` = @p2' `vehicle_modelCode` = @p3' `vehicle_buildStatus_id` = @p4' `vehicle_buildConfiguration` = @p5 WHERE ((`vehicle_vin` = @p6) AND (`vehicle_orderno` = @p7) AND (`vehicle_modelCode` = @p8) AND (`vehicle_buildStatus_id` = @p9) AND (`vehicle_buildConfiguration` = @p10))"; " is 378.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehiclesTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,InitConnection,The length of the statement  "	this._connection.ConnectionString = global::RadioTrack_ReaderClient.Properties.Settings.Default.databaseConnStr_primary; " is 120.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehiclesTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,InitCommandCollection,The length of the statement  "	this._commandCollection [0].CommandText = "SELECT `vehicle_vin`' `vehicle_orderno`' `vehicle_modelCode`' `vehicle_buildStatu" + "s_id`' `vehicle_buildConfiguration` FROM `vehicles`"; " is 182.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehiclesTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The length of the statement  "	if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)) { " is 141.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehiclesTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Insert,The length of the statement  "	if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)) { " is 141.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehiclesTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The length of the statement  "	if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)) { " is 141.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,TableAdapterManager,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,UpdateUpdatedRows,The length of the statement  "		global::System.Data.DataRow[] updatedRows = dataSet.buildstatus.Select (null' null' global::System.Data.DataViewRowState.ModifiedCurrent); " is 138.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,TableAdapterManager,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,UpdateUpdatedRows,The length of the statement  "		global::System.Data.DataRow[] updatedRows = dataSet.vehicles.Select (null' null' global::System.Data.DataViewRowState.ModifiedCurrent); " is 135.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,TableAdapterManager,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,UpdateUpdatedRows,The length of the statement  "		global::System.Data.DataRow[] updatedRows = dataSet.rfid_stations.Select (null' null' global::System.Data.DataViewRowState.ModifiedCurrent); " is 140.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,TableAdapterManager,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,UpdateUpdatedRows,The length of the statement  "		global::System.Data.DataRow[] updatedRows = dataSet.buildconfig_codes.Select (null' null' global::System.Data.DataViewRowState.ModifiedCurrent); " is 144.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,TableAdapterManager,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,UpdateUpdatedRows,The length of the statement  "		global::System.Data.DataRow[] updatedRows = dataSet.vehicle_tags.Select (null' null' global::System.Data.DataViewRowState.ModifiedCurrent); " is 139.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,TableAdapterManager,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,UpdateInsertedRows,The length of the statement  "		global::System.Data.DataRow[] addedRows = dataSet.buildstatus.Select (null' null' global::System.Data.DataViewRowState.Added); " is 126.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,TableAdapterManager,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,UpdateInsertedRows,The length of the statement  "		global::System.Data.DataRow[] addedRows = dataSet.vehicles.Select (null' null' global::System.Data.DataViewRowState.Added); " is 123.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,TableAdapterManager,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,UpdateInsertedRows,The length of the statement  "		global::System.Data.DataRow[] addedRows = dataSet.rfid_stations.Select (null' null' global::System.Data.DataViewRowState.Added); " is 128.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,TableAdapterManager,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,UpdateInsertedRows,The length of the statement  "		global::System.Data.DataRow[] addedRows = dataSet.buildconfig_codes.Select (null' null' global::System.Data.DataViewRowState.Added); " is 132.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,TableAdapterManager,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,UpdateInsertedRows,The length of the statement  "		global::System.Data.DataRow[] addedRows = dataSet.vehicle_tags.Select (null' null' global::System.Data.DataViewRowState.Added); " is 127.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,TableAdapterManager,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,UpdateDeletedRows,The length of the statement  "		global::System.Data.DataRow[] deletedRows = dataSet.vehicle_tags.Select (null' null' global::System.Data.DataViewRowState.Deleted); " is 131.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,TableAdapterManager,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,UpdateDeletedRows,The length of the statement  "		global::System.Data.DataRow[] deletedRows = dataSet.buildconfig_codes.Select (null' null' global::System.Data.DataViewRowState.Deleted); " is 136.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,TableAdapterManager,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,UpdateDeletedRows,The length of the statement  "		global::System.Data.DataRow[] deletedRows = dataSet.rfid_stations.Select (null' null' global::System.Data.DataViewRowState.Deleted); " is 132.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,TableAdapterManager,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,UpdateDeletedRows,The length of the statement  "		global::System.Data.DataRow[] deletedRows = dataSet.vehicles.Select (null' null' global::System.Data.DataViewRowState.Deleted); " is 127.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,TableAdapterManager,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,UpdateDeletedRows,The length of the statement  "		global::System.Data.DataRow[] deletedRows = dataSet.buildstatus.Select (null' null' global::System.Data.DataViewRowState.Deleted); " is 130.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,TableAdapterManager,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,GetRealUpdatedRows,The length of the statement  "	global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow> (); " is 163.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,TableAdapterManager,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,UpdateAll,The length of the statement  "	if (((this._buildconfig_codesTableAdapter != null) && (this.MatchTableAdapterConnection (this._buildconfig_codesTableAdapter.Connection) == false))) { " is 150.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,TableAdapterManager,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,UpdateAll,The length of the statement  "		throw new global::System.ArgumentException ("All TableAdapters managed by a TableAdapterManager must use the same connection s" + "tring."); " is 140.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,TableAdapterManager,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,UpdateAll,The length of the statement  "	if (((this._buildstatusTableAdapter != null) && (this.MatchTableAdapterConnection (this._buildstatusTableAdapter.Connection) == false))) { " is 138.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,TableAdapterManager,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,UpdateAll,The length of the statement  "		throw new global::System.ArgumentException ("All TableAdapters managed by a TableAdapterManager must use the same connection s" + "tring."); " is 140.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,TableAdapterManager,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,UpdateAll,The length of the statement  "	if (((this._rfid_stationsTableAdapter != null) && (this.MatchTableAdapterConnection (this._rfid_stationsTableAdapter.Connection) == false))) { " is 142.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,TableAdapterManager,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,UpdateAll,The length of the statement  "		throw new global::System.ArgumentException ("All TableAdapters managed by a TableAdapterManager must use the same connection s" + "tring."); " is 140.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,TableAdapterManager,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,UpdateAll,The length of the statement  "	if (((this._vehicle_tagsTableAdapter != null) && (this.MatchTableAdapterConnection (this._vehicle_tagsTableAdapter.Connection) == false))) { " is 140.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,TableAdapterManager,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,UpdateAll,The length of the statement  "		throw new global::System.ArgumentException ("All TableAdapters managed by a TableAdapterManager must use the same connection s" + "tring."); " is 140.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,TableAdapterManager,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,UpdateAll,The length of the statement  "	if (((this._vehiclesTableAdapter != null) && (this.MatchTableAdapterConnection (this._vehiclesTableAdapter.Connection) == false))) { " is 132.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,TableAdapterManager,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,UpdateAll,The length of the statement  "		throw new global::System.ArgumentException ("All TableAdapters managed by a TableAdapterManager must use the same connection s" + "tring."); " is 140.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,TableAdapterManager,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,UpdateAll,The length of the statement  "		throw new global::System.ApplicationException ("TableAdapterManager contains no connection information. Set each TableAdapterMana" + "ger TableAdapter property to a valid TableAdapter instance."); " is 196.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,TableAdapterManager,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,UpdateAll,The length of the statement  "	if (((workConnection.State & global::System.Data.ConnectionState.Broken) == global::System.Data.ConnectionState.Broken)) { " is 122.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,TableAdapterManager,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,UpdateAll,The length of the statement  "		throw new global::System.ApplicationException ("The transaction cannot begin. The current data connection does not support transa" + "ctions or the current state is not allowing the transaction to begin."); " is 206.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,TableAdapterManager,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,UpdateAll,The length of the statement  "	global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow> (); " is 162.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,TableAdapterManager,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,UpdateAll,The length of the statement  "	global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow> (); " is 160.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,TableAdapterManager,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,UpdateAll,The length of the statement  "	global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> (); " is 207.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,TableAdapterManager,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,UpdateAll,The length of the statement  "	global::System.Collections.Generic.Dictionary<object' global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object' global::System.Data.IDbConnection> (); " is 205.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,TableAdapterManager,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,UpdateAll,The length of the statement  "			this._buildconfig_codesTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections [this._buildconfig_codesTableAdapter])); " is 157.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,TableAdapterManager,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,UpdateAll,The length of the statement  "			this._buildstatusTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections [this._buildstatusTableAdapter])); " is 145.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,TableAdapterManager,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,UpdateAll,The length of the statement  "			this._rfid_stationsTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections [this._rfid_stationsTableAdapter])); " is 149.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,TableAdapterManager,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,UpdateAll,The length of the statement  "			this._vehicle_tagsTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections [this._vehicle_tagsTableAdapter])); " is 147.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,TableAdapterManager,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,UpdateAll,The length of the statement  "			this._vehiclesTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections [this._vehiclesTableAdapter])); " is 139.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,TableAdapterManager,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,UpdateAll,The length of the statement  "			global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count]; " is 132.
Long Statement,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,TableAdapterManager,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,MatchTableAdapterConnection,The length of the statement  "	if (string.Equals (this.Connection.ConnectionString' inputConnection.ConnectionString' global::System.StringComparison.Ordinal)) { " is 130.
Complex Conditional,RadioTrack_ReaderClient,db_editor,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\db_editor.cs,validateConnection,The conditional expression  "!String.IsNullOrWhiteSpace (ConnStrBuilder.Server) && !String.IsNullOrWhiteSpace (ConnStrBuilder.Database) && !String.IsNullOrWhiteSpace (ConnStrBuilder.UserID) && !String.IsNullOrWhiteSpace (ConnStrBuilder.Password)"  is complex.
Empty Catch Block,RadioTrack_ReaderClient,db_editor,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\db_editor.cs,db_editor_Load,The method has an empty catch block.
Empty Catch Block,RadioTrack_ReaderClient,db_editor,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\db_editor.cs,db_editor_Load,The method has an empty catch block.
Empty Catch Block,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,setDatabaseConn,The method has an empty catch block.
Magic Number,RadioTrack_ReaderClient,db_editor,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\db_editor.cs,db_editor_Load,The following statement contains a magic number: if (builder_p.Port != 3306)  	tb_port_p.Text = builder_p.Port.ToString ();  
Magic Number,RadioTrack_ReaderClient,db_editor,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\db_editor.cs,db_editor_Load,The following statement contains a magic number: if (builder_b.Port != 3306)  	tb_port_b.Text = builder_b.Port.ToString ();  
Magic Number,RadioTrack_ReaderClient,db_editor,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\db_editor.cs,validatePort,The following statement contains a magic number: if (!int.TryParse (tb.Text' out port)) {  	throw new FormatException ("The Port you have entered must be a number"' (Exception)null);  }  else {  	if (!(port >= 1 && port <= 65535)) {  		throw new ArgumentOutOfRangeException ("The Port must be between 1 and 65535"' (Exception)null);  	}  }  
Magic Number,RadioTrack_ReaderClient,db_editor,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\db_editor.cs,validatePort,The following statement contains a magic number: if (!(port >= 1 && port <= 65535)) {  	throw new ArgumentOutOfRangeException ("The Port must be between 1 and 65535"' (Exception)null);  }  
Magic Number,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,getCardId,The following statement contains a magic number: for (short i = 0; i < 8; i++)  	id [i] = pcProxDLLAPI.getActiveID_byte (i);  
Magic Number,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,usbConnCheckWorker_RunWorkerCompleted,The following statement contains a magic number: if ((bool)e.Result) {  	if (readerConnectionOk == false && !firstConnect)  		notifIcon.ShowBalloonTip (5000' resMan.GetString ("notificon_reader_connected_title"' culture)' resMan.GetString ("notificon_reader_connected_text"' culture)' ToolTipIcon.Info);  	readerConnectionOk = true;  }  else {  	if (readerConnectionOk == true)  		notifIcon.ShowBalloonTip (5000' resMan.GetString ("notificon_reader_disconnected_title"' culture)' resMan.GetString ("notificon_reader_disconnected_text"' culture)' ToolTipIcon.Error);  	readerConnectionOk = false;  }  
Magic Number,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,usbConnCheckWorker_RunWorkerCompleted,The following statement contains a magic number: if ((bool)e.Result) {  	if (readerConnectionOk == false && !firstConnect)  		notifIcon.ShowBalloonTip (5000' resMan.GetString ("notificon_reader_connected_title"' culture)' resMan.GetString ("notificon_reader_connected_text"' culture)' ToolTipIcon.Info);  	readerConnectionOk = true;  }  else {  	if (readerConnectionOk == true)  		notifIcon.ShowBalloonTip (5000' resMan.GetString ("notificon_reader_disconnected_title"' culture)' resMan.GetString ("notificon_reader_disconnected_text"' culture)' ToolTipIcon.Error);  	readerConnectionOk = false;  }  
Magic Number,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,usbConnCheckWorker_RunWorkerCompleted,The following statement contains a magic number: if (readerConnectionOk == false && !firstConnect)  	notifIcon.ShowBalloonTip (5000' resMan.GetString ("notificon_reader_connected_title"' culture)' resMan.GetString ("notificon_reader_connected_text"' culture)' ToolTipIcon.Info);  
Magic Number,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,usbConnCheckWorker_RunWorkerCompleted,The following statement contains a magic number: notifIcon.ShowBalloonTip (5000' resMan.GetString ("notificon_reader_connected_title"' culture)' resMan.GetString ("notificon_reader_connected_text"' culture)' ToolTipIcon.Info);  
Magic Number,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,usbConnCheckWorker_RunWorkerCompleted,The following statement contains a magic number: if (readerConnectionOk == true)  	notifIcon.ShowBalloonTip (5000' resMan.GetString ("notificon_reader_disconnected_title"' culture)' resMan.GetString ("notificon_reader_disconnected_text"' culture)' ToolTipIcon.Error);  
Magic Number,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,usbConnCheckWorker_RunWorkerCompleted,The following statement contains a magic number: notifIcon.ShowBalloonTip (5000' resMan.GetString ("notificon_reader_disconnected_title"' culture)' resMan.GetString ("notificon_reader_disconnected_text"' culture)' ToolTipIcon.Error);  
Magic Number,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,dbConnCheckWorker_RunWorkerCompleted,The following statement contains a magic number: if ((bool)e.Result) {  	if (dbConnectionOk == false && !firstConnect)  		notifIcon.ShowBalloonTip (5000' resMan.GetString ("notificon_database_connected_title"' culture)' resMan.GetString ("notificon_database_connected_text"' culture)' ToolTipIcon.Info);  	dbConnectionOk = true;  }  else {  	if (dbConnectionOk == true)  		notifIcon.ShowBalloonTip (5000' resMan.GetString ("notificon_database_disconnected_title"' culture)' resMan.GetString ("notificon_database_disconnected_text"' culture)' ToolTipIcon.Error);  	dbConnectionOk = false;  }  
Magic Number,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,dbConnCheckWorker_RunWorkerCompleted,The following statement contains a magic number: if ((bool)e.Result) {  	if (dbConnectionOk == false && !firstConnect)  		notifIcon.ShowBalloonTip (5000' resMan.GetString ("notificon_database_connected_title"' culture)' resMan.GetString ("notificon_database_connected_text"' culture)' ToolTipIcon.Info);  	dbConnectionOk = true;  }  else {  	if (dbConnectionOk == true)  		notifIcon.ShowBalloonTip (5000' resMan.GetString ("notificon_database_disconnected_title"' culture)' resMan.GetString ("notificon_database_disconnected_text"' culture)' ToolTipIcon.Error);  	dbConnectionOk = false;  }  
Magic Number,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,dbConnCheckWorker_RunWorkerCompleted,The following statement contains a magic number: if (dbConnectionOk == false && !firstConnect)  	notifIcon.ShowBalloonTip (5000' resMan.GetString ("notificon_database_connected_title"' culture)' resMan.GetString ("notificon_database_connected_text"' culture)' ToolTipIcon.Info);  
Magic Number,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,dbConnCheckWorker_RunWorkerCompleted,The following statement contains a magic number: notifIcon.ShowBalloonTip (5000' resMan.GetString ("notificon_database_connected_title"' culture)' resMan.GetString ("notificon_database_connected_text"' culture)' ToolTipIcon.Info);  
Magic Number,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,dbConnCheckWorker_RunWorkerCompleted,The following statement contains a magic number: if (dbConnectionOk == true)  	notifIcon.ShowBalloonTip (5000' resMan.GetString ("notificon_database_disconnected_title"' culture)' resMan.GetString ("notificon_database_disconnected_text"' culture)' ToolTipIcon.Error);  
Magic Number,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,dbConnCheckWorker_RunWorkerCompleted,The following statement contains a magic number: notifIcon.ShowBalloonTip (5000' resMan.GetString ("notificon_database_disconnected_title"' culture)' resMan.GetString ("notificon_database_disconnected_text"' culture)' ToolTipIcon.Error);  
Magic Number,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,getBuildStatusFromStationId,The following statement contains a magic number: switch (stationId) {  case "SFC":  	result = 1;  	break;  case "TF":  	result = 4;  	break;  case "AUDIT":  	result = 3;  	break;  case "SOUND":  	result = 4;  	break;  case "WATER":  	result = 4;  	break;  case "CPA":  	result = 5;  	break;  case "CPB":  	result = 5;  	break;  case "FLEET":  	result = 5;  	break;  default:  	onLine = true;  	break;  }  
Magic Number,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,getBuildStatusFromStationId,The following statement contains a magic number: switch (stationId) {  case "SFC":  	result = 1;  	break;  case "TF":  	result = 4;  	break;  case "AUDIT":  	result = 3;  	break;  case "SOUND":  	result = 4;  	break;  case "WATER":  	result = 4;  	break;  case "CPA":  	result = 5;  	break;  case "CPB":  	result = 5;  	break;  case "FLEET":  	result = 5;  	break;  default:  	onLine = true;  	break;  }  
Magic Number,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,getBuildStatusFromStationId,The following statement contains a magic number: switch (stationId) {  case "SFC":  	result = 1;  	break;  case "TF":  	result = 4;  	break;  case "AUDIT":  	result = 3;  	break;  case "SOUND":  	result = 4;  	break;  case "WATER":  	result = 4;  	break;  case "CPA":  	result = 5;  	break;  case "CPB":  	result = 5;  	break;  case "FLEET":  	result = 5;  	break;  default:  	onLine = true;  	break;  }  
Magic Number,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,getBuildStatusFromStationId,The following statement contains a magic number: switch (stationId) {  case "SFC":  	result = 1;  	break;  case "TF":  	result = 4;  	break;  case "AUDIT":  	result = 3;  	break;  case "SOUND":  	result = 4;  	break;  case "WATER":  	result = 4;  	break;  case "CPA":  	result = 5;  	break;  case "CPB":  	result = 5;  	break;  case "FLEET":  	result = 5;  	break;  default:  	onLine = true;  	break;  }  
Magic Number,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,getBuildStatusFromStationId,The following statement contains a magic number: switch (stationId) {  case "SFC":  	result = 1;  	break;  case "TF":  	result = 4;  	break;  case "AUDIT":  	result = 3;  	break;  case "SOUND":  	result = 4;  	break;  case "WATER":  	result = 4;  	break;  case "CPA":  	result = 5;  	break;  case "CPB":  	result = 5;  	break;  case "FLEET":  	result = 5;  	break;  default:  	onLine = true;  	break;  }  
Magic Number,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,getBuildStatusFromStationId,The following statement contains a magic number: switch (stationId) {  case "SFC":  	result = 1;  	break;  case "TF":  	result = 4;  	break;  case "AUDIT":  	result = 3;  	break;  case "SOUND":  	result = 4;  	break;  case "WATER":  	result = 4;  	break;  case "CPA":  	result = 5;  	break;  case "CPB":  	result = 5;  	break;  case "FLEET":  	result = 5;  	break;  default:  	onLine = true;  	break;  }  
Magic Number,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,getBuildStatusFromStationId,The following statement contains a magic number: switch (stationId) {  case "SFC":  	result = 1;  	break;  case "TF":  	result = 4;  	break;  case "AUDIT":  	result = 3;  	break;  case "SOUND":  	result = 4;  	break;  case "WATER":  	result = 4;  	break;  case "CPA":  	result = 5;  	break;  case "CPB":  	result = 5;  	break;  case "FLEET":  	result = 5;  	break;  default:  	onLine = true;  	break;  }  
Magic Number,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,getBuildStatusFromStationId,The following statement contains a magic number: result = 4;  
Magic Number,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,getBuildStatusFromStationId,The following statement contains a magic number: result = 3;  
Magic Number,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,getBuildStatusFromStationId,The following statement contains a magic number: result = 4;  
Magic Number,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,getBuildStatusFromStationId,The following statement contains a magic number: result = 4;  
Magic Number,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,getBuildStatusFromStationId,The following statement contains a magic number: result = 5;  
Magic Number,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,getBuildStatusFromStationId,The following statement contains a magic number: result = 5;  
Magic Number,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,getBuildStatusFromStationId,The following statement contains a magic number: result = 5;  
Magic Number,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,getBuildStatusFromStationId,The following statement contains a magic number: if (onLine) {  	ArrayList vehicleHist = new ArrayList ();  	foreach (string station in stationHistory.Split (';'))  		vehicleHist.Add (station.Split (''') [0]);  	// If the vehicle has previously been at the station' then it is being reworked  	if (vehicleHist.Contains (stationId))  		result = 6;  	else  		result = 2;  }  
Magic Number,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,getBuildStatusFromStationId,The following statement contains a magic number: if (onLine) {  	ArrayList vehicleHist = new ArrayList ();  	foreach (string station in stationHistory.Split (';'))  		vehicleHist.Add (station.Split (''') [0]);  	// If the vehicle has previously been at the station' then it is being reworked  	if (vehicleHist.Contains (stationId))  		result = 6;  	else  		result = 2;  }  
Magic Number,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,getBuildStatusFromStationId,The following statement contains a magic number: if (vehicleHist.Contains (stationId))  	result = 6;  else  	result = 2;  
Magic Number,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,getBuildStatusFromStationId,The following statement contains a magic number: if (vehicleHist.Contains (stationId))  	result = 6;  else  	result = 2;  
Magic Number,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,getBuildStatusFromStationId,The following statement contains a magic number: result = 6;  
Magic Number,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,getBuildStatusFromStationId,The following statement contains a magic number: result = 2;  
Magic Number,RFIDeas_pcProxAPI,pcProxDLLAPI,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\RFIDeas_pcProxAPI.cs,getDeviceName,The following statement contains a magic number: for (short i = 0; i < 127; i++) {  	char c = getDevName_char (i);  	if (c == 0) {  		break;  	}  	s = s + c;  }  
Magic Number,RFIDeas_pcProxAPI,pcProxDLLAPI,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\RFIDeas_pcProxAPI.cs,getPartNumberString,The following statement contains a magic number: for (short i = 0; i < 127; i++) {  	char c = getPartNumberString_char (i);  	if (c == 0) {  		break;  	}  	s = s + c;  }  
Magic Number,RFIDeas_pcProxAPI,pcProxDLLAPI,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\RFIDeas_pcProxAPI.cs,readDevCfgFmFile,The following statement contains a magic number: return readDevCfgFmFile_char (255' (char)0);  
Magic Number,RFIDeas_pcProxAPI,pcProxDLLAPI,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\RFIDeas_pcProxAPI.cs,writeDevCfgToFile,The following statement contains a magic number: return writeDevCfgToFile_char (255' (char)0);  
Magic Number,RFIDeas_pcProxAPI,pcProxDLLAPI,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\RFIDeas_pcProxAPI.cs,chkAddArrival,The following statement contains a magic number: return chkAddArrival_char (255' (char)0);  
Magic Number,RFIDeas_pcProxAPI,pcProxDLLAPI,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\RFIDeas_pcProxAPI.cs,chkDelRemoval,The following statement contains a magic number: return chkDelRemoval_char (255' (char)0);  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,buildconfig_codesTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: if ((p3 == null)) {  	throw new global::System.ArgumentNullException ("p3");  }  else {  	this.Adapter.UpdateCommand.Parameters [2].Value = ((string)(p3));  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,buildconfig_codesTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: this.Adapter.UpdateCommand.Parameters [2].Value = ((string)(p3));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,buildconfig_codesTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: if ((p4 == null)) {  	throw new global::System.ArgumentNullException ("p4");  }  else {  	this.Adapter.UpdateCommand.Parameters [3].Value = ((string)(p4));  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,buildconfig_codesTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: this.Adapter.UpdateCommand.Parameters [3].Value = ((string)(p4));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,buildstatusTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: if ((p3 == null)) {  	throw new global::System.ArgumentNullException ("p3");  }  else {  	this.Adapter.UpdateCommand.Parameters [2].Value = ((string)(p3));  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,buildstatusTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: this.Adapter.UpdateCommand.Parameters [2].Value = ((string)(p3));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The following statement contains a magic number: if ((p4.HasValue == true)) {  	this.Adapter.DeleteCommand.Parameters [2].Value = ((object)(0));  	this.Adapter.DeleteCommand.Parameters [3].Value = ((decimal)(p4.Value));  }  else {  	this.Adapter.DeleteCommand.Parameters [2].Value = ((object)(1));  	this.Adapter.DeleteCommand.Parameters [3].Value = global::System.DBNull.Value;  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The following statement contains a magic number: if ((p4.HasValue == true)) {  	this.Adapter.DeleteCommand.Parameters [2].Value = ((object)(0));  	this.Adapter.DeleteCommand.Parameters [3].Value = ((decimal)(p4.Value));  }  else {  	this.Adapter.DeleteCommand.Parameters [2].Value = ((object)(1));  	this.Adapter.DeleteCommand.Parameters [3].Value = global::System.DBNull.Value;  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The following statement contains a magic number: if ((p4.HasValue == true)) {  	this.Adapter.DeleteCommand.Parameters [2].Value = ((object)(0));  	this.Adapter.DeleteCommand.Parameters [3].Value = ((decimal)(p4.Value));  }  else {  	this.Adapter.DeleteCommand.Parameters [2].Value = ((object)(1));  	this.Adapter.DeleteCommand.Parameters [3].Value = global::System.DBNull.Value;  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The following statement contains a magic number: if ((p4.HasValue == true)) {  	this.Adapter.DeleteCommand.Parameters [2].Value = ((object)(0));  	this.Adapter.DeleteCommand.Parameters [3].Value = ((decimal)(p4.Value));  }  else {  	this.Adapter.DeleteCommand.Parameters [2].Value = ((object)(1));  	this.Adapter.DeleteCommand.Parameters [3].Value = global::System.DBNull.Value;  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The following statement contains a magic number: this.Adapter.DeleteCommand.Parameters [2].Value = ((object)(0));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The following statement contains a magic number: this.Adapter.DeleteCommand.Parameters [3].Value = ((decimal)(p4.Value));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The following statement contains a magic number: this.Adapter.DeleteCommand.Parameters [2].Value = ((object)(1));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The following statement contains a magic number: this.Adapter.DeleteCommand.Parameters [3].Value = global::System.DBNull.Value;  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The following statement contains a magic number: if ((p6.HasValue == true)) {  	this.Adapter.DeleteCommand.Parameters [4].Value = ((object)(0));  	this.Adapter.DeleteCommand.Parameters [5].Value = ((decimal)(p6.Value));  }  else {  	this.Adapter.DeleteCommand.Parameters [4].Value = ((object)(1));  	this.Adapter.DeleteCommand.Parameters [5].Value = global::System.DBNull.Value;  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The following statement contains a magic number: if ((p6.HasValue == true)) {  	this.Adapter.DeleteCommand.Parameters [4].Value = ((object)(0));  	this.Adapter.DeleteCommand.Parameters [5].Value = ((decimal)(p6.Value));  }  else {  	this.Adapter.DeleteCommand.Parameters [4].Value = ((object)(1));  	this.Adapter.DeleteCommand.Parameters [5].Value = global::System.DBNull.Value;  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The following statement contains a magic number: if ((p6.HasValue == true)) {  	this.Adapter.DeleteCommand.Parameters [4].Value = ((object)(0));  	this.Adapter.DeleteCommand.Parameters [5].Value = ((decimal)(p6.Value));  }  else {  	this.Adapter.DeleteCommand.Parameters [4].Value = ((object)(1));  	this.Adapter.DeleteCommand.Parameters [5].Value = global::System.DBNull.Value;  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The following statement contains a magic number: if ((p6.HasValue == true)) {  	this.Adapter.DeleteCommand.Parameters [4].Value = ((object)(0));  	this.Adapter.DeleteCommand.Parameters [5].Value = ((decimal)(p6.Value));  }  else {  	this.Adapter.DeleteCommand.Parameters [4].Value = ((object)(1));  	this.Adapter.DeleteCommand.Parameters [5].Value = global::System.DBNull.Value;  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The following statement contains a magic number: this.Adapter.DeleteCommand.Parameters [4].Value = ((object)(0));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The following statement contains a magic number: this.Adapter.DeleteCommand.Parameters [5].Value = ((decimal)(p6.Value));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The following statement contains a magic number: this.Adapter.DeleteCommand.Parameters [4].Value = ((object)(1));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The following statement contains a magic number: this.Adapter.DeleteCommand.Parameters [5].Value = global::System.DBNull.Value;  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Insert,The following statement contains a magic number: if ((p3.HasValue == true)) {  	this.Adapter.InsertCommand.Parameters [2].Value = ((decimal)(p3.Value));  }  else {  	this.Adapter.InsertCommand.Parameters [2].Value = global::System.DBNull.Value;  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Insert,The following statement contains a magic number: if ((p3.HasValue == true)) {  	this.Adapter.InsertCommand.Parameters [2].Value = ((decimal)(p3.Value));  }  else {  	this.Adapter.InsertCommand.Parameters [2].Value = global::System.DBNull.Value;  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Insert,The following statement contains a magic number: this.Adapter.InsertCommand.Parameters [2].Value = ((decimal)(p3.Value));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Insert,The following statement contains a magic number: this.Adapter.InsertCommand.Parameters [2].Value = global::System.DBNull.Value;  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Insert,The following statement contains a magic number: if ((p4.HasValue == true)) {  	this.Adapter.InsertCommand.Parameters [3].Value = ((decimal)(p4.Value));  }  else {  	this.Adapter.InsertCommand.Parameters [3].Value = global::System.DBNull.Value;  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Insert,The following statement contains a magic number: if ((p4.HasValue == true)) {  	this.Adapter.InsertCommand.Parameters [3].Value = ((decimal)(p4.Value));  }  else {  	this.Adapter.InsertCommand.Parameters [3].Value = global::System.DBNull.Value;  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Insert,The following statement contains a magic number: this.Adapter.InsertCommand.Parameters [3].Value = ((decimal)(p4.Value));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Insert,The following statement contains a magic number: this.Adapter.InsertCommand.Parameters [3].Value = global::System.DBNull.Value;  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: if ((p3.HasValue == true)) {  	this.Adapter.UpdateCommand.Parameters [2].Value = ((decimal)(p3.Value));  }  else {  	this.Adapter.UpdateCommand.Parameters [2].Value = global::System.DBNull.Value;  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: if ((p3.HasValue == true)) {  	this.Adapter.UpdateCommand.Parameters [2].Value = ((decimal)(p3.Value));  }  else {  	this.Adapter.UpdateCommand.Parameters [2].Value = global::System.DBNull.Value;  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: this.Adapter.UpdateCommand.Parameters [2].Value = ((decimal)(p3.Value));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: this.Adapter.UpdateCommand.Parameters [2].Value = global::System.DBNull.Value;  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: if ((p4.HasValue == true)) {  	this.Adapter.UpdateCommand.Parameters [3].Value = ((decimal)(p4.Value));  }  else {  	this.Adapter.UpdateCommand.Parameters [3].Value = global::System.DBNull.Value;  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: if ((p4.HasValue == true)) {  	this.Adapter.UpdateCommand.Parameters [3].Value = ((decimal)(p4.Value));  }  else {  	this.Adapter.UpdateCommand.Parameters [3].Value = global::System.DBNull.Value;  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: this.Adapter.UpdateCommand.Parameters [3].Value = ((decimal)(p4.Value));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: this.Adapter.UpdateCommand.Parameters [3].Value = global::System.DBNull.Value;  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: if ((p5 == null)) {  	throw new global::System.ArgumentNullException ("p5");  }  else {  	this.Adapter.UpdateCommand.Parameters [4].Value = ((string)(p5));  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: this.Adapter.UpdateCommand.Parameters [4].Value = ((string)(p5));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: if ((p6 == null)) {  	throw new global::System.ArgumentNullException ("p6");  }  else {  	this.Adapter.UpdateCommand.Parameters [5].Value = ((string)(p6));  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: this.Adapter.UpdateCommand.Parameters [5].Value = ((string)(p6));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: if ((p8.HasValue == true)) {  	this.Adapter.UpdateCommand.Parameters [6].Value = ((object)(0));  	this.Adapter.UpdateCommand.Parameters [7].Value = ((decimal)(p8.Value));  }  else {  	this.Adapter.UpdateCommand.Parameters [6].Value = ((object)(1));  	this.Adapter.UpdateCommand.Parameters [7].Value = global::System.DBNull.Value;  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: if ((p8.HasValue == true)) {  	this.Adapter.UpdateCommand.Parameters [6].Value = ((object)(0));  	this.Adapter.UpdateCommand.Parameters [7].Value = ((decimal)(p8.Value));  }  else {  	this.Adapter.UpdateCommand.Parameters [6].Value = ((object)(1));  	this.Adapter.UpdateCommand.Parameters [7].Value = global::System.DBNull.Value;  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: if ((p8.HasValue == true)) {  	this.Adapter.UpdateCommand.Parameters [6].Value = ((object)(0));  	this.Adapter.UpdateCommand.Parameters [7].Value = ((decimal)(p8.Value));  }  else {  	this.Adapter.UpdateCommand.Parameters [6].Value = ((object)(1));  	this.Adapter.UpdateCommand.Parameters [7].Value = global::System.DBNull.Value;  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: if ((p8.HasValue == true)) {  	this.Adapter.UpdateCommand.Parameters [6].Value = ((object)(0));  	this.Adapter.UpdateCommand.Parameters [7].Value = ((decimal)(p8.Value));  }  else {  	this.Adapter.UpdateCommand.Parameters [6].Value = ((object)(1));  	this.Adapter.UpdateCommand.Parameters [7].Value = global::System.DBNull.Value;  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: this.Adapter.UpdateCommand.Parameters [6].Value = ((object)(0));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: this.Adapter.UpdateCommand.Parameters [7].Value = ((decimal)(p8.Value));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: this.Adapter.UpdateCommand.Parameters [6].Value = ((object)(1));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: this.Adapter.UpdateCommand.Parameters [7].Value = global::System.DBNull.Value;  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: if ((p10.HasValue == true)) {  	this.Adapter.UpdateCommand.Parameters [8].Value = ((object)(0));  	this.Adapter.UpdateCommand.Parameters [9].Value = ((decimal)(p10.Value));  }  else {  	this.Adapter.UpdateCommand.Parameters [8].Value = ((object)(1));  	this.Adapter.UpdateCommand.Parameters [9].Value = global::System.DBNull.Value;  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: if ((p10.HasValue == true)) {  	this.Adapter.UpdateCommand.Parameters [8].Value = ((object)(0));  	this.Adapter.UpdateCommand.Parameters [9].Value = ((decimal)(p10.Value));  }  else {  	this.Adapter.UpdateCommand.Parameters [8].Value = ((object)(1));  	this.Adapter.UpdateCommand.Parameters [9].Value = global::System.DBNull.Value;  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: if ((p10.HasValue == true)) {  	this.Adapter.UpdateCommand.Parameters [8].Value = ((object)(0));  	this.Adapter.UpdateCommand.Parameters [9].Value = ((decimal)(p10.Value));  }  else {  	this.Adapter.UpdateCommand.Parameters [8].Value = ((object)(1));  	this.Adapter.UpdateCommand.Parameters [9].Value = global::System.DBNull.Value;  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: if ((p10.HasValue == true)) {  	this.Adapter.UpdateCommand.Parameters [8].Value = ((object)(0));  	this.Adapter.UpdateCommand.Parameters [9].Value = ((decimal)(p10.Value));  }  else {  	this.Adapter.UpdateCommand.Parameters [8].Value = ((object)(1));  	this.Adapter.UpdateCommand.Parameters [9].Value = global::System.DBNull.Value;  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: this.Adapter.UpdateCommand.Parameters [8].Value = ((object)(0));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: this.Adapter.UpdateCommand.Parameters [9].Value = ((decimal)(p10.Value));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: this.Adapter.UpdateCommand.Parameters [8].Value = ((object)(1));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,rfid_stationsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: this.Adapter.UpdateCommand.Parameters [9].Value = global::System.DBNull.Value;  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The following statement contains a magic number: if ((p4 == null)) {  	this.Adapter.DeleteCommand.Parameters [2].Value = ((object)(1));  	this.Adapter.DeleteCommand.Parameters [3].Value = global::System.DBNull.Value;  }  else {  	this.Adapter.DeleteCommand.Parameters [2].Value = ((object)(0));  	this.Adapter.DeleteCommand.Parameters [3].Value = ((string)(p4));  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The following statement contains a magic number: if ((p4 == null)) {  	this.Adapter.DeleteCommand.Parameters [2].Value = ((object)(1));  	this.Adapter.DeleteCommand.Parameters [3].Value = global::System.DBNull.Value;  }  else {  	this.Adapter.DeleteCommand.Parameters [2].Value = ((object)(0));  	this.Adapter.DeleteCommand.Parameters [3].Value = ((string)(p4));  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The following statement contains a magic number: if ((p4 == null)) {  	this.Adapter.DeleteCommand.Parameters [2].Value = ((object)(1));  	this.Adapter.DeleteCommand.Parameters [3].Value = global::System.DBNull.Value;  }  else {  	this.Adapter.DeleteCommand.Parameters [2].Value = ((object)(0));  	this.Adapter.DeleteCommand.Parameters [3].Value = ((string)(p4));  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The following statement contains a magic number: if ((p4 == null)) {  	this.Adapter.DeleteCommand.Parameters [2].Value = ((object)(1));  	this.Adapter.DeleteCommand.Parameters [3].Value = global::System.DBNull.Value;  }  else {  	this.Adapter.DeleteCommand.Parameters [2].Value = ((object)(0));  	this.Adapter.DeleteCommand.Parameters [3].Value = ((string)(p4));  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The following statement contains a magic number: this.Adapter.DeleteCommand.Parameters [2].Value = ((object)(1));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The following statement contains a magic number: this.Adapter.DeleteCommand.Parameters [3].Value = global::System.DBNull.Value;  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The following statement contains a magic number: this.Adapter.DeleteCommand.Parameters [2].Value = ((object)(0));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The following statement contains a magic number: this.Adapter.DeleteCommand.Parameters [3].Value = ((string)(p4));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The following statement contains a magic number: if ((p6.HasValue == true)) {  	this.Adapter.DeleteCommand.Parameters [4].Value = ((object)(0));  	this.Adapter.DeleteCommand.Parameters [5].Value = ((System.DateTime)(p6.Value));  }  else {  	this.Adapter.DeleteCommand.Parameters [4].Value = ((object)(1));  	this.Adapter.DeleteCommand.Parameters [5].Value = global::System.DBNull.Value;  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The following statement contains a magic number: if ((p6.HasValue == true)) {  	this.Adapter.DeleteCommand.Parameters [4].Value = ((object)(0));  	this.Adapter.DeleteCommand.Parameters [5].Value = ((System.DateTime)(p6.Value));  }  else {  	this.Adapter.DeleteCommand.Parameters [4].Value = ((object)(1));  	this.Adapter.DeleteCommand.Parameters [5].Value = global::System.DBNull.Value;  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The following statement contains a magic number: if ((p6.HasValue == true)) {  	this.Adapter.DeleteCommand.Parameters [4].Value = ((object)(0));  	this.Adapter.DeleteCommand.Parameters [5].Value = ((System.DateTime)(p6.Value));  }  else {  	this.Adapter.DeleteCommand.Parameters [4].Value = ((object)(1));  	this.Adapter.DeleteCommand.Parameters [5].Value = global::System.DBNull.Value;  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The following statement contains a magic number: if ((p6.HasValue == true)) {  	this.Adapter.DeleteCommand.Parameters [4].Value = ((object)(0));  	this.Adapter.DeleteCommand.Parameters [5].Value = ((System.DateTime)(p6.Value));  }  else {  	this.Adapter.DeleteCommand.Parameters [4].Value = ((object)(1));  	this.Adapter.DeleteCommand.Parameters [5].Value = global::System.DBNull.Value;  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The following statement contains a magic number: this.Adapter.DeleteCommand.Parameters [4].Value = ((object)(0));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The following statement contains a magic number: this.Adapter.DeleteCommand.Parameters [5].Value = ((System.DateTime)(p6.Value));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The following statement contains a magic number: this.Adapter.DeleteCommand.Parameters [4].Value = ((object)(1));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The following statement contains a magic number: this.Adapter.DeleteCommand.Parameters [5].Value = global::System.DBNull.Value;  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The following statement contains a magic number: if ((p8 == null)) {  	this.Adapter.DeleteCommand.Parameters [6].Value = ((object)(1));  	this.Adapter.DeleteCommand.Parameters [7].Value = global::System.DBNull.Value;  }  else {  	this.Adapter.DeleteCommand.Parameters [6].Value = ((object)(0));  	this.Adapter.DeleteCommand.Parameters [7].Value = ((string)(p8));  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The following statement contains a magic number: if ((p8 == null)) {  	this.Adapter.DeleteCommand.Parameters [6].Value = ((object)(1));  	this.Adapter.DeleteCommand.Parameters [7].Value = global::System.DBNull.Value;  }  else {  	this.Adapter.DeleteCommand.Parameters [6].Value = ((object)(0));  	this.Adapter.DeleteCommand.Parameters [7].Value = ((string)(p8));  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The following statement contains a magic number: if ((p8 == null)) {  	this.Adapter.DeleteCommand.Parameters [6].Value = ((object)(1));  	this.Adapter.DeleteCommand.Parameters [7].Value = global::System.DBNull.Value;  }  else {  	this.Adapter.DeleteCommand.Parameters [6].Value = ((object)(0));  	this.Adapter.DeleteCommand.Parameters [7].Value = ((string)(p8));  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The following statement contains a magic number: if ((p8 == null)) {  	this.Adapter.DeleteCommand.Parameters [6].Value = ((object)(1));  	this.Adapter.DeleteCommand.Parameters [7].Value = global::System.DBNull.Value;  }  else {  	this.Adapter.DeleteCommand.Parameters [6].Value = ((object)(0));  	this.Adapter.DeleteCommand.Parameters [7].Value = ((string)(p8));  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The following statement contains a magic number: this.Adapter.DeleteCommand.Parameters [6].Value = ((object)(1));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The following statement contains a magic number: this.Adapter.DeleteCommand.Parameters [7].Value = global::System.DBNull.Value;  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The following statement contains a magic number: this.Adapter.DeleteCommand.Parameters [6].Value = ((object)(0));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The following statement contains a magic number: this.Adapter.DeleteCommand.Parameters [7].Value = ((string)(p8));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Insert,The following statement contains a magic number: if ((p3 == null)) {  	this.Adapter.InsertCommand.Parameters [2].Value = global::System.DBNull.Value;  }  else {  	this.Adapter.InsertCommand.Parameters [2].Value = ((string)(p3));  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Insert,The following statement contains a magic number: if ((p3 == null)) {  	this.Adapter.InsertCommand.Parameters [2].Value = global::System.DBNull.Value;  }  else {  	this.Adapter.InsertCommand.Parameters [2].Value = ((string)(p3));  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Insert,The following statement contains a magic number: this.Adapter.InsertCommand.Parameters [2].Value = global::System.DBNull.Value;  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Insert,The following statement contains a magic number: this.Adapter.InsertCommand.Parameters [2].Value = ((string)(p3));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Insert,The following statement contains a magic number: if ((p4.HasValue == true)) {  	this.Adapter.InsertCommand.Parameters [3].Value = ((System.DateTime)(p4.Value));  }  else {  	this.Adapter.InsertCommand.Parameters [3].Value = global::System.DBNull.Value;  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Insert,The following statement contains a magic number: if ((p4.HasValue == true)) {  	this.Adapter.InsertCommand.Parameters [3].Value = ((System.DateTime)(p4.Value));  }  else {  	this.Adapter.InsertCommand.Parameters [3].Value = global::System.DBNull.Value;  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Insert,The following statement contains a magic number: this.Adapter.InsertCommand.Parameters [3].Value = ((System.DateTime)(p4.Value));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Insert,The following statement contains a magic number: this.Adapter.InsertCommand.Parameters [3].Value = global::System.DBNull.Value;  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Insert,The following statement contains a magic number: if ((p5 == null)) {  	this.Adapter.InsertCommand.Parameters [4].Value = global::System.DBNull.Value;  }  else {  	this.Adapter.InsertCommand.Parameters [4].Value = ((string)(p5));  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Insert,The following statement contains a magic number: if ((p5 == null)) {  	this.Adapter.InsertCommand.Parameters [4].Value = global::System.DBNull.Value;  }  else {  	this.Adapter.InsertCommand.Parameters [4].Value = ((string)(p5));  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Insert,The following statement contains a magic number: this.Adapter.InsertCommand.Parameters [4].Value = global::System.DBNull.Value;  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Insert,The following statement contains a magic number: this.Adapter.InsertCommand.Parameters [4].Value = ((string)(p5));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: if ((p3 == null)) {  	this.Adapter.UpdateCommand.Parameters [2].Value = global::System.DBNull.Value;  }  else {  	this.Adapter.UpdateCommand.Parameters [2].Value = ((string)(p3));  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: if ((p3 == null)) {  	this.Adapter.UpdateCommand.Parameters [2].Value = global::System.DBNull.Value;  }  else {  	this.Adapter.UpdateCommand.Parameters [2].Value = ((string)(p3));  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: this.Adapter.UpdateCommand.Parameters [2].Value = global::System.DBNull.Value;  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: this.Adapter.UpdateCommand.Parameters [2].Value = ((string)(p3));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: if ((p4.HasValue == true)) {  	this.Adapter.UpdateCommand.Parameters [3].Value = ((System.DateTime)(p4.Value));  }  else {  	this.Adapter.UpdateCommand.Parameters [3].Value = global::System.DBNull.Value;  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: if ((p4.HasValue == true)) {  	this.Adapter.UpdateCommand.Parameters [3].Value = ((System.DateTime)(p4.Value));  }  else {  	this.Adapter.UpdateCommand.Parameters [3].Value = global::System.DBNull.Value;  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: this.Adapter.UpdateCommand.Parameters [3].Value = ((System.DateTime)(p4.Value));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: this.Adapter.UpdateCommand.Parameters [3].Value = global::System.DBNull.Value;  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: if ((p5 == null)) {  	this.Adapter.UpdateCommand.Parameters [4].Value = global::System.DBNull.Value;  }  else {  	this.Adapter.UpdateCommand.Parameters [4].Value = ((string)(p5));  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: if ((p5 == null)) {  	this.Adapter.UpdateCommand.Parameters [4].Value = global::System.DBNull.Value;  }  else {  	this.Adapter.UpdateCommand.Parameters [4].Value = ((string)(p5));  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: this.Adapter.UpdateCommand.Parameters [4].Value = global::System.DBNull.Value;  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: this.Adapter.UpdateCommand.Parameters [4].Value = ((string)(p5));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: if ((p6 == null)) {  	throw new global::System.ArgumentNullException ("p6");  }  else {  	this.Adapter.UpdateCommand.Parameters [5].Value = ((string)(p6));  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: this.Adapter.UpdateCommand.Parameters [5].Value = ((string)(p6));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: if ((p7 == null)) {  	throw new global::System.ArgumentNullException ("p7");  }  else {  	this.Adapter.UpdateCommand.Parameters [6].Value = ((string)(p7));  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: this.Adapter.UpdateCommand.Parameters [6].Value = ((string)(p7));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: if ((p9 == null)) {  	this.Adapter.UpdateCommand.Parameters [7].Value = ((object)(1));  	this.Adapter.UpdateCommand.Parameters [8].Value = global::System.DBNull.Value;  }  else {  	this.Adapter.UpdateCommand.Parameters [7].Value = ((object)(0));  	this.Adapter.UpdateCommand.Parameters [8].Value = ((string)(p9));  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: if ((p9 == null)) {  	this.Adapter.UpdateCommand.Parameters [7].Value = ((object)(1));  	this.Adapter.UpdateCommand.Parameters [8].Value = global::System.DBNull.Value;  }  else {  	this.Adapter.UpdateCommand.Parameters [7].Value = ((object)(0));  	this.Adapter.UpdateCommand.Parameters [8].Value = ((string)(p9));  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: if ((p9 == null)) {  	this.Adapter.UpdateCommand.Parameters [7].Value = ((object)(1));  	this.Adapter.UpdateCommand.Parameters [8].Value = global::System.DBNull.Value;  }  else {  	this.Adapter.UpdateCommand.Parameters [7].Value = ((object)(0));  	this.Adapter.UpdateCommand.Parameters [8].Value = ((string)(p9));  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: if ((p9 == null)) {  	this.Adapter.UpdateCommand.Parameters [7].Value = ((object)(1));  	this.Adapter.UpdateCommand.Parameters [8].Value = global::System.DBNull.Value;  }  else {  	this.Adapter.UpdateCommand.Parameters [7].Value = ((object)(0));  	this.Adapter.UpdateCommand.Parameters [8].Value = ((string)(p9));  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: this.Adapter.UpdateCommand.Parameters [7].Value = ((object)(1));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: this.Adapter.UpdateCommand.Parameters [8].Value = global::System.DBNull.Value;  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: this.Adapter.UpdateCommand.Parameters [7].Value = ((object)(0));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: this.Adapter.UpdateCommand.Parameters [8].Value = ((string)(p9));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: if ((p11.HasValue == true)) {  	this.Adapter.UpdateCommand.Parameters [9].Value = ((object)(0));  	this.Adapter.UpdateCommand.Parameters [10].Value = ((System.DateTime)(p11.Value));  }  else {  	this.Adapter.UpdateCommand.Parameters [9].Value = ((object)(1));  	this.Adapter.UpdateCommand.Parameters [10].Value = global::System.DBNull.Value;  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: if ((p11.HasValue == true)) {  	this.Adapter.UpdateCommand.Parameters [9].Value = ((object)(0));  	this.Adapter.UpdateCommand.Parameters [10].Value = ((System.DateTime)(p11.Value));  }  else {  	this.Adapter.UpdateCommand.Parameters [9].Value = ((object)(1));  	this.Adapter.UpdateCommand.Parameters [10].Value = global::System.DBNull.Value;  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: if ((p11.HasValue == true)) {  	this.Adapter.UpdateCommand.Parameters [9].Value = ((object)(0));  	this.Adapter.UpdateCommand.Parameters [10].Value = ((System.DateTime)(p11.Value));  }  else {  	this.Adapter.UpdateCommand.Parameters [9].Value = ((object)(1));  	this.Adapter.UpdateCommand.Parameters [10].Value = global::System.DBNull.Value;  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: if ((p11.HasValue == true)) {  	this.Adapter.UpdateCommand.Parameters [9].Value = ((object)(0));  	this.Adapter.UpdateCommand.Parameters [10].Value = ((System.DateTime)(p11.Value));  }  else {  	this.Adapter.UpdateCommand.Parameters [9].Value = ((object)(1));  	this.Adapter.UpdateCommand.Parameters [10].Value = global::System.DBNull.Value;  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: this.Adapter.UpdateCommand.Parameters [9].Value = ((object)(0));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: this.Adapter.UpdateCommand.Parameters [10].Value = ((System.DateTime)(p11.Value));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: this.Adapter.UpdateCommand.Parameters [9].Value = ((object)(1));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: this.Adapter.UpdateCommand.Parameters [10].Value = global::System.DBNull.Value;  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: if ((p13 == null)) {  	this.Adapter.UpdateCommand.Parameters [11].Value = ((object)(1));  	this.Adapter.UpdateCommand.Parameters [12].Value = global::System.DBNull.Value;  }  else {  	this.Adapter.UpdateCommand.Parameters [11].Value = ((object)(0));  	this.Adapter.UpdateCommand.Parameters [12].Value = ((string)(p13));  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: if ((p13 == null)) {  	this.Adapter.UpdateCommand.Parameters [11].Value = ((object)(1));  	this.Adapter.UpdateCommand.Parameters [12].Value = global::System.DBNull.Value;  }  else {  	this.Adapter.UpdateCommand.Parameters [11].Value = ((object)(0));  	this.Adapter.UpdateCommand.Parameters [12].Value = ((string)(p13));  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: if ((p13 == null)) {  	this.Adapter.UpdateCommand.Parameters [11].Value = ((object)(1));  	this.Adapter.UpdateCommand.Parameters [12].Value = global::System.DBNull.Value;  }  else {  	this.Adapter.UpdateCommand.Parameters [11].Value = ((object)(0));  	this.Adapter.UpdateCommand.Parameters [12].Value = ((string)(p13));  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: if ((p13 == null)) {  	this.Adapter.UpdateCommand.Parameters [11].Value = ((object)(1));  	this.Adapter.UpdateCommand.Parameters [12].Value = global::System.DBNull.Value;  }  else {  	this.Adapter.UpdateCommand.Parameters [11].Value = ((object)(0));  	this.Adapter.UpdateCommand.Parameters [12].Value = ((string)(p13));  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: this.Adapter.UpdateCommand.Parameters [11].Value = ((object)(1));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: this.Adapter.UpdateCommand.Parameters [12].Value = global::System.DBNull.Value;  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: this.Adapter.UpdateCommand.Parameters [11].Value = ((object)(0));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehicle_tagsTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: this.Adapter.UpdateCommand.Parameters [12].Value = ((string)(p13));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehiclesTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The following statement contains a magic number: if ((p3 == null)) {  	throw new global::System.ArgumentNullException ("p3");  }  else {  	this.Adapter.DeleteCommand.Parameters [2].Value = ((string)(p3));  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehiclesTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The following statement contains a magic number: this.Adapter.DeleteCommand.Parameters [2].Value = ((string)(p3));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehiclesTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The following statement contains a magic number: this.Adapter.DeleteCommand.Parameters [3].Value = ((int)(p4));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehiclesTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The following statement contains a magic number: if ((p5 == null)) {  	throw new global::System.ArgumentNullException ("p5");  }  else {  	this.Adapter.DeleteCommand.Parameters [4].Value = ((string)(p5));  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehiclesTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Delete,The following statement contains a magic number: this.Adapter.DeleteCommand.Parameters [4].Value = ((string)(p5));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehiclesTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Insert,The following statement contains a magic number: if ((p3 == null)) {  	throw new global::System.ArgumentNullException ("p3");  }  else {  	this.Adapter.InsertCommand.Parameters [2].Value = ((string)(p3));  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehiclesTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Insert,The following statement contains a magic number: this.Adapter.InsertCommand.Parameters [2].Value = ((string)(p3));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehiclesTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Insert,The following statement contains a magic number: this.Adapter.InsertCommand.Parameters [3].Value = ((int)(p4));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehiclesTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Insert,The following statement contains a magic number: if ((p5 == null)) {  	throw new global::System.ArgumentNullException ("p5");  }  else {  	this.Adapter.InsertCommand.Parameters [4].Value = ((string)(p5));  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehiclesTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Insert,The following statement contains a magic number: this.Adapter.InsertCommand.Parameters [4].Value = ((string)(p5));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehiclesTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: if ((p3 == null)) {  	throw new global::System.ArgumentNullException ("p3");  }  else {  	this.Adapter.UpdateCommand.Parameters [2].Value = ((string)(p3));  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehiclesTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: this.Adapter.UpdateCommand.Parameters [2].Value = ((string)(p3));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehiclesTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: this.Adapter.UpdateCommand.Parameters [3].Value = ((int)(p4));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehiclesTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: if ((p5 == null)) {  	throw new global::System.ArgumentNullException ("p5");  }  else {  	this.Adapter.UpdateCommand.Parameters [4].Value = ((string)(p5));  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehiclesTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: this.Adapter.UpdateCommand.Parameters [4].Value = ((string)(p5));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehiclesTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: if ((p6 == null)) {  	throw new global::System.ArgumentNullException ("p6");  }  else {  	this.Adapter.UpdateCommand.Parameters [5].Value = ((string)(p6));  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehiclesTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: this.Adapter.UpdateCommand.Parameters [5].Value = ((string)(p6));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehiclesTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: if ((p7 == null)) {  	throw new global::System.ArgumentNullException ("p7");  }  else {  	this.Adapter.UpdateCommand.Parameters [6].Value = ((string)(p7));  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehiclesTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: this.Adapter.UpdateCommand.Parameters [6].Value = ((string)(p7));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehiclesTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: if ((p8 == null)) {  	throw new global::System.ArgumentNullException ("p8");  }  else {  	this.Adapter.UpdateCommand.Parameters [7].Value = ((string)(p8));  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehiclesTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: this.Adapter.UpdateCommand.Parameters [7].Value = ((string)(p8));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehiclesTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: this.Adapter.UpdateCommand.Parameters [8].Value = ((int)(p9));  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehiclesTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: if ((p10 == null)) {  	throw new global::System.ArgumentNullException ("p10");  }  else {  	this.Adapter.UpdateCommand.Parameters [9].Value = ((string)(p10));  }  
Magic Number,RadioTrack_ReaderClient.rfidtrackDataSetTableAdapters,vehiclesTableAdapter,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\rfidtrackDataSet.Designer.cs,Update,The following statement contains a magic number: this.Adapter.UpdateCommand.Parameters [9].Value = ((string)(p10));  
Missing Default,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,setDatabaseConn,The following switch statement is missing a default case: switch (connToUse) {  case "primary":  	rfidtrackConnStr = config.ConnectionStrings.ConnectionStrings ["RadioTrack_ReaderClient.Properties.Settings.databaseConnStr_primary"].ConnectionString;  	dbConn = new MySqlConnection (rfidtrackConnStr);  	databaseMenu_primary.Checked = true;  	databaseMenu_backup.Checked = false;  	break;  case "backup":  	try {  		rfidtrackConnStr = config.ConnectionStrings.ConnectionStrings ["RadioTrack_ReaderClient.Properties.Settings.databaseConnStr_backup"].ConnectionString;  		dbConn = new MySqlConnection (rfidtrackConnStr);  		databaseMenu_primary.Checked = false;  		databaseMenu_backup.Checked = true;  	}  	catch (NullReferenceException ex) {  		MessageBox.Show ("A Backup database connection has not been set."' "Backup Database"' MessageBoxButtons.OK' MessageBoxIcon.Error);  	}  	catch (Exception ex) {  	}  	break;  }  
Missing Default,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,setLanguage,The following switch statement is missing a default case: switch (langCode) {  case "en":  	langMenu_en.Checked = true;  	langMenu_de.Checked = false;  	break;  case "de":  	langMenu_de.Checked = true;  	langMenu_en.Checked = false;  	break;  }  
Missing Default,RadioTrack_ReaderClient,form_Main,C:\repos\imbenjamin_RadioTrackLineside\RadioTrack_ReaderClient\Form1.cs,allStatusToggle,The following switch statement is missing a default case: switch (newStatus) {  case true:  	// Good to go!  	allStatusOk = true;  	status_statusLabel.Text = resMan.GetString ("status_ready"' culture);  	break;  case false:  	// Something wrong!  	allStatusOk = false;  	status_statusLabel.Text = resMan.GetString ("status_waiting_for_connections"' culture);  	break;  }  
