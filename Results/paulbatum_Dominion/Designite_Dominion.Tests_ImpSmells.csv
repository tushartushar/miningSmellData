Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Dominion.Tests,AITests,C:\research\architectureSmells\repos\paulbatum_Dominion\Dominion.Tests\AITests.cs,BigMoneyAI_can_complete_a_game,The following statement contains a magic number: var key = multiGameHost.CreateNewGame(new[] { "BigMoneyAI"' "BigMoneyAI"' "BigMoneyAI" }' 3);
Magic Number,Dominion.Tests,AITests,C:\research\architectureSmells\repos\paulbatum_Dominion\Dominion.Tests\AITests.cs,BigMoneyAI_can_complete_a_game,The following statement contains a magic number: Thread.Sleep(500);
Magic Number,Dominion.Tests,AITests,C:\research\architectureSmells\repos\paulbatum_Dominion\Dominion.Tests\AITests.cs,SimpleAI_can_complete_a_game,The following statement contains a magic number: var key = multiGameHost.CreateNewGame(new[] { "SimpleAI"' "SimpleAI"' "SimpleAI" }' 3);
Magic Number,Dominion.Tests,AITests,C:\research\architectureSmells\repos\paulbatum_Dominion\Dominion.Tests\AITests.cs,SimpleAI_can_complete_a_game,The following statement contains a magic number: Thread.Sleep(500);
Magic Number,Dominion.Tests,AITests,C:\research\architectureSmells\repos\paulbatum_Dominion\Dominion.Tests\AITests.cs,BigMoney_vs_SimpleAI,The following statement contains a magic number: var key = multiGameHost.CreateNewGame(new[] { "SimpleAI"' "SimpleAI"' "BigMoneyAI"' "BigMoneyAI" }' 4);
Magic Number,Dominion.Tests,AITests,C:\research\architectureSmells\repos\paulbatum_Dominion\Dominion.Tests\AITests.cs,BigMoney_vs_SimpleAI,The following statement contains a magic number: Thread.Sleep(500);
Magic Number,Dominion.Tests,CardCostTests,C:\research\architectureSmells\repos\paulbatum_Dominion\Dominion.Tests\CardCostTests.cs,Can_convert_integer_to_CardCost,The following statement contains a magic number: CardCost cost = 5;
Magic Number,Dominion.Tests,CardCostTests,C:\research\architectureSmells\repos\paulbatum_Dominion\Dominion.Tests\CardCostTests.cs,Can_convert_integer_to_CardCost,The following statement contains a magic number: cost.Money.ShouldEqual(5);
Magic Number,Dominion.Tests,CardCostTests,C:\research\architectureSmells\repos\paulbatum_Dominion\Dominion.Tests\CardCostTests.cs,Can_create_CardCost_by_adding_to_existing_CardCost,The following statement contains a magic number: CardCost cost = new CardCost(5);
Magic Number,Dominion.Tests,CardCostTests,C:\research\architectureSmells\repos\paulbatum_Dominion\Dominion.Tests\CardCostTests.cs,Can_create_CardCost_by_adding_to_existing_CardCost,The following statement contains a magic number: cost += 2;
Magic Number,Dominion.Tests,CardCostTests,C:\research\architectureSmells\repos\paulbatum_Dominion\Dominion.Tests\CardCostTests.cs,Can_create_CardCost_by_adding_to_existing_CardCost,The following statement contains a magic number: cost.Money.ShouldEqual(7);
Magic Number,Dominion.Tests,CardCostTests,C:\research\architectureSmells\repos\paulbatum_Dominion\Dominion.Tests\CardCostTests.cs,Can_create_CardCost_by_subtracting_from_existing_CardCost,The following statement contains a magic number: CardCost cost = new CardCost(5);
Magic Number,Dominion.Tests,CardCostTests,C:\research\architectureSmells\repos\paulbatum_Dominion\Dominion.Tests\CardCostTests.cs,Can_create_CardCost_by_subtracting_from_existing_CardCost,The following statement contains a magic number: var newCost = cost - 2;
Magic Number,Dominion.Tests,CardCostTests,C:\research\architectureSmells\repos\paulbatum_Dominion\Dominion.Tests\CardCostTests.cs,Can_create_CardCost_by_subtracting_from_existing_CardCost,The following statement contains a magic number: newCost.Money.ShouldEqual(3);
Magic Number,Dominion.Tests,CardCostTests,C:\research\architectureSmells\repos\paulbatum_Dominion\Dominion.Tests\CardCostTests.cs,CardCost_3P_minus_CardCost_2P_equals_1,The following statement contains a magic number: CardCost cost3P = new CardCost(3' 1);
Magic Number,Dominion.Tests,CardCostTests,C:\research\architectureSmells\repos\paulbatum_Dominion\Dominion.Tests\CardCostTests.cs,CardCost_3P_minus_CardCost_2P_equals_1,The following statement contains a magic number: CardCost cost2P = new CardCost(2' 1);
Magic Number,Dominion.Tests,CardCostTests,C:\research\architectureSmells\repos\paulbatum_Dominion\Dominion.Tests\CardCostTests.cs,CardCost_of_5_is_enough_for_CardCost_of_5,The following statement contains a magic number: CardCost cost1 = 5;
Magic Number,Dominion.Tests,CardCostTests,C:\research\architectureSmells\repos\paulbatum_Dominion\Dominion.Tests\CardCostTests.cs,CardCost_of_5_is_enough_for_CardCost_of_5,The following statement contains a magic number: CardCost cost2 = 5;
Magic Number,Dominion.Tests,CardCostTests,C:\research\architectureSmells\repos\paulbatum_Dominion\Dominion.Tests\CardCostTests.cs,CardCost_of_5_is_enough_for_CardCost_of_3,The following statement contains a magic number: CardCost cost5 = 5;
Magic Number,Dominion.Tests,CardCostTests,C:\research\architectureSmells\repos\paulbatum_Dominion\Dominion.Tests\CardCostTests.cs,CardCost_of_5_is_enough_for_CardCost_of_3,The following statement contains a magic number: CardCost cost3 = 3;
Magic Number,Dominion.Tests,CardCostTests,C:\research\architectureSmells\repos\paulbatum_Dominion\Dominion.Tests\CardCostTests.cs,CardCost_of_5_is_not_enough_for_CardCost_of_3P,The following statement contains a magic number: CardCost cost5 = 5;
Magic Number,Dominion.Tests,CardCostTests,C:\research\architectureSmells\repos\paulbatum_Dominion\Dominion.Tests\CardCostTests.cs,CardCost_of_3P_is_not_enough_for_CardCost_of_5,The following statement contains a magic number: CardCost cost5 = 5;
Magic Number,Dominion.Tests,CardCostTests,C:\research\architectureSmells\repos\paulbatum_Dominion\Dominion.Tests\CardCostTests.cs,Can_compare_CardCost_to_integer,The following statement contains a magic number: CardCost cost = 5;
Magic Number,Dominion.Tests,CardCostTests,C:\research\architectureSmells\repos\paulbatum_Dominion\Dominion.Tests\CardCostTests.cs,Can_compare_CardCost_to_integer,The following statement contains a magic number: int otherCost = 5;
Magic Number,Dominion.Tests,CardCostTests,C:\research\architectureSmells\repos\paulbatum_Dominion\Dominion.Tests\CardCostTests.cs,CardCosts_with_same_values_are_equal,The following statement contains a magic number: CardCost cost1 = new CardCost(3' 1);
Magic Number,Dominion.Tests,CardCostTests,C:\research\architectureSmells\repos\paulbatum_Dominion\Dominion.Tests\CardCostTests.cs,CardCosts_with_same_values_are_equal,The following statement contains a magic number: CardCost cost2 = new CardCost(3' 1);
Magic Number,Dominion.Tests,CardCostTests,C:\research\architectureSmells\repos\paulbatum_Dominion\Dominion.Tests\CardCostTests.cs,Can_parse_string_as_CardCost,The following statement contains a magic number: cost.Money.ShouldEqual(3);
Magic Number,Dominion.Tests,CardCostTests,C:\research\architectureSmells\repos\paulbatum_Dominion\Dominion.Tests\CardCostTests.cs,Can_parse_string_with_potions_as_CardCost,The following statement contains a magic number: cost.Money.ShouldEqual(3);
Magic Number,Dominion.Tests,CardCostTests,C:\research\architectureSmells\repos\paulbatum_Dominion\Dominion.Tests\CardCostTests.cs,Can_parse_string_with_potions_as_CardCost,The following statement contains a magic number: cost.Potions.ShouldEqual(2);
Magic Number,Dominion.Tests,CardCostTests,C:\research\architectureSmells\repos\paulbatum_Dominion\Dominion.Tests\CardCostTests.cs,Can_explicitly_convert_from_string_to_CardCost,The following statement contains a magic number: cost.Money.ShouldEqual(3);
Magic Number,Dominion.Tests,DeckTests,C:\research\architectureSmells\repos\paulbatum_Dominion\Dominion.Tests\DeckTests.cs,Should_add_cards_passed_via_constructor,The following statement contains a magic number: drawDeck.CardCount.ShouldEqual(2);
Magic Number,Dominion.Tests,DeckTests,C:\research\architectureSmells\repos\paulbatum_Dominion\Dominion.Tests\DeckTests.cs,Should_shuffle_deck_after_being_refilled,The following statement contains a magic number: 15.Times(() => cards.Add(new Copper()));
Magic Number,Dominion.Tests,DeckTests,C:\research\architectureSmells\repos\paulbatum_Dominion\Dominion.Tests\DeckTests.cs,Should_shuffle_deck_after_being_refilled,The following statement contains a magic number: 15.Times(() => cards.Add(new Estate()));
Magic Number,Dominion.Tests,DeckTests,C:\research\architectureSmells\repos\paulbatum_Dominion\Dominion.Tests\DeckTests.cs,Should_shuffle_deck_after_being_refilled,The following statement contains a magic number: 30.Times(() =>              {                  cardsAfterShuffle.Add(drawDeck.TopCard);                  drawDeck.TopCard.MoveTo(_discardPile);              });
Magic Number,Dominion.Tests,ProbabilityDistributionTests,C:\research\architectureSmells\repos\paulbatum_Dominion\Dominion.Tests\ProbabilityDistributionTests.cs,CumulativeTotalWithOneItem,The following statement contains a magic number: var items = new Dictionary<string' int>              {                  {"Moat"' 2}              };
Magic Number,Dominion.Tests,ProbabilityDistributionTests,C:\research\architectureSmells\repos\paulbatum_Dominion\Dominion.Tests\ProbabilityDistributionTests.cs,CumulativeTotalWithThreeItems,The following statement contains a magic number: var items = new Dictionary<string' int>              {                  {"Moat"' 2}'                  {"Smithy"' 3}'                  {"Village"' 1}              };
Magic Number,Dominion.Tests,ProbabilityDistributionTests,C:\research\architectureSmells\repos\paulbatum_Dominion\Dominion.Tests\ProbabilityDistributionTests.cs,CumulativeTotalWithThreeItems,The following statement contains a magic number: var items = new Dictionary<string' int>              {                  {"Moat"' 2}'                  {"Smithy"' 3}'                  {"Village"' 1}              };
Magic Number,Dominion.Tests,ProbabilityDistributionTests,C:\research\architectureSmells\repos\paulbatum_Dominion\Dominion.Tests\ProbabilityDistributionTests.cs,CumulativeTotalWithThreeItems,The following statement contains a magic number: var expected = new Dictionary<string' int>              {                  {"Moat"' 2}'                  {"Smithy"' 5}'                  {"Village"' 6}              };
Magic Number,Dominion.Tests,ProbabilityDistributionTests,C:\research\architectureSmells\repos\paulbatum_Dominion\Dominion.Tests\ProbabilityDistributionTests.cs,CumulativeTotalWithThreeItems,The following statement contains a magic number: var expected = new Dictionary<string' int>              {                  {"Moat"' 2}'                  {"Smithy"' 5}'                  {"Village"' 6}              };
Magic Number,Dominion.Tests,ProbabilityDistributionTests,C:\research\architectureSmells\repos\paulbatum_Dominion\Dominion.Tests\ProbabilityDistributionTests.cs,CumulativeTotalWithThreeItems,The following statement contains a magic number: var expected = new Dictionary<string' int>              {                  {"Moat"' 2}'                  {"Smithy"' 5}'                  {"Village"' 6}              };
Magic Number,Dominion.Tests,ProbabilityDistributionTests,C:\research\architectureSmells\repos\paulbatum_Dominion\Dominion.Tests\ProbabilityDistributionTests.cs,GetRandomItemReturnsEquallyLikelyItemsWithEqualProbability,The following statement contains a magic number: var randomNumbers = new[] {0' 1' 2' 3};
Magic Number,Dominion.Tests,ProbabilityDistributionTests,C:\research\architectureSmells\repos\paulbatum_Dominion\Dominion.Tests\ProbabilityDistributionTests.cs,GetRandomItemReturnsEquallyLikelyItemsWithEqualProbability,The following statement contains a magic number: var randomNumbers = new[] {0' 1' 2' 3};
Magic Number,Dominion.Tests,ProbabilityDistributionTests,C:\research\architectureSmells\repos\paulbatum_Dominion\Dominion.Tests\ProbabilityDistributionTests.cs,GetRandomItemReturnsUnequallyProbableItemsWithExpectedProbability,The following statement contains a magic number: var randomNumbers = new[] { 0' 1' 2' 3' 4 };
Magic Number,Dominion.Tests,ProbabilityDistributionTests,C:\research\architectureSmells\repos\paulbatum_Dominion\Dominion.Tests\ProbabilityDistributionTests.cs,GetRandomItemReturnsUnequallyProbableItemsWithExpectedProbability,The following statement contains a magic number: var randomNumbers = new[] { 0' 1' 2' 3' 4 };
Magic Number,Dominion.Tests,ProbabilityDistributionTests,C:\research\architectureSmells\repos\paulbatum_Dominion\Dominion.Tests\ProbabilityDistributionTests.cs,GetRandomItemReturnsUnequallyProbableItemsWithExpectedProbability,The following statement contains a magic number: var randomNumbers = new[] { 0' 1' 2' 3' 4 };
Magic Number,Dominion.Tests,ProbabilityDistributionTests,C:\research\architectureSmells\repos\paulbatum_Dominion\Dominion.Tests\ProbabilityDistributionTests.cs,GetRandomItemReturnsUnequallyProbableItemsWithExpectedProbability,The following statement contains a magic number: var expected = new Dictionary<string' int>              {                  {"Moat"' 1}'                  {"Smithy"' 1}'                  {"Village"' 2}'                  {"Market"' 1}              };
Magic Number,Dominion.Tests,ProbabilityDistributionTests,C:\research\architectureSmells\repos\paulbatum_Dominion\Dominion.Tests\ProbabilityDistributionTests.cs,GetRandomItemReturnsFilteredItemsWithExpectedProbability,The following statement contains a magic number: var randomNumbers = new[] { 0' 1' 2' 3' 4 };
Magic Number,Dominion.Tests,ProbabilityDistributionTests,C:\research\architectureSmells\repos\paulbatum_Dominion\Dominion.Tests\ProbabilityDistributionTests.cs,GetRandomItemReturnsFilteredItemsWithExpectedProbability,The following statement contains a magic number: var randomNumbers = new[] { 0' 1' 2' 3' 4 };
Magic Number,Dominion.Tests,ProbabilityDistributionTests,C:\research\architectureSmells\repos\paulbatum_Dominion\Dominion.Tests\ProbabilityDistributionTests.cs,GetRandomItemReturnsFilteredItemsWithExpectedProbability,The following statement contains a magic number: var randomNumbers = new[] { 0' 1' 2' 3' 4 };
Magic Number,Dominion.Tests,ProbabilityDistributionTests,C:\research\architectureSmells\repos\paulbatum_Dominion\Dominion.Tests\ProbabilityDistributionTests.cs,GetRandomItemReturnsFilteredItemsWithExpectedProbability,The following statement contains a magic number: var expected = new Dictionary<string' int>              {                  {"Moat"' 1}'                  {"Smithy"' 1}'                  {"Village"' 2}'                  {"Market"' 1}              };
Magic Number,Dominion.Tests,SpecificationExtensions,C:\research\architectureSmells\repos\paulbatum_Dominion\Dominion.Tests\SpecificationExtensions.cs,ShouldEqualSqlDate,The following statement contains a magic number: Assert.Less(Math.Abs(timeSpan.TotalMilliseconds)' 3);
