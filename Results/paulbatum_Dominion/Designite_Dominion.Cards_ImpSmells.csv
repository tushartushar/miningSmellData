Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Dominion.Cards.Actions,ApothecaryEffect,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Apothecary.cs,Resolve,The length of the statement  "                foreach (var activity in Activities.SelectMultipleRevealedCardsToPutOnTopOfDeck(context.Game.Log' context.ActivePlayer' revealZone' source)) " is 140.
Long Statement,Dominion.Cards.Actions,SwindlerAttack,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Swindler.cs,Attack,The length of the statement  "                    var activity = Activities.SelectACardForOpponentToGain(context' context.ActivePlayer' victim' swindledCard.Cost' source); " is 121.
Long Statement,Dominion.Cards.Actions,EnvoyEffect,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Envoy.cs,CreateChooseCardActivity,The length of the statement  "                    string.Format("Select the card you do NOT want {0} to draw."' revealZone.Owner.Name)' SelectionSpecifications.SelectExactlyXCards(1)' source); " is 142.
Long Statement,Dominion.Cards.Actions,RabbleAttack,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Rabble.cs,Attack,The length of the statement  "                foreach (var activity in Activities.SelectMultipleRevealedCardsToPutOnTopOfDeck(context.Game.Log' victim' revealZone' source)) " is 126.
Long Statement,Dominion.Cards.Actions,RemodelEffect,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Remodel.cs,Resolve,The length of the statement  "                    var gainActivity = Activities.GainACardCostingUpToX(context.Game.Log' player' cardToRemodel.Cost + _costIncrease' source); " is 122.
Long Statement,Dominion.Cards.Actions,ThiefAttack,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Thief.cs,CreateChooseTreasureActivity,The length of the statement  "                    "Select a treasure to trash (you will have the opportunity to gain it)."' SelectionSpecifications.SelectExactlyXCards(1)' source); " is 130.
Long Statement,Dominion.Cards.Hybrid,NoblesEffect,C:\repos\paulbatum_Dominion\Dominion.Cards\Hybrid\Nobles.cs,Execute,The length of the statement  "                string error = string.Format("Choice of '{0}' invalid. ChoiceActivity shouldn't have allowed this to be called"' choice); " is 121.
Virtual Method Call from Constructor,Dominion.Cards,TestCardPile,C:\repos\paulbatum_Dominion\Dominion.Cards\TestCard.cs,TestCardPile,The constructor "TestCardPile" calls a virtual method "AddCard".
Magic Number,Dominion.Cards.Actions,ApothecaryEffect,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Apothecary.cs,Resolve,The following statement contains a magic number: context.ActivePlayer.Deck.MoveTop(4' revealZone);
Magic Number,Dominion.Cards.Actions,ApprenticeEffect,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Apprentice.cs,Resolve,The following statement contains a magic number: if (context.ActivePlayer.Hand.CardCount > 0)                  {                      var activity = new SelectCardsActivity(context' "Select a card to trash"'                                                             SelectionSpecifications.SelectExactlyXCards(1)' source);                        activity.AfterCardsSelected = cardList =>                      {                          var cardToTrash = cardList.Single();                          var cardsToDraw = cardToTrash.Cost.Money;                            // Notice the card doesn't say its 2 per potion (if we add cards that cost multiple potions)                          if (cardToTrash.Cost.Potions > 0)                              cardsToDraw += 2;                            context.DrawCards(cardsToDraw);                          context.Trash(context.ActivePlayer' cardToTrash);                      };                      _activities.Add(activity);                  }
Magic Number,Dominion.Cards.Actions,BaronEffect,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Baron.cs,Resolve,The following statement contains a magic number: Action discardAction = () =>                  {                      context.AvailableSpend += 4;                      context.DiscardCard(context.ActivePlayer' estate);                  };
Magic Number,Dominion.Cards.Actions,Bazaar,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Bazaar.cs,Play,The following statement contains a magic number: context.RemainingActions += 2;
Magic Number,Dominion.Cards.Actions,TacticianEffect,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Caravan.cs,OnTurnStarting,The following statement contains a magic number: context.DrawCards(5);
Magic Number,Dominion.Cards.Actions,Chancellor,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Chancellor.cs,Play,The following statement contains a magic number: context.AvailableSpend += 2;
Magic Number,Dominion.Cards.Actions,ChapelEffect,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Chapel.cs,Resolve,The following statement contains a magic number: var activity = Activities.SelectUpToXCardsToTrash(context' context.ActivePlayer' 4' source);
Magic Number,Dominion.Cards.Actions,City,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\City.cs,Play,The following statement contains a magic number: context.RemainingActions += 2;
Magic Number,Dominion.Cards.Actions,City,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\City.cs,Play,The following statement contains a magic number: if(emptyPileCount >= 2)              {                  context.AvailableSpend += 1;                  context.Buys += 1;              }
Magic Number,Dominion.Cards.Actions,AdventurerEffect,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Adventurer.cs,Resolve,The following statement contains a magic number: while (deck.TopCard != null && MatchingCards(revealZone).Count() < 2)                      deck.TopCard.MoveTo(revealZone);
Magic Number,Dominion.Cards.Actions,Courtyard,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Courtyard.cs,Play,The following statement contains a magic number: context.DrawCards(3);
Magic Number,Dominion.Cards.Actions,Cutpurse,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Cutpurse.cs,Play,The following statement contains a magic number: context.AvailableSpend += 2;
Magic Number,Dominion.Cards.Actions,Ironworks,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Ironworks.cs,Play,The following statement contains a magic number: var activity = Activities.GainACardCostingUpToX(context.Game.Log' context.ActivePlayer' 4' this);
Magic Number,Dominion.Cards.Actions,KingsCourtEffect,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\KingsCourt.cs,Resolve,The following statement contains a magic number: if (context.ActivePlayer.Hand.OfType<IActionCard>().Any())                  {                      var activity = Activities.SelectActionToPlayMultipleTimes(context' context.ActivePlayer' context.Game.Log' source' 3);                      _activities.Add(activity);                  }                  else                  {                      context.Game.Log.LogMessage("{0} did not have any actions to use Kings Court on."' context.ActivePlayer.Name);                  }
Magic Number,Dominion.Cards.Actions,MerchantShip,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\MerchantShip.cs,Play,The following statement contains a magic number: context.AvailableSpend += 2;
Magic Number,Dominion.Cards.Actions,MerchantShipEffect,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\MerchantShip.cs,OnTurnStarting,The following statement contains a magic number: context.AvailableSpend += 2;
Magic Number,Dominion.Cards.Actions,MinionAttackEffect,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Minion.cs,Resolve,The following statement contains a magic number: Action discardAction = () =>                  {                      context.DiscardCards(context.ActivePlayer' context.ActivePlayer.Hand);                      context.DrawCards(4);                      DistributeAttacks(context' source);                  };
Magic Number,Dominion.Cards.Actions,MinionAttackEffect,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Minion.cs,Resolve,The following statement contains a magic number: Action moneyAction = () => context.AvailableSpend += 2;
Magic Number,Dominion.Cards.Actions,MinionAttackEffect,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Minion.cs,Attack,The following statement contains a magic number: if (victim.Hand.CardCount > 4)                  {                      context.DiscardCards(victim' victim.Hand);                      victim.DrawCards(4);                  }
Magic Number,Dominion.Cards.Actions,MinionAttackEffect,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Minion.cs,Attack,The following statement contains a magic number: if (victim.Hand.CardCount > 4)                  {                      context.DiscardCards(victim' victim.Hand);                      victim.DrawCards(4);                  }
Magic Number,Dominion.Cards.Actions,GhostShip,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\GhostShip.cs,Play,The following statement contains a magic number: context.ActivePlayer.DrawCards(2);
Magic Number,Dominion.Cards.Actions,GhostShipAttack,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\GhostShip.cs,Attack,The following statement contains a magic number: int cardsToPutBack = victim.Hand.CardCount - 3;
Magic Number,Dominion.Cards.Actions,Masquerade,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Masquerade.cs,Play,The following statement contains a magic number: context.DrawCards(2);
Magic Number,Dominion.Cards.Actions,Swindler,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Swindler.cs,Play,The following statement contains a magic number: context.AvailableSpend += 2;
Magic Number,Dominion.Cards.Actions,Torturer,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Torturer.cs,Play,The following statement contains a magic number: context.DrawCards(3);
Magic Number,Dominion.Cards.Actions,TorturerAttack,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Torturer.cs,Attack,The following statement contains a magic number: if (victim.Hand.CardCount > 2)                      discardCards = () => _activities.Add(Activities.DiscardCards(context' victim' 2' source));                  else if(victim.Hand.CardCount > 0)                      discardCards = () => context.DiscardCards(victim' victim.Hand);                  else                      discardCards = () => context.Game.Log.LogMessage("{0} had no cards to discard."' victim.Name);
Magic Number,Dominion.Cards.Actions,TorturerAttack,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Torturer.cs,Attack,The following statement contains a magic number: if (victim.Hand.CardCount > 2)                      discardCards = () => _activities.Add(Activities.DiscardCards(context' victim' 2' source));                  else if(victim.Hand.CardCount > 0)                      discardCards = () => context.DiscardCards(victim' victim.Hand);                  else                      discardCards = () => context.Game.Log.LogMessage("{0} had no cards to discard."' victim.Name);
Magic Number,Dominion.Cards.Actions,TradingPostEffect,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\TradingPost.cs,Resolve,The following statement contains a magic number: if(cardCount < 2)                  {                      context.TrashAll(context.ActivePlayer' context.ActivePlayer.Hand);                  }                  else if(cardCount == 2)                  {                      context.TrashAll(context.ActivePlayer' context.ActivePlayer.Hand);                      gainUtil.Gain<Silver>(context.ActivePlayer.Hand);                  }                  else                  {                      var activity = Activities.SelectXCardsToTrash(context' context.ActivePlayer' 2' source'                                                                    () => gainUtil.Gain<Silver>(context.ActivePlayer.Hand));                        _activities.Add(activity);                  }
Magic Number,Dominion.Cards.Actions,TradingPostEffect,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\TradingPost.cs,Resolve,The following statement contains a magic number: if(cardCount < 2)                  {                      context.TrashAll(context.ActivePlayer' context.ActivePlayer.Hand);                  }                  else if(cardCount == 2)                  {                      context.TrashAll(context.ActivePlayer' context.ActivePlayer.Hand);                      gainUtil.Gain<Silver>(context.ActivePlayer.Hand);                  }                  else                  {                      var activity = Activities.SelectXCardsToTrash(context' context.ActivePlayer' 2' source'                                                                    () => gainUtil.Gain<Silver>(context.ActivePlayer.Hand));                        _activities.Add(activity);                  }
Magic Number,Dominion.Cards.Actions,TradingPostEffect,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\TradingPost.cs,Resolve,The following statement contains a magic number: if(cardCount < 2)                  {                      context.TrashAll(context.ActivePlayer' context.ActivePlayer.Hand);                  }                  else if(cardCount == 2)                  {                      context.TrashAll(context.ActivePlayer' context.ActivePlayer.Hand);                      gainUtil.Gain<Silver>(context.ActivePlayer.Hand);                  }                  else                  {                      var activity = Activities.SelectXCardsToTrash(context' context.ActivePlayer' 2' source'                                                                    () => gainUtil.Gain<Silver>(context.ActivePlayer.Hand));                        _activities.Add(activity);                  }
Magic Number,Dominion.Cards.Actions,Tribute,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Tribute.cs,Play,The following statement contains a magic number: if (leftPlayer != null)              {                  var revealZone = new RevealZone(leftPlayer);                  leftPlayer.Deck.MoveTop(2' revealZone);                  revealZone.LogReveal(context.Game.Log);                    foreach (var card in revealZone.WithDistinctTypes())                  {                      if (card is IActionCard) context.RemainingActions += 2;                      if (card is ITreasureCard) context.AvailableSpend += 2;                      if (card is IVictoryCard) context.DrawCards(2);                  }                    revealZone.MoveAll(leftPlayer.Discards);              }
Magic Number,Dominion.Cards.Actions,Tribute,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Tribute.cs,Play,The following statement contains a magic number: if (leftPlayer != null)              {                  var revealZone = new RevealZone(leftPlayer);                  leftPlayer.Deck.MoveTop(2' revealZone);                  revealZone.LogReveal(context.Game.Log);                    foreach (var card in revealZone.WithDistinctTypes())                  {                      if (card is IActionCard) context.RemainingActions += 2;                      if (card is ITreasureCard) context.AvailableSpend += 2;                      if (card is IVictoryCard) context.DrawCards(2);                  }                    revealZone.MoveAll(leftPlayer.Discards);              }
Magic Number,Dominion.Cards.Actions,Tribute,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Tribute.cs,Play,The following statement contains a magic number: if (leftPlayer != null)              {                  var revealZone = new RevealZone(leftPlayer);                  leftPlayer.Deck.MoveTop(2' revealZone);                  revealZone.LogReveal(context.Game.Log);                    foreach (var card in revealZone.WithDistinctTypes())                  {                      if (card is IActionCard) context.RemainingActions += 2;                      if (card is ITreasureCard) context.AvailableSpend += 2;                      if (card is IVictoryCard) context.DrawCards(2);                  }                    revealZone.MoveAll(leftPlayer.Discards);              }
Magic Number,Dominion.Cards.Actions,Tribute,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Tribute.cs,Play,The following statement contains a magic number: if (leftPlayer != null)              {                  var revealZone = new RevealZone(leftPlayer);                  leftPlayer.Deck.MoveTop(2' revealZone);                  revealZone.LogReveal(context.Game.Log);                    foreach (var card in revealZone.WithDistinctTypes())                  {                      if (card is IActionCard) context.RemainingActions += 2;                      if (card is ITreasureCard) context.AvailableSpend += 2;                      if (card is IVictoryCard) context.DrawCards(2);                  }                    revealZone.MoveAll(leftPlayer.Discards);              }
Magic Number,Dominion.Cards.Actions,University,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\University.cs,Play,The following statement contains a magic number: context.RemainingActions += 2;
Magic Number,Dominion.Cards.Actions,University,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\University.cs,Play,The following statement contains a magic number: context.AddSingleActivity(                  Activities.GainAnActionCardCostingUpToX(context.Game.Log' context.ActivePlayer' 5' this' true)' this);
Magic Number,Dominion.Cards.Actions,Warehouse,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Warehouse.cs,Play,The following statement contains a magic number: context.DrawCards(3);
Magic Number,Dominion.Cards.Actions,WarehouseEffect,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Warehouse.cs,Resolve,The following statement contains a magic number: if(context.ActivePlayer.Hand.CardCount < 4)                  {                      context.DiscardCards(context.ActivePlayer' context.ActivePlayer.Hand);                  }                  else                  {                      var discardActivity = Activities.DiscardCards(context' context.ActivePlayer' 3' source);                      _activities.Add(discardActivity);                      }
Magic Number,Dominion.Cards.Actions,WarehouseEffect,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Warehouse.cs,Resolve,The following statement contains a magic number: if(context.ActivePlayer.Hand.CardCount < 4)                  {                      context.DiscardCards(context.ActivePlayer' context.ActivePlayer.Hand);                  }                  else                  {                      var discardActivity = Activities.DiscardCards(context' context.ActivePlayer' 3' source);                      _activities.Add(discardActivity);                      }
Magic Number,Dominion.Cards.Actions,MiningVillage,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\MiningVillage.cs,Play,The following statement contains a magic number: context.RemainingActions += 2;
Magic Number,Dominion.Cards.Actions,MiningVillageEffect,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\MiningVillage.cs,Resolve,The following statement contains a magic number: if (!context.Game.Trash.Contains(_source))                  {                      var activity = Activities.ChooseYesOrNo(context.Game.Log' context.ActivePlayer'                                                              "Trash mining village for +2 buy?"'                                                              source'                                                              () =>                                                              {                                                                    context.Trash(context.ActivePlayer' _source);                                                                  context.AvailableSpend += 2;                                                                }                          );                        _activities.Add(activity);                  }
Magic Number,Dominion.Cards.Actions,MoneylenderEffect,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Moneylender.cs,Resolve,The following statement contains a magic number: if (context.ActivePlayer.Hand.OfType<Copper>().Any())                  {                      var copperCard = context.ActivePlayer.Hand.OfType<Copper>().FirstOrDefault();                      context.Trash(context.ActivePlayer' copperCard);                      context.AvailableSpend += 3;                  }
Magic Number,Dominion.Cards.Actions,CouncilRoom,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\CouncilRoom.cs,Play,The following statement contains a magic number: context.DrawCards(4);
Magic Number,Dominion.Cards.Actions,EnvoyEffect,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Envoy.cs,Resolve,The following statement contains a magic number: if (leftPlayer != null)                  {                      var revealZone = new RevealZone(context.ActivePlayer);                      context.ActivePlayer.Deck.MoveTop(5' revealZone);                      revealZone.LogReveal(context.Game.Log);                        if (revealZone.CardCount > 0)                      {                          var activity = CreateChooseCardActivity(context' revealZone' leftPlayer' source);                          _activities.Add(activity);                      }                  }
Magic Number,Dominion.Cards.Actions,FeastEffect,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Feast.cs,Resolve,The following statement contains a magic number: _activities.Add(Activities.GainACardCostingUpToX(context.Game.Log' context.ActivePlayer' 5' source));
Magic Number,Dominion.Cards.Actions,Festival,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Festival.cs,Play,The following statement contains a magic number: context.RemainingActions += 2;
Magic Number,Dominion.Cards.Actions,Festival,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Festival.cs,Play,The following statement contains a magic number: context.AvailableSpend += 2;
Magic Number,Dominion.Cards.Actions,FishingVillage,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\FishingVillage.cs,Play,The following statement contains a magic number: context.RemainingActions += 2;
Magic Number,Dominion.Cards.Actions,GolemEffect,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Golem.cs,Resolve,The following statement contains a magic number: while (deck.TopCard != null && MatchingActions(revealZone).Count() < 2)                      deck.TopCard.MoveTo(revealZone);
Magic Number,Dominion.Cards.Actions,Laboratory,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Laboratory.cs,Play,The following statement contains a magic number: context.DrawCards(2);
Magic Number,Dominion.Cards.Actions,Militia,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Militia.cs,Play,The following statement contains a magic number: context.AvailableSpend += 2;
Magic Number,Dominion.Cards.Actions,MilitiaAttack,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Militia.cs,Attack,The following statement contains a magic number: var numberToDiscard = victim.Hand.CardCount - 3;
Magic Number,Dominion.Cards.Actions,MineEffect,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Mine.cs,Resolve,The following statement contains a magic number: if (context.ActivePlayer.Hand.OfType<ITreasureCard>().Any())                  {                      var activity = new SelectCardsActivity(context' "Select a treasure card to mine"'                                                             SelectionSpecifications.SelectExactlyXCards(1)' source);                        activity.Specification.CardTypeRestriction = typeof (ITreasureCard);                      activity.AfterCardsSelected = cardList =>                      {                          var cardToMine = cardList.Single();                          context.Trash(context.ActivePlayer' cardToMine);                          AddGainActivity(context.Game.Log' context.ActivePlayer' cardToMine.Cost + 3' source);                      };                        _activities.Add(activity);                  }                  else                  {                      context.Game.Log.LogMessage("No treasure cards to trash.");                  }
Magic Number,Dominion.Cards.Actions,Moat,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Moat.cs,Play,The following statement contains a magic number: context.DrawCards(2);
Magic Number,Dominion.Cards.Actions,Mountebank,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Mountebank.cs,Play,The following statement contains a magic number: context.AvailableSpend += 2;
Magic Number,Dominion.Cards.Actions,Rabble,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Rabble.cs,Play,The following statement contains a magic number: context.DrawCards(3);
Magic Number,Dominion.Cards.Actions,RabbleAttack,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Rabble.cs,Attack,The following statement contains a magic number: victim.Deck.MoveTop(3' revealZone);
Magic Number,Dominion.Cards.Actions,SecretChamberReactionEffect,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\SecretChamber.cs,Resolve,The following statement contains a magic number: _player.DrawCards(2);
Magic Number,Dominion.Cards.Actions,SecretChamberReactionEffect,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\SecretChamber.cs,Resolve,The following statement contains a magic number: foreach (var activity in Activities.PutMultipleCardsFromHandOnTopOfDeck(context.Game.Log' _player' 2' source))                      _activities.Add(activity);
Magic Number,Dominion.Cards.Actions,AmbassadorEffect,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\SecretChamber.cs,GetReturnActivity,The following statement contains a magic number: var returnActivity = new SelectCardsActivity(context'                      string.Format("Select up to two {0} to return to the supply"' selection.Name)'                      SelectionSpecifications.SelectUpToXCardsOfSameName(selection.Name' 2)'                       _source);
Magic Number,Dominion.Cards.Actions,ShantyTown,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\ShantyTown.cs,Play,The following statement contains a magic number: context.RemainingActions += 2;
Magic Number,Dominion.Cards.Actions,ShantyTown,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\ShantyTown.cs,Play,The following statement contains a magic number: if (context.ActivePlayer.Hand.OfType<IActionCard>().Count() == 0)                   context.DrawCards(2);
Magic Number,Dominion.Cards.Actions,Smithy,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Smithy.cs,Play,The following statement contains a magic number: context.DrawCards(3);
Magic Number,Dominion.Cards.Actions,ThiefAttack,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Thief.cs,Attack,The following statement contains a magic number: victim.Deck.MoveTop(2' revealZone);
Magic Number,Dominion.Cards.Actions,ThroneRoomEffect,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\ThroneRoom.cs,Resolve,The following statement contains a magic number: if (context.ActivePlayer.Hand.OfType<IActionCard>().Any())                  {                      var activity = Activities.SelectActionToPlayMultipleTimes(context' context.ActivePlayer' context.Game.Log' source' 2);                      _activities.Add(activity);                  }                  else                  {                      context.Game.Log.LogMessage("{0} did not have any actions to use Throne Room on."' context.ActivePlayer.Name);                  }
Magic Number,Dominion.Cards.Actions,Village,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Village.cs,Play,The following statement contains a magic number: context.RemainingActions += 2;
Magic Number,Dominion.Cards.Actions,Wharf,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Wharf.cs,Play,The following statement contains a magic number: context.DrawCards(2);
Magic Number,Dominion.Cards.Actions,WharfEffect,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Wharf.cs,OnTurnStarting,The following statement contains a magic number: context.DrawCards(2);
Magic Number,Dominion.Cards.Actions,Witch,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Witch.cs,Play,The following statement contains a magic number: context.DrawCards(2);
Magic Number,Dominion.Cards.Actions,Woodcutter,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Woodcutter.cs,Play,The following statement contains a magic number: context.AvailableSpend += 2;
Magic Number,Dominion.Cards.Actions,WorkersVillage,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\WorkersVillage.cs,Play,The following statement contains a magic number: context.RemainingActions += 2;
Magic Number,Dominion.Cards.Actions,Workshop,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Workshop.cs,Play,The following statement contains a magic number: context.AddSingleActivity(                  Activities.GainACardCostingUpToX(context.Game.Log' context.ActivePlayer' 4' this)' this);
Magic Number,Dominion.Cards.Hybrid,Harem,C:\repos\paulbatum_Dominion\Dominion.Cards\Actions\Harem.cs,Harem,The following statement contains a magic number: ScoringValue = 2;
Magic Number,Dominion.Cards.Hybrid,Nobles,C:\repos\paulbatum_Dominion\Dominion.Cards\Hybrid\Nobles.cs,Score,The following statement contains a magic number: return 2;
Magic Number,Dominion.Cards.Hybrid,NoblesEffect,C:\repos\paulbatum_Dominion\Dominion.Cards\Hybrid\Nobles.cs,Execute,The following statement contains a magic number: switch (choice)                  {                      case Choice.DrawCards:                          context.ActivePlayer.DrawCards(3);                          return;                      case Choice.GainActions:                          context.RemainingActions += 2;                          return;                  }
Magic Number,Dominion.Cards.Hybrid,NoblesEffect,C:\repos\paulbatum_Dominion\Dominion.Cards\Hybrid\Nobles.cs,Execute,The following statement contains a magic number: switch (choice)                  {                      case Choice.DrawCards:                          context.ActivePlayer.DrawCards(3);                          return;                      case Choice.GainActions:                          context.RemainingActions += 2;                          return;                  }
Magic Number,Dominion.Cards.Victory,Gardens,C:\repos\paulbatum_Dominion\Dominion.Cards\Victory\Gardens.cs,Score,The following statement contains a magic number: return (allCards.CardCount / 10);
Magic Number,Dominion.Cards.Victory,Duchy,C:\repos\paulbatum_Dominion\Dominion.Cards\Victory\Duchy.cs,Duchy,The following statement contains a magic number: Value = 3;
Magic Number,Dominion.Cards.Victory,Vineyard,C:\repos\paulbatum_Dominion\Dominion.Cards\Victory\Vineyard.cs,Score,The following statement contains a magic number: return allCards.OfType<IActionCard>().Count() / 3;
Missing Default,Dominion.Cards.Hybrid,NoblesEffect,C:\repos\paulbatum_Dominion\Dominion.Cards\Hybrid\Nobles.cs,Execute,The following switch statement is missing a default case: switch (choice)                  {                      case Choice.DrawCards:                          context.ActivePlayer.DrawCards(3);                          return;                      case Choice.GainActions:                          context.RemainingActions += 2;                          return;                  }
