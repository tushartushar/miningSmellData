Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Dominion.Rules.Activities,Activities,C:\repos\paulbatum_Dominion\Dominion.Rules\Activities\Activities.cs,PutCardOfTypeFromHandOnTopOfDeck,The method has 5 parameters. Parameters: log' player' message' cardType' source
Long Parameter List,Dominion.Rules.Activities,Activities,C:\repos\paulbatum_Dominion\Dominion.Rules\Activities\Activities.cs,GainACardCostingUpToX,The method has 5 parameters. Parameters: log' player' cost' destination' source
Long Parameter List,Dominion.Rules.Activities,Activities,C:\repos\paulbatum_Dominion\Dominion.Rules\Activities\Activities.cs,GainACardCostingExactlyX,The method has 5 parameters. Parameters: log' player' cost' destination' source
Long Parameter List,Dominion.Rules.Activities,Activities,C:\repos\paulbatum_Dominion\Dominion.Rules\Activities\Activities.cs,SelectARevealedCardToPutOnTopOfDeck,The method has 5 parameters. Parameters: log' player' revealZone' message' source
Long Parameter List,Dominion.Rules.Activities,Activities,C:\repos\paulbatum_Dominion\Dominion.Rules\Activities\Activities.cs,ChooseYesOrNo,The method has 5 parameters. Parameters: log' player' message' source' ifYes
Long Parameter List,Dominion.Rules.Activities,Activities,C:\repos\paulbatum_Dominion\Dominion.Rules\Activities\Activities.cs,ChooseYesOrNo,The method has 6 parameters. Parameters: log' player' message' source' ifYes' ifNo
Long Parameter List,Dominion.Rules.Activities,Activities,C:\repos\paulbatum_Dominion\Dominion.Rules\Activities\Activities.cs,SelectXCardsToTrash,The method has 5 parameters. Parameters: context' player' count' source' afterTrash
Long Parameter List,Dominion.Rules.Activities,Activities,C:\repos\paulbatum_Dominion\Dominion.Rules\Activities\Activities.cs,SelectACardForOpponentToGain,The method has 5 parameters. Parameters: context' player' victim' cost' source
Long Parameter List,Dominion.Rules.Activities,Activities,C:\repos\paulbatum_Dominion\Dominion.Rules\Activities\Activities.cs,GainAnActionCardCostingUpToX,The method has 5 parameters. Parameters: log' player' cost' source' optional
Long Parameter List,Dominion.Rules.Activities,Activities,C:\repos\paulbatum_Dominion\Dominion.Rules\Activities\Activities.cs,SelectActionToPlayMultipleTimes,The method has 5 parameters. Parameters: context' player' log' source' count
Long Parameter List,Dominion.Rules.Activities,ActivityBase,C:\repos\paulbatum_Dominion\Dominion.Rules\Activities\ActivityBase.cs,ActivityBase,The method has 5 parameters. Parameters: log' player' message' type' source
Long Parameter List,Dominion.Rules.Activities,ChoiceActivity,C:\repos\paulbatum_Dominion\Dominion.Rules\Activities\ChoiceActivity.cs,ChoiceActivity,The method has 5 parameters. Parameters: context' player' message' source' options
Long Parameter List,Dominion.Rules.Activities,ChoiceActivity,C:\repos\paulbatum_Dominion\Dominion.Rules\Activities\ChoiceActivity.cs,ChoiceActivity,The method has 5 parameters. Parameters: log' player' message' source' options
Long Parameter List,Dominion.Rules.Activities,GainACardActivity,C:\repos\paulbatum_Dominion\Dominion.Rules\Activities\GainACardActivity.cs,GainACardActivity,The method has 6 parameters. Parameters: log' player' message' specification' destination' source
Long Parameter List,Dominion.Rules.Activities,SelectFromRevealedCardsActivity,C:\repos\paulbatum_Dominion\Dominion.Rules\Activities\SelectFromRevealedCardsActivity.cs,SelectFromRevealedCardsActivity,The method has 6 parameters. Parameters: log' player' revealZone' message' selectionSpecification' source
Long Parameter List,Dominion.Rules.Activities,ChooseBasedOnRevealedCardsActivity,C:\repos\paulbatum_Dominion\Dominion.Rules\Activities\SelectFromRevealedCardsActivity.cs,ChooseBasedOnRevealedCardsActivity,The method has 6 parameters. Parameters: context' player' revealZone' message' source' options
Long Parameter List,Dominion.Rules.Activities,ChooseBasedOnRevealedCardsActivity,C:\repos\paulbatum_Dominion\Dominion.Rules\Activities\SelectFromRevealedCardsActivity.cs,ChooseBasedOnRevealedCardsActivity,The method has 6 parameters. Parameters: log' player' revealZone' message' source' options
Long Parameter List,Dominion.Rules.Activities,SelectPileActivity,C:\repos\paulbatum_Dominion\Dominion.Rules\Activities\SelectPileActivity.cs,SelectPileActivity,The method has 5 parameters. Parameters: log' player' message' specification' source
Long Parameter List,Dominion.Rules.Activities,SelectCardsActivity,C:\repos\paulbatum_Dominion\Dominion.Rules\Activities\SelectCardsActivity.cs,SelectCardsActivity,The method has 5 parameters. Parameters: log' player' message' specification' source
Long Statement,Dominion.Rules.Activities,Activities,C:\repos\paulbatum_Dominion\Dominion.Rules\Activities\Activities.cs,SelectACardForOpponentToGain,The length of the statement  "            return new SelectPileActivity(context.Game.Log' player' string.Format("Select a card for {0} to gain of cost {1}."' victim.Name' cost)' " is 135.
Long Statement,Dominion.Rules.Activities,Activities,C:\repos\paulbatum_Dominion\Dominion.Rules\Activities\Activities.cs,GainAnActionCardCostingUpToX,The length of the statement  "            var activity = new SelectPileActivity(log' player' string.Format("Select an action card to gain of cost {0} or less."' cost)' " is 125.
Long Statement,Dominion.Rules.Activities,Activities,C:\repos\paulbatum_Dominion\Dominion.Rules\Activities\Activities.cs,ChooseWhetherToMillTopCard,The length of the statement  "                var message = string.Format("{0} put {1}'s {2} {3}."' context.ActivePlayer' targetPlayer' card.Name' actionDescription); " is 120.
Virtual Method Call from Constructor,Dominion.Rules,Player,C:\repos\paulbatum_Dominion\Dominion.Rules\Player.cs,Player,The constructor "Player" calls a virtual method "Shuffle".
Magic Number,Dominion.Rules.Activities,ExtensionMethods,C:\repos\paulbatum_Dominion\Dominion.Rules\Activities\ExtensionMethods.cs,ToOrderString,The following statement contains a magic number: switch(number)              {                  case 1: return "first";                  case 2: return "second";                  case 3: return "third";                  case 4: return "fourth";                  case 5: return "fifth";                  case 6: return "sixth";                  case 7: return "seventh";                  case 8: return "eighth";                  case 9: return "ninth";                  case 10: return "tenth";                  default: return number + "th";              }
Magic Number,Dominion.Rules.Activities,ExtensionMethods,C:\repos\paulbatum_Dominion\Dominion.Rules\Activities\ExtensionMethods.cs,ToOrderString,The following statement contains a magic number: switch(number)              {                  case 1: return "first";                  case 2: return "second";                  case 3: return "third";                  case 4: return "fourth";                  case 5: return "fifth";                  case 6: return "sixth";                  case 7: return "seventh";                  case 8: return "eighth";                  case 9: return "ninth";                  case 10: return "tenth";                  default: return number + "th";              }
Magic Number,Dominion.Rules.Activities,ExtensionMethods,C:\repos\paulbatum_Dominion\Dominion.Rules\Activities\ExtensionMethods.cs,ToOrderString,The following statement contains a magic number: switch(number)              {                  case 1: return "first";                  case 2: return "second";                  case 3: return "third";                  case 4: return "fourth";                  case 5: return "fifth";                  case 6: return "sixth";                  case 7: return "seventh";                  case 8: return "eighth";                  case 9: return "ninth";                  case 10: return "tenth";                  default: return number + "th";              }
Magic Number,Dominion.Rules.Activities,ExtensionMethods,C:\repos\paulbatum_Dominion\Dominion.Rules\Activities\ExtensionMethods.cs,ToOrderString,The following statement contains a magic number: switch(number)              {                  case 1: return "first";                  case 2: return "second";                  case 3: return "third";                  case 4: return "fourth";                  case 5: return "fifth";                  case 6: return "sixth";                  case 7: return "seventh";                  case 8: return "eighth";                  case 9: return "ninth";                  case 10: return "tenth";                  default: return number + "th";              }
Magic Number,Dominion.Rules.Activities,ExtensionMethods,C:\repos\paulbatum_Dominion\Dominion.Rules\Activities\ExtensionMethods.cs,ToOrderString,The following statement contains a magic number: switch(number)              {                  case 1: return "first";                  case 2: return "second";                  case 3: return "third";                  case 4: return "fourth";                  case 5: return "fifth";                  case 6: return "sixth";                  case 7: return "seventh";                  case 8: return "eighth";                  case 9: return "ninth";                  case 10: return "tenth";                  default: return number + "th";              }
Magic Number,Dominion.Rules.Activities,ExtensionMethods,C:\repos\paulbatum_Dominion\Dominion.Rules\Activities\ExtensionMethods.cs,ToOrderString,The following statement contains a magic number: switch(number)              {                  case 1: return "first";                  case 2: return "second";                  case 3: return "third";                  case 4: return "fourth";                  case 5: return "fifth";                  case 6: return "sixth";                  case 7: return "seventh";                  case 8: return "eighth";                  case 9: return "ninth";                  case 10: return "tenth";                  default: return number + "th";              }
Magic Number,Dominion.Rules.Activities,ExtensionMethods,C:\repos\paulbatum_Dominion\Dominion.Rules\Activities\ExtensionMethods.cs,ToOrderString,The following statement contains a magic number: switch(number)              {                  case 1: return "first";                  case 2: return "second";                  case 3: return "third";                  case 4: return "fourth";                  case 5: return "fifth";                  case 6: return "sixth";                  case 7: return "seventh";                  case 8: return "eighth";                  case 9: return "ninth";                  case 10: return "tenth";                  default: return number + "th";              }
Magic Number,Dominion.Rules.Activities,ExtensionMethods,C:\repos\paulbatum_Dominion\Dominion.Rules\Activities\ExtensionMethods.cs,ToOrderString,The following statement contains a magic number: switch(number)              {                  case 1: return "first";                  case 2: return "second";                  case 3: return "third";                  case 4: return "fourth";                  case 5: return "fifth";                  case 6: return "sixth";                  case 7: return "seventh";                  case 8: return "eighth";                  case 9: return "ninth";                  case 10: return "tenth";                  default: return number + "th";              }
Magic Number,Dominion.Rules.Activities,ExtensionMethods,C:\repos\paulbatum_Dominion\Dominion.Rules\Activities\ExtensionMethods.cs,ToOrderString,The following statement contains a magic number: switch(number)              {                  case 1: return "first";                  case 2: return "second";                  case 3: return "third";                  case 4: return "fourth";                  case 5: return "fifth";                  case 6: return "sixth";                  case 7: return "seventh";                  case 8: return "eighth";                  case 9: return "ninth";                  case 10: return "tenth";                  default: return number + "th";              }
Magic Number,Dominion.Rules,CardCost,C:\repos\paulbatum_Dominion\Dominion.Rules\CardCost.cs,Parse,The following statement contains a magic number: var potions = match.Groups.Count > 2 ? match.Groups[2].Length : 0;
Magic Number,Dominion.Rules,CardCost,C:\repos\paulbatum_Dominion\Dominion.Rules\CardCost.cs,Parse,The following statement contains a magic number: var potions = match.Groups.Count > 2 ? match.Groups[2].Length : 0;
Magic Number,Dominion.Rules,CardCost,C:\repos\paulbatum_Dominion\Dominion.Rules\CardCost.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  return (Money*397) ^ Potions;              }
Magic Number,Dominion.Rules,PlayArea,C:\repos\paulbatum_Dominion\Dominion.Rules\PlayArea.cs,SortForScoring,The following statement contains a magic number: foreach(var card in this.Cards                                  .OrderByDescending(c => c is IScoreCard ? ((IScoreCard)c).Score(this) : -100)                  .ThenBy(c => c.Name))              {                  card.MoveTo(this);              }
Magic Number,Dominion.Rules,MyExtensions,C:\repos\paulbatum_Dominion\Dominion.Rules\MyExtensions.cs,AllSame,The following statement contains a magic number: return items.Select(selector).Distinct().Count() < 2;
Magic Number,Dominion.Rules,Player,C:\repos\paulbatum_Dominion\Dominion.Rules\Player.cs,Player,The following statement contains a magic number: DrawCards(5);
Magic Number,Dominion.Rules,TurnContext,C:\repos\paulbatum_Dominion\Dominion.Rules\TurnContext.cs,EndTurn,The following statement contains a magic number: DrawCards(5);
