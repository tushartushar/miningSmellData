Implementation smell,Namespace,Class,File,Method,Description
Long Method,JDP,HTMLParser,C:\repos\SuperGouge_ChanThreadWatch\Classes\HTMLParser.cs,ParseTags,The method has 111 lines of code.
Long Method,JDP,FourChanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,ResurrectDeadPosts,The method has 115 lines of code.
Long Method,JDP,FourChanLookAlikeSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetImages,The method has 107 lines of code.
Long Method,JDP,InfinitechanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetImages,The method has 105 lines of code.
Long Method,JDP,InfinitechanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,ResurrectDeadPosts,The method has 101 lines of code.
Long Method,JDP,FoolFuukaSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetImages,The method has 129 lines of code.
Long Method,JDP,LynxChanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetImages,The method has 106 lines of code.
Long Method,JDP,General,C:\repos\SuperGouge_ChanThreadWatch\Classes\General.cs,DownloadAsync,The method has 121 lines of code.
Long Method,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,Reparse,The method has 125 lines of code.
Long Method,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,Check,The method has 324 lines of code.
Long Method,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,DownloadPageAsync,The method has 124 lines of code.
Long Method,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,DownloadFileAsync,The method has 104 lines of code.
Long Method,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,LoadThreadList,The method has 119 lines of code.
Long Method,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The method has 641 lines of code.
Long Method,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,btnOK_Click,The method has 102 lines of code.
Long Method,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The method has 682 lines of code.
Long Method,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The method has 237 lines of code.
Complex Method,JDP,SiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetImages,Cyclomatic complexity of the method is 14
Complex Method,JDP,FourChanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetCrossLinks,Cyclomatic complexity of the method is 9
Complex Method,JDP,FourChanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,ResurrectDeadPosts,Cyclomatic complexity of the method is 19
Complex Method,JDP,FourChanLookAlikeSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetImages,Cyclomatic complexity of the method is 19
Complex Method,JDP,InfinitechanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetImages,Cyclomatic complexity of the method is 20
Complex Method,JDP,InfinitechanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,ResurrectDeadPosts,Cyclomatic complexity of the method is 17
Complex Method,JDP,FuukaSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetImages,Cyclomatic complexity of the method is 17
Complex Method,JDP,FoolFuukaSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetImages,Cyclomatic complexity of the method is 20
Complex Method,JDP,LynxChanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetImages,Cyclomatic complexity of the method is 21
Complex Method,JDP,General,C:\repos\SuperGouge_ChanThreadWatch\Classes\General.cs,DetectCharacterSetFromContent,Cyclomatic complexity of the method is 9
Complex Method,JDP,General,C:\repos\SuperGouge_ChanThreadWatch\Classes\General.cs,AddOtherReplaces,Cyclomatic complexity of the method is 10
Complex Method,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,Reparse,Cyclomatic complexity of the method is 13
Complex Method,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,Check,Cyclomatic complexity of the method is 41
Complex Method,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,Process,Cyclomatic complexity of the method is 8
Complex Method,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,frmChanThreadWatch,Cyclomatic complexity of the method is 14
Complex Method,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,frmChanThreadWatch_FormClosed,Cyclomatic complexity of the method is 8
Complex Method,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,AddThread,Cyclomatic complexity of the method is 13
Complex Method,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,LoadThreadList,Cyclomatic complexity of the method is 24
Complex Method,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,IsBlacklisted,Cyclomatic complexity of the method is 9
Complex Method,JDP,frmDownloads,C:\repos\SuperGouge_ChanThreadWatch\frmDownloads.cs,tmrUpdateList_Tick,Cyclomatic complexity of the method is 10
Complex Method,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,btnOK_Click,Cyclomatic complexity of the method is 12
Long Parameter List,JDP,HTMLParser,C:\repos\SuperGouge_ChanThreadWatch\Classes\HTMLParser.cs,IndexOfAny,The method has 5 parameters. Parameters: html' htmlStart' htmlEnd' findWhiteSpace' values
Long Parameter List,JDP,HTMLParser,C:\repos\SuperGouge_ChanThreadWatch\Classes\HTMLParser.cs,StartsWith,The method has 5 parameters. Parameters: html' htmlStart' htmlEnd' value' ignoreCase
Long Parameter List,JDP,ThrottledStream,C:\repos\SuperGouge_ChanThreadWatch\Classes\Other.cs,BeginRead,The method has 5 parameters. Parameters: buffer' offset' count' callback' state
Long Parameter List,JDP,General,C:\repos\SuperGouge_ChanThreadWatch\Classes\General.cs,DownloadAsync,The method has 9 parameters. Parameters: url' auth' referer' connectionGroupName' cacheLastModifiedTime' onResponse' onDownloadChunk' onComplete' onException
Long Parameter List,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,Process,The method has 7 parameters. Parameters: pageInfo' siteHelper' threadDir' imageDir' thumbDir' completedImages' completedThumbs
Long Parameter List,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,DownloadPageAsync,The method has 5 parameters. Parameters: path' url' auth' cacheLastModifiedTime' onDownloadEnd
Long Parameter List,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,DownloadFileAsync,The method has 7 parameters. Parameters: path' url' auth' referer' hashType' correctHash' onDownloadEnd
Long Identifier,JDP,FourChanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,ResurrectDeadPosts,The length of the parameter lastExistingPostContainerTagRange is 33.
Long Identifier,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,,The length of the parameter chkRenameDownloadFolderWithDescription is 38.
Long Identifier,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,,The length of the parameter chkRenameDownloadFolderWithCategory is 35.
Long Identifier,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,,The length of the parameter chkRenameDownloadFolderWithParentThreadDescription is 50.
Long Identifier,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,,The length of the parameter lblParentThreadDescriptionFormat is 32.
Long Identifier,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,,The length of the parameter txtParentThreadDescriptionFormat is 32.
Long Identifier,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,,The length of the parameter pnlParentThreadDescriptionFormat is 32.
Long Statement,JDP,FourChanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetThreadName,The length of the statement  "                    HTMLTag canonicalLinkTag = Enumerable.FirstOrDefault(Enumerable.Where(parser.FindStartTags(parser.CreateTagRange(parser.FindStartTag("head"))' "link")' t => t.GetAttributeValueOrEmpty("rel").Equals("canonical"))); " is 213.
Long Statement,JDP,FourChanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetCrossLinks,The length of the statement  "            foreach (HTMLTagRange postMessageTagRange in Enumerable.Where(Enumerable.Select(Enumerable.Where(_htmlParser.FindStartTags("blockquote")' " is 137.
Long Statement,JDP,FourChanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetCrossLinks,The length of the statement  "                    string href = attribute.Value.Substring(0' attribute.Value.Contains("#") ? attribute.Value.IndexOf('#') : attribute.Value.Length); " is 130.
Long Statement,JDP,FourChanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetCrossLinks,The length of the statement  "                    if (!href.Contains("/thread/") || (!interBoardAutoFollow && GetBoardName() != href.Split(new[] { '/' }' StringSplitOptions.RemoveEmptyEntries)[0])) continue; " is 157.
Long Statement,JDP,FourChanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetCrossLinks,The length of the statement  "                foreach (HTMLTagRange deadLinkTagRange in Enumerable.Where(Enumerable.Select(Enumerable.Where(_htmlParser.FindStartTags(postMessageTagRange' "span")' " is 149.
Long Statement,JDP,FourChanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,ResurrectDeadPosts,The length of the statement  "            foreach (HTMLTagRange postContainerTagRange in Enumerable.Where(Enumerable.Select(Enumerable.Where(_htmlParser.FindStartTags("div")' " is 132.
Long Statement,JDP,FourChanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,ResurrectDeadPosts,The length of the statement  "            foreach (HTMLTagRange previousPostContainerTagRange in Enumerable.Where(Enumerable.Select(Enumerable.Where(previousParser.FindStartTags("div")' " is 143.
Long Statement,JDP,FourChanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,ResurrectDeadPosts,The length of the statement  "                        Enumerable.FirstOrDefault(Enumerable.Where(_htmlParser.FindStartTags("div")' t => HTMLParser.ClassAttributeValueHas(t' "thread"))).EndOffset; " is 141.
Long Statement,JDP,FourChanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,ResurrectDeadPosts,The length of the statement  "                        value = value.Insert(inputTag.EndOffset - previousPostContainerTagRange.Offset' "<strong style=\"color: #FF0000\">[Deleted]</strong>"); " is 135.
Long Statement,JDP,FourChanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,ResurrectDeadPosts,The length of the statement  "                    resurrectedPostContainers.Add(previousPostContainerTagRange.StartTag.GetAttributeValue("id")' previousPostContainerTagRange); " is 125.
Long Statement,JDP,FourChanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,ResurrectDeadPosts,The length of the statement  "            foreach (HTMLTagRange deadLinkTagRange in Enumerable.Where(Enumerable.Select(Enumerable.Where(_htmlParser.FindStartTags("span")' " is 128.
Long Statement,JDP,FourChanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,ResurrectDeadPosts,The length of the statement  "            foreach (HTMLTagRange postContainerTagRange in Enumerable.Where(Enumerable.Select(Enumerable.Where(_htmlParser.FindStartTags("div")' " is 132.
Long Statement,JDP,FourChanLookAlikeSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetImages,The length of the statement  "            foreach (HTMLTagRange postTagRange in Enumerable.Where(Enumerable.Select(Enumerable.Where(_htmlParser.FindStartTags("div")' " is 123.
Long Statement,JDP,FourChanLookAlikeSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetImages,The length of the statement  "                    originalFileName = fileTextLinkStartTag.GetAttributeValue("title") ?? _htmlParser.GetInnerHTML(_htmlParser.CreateTagRange(fileTextLinkStartTag)); " is 145.
Long Statement,JDP,FourChanLookAlikeSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetImages,The length of the statement  "                if (image.URL.Length == 0 || image.FileName.Length == 0 || (image.HashType != HashType.None && image.Hash == null)) continue; " is 125.
Long Statement,JDP,InfinitechanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetImages,The length of the statement  "            foreach (HTMLTagRange postTagRange in Enumerable.Where(Enumerable.Select(Enumerable.Where(_htmlParser.FindStartTags("div")' " is 123.
Long Statement,JDP,InfinitechanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetImages,The length of the statement  "                    _htmlParser.FindStartTags(isOP ? threadDivTagRange : postTagRange' "div")' t => HTMLParser.ClassAttributeValueHas(t' "files")))); " is 129.
Long Statement,JDP,InfinitechanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetImages,The length of the statement  "                foreach (HTMLTagRange fileDivTagRange in Enumerable.Where(Enumerable.Select(Enumerable.Where(_htmlParser.FindStartTags(filesDivTagRange' "div")' " is 144.
Long Statement,JDP,InfinitechanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetImages,The length of the statement  "                        _htmlParser.FindStartTags(fileInfoParagraphTagRange' "span")' t => HTMLParser.ClassAttributeValueHas(t' "postfilename")))); " is 123.
Long Statement,JDP,InfinitechanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetImages,The length of the statement  "                    string originalFileName = postFileNameSpanTagRange.StartTag.GetAttributeValue("title") ?? _htmlParser.GetInnerHTML(postFileNameSpanTagRange); " is 141.
Long Statement,JDP,InfinitechanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetCrossLinks,The length of the statement  "            foreach (HTMLTagRange bodyDivTagRange in Enumerable.Where(Enumerable.Select(Enumerable.Where(_htmlParser.FindStartTags("div")' " is 126.
Long Statement,JDP,InfinitechanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetCrossLinks,The length of the statement  "                    if ((urlSplit[0] == GetBoardName() && urlSplit[2] == GetThreadID()) || (!interBoardAutoFollow && GetBoardName() != urlSplit[0])) continue; " is 138.
Long Statement,JDP,InfinitechanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,ResurrectDeadPosts,The length of the statement  "            foreach (HTMLTagRange postTagRange in Enumerable.Where(Enumerable.Select(Enumerable.Where(_htmlParser.FindStartTags("div")' " is 123.
Long Statement,JDP,InfinitechanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,ResurrectDeadPosts,The length of the statement  "            foreach (HTMLTagRange previousPostTagRange in Enumerable.Where(Enumerable.Select(Enumerable.Where(previousParser.FindStartTags("div")' " is 134.
Long Statement,JDP,InfinitechanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,ResurrectDeadPosts,The length of the statement  "                        Enumerable.FirstOrDefault(Enumerable.Where(_htmlParser.FindStartTags("div")' t => HTMLParser.ClassAttributeValueHas(t' "thread"))).EndOffset; " is 141.
Long Statement,JDP,InfinitechanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,ResurrectDeadPosts,The length of the statement  "                        value = value.Insert(inputTag.EndOffset - previousPostTagRange.Offset' "<strong style=\"color: #FF0000\">[Deleted]</strong> "); " is 127.
Long Statement,JDP,InfinitechanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,ResurrectDeadPosts,The length of the statement  "            foreach (HTMLTagRange postTagRange in Enumerable.Where(Enumerable.Select(Enumerable.Where(_htmlParser.FindStartTags("div")' " is 123.
Long Statement,JDP,InfinitechanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,ResurrectDeadPosts,The length of the statement  "                    _htmlParser.FindStartTags(isOP ? threadDivTagRange : postTagRange' "div")' t => HTMLParser.ClassAttributeValueHas(t' "files")))); " is 129.
Long Statement,JDP,InfinitechanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,ResurrectDeadPosts,The length of the statement  "                foreach (HTMLTagRange fileDivTagRange in Enumerable.Where(Enumerable.Select(Enumerable.Where(_htmlParser.FindStartTags(filesDivTagRange' "div")' " is 144.
Long Statement,JDP,FuukaSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,IsImage,The length of the statement  "            return Enumerable.FirstOrDefault(Enumerable.Where(_htmlParser.FindStartTags(_htmlParser.CreateTagRange(linkTag)' "img")' t => HTMLParser.ClassAttributeValueHas(t' "thumb"))) != null; " is 182.
Long Statement,JDP,FuukaSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetImages,The length of the statement  "            foreach (HTMLTagRange postTagRange in Enumerable.Where(Enumerable.Select(Enumerable.Where(_htmlParser.FindStartTags("td"' "div")' " is 129.
Long Statement,JDP,FuukaSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetImages,The length of the statement  "                t => new Regex("^p\\d+$").IsMatch(t.GetAttributeValueOrEmpty("id")))' t => _htmlParser.CreateTagRange(t))' r => r != null)) " is 123.
Long Statement,JDP,FuukaSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetImages,The length of the statement  "                HTMLTagRange imageLinkTagRange = _htmlParser.CreateTagRange(Enumerable.FirstOrDefault(Enumerable.Where(_htmlParser.FindStartTags(postTagRange' "a")' IsImage))); " is 160.
Long Statement,JDP,FuukaSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetImages,The length of the statement  "                HTMLTagRange fileInfoTagRange = _htmlParser.CreateTagRange(_htmlParser.FindStartTag(labelTagRange.EndTag' null' "span")); " is 121.
Long Statement,JDP,FuukaSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetImages,The length of the statement  "                        _htmlParser.FindStartTags(fileInfoTagRange.EndTag' imageLinkTagRange.StartTag' "a")' t => t.GetAttributeValueOrEmpty("href").Contains("/image/"))); " is 147.
Long Statement,JDP,FuukaSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetImages,The length of the statement  "                    string name = _htmlParser.GetInnerHTML(_htmlParser.CreateTagRange(_htmlParser.FindStartTag(posterNameSpanTagRange' "a")) ?? posterNameSpanTagRange).Replace("\r"' "").Replace("\n"' "").Replace("&nbsp;"' "").Trim(); " is 213.
Long Statement,JDP,FoolFuukaSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetImages,The length of the statement  "            foreach (HTMLTagRange postTagRange in Enumerable.Where(Enumerable.Select(Enumerable.Where(_htmlParser.FindStartTags("article")' " is 127.
Long Statement,JDP,FoolFuukaSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetImages,The length of the statement  "                t => HTMLParser.ClassAttributeValueHas(t' "has_image") || (HTMLParser.ClassAttributeValueHas(t' "thread") && t.GetAttribute("id") != null))' t => _htmlParser.CreateTagRange(t))' r => r != null)) " is 194.
Long Statement,JDP,FoolFuukaSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetImages,The length of the statement  "                        _htmlParser.FindStartTags(postFileTagRange' "span")' t => HTMLParser.ClassAttributeValueHas(t' "post_file_filename")))); " is 120.
Long Statement,JDP,FoolFuukaSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetImages,The length of the statement  "                            _htmlParser.FindStartTags(postFileTagRange' "span")' t => HTMLParser.ClassAttributeValueHas(t' "post_file_controls")))); " is 120.
Long Statement,JDP,FoolFuukaSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetImages,The length of the statement  "                        originalFileName = fileNameSpanTagRange.StartTag.GetAttributeValue("title") ?? _htmlParser.GetInnerHTML(fileNameSpanTagRange); " is 126.
Long Statement,JDP,FoolFuukaSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetImages,The length of the statement  "                    originalFileName = fileNameLinkTagRange.StartTag.GetAttributeValue("title") ?? _htmlParser.GetInnerHTML(fileNameLinkTagRange); " is 126.
Long Statement,JDP,FoolFuukaSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetImages,The length of the statement  "                    _htmlParser.FindStartTags(posterDataSpanTagRange' "span")' t => HTMLParser.ClassAttributeValueHas(t' "post_tripcode")))); " is 121.
Long Statement,JDP,LynxChanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetImages,The length of the statement  "            foreach (HTMLTagRange postTagRange in Enumerable.Where(Enumerable.Select(Enumerable.Where(_htmlParser.FindStartTags("div")' " is 123.
Long Statement,JDP,LynxChanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetImages,The length of the statement  "                t => HTMLParser.ClassAttributeValueHas(t' "postCell") || HTMLParser.ClassAttributeValueHas(t' "opCell"))' t => _htmlParser.CreateTagRange(t))' r => r != null)) " is 159.
Long Statement,JDP,LynxChanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetImages,The length of the statement  "                    _htmlParser.FindStartTags(postTagRange' "div")' t => HTMLParser.ClassAttributeValueHas(t' "opHead") || HTMLParser.ClassAttributeValueHas(t' "innerPost")))); " is 156.
Long Statement,JDP,LynxChanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetImages,The length of the statement  "                foreach (HTMLTagRange fileDivTagRange in Enumerable.Where(Enumerable.Select(Enumerable.Where(_htmlParser.FindStartTags(filesDivTagRange' "figure")' " is 147.
Long Statement,JDP,LynxChanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetImages,The length of the statement  "                    string originalFileName = postFileNameLinkTagRange.StartTag.GetAttributeValue("title") ?? _htmlParser.GetInnerHTML(postFileNameLinkTagRange); " is 141.
Long Statement,JDP,General,C:\repos\SuperGouge_ChanThreadWatch\Classes\General.cs,DownloadAsync,The length of the statement  "                    request.UserAgent = (Settings.UseCustomUserAgent == true) ? Settings.CustomUserAgent : ("Chan Thread Watch " + Version); " is 120.
Long Statement,JDP,General,C:\repos\SuperGouge_ChanThreadWatch\Classes\General.cs,DownloadAsync,The length of the statement  "                                responseStream = new ThrottledStream(response.GetResponseStream()' Settings.MaximumBytesPerSecond ?? ThrottledStream.Infinite); " is 127.
Long Statement,JDP,General,C:\repos\SuperGouge_ChanThreadWatch\Classes\General.cs,EnsureThreadPoolMaxThreads,The length of the statement  "                ThreadPool.SetMaxThreads(Math.Max(workerThreads' minWorkerThreads)' Math.Max(completionPortThreads' minCompletionPortThreads)); " is 127.
Long Statement,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,Reparse,The length of the statement  "                pageInfo.Path = Path.Combine(threadDir' General.CleanFileName(_threadName) + ((pageIndex == 0) ? String.Empty : ("_" + (pageIndex + 1))) + ".html"); " is 148.
Long Statement,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,Reparse,The length of the statement  "                Dictionary<string' DownloadInfo> completedImages = new Dictionary<string' DownloadInfo>(StringComparer.OrdinalIgnoreCase); " is 122.
Long Statement,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,Reparse,The length of the statement  "                Dictionary<string' DownloadInfo> completedThumbs = new Dictionary<string' DownloadInfo>(StringComparer.OrdinalIgnoreCase); " is 122.
Long Statement,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,Reparse,The length of the statement  "                        savePath = Path.Combine(Path.Combine(imageDir' Settings.SortImagesByPoster == true ? image.Poster : String.Empty)' saveFileNameNoExtension + ((iSuffix == 1) ? " is 158.
Long Statement,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,Reparse,The length of the statement  "                        if (imageFolder != ThreadDownloadDirectory && Directory.GetFiles(imageFolder).Length == 0 && Directory.GetDirectories(imageFolder).Length == 0) { " is 145.
Long Statement,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,Check,The length of the statement  "                                    Path.Combine(_mainDownloadDirectory' Settings.RenameDownloadFolderWithCategory == true ? General.CleanFileName(_category) : String.Empty)' " is 138.
Long Statement,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,Check,The length of the statement  "                                    General.CleanFileName(String.Format("{0}_{1}_{2}{3}"' siteHelper.GetSiteName()' siteHelper.GetBoardName()' _threadName' ParentThreadFormattedDescription))); " is 156.
Long Statement,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,Check,The length of the statement  "                                _description = General.CleanFileName(String.Format("{0}_{1}_{2}"' siteHelper.GetSiteName()' siteHelper.GetBoardName()' _threadName)); " is 133.
Long Statement,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,Check,The length of the statement  "                    string saveFileName = General.CleanFileName(_threadName) + ((pageIndex == 0) ? String.Empty : ("_" + (pageIndex + 1))) + ".html"; " is 129.
Long Statement,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,Check,The length of the statement  "                                if (!RootThread.DescendantThreads.ContainsKey(crossLinkID) && RootThread.PageID != crossLinkID) OnAddThread(new AddThreadEventArgs(crossLink)); " is 143.
Long Statement,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,Check,The length of the statement  "                                    string path = Path.Combine(Path.Combine(imageDir' Settings.SortImagesByPoster == true ? image.Poster : String.Empty)' fileName); " is 128.
Long Statement,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,Check,The length of the statement  "                            savePath = Path.Combine(Path.Combine(imageDir' Settings.SortImagesByPoster == true ? image.Poster : String.Empty)' saveFileNameNoExtension + ((iSuffix == 1) ? " is 158.
Long Statement,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,Process,The length of the statement  "                                replace.Value = "href=\"" + HttpUtility.HtmlAttributeEncode(General.GetRelativeFilePath(Path.Combine(watcher.ThreadDownloadDirectory' General.CleanFileName(watcher.ThreadName) + ".html")' _threadDownloadDirectory)) + "\""; " is 222.
Long Statement,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,Process,The length of the statement  "                                string innerHTML = String.Format(">>{0}{1}"' siteHelper.GetBoardName() != tagSplit[1] ? ">/" + tagSplit[1] + "/" : String.Empty' tagSplit[2]); " is 142.
Long Statement,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,Process,The length of the statement  "                                replace.Value = "<a class=\"quotelink\" href=\"" + HttpUtility.HtmlAttributeEncode(General.GetRelativeFilePath(Path.Combine(watcher.ThreadDownloadDirectory' General.CleanFileName(watcher.ThreadName) + ".html")' _threadDownloadDirectory)) + "\">" + innerHTML + "</a>"; " is 267.
Long Statement,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,TryRenameThreadDownloadDirectory,The length of the statement  "                        Path.Combine(_mainDownloadDirectory' Settings.RenameDownloadFolderWithCategory == true ? General.CleanFileName(_category) : String.Empty)' " is 138.
Long Statement,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,TryRenameThreadDownloadDirectory,The length of the statement  "                    if (!Directory.Exists(General.RemoveLastDirectory(destDir))) Directory.CreateDirectory(General.RemoveLastDirectory(destDir)); " is 125.
Long Statement,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,TryRenameThreadDownloadDirectory,The length of the statement  "                    if (categoryPath != MainDownloadDirectory && Directory.GetFiles(categoryPath).Length == 0 && Directory.GetDirectories(categoryPath).Length == 0) { " is 146.
Long Statement,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,frmChanThreadWatch_Shown,The length of the statement  "                    lvThreads.ListViewItemSorter = new ListViewItemSorter(Settings.SortColumn ?? (int)ColumnIndex.AddedOn) { Ascending = Settings.SortAscending ?? true }; " is 150.
Long Statement,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,frmChanThreadWatch_FormClosed,The length of the statement  "            Settings.CheckEvery = pnlCheckEvery.Enabled ? (cboCheckEvery.Enabled ? (int)cboCheckEvery.SelectedValue : Int32.Parse(txtCheckEvery.Text)) : 0; " is 143.
Long Statement,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,btnAdd_Click,The length of the statement  "                MessageBox.Show(this' "The same thread is already being watched' downloaded or has been blacklisted."' "Cannot Add Thread"' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 168.
Long Statement,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,btnRemoveCompleted_Click,The length of the statement  "                    Settings.CompletedFolder = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments)' "Completed Threads"); " is 127.
Long Statement,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,btnRemoveCompleted_Click,The length of the statement  "                            if (categoryPath != watcher.MainDownloadDirectory && Directory.GetFiles(categoryPath).Length == 0 && Directory.GetDirectories(categoryPath).Length == 0) { " is 154.
Long Statement,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,miOpenFolder_Click,The length of the statement  "            if (selectedCount > 5 && MessageBox.Show(this' "Do you want to open the folders of all " + selectedCount + " selected items?"' " is 126.
Long Statement,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,miOpenFolder_Click,The length of the statement  "                                MessageBox.Show(this' "The folder " + dir + " does not exists. The watcher has been stopped to let you fix this' in case of an unwanted deletion or rename. If the thread file cannot be found for the next check' it won't include possible deleted posts."' " is 253.
Long Statement,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,miOpenURL_Click,The length of the statement  "            if (selectedCount > 5 && MessageBox.Show(this' "Do you want to open the URLs of all " + selectedCount + " selected items?"' " is 123.
Long Statement,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,miCopyURL_Click,The length of the statement  "                MessageBox.Show(this' "Unable to copy to clipboard: " + ex.Message' "Error"' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 121.
Long Statement,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,miRemoveAndDeleteFolder_Click,The length of the statement  "                    if (categoryPath != watcher.MainDownloadDirectory && Directory.GetFiles(categoryPath).Length == 0 && Directory.GetDirectories(categoryPath).Length == 0) { " is 154.
Long Statement,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,btnAbout_Click,The length of the statement  "            MessageBox.Show(this' String.Format("Chan Thread Watch{0}Version {1} ({2}){0}{0}Original Author: JDP (jart1126@yahoo.com){0}http://sites.google.com/site/chanthreadwatch/" + " is 172.
Long Statement,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,cboCheckEvery_SelectedIndexChanged,The length of the statement  "            if (_cboCheckEveryLastValue == null && (int)cboCheckEvery.SelectedValue == 0 && (int)cboCheckEvery.SelectedValue != Settings.CheckEvery) { " is 138.
Long Statement,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,tmrMonitor_Tick,The length of the statement  "            miMonitorTotal.Text = String.Format("Watching {0} thread{1}"' monitoringInfo.TotalThreads' monitoringInfo.TotalThreads != 1 ? "s" : String.Empty); " is 146.
Long Statement,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,AddThread,The length of the statement  "                CheckIntervalSeconds = pnlCheckEvery.Enabled ? (cboCheckEvery.Enabled ? (int)cboCheckEvery.SelectedValue * 60 : Int32.Parse(txtCheckEvery.Text) * 60) : 0' " is 154.
Long Statement,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,RemoveThreads,The length of the statement  "                if ((removeCompleted || (removeSelected && lvThreads.Items[i].Selected)) && !watcher.IsRunning && !watcher.IsReparsing) { " is 121.
Long Statement,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,DisplayLastImageOn,The length of the statement  "            SetSubItemText(watcher' ColumnIndex.LastImageOn' time != null ? time.Value.ToString("yyyy/MM/dd HH:mm:ss") : String.Empty); " is 123.
Long Statement,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,SaveThreadList,The length of the statement  "                    lines.Add(watcher.ThreadDownloadDirectory != null ? General.GetRelativeDirectoryPath(watcher.ThreadDownloadDirectory' watcher.MainDownloadDirectory) : String.Empty); " is 165.
Long Statement,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,SaveThreadList,The length of the statement  "                    lines.Add((watcher.IsStopping && watcher.StopReason != StopReason.Exiting) ? ((int)watcher.StopReason).ToString() : String.Empty); " is 130.
Long Statement,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,SaveThreadList,The length of the statement  "                    lines.Add(extraData.LastImageOn != null ? extraData.LastImageOn.Value.ToUniversalTime().Ticks.ToString() : String.Empty); " is 121.
Long Statement,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,LoadThreadList,The length of the statement  "                    thread.SaveDir = thread.SaveDir.Length != 0 ? General.GetAbsoluteDirectoryPath(thread.SaveDir' Settings.AbsoluteDownloadDirectory) : null; " is 138.
Long Statement,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,LoadThreadList,The length of the statement  "                    if (parentThread != null && !parentThread.ChildThreads.ContainsKey(threadWatcher.PageID) && !parentThread.ChildThreads.ContainsKey(parentThread.PageID)) { " is 154.
Long Statement,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,LoadThreadList,The length of the statement  "                    if (Settings.ChildThreadsAreNewFormat == true && threadWatcher.StopReason != StopReason.PageNotFound && threadWatcher.StopReason != StopReason.UserRequest) { " is 157.
Long Statement,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,LoadThreadList,The length of the statement  "                                if (!Directory.Exists(General.RemoveLastDirectory(destDir))) Directory.CreateDirectory(General.RemoveLastDirectory(destDir)); " is 125.
Long Statement,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,LoadThreadList,The length of the statement  "                        if (threadWatcher.StopReason != StopReason.PageNotFound && threadWatcher.StopReason != StopReason.UserRequest) threadWatcher.Start(); " is 133.
Long Statement,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,CheckForUpdateThread,The length of the statement  "                htmlParser.FindStartTags(labelLatestDivTagRange' "span")' t => HTMLParser.ClassAttributeValueHas(t' "css-truncate-target")))); " is 126.
Long Statement,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,CheckForUpdateThread,The length of the statement  "                        if (MessageBox.Show(this' "A newer version of Chan Thread Watch is available.  Would you like to open the Chan Thread Watch website?"' " is 134.
Long Statement,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The length of the statement  "            this.lvThreads.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)  " is 145.
Long Statement,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The length of the statement  "            this.grpAddThread.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left))); " is 150.
Long Statement,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The length of the statement  "            this.btnRemoveCompleted.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 157.
Long Statement,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The length of the statement  "            this.btnAbout.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 147.
Long Statement,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The length of the statement  "            this.btnSettings.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 150.
Long Statement,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The length of the statement  "            this.grpDoubleClick.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left))); " is 152.
Long Statement,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The length of the statement  "            this.btnAddFromClipboard.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 158.
Long Statement,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The length of the statement  "            this.btnDownloads.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 151.
Long Statement,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The length of the statement  "            this.btnHelp.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 146.
Long Statement,JDP,frmDownloads,C:\repos\SuperGouge_ChanThreadWatch\frmDownloads.cs,InitializeComponent,The length of the statement  "            this.lvDownloads.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom) " is 147.
Long Statement,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,frmSettings_Load,The length of the statement  "            txtCompletedFolder.Enabled = btnCompletedFolder.Enabled = chkCompletedFolderRelative.Enabled = chkCompletedFolder.Checked; " is 122.
Long Statement,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,frmSettings_Load,The length of the statement  "            chkRenameDownloadFolderWithParentThreadDescription.Checked = Settings.RenameDownloadFolderWithParentThreadDescription ?? false; " is 127.
Long Statement,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,btnOK_Click,The length of the statement  "                if (!String.Equals(Settings.AbsoluteDownloadDirectory' oldAbsoluteDownloadFolder' StringComparison.OrdinalIgnoreCase)) { " is 120.
Long Statement,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,btnOK_Click,The length of the statement  "                    MessageBox.Show(this' "The new download folder will not affect threads currently being watched until the program is restarted.  " + " is 131.
Long Statement,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,btnOK_Click,The length of the statement  "                                          "If you are still watching the threads at next run' make sure you have moved their download folders into the new download folder."' " is 131.
Long Statement,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,chkCompletedFolder_CheckedChanged,The length of the statement  "            txtCompletedFolder.Enabled = btnCompletedFolder.Enabled = chkCompletedFolderRelative.Enabled = chkCompletedFolder.Checked; " is 122.
Long Statement,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The length of the statement  "            this.txtDownloadFolder.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left)  " is 150.
Long Statement,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The length of the statement  "            this.btnDownloadFolder.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 153.
Long Statement,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The length of the statement  "            this.btnOK.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 144.
Long Statement,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The length of the statement  "            this.btnCancel.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 148.
Long Statement,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The length of the statement  "            this.txtCustomUserAgent.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left)  " is 151.
Long Statement,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The length of the statement  "            this.chkDownloadFolderRelative.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 161.
Long Statement,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The length of the statement  "            this.chkDownloadFolderRelative.CheckedChanged += new System.EventHandler(this.chkDownloadFolderRelative_CheckedChanged); " is 120.
Long Statement,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The length of the statement  "            this.lblSettingsLocation.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left))); " is 157.
Long Statement,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The length of the statement  "            this.rbSettingsInAppDataFolder.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left))); " is 163.
Long Statement,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The length of the statement  "            this.rbSettingsInExeFolder.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left))); " is 159.
Long Statement,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The length of the statement  "            this.chkRenameDownloadFolderWithParentThreadDescription.CheckedChanged += new System.EventHandler(this.chkRenameDownloadFolderWithParentThreadDescription_CheckedChanged); " is 170.
Long Statement,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The length of the statement  "            this.btnWindowTitle.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 153.
Long Statement,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The length of the statement  "            this.txtCompletedFolder.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left)  " is 151.
Long Statement,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The length of the statement  "            this.btnCompletedFolder.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 154.
Long Statement,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The length of the statement  "            this.chkCompletedFolder.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 154.
Long Statement,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The length of the statement  "            this.chkCompletedFolderRelative.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 162.
Long Statement,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The length of the statement  "            this.chkCompletedFolderRelative.CheckedChanged += new System.EventHandler(this.chkCompletedFolderRelative_CheckedChanged); " is 122.
Long Statement,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The length of the statement  "            this.btnCancel.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left))); " is 147.
Long Statement,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The length of the statement  "            this.btnOK.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left))); " is 143.
Long Statement,JDP,Program,C:\repos\SuperGouge_ChanThreadWatch\Program.cs,Main,The length of the statement  "                MessageBox.Show("Another instance of this program is running."' "Already Running"' MessageBoxButtons.OK' MessageBoxIcon.Information); " is 133.
Complex Conditional,JDP,FourChanLookAlikeSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetImages,The conditional expression  "image.URL.Length == 0 || image.FileName.Length == 0 || (image.HashType != HashType.None && image.Hash == null)"  is complex.
Complex Conditional,JDP,InfinitechanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetCrossLinks,The conditional expression  "(urlSplit[0] == GetBoardName() && urlSplit[2] == GetThreadID()) || (!interBoardAutoFollow && GetBoardName() != urlSplit[0])"  is complex.
Complex Conditional,JDP,General,C:\repos\SuperGouge_ChanThreadWatch\Classes\General.cs,GetBOMType,The conditional expression  "bytes.Length >= 3 && bytes[0] == 0xEF && bytes[1] == 0xBB && bytes[2] == 0xBF"  is complex.
Complex Conditional,JDP,General,C:\repos\SuperGouge_ChanThreadWatch\Classes\General.cs,AddOtherReplaces,The conditional expression  "isATag && newURL != null && newURL.Length > pageURL.Length &&                              newURL.StartsWith(pageURL' StringComparison.Ordinal) && newURL[pageURL.Length] == '#'"  is complex.
Complex Conditional,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,TryRenameThreadDownloadDirectory,The conditional expression  "(!calledFromCheck && !_checkFinishedEvent.WaitOne(0' false)) ||                      !_reparseFinishedEvent.WaitOne(0' false) ||                      String.IsNullOrEmpty(_threadDownloadDirectory) ||                      String.IsNullOrEmpty(_description) ||                      (IsStopping && (StopReason == StopReason.IOError || StopReason == StopReason.Exiting))"  is complex.
Complex Conditional,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,RemoveThreads,The conditional expression  "(removeCompleted || (removeSelected && lvThreads.Items[i].Selected)) && !watcher.IsRunning && !watcher.IsReparsing"  is complex.
Complex Conditional,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,UpdateCategories,The conditional expression  "remove && (_categories.ContainsKey(key) && (--_categories[key] < 1 && !String.IsNullOrEmpty(key)))"  is complex.
Virtual Method Call from Constructor,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,ThreadWatcher,The constructor "ThreadWatcher" calls a virtual method "GetPageID".
Virtual Method Call from Constructor,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,ThreadWatcher,The constructor "ThreadWatcher" calls a virtual method "GetThreadName".
Empty Catch Block,JDP,Logger,C:\repos\SuperGouge_ChanThreadWatch\Classes\Logger.cs,Logger,The method has an empty catch block.
Empty Catch Block,JDP,Logger,C:\repos\SuperGouge_ChanThreadWatch\Classes\Logger.cs,Log,The method has an empty catch block.
Empty Catch Block,JDP,ConnectionManager,C:\repos\SuperGouge_ChanThreadWatch\Classes\Other.cs,SwapForFreshConnection,The method has an empty catch block.
Empty Catch Block,JDP,ThrottledStream,C:\repos\SuperGouge_ChanThreadWatch\Classes\Other.cs,Throttle,The method has an empty catch block.
Empty Catch Block,JDP,General,C:\repos\SuperGouge_ChanThreadWatch\Classes\General.cs,DownloadAsync,The method has an empty catch block.
Empty Catch Block,JDP,General,C:\repos\SuperGouge_ChanThreadWatch\Classes\General.cs,DownloadAsync,The method has an empty catch block.
Empty Catch Block,JDP,General,C:\repos\SuperGouge_ChanThreadWatch\Classes\General.cs,DownloadPageToString,The method has an empty catch block.
Empty Catch Block,JDP,General,C:\repos\SuperGouge_ChanThreadWatch\Classes\General.cs,DownloadPageToString,The method has an empty catch block.
Empty Catch Block,JDP,General,C:\repos\SuperGouge_ChanThreadWatch\Classes\General.cs,DownloadPageToString,The method has an empty catch block.
Empty Catch Block,JDP,General,C:\repos\SuperGouge_ChanThreadWatch\Classes\General.cs,GetResponseLastModifiedTime,The method has an empty catch block.
Empty Catch Block,JDP,General,C:\repos\SuperGouge_ChanThreadWatch\Classes\General.cs,DetectHTMLEncoding,The method has an empty catch block.
Empty Catch Block,JDP,General,C:\repos\SuperGouge_ChanThreadWatch\Classes\General.cs,IsFileNameTooLong,The method has an empty catch block.
Empty Catch Block,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,OnDownloadStatus,The method has an empty catch block.
Empty Catch Block,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,OnWaitStatus,The method has an empty catch block.
Empty Catch Block,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,OnStopStatus,The method has an empty catch block.
Empty Catch Block,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,OnReparseStatus,The method has an empty catch block.
Empty Catch Block,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,OnThreadDownloadDirectoryRename,The method has an empty catch block.
Empty Catch Block,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,OnDownloadStart,The method has an empty catch block.
Empty Catch Block,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,OnDownloadProgress,The method has an empty catch block.
Empty Catch Block,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,OnDownloadEnd,The method has an empty catch block.
Empty Catch Block,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,OnAddThread,The method has an empty catch block.
Empty Catch Block,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,Check,The method has an empty catch block.
Empty Catch Block,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,Process,The method has an empty catch block.
Empty Catch Block,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,TryRenameThreadDownloadDirectory,The method has an empty catch block.
Empty Catch Block,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,DownloadPageAsync,The method has an empty catch block.
Empty Catch Block,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,DownloadPageAsync,The method has an empty catch block.
Empty Catch Block,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,DownloadPageAsync,The method has an empty catch block.
Empty Catch Block,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,DownloadPageAsync,The method has an empty catch block.
Empty Catch Block,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,DownloadPageAsync,The method has an empty catch block.
Empty Catch Block,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,DownloadPageAsync,The method has an empty catch block.
Empty Catch Block,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,DownloadFileAsync,The method has an empty catch block.
Empty Catch Block,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,DownloadFileAsync,The method has an empty catch block.
Empty Catch Block,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,DownloadFileAsync,The method has an empty catch block.
Empty Catch Block,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,frmChanThreadWatch,The method has an empty catch block.
Empty Catch Block,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,btnOK_Click,The method has an empty catch block.
Empty Catch Block,JDP,Program,C:\repos\SuperGouge_ChanThreadWatch\Program.cs,ObtainMutex,The method has an empty catch block.
Empty Catch Block,JDP,Program,C:\repos\SuperGouge_ChanThreadWatch\Program.cs,ReleaseMutex,The method has an empty catch block.
Magic Number,JDP,GUI,C:\repos\SuperGouge_ChanThreadWatch\Classes\GUI.cs,CenterChildForm,The following statement contains a magic number: int centerX = ((parent.Left * 2) + parent.Width) / 2;
Magic Number,JDP,GUI,C:\repos\SuperGouge_ChanThreadWatch\Classes\GUI.cs,CenterChildForm,The following statement contains a magic number: int centerX = ((parent.Left * 2) + parent.Width) / 2;
Magic Number,JDP,GUI,C:\repos\SuperGouge_ChanThreadWatch\Classes\GUI.cs,CenterChildForm,The following statement contains a magic number: int centerY = ((parent.Top * 2) + parent.Height) / 2;
Magic Number,JDP,GUI,C:\repos\SuperGouge_ChanThreadWatch\Classes\GUI.cs,CenterChildForm,The following statement contains a magic number: int centerY = ((parent.Top * 2) + parent.Height) / 2;
Magic Number,JDP,GUI,C:\repos\SuperGouge_ChanThreadWatch\Classes\GUI.cs,CenterChildForm,The following statement contains a magic number: int formX = ((parent.Left * 2) + parent.Width - child.Width) / 2;
Magic Number,JDP,GUI,C:\repos\SuperGouge_ChanThreadWatch\Classes\GUI.cs,CenterChildForm,The following statement contains a magic number: int formX = ((parent.Left * 2) + parent.Width - child.Width) / 2;
Magic Number,JDP,GUI,C:\repos\SuperGouge_ChanThreadWatch\Classes\GUI.cs,CenterChildForm,The following statement contains a magic number: int formY = ((parent.Top * 2) + parent.Height - child.Height) / 2;
Magic Number,JDP,GUI,C:\repos\SuperGouge_ChanThreadWatch\Classes\GUI.cs,CenterChildForm,The following statement contains a magic number: int formY = ((parent.Top * 2) + parent.Height - child.Height) / 2;
Magic Number,JDP,HTMLParser,C:\repos\SuperGouge_ChanThreadWatch\Classes\HTMLParser.cs,ParseTags,The following statement contains a magic number: while (htmlStart < htmlEnd) {                  int pos = IndexOf(html' htmlStart' htmlEnd' '<');                  if (pos == -1) yield break;                    HTMLTag tag = new HTMLTag();                  tag.Offset = pos;                  htmlStart = pos + 1;                  tag.IsEnd = StartsWith(html' htmlStart' htmlEnd' '/');                  if (StartsWithLetter(html' tag.IsEnd ? (htmlStart + 1) : htmlStart' htmlEnd)) {                      // Parse tag name                      if (tag.IsEnd) htmlStart += 1;                      pos = IndexOfAny(html' htmlStart' htmlEnd' true' '/'' '>');                      if (pos == -1) yield break;                      tag.Name = GetSectionLower(html' htmlStart' pos);                      htmlStart = pos;                        // Parse attributes                      bool isTagComplete = false;                      do {                          while (StartsWithWhiteSpace(html' htmlStart' htmlEnd)) htmlStart++;                          tag.IsSelfClosing = StartsWith(html' htmlStart' htmlEnd' '/');                          if (tag.IsSelfClosing) htmlStart += 1;                          if (StartsWith(html' htmlStart' htmlEnd' '>')) {                              htmlStart += 1;                              isTagComplete = true;                          }                          else if (tag.IsSelfClosing) { }                          else {                              HTMLAttribute attribute = new HTMLAttribute();                              attribute.Offset = htmlStart;                                // Parse attribute name                              pos = IndexOfAny(html' htmlStart + 1' htmlEnd' true' '='' '/'' '>');                              if (pos == -1) yield break;                              attribute.Name = GetSectionLower(html' htmlStart' pos);                              htmlStart = pos;                                while (StartsWithWhiteSpace(html' htmlStart' htmlEnd)) htmlStart++;                              if (StartsWith(html' htmlStart' htmlEnd' '=')) {                                  // Parse attribute value                                  htmlStart += 1;                                  while (StartsWithWhiteSpace(html' htmlStart' htmlEnd)) htmlStart++;                                  if (StartsWithAny(html' htmlStart' htmlEnd' '"'' '\'')) {                                      char quoteChar = html[htmlStart];                                      htmlStart += 1;                                      pos = IndexOf(html' htmlStart' htmlEnd' quoteChar);                                      if (pos == -1) yield break;                                      attribute.Value = GetSection(html' htmlStart' pos);                                      htmlStart = pos + 1;                                  }                                  else {                                      pos = IndexOfAny(html' htmlStart' htmlEnd' true' '>');                                      if (pos == -1) yield break;                                      attribute.Value = GetSection(html' htmlStart' pos);                                      htmlStart = pos;                                  }                              }                              else {                                  attribute.Value = String.Empty;                              }                                attribute.Length = htmlStart - attribute.Offset;                              if (tag.GetAttribute(attribute.Name) == null) {                                  tag.Attributes.Add(attribute);                              }                          }                      } while (!isTagComplete);                      tag.Length = htmlStart - tag.Offset;                        // Yield result                      yield return tag;                        // Skip contents of special tags whose contents are to be treated as raw text                      if (!tag.IsEnd && !tag.IsSelfClosing && tag.NameEqualsAny("script"' "style"' "title"' "textarea")) {                          bool foundEndTag = false;                          do {                              pos = IndexOf(html' htmlStart' htmlEnd' '<');                              if (pos == -1) yield break;                              htmlStart = pos + 1;                              string endTagText = "/" + tag.Name;                              if (StartsWith(html' htmlStart' htmlEnd' endTagText' true) &&                                  (StartsWithWhiteSpace(html' htmlStart + endTagText.Length' htmlEnd) ||                                   StartsWithAny(html' htmlStart + endTagText.Length' htmlEnd' '/'' '>')))                              {                                  htmlStart -= 1;                                  foundEndTag = true;                              }                          } while (!foundEndTag);                      }                  }                  else if (StartsWith(html' htmlStart' htmlEnd' "!--"' false) && !StartsWith(html' htmlStart + 3' htmlEnd' '>')) {                      // Skip comment                      htmlStart += 3;                      bool foundEnd = false;                      do {                          pos = IndexOf(html' htmlStart' htmlEnd' '-');                          if (pos == -1) yield break;                          htmlStart = pos + 1;                          if (StartsWith(html' htmlStart' htmlEnd' "->"' false)) {                              htmlStart += 2;                              foundEnd = true;                          }                          else if (StartsWith(html' htmlStart' htmlEnd' "-!>"' false)) {                              htmlStart += 3;                              foundEnd = true;                          }                      } while (!foundEnd);                  }                  else if (StartsWithAny(html' htmlStart' htmlEnd' '?'' '/'' '!')) {                      // Skip bogus comment or DOCTYPE                      htmlStart += 1;                      pos = IndexOf(html' htmlStart' htmlEnd' '>');                      if (pos == -1) yield break;                      htmlStart = pos + 1;                  }              }
Magic Number,JDP,HTMLParser,C:\repos\SuperGouge_ChanThreadWatch\Classes\HTMLParser.cs,ParseTags,The following statement contains a magic number: while (htmlStart < htmlEnd) {                  int pos = IndexOf(html' htmlStart' htmlEnd' '<');                  if (pos == -1) yield break;                    HTMLTag tag = new HTMLTag();                  tag.Offset = pos;                  htmlStart = pos + 1;                  tag.IsEnd = StartsWith(html' htmlStart' htmlEnd' '/');                  if (StartsWithLetter(html' tag.IsEnd ? (htmlStart + 1) : htmlStart' htmlEnd)) {                      // Parse tag name                      if (tag.IsEnd) htmlStart += 1;                      pos = IndexOfAny(html' htmlStart' htmlEnd' true' '/'' '>');                      if (pos == -1) yield break;                      tag.Name = GetSectionLower(html' htmlStart' pos);                      htmlStart = pos;                        // Parse attributes                      bool isTagComplete = false;                      do {                          while (StartsWithWhiteSpace(html' htmlStart' htmlEnd)) htmlStart++;                          tag.IsSelfClosing = StartsWith(html' htmlStart' htmlEnd' '/');                          if (tag.IsSelfClosing) htmlStart += 1;                          if (StartsWith(html' htmlStart' htmlEnd' '>')) {                              htmlStart += 1;                              isTagComplete = true;                          }                          else if (tag.IsSelfClosing) { }                          else {                              HTMLAttribute attribute = new HTMLAttribute();                              attribute.Offset = htmlStart;                                // Parse attribute name                              pos = IndexOfAny(html' htmlStart + 1' htmlEnd' true' '='' '/'' '>');                              if (pos == -1) yield break;                              attribute.Name = GetSectionLower(html' htmlStart' pos);                              htmlStart = pos;                                while (StartsWithWhiteSpace(html' htmlStart' htmlEnd)) htmlStart++;                              if (StartsWith(html' htmlStart' htmlEnd' '=')) {                                  // Parse attribute value                                  htmlStart += 1;                                  while (StartsWithWhiteSpace(html' htmlStart' htmlEnd)) htmlStart++;                                  if (StartsWithAny(html' htmlStart' htmlEnd' '"'' '\'')) {                                      char quoteChar = html[htmlStart];                                      htmlStart += 1;                                      pos = IndexOf(html' htmlStart' htmlEnd' quoteChar);                                      if (pos == -1) yield break;                                      attribute.Value = GetSection(html' htmlStart' pos);                                      htmlStart = pos + 1;                                  }                                  else {                                      pos = IndexOfAny(html' htmlStart' htmlEnd' true' '>');                                      if (pos == -1) yield break;                                      attribute.Value = GetSection(html' htmlStart' pos);                                      htmlStart = pos;                                  }                              }                              else {                                  attribute.Value = String.Empty;                              }                                attribute.Length = htmlStart - attribute.Offset;                              if (tag.GetAttribute(attribute.Name) == null) {                                  tag.Attributes.Add(attribute);                              }                          }                      } while (!isTagComplete);                      tag.Length = htmlStart - tag.Offset;                        // Yield result                      yield return tag;                        // Skip contents of special tags whose contents are to be treated as raw text                      if (!tag.IsEnd && !tag.IsSelfClosing && tag.NameEqualsAny("script"' "style"' "title"' "textarea")) {                          bool foundEndTag = false;                          do {                              pos = IndexOf(html' htmlStart' htmlEnd' '<');                              if (pos == -1) yield break;                              htmlStart = pos + 1;                              string endTagText = "/" + tag.Name;                              if (StartsWith(html' htmlStart' htmlEnd' endTagText' true) &&                                  (StartsWithWhiteSpace(html' htmlStart + endTagText.Length' htmlEnd) ||                                   StartsWithAny(html' htmlStart + endTagText.Length' htmlEnd' '/'' '>')))                              {                                  htmlStart -= 1;                                  foundEndTag = true;                              }                          } while (!foundEndTag);                      }                  }                  else if (StartsWith(html' htmlStart' htmlEnd' "!--"' false) && !StartsWith(html' htmlStart + 3' htmlEnd' '>')) {                      // Skip comment                      htmlStart += 3;                      bool foundEnd = false;                      do {                          pos = IndexOf(html' htmlStart' htmlEnd' '-');                          if (pos == -1) yield break;                          htmlStart = pos + 1;                          if (StartsWith(html' htmlStart' htmlEnd' "->"' false)) {                              htmlStart += 2;                              foundEnd = true;                          }                          else if (StartsWith(html' htmlStart' htmlEnd' "-!>"' false)) {                              htmlStart += 3;                              foundEnd = true;                          }                      } while (!foundEnd);                  }                  else if (StartsWithAny(html' htmlStart' htmlEnd' '?'' '/'' '!')) {                      // Skip bogus comment or DOCTYPE                      htmlStart += 1;                      pos = IndexOf(html' htmlStart' htmlEnd' '>');                      if (pos == -1) yield break;                      htmlStart = pos + 1;                  }              }
Magic Number,JDP,HTMLParser,C:\repos\SuperGouge_ChanThreadWatch\Classes\HTMLParser.cs,ParseTags,The following statement contains a magic number: while (htmlStart < htmlEnd) {                  int pos = IndexOf(html' htmlStart' htmlEnd' '<');                  if (pos == -1) yield break;                    HTMLTag tag = new HTMLTag();                  tag.Offset = pos;                  htmlStart = pos + 1;                  tag.IsEnd = StartsWith(html' htmlStart' htmlEnd' '/');                  if (StartsWithLetter(html' tag.IsEnd ? (htmlStart + 1) : htmlStart' htmlEnd)) {                      // Parse tag name                      if (tag.IsEnd) htmlStart += 1;                      pos = IndexOfAny(html' htmlStart' htmlEnd' true' '/'' '>');                      if (pos == -1) yield break;                      tag.Name = GetSectionLower(html' htmlStart' pos);                      htmlStart = pos;                        // Parse attributes                      bool isTagComplete = false;                      do {                          while (StartsWithWhiteSpace(html' htmlStart' htmlEnd)) htmlStart++;                          tag.IsSelfClosing = StartsWith(html' htmlStart' htmlEnd' '/');                          if (tag.IsSelfClosing) htmlStart += 1;                          if (StartsWith(html' htmlStart' htmlEnd' '>')) {                              htmlStart += 1;                              isTagComplete = true;                          }                          else if (tag.IsSelfClosing) { }                          else {                              HTMLAttribute attribute = new HTMLAttribute();                              attribute.Offset = htmlStart;                                // Parse attribute name                              pos = IndexOfAny(html' htmlStart + 1' htmlEnd' true' '='' '/'' '>');                              if (pos == -1) yield break;                              attribute.Name = GetSectionLower(html' htmlStart' pos);                              htmlStart = pos;                                while (StartsWithWhiteSpace(html' htmlStart' htmlEnd)) htmlStart++;                              if (StartsWith(html' htmlStart' htmlEnd' '=')) {                                  // Parse attribute value                                  htmlStart += 1;                                  while (StartsWithWhiteSpace(html' htmlStart' htmlEnd)) htmlStart++;                                  if (StartsWithAny(html' htmlStart' htmlEnd' '"'' '\'')) {                                      char quoteChar = html[htmlStart];                                      htmlStart += 1;                                      pos = IndexOf(html' htmlStart' htmlEnd' quoteChar);                                      if (pos == -1) yield break;                                      attribute.Value = GetSection(html' htmlStart' pos);                                      htmlStart = pos + 1;                                  }                                  else {                                      pos = IndexOfAny(html' htmlStart' htmlEnd' true' '>');                                      if (pos == -1) yield break;                                      attribute.Value = GetSection(html' htmlStart' pos);                                      htmlStart = pos;                                  }                              }                              else {                                  attribute.Value = String.Empty;                              }                                attribute.Length = htmlStart - attribute.Offset;                              if (tag.GetAttribute(attribute.Name) == null) {                                  tag.Attributes.Add(attribute);                              }                          }                      } while (!isTagComplete);                      tag.Length = htmlStart - tag.Offset;                        // Yield result                      yield return tag;                        // Skip contents of special tags whose contents are to be treated as raw text                      if (!tag.IsEnd && !tag.IsSelfClosing && tag.NameEqualsAny("script"' "style"' "title"' "textarea")) {                          bool foundEndTag = false;                          do {                              pos = IndexOf(html' htmlStart' htmlEnd' '<');                              if (pos == -1) yield break;                              htmlStart = pos + 1;                              string endTagText = "/" + tag.Name;                              if (StartsWith(html' htmlStart' htmlEnd' endTagText' true) &&                                  (StartsWithWhiteSpace(html' htmlStart + endTagText.Length' htmlEnd) ||                                   StartsWithAny(html' htmlStart + endTagText.Length' htmlEnd' '/'' '>')))                              {                                  htmlStart -= 1;                                  foundEndTag = true;                              }                          } while (!foundEndTag);                      }                  }                  else if (StartsWith(html' htmlStart' htmlEnd' "!--"' false) && !StartsWith(html' htmlStart + 3' htmlEnd' '>')) {                      // Skip comment                      htmlStart += 3;                      bool foundEnd = false;                      do {                          pos = IndexOf(html' htmlStart' htmlEnd' '-');                          if (pos == -1) yield break;                          htmlStart = pos + 1;                          if (StartsWith(html' htmlStart' htmlEnd' "->"' false)) {                              htmlStart += 2;                              foundEnd = true;                          }                          else if (StartsWith(html' htmlStart' htmlEnd' "-!>"' false)) {                              htmlStart += 3;                              foundEnd = true;                          }                      } while (!foundEnd);                  }                  else if (StartsWithAny(html' htmlStart' htmlEnd' '?'' '/'' '!')) {                      // Skip bogus comment or DOCTYPE                      htmlStart += 1;                      pos = IndexOf(html' htmlStart' htmlEnd' '>');                      if (pos == -1) yield break;                      htmlStart = pos + 1;                  }              }
Magic Number,JDP,HTMLParser,C:\repos\SuperGouge_ChanThreadWatch\Classes\HTMLParser.cs,ParseTags,The following statement contains a magic number: while (htmlStart < htmlEnd) {                  int pos = IndexOf(html' htmlStart' htmlEnd' '<');                  if (pos == -1) yield break;                    HTMLTag tag = new HTMLTag();                  tag.Offset = pos;                  htmlStart = pos + 1;                  tag.IsEnd = StartsWith(html' htmlStart' htmlEnd' '/');                  if (StartsWithLetter(html' tag.IsEnd ? (htmlStart + 1) : htmlStart' htmlEnd)) {                      // Parse tag name                      if (tag.IsEnd) htmlStart += 1;                      pos = IndexOfAny(html' htmlStart' htmlEnd' true' '/'' '>');                      if (pos == -1) yield break;                      tag.Name = GetSectionLower(html' htmlStart' pos);                      htmlStart = pos;                        // Parse attributes                      bool isTagComplete = false;                      do {                          while (StartsWithWhiteSpace(html' htmlStart' htmlEnd)) htmlStart++;                          tag.IsSelfClosing = StartsWith(html' htmlStart' htmlEnd' '/');                          if (tag.IsSelfClosing) htmlStart += 1;                          if (StartsWith(html' htmlStart' htmlEnd' '>')) {                              htmlStart += 1;                              isTagComplete = true;                          }                          else if (tag.IsSelfClosing) { }                          else {                              HTMLAttribute attribute = new HTMLAttribute();                              attribute.Offset = htmlStart;                                // Parse attribute name                              pos = IndexOfAny(html' htmlStart + 1' htmlEnd' true' '='' '/'' '>');                              if (pos == -1) yield break;                              attribute.Name = GetSectionLower(html' htmlStart' pos);                              htmlStart = pos;                                while (StartsWithWhiteSpace(html' htmlStart' htmlEnd)) htmlStart++;                              if (StartsWith(html' htmlStart' htmlEnd' '=')) {                                  // Parse attribute value                                  htmlStart += 1;                                  while (StartsWithWhiteSpace(html' htmlStart' htmlEnd)) htmlStart++;                                  if (StartsWithAny(html' htmlStart' htmlEnd' '"'' '\'')) {                                      char quoteChar = html[htmlStart];                                      htmlStart += 1;                                      pos = IndexOf(html' htmlStart' htmlEnd' quoteChar);                                      if (pos == -1) yield break;                                      attribute.Value = GetSection(html' htmlStart' pos);                                      htmlStart = pos + 1;                                  }                                  else {                                      pos = IndexOfAny(html' htmlStart' htmlEnd' true' '>');                                      if (pos == -1) yield break;                                      attribute.Value = GetSection(html' htmlStart' pos);                                      htmlStart = pos;                                  }                              }                              else {                                  attribute.Value = String.Empty;                              }                                attribute.Length = htmlStart - attribute.Offset;                              if (tag.GetAttribute(attribute.Name) == null) {                                  tag.Attributes.Add(attribute);                              }                          }                      } while (!isTagComplete);                      tag.Length = htmlStart - tag.Offset;                        // Yield result                      yield return tag;                        // Skip contents of special tags whose contents are to be treated as raw text                      if (!tag.IsEnd && !tag.IsSelfClosing && tag.NameEqualsAny("script"' "style"' "title"' "textarea")) {                          bool foundEndTag = false;                          do {                              pos = IndexOf(html' htmlStart' htmlEnd' '<');                              if (pos == -1) yield break;                              htmlStart = pos + 1;                              string endTagText = "/" + tag.Name;                              if (StartsWith(html' htmlStart' htmlEnd' endTagText' true) &&                                  (StartsWithWhiteSpace(html' htmlStart + endTagText.Length' htmlEnd) ||                                   StartsWithAny(html' htmlStart + endTagText.Length' htmlEnd' '/'' '>')))                              {                                  htmlStart -= 1;                                  foundEndTag = true;                              }                          } while (!foundEndTag);                      }                  }                  else if (StartsWith(html' htmlStart' htmlEnd' "!--"' false) && !StartsWith(html' htmlStart + 3' htmlEnd' '>')) {                      // Skip comment                      htmlStart += 3;                      bool foundEnd = false;                      do {                          pos = IndexOf(html' htmlStart' htmlEnd' '-');                          if (pos == -1) yield break;                          htmlStart = pos + 1;                          if (StartsWith(html' htmlStart' htmlEnd' "->"' false)) {                              htmlStart += 2;                              foundEnd = true;                          }                          else if (StartsWith(html' htmlStart' htmlEnd' "-!>"' false)) {                              htmlStart += 3;                              foundEnd = true;                          }                      } while (!foundEnd);                  }                  else if (StartsWithAny(html' htmlStart' htmlEnd' '?'' '/'' '!')) {                      // Skip bogus comment or DOCTYPE                      htmlStart += 1;                      pos = IndexOf(html' htmlStart' htmlEnd' '>');                      if (pos == -1) yield break;                      htmlStart = pos + 1;                  }              }
Magic Number,JDP,ThrottledStream,C:\repos\SuperGouge_ChanThreadWatch\Classes\Other.cs,Reset,The following statement contains a magic number: if (difference > 1000) {                  _byteCount = 0;                  _start = CurrentMilliseconds;              }
Magic Number,JDP,SiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,SplitURL,The following statement contains a magic number: return url.Substring(pos + 3).Split(new[] { '/' }' StringSplitOptions.RemoveEmptyEntries);
Magic Number,JDP,SiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetSiteName,The following statement contains a magic number: return (hostSplit.Length >= 2) ? hostSplit[hostSplit.Length - 2] : String.Empty;
Magic Number,JDP,SiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetSiteName,The following statement contains a magic number: return (hostSplit.Length >= 2) ? hostSplit[hostSplit.Length - 2] : String.Empty;
Magic Number,JDP,SiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetBoardName,The following statement contains a magic number: return (urlSplit.Length >= 3) ? urlSplit[1] : String.Empty;
Magic Number,JDP,SiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetThreadName,The following statement contains a magic number: if (urlSplit.Length >= 3) {                  string page = urlSplit[urlSplit.Length - 1];                  int pos = page.IndexOf('?');                  if (pos != -1) page = page.Substring(0' pos);                  pos = page.LastIndexOf('.');                  if (pos != -1) page = page.Substring(0' pos);                  return page;              }
Magic Number,JDP,FourChanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetThreadName,The following statement contains a magic number: switch (slugType) {                  case SlugType.First:                      return urlSplit[urlSplit.Length - 1] + "_" + urlSplit[urlSplit.Length - 2];                  case SlugType.Last:                      return urlSplit[urlSplit.Length - 2] + "_" + urlSplit[urlSplit.Length - 1];                  case SlugType.Only:                      return urlSplit[urlSplit.Length - 1];                  default:                      return urlSplit[urlSplit.Length - 2];              }
Magic Number,JDP,FourChanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetThreadName,The following statement contains a magic number: switch (slugType) {                  case SlugType.First:                      return urlSplit[urlSplit.Length - 1] + "_" + urlSplit[urlSplit.Length - 2];                  case SlugType.Last:                      return urlSplit[urlSplit.Length - 2] + "_" + urlSplit[urlSplit.Length - 1];                  case SlugType.Only:                      return urlSplit[urlSplit.Length - 1];                  default:                      return urlSplit[urlSplit.Length - 2];              }
Magic Number,JDP,FourChanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetThreadName,The following statement contains a magic number: switch (slugType) {                  case SlugType.First:                      return urlSplit[urlSplit.Length - 1] + "_" + urlSplit[urlSplit.Length - 2];                  case SlugType.Last:                      return urlSplit[urlSplit.Length - 2] + "_" + urlSplit[urlSplit.Length - 1];                  case SlugType.Only:                      return urlSplit[urlSplit.Length - 1];                  default:                      return urlSplit[urlSplit.Length - 2];              }
Magic Number,JDP,FourChanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetThreadID,The following statement contains a magic number: return HasSlug() ? urlSplit[urlSplit.Length - 2] : urlSplit[urlSplit.Length - 1];
Magic Number,JDP,FourChanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,HasSlug,The following statement contains a magic number: return url.Contains("/thread/") && SplitURL(url).Length == 5;
Magic Number,JDP,FourChanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetCrossLinks,The following statement contains a magic number: foreach (HTMLTagRange postMessageTagRange in Enumerable.Where(Enumerable.Select(Enumerable.Where(_htmlParser.FindStartTags("blockquote")'                  t => HTMLParser.ClassAttributeValueHas(t' "postMessage"))' t => _htmlParser.CreateTagRange(t))' r => r != null))              {                  foreach (HTMLTag quoteLinkTag in Enumerable.Where(_htmlParser.FindStartTags(postMessageTagRange' "a")'                      t => HTMLParser.ClassAttributeValueHas(t' "quotelink")))                  {                      HTMLAttribute attribute = quoteLinkTag.GetAttribute("href");                      if (attribute == null) continue;                      string href = attribute.Value.Substring(0' attribute.Value.Contains("#") ? attribute.Value.IndexOf('#') : attribute.Value.Length);                      if (!href.Contains("/thread/") || (!interBoardAutoFollow && GetBoardName() != href.Split(new[] { '/' }' StringSplitOptions.RemoveEmptyEntries)[0])) continue;                      crossLinks.Add(General.GetAbsoluteURL(_url' href));                      if (replaceList != null) {                          replaceList.Add(                              new ReplaceInfo {                                  Offset = attribute.Offset'                                  Length = attribute.Length'                                  Type = ReplaceType.QuoteLinkHref'                                  Tag = href.Replace("/thread"' "").Insert(0' GetSiteName())'                                  Value = attribute.Value                              });                      }                  }                    foreach (HTMLTagRange deadLinkTagRange in Enumerable.Where(Enumerable.Select(Enumerable.Where(_htmlParser.FindStartTags(postMessageTagRange' "span")'                      t => HTMLParser.ClassAttributeValueHas(t' "deadlink"))' t => _htmlParser.CreateTagRange(t))' r => r != null))                  {                      string boardName;                      string pageID;                      string deadLinkInnerHTML = HttpUtility.HtmlDecode(_htmlParser.GetInnerHTML(deadLinkTagRange));                      if (deadLinkInnerHTML.Contains(">>>")) {                          boardName = deadLinkInnerHTML.Split('/')[1];                          pageID = deadLinkInnerHTML.Split('/')[2];                      }                      else {                          boardName = GetBoardName();                          pageID = deadLinkInnerHTML.Substring(2);                      }                        if (replaceList != null) {                          replaceList.Add(                              new ReplaceInfo {                                  Offset = deadLinkTagRange.Offset'                                  Length = deadLinkTagRange.Length'                                  Type = ReplaceType.DeadLink'                                  Tag = String.Join("/"' new[] { GetSiteName()' boardName' pageID })'                                  Value = _htmlParser.GetHTML(deadLinkTagRange)                              });                      }                  }              }
Magic Number,JDP,FourChanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetCrossLinks,The following statement contains a magic number: foreach (HTMLTagRange postMessageTagRange in Enumerable.Where(Enumerable.Select(Enumerable.Where(_htmlParser.FindStartTags("blockquote")'                  t => HTMLParser.ClassAttributeValueHas(t' "postMessage"))' t => _htmlParser.CreateTagRange(t))' r => r != null))              {                  foreach (HTMLTag quoteLinkTag in Enumerable.Where(_htmlParser.FindStartTags(postMessageTagRange' "a")'                      t => HTMLParser.ClassAttributeValueHas(t' "quotelink")))                  {                      HTMLAttribute attribute = quoteLinkTag.GetAttribute("href");                      if (attribute == null) continue;                      string href = attribute.Value.Substring(0' attribute.Value.Contains("#") ? attribute.Value.IndexOf('#') : attribute.Value.Length);                      if (!href.Contains("/thread/") || (!interBoardAutoFollow && GetBoardName() != href.Split(new[] { '/' }' StringSplitOptions.RemoveEmptyEntries)[0])) continue;                      crossLinks.Add(General.GetAbsoluteURL(_url' href));                      if (replaceList != null) {                          replaceList.Add(                              new ReplaceInfo {                                  Offset = attribute.Offset'                                  Length = attribute.Length'                                  Type = ReplaceType.QuoteLinkHref'                                  Tag = href.Replace("/thread"' "").Insert(0' GetSiteName())'                                  Value = attribute.Value                              });                      }                  }                    foreach (HTMLTagRange deadLinkTagRange in Enumerable.Where(Enumerable.Select(Enumerable.Where(_htmlParser.FindStartTags(postMessageTagRange' "span")'                      t => HTMLParser.ClassAttributeValueHas(t' "deadlink"))' t => _htmlParser.CreateTagRange(t))' r => r != null))                  {                      string boardName;                      string pageID;                      string deadLinkInnerHTML = HttpUtility.HtmlDecode(_htmlParser.GetInnerHTML(deadLinkTagRange));                      if (deadLinkInnerHTML.Contains(">>>")) {                          boardName = deadLinkInnerHTML.Split('/')[1];                          pageID = deadLinkInnerHTML.Split('/')[2];                      }                      else {                          boardName = GetBoardName();                          pageID = deadLinkInnerHTML.Substring(2);                      }                        if (replaceList != null) {                          replaceList.Add(                              new ReplaceInfo {                                  Offset = deadLinkTagRange.Offset'                                  Length = deadLinkTagRange.Length'                                  Type = ReplaceType.DeadLink'                                  Tag = String.Join("/"' new[] { GetSiteName()' boardName' pageID })'                                  Value = _htmlParser.GetHTML(deadLinkTagRange)                              });                      }                  }              }
Magic Number,JDP,FourChanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,ResurrectDeadPosts,The following statement contains a magic number: foreach (HTMLTagRange deadLinkTagRange in Enumerable.Where(Enumerable.Select(Enumerable.Where(_htmlParser.FindStartTags("span")'                      t => HTMLParser.ClassAttributeValueHas(t' "deadlink"))' t => _htmlParser.CreateTagRange(t))' r => r != null))              {                  string deadLinkInnerHTML = HttpUtility.HtmlDecode(_htmlParser.GetInnerHTML(deadLinkTagRange));                  if (String.IsNullOrEmpty(deadLinkInnerHTML) || deadLinkInnerHTML.Contains(">>>")) continue;                  string deadLinkID = deadLinkInnerHTML.Substring(2);                  if (resurrectedPostContainers.ContainsKey("pc" + deadLinkID)) {                      tempReplaceList.Add(                          new ReplaceInfo {                              Offset = deadLinkTagRange.Offset'                              Length = deadLinkTagRange.Length'                              Type = ReplaceType.DeadLink'                              Tag = "pc" + deadLinkID'                              Value = "<a class=\"quotelink\" href=\"#p" + deadLinkID + "\">>>" + deadLinkID + "</a>"                          });                  }              }
Magic Number,JDP,InfinitechanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetCrossLinks,The following statement contains a magic number: foreach (HTMLTagRange bodyDivTagRange in Enumerable.Where(Enumerable.Select(Enumerable.Where(_htmlParser.FindStartTags("div")'                  t => HTMLParser.ClassAttributeValueHas(t' "body"))' t => _htmlParser.CreateTagRange(t))' r => r != null))              {                  foreach (HTMLTag quoteLinkTag in Enumerable.Where(_htmlParser.FindStartTags(bodyDivTagRange' "a")'                      t => new Regex(@"^/[0-9a-zA-Z+$_\u0080-\uFFFF]{1'58}/res/\d+\.html#\d+$").IsMatch(t.GetAttributeValueOrEmpty("href"))))                  {                      HTMLAttribute attribute = quoteLinkTag.GetAttribute("href");                      string href = attribute.Value.Remove(attribute.Value.IndexOf('#'));                      string[] urlSplit = href.Split(new[] { '/' }' StringSplitOptions.RemoveEmptyEntries);                      if ((urlSplit[0] == GetBoardName() && urlSplit[2] == GetThreadID()) || (!interBoardAutoFollow && GetBoardName() != urlSplit[0])) continue;                      crossLinks.Add(General.GetAbsoluteURL(_url' href));                      if (replaceList != null) {                          replaceList.Add(                              new ReplaceInfo {                                  Offset = attribute.Offset'                                  Length = attribute.Length'                                  Type = ReplaceType.QuoteLinkHref'                                  Tag = href.Replace("/res"' "").Replace(".html"' "").Insert(0' GetSiteName())'                                  Value = attribute.Value                              });                      }                  }              }
Magic Number,JDP,KrautchanSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetThreadName,The following statement contains a magic number: if (threadName.StartsWith("thread-"' StringComparison.OrdinalIgnoreCase)) {                  threadName = threadName.Substring(7);              }
Magic Number,JDP,FuukaSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetImages,The following statement contains a magic number: foreach (HTMLTagRange postTagRange in Enumerable.Where(Enumerable.Select(Enumerable.Where(_htmlParser.FindStartTags("td"' "div")'                  t => new Regex("^p\\d+$").IsMatch(t.GetAttributeValueOrEmpty("id")))' t => _htmlParser.CreateTagRange(t))' r => r != null))              {                  HTMLTagRange labelTagRange = _htmlParser.CreateTagRange(_htmlParser.FindStartTag(postTagRange' "label"));                  if (labelTagRange == null) continue;                    HTMLTagRange imageLinkTagRange = _htmlParser.CreateTagRange(Enumerable.FirstOrDefault(Enumerable.Where(_htmlParser.FindStartTags(postTagRange' "a")' IsImage)));                  if (imageLinkTagRange == null) continue;                    HTMLTag thumbImageTag = _htmlParser.FindStartTag(imageLinkTagRange' "img");                  if (thumbImageTag == null) continue;                    string imageURL = imageLinkTagRange.StartTag.GetAttributeValue("href");                  if (imageURL == null) continue;                    string thumbURL = thumbImageTag.GetAttributeValue("src");                  if (thumbURL == null) continue;                    HTMLTagRange fileInfoTagRange = _htmlParser.CreateTagRange(_htmlParser.FindStartTag(labelTagRange.EndTag' null' "span"));                  if (fileInfoTagRange == null) continue;                    string[] fileInfoSplit = _htmlParser.GetInnerHTML(fileInfoTagRange).Split(new[] { ''' }' 3);                  if (fileInfoSplit.Length < 3) continue;                                    string originalFileName;                  string imageMD5 = null;                  string fileInfo = fileInfoSplit[2].Trim();                  if (fileInfo.EndsWith("-->")) {                      int hashIndex = fileInfo.LastIndexOf("<!--"' StringComparison.Ordinal);                      originalFileName = fileInfo.Remove(hashIndex).Trim();                      imageMD5 = fileInfo.Substring(hashIndex).Replace("<!--"' "").Replace("-->"' "").Trim();                  }                  else {                      originalFileName = fileInfo;                      HTMLTag similarImageLinkStartTag = Enumerable.FirstOrDefault(Enumerable.Where(                          _htmlParser.FindStartTags(fileInfoTagRange.EndTag' imageLinkTagRange.StartTag' "a")' t => t.GetAttributeValueOrEmpty("href").Contains("/image/")));                      if (similarImageLinkStartTag != null) {                          string[] hrefSplit = similarImageLinkStartTag.GetAttributeValueOrEmpty("href").Split('/');                          imageMD5 = hrefSplit[hrefSplit.Length - 1].Replace('-'' '+').Replace('_'' '/');                          imageMD5 = imageMD5.PadRight(imageMD5.Length + (4 - imageMD5.Length % 4) % 4' '=');                      }                  }                    HTMLTagRange posterNameSpanTagRange = _htmlParser.CreateTagRange(Enumerable.FirstOrDefault(Enumerable.Where(                      _htmlParser.FindStartTags(labelTagRange' "span")' t => HTMLParser.ClassAttributeValueHas(t' "postername"))));                    HTMLTagRange posterTripSpanTagRange = _htmlParser.CreateTagRange(Enumerable.FirstOrDefault(Enumerable.Where(                      _htmlParser.FindStartTags(labelTagRange' "span")' t => HTMLParser.ClassAttributeValueHas(t' "postertrip"))));                                        string poster = String.Empty;                  if (posterNameSpanTagRange != null) {                      string name = _htmlParser.GetInnerHTML(_htmlParser.CreateTagRange(_htmlParser.FindStartTag(posterNameSpanTagRange' "a")) ?? posterNameSpanTagRange).Replace("\r"' "").Replace("\n"' "").Replace("&nbsp;"' "").Trim();                      if (posterTripSpanTagRange != null) {                          poster = name + _htmlParser.GetInnerHTML(posterTripSpanTagRange).Replace("&nbsp;"' "").Trim();                      }                      else if (name != "Anonymous") {                          poster = name;                      }                  }                    ImageInfo image = new ImageInfo {                      URL = General.GetAbsoluteURL(_url' HttpUtility.HtmlDecode(imageURL))'                      Referer = _url'                      OriginalFileName = General.CleanFileName(HttpUtility.HtmlDecode(originalFileName))'                      HashType = imageMD5 != null ? HashType.MD5 : HashType.None'                      Hash = General.TryBase64Decode(imageMD5)'                      Poster = General.CleanFileName(HttpUtility.HtmlDecode(poster))                  };                  if (image.URL.Length == 0 || image.FileName.Length == 0) continue;                    ThumbnailInfo thumb = new ThumbnailInfo {                      URL = General.GetAbsoluteURL(_url' HttpUtility.HtmlDecode(thumbURL))'                      Referer = _url                  };                  if (thumb.URL == null || thumb.FileName.Length == 0) continue;                    if (replaceList != null) {                      HTMLAttribute attribute;                        attribute = imageLinkTagRange.StartTag.GetAttribute("href");                      if (attribute != null) {                          replaceList.Add(                              new ReplaceInfo {                                  Offset = attribute.Offset'                                  Length = attribute.Length'                                  Type = ReplaceType.ImageLinkHref'                                  Tag = image.FileName                              });                      }                        attribute = thumbImageTag.GetAttribute("src");                      if (attribute != null) {                          replaceList.Add(                              new ReplaceInfo {                                  Offset = attribute.Offset'                                  Length = attribute.Length'                                  Type = ReplaceType.ImageSrc'                                  Tag = thumb.FileName                              });                      }                  }                    imageList.Add(image);                  thumbnailList.Add(thumb);              }
Magic Number,JDP,FuukaSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetImages,The following statement contains a magic number: foreach (HTMLTagRange postTagRange in Enumerable.Where(Enumerable.Select(Enumerable.Where(_htmlParser.FindStartTags("td"' "div")'                  t => new Regex("^p\\d+$").IsMatch(t.GetAttributeValueOrEmpty("id")))' t => _htmlParser.CreateTagRange(t))' r => r != null))              {                  HTMLTagRange labelTagRange = _htmlParser.CreateTagRange(_htmlParser.FindStartTag(postTagRange' "label"));                  if (labelTagRange == null) continue;                    HTMLTagRange imageLinkTagRange = _htmlParser.CreateTagRange(Enumerable.FirstOrDefault(Enumerable.Where(_htmlParser.FindStartTags(postTagRange' "a")' IsImage)));                  if (imageLinkTagRange == null) continue;                    HTMLTag thumbImageTag = _htmlParser.FindStartTag(imageLinkTagRange' "img");                  if (thumbImageTag == null) continue;                    string imageURL = imageLinkTagRange.StartTag.GetAttributeValue("href");                  if (imageURL == null) continue;                    string thumbURL = thumbImageTag.GetAttributeValue("src");                  if (thumbURL == null) continue;                    HTMLTagRange fileInfoTagRange = _htmlParser.CreateTagRange(_htmlParser.FindStartTag(labelTagRange.EndTag' null' "span"));                  if (fileInfoTagRange == null) continue;                    string[] fileInfoSplit = _htmlParser.GetInnerHTML(fileInfoTagRange).Split(new[] { ''' }' 3);                  if (fileInfoSplit.Length < 3) continue;                                    string originalFileName;                  string imageMD5 = null;                  string fileInfo = fileInfoSplit[2].Trim();                  if (fileInfo.EndsWith("-->")) {                      int hashIndex = fileInfo.LastIndexOf("<!--"' StringComparison.Ordinal);                      originalFileName = fileInfo.Remove(hashIndex).Trim();                      imageMD5 = fileInfo.Substring(hashIndex).Replace("<!--"' "").Replace("-->"' "").Trim();                  }                  else {                      originalFileName = fileInfo;                      HTMLTag similarImageLinkStartTag = Enumerable.FirstOrDefault(Enumerable.Where(                          _htmlParser.FindStartTags(fileInfoTagRange.EndTag' imageLinkTagRange.StartTag' "a")' t => t.GetAttributeValueOrEmpty("href").Contains("/image/")));                      if (similarImageLinkStartTag != null) {                          string[] hrefSplit = similarImageLinkStartTag.GetAttributeValueOrEmpty("href").Split('/');                          imageMD5 = hrefSplit[hrefSplit.Length - 1].Replace('-'' '+').Replace('_'' '/');                          imageMD5 = imageMD5.PadRight(imageMD5.Length + (4 - imageMD5.Length % 4) % 4' '=');                      }                  }                    HTMLTagRange posterNameSpanTagRange = _htmlParser.CreateTagRange(Enumerable.FirstOrDefault(Enumerable.Where(                      _htmlParser.FindStartTags(labelTagRange' "span")' t => HTMLParser.ClassAttributeValueHas(t' "postername"))));                    HTMLTagRange posterTripSpanTagRange = _htmlParser.CreateTagRange(Enumerable.FirstOrDefault(Enumerable.Where(                      _htmlParser.FindStartTags(labelTagRange' "span")' t => HTMLParser.ClassAttributeValueHas(t' "postertrip"))));                                        string poster = String.Empty;                  if (posterNameSpanTagRange != null) {                      string name = _htmlParser.GetInnerHTML(_htmlParser.CreateTagRange(_htmlParser.FindStartTag(posterNameSpanTagRange' "a")) ?? posterNameSpanTagRange).Replace("\r"' "").Replace("\n"' "").Replace("&nbsp;"' "").Trim();                      if (posterTripSpanTagRange != null) {                          poster = name + _htmlParser.GetInnerHTML(posterTripSpanTagRange).Replace("&nbsp;"' "").Trim();                      }                      else if (name != "Anonymous") {                          poster = name;                      }                  }                    ImageInfo image = new ImageInfo {                      URL = General.GetAbsoluteURL(_url' HttpUtility.HtmlDecode(imageURL))'                      Referer = _url'                      OriginalFileName = General.CleanFileName(HttpUtility.HtmlDecode(originalFileName))'                      HashType = imageMD5 != null ? HashType.MD5 : HashType.None'                      Hash = General.TryBase64Decode(imageMD5)'                      Poster = General.CleanFileName(HttpUtility.HtmlDecode(poster))                  };                  if (image.URL.Length == 0 || image.FileName.Length == 0) continue;                    ThumbnailInfo thumb = new ThumbnailInfo {                      URL = General.GetAbsoluteURL(_url' HttpUtility.HtmlDecode(thumbURL))'                      Referer = _url                  };                  if (thumb.URL == null || thumb.FileName.Length == 0) continue;                    if (replaceList != null) {                      HTMLAttribute attribute;                        attribute = imageLinkTagRange.StartTag.GetAttribute("href");                      if (attribute != null) {                          replaceList.Add(                              new ReplaceInfo {                                  Offset = attribute.Offset'                                  Length = attribute.Length'                                  Type = ReplaceType.ImageLinkHref'                                  Tag = image.FileName                              });                      }                        attribute = thumbImageTag.GetAttribute("src");                      if (attribute != null) {                          replaceList.Add(                              new ReplaceInfo {                                  Offset = attribute.Offset'                                  Length = attribute.Length'                                  Type = ReplaceType.ImageSrc'                                  Tag = thumb.FileName                              });                      }                  }                    imageList.Add(image);                  thumbnailList.Add(thumb);              }
Magic Number,JDP,FuukaSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetImages,The following statement contains a magic number: foreach (HTMLTagRange postTagRange in Enumerable.Where(Enumerable.Select(Enumerable.Where(_htmlParser.FindStartTags("td"' "div")'                  t => new Regex("^p\\d+$").IsMatch(t.GetAttributeValueOrEmpty("id")))' t => _htmlParser.CreateTagRange(t))' r => r != null))              {                  HTMLTagRange labelTagRange = _htmlParser.CreateTagRange(_htmlParser.FindStartTag(postTagRange' "label"));                  if (labelTagRange == null) continue;                    HTMLTagRange imageLinkTagRange = _htmlParser.CreateTagRange(Enumerable.FirstOrDefault(Enumerable.Where(_htmlParser.FindStartTags(postTagRange' "a")' IsImage)));                  if (imageLinkTagRange == null) continue;                    HTMLTag thumbImageTag = _htmlParser.FindStartTag(imageLinkTagRange' "img");                  if (thumbImageTag == null) continue;                    string imageURL = imageLinkTagRange.StartTag.GetAttributeValue("href");                  if (imageURL == null) continue;                    string thumbURL = thumbImageTag.GetAttributeValue("src");                  if (thumbURL == null) continue;                    HTMLTagRange fileInfoTagRange = _htmlParser.CreateTagRange(_htmlParser.FindStartTag(labelTagRange.EndTag' null' "span"));                  if (fileInfoTagRange == null) continue;                    string[] fileInfoSplit = _htmlParser.GetInnerHTML(fileInfoTagRange).Split(new[] { ''' }' 3);                  if (fileInfoSplit.Length < 3) continue;                                    string originalFileName;                  string imageMD5 = null;                  string fileInfo = fileInfoSplit[2].Trim();                  if (fileInfo.EndsWith("-->")) {                      int hashIndex = fileInfo.LastIndexOf("<!--"' StringComparison.Ordinal);                      originalFileName = fileInfo.Remove(hashIndex).Trim();                      imageMD5 = fileInfo.Substring(hashIndex).Replace("<!--"' "").Replace("-->"' "").Trim();                  }                  else {                      originalFileName = fileInfo;                      HTMLTag similarImageLinkStartTag = Enumerable.FirstOrDefault(Enumerable.Where(                          _htmlParser.FindStartTags(fileInfoTagRange.EndTag' imageLinkTagRange.StartTag' "a")' t => t.GetAttributeValueOrEmpty("href").Contains("/image/")));                      if (similarImageLinkStartTag != null) {                          string[] hrefSplit = similarImageLinkStartTag.GetAttributeValueOrEmpty("href").Split('/');                          imageMD5 = hrefSplit[hrefSplit.Length - 1].Replace('-'' '+').Replace('_'' '/');                          imageMD5 = imageMD5.PadRight(imageMD5.Length + (4 - imageMD5.Length % 4) % 4' '=');                      }                  }                    HTMLTagRange posterNameSpanTagRange = _htmlParser.CreateTagRange(Enumerable.FirstOrDefault(Enumerable.Where(                      _htmlParser.FindStartTags(labelTagRange' "span")' t => HTMLParser.ClassAttributeValueHas(t' "postername"))));                    HTMLTagRange posterTripSpanTagRange = _htmlParser.CreateTagRange(Enumerable.FirstOrDefault(Enumerable.Where(                      _htmlParser.FindStartTags(labelTagRange' "span")' t => HTMLParser.ClassAttributeValueHas(t' "postertrip"))));                                        string poster = String.Empty;                  if (posterNameSpanTagRange != null) {                      string name = _htmlParser.GetInnerHTML(_htmlParser.CreateTagRange(_htmlParser.FindStartTag(posterNameSpanTagRange' "a")) ?? posterNameSpanTagRange).Replace("\r"' "").Replace("\n"' "").Replace("&nbsp;"' "").Trim();                      if (posterTripSpanTagRange != null) {                          poster = name + _htmlParser.GetInnerHTML(posterTripSpanTagRange).Replace("&nbsp;"' "").Trim();                      }                      else if (name != "Anonymous") {                          poster = name;                      }                  }                    ImageInfo image = new ImageInfo {                      URL = General.GetAbsoluteURL(_url' HttpUtility.HtmlDecode(imageURL))'                      Referer = _url'                      OriginalFileName = General.CleanFileName(HttpUtility.HtmlDecode(originalFileName))'                      HashType = imageMD5 != null ? HashType.MD5 : HashType.None'                      Hash = General.TryBase64Decode(imageMD5)'                      Poster = General.CleanFileName(HttpUtility.HtmlDecode(poster))                  };                  if (image.URL.Length == 0 || image.FileName.Length == 0) continue;                    ThumbnailInfo thumb = new ThumbnailInfo {                      URL = General.GetAbsoluteURL(_url' HttpUtility.HtmlDecode(thumbURL))'                      Referer = _url                  };                  if (thumb.URL == null || thumb.FileName.Length == 0) continue;                    if (replaceList != null) {                      HTMLAttribute attribute;                        attribute = imageLinkTagRange.StartTag.GetAttribute("href");                      if (attribute != null) {                          replaceList.Add(                              new ReplaceInfo {                                  Offset = attribute.Offset'                                  Length = attribute.Length'                                  Type = ReplaceType.ImageLinkHref'                                  Tag = image.FileName                              });                      }                        attribute = thumbImageTag.GetAttribute("src");                      if (attribute != null) {                          replaceList.Add(                              new ReplaceInfo {                                  Offset = attribute.Offset'                                  Length = attribute.Length'                                  Type = ReplaceType.ImageSrc'                                  Tag = thumb.FileName                              });                      }                  }                    imageList.Add(image);                  thumbnailList.Add(thumb);              }
Magic Number,JDP,FuukaSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetImages,The following statement contains a magic number: foreach (HTMLTagRange postTagRange in Enumerable.Where(Enumerable.Select(Enumerable.Where(_htmlParser.FindStartTags("td"' "div")'                  t => new Regex("^p\\d+$").IsMatch(t.GetAttributeValueOrEmpty("id")))' t => _htmlParser.CreateTagRange(t))' r => r != null))              {                  HTMLTagRange labelTagRange = _htmlParser.CreateTagRange(_htmlParser.FindStartTag(postTagRange' "label"));                  if (labelTagRange == null) continue;                    HTMLTagRange imageLinkTagRange = _htmlParser.CreateTagRange(Enumerable.FirstOrDefault(Enumerable.Where(_htmlParser.FindStartTags(postTagRange' "a")' IsImage)));                  if (imageLinkTagRange == null) continue;                    HTMLTag thumbImageTag = _htmlParser.FindStartTag(imageLinkTagRange' "img");                  if (thumbImageTag == null) continue;                    string imageURL = imageLinkTagRange.StartTag.GetAttributeValue("href");                  if (imageURL == null) continue;                    string thumbURL = thumbImageTag.GetAttributeValue("src");                  if (thumbURL == null) continue;                    HTMLTagRange fileInfoTagRange = _htmlParser.CreateTagRange(_htmlParser.FindStartTag(labelTagRange.EndTag' null' "span"));                  if (fileInfoTagRange == null) continue;                    string[] fileInfoSplit = _htmlParser.GetInnerHTML(fileInfoTagRange).Split(new[] { ''' }' 3);                  if (fileInfoSplit.Length < 3) continue;                                    string originalFileName;                  string imageMD5 = null;                  string fileInfo = fileInfoSplit[2].Trim();                  if (fileInfo.EndsWith("-->")) {                      int hashIndex = fileInfo.LastIndexOf("<!--"' StringComparison.Ordinal);                      originalFileName = fileInfo.Remove(hashIndex).Trim();                      imageMD5 = fileInfo.Substring(hashIndex).Replace("<!--"' "").Replace("-->"' "").Trim();                  }                  else {                      originalFileName = fileInfo;                      HTMLTag similarImageLinkStartTag = Enumerable.FirstOrDefault(Enumerable.Where(                          _htmlParser.FindStartTags(fileInfoTagRange.EndTag' imageLinkTagRange.StartTag' "a")' t => t.GetAttributeValueOrEmpty("href").Contains("/image/")));                      if (similarImageLinkStartTag != null) {                          string[] hrefSplit = similarImageLinkStartTag.GetAttributeValueOrEmpty("href").Split('/');                          imageMD5 = hrefSplit[hrefSplit.Length - 1].Replace('-'' '+').Replace('_'' '/');                          imageMD5 = imageMD5.PadRight(imageMD5.Length + (4 - imageMD5.Length % 4) % 4' '=');                      }                  }                    HTMLTagRange posterNameSpanTagRange = _htmlParser.CreateTagRange(Enumerable.FirstOrDefault(Enumerable.Where(                      _htmlParser.FindStartTags(labelTagRange' "span")' t => HTMLParser.ClassAttributeValueHas(t' "postername"))));                    HTMLTagRange posterTripSpanTagRange = _htmlParser.CreateTagRange(Enumerable.FirstOrDefault(Enumerable.Where(                      _htmlParser.FindStartTags(labelTagRange' "span")' t => HTMLParser.ClassAttributeValueHas(t' "postertrip"))));                                        string poster = String.Empty;                  if (posterNameSpanTagRange != null) {                      string name = _htmlParser.GetInnerHTML(_htmlParser.CreateTagRange(_htmlParser.FindStartTag(posterNameSpanTagRange' "a")) ?? posterNameSpanTagRange).Replace("\r"' "").Replace("\n"' "").Replace("&nbsp;"' "").Trim();                      if (posterTripSpanTagRange != null) {                          poster = name + _htmlParser.GetInnerHTML(posterTripSpanTagRange).Replace("&nbsp;"' "").Trim();                      }                      else if (name != "Anonymous") {                          poster = name;                      }                  }                    ImageInfo image = new ImageInfo {                      URL = General.GetAbsoluteURL(_url' HttpUtility.HtmlDecode(imageURL))'                      Referer = _url'                      OriginalFileName = General.CleanFileName(HttpUtility.HtmlDecode(originalFileName))'                      HashType = imageMD5 != null ? HashType.MD5 : HashType.None'                      Hash = General.TryBase64Decode(imageMD5)'                      Poster = General.CleanFileName(HttpUtility.HtmlDecode(poster))                  };                  if (image.URL.Length == 0 || image.FileName.Length == 0) continue;                    ThumbnailInfo thumb = new ThumbnailInfo {                      URL = General.GetAbsoluteURL(_url' HttpUtility.HtmlDecode(thumbURL))'                      Referer = _url                  };                  if (thumb.URL == null || thumb.FileName.Length == 0) continue;                    if (replaceList != null) {                      HTMLAttribute attribute;                        attribute = imageLinkTagRange.StartTag.GetAttribute("href");                      if (attribute != null) {                          replaceList.Add(                              new ReplaceInfo {                                  Offset = attribute.Offset'                                  Length = attribute.Length'                                  Type = ReplaceType.ImageLinkHref'                                  Tag = image.FileName                              });                      }                        attribute = thumbImageTag.GetAttribute("src");                      if (attribute != null) {                          replaceList.Add(                              new ReplaceInfo {                                  Offset = attribute.Offset'                                  Length = attribute.Length'                                  Type = ReplaceType.ImageSrc'                                  Tag = thumb.FileName                              });                      }                  }                    imageList.Add(image);                  thumbnailList.Add(thumb);              }
Magic Number,JDP,FuukaSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetImages,The following statement contains a magic number: foreach (HTMLTagRange postTagRange in Enumerable.Where(Enumerable.Select(Enumerable.Where(_htmlParser.FindStartTags("td"' "div")'                  t => new Regex("^p\\d+$").IsMatch(t.GetAttributeValueOrEmpty("id")))' t => _htmlParser.CreateTagRange(t))' r => r != null))              {                  HTMLTagRange labelTagRange = _htmlParser.CreateTagRange(_htmlParser.FindStartTag(postTagRange' "label"));                  if (labelTagRange == null) continue;                    HTMLTagRange imageLinkTagRange = _htmlParser.CreateTagRange(Enumerable.FirstOrDefault(Enumerable.Where(_htmlParser.FindStartTags(postTagRange' "a")' IsImage)));                  if (imageLinkTagRange == null) continue;                    HTMLTag thumbImageTag = _htmlParser.FindStartTag(imageLinkTagRange' "img");                  if (thumbImageTag == null) continue;                    string imageURL = imageLinkTagRange.StartTag.GetAttributeValue("href");                  if (imageURL == null) continue;                    string thumbURL = thumbImageTag.GetAttributeValue("src");                  if (thumbURL == null) continue;                    HTMLTagRange fileInfoTagRange = _htmlParser.CreateTagRange(_htmlParser.FindStartTag(labelTagRange.EndTag' null' "span"));                  if (fileInfoTagRange == null) continue;                    string[] fileInfoSplit = _htmlParser.GetInnerHTML(fileInfoTagRange).Split(new[] { ''' }' 3);                  if (fileInfoSplit.Length < 3) continue;                                    string originalFileName;                  string imageMD5 = null;                  string fileInfo = fileInfoSplit[2].Trim();                  if (fileInfo.EndsWith("-->")) {                      int hashIndex = fileInfo.LastIndexOf("<!--"' StringComparison.Ordinal);                      originalFileName = fileInfo.Remove(hashIndex).Trim();                      imageMD5 = fileInfo.Substring(hashIndex).Replace("<!--"' "").Replace("-->"' "").Trim();                  }                  else {                      originalFileName = fileInfo;                      HTMLTag similarImageLinkStartTag = Enumerable.FirstOrDefault(Enumerable.Where(                          _htmlParser.FindStartTags(fileInfoTagRange.EndTag' imageLinkTagRange.StartTag' "a")' t => t.GetAttributeValueOrEmpty("href").Contains("/image/")));                      if (similarImageLinkStartTag != null) {                          string[] hrefSplit = similarImageLinkStartTag.GetAttributeValueOrEmpty("href").Split('/');                          imageMD5 = hrefSplit[hrefSplit.Length - 1].Replace('-'' '+').Replace('_'' '/');                          imageMD5 = imageMD5.PadRight(imageMD5.Length + (4 - imageMD5.Length % 4) % 4' '=');                      }                  }                    HTMLTagRange posterNameSpanTagRange = _htmlParser.CreateTagRange(Enumerable.FirstOrDefault(Enumerable.Where(                      _htmlParser.FindStartTags(labelTagRange' "span")' t => HTMLParser.ClassAttributeValueHas(t' "postername"))));                    HTMLTagRange posterTripSpanTagRange = _htmlParser.CreateTagRange(Enumerable.FirstOrDefault(Enumerable.Where(                      _htmlParser.FindStartTags(labelTagRange' "span")' t => HTMLParser.ClassAttributeValueHas(t' "postertrip"))));                                        string poster = String.Empty;                  if (posterNameSpanTagRange != null) {                      string name = _htmlParser.GetInnerHTML(_htmlParser.CreateTagRange(_htmlParser.FindStartTag(posterNameSpanTagRange' "a")) ?? posterNameSpanTagRange).Replace("\r"' "").Replace("\n"' "").Replace("&nbsp;"' "").Trim();                      if (posterTripSpanTagRange != null) {                          poster = name + _htmlParser.GetInnerHTML(posterTripSpanTagRange).Replace("&nbsp;"' "").Trim();                      }                      else if (name != "Anonymous") {                          poster = name;                      }                  }                    ImageInfo image = new ImageInfo {                      URL = General.GetAbsoluteURL(_url' HttpUtility.HtmlDecode(imageURL))'                      Referer = _url'                      OriginalFileName = General.CleanFileName(HttpUtility.HtmlDecode(originalFileName))'                      HashType = imageMD5 != null ? HashType.MD5 : HashType.None'                      Hash = General.TryBase64Decode(imageMD5)'                      Poster = General.CleanFileName(HttpUtility.HtmlDecode(poster))                  };                  if (image.URL.Length == 0 || image.FileName.Length == 0) continue;                    ThumbnailInfo thumb = new ThumbnailInfo {                      URL = General.GetAbsoluteURL(_url' HttpUtility.HtmlDecode(thumbURL))'                      Referer = _url                  };                  if (thumb.URL == null || thumb.FileName.Length == 0) continue;                    if (replaceList != null) {                      HTMLAttribute attribute;                        attribute = imageLinkTagRange.StartTag.GetAttribute("href");                      if (attribute != null) {                          replaceList.Add(                              new ReplaceInfo {                                  Offset = attribute.Offset'                                  Length = attribute.Length'                                  Type = ReplaceType.ImageLinkHref'                                  Tag = image.FileName                              });                      }                        attribute = thumbImageTag.GetAttribute("src");                      if (attribute != null) {                          replaceList.Add(                              new ReplaceInfo {                                  Offset = attribute.Offset'                                  Length = attribute.Length'                                  Type = ReplaceType.ImageSrc'                                  Tag = thumb.FileName                              });                      }                  }                    imageList.Add(image);                  thumbnailList.Add(thumb);              }
Magic Number,JDP,FuukaSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetImages,The following statement contains a magic number: foreach (HTMLTagRange postTagRange in Enumerable.Where(Enumerable.Select(Enumerable.Where(_htmlParser.FindStartTags("td"' "div")'                  t => new Regex("^p\\d+$").IsMatch(t.GetAttributeValueOrEmpty("id")))' t => _htmlParser.CreateTagRange(t))' r => r != null))              {                  HTMLTagRange labelTagRange = _htmlParser.CreateTagRange(_htmlParser.FindStartTag(postTagRange' "label"));                  if (labelTagRange == null) continue;                    HTMLTagRange imageLinkTagRange = _htmlParser.CreateTagRange(Enumerable.FirstOrDefault(Enumerable.Where(_htmlParser.FindStartTags(postTagRange' "a")' IsImage)));                  if (imageLinkTagRange == null) continue;                    HTMLTag thumbImageTag = _htmlParser.FindStartTag(imageLinkTagRange' "img");                  if (thumbImageTag == null) continue;                    string imageURL = imageLinkTagRange.StartTag.GetAttributeValue("href");                  if (imageURL == null) continue;                    string thumbURL = thumbImageTag.GetAttributeValue("src");                  if (thumbURL == null) continue;                    HTMLTagRange fileInfoTagRange = _htmlParser.CreateTagRange(_htmlParser.FindStartTag(labelTagRange.EndTag' null' "span"));                  if (fileInfoTagRange == null) continue;                    string[] fileInfoSplit = _htmlParser.GetInnerHTML(fileInfoTagRange).Split(new[] { ''' }' 3);                  if (fileInfoSplit.Length < 3) continue;                                    string originalFileName;                  string imageMD5 = null;                  string fileInfo = fileInfoSplit[2].Trim();                  if (fileInfo.EndsWith("-->")) {                      int hashIndex = fileInfo.LastIndexOf("<!--"' StringComparison.Ordinal);                      originalFileName = fileInfo.Remove(hashIndex).Trim();                      imageMD5 = fileInfo.Substring(hashIndex).Replace("<!--"' "").Replace("-->"' "").Trim();                  }                  else {                      originalFileName = fileInfo;                      HTMLTag similarImageLinkStartTag = Enumerable.FirstOrDefault(Enumerable.Where(                          _htmlParser.FindStartTags(fileInfoTagRange.EndTag' imageLinkTagRange.StartTag' "a")' t => t.GetAttributeValueOrEmpty("href").Contains("/image/")));                      if (similarImageLinkStartTag != null) {                          string[] hrefSplit = similarImageLinkStartTag.GetAttributeValueOrEmpty("href").Split('/');                          imageMD5 = hrefSplit[hrefSplit.Length - 1].Replace('-'' '+').Replace('_'' '/');                          imageMD5 = imageMD5.PadRight(imageMD5.Length + (4 - imageMD5.Length % 4) % 4' '=');                      }                  }                    HTMLTagRange posterNameSpanTagRange = _htmlParser.CreateTagRange(Enumerable.FirstOrDefault(Enumerable.Where(                      _htmlParser.FindStartTags(labelTagRange' "span")' t => HTMLParser.ClassAttributeValueHas(t' "postername"))));                    HTMLTagRange posterTripSpanTagRange = _htmlParser.CreateTagRange(Enumerable.FirstOrDefault(Enumerable.Where(                      _htmlParser.FindStartTags(labelTagRange' "span")' t => HTMLParser.ClassAttributeValueHas(t' "postertrip"))));                                        string poster = String.Empty;                  if (posterNameSpanTagRange != null) {                      string name = _htmlParser.GetInnerHTML(_htmlParser.CreateTagRange(_htmlParser.FindStartTag(posterNameSpanTagRange' "a")) ?? posterNameSpanTagRange).Replace("\r"' "").Replace("\n"' "").Replace("&nbsp;"' "").Trim();                      if (posterTripSpanTagRange != null) {                          poster = name + _htmlParser.GetInnerHTML(posterTripSpanTagRange).Replace("&nbsp;"' "").Trim();                      }                      else if (name != "Anonymous") {                          poster = name;                      }                  }                    ImageInfo image = new ImageInfo {                      URL = General.GetAbsoluteURL(_url' HttpUtility.HtmlDecode(imageURL))'                      Referer = _url'                      OriginalFileName = General.CleanFileName(HttpUtility.HtmlDecode(originalFileName))'                      HashType = imageMD5 != null ? HashType.MD5 : HashType.None'                      Hash = General.TryBase64Decode(imageMD5)'                      Poster = General.CleanFileName(HttpUtility.HtmlDecode(poster))                  };                  if (image.URL.Length == 0 || image.FileName.Length == 0) continue;                    ThumbnailInfo thumb = new ThumbnailInfo {                      URL = General.GetAbsoluteURL(_url' HttpUtility.HtmlDecode(thumbURL))'                      Referer = _url                  };                  if (thumb.URL == null || thumb.FileName.Length == 0) continue;                    if (replaceList != null) {                      HTMLAttribute attribute;                        attribute = imageLinkTagRange.StartTag.GetAttribute("href");                      if (attribute != null) {                          replaceList.Add(                              new ReplaceInfo {                                  Offset = attribute.Offset'                                  Length = attribute.Length'                                  Type = ReplaceType.ImageLinkHref'                                  Tag = image.FileName                              });                      }                        attribute = thumbImageTag.GetAttribute("src");                      if (attribute != null) {                          replaceList.Add(                              new ReplaceInfo {                                  Offset = attribute.Offset'                                  Length = attribute.Length'                                  Type = ReplaceType.ImageSrc'                                  Tag = thumb.FileName                              });                      }                  }                    imageList.Add(image);                  thumbnailList.Add(thumb);              }
Magic Number,JDP,FoolFuukaSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetImages,The following statement contains a magic number: foreach (HTMLTagRange postTagRange in Enumerable.Where(Enumerable.Select(Enumerable.Where(_htmlParser.FindStartTags("article")'                  t => HTMLParser.ClassAttributeValueHas(t' "has_image") || (HTMLParser.ClassAttributeValueHas(t' "thread") && t.GetAttribute("id") != null))' t => _htmlParser.CreateTagRange(t))' r => r != null))              {                  HTMLTagRange imageLinkTagRange = _htmlParser.CreateTagRange(Enumerable.FirstOrDefault(Enumerable.Where(                      _htmlParser.FindStartTags(postTagRange' "a")' t => HTMLParser.ClassAttributeValueHas(t' "thread_image_link"))));                  if (imageLinkTagRange == null) continue;                                    HTMLTag thumbImageTag = _htmlParser.FindStartTag(imageLinkTagRange' "img");                  if (thumbImageTag == null) continue;                    string imageURL = imageLinkTagRange.StartTag.GetAttributeValue("href");                  if (imageURL == null) continue;                    string thumbURL = thumbImageTag.GetAttributeValue("src");                  if (thumbURL == null) continue;                                    HTMLTagRange postFileTagRange = _htmlParser.CreateTagRange(Enumerable.FirstOrDefault(Enumerable.Where(                      _htmlParser.FindStartTags(postTagRange' "div")' t => HTMLParser.ClassAttributeValueHas(t' "post_file"))));                  if (postFileTagRange == null) continue;                    string originalFileName = String.Empty;                  HTMLTagRange fileNameLinkTagRange = _htmlParser.CreateTagRange(Enumerable.FirstOrDefault(Enumerable.Where(                      _htmlParser.FindStartTags(postFileTagRange' "a")' t => HTMLParser.ClassAttributeValueHas(t' "post_file_filename"))));                  if (fileNameLinkTagRange == null) {                      HTMLTagRange fileNameSpanTagRange = _htmlParser.CreateTagRange(Enumerable.FirstOrDefault(Enumerable.Where(                          _htmlParser.FindStartTags(postFileTagRange' "span")' t => HTMLParser.ClassAttributeValueHas(t' "post_file_filename"))));                      if (fileNameSpanTagRange == null) {                          HTMLTag postFileControlsEndTag = _htmlParser.FindCorrespondingEndTag(Enumerable.FirstOrDefault(Enumerable.Where(                              _htmlParser.FindStartTags(postFileTagRange' "span")' t => HTMLParser.ClassAttributeValueHas(t' "post_file_controls"))));                          HTMLTag postFileMetadataStartTag = Enumerable.FirstOrDefault(Enumerable.Where(                              _htmlParser.FindStartTags(postFileTagRange' "span")' t => HTMLParser.ClassAttributeValueHas(t' "post_file_metadata")));                          if (postFileControlsEndTag != null && postFileMetadataStartTag != null) {                              originalFileName = _htmlParser.GetInnerHTML(postFileControlsEndTag' postFileMetadataStartTag).Trim().TrimEnd(''');                          }                          else if (postFileControlsEndTag == null && postFileMetadataStartTag == null) {                              string[] postFileSplit = _htmlParser.GetInnerHTML(postFileTagRange).Split(new[] { ''' }' 3);                              if (postFileSplit.Length == 3) {                                  originalFileName = postFileSplit[2].Trim();                              }                          }                      }                      else {                          originalFileName = fileNameSpanTagRange.StartTag.GetAttributeValue("title") ?? _htmlParser.GetInnerHTML(fileNameSpanTagRange);                      }                  }                  else {                      originalFileName = fileNameLinkTagRange.StartTag.GetAttributeValue("title") ?? _htmlParser.GetInnerHTML(fileNameLinkTagRange);                  }                    string imageMD5 = thumbImageTag.GetAttributeValue("data-md5");                  if (imageMD5 == null) continue;                    HTMLTagRange posterDataSpanTagRange = _htmlParser.CreateTagRange(Enumerable.FirstOrDefault(Enumerable.Where(                      _htmlParser.FindStartTags(postTagRange' "span")' t => HTMLParser.ClassAttributeValueHas(t' "post_poster_data"))));                  if (posterDataSpanTagRange == null) continue;                                    HTMLTagRange authorSpanTagRange = _htmlParser.CreateTagRange(Enumerable.FirstOrDefault(Enumerable.Where(                      _htmlParser.FindStartTags(posterDataSpanTagRange' "span")' t => HTMLParser.ClassAttributeValueHas(t' "post_author"))));                    HTMLTagRange tripcodeSpanTagRange = _htmlParser.CreateTagRange(Enumerable.FirstOrDefault(Enumerable.Where(                      _htmlParser.FindStartTags(posterDataSpanTagRange' "span")' t => HTMLParser.ClassAttributeValueHas(t' "post_tripcode"))));                                        HTMLTagRange idSpanTagRange = _htmlParser.CreateTagRange(Enumerable.FirstOrDefault(Enumerable.Where(                      _htmlParser.FindStartTags(posterDataSpanTagRange' "span")' t => HTMLParser.ClassAttributeValueHas(t' "poster_hash"))));                                        string poster = String.Empty;                  if (idSpanTagRange != null) {                      poster = _htmlParser.GetInnerHTML(idSpanTagRange).Replace("ID:"' "");                  }                  else if (authorSpanTagRange != null) {                      string name = _htmlParser.GetInnerHTML(authorSpanTagRange);                      if (tripcodeSpanTagRange != null && !String.IsNullOrEmpty(_htmlParser.GetInnerHTML(tripcodeSpanTagRange))) {                          poster = name + _htmlParser.GetInnerHTML(tripcodeSpanTagRange);                      }                      else if (name != "Anonymous") {                          poster = name;                      }                  }                                    ImageInfo image = new ImageInfo {                      URL = General.GetAbsoluteURL(_url' HttpUtility.HtmlDecode(imageURL))'                      Referer = _url'                      OriginalFileName = General.CleanFileName(HttpUtility.HtmlDecode(originalFileName))'                      HashType = HashType.MD5'                      Hash = General.TryBase64Decode(imageMD5)'                      Poster = General.CleanFileName(HttpUtility.HtmlDecode(poster))                  };                  if (image.URL.Length == 0 || image.FileName.Length == 0 || image.Hash == null) continue;                    ThumbnailInfo thumb = new ThumbnailInfo {                      URL = General.GetAbsoluteURL(_url' HttpUtility.HtmlDecode(thumbURL))'                      Referer = _url                  };                  if (thumb.URL == null || thumb.FileName.Length == 0) continue;                    if (replaceList != null) {                      HTMLAttribute attribute;                        attribute = imageLinkTagRange.StartTag.GetAttribute("href");                      if (attribute != null) {                          replaceList.Add(                              new ReplaceInfo {                                  Offset = attribute.Offset'                                  Length = attribute.Length'                                  Type = ReplaceType.ImageLinkHref'                                  Tag = image.FileName                              });                      }                        if (fileNameLinkTagRange != null) {                          attribute = fileNameLinkTagRange.StartTag.GetAttribute("href");                          if (attribute != null) {                              replaceList.Add(                                  new ReplaceInfo {                                      Offset = attribute.Offset'                                      Length = attribute.Length'                                      Type = ReplaceType.ImageLinkHref'                                      Tag = image.FileName                                  });                          }                      }                        attribute = thumbImageTag.GetAttribute("src");                      if (attribute != null) {                          replaceList.Add(                              new ReplaceInfo {                                  Offset = attribute.Offset'                                  Length = attribute.Length'                                  Type = ReplaceType.ImageSrc'                                  Tag = thumb.FileName                              });                      }                  }                    imageList.Add(image);                  thumbnailList.Add(thumb);              }
Magic Number,JDP,FoolFuukaSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetImages,The following statement contains a magic number: foreach (HTMLTagRange postTagRange in Enumerable.Where(Enumerable.Select(Enumerable.Where(_htmlParser.FindStartTags("article")'                  t => HTMLParser.ClassAttributeValueHas(t' "has_image") || (HTMLParser.ClassAttributeValueHas(t' "thread") && t.GetAttribute("id") != null))' t => _htmlParser.CreateTagRange(t))' r => r != null))              {                  HTMLTagRange imageLinkTagRange = _htmlParser.CreateTagRange(Enumerable.FirstOrDefault(Enumerable.Where(                      _htmlParser.FindStartTags(postTagRange' "a")' t => HTMLParser.ClassAttributeValueHas(t' "thread_image_link"))));                  if (imageLinkTagRange == null) continue;                                    HTMLTag thumbImageTag = _htmlParser.FindStartTag(imageLinkTagRange' "img");                  if (thumbImageTag == null) continue;                    string imageURL = imageLinkTagRange.StartTag.GetAttributeValue("href");                  if (imageURL == null) continue;                    string thumbURL = thumbImageTag.GetAttributeValue("src");                  if (thumbURL == null) continue;                                    HTMLTagRange postFileTagRange = _htmlParser.CreateTagRange(Enumerable.FirstOrDefault(Enumerable.Where(                      _htmlParser.FindStartTags(postTagRange' "div")' t => HTMLParser.ClassAttributeValueHas(t' "post_file"))));                  if (postFileTagRange == null) continue;                    string originalFileName = String.Empty;                  HTMLTagRange fileNameLinkTagRange = _htmlParser.CreateTagRange(Enumerable.FirstOrDefault(Enumerable.Where(                      _htmlParser.FindStartTags(postFileTagRange' "a")' t => HTMLParser.ClassAttributeValueHas(t' "post_file_filename"))));                  if (fileNameLinkTagRange == null) {                      HTMLTagRange fileNameSpanTagRange = _htmlParser.CreateTagRange(Enumerable.FirstOrDefault(Enumerable.Where(                          _htmlParser.FindStartTags(postFileTagRange' "span")' t => HTMLParser.ClassAttributeValueHas(t' "post_file_filename"))));                      if (fileNameSpanTagRange == null) {                          HTMLTag postFileControlsEndTag = _htmlParser.FindCorrespondingEndTag(Enumerable.FirstOrDefault(Enumerable.Where(                              _htmlParser.FindStartTags(postFileTagRange' "span")' t => HTMLParser.ClassAttributeValueHas(t' "post_file_controls"))));                          HTMLTag postFileMetadataStartTag = Enumerable.FirstOrDefault(Enumerable.Where(                              _htmlParser.FindStartTags(postFileTagRange' "span")' t => HTMLParser.ClassAttributeValueHas(t' "post_file_metadata")));                          if (postFileControlsEndTag != null && postFileMetadataStartTag != null) {                              originalFileName = _htmlParser.GetInnerHTML(postFileControlsEndTag' postFileMetadataStartTag).Trim().TrimEnd(''');                          }                          else if (postFileControlsEndTag == null && postFileMetadataStartTag == null) {                              string[] postFileSplit = _htmlParser.GetInnerHTML(postFileTagRange).Split(new[] { ''' }' 3);                              if (postFileSplit.Length == 3) {                                  originalFileName = postFileSplit[2].Trim();                              }                          }                      }                      else {                          originalFileName = fileNameSpanTagRange.StartTag.GetAttributeValue("title") ?? _htmlParser.GetInnerHTML(fileNameSpanTagRange);                      }                  }                  else {                      originalFileName = fileNameLinkTagRange.StartTag.GetAttributeValue("title") ?? _htmlParser.GetInnerHTML(fileNameLinkTagRange);                  }                    string imageMD5 = thumbImageTag.GetAttributeValue("data-md5");                  if (imageMD5 == null) continue;                    HTMLTagRange posterDataSpanTagRange = _htmlParser.CreateTagRange(Enumerable.FirstOrDefault(Enumerable.Where(                      _htmlParser.FindStartTags(postTagRange' "span")' t => HTMLParser.ClassAttributeValueHas(t' "post_poster_data"))));                  if (posterDataSpanTagRange == null) continue;                                    HTMLTagRange authorSpanTagRange = _htmlParser.CreateTagRange(Enumerable.FirstOrDefault(Enumerable.Where(                      _htmlParser.FindStartTags(posterDataSpanTagRange' "span")' t => HTMLParser.ClassAttributeValueHas(t' "post_author"))));                    HTMLTagRange tripcodeSpanTagRange = _htmlParser.CreateTagRange(Enumerable.FirstOrDefault(Enumerable.Where(                      _htmlParser.FindStartTags(posterDataSpanTagRange' "span")' t => HTMLParser.ClassAttributeValueHas(t' "post_tripcode"))));                                        HTMLTagRange idSpanTagRange = _htmlParser.CreateTagRange(Enumerable.FirstOrDefault(Enumerable.Where(                      _htmlParser.FindStartTags(posterDataSpanTagRange' "span")' t => HTMLParser.ClassAttributeValueHas(t' "poster_hash"))));                                        string poster = String.Empty;                  if (idSpanTagRange != null) {                      poster = _htmlParser.GetInnerHTML(idSpanTagRange).Replace("ID:"' "");                  }                  else if (authorSpanTagRange != null) {                      string name = _htmlParser.GetInnerHTML(authorSpanTagRange);                      if (tripcodeSpanTagRange != null && !String.IsNullOrEmpty(_htmlParser.GetInnerHTML(tripcodeSpanTagRange))) {                          poster = name + _htmlParser.GetInnerHTML(tripcodeSpanTagRange);                      }                      else if (name != "Anonymous") {                          poster = name;                      }                  }                                    ImageInfo image = new ImageInfo {                      URL = General.GetAbsoluteURL(_url' HttpUtility.HtmlDecode(imageURL))'                      Referer = _url'                      OriginalFileName = General.CleanFileName(HttpUtility.HtmlDecode(originalFileName))'                      HashType = HashType.MD5'                      Hash = General.TryBase64Decode(imageMD5)'                      Poster = General.CleanFileName(HttpUtility.HtmlDecode(poster))                  };                  if (image.URL.Length == 0 || image.FileName.Length == 0 || image.Hash == null) continue;                    ThumbnailInfo thumb = new ThumbnailInfo {                      URL = General.GetAbsoluteURL(_url' HttpUtility.HtmlDecode(thumbURL))'                      Referer = _url                  };                  if (thumb.URL == null || thumb.FileName.Length == 0) continue;                    if (replaceList != null) {                      HTMLAttribute attribute;                        attribute = imageLinkTagRange.StartTag.GetAttribute("href");                      if (attribute != null) {                          replaceList.Add(                              new ReplaceInfo {                                  Offset = attribute.Offset'                                  Length = attribute.Length'                                  Type = ReplaceType.ImageLinkHref'                                  Tag = image.FileName                              });                      }                        if (fileNameLinkTagRange != null) {                          attribute = fileNameLinkTagRange.StartTag.GetAttribute("href");                          if (attribute != null) {                              replaceList.Add(                                  new ReplaceInfo {                                      Offset = attribute.Offset'                                      Length = attribute.Length'                                      Type = ReplaceType.ImageLinkHref'                                      Tag = image.FileName                                  });                          }                      }                        attribute = thumbImageTag.GetAttribute("src");                      if (attribute != null) {                          replaceList.Add(                              new ReplaceInfo {                                  Offset = attribute.Offset'                                  Length = attribute.Length'                                  Type = ReplaceType.ImageSrc'                                  Tag = thumb.FileName                              });                      }                  }                    imageList.Add(image);                  thumbnailList.Add(thumb);              }
Magic Number,JDP,FoolFuukaSiteHelper,C:\repos\SuperGouge_ChanThreadWatch\Classes\SiteHelpers.cs,GetImages,The following statement contains a magic number: foreach (HTMLTagRange postTagRange in Enumerable.Where(Enumerable.Select(Enumerable.Where(_htmlParser.FindStartTags("article")'                  t => HTMLParser.ClassAttributeValueHas(t' "has_image") || (HTMLParser.ClassAttributeValueHas(t' "thread") && t.GetAttribute("id") != null))' t => _htmlParser.CreateTagRange(t))' r => r != null))              {                  HTMLTagRange imageLinkTagRange = _htmlParser.CreateTagRange(Enumerable.FirstOrDefault(Enumerable.Where(                      _htmlParser.FindStartTags(postTagRange' "a")' t => HTMLParser.ClassAttributeValueHas(t' "thread_image_link"))));                  if (imageLinkTagRange == null) continue;                                    HTMLTag thumbImageTag = _htmlParser.FindStartTag(imageLinkTagRange' "img");                  if (thumbImageTag == null) continue;                    string imageURL = imageLinkTagRange.StartTag.GetAttributeValue("href");                  if (imageURL == null) continue;                    string thumbURL = thumbImageTag.GetAttributeValue("src");                  if (thumbURL == null) continue;                                    HTMLTagRange postFileTagRange = _htmlParser.CreateTagRange(Enumerable.FirstOrDefault(Enumerable.Where(                      _htmlParser.FindStartTags(postTagRange' "div")' t => HTMLParser.ClassAttributeValueHas(t' "post_file"))));                  if (postFileTagRange == null) continue;                    string originalFileName = String.Empty;                  HTMLTagRange fileNameLinkTagRange = _htmlParser.CreateTagRange(Enumerable.FirstOrDefault(Enumerable.Where(                      _htmlParser.FindStartTags(postFileTagRange' "a")' t => HTMLParser.ClassAttributeValueHas(t' "post_file_filename"))));                  if (fileNameLinkTagRange == null) {                      HTMLTagRange fileNameSpanTagRange = _htmlParser.CreateTagRange(Enumerable.FirstOrDefault(Enumerable.Where(                          _htmlParser.FindStartTags(postFileTagRange' "span")' t => HTMLParser.ClassAttributeValueHas(t' "post_file_filename"))));                      if (fileNameSpanTagRange == null) {                          HTMLTag postFileControlsEndTag = _htmlParser.FindCorrespondingEndTag(Enumerable.FirstOrDefault(Enumerable.Where(                              _htmlParser.FindStartTags(postFileTagRange' "span")' t => HTMLParser.ClassAttributeValueHas(t' "post_file_controls"))));                          HTMLTag postFileMetadataStartTag = Enumerable.FirstOrDefault(Enumerable.Where(                              _htmlParser.FindStartTags(postFileTagRange' "span")' t => HTMLParser.ClassAttributeValueHas(t' "post_file_metadata")));                          if (postFileControlsEndTag != null && postFileMetadataStartTag != null) {                              originalFileName = _htmlParser.GetInnerHTML(postFileControlsEndTag' postFileMetadataStartTag).Trim().TrimEnd(''');                          }                          else if (postFileControlsEndTag == null && postFileMetadataStartTag == null) {                              string[] postFileSplit = _htmlParser.GetInnerHTML(postFileTagRange).Split(new[] { ''' }' 3);                              if (postFileSplit.Length == 3) {                                  originalFileName = postFileSplit[2].Trim();                              }                          }                      }                      else {                          originalFileName = fileNameSpanTagRange.StartTag.GetAttributeValue("title") ?? _htmlParser.GetInnerHTML(fileNameSpanTagRange);                      }                  }                  else {                      originalFileName = fileNameLinkTagRange.StartTag.GetAttributeValue("title") ?? _htmlParser.GetInnerHTML(fileNameLinkTagRange);                  }                    string imageMD5 = thumbImageTag.GetAttributeValue("data-md5");                  if (imageMD5 == null) continue;                    HTMLTagRange posterDataSpanTagRange = _htmlParser.CreateTagRange(Enumerable.FirstOrDefault(Enumerable.Where(                      _htmlParser.FindStartTags(postTagRange' "span")' t => HTMLParser.ClassAttributeValueHas(t' "post_poster_data"))));                  if (posterDataSpanTagRange == null) continue;                                    HTMLTagRange authorSpanTagRange = _htmlParser.CreateTagRange(Enumerable.FirstOrDefault(Enumerable.Where(                      _htmlParser.FindStartTags(posterDataSpanTagRange' "span")' t => HTMLParser.ClassAttributeValueHas(t' "post_author"))));                    HTMLTagRange tripcodeSpanTagRange = _htmlParser.CreateTagRange(Enumerable.FirstOrDefault(Enumerable.Where(                      _htmlParser.FindStartTags(posterDataSpanTagRange' "span")' t => HTMLParser.ClassAttributeValueHas(t' "post_tripcode"))));                                        HTMLTagRange idSpanTagRange = _htmlParser.CreateTagRange(Enumerable.FirstOrDefault(Enumerable.Where(                      _htmlParser.FindStartTags(posterDataSpanTagRange' "span")' t => HTMLParser.ClassAttributeValueHas(t' "poster_hash"))));                                        string poster = String.Empty;                  if (idSpanTagRange != null) {                      poster = _htmlParser.GetInnerHTML(idSpanTagRange).Replace("ID:"' "");                  }                  else if (authorSpanTagRange != null) {                      string name = _htmlParser.GetInnerHTML(authorSpanTagRange);                      if (tripcodeSpanTagRange != null && !String.IsNullOrEmpty(_htmlParser.GetInnerHTML(tripcodeSpanTagRange))) {                          poster = name + _htmlParser.GetInnerHTML(tripcodeSpanTagRange);                      }                      else if (name != "Anonymous") {                          poster = name;                      }                  }                                    ImageInfo image = new ImageInfo {                      URL = General.GetAbsoluteURL(_url' HttpUtility.HtmlDecode(imageURL))'                      Referer = _url'                      OriginalFileName = General.CleanFileName(HttpUtility.HtmlDecode(originalFileName))'                      HashType = HashType.MD5'                      Hash = General.TryBase64Decode(imageMD5)'                      Poster = General.CleanFileName(HttpUtility.HtmlDecode(poster))                  };                  if (image.URL.Length == 0 || image.FileName.Length == 0 || image.Hash == null) continue;                    ThumbnailInfo thumb = new ThumbnailInfo {                      URL = General.GetAbsoluteURL(_url' HttpUtility.HtmlDecode(thumbURL))'                      Referer = _url                  };                  if (thumb.URL == null || thumb.FileName.Length == 0) continue;                    if (replaceList != null) {                      HTMLAttribute attribute;                        attribute = imageLinkTagRange.StartTag.GetAttribute("href");                      if (attribute != null) {                          replaceList.Add(                              new ReplaceInfo {                                  Offset = attribute.Offset'                                  Length = attribute.Length'                                  Type = ReplaceType.ImageLinkHref'                                  Tag = image.FileName                              });                      }                        if (fileNameLinkTagRange != null) {                          attribute = fileNameLinkTagRange.StartTag.GetAttribute("href");                          if (attribute != null) {                              replaceList.Add(                                  new ReplaceInfo {                                      Offset = attribute.Offset'                                      Length = attribute.Length'                                      Type = ReplaceType.ImageLinkHref'                                      Tag = image.FileName                                  });                          }                      }                        attribute = thumbImageTag.GetAttribute("src");                      if (attribute != null) {                          replaceList.Add(                              new ReplaceInfo {                                  Offset = attribute.Offset'                                  Length = attribute.Length'                                  Type = ReplaceType.ImageSrc'                                  Tag = thumb.FileName                              });                      }                  }                    imageList.Add(image);                  thumbnailList.Add(thumb);              }
Magic Number,JDP,General,C:\repos\SuperGouge_ChanThreadWatch\Classes\General.cs,DownloadAsync,The following statement contains a magic number: const int readBufferSize = 8192;
Magic Number,JDP,General,C:\repos\SuperGouge_ChanThreadWatch\Classes\General.cs,DownloadAsync,The following statement contains a magic number: const int requestTimeoutMS = 60000;
Magic Number,JDP,General,C:\repos\SuperGouge_ChanThreadWatch\Classes\General.cs,DownloadAsync,The following statement contains a magic number: const int readTimeoutMS = 60000;
Magic Number,JDP,General,C:\repos\SuperGouge_ChanThreadWatch\Classes\General.cs,CopyStream,The following statement contains a magic number: byte[] data = new byte[8192];
Magic Number,JDP,General,C:\repos\SuperGouge_ChanThreadWatch\Classes\General.cs,DetectCharacterSetFromContent,The following statement contains a magic number: string text = UnknownEncodingToString(bytes' 4096);
Magic Number,JDP,General,C:\repos\SuperGouge_ChanThreadWatch\Classes\General.cs,DetectCharacterSetFromContent,The following statement contains a magic number: if (mimeType.Equals("application/xhtml+xml"' StringComparison.OrdinalIgnoreCase) ||                  mimeType.Equals("application/xml"' StringComparison.OrdinalIgnoreCase) ||                  mimeType.Equals("text/xml"' StringComparison.OrdinalIgnoreCase))              {                  if (text.StartsWith("<?xml"' StringComparison.OrdinalIgnoreCase)) {                      // XML declaration                      HTMLParser xmlParser = new HTMLParser("<" + text.Substring(2));                      HTMLTag xmlTag = xmlParser.Tags.Count >= 1 ? xmlParser.Tags[0] : null;                      if (xmlTag != null && xmlTag.NameEquals("xml") && xmlTag.Offset == 0) {                          charSet = xmlTag.GetAttributeValue("encoding");                          if (!String.IsNullOrEmpty(charSet)) return charSet;                      }                  }                    // Default                  return "UTF-8";              }
Magic Number,JDP,General,C:\repos\SuperGouge_ChanThreadWatch\Classes\General.cs,GetBOMType,The following statement contains a magic number: if (bytes.Length >= 3 && bytes[0] == 0xEF && bytes[1] == 0xBB && bytes[2] == 0xBF) return BOMType.UTF8;
Magic Number,JDP,General,C:\repos\SuperGouge_ChanThreadWatch\Classes\General.cs,GetBOMType,The following statement contains a magic number: if (bytes.Length >= 3 && bytes[0] == 0xEF && bytes[1] == 0xBB && bytes[2] == 0xBF) return BOMType.UTF8;
Magic Number,JDP,General,C:\repos\SuperGouge_ChanThreadWatch\Classes\General.cs,GetBOMType,The following statement contains a magic number: if (bytes.Length >= 2 && bytes[0] == 0xFF && bytes[1] == 0xFE) return BOMType.UTF16LE;
Magic Number,JDP,General,C:\repos\SuperGouge_ChanThreadWatch\Classes\General.cs,GetBOMType,The following statement contains a magic number: if (bytes.Length >= 2 && bytes[0] == 0xFE && bytes[1] == 0xFF) return BOMType.UTF16BE;
Magic Number,JDP,General,C:\repos\SuperGouge_ChanThreadWatch\Classes\General.cs,CleanPageURL,The following statement contains a magic number: if (url.IndexOf('/'' url.IndexOf("//"' StringComparison.Ordinal) + 2) == -1) return null;
Magic Number,JDP,General,C:\repos\SuperGouge_ChanThreadWatch\Classes\General.cs,GetMaximumFileNameLength,The following statement contains a magic number: int max = 4096;
Magic Number,JDP,General,C:\repos\SuperGouge_ChanThreadWatch\Classes\General.cs,GetMaximumFileNameLength,The following statement contains a magic number: while (max >= min + 2) {                  int n = (min + max) / 2;                  if (IsFileNameTooLong(dir' n)) {                      max = n - 1;                  }                  else {                      min = n;                  }              }
Magic Number,JDP,General,C:\repos\SuperGouge_ChanThreadWatch\Classes\General.cs,GetMaximumFileNameLength,The following statement contains a magic number: while (max >= min + 2) {                  int n = (min + max) / 2;                  if (IsFileNameTooLong(dir' n)) {                      max = n - 1;                  }                  else {                      min = n;                  }              }
Magic Number,JDP,General,C:\repos\SuperGouge_ChanThreadWatch\Classes\General.cs,BytesTo64BitXor,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++) {                  result ^= (ulong)bytes[i] << ((7 - (i % 8)) * 8);              }
Magic Number,JDP,General,C:\repos\SuperGouge_ChanThreadWatch\Classes\General.cs,BytesTo64BitXor,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++) {                  result ^= (ulong)bytes[i] << ((7 - (i % 8)) * 8);              }
Magic Number,JDP,General,C:\repos\SuperGouge_ChanThreadWatch\Classes\General.cs,BytesTo64BitXor,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++) {                  result ^= (ulong)bytes[i] << ((7 - (i % 8)) * 8);              }
Magic Number,JDP,General,C:\repos\SuperGouge_ChanThreadWatch\Classes\General.cs,StrLenW,The following statement contains a magic number: for (int i = 0; i < bytes.Length - 1; i += 2) {                  if (bytes[i] == 0 && bytes[i + 1] == 0) return i / 2;              }
Magic Number,JDP,General,C:\repos\SuperGouge_ChanThreadWatch\Classes\General.cs,StrLenW,The following statement contains a magic number: for (int i = 0; i < bytes.Length - 1; i += 2) {                  if (bytes[i] == 0 && bytes[i + 1] == 0) return i / 2;              }
Magic Number,JDP,General,C:\repos\SuperGouge_ChanThreadWatch\Classes\General.cs,StrLenW,The following statement contains a magic number: return bytes.Length / 2;
Magic Number,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,ThreadWatcher,The following statement contains a magic number: General.EnsureThreadPoolMaxThreads(500' 1000);
Magic Number,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,ThreadWatcher,The following statement contains a magic number: General.EnsureThreadPoolMaxThreads(500' 1000);
Magic Number,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,Check,The following statement contains a magic number: try {                  SiteHelper siteHelper = SiteHelpers.GetInstance(PageHost);                    try {                      lock (_settingsSync) {                          _nextCheckWorkItem = null;                          _checkFinishedEvent.Reset();                          _isWaiting = false;                            if (!_hasInitialized) {                              siteHelper.SetURL(_pageURL);                                _pageList = new List<PageInfo> {                                  new PageInfo {                                      URL = _pageURL                                  }                              };                              _imageDiskFileNames = new HashSet<string>(StringComparer.OrdinalIgnoreCase);                              _completedImages = new Dictionary<string' DownloadInfo>(StringComparer.OrdinalIgnoreCase);                              _completedThumbs = new Dictionary<string' DownloadInfo>(StringComparer.OrdinalIgnoreCase);                              _maxFileNameLengthBaseDir = 0;                                if (String.IsNullOrEmpty(_threadDownloadDirectory)) {                                  _threadDownloadDirectory = Path.Combine(                                      Path.Combine(_mainDownloadDirectory' Settings.RenameDownloadFolderWithCategory == true ? General.CleanFileName(_category) : String.Empty)'                                      General.CleanFileName(String.Format("{0}_{1}_{2}{3}"' siteHelper.GetSiteName()' siteHelper.GetBoardName()' _threadName' ParentThreadFormattedDescription)));                              }                              if (!Directory.Exists(_threadDownloadDirectory)) {                                  Directory.CreateDirectory(_threadDownloadDirectory);                              }                              if (String.IsNullOrEmpty(_description)) {                                  _description = General.CleanFileName(String.Format("{0}_{1}_{2}"' siteHelper.GetSiteName()' siteHelper.GetBoardName()' _threadName));                              }                              _minCheckIntervalSeconds = siteHelper.IsBoardHighTurnover() ? 30 : 60;                              _checkIntervalSeconds = Math.Max(_checkIntervalSeconds' _minCheckIntervalSeconds);                                _hasInitialized = true;                          }                      }                  }                  catch (Exception ex) {                      if (ex is IOException || ex is UnauthorizedAccessException) {                          Stop(StopReason.IOError);                          Logger.Log(ex.ToString());                      }                      else throw;                  }                    string threadDir = ThreadDownloadDirectory;                  string imageDir = ThreadDownloadDirectory;                  string thumbDir = Path.Combine(ThreadDownloadDirectory' "thumbs");                    Queue<ImageInfo> pendingImages = new Queue<ImageInfo>();                  Queue<ThumbnailInfo> pendingThumbs = new Queue<ThumbnailInfo>();                    foreach (PageInfo pageInfo in _pageList) {                      // Reset the fresh flag on all of the pages before downloading starts so that                      // they're valid even if stopping before all the pages have been downloaded                      pageInfo.IsFresh = false;                  }                    int pageIndex = 0;                  OnDownloadStatus(new DownloadStatusEventArgs(DownloadType.Page' 0' _pageList.Count));                  while (pageIndex < _pageList.Count && !IsStopping) {                      string saveFileName = General.CleanFileName(_threadName) + ((pageIndex == 0) ? String.Empty : ("_" + (pageIndex + 1))) + ".html";                      HTMLParser previousParser = null;                      HTMLParser pageParser = null;                        PageInfo pageInfo = _pageList[pageIndex];                      pageInfo.Path = Path.Combine(threadDir' saveFileName);                        if (File.Exists(pageInfo.Path)) {                          string previousText = null;                          try { previousText = File.ReadAllText(pageInfo.Path); }                          catch { }                          previousParser = !String.IsNullOrEmpty(previousText) ? new HTMLParser(previousText) : null;                      }                        ManualResetEvent downloadEndEvent = new ManualResetEvent(false);                      DownloadPageEndCallback downloadEnd = (result' content' lastModifiedTime' encoding) => {                          if (result == DownloadResult.Completed) {                              pageInfo.IsFresh = true;                              pageParser = new HTMLParser(content);                              pageInfo.CacheTime = lastModifiedTime;                              pageInfo.Encoding = encoding;                              pageInfo.ReplaceList = (Settings.SaveThumbnails != false) ? new List<ReplaceInfo>() : null;                          }                          downloadEndEvent.Set();                      };                      DownloadPageAsync(pageInfo.Path' pageInfo.URL' PageAuth' pageInfo.CacheTime' downloadEnd);                      downloadEndEvent.WaitOne();                      downloadEndEvent.Close();                        if (pageParser != null) {                          siteHelper.SetURL(pageInfo.URL);                          siteHelper.SetHTMLParser(pageParser);                          siteHelper.ResurrectDeadPosts(previousParser' pageInfo.ReplaceList);                            if (AutoFollow) {                              foreach (string crossLink in siteHelper.GetCrossLinks(pageInfo.ReplaceList' Settings.InterBoardAutoFollow != false)) {                                  SiteHelper crossLinkSiteHelper = SiteHelpers.GetInstance((new Uri(crossLink)).Host);                                  crossLinkSiteHelper.SetURL(crossLink);                                  string crossLinkID = crossLinkSiteHelper.GetPageID();                                  if (!RootThread.DescendantThreads.ContainsKey(crossLinkID) && RootThread.PageID != crossLinkID) OnAddThread(new AddThreadEventArgs(crossLink));                              }                          }                            List<ThumbnailInfo> thumbs = new List<ThumbnailInfo>();                          List<ImageInfo> images = siteHelper.GetImages(pageInfo.ReplaceList' thumbs);                          if (_completedImages.Count == 0) {                              foreach (ImageInfo image in images) {                                  for (int iName = 0; iName < 2; iName++) {                                      string baseFileName = (iName == 0) ? image.OriginalFileName : image.FileName;                                      string baseFileNameNoExtension = Path.GetFileNameWithoutExtension(baseFileName);                                      string baseExtension = Path.GetExtension(baseFileName);                                      int iSuffix = 1;                                      string fileName;                                      do {                                          fileName = baseFileNameNoExtension + ((iSuffix == 1) ? String.Empty :                                              ("_" + iSuffix)) + baseExtension;                                          iSuffix++;                                      } while (_imageDiskFileNames.Contains(fileName));                                      string path = Path.Combine(Path.Combine(imageDir' Settings.SortImagesByPoster == true ? image.Poster : String.Empty)' fileName);                                      if (File.Exists(path)) {                                          _imageDiskFileNames.Add(fileName);                                          _completedImages[image.FileName] = new DownloadInfo {                                              Folder = Settings.SortImagesByPoster == true ? image.Poster : String.Empty'                                              FileName = fileName'                                              Skipped = false                                          };                                          break;                                      }                                  }                              }                              foreach (ThumbnailInfo thumb in thumbs) {                                  string path = Path.Combine(thumbDir' thumb.FileName);                                  if (File.Exists(path)) {                                      _completedThumbs[thumb.FileName] = new DownloadInfo {                                          FileName = thumb.FileName'                                          Skipped = false                                      };                                  }                              }                          }                          foreach (ImageInfo image in images) {                              if (!_completedImages.ContainsKey(image.FileName)) {                                  pendingImages.Enqueue(image);                              }                          }                          foreach (ThumbnailInfo thumb in thumbs) {                              if (!_completedThumbs.ContainsKey(thumb.FileName)) {                                  pendingThumbs.Enqueue(thumb);                              }                          }                            string nextPageURL = siteHelper.GetNextPageURL();                          if (!String.IsNullOrEmpty(nextPageURL)) {                              PageInfo nextPageInfo = new PageInfo {                                  URL = nextPageURL                              };                              if (pageIndex == _pageList.Count - 1) {                                  _pageList.Add(nextPageInfo);                              }                              else if (_pageList[pageIndex + 1].URL != nextPageURL) {                                  _pageList[pageIndex + 1] = nextPageInfo;                              }                          }                          else if (pageIndex < _pageList.Count - 1) {                              _pageList.RemoveRange(pageIndex + 1' _pageList.Count - (pageIndex + 1));                          }                      }                        pageIndex++;                      OnDownloadStatus(new DownloadStatusEventArgs(DownloadType.Page' pageIndex' _pageList.Count));                  }                    MillisecondsUntilNextCheck = CheckIntervalSeconds * 1000;                    if (pendingImages.Count != 0 && !IsStopping) {                      if (_maxFileNameLengthBaseDir == 0) {                          _maxFileNameLengthBaseDir = General.GetMaximumFileNameLength(imageDir);                      }                        List<ManualResetEvent> downloadEndEvents = new List<ManualResetEvent>();                      int completedImageCount = 0;                      foreach (KeyValuePair<string' DownloadInfo> item in _completedImages) {                          if (!item.Value.Skipped) completedImageCount++;                      }                      int totalImageCount = completedImageCount + pendingImages.Count;                      OnDownloadStatus(new DownloadStatusEventArgs(DownloadType.Image' completedImageCount' totalImageCount));                      while (pendingImages.Count != 0 && !IsStopping) {                          string saveFileNameNoExtension;                          string saveExtension;                          string savePath;                          ImageInfo image = pendingImages.Dequeue();                          bool pathTooLong = false;                            if (Settings.SortImagesByPoster == true && !String.IsNullOrEmpty(image.Poster)) {                              try {                                  Directory.CreateDirectory(Path.Combine(imageDir' image.Poster));                              }                              catch (Exception ex) {                                  Stop(StopReason.IOError);                                  Logger.Log(ex.ToString());                              }                              _maxFileNameLength = General.GetMaximumFileNameLength(Path.Combine(imageDir' image.Poster));                          }                          else {                              _maxFileNameLength = _maxFileNameLengthBaseDir;                          }                            MakeImagePath:                          if ((Settings.UseOriginalFileNames == true) && !String.IsNullOrEmpty(image.OriginalFileName) && !pathTooLong) {                              saveFileNameNoExtension = Path.GetFileNameWithoutExtension(image.OriginalFileName);                              saveExtension = Path.GetExtension(image.OriginalFileName);                          }                          else {                              saveFileNameNoExtension = Path.GetFileNameWithoutExtension(image.FileName);                              saveExtension = Path.GetExtension(image.FileName);                          }                            int iSuffix = 1;                          bool fileNameTaken;                          string saveFileName;                          do {                              savePath = Path.Combine(Path.Combine(imageDir' Settings.SortImagesByPoster == true ? image.Poster : String.Empty)' saveFileNameNoExtension + ((iSuffix == 1) ?                                  String.Empty : ("_" + iSuffix)) + saveExtension);                              saveFileName = Path.GetFileName(savePath);                              fileNameTaken = _imageDiskFileNames.Contains(saveFileName);                              iSuffix++;                          } while (fileNameTaken);                            if (saveFileName.Length > _maxFileNameLength && !pathTooLong) {                              pathTooLong = true;                              goto MakeImagePath;                          }                          _imageDiskFileNames.Add(saveFileName);                            HashType hashType = (Settings.VerifyImageHashes != false) ? image.HashType : HashType.None;                          ManualResetEvent downloadEndEvent = new ManualResetEvent(false);                          DownloadFileEndCallback onDownloadEnd = (result) => {                              if (result == DownloadResult.Completed || result == DownloadResult.Skipped) {                                  lock (_completedImages) {                                      _completedImages[image.FileName] = new DownloadInfo {                                          Folder = Settings.SortImagesByPoster == true ? image.Poster : String.Empty'                                          FileName = saveFileName'                                          Skipped = (result == DownloadResult.Skipped)                                      };                                      if (result != DownloadResult.Skipped) {                                          completedImageCount++;                                      }                                      else {                                          totalImageCount--;                                      }                                      OnDownloadStatus(new DownloadStatusEventArgs(DownloadType.Image' completedImageCount' totalImageCount));                                  }                              }                              downloadEndEvent.Set();                          };                          downloadEndEvents.Add(downloadEndEvent);                          DownloadFileAsync(savePath' image.URL' ImageAuth' image.Referer' hashType' image.Hash' onDownloadEnd);                      }                      foreach (ManualResetEvent downloadEndEvent in downloadEndEvents) {                          downloadEndEvent.WaitOne();                          downloadEndEvent.Close();                      }                  }                    if (Settings.SaveThumbnails != false) {                      if (pendingThumbs.Count != 0 && !IsStopping) {                          if (!Directory.Exists(thumbDir)) {                              try {                                  Directory.CreateDirectory(thumbDir);                              }                              catch (Exception ex) {                                  Stop(StopReason.IOError);                                  Logger.Log(ex.ToString());                              }                          }                            List<ManualResetEvent> downloadEndEvents = new List<ManualResetEvent>();                          int completedThumbCount = 0;                          foreach (KeyValuePair<string' DownloadInfo> item in _completedThumbs) {                              if (!item.Value.Skipped) completedThumbCount++;                          }                          int totalThumbCount = completedThumbCount + pendingThumbs.Count;                          OnDownloadStatus(new DownloadStatusEventArgs(DownloadType.Thumbnail' completedThumbCount' totalThumbCount));                          while (pendingThumbs.Count != 0 && !IsStopping) {                              ThumbnailInfo thumb = pendingThumbs.Dequeue();                              string savePath = Path.Combine(thumbDir' thumb.FileName);                                ManualResetEvent downloadEndEvent = new ManualResetEvent(false);                              DownloadFileEndCallback onDownloadEnd = (result) => {                                  if (result == DownloadResult.Completed || result == DownloadResult.Skipped) {                                      lock (_completedThumbs) {                                          _completedThumbs[thumb.FileName] = new DownloadInfo {                                              FileName = thumb.FileName'                                              Skipped = (result == DownloadResult.Skipped)                                          };                                          if (result != DownloadResult.Skipped) {                                              completedThumbCount++;                                          }                                          else {                                              totalThumbCount--;                                          }                                          OnDownloadStatus(new DownloadStatusEventArgs(DownloadType.Thumbnail' completedThumbCount' totalThumbCount));                                      }                                  }                                  downloadEndEvent.Set();                              };                              downloadEndEvents.Add(downloadEndEvent);                              DownloadFileAsync(savePath' thumb.URL' PageAuth' thumb.Referer' HashType.None' null' onDownloadEnd);                          }                          foreach (ManualResetEvent downloadEndEvent in downloadEndEvents) {                              downloadEndEvent.WaitOne();                              downloadEndEvent.Close();                          }                      }                        if (!IsStopping || StopReason != StopReason.IOError) {                          foreach (PageInfo pageInfo in _pageList) {                              if (pageInfo.IsFresh) {                                  Process(pageInfo' siteHelper' threadDir' imageDir' thumbDir' _completedImages' _completedThumbs);                              }                          }                      }                  }                    if (OneTimeDownload) {                      Stop(StopReason.DownloadComplete);                  }              }              catch (Exception ex) {                  Stop(StopReason.Other);                  Logger.Log(ex.ToString());              }
Magic Number,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,Check,The following statement contains a magic number: try {                  SiteHelper siteHelper = SiteHelpers.GetInstance(PageHost);                    try {                      lock (_settingsSync) {                          _nextCheckWorkItem = null;                          _checkFinishedEvent.Reset();                          _isWaiting = false;                            if (!_hasInitialized) {                              siteHelper.SetURL(_pageURL);                                _pageList = new List<PageInfo> {                                  new PageInfo {                                      URL = _pageURL                                  }                              };                              _imageDiskFileNames = new HashSet<string>(StringComparer.OrdinalIgnoreCase);                              _completedImages = new Dictionary<string' DownloadInfo>(StringComparer.OrdinalIgnoreCase);                              _completedThumbs = new Dictionary<string' DownloadInfo>(StringComparer.OrdinalIgnoreCase);                              _maxFileNameLengthBaseDir = 0;                                if (String.IsNullOrEmpty(_threadDownloadDirectory)) {                                  _threadDownloadDirectory = Path.Combine(                                      Path.Combine(_mainDownloadDirectory' Settings.RenameDownloadFolderWithCategory == true ? General.CleanFileName(_category) : String.Empty)'                                      General.CleanFileName(String.Format("{0}_{1}_{2}{3}"' siteHelper.GetSiteName()' siteHelper.GetBoardName()' _threadName' ParentThreadFormattedDescription)));                              }                              if (!Directory.Exists(_threadDownloadDirectory)) {                                  Directory.CreateDirectory(_threadDownloadDirectory);                              }                              if (String.IsNullOrEmpty(_description)) {                                  _description = General.CleanFileName(String.Format("{0}_{1}_{2}"' siteHelper.GetSiteName()' siteHelper.GetBoardName()' _threadName));                              }                              _minCheckIntervalSeconds = siteHelper.IsBoardHighTurnover() ? 30 : 60;                              _checkIntervalSeconds = Math.Max(_checkIntervalSeconds' _minCheckIntervalSeconds);                                _hasInitialized = true;                          }                      }                  }                  catch (Exception ex) {                      if (ex is IOException || ex is UnauthorizedAccessException) {                          Stop(StopReason.IOError);                          Logger.Log(ex.ToString());                      }                      else throw;                  }                    string threadDir = ThreadDownloadDirectory;                  string imageDir = ThreadDownloadDirectory;                  string thumbDir = Path.Combine(ThreadDownloadDirectory' "thumbs");                    Queue<ImageInfo> pendingImages = new Queue<ImageInfo>();                  Queue<ThumbnailInfo> pendingThumbs = new Queue<ThumbnailInfo>();                    foreach (PageInfo pageInfo in _pageList) {                      // Reset the fresh flag on all of the pages before downloading starts so that                      // they're valid even if stopping before all the pages have been downloaded                      pageInfo.IsFresh = false;                  }                    int pageIndex = 0;                  OnDownloadStatus(new DownloadStatusEventArgs(DownloadType.Page' 0' _pageList.Count));                  while (pageIndex < _pageList.Count && !IsStopping) {                      string saveFileName = General.CleanFileName(_threadName) + ((pageIndex == 0) ? String.Empty : ("_" + (pageIndex + 1))) + ".html";                      HTMLParser previousParser = null;                      HTMLParser pageParser = null;                        PageInfo pageInfo = _pageList[pageIndex];                      pageInfo.Path = Path.Combine(threadDir' saveFileName);                        if (File.Exists(pageInfo.Path)) {                          string previousText = null;                          try { previousText = File.ReadAllText(pageInfo.Path); }                          catch { }                          previousParser = !String.IsNullOrEmpty(previousText) ? new HTMLParser(previousText) : null;                      }                        ManualResetEvent downloadEndEvent = new ManualResetEvent(false);                      DownloadPageEndCallback downloadEnd = (result' content' lastModifiedTime' encoding) => {                          if (result == DownloadResult.Completed) {                              pageInfo.IsFresh = true;                              pageParser = new HTMLParser(content);                              pageInfo.CacheTime = lastModifiedTime;                              pageInfo.Encoding = encoding;                              pageInfo.ReplaceList = (Settings.SaveThumbnails != false) ? new List<ReplaceInfo>() : null;                          }                          downloadEndEvent.Set();                      };                      DownloadPageAsync(pageInfo.Path' pageInfo.URL' PageAuth' pageInfo.CacheTime' downloadEnd);                      downloadEndEvent.WaitOne();                      downloadEndEvent.Close();                        if (pageParser != null) {                          siteHelper.SetURL(pageInfo.URL);                          siteHelper.SetHTMLParser(pageParser);                          siteHelper.ResurrectDeadPosts(previousParser' pageInfo.ReplaceList);                            if (AutoFollow) {                              foreach (string crossLink in siteHelper.GetCrossLinks(pageInfo.ReplaceList' Settings.InterBoardAutoFollow != false)) {                                  SiteHelper crossLinkSiteHelper = SiteHelpers.GetInstance((new Uri(crossLink)).Host);                                  crossLinkSiteHelper.SetURL(crossLink);                                  string crossLinkID = crossLinkSiteHelper.GetPageID();                                  if (!RootThread.DescendantThreads.ContainsKey(crossLinkID) && RootThread.PageID != crossLinkID) OnAddThread(new AddThreadEventArgs(crossLink));                              }                          }                            List<ThumbnailInfo> thumbs = new List<ThumbnailInfo>();                          List<ImageInfo> images = siteHelper.GetImages(pageInfo.ReplaceList' thumbs);                          if (_completedImages.Count == 0) {                              foreach (ImageInfo image in images) {                                  for (int iName = 0; iName < 2; iName++) {                                      string baseFileName = (iName == 0) ? image.OriginalFileName : image.FileName;                                      string baseFileNameNoExtension = Path.GetFileNameWithoutExtension(baseFileName);                                      string baseExtension = Path.GetExtension(baseFileName);                                      int iSuffix = 1;                                      string fileName;                                      do {                                          fileName = baseFileNameNoExtension + ((iSuffix == 1) ? String.Empty :                                              ("_" + iSuffix)) + baseExtension;                                          iSuffix++;                                      } while (_imageDiskFileNames.Contains(fileName));                                      string path = Path.Combine(Path.Combine(imageDir' Settings.SortImagesByPoster == true ? image.Poster : String.Empty)' fileName);                                      if (File.Exists(path)) {                                          _imageDiskFileNames.Add(fileName);                                          _completedImages[image.FileName] = new DownloadInfo {                                              Folder = Settings.SortImagesByPoster == true ? image.Poster : String.Empty'                                              FileName = fileName'                                              Skipped = false                                          };                                          break;                                      }                                  }                              }                              foreach (ThumbnailInfo thumb in thumbs) {                                  string path = Path.Combine(thumbDir' thumb.FileName);                                  if (File.Exists(path)) {                                      _completedThumbs[thumb.FileName] = new DownloadInfo {                                          FileName = thumb.FileName'                                          Skipped = false                                      };                                  }                              }                          }                          foreach (ImageInfo image in images) {                              if (!_completedImages.ContainsKey(image.FileName)) {                                  pendingImages.Enqueue(image);                              }                          }                          foreach (ThumbnailInfo thumb in thumbs) {                              if (!_completedThumbs.ContainsKey(thumb.FileName)) {                                  pendingThumbs.Enqueue(thumb);                              }                          }                            string nextPageURL = siteHelper.GetNextPageURL();                          if (!String.IsNullOrEmpty(nextPageURL)) {                              PageInfo nextPageInfo = new PageInfo {                                  URL = nextPageURL                              };                              if (pageIndex == _pageList.Count - 1) {                                  _pageList.Add(nextPageInfo);                              }                              else if (_pageList[pageIndex + 1].URL != nextPageURL) {                                  _pageList[pageIndex + 1] = nextPageInfo;                              }                          }                          else if (pageIndex < _pageList.Count - 1) {                              _pageList.RemoveRange(pageIndex + 1' _pageList.Count - (pageIndex + 1));                          }                      }                        pageIndex++;                      OnDownloadStatus(new DownloadStatusEventArgs(DownloadType.Page' pageIndex' _pageList.Count));                  }                    MillisecondsUntilNextCheck = CheckIntervalSeconds * 1000;                    if (pendingImages.Count != 0 && !IsStopping) {                      if (_maxFileNameLengthBaseDir == 0) {                          _maxFileNameLengthBaseDir = General.GetMaximumFileNameLength(imageDir);                      }                        List<ManualResetEvent> downloadEndEvents = new List<ManualResetEvent>();                      int completedImageCount = 0;                      foreach (KeyValuePair<string' DownloadInfo> item in _completedImages) {                          if (!item.Value.Skipped) completedImageCount++;                      }                      int totalImageCount = completedImageCount + pendingImages.Count;                      OnDownloadStatus(new DownloadStatusEventArgs(DownloadType.Image' completedImageCount' totalImageCount));                      while (pendingImages.Count != 0 && !IsStopping) {                          string saveFileNameNoExtension;                          string saveExtension;                          string savePath;                          ImageInfo image = pendingImages.Dequeue();                          bool pathTooLong = false;                            if (Settings.SortImagesByPoster == true && !String.IsNullOrEmpty(image.Poster)) {                              try {                                  Directory.CreateDirectory(Path.Combine(imageDir' image.Poster));                              }                              catch (Exception ex) {                                  Stop(StopReason.IOError);                                  Logger.Log(ex.ToString());                              }                              _maxFileNameLength = General.GetMaximumFileNameLength(Path.Combine(imageDir' image.Poster));                          }                          else {                              _maxFileNameLength = _maxFileNameLengthBaseDir;                          }                            MakeImagePath:                          if ((Settings.UseOriginalFileNames == true) && !String.IsNullOrEmpty(image.OriginalFileName) && !pathTooLong) {                              saveFileNameNoExtension = Path.GetFileNameWithoutExtension(image.OriginalFileName);                              saveExtension = Path.GetExtension(image.OriginalFileName);                          }                          else {                              saveFileNameNoExtension = Path.GetFileNameWithoutExtension(image.FileName);                              saveExtension = Path.GetExtension(image.FileName);                          }                            int iSuffix = 1;                          bool fileNameTaken;                          string saveFileName;                          do {                              savePath = Path.Combine(Path.Combine(imageDir' Settings.SortImagesByPoster == true ? image.Poster : String.Empty)' saveFileNameNoExtension + ((iSuffix == 1) ?                                  String.Empty : ("_" + iSuffix)) + saveExtension);                              saveFileName = Path.GetFileName(savePath);                              fileNameTaken = _imageDiskFileNames.Contains(saveFileName);                              iSuffix++;                          } while (fileNameTaken);                            if (saveFileName.Length > _maxFileNameLength && !pathTooLong) {                              pathTooLong = true;                              goto MakeImagePath;                          }                          _imageDiskFileNames.Add(saveFileName);                            HashType hashType = (Settings.VerifyImageHashes != false) ? image.HashType : HashType.None;                          ManualResetEvent downloadEndEvent = new ManualResetEvent(false);                          DownloadFileEndCallback onDownloadEnd = (result) => {                              if (result == DownloadResult.Completed || result == DownloadResult.Skipped) {                                  lock (_completedImages) {                                      _completedImages[image.FileName] = new DownloadInfo {                                          Folder = Settings.SortImagesByPoster == true ? image.Poster : String.Empty'                                          FileName = saveFileName'                                          Skipped = (result == DownloadResult.Skipped)                                      };                                      if (result != DownloadResult.Skipped) {                                          completedImageCount++;                                      }                                      else {                                          totalImageCount--;                                      }                                      OnDownloadStatus(new DownloadStatusEventArgs(DownloadType.Image' completedImageCount' totalImageCount));                                  }                              }                              downloadEndEvent.Set();                          };                          downloadEndEvents.Add(downloadEndEvent);                          DownloadFileAsync(savePath' image.URL' ImageAuth' image.Referer' hashType' image.Hash' onDownloadEnd);                      }                      foreach (ManualResetEvent downloadEndEvent in downloadEndEvents) {                          downloadEndEvent.WaitOne();                          downloadEndEvent.Close();                      }                  }                    if (Settings.SaveThumbnails != false) {                      if (pendingThumbs.Count != 0 && !IsStopping) {                          if (!Directory.Exists(thumbDir)) {                              try {                                  Directory.CreateDirectory(thumbDir);                              }                              catch (Exception ex) {                                  Stop(StopReason.IOError);                                  Logger.Log(ex.ToString());                              }                          }                            List<ManualResetEvent> downloadEndEvents = new List<ManualResetEvent>();                          int completedThumbCount = 0;                          foreach (KeyValuePair<string' DownloadInfo> item in _completedThumbs) {                              if (!item.Value.Skipped) completedThumbCount++;                          }                          int totalThumbCount = completedThumbCount + pendingThumbs.Count;                          OnDownloadStatus(new DownloadStatusEventArgs(DownloadType.Thumbnail' completedThumbCount' totalThumbCount));                          while (pendingThumbs.Count != 0 && !IsStopping) {                              ThumbnailInfo thumb = pendingThumbs.Dequeue();                              string savePath = Path.Combine(thumbDir' thumb.FileName);                                ManualResetEvent downloadEndEvent = new ManualResetEvent(false);                              DownloadFileEndCallback onDownloadEnd = (result) => {                                  if (result == DownloadResult.Completed || result == DownloadResult.Skipped) {                                      lock (_completedThumbs) {                                          _completedThumbs[thumb.FileName] = new DownloadInfo {                                              FileName = thumb.FileName'                                              Skipped = (result == DownloadResult.Skipped)                                          };                                          if (result != DownloadResult.Skipped) {                                              completedThumbCount++;                                          }                                          else {                                              totalThumbCount--;                                          }                                          OnDownloadStatus(new DownloadStatusEventArgs(DownloadType.Thumbnail' completedThumbCount' totalThumbCount));                                      }                                  }                                  downloadEndEvent.Set();                              };                              downloadEndEvents.Add(downloadEndEvent);                              DownloadFileAsync(savePath' thumb.URL' PageAuth' thumb.Referer' HashType.None' null' onDownloadEnd);                          }                          foreach (ManualResetEvent downloadEndEvent in downloadEndEvents) {                              downloadEndEvent.WaitOne();                              downloadEndEvent.Close();                          }                      }                        if (!IsStopping || StopReason != StopReason.IOError) {                          foreach (PageInfo pageInfo in _pageList) {                              if (pageInfo.IsFresh) {                                  Process(pageInfo' siteHelper' threadDir' imageDir' thumbDir' _completedImages' _completedThumbs);                              }                          }                      }                  }                    if (OneTimeDownload) {                      Stop(StopReason.DownloadComplete);                  }              }              catch (Exception ex) {                  Stop(StopReason.Other);                  Logger.Log(ex.ToString());              }
Magic Number,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,Check,The following statement contains a magic number: try {                  SiteHelper siteHelper = SiteHelpers.GetInstance(PageHost);                    try {                      lock (_settingsSync) {                          _nextCheckWorkItem = null;                          _checkFinishedEvent.Reset();                          _isWaiting = false;                            if (!_hasInitialized) {                              siteHelper.SetURL(_pageURL);                                _pageList = new List<PageInfo> {                                  new PageInfo {                                      URL = _pageURL                                  }                              };                              _imageDiskFileNames = new HashSet<string>(StringComparer.OrdinalIgnoreCase);                              _completedImages = new Dictionary<string' DownloadInfo>(StringComparer.OrdinalIgnoreCase);                              _completedThumbs = new Dictionary<string' DownloadInfo>(StringComparer.OrdinalIgnoreCase);                              _maxFileNameLengthBaseDir = 0;                                if (String.IsNullOrEmpty(_threadDownloadDirectory)) {                                  _threadDownloadDirectory = Path.Combine(                                      Path.Combine(_mainDownloadDirectory' Settings.RenameDownloadFolderWithCategory == true ? General.CleanFileName(_category) : String.Empty)'                                      General.CleanFileName(String.Format("{0}_{1}_{2}{3}"' siteHelper.GetSiteName()' siteHelper.GetBoardName()' _threadName' ParentThreadFormattedDescription)));                              }                              if (!Directory.Exists(_threadDownloadDirectory)) {                                  Directory.CreateDirectory(_threadDownloadDirectory);                              }                              if (String.IsNullOrEmpty(_description)) {                                  _description = General.CleanFileName(String.Format("{0}_{1}_{2}"' siteHelper.GetSiteName()' siteHelper.GetBoardName()' _threadName));                              }                              _minCheckIntervalSeconds = siteHelper.IsBoardHighTurnover() ? 30 : 60;                              _checkIntervalSeconds = Math.Max(_checkIntervalSeconds' _minCheckIntervalSeconds);                                _hasInitialized = true;                          }                      }                  }                  catch (Exception ex) {                      if (ex is IOException || ex is UnauthorizedAccessException) {                          Stop(StopReason.IOError);                          Logger.Log(ex.ToString());                      }                      else throw;                  }                    string threadDir = ThreadDownloadDirectory;                  string imageDir = ThreadDownloadDirectory;                  string thumbDir = Path.Combine(ThreadDownloadDirectory' "thumbs");                    Queue<ImageInfo> pendingImages = new Queue<ImageInfo>();                  Queue<ThumbnailInfo> pendingThumbs = new Queue<ThumbnailInfo>();                    foreach (PageInfo pageInfo in _pageList) {                      // Reset the fresh flag on all of the pages before downloading starts so that                      // they're valid even if stopping before all the pages have been downloaded                      pageInfo.IsFresh = false;                  }                    int pageIndex = 0;                  OnDownloadStatus(new DownloadStatusEventArgs(DownloadType.Page' 0' _pageList.Count));                  while (pageIndex < _pageList.Count && !IsStopping) {                      string saveFileName = General.CleanFileName(_threadName) + ((pageIndex == 0) ? String.Empty : ("_" + (pageIndex + 1))) + ".html";                      HTMLParser previousParser = null;                      HTMLParser pageParser = null;                        PageInfo pageInfo = _pageList[pageIndex];                      pageInfo.Path = Path.Combine(threadDir' saveFileName);                        if (File.Exists(pageInfo.Path)) {                          string previousText = null;                          try { previousText = File.ReadAllText(pageInfo.Path); }                          catch { }                          previousParser = !String.IsNullOrEmpty(previousText) ? new HTMLParser(previousText) : null;                      }                        ManualResetEvent downloadEndEvent = new ManualResetEvent(false);                      DownloadPageEndCallback downloadEnd = (result' content' lastModifiedTime' encoding) => {                          if (result == DownloadResult.Completed) {                              pageInfo.IsFresh = true;                              pageParser = new HTMLParser(content);                              pageInfo.CacheTime = lastModifiedTime;                              pageInfo.Encoding = encoding;                              pageInfo.ReplaceList = (Settings.SaveThumbnails != false) ? new List<ReplaceInfo>() : null;                          }                          downloadEndEvent.Set();                      };                      DownloadPageAsync(pageInfo.Path' pageInfo.URL' PageAuth' pageInfo.CacheTime' downloadEnd);                      downloadEndEvent.WaitOne();                      downloadEndEvent.Close();                        if (pageParser != null) {                          siteHelper.SetURL(pageInfo.URL);                          siteHelper.SetHTMLParser(pageParser);                          siteHelper.ResurrectDeadPosts(previousParser' pageInfo.ReplaceList);                            if (AutoFollow) {                              foreach (string crossLink in siteHelper.GetCrossLinks(pageInfo.ReplaceList' Settings.InterBoardAutoFollow != false)) {                                  SiteHelper crossLinkSiteHelper = SiteHelpers.GetInstance((new Uri(crossLink)).Host);                                  crossLinkSiteHelper.SetURL(crossLink);                                  string crossLinkID = crossLinkSiteHelper.GetPageID();                                  if (!RootThread.DescendantThreads.ContainsKey(crossLinkID) && RootThread.PageID != crossLinkID) OnAddThread(new AddThreadEventArgs(crossLink));                              }                          }                            List<ThumbnailInfo> thumbs = new List<ThumbnailInfo>();                          List<ImageInfo> images = siteHelper.GetImages(pageInfo.ReplaceList' thumbs);                          if (_completedImages.Count == 0) {                              foreach (ImageInfo image in images) {                                  for (int iName = 0; iName < 2; iName++) {                                      string baseFileName = (iName == 0) ? image.OriginalFileName : image.FileName;                                      string baseFileNameNoExtension = Path.GetFileNameWithoutExtension(baseFileName);                                      string baseExtension = Path.GetExtension(baseFileName);                                      int iSuffix = 1;                                      string fileName;                                      do {                                          fileName = baseFileNameNoExtension + ((iSuffix == 1) ? String.Empty :                                              ("_" + iSuffix)) + baseExtension;                                          iSuffix++;                                      } while (_imageDiskFileNames.Contains(fileName));                                      string path = Path.Combine(Path.Combine(imageDir' Settings.SortImagesByPoster == true ? image.Poster : String.Empty)' fileName);                                      if (File.Exists(path)) {                                          _imageDiskFileNames.Add(fileName);                                          _completedImages[image.FileName] = new DownloadInfo {                                              Folder = Settings.SortImagesByPoster == true ? image.Poster : String.Empty'                                              FileName = fileName'                                              Skipped = false                                          };                                          break;                                      }                                  }                              }                              foreach (ThumbnailInfo thumb in thumbs) {                                  string path = Path.Combine(thumbDir' thumb.FileName);                                  if (File.Exists(path)) {                                      _completedThumbs[thumb.FileName] = new DownloadInfo {                                          FileName = thumb.FileName'                                          Skipped = false                                      };                                  }                              }                          }                          foreach (ImageInfo image in images) {                              if (!_completedImages.ContainsKey(image.FileName)) {                                  pendingImages.Enqueue(image);                              }                          }                          foreach (ThumbnailInfo thumb in thumbs) {                              if (!_completedThumbs.ContainsKey(thumb.FileName)) {                                  pendingThumbs.Enqueue(thumb);                              }                          }                            string nextPageURL = siteHelper.GetNextPageURL();                          if (!String.IsNullOrEmpty(nextPageURL)) {                              PageInfo nextPageInfo = new PageInfo {                                  URL = nextPageURL                              };                              if (pageIndex == _pageList.Count - 1) {                                  _pageList.Add(nextPageInfo);                              }                              else if (_pageList[pageIndex + 1].URL != nextPageURL) {                                  _pageList[pageIndex + 1] = nextPageInfo;                              }                          }                          else if (pageIndex < _pageList.Count - 1) {                              _pageList.RemoveRange(pageIndex + 1' _pageList.Count - (pageIndex + 1));                          }                      }                        pageIndex++;                      OnDownloadStatus(new DownloadStatusEventArgs(DownloadType.Page' pageIndex' _pageList.Count));                  }                    MillisecondsUntilNextCheck = CheckIntervalSeconds * 1000;                    if (pendingImages.Count != 0 && !IsStopping) {                      if (_maxFileNameLengthBaseDir == 0) {                          _maxFileNameLengthBaseDir = General.GetMaximumFileNameLength(imageDir);                      }                        List<ManualResetEvent> downloadEndEvents = new List<ManualResetEvent>();                      int completedImageCount = 0;                      foreach (KeyValuePair<string' DownloadInfo> item in _completedImages) {                          if (!item.Value.Skipped) completedImageCount++;                      }                      int totalImageCount = completedImageCount + pendingImages.Count;                      OnDownloadStatus(new DownloadStatusEventArgs(DownloadType.Image' completedImageCount' totalImageCount));                      while (pendingImages.Count != 0 && !IsStopping) {                          string saveFileNameNoExtension;                          string saveExtension;                          string savePath;                          ImageInfo image = pendingImages.Dequeue();                          bool pathTooLong = false;                            if (Settings.SortImagesByPoster == true && !String.IsNullOrEmpty(image.Poster)) {                              try {                                  Directory.CreateDirectory(Path.Combine(imageDir' image.Poster));                              }                              catch (Exception ex) {                                  Stop(StopReason.IOError);                                  Logger.Log(ex.ToString());                              }                              _maxFileNameLength = General.GetMaximumFileNameLength(Path.Combine(imageDir' image.Poster));                          }                          else {                              _maxFileNameLength = _maxFileNameLengthBaseDir;                          }                            MakeImagePath:                          if ((Settings.UseOriginalFileNames == true) && !String.IsNullOrEmpty(image.OriginalFileName) && !pathTooLong) {                              saveFileNameNoExtension = Path.GetFileNameWithoutExtension(image.OriginalFileName);                              saveExtension = Path.GetExtension(image.OriginalFileName);                          }                          else {                              saveFileNameNoExtension = Path.GetFileNameWithoutExtension(image.FileName);                              saveExtension = Path.GetExtension(image.FileName);                          }                            int iSuffix = 1;                          bool fileNameTaken;                          string saveFileName;                          do {                              savePath = Path.Combine(Path.Combine(imageDir' Settings.SortImagesByPoster == true ? image.Poster : String.Empty)' saveFileNameNoExtension + ((iSuffix == 1) ?                                  String.Empty : ("_" + iSuffix)) + saveExtension);                              saveFileName = Path.GetFileName(savePath);                              fileNameTaken = _imageDiskFileNames.Contains(saveFileName);                              iSuffix++;                          } while (fileNameTaken);                            if (saveFileName.Length > _maxFileNameLength && !pathTooLong) {                              pathTooLong = true;                              goto MakeImagePath;                          }                          _imageDiskFileNames.Add(saveFileName);                            HashType hashType = (Settings.VerifyImageHashes != false) ? image.HashType : HashType.None;                          ManualResetEvent downloadEndEvent = new ManualResetEvent(false);                          DownloadFileEndCallback onDownloadEnd = (result) => {                              if (result == DownloadResult.Completed || result == DownloadResult.Skipped) {                                  lock (_completedImages) {                                      _completedImages[image.FileName] = new DownloadInfo {                                          Folder = Settings.SortImagesByPoster == true ? image.Poster : String.Empty'                                          FileName = saveFileName'                                          Skipped = (result == DownloadResult.Skipped)                                      };                                      if (result != DownloadResult.Skipped) {                                          completedImageCount++;                                      }                                      else {                                          totalImageCount--;                                      }                                      OnDownloadStatus(new DownloadStatusEventArgs(DownloadType.Image' completedImageCount' totalImageCount));                                  }                              }                              downloadEndEvent.Set();                          };                          downloadEndEvents.Add(downloadEndEvent);                          DownloadFileAsync(savePath' image.URL' ImageAuth' image.Referer' hashType' image.Hash' onDownloadEnd);                      }                      foreach (ManualResetEvent downloadEndEvent in downloadEndEvents) {                          downloadEndEvent.WaitOne();                          downloadEndEvent.Close();                      }                  }                    if (Settings.SaveThumbnails != false) {                      if (pendingThumbs.Count != 0 && !IsStopping) {                          if (!Directory.Exists(thumbDir)) {                              try {                                  Directory.CreateDirectory(thumbDir);                              }                              catch (Exception ex) {                                  Stop(StopReason.IOError);                                  Logger.Log(ex.ToString());                              }                          }                            List<ManualResetEvent> downloadEndEvents = new List<ManualResetEvent>();                          int completedThumbCount = 0;                          foreach (KeyValuePair<string' DownloadInfo> item in _completedThumbs) {                              if (!item.Value.Skipped) completedThumbCount++;                          }                          int totalThumbCount = completedThumbCount + pendingThumbs.Count;                          OnDownloadStatus(new DownloadStatusEventArgs(DownloadType.Thumbnail' completedThumbCount' totalThumbCount));                          while (pendingThumbs.Count != 0 && !IsStopping) {                              ThumbnailInfo thumb = pendingThumbs.Dequeue();                              string savePath = Path.Combine(thumbDir' thumb.FileName);                                ManualResetEvent downloadEndEvent = new ManualResetEvent(false);                              DownloadFileEndCallback onDownloadEnd = (result) => {                                  if (result == DownloadResult.Completed || result == DownloadResult.Skipped) {                                      lock (_completedThumbs) {                                          _completedThumbs[thumb.FileName] = new DownloadInfo {                                              FileName = thumb.FileName'                                              Skipped = (result == DownloadResult.Skipped)                                          };                                          if (result != DownloadResult.Skipped) {                                              completedThumbCount++;                                          }                                          else {                                              totalThumbCount--;                                          }                                          OnDownloadStatus(new DownloadStatusEventArgs(DownloadType.Thumbnail' completedThumbCount' totalThumbCount));                                      }                                  }                                  downloadEndEvent.Set();                              };                              downloadEndEvents.Add(downloadEndEvent);                              DownloadFileAsync(savePath' thumb.URL' PageAuth' thumb.Referer' HashType.None' null' onDownloadEnd);                          }                          foreach (ManualResetEvent downloadEndEvent in downloadEndEvents) {                              downloadEndEvent.WaitOne();                              downloadEndEvent.Close();                          }                      }                        if (!IsStopping || StopReason != StopReason.IOError) {                          foreach (PageInfo pageInfo in _pageList) {                              if (pageInfo.IsFresh) {                                  Process(pageInfo' siteHelper' threadDir' imageDir' thumbDir' _completedImages' _completedThumbs);                              }                          }                      }                  }                    if (OneTimeDownload) {                      Stop(StopReason.DownloadComplete);                  }              }              catch (Exception ex) {                  Stop(StopReason.Other);                  Logger.Log(ex.ToString());              }
Magic Number,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,Check,The following statement contains a magic number: try {                  SiteHelper siteHelper = SiteHelpers.GetInstance(PageHost);                    try {                      lock (_settingsSync) {                          _nextCheckWorkItem = null;                          _checkFinishedEvent.Reset();                          _isWaiting = false;                            if (!_hasInitialized) {                              siteHelper.SetURL(_pageURL);                                _pageList = new List<PageInfo> {                                  new PageInfo {                                      URL = _pageURL                                  }                              };                              _imageDiskFileNames = new HashSet<string>(StringComparer.OrdinalIgnoreCase);                              _completedImages = new Dictionary<string' DownloadInfo>(StringComparer.OrdinalIgnoreCase);                              _completedThumbs = new Dictionary<string' DownloadInfo>(StringComparer.OrdinalIgnoreCase);                              _maxFileNameLengthBaseDir = 0;                                if (String.IsNullOrEmpty(_threadDownloadDirectory)) {                                  _threadDownloadDirectory = Path.Combine(                                      Path.Combine(_mainDownloadDirectory' Settings.RenameDownloadFolderWithCategory == true ? General.CleanFileName(_category) : String.Empty)'                                      General.CleanFileName(String.Format("{0}_{1}_{2}{3}"' siteHelper.GetSiteName()' siteHelper.GetBoardName()' _threadName' ParentThreadFormattedDescription)));                              }                              if (!Directory.Exists(_threadDownloadDirectory)) {                                  Directory.CreateDirectory(_threadDownloadDirectory);                              }                              if (String.IsNullOrEmpty(_description)) {                                  _description = General.CleanFileName(String.Format("{0}_{1}_{2}"' siteHelper.GetSiteName()' siteHelper.GetBoardName()' _threadName));                              }                              _minCheckIntervalSeconds = siteHelper.IsBoardHighTurnover() ? 30 : 60;                              _checkIntervalSeconds = Math.Max(_checkIntervalSeconds' _minCheckIntervalSeconds);                                _hasInitialized = true;                          }                      }                  }                  catch (Exception ex) {                      if (ex is IOException || ex is UnauthorizedAccessException) {                          Stop(StopReason.IOError);                          Logger.Log(ex.ToString());                      }                      else throw;                  }                    string threadDir = ThreadDownloadDirectory;                  string imageDir = ThreadDownloadDirectory;                  string thumbDir = Path.Combine(ThreadDownloadDirectory' "thumbs");                    Queue<ImageInfo> pendingImages = new Queue<ImageInfo>();                  Queue<ThumbnailInfo> pendingThumbs = new Queue<ThumbnailInfo>();                    foreach (PageInfo pageInfo in _pageList) {                      // Reset the fresh flag on all of the pages before downloading starts so that                      // they're valid even if stopping before all the pages have been downloaded                      pageInfo.IsFresh = false;                  }                    int pageIndex = 0;                  OnDownloadStatus(new DownloadStatusEventArgs(DownloadType.Page' 0' _pageList.Count));                  while (pageIndex < _pageList.Count && !IsStopping) {                      string saveFileName = General.CleanFileName(_threadName) + ((pageIndex == 0) ? String.Empty : ("_" + (pageIndex + 1))) + ".html";                      HTMLParser previousParser = null;                      HTMLParser pageParser = null;                        PageInfo pageInfo = _pageList[pageIndex];                      pageInfo.Path = Path.Combine(threadDir' saveFileName);                        if (File.Exists(pageInfo.Path)) {                          string previousText = null;                          try { previousText = File.ReadAllText(pageInfo.Path); }                          catch { }                          previousParser = !String.IsNullOrEmpty(previousText) ? new HTMLParser(previousText) : null;                      }                        ManualResetEvent downloadEndEvent = new ManualResetEvent(false);                      DownloadPageEndCallback downloadEnd = (result' content' lastModifiedTime' encoding) => {                          if (result == DownloadResult.Completed) {                              pageInfo.IsFresh = true;                              pageParser = new HTMLParser(content);                              pageInfo.CacheTime = lastModifiedTime;                              pageInfo.Encoding = encoding;                              pageInfo.ReplaceList = (Settings.SaveThumbnails != false) ? new List<ReplaceInfo>() : null;                          }                          downloadEndEvent.Set();                      };                      DownloadPageAsync(pageInfo.Path' pageInfo.URL' PageAuth' pageInfo.CacheTime' downloadEnd);                      downloadEndEvent.WaitOne();                      downloadEndEvent.Close();                        if (pageParser != null) {                          siteHelper.SetURL(pageInfo.URL);                          siteHelper.SetHTMLParser(pageParser);                          siteHelper.ResurrectDeadPosts(previousParser' pageInfo.ReplaceList);                            if (AutoFollow) {                              foreach (string crossLink in siteHelper.GetCrossLinks(pageInfo.ReplaceList' Settings.InterBoardAutoFollow != false)) {                                  SiteHelper crossLinkSiteHelper = SiteHelpers.GetInstance((new Uri(crossLink)).Host);                                  crossLinkSiteHelper.SetURL(crossLink);                                  string crossLinkID = crossLinkSiteHelper.GetPageID();                                  if (!RootThread.DescendantThreads.ContainsKey(crossLinkID) && RootThread.PageID != crossLinkID) OnAddThread(new AddThreadEventArgs(crossLink));                              }                          }                            List<ThumbnailInfo> thumbs = new List<ThumbnailInfo>();                          List<ImageInfo> images = siteHelper.GetImages(pageInfo.ReplaceList' thumbs);                          if (_completedImages.Count == 0) {                              foreach (ImageInfo image in images) {                                  for (int iName = 0; iName < 2; iName++) {                                      string baseFileName = (iName == 0) ? image.OriginalFileName : image.FileName;                                      string baseFileNameNoExtension = Path.GetFileNameWithoutExtension(baseFileName);                                      string baseExtension = Path.GetExtension(baseFileName);                                      int iSuffix = 1;                                      string fileName;                                      do {                                          fileName = baseFileNameNoExtension + ((iSuffix == 1) ? String.Empty :                                              ("_" + iSuffix)) + baseExtension;                                          iSuffix++;                                      } while (_imageDiskFileNames.Contains(fileName));                                      string path = Path.Combine(Path.Combine(imageDir' Settings.SortImagesByPoster == true ? image.Poster : String.Empty)' fileName);                                      if (File.Exists(path)) {                                          _imageDiskFileNames.Add(fileName);                                          _completedImages[image.FileName] = new DownloadInfo {                                              Folder = Settings.SortImagesByPoster == true ? image.Poster : String.Empty'                                              FileName = fileName'                                              Skipped = false                                          };                                          break;                                      }                                  }                              }                              foreach (ThumbnailInfo thumb in thumbs) {                                  string path = Path.Combine(thumbDir' thumb.FileName);                                  if (File.Exists(path)) {                                      _completedThumbs[thumb.FileName] = new DownloadInfo {                                          FileName = thumb.FileName'                                          Skipped = false                                      };                                  }                              }                          }                          foreach (ImageInfo image in images) {                              if (!_completedImages.ContainsKey(image.FileName)) {                                  pendingImages.Enqueue(image);                              }                          }                          foreach (ThumbnailInfo thumb in thumbs) {                              if (!_completedThumbs.ContainsKey(thumb.FileName)) {                                  pendingThumbs.Enqueue(thumb);                              }                          }                            string nextPageURL = siteHelper.GetNextPageURL();                          if (!String.IsNullOrEmpty(nextPageURL)) {                              PageInfo nextPageInfo = new PageInfo {                                  URL = nextPageURL                              };                              if (pageIndex == _pageList.Count - 1) {                                  _pageList.Add(nextPageInfo);                              }                              else if (_pageList[pageIndex + 1].URL != nextPageURL) {                                  _pageList[pageIndex + 1] = nextPageInfo;                              }                          }                          else if (pageIndex < _pageList.Count - 1) {                              _pageList.RemoveRange(pageIndex + 1' _pageList.Count - (pageIndex + 1));                          }                      }                        pageIndex++;                      OnDownloadStatus(new DownloadStatusEventArgs(DownloadType.Page' pageIndex' _pageList.Count));                  }                    MillisecondsUntilNextCheck = CheckIntervalSeconds * 1000;                    if (pendingImages.Count != 0 && !IsStopping) {                      if (_maxFileNameLengthBaseDir == 0) {                          _maxFileNameLengthBaseDir = General.GetMaximumFileNameLength(imageDir);                      }                        List<ManualResetEvent> downloadEndEvents = new List<ManualResetEvent>();                      int completedImageCount = 0;                      foreach (KeyValuePair<string' DownloadInfo> item in _completedImages) {                          if (!item.Value.Skipped) completedImageCount++;                      }                      int totalImageCount = completedImageCount + pendingImages.Count;                      OnDownloadStatus(new DownloadStatusEventArgs(DownloadType.Image' completedImageCount' totalImageCount));                      while (pendingImages.Count != 0 && !IsStopping) {                          string saveFileNameNoExtension;                          string saveExtension;                          string savePath;                          ImageInfo image = pendingImages.Dequeue();                          bool pathTooLong = false;                            if (Settings.SortImagesByPoster == true && !String.IsNullOrEmpty(image.Poster)) {                              try {                                  Directory.CreateDirectory(Path.Combine(imageDir' image.Poster));                              }                              catch (Exception ex) {                                  Stop(StopReason.IOError);                                  Logger.Log(ex.ToString());                              }                              _maxFileNameLength = General.GetMaximumFileNameLength(Path.Combine(imageDir' image.Poster));                          }                          else {                              _maxFileNameLength = _maxFileNameLengthBaseDir;                          }                            MakeImagePath:                          if ((Settings.UseOriginalFileNames == true) && !String.IsNullOrEmpty(image.OriginalFileName) && !pathTooLong) {                              saveFileNameNoExtension = Path.GetFileNameWithoutExtension(image.OriginalFileName);                              saveExtension = Path.GetExtension(image.OriginalFileName);                          }                          else {                              saveFileNameNoExtension = Path.GetFileNameWithoutExtension(image.FileName);                              saveExtension = Path.GetExtension(image.FileName);                          }                            int iSuffix = 1;                          bool fileNameTaken;                          string saveFileName;                          do {                              savePath = Path.Combine(Path.Combine(imageDir' Settings.SortImagesByPoster == true ? image.Poster : String.Empty)' saveFileNameNoExtension + ((iSuffix == 1) ?                                  String.Empty : ("_" + iSuffix)) + saveExtension);                              saveFileName = Path.GetFileName(savePath);                              fileNameTaken = _imageDiskFileNames.Contains(saveFileName);                              iSuffix++;                          } while (fileNameTaken);                            if (saveFileName.Length > _maxFileNameLength && !pathTooLong) {                              pathTooLong = true;                              goto MakeImagePath;                          }                          _imageDiskFileNames.Add(saveFileName);                            HashType hashType = (Settings.VerifyImageHashes != false) ? image.HashType : HashType.None;                          ManualResetEvent downloadEndEvent = new ManualResetEvent(false);                          DownloadFileEndCallback onDownloadEnd = (result) => {                              if (result == DownloadResult.Completed || result == DownloadResult.Skipped) {                                  lock (_completedImages) {                                      _completedImages[image.FileName] = new DownloadInfo {                                          Folder = Settings.SortImagesByPoster == true ? image.Poster : String.Empty'                                          FileName = saveFileName'                                          Skipped = (result == DownloadResult.Skipped)                                      };                                      if (result != DownloadResult.Skipped) {                                          completedImageCount++;                                      }                                      else {                                          totalImageCount--;                                      }                                      OnDownloadStatus(new DownloadStatusEventArgs(DownloadType.Image' completedImageCount' totalImageCount));                                  }                              }                              downloadEndEvent.Set();                          };                          downloadEndEvents.Add(downloadEndEvent);                          DownloadFileAsync(savePath' image.URL' ImageAuth' image.Referer' hashType' image.Hash' onDownloadEnd);                      }                      foreach (ManualResetEvent downloadEndEvent in downloadEndEvents) {                          downloadEndEvent.WaitOne();                          downloadEndEvent.Close();                      }                  }                    if (Settings.SaveThumbnails != false) {                      if (pendingThumbs.Count != 0 && !IsStopping) {                          if (!Directory.Exists(thumbDir)) {                              try {                                  Directory.CreateDirectory(thumbDir);                              }                              catch (Exception ex) {                                  Stop(StopReason.IOError);                                  Logger.Log(ex.ToString());                              }                          }                            List<ManualResetEvent> downloadEndEvents = new List<ManualResetEvent>();                          int completedThumbCount = 0;                          foreach (KeyValuePair<string' DownloadInfo> item in _completedThumbs) {                              if (!item.Value.Skipped) completedThumbCount++;                          }                          int totalThumbCount = completedThumbCount + pendingThumbs.Count;                          OnDownloadStatus(new DownloadStatusEventArgs(DownloadType.Thumbnail' completedThumbCount' totalThumbCount));                          while (pendingThumbs.Count != 0 && !IsStopping) {                              ThumbnailInfo thumb = pendingThumbs.Dequeue();                              string savePath = Path.Combine(thumbDir' thumb.FileName);                                ManualResetEvent downloadEndEvent = new ManualResetEvent(false);                              DownloadFileEndCallback onDownloadEnd = (result) => {                                  if (result == DownloadResult.Completed || result == DownloadResult.Skipped) {                                      lock (_completedThumbs) {                                          _completedThumbs[thumb.FileName] = new DownloadInfo {                                              FileName = thumb.FileName'                                              Skipped = (result == DownloadResult.Skipped)                                          };                                          if (result != DownloadResult.Skipped) {                                              completedThumbCount++;                                          }                                          else {                                              totalThumbCount--;                                          }                                          OnDownloadStatus(new DownloadStatusEventArgs(DownloadType.Thumbnail' completedThumbCount' totalThumbCount));                                      }                                  }                                  downloadEndEvent.Set();                              };                              downloadEndEvents.Add(downloadEndEvent);                              DownloadFileAsync(savePath' thumb.URL' PageAuth' thumb.Referer' HashType.None' null' onDownloadEnd);                          }                          foreach (ManualResetEvent downloadEndEvent in downloadEndEvents) {                              downloadEndEvent.WaitOne();                              downloadEndEvent.Close();                          }                      }                        if (!IsStopping || StopReason != StopReason.IOError) {                          foreach (PageInfo pageInfo in _pageList) {                              if (pageInfo.IsFresh) {                                  Process(pageInfo' siteHelper' threadDir' imageDir' thumbDir' _completedImages' _completedThumbs);                              }                          }                      }                  }                    if (OneTimeDownload) {                      Stop(StopReason.DownloadComplete);                  }              }              catch (Exception ex) {                  Stop(StopReason.Other);                  Logger.Log(ex.ToString());              }
Magic Number,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,Process,The following statement contains a magic number: for (int i = 0; i < pageInfo.ReplaceList.Count; i++) {                  ReplaceInfo replace = pageInfo.ReplaceList[i];                  DownloadInfo downloadInfo = null;                  ThreadWatcher watcher;                  Func<string' string> getRelativeDownloadPath = (fileDownloadDir) => {                      return General.GetRelativeFilePath(Path.Combine(fileDownloadDir' downloadInfo.Path)'                          threadDir).Replace(Path.DirectorySeparatorChar' '/');                  };                  if (replace.Type == ReplaceType.ImageLinkHref && completedImages.TryGetValue(replace.Tag' out downloadInfo)) {                      replace.Value = "href=\"" + General.HtmlAttributeEncode(getRelativeDownloadPath(imageDir)' false) + "\"";                  }                  if (replace.Type == ReplaceType.ImageSrc && completedThumbs.TryGetValue(replace.Tag' out downloadInfo)) {                      replace.Value = "src=\"" + General.HtmlAttributeEncode(getRelativeDownloadPath(thumbDir)' false) + "\"";                  }                  if (RootThread.DescendantThreads.TryGetValue(replace.Tag' out watcher)) {                      if (watcher._hasInitialized) {                          switch (replace.Type) {                              case ReplaceType.QuoteLinkHref:                                  replace.Value = "href=\"" + HttpUtility.HtmlAttributeEncode(General.GetRelativeFilePath(Path.Combine(watcher.ThreadDownloadDirectory' General.CleanFileName(watcher.ThreadName) + ".html")' _threadDownloadDirectory)) + "\"";                                  break;                              case ReplaceType.DeadLink:                                  string[] tagSplit = replace.Tag.Split('/');                                  string innerHTML = String.Format(">>{0}{1}"' siteHelper.GetBoardName() != tagSplit[1] ? ">/" + tagSplit[1] + "/" : String.Empty' tagSplit[2]);                                  replace.Value = "<a class=\"quotelink\" href=\"" + HttpUtility.HtmlAttributeEncode(General.GetRelativeFilePath(Path.Combine(watcher.ThreadDownloadDirectory' General.CleanFileName(watcher.ThreadName) + ".html")' _threadDownloadDirectory)) + "\">" + innerHTML + "</a>";                                  break;                          }                      }                      else {                          pageInfo.ReplaceList.RemoveAt(i--);                      }                  }              }
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,frmChanThreadWatch,The following statement contains a magic number: if (Settings.CheckEvery != null) {                  foreach (ListItemInt32 item in cboCheckEvery.Items) {                      if (item.Value != Settings.CheckEvery) continue;                      cboCheckEvery.SelectedValue = Settings.CheckEvery;                      break;                  }                  if ((int)cboCheckEvery.SelectedValue != Settings.CheckEvery) txtCheckEvery.Text = Settings.CheckEvery.ToString();              }              else {                  cboCheckEvery.SelectedValue = 3;              }
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,frmChanThreadWatch_FormClosed,The following statement contains a magic number: foreach (ThreadWatcher watcher in ThreadWatchers) {                  while (!watcher.WaitUntilStopped(10) || !watcher.WaitReparse(10)) {                      Application.DoEvents();                  }              }
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,frmChanThreadWatch_FormClosed,The following statement contains a magic number: foreach (ThreadWatcher watcher in ThreadWatchers) {                  while (!watcher.WaitUntilStopped(10) || !watcher.WaitReparse(10)) {                      Application.DoEvents();                  }              }
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,frmChanThreadWatch_DragDrop,The following statement contains a magic number: if (e.Data.GetDataPresent("UniformResourceLocatorW")) {                  byte[] data = ((MemoryStream)e.Data.GetData("UniformResourceLocatorW")).ToArray();                  url = Encoding.Unicode.GetString(data' 0' General.StrLenW(data) * 2);              }              else if (e.Data.GetDataPresent("UniformResourceLocator")) {                  byte[] data = ((MemoryStream)e.Data.GetData("UniformResourceLocator")).ToArray();                  url = Encoding.Default.GetString(data' 0' General.StrLen(data));              }
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,miOpenFolder_Click,The following statement contains a magic number: if (selectedCount > 5 && MessageBox.Show(this' "Do you want to open the folders of all " + selectedCount + " selected items?"'                  "Open Folders"' MessageBoxButtons.YesNo' MessageBoxIcon.Question) != DialogResult.Yes)              {                  return;              }
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,miOpenURL_Click,The following statement contains a magic number: if (selectedCount > 5 && MessageBox.Show(this' "Do you want to open the URLs of all " + selectedCount + " selected items?"'                  "Open URLs"' MessageBoxButtons.YesNo' MessageBoxIcon.Question) != DialogResult.Yes)              {                  return;              }
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,miCheckEvery_Click,The following statement contains a magic number: if (menuItem != null) {                  int checkIntervalSeconds = Convert.ToInt32(menuItem.Tag) * 60;                  foreach (ThreadWatcher watcher in SelectedThreadWatchers) {                      watcher.CheckIntervalSeconds = checkIntervalSeconds;                  }                  UpdateWaitingWatcherStatuses();              }
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,btnSettings_Click,The following statement contains a magic number: tmrBackupThreadList.Interval = (Settings.BackupEvery ?? 1) * 60 * 1000;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,btnSettings_Click,The following statement contains a magic number: tmrBackupThreadList.Interval = (Settings.BackupEvery ?? 1) * 60 * 1000;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,cboCheckEvery_SelectedIndexChanged,The following statement contains a magic number: if (_cboCheckEveryLastValue == null && (int)cboCheckEvery.SelectedValue == 0 && (int)cboCheckEvery.SelectedValue != Settings.CheckEvery) {                  _cboCheckEveryLastValue = 3;              }              else {                  _cboCheckEveryLastValue = cboCheckEvery.SelectedValue;              }
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,tmrMaintenance_Tick,The following statement contains a magic number: lock (_downloadProgresses) {                  if (_downloadProgresses.Count == 0) return;                  List<long> oldDownloadIDs = new List<long>();                  long ticksNow = TickCount.Now;                  foreach (DownloadProgressInfo info in _downloadProgresses.Values) {                      if (info.EndTicks != null && ticksNow - info.EndTicks.Value > 5000) {                          oldDownloadIDs.Add(info.DownloadID);                      }                  }                  foreach (long downloadID in oldDownloadIDs) {                      _downloadProgresses.Remove(downloadID);                  }              }
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,AddThread,The following statement contains a magic number: ThreadInfo thread = new ThreadInfo {                  URL = pageURL'                  PageAuth = (chkPageAuth.Checked && (txtPageAuth.Text.IndexOf(':') != -1)) ? txtPageAuth.Text : String.Empty'                  ImageAuth = (chkImageAuth.Checked && (txtImageAuth.Text.IndexOf(':') != -1)) ? txtImageAuth.Text : String.Empty'                  CheckIntervalSeconds = pnlCheckEvery.Enabled ? (cboCheckEvery.Enabled ? (int)cboCheckEvery.SelectedValue * 60 : Int32.Parse(txtCheckEvery.Text) * 60) : 0'                  OneTimeDownload = chkOneTime.Checked'                  SaveDir = null'                  Description = String.Empty'                  StopReason = null'                  ExtraData = null'                  Category = cboCategory.Text'                  AutoFollow = chkAutoFollow.Checked              };
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,AddThread,The following statement contains a magic number: ThreadInfo thread = new ThreadInfo {                  URL = pageURL'                  PageAuth = (chkPageAuth.Checked && (txtPageAuth.Text.IndexOf(':') != -1)) ? txtPageAuth.Text : String.Empty'                  ImageAuth = (chkImageAuth.Checked && (txtImageAuth.Text.IndexOf(':') != -1)) ? txtImageAuth.Text : String.Empty'                  CheckIntervalSeconds = pnlCheckEvery.Enabled ? (cboCheckEvery.Enabled ? (int)cboCheckEvery.SelectedValue * 60 : Int32.Parse(txtCheckEvery.Text) * 60) : 0'                  OneTimeDownload = chkOneTime.Checked'                  SaveDir = null'                  Description = String.Empty'                  StopReason = null'                  ExtraData = null'                  Category = cboCategory.Text'                  AutoFollow = chkAutoFollow.Checked              };
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,BindCheckEveryList,The following statement contains a magic number: cboCheckEvery.DataSource = new[] {                  new ListItemInt32(0' "1 or <")'                  new ListItemInt32(2' "2")'                  new ListItemInt32(3' "3")'                  new ListItemInt32(5' "5")'                  new ListItemInt32(10' "10")'                  new ListItemInt32(60' "60")              };
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,BindCheckEveryList,The following statement contains a magic number: cboCheckEvery.DataSource = new[] {                  new ListItemInt32(0' "1 or <")'                  new ListItemInt32(2' "2")'                  new ListItemInt32(3' "3")'                  new ListItemInt32(5' "5")'                  new ListItemInt32(10' "10")'                  new ListItemInt32(60' "60")              };
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,BindCheckEveryList,The following statement contains a magic number: cboCheckEvery.DataSource = new[] {                  new ListItemInt32(0' "1 or <")'                  new ListItemInt32(2' "2")'                  new ListItemInt32(3' "3")'                  new ListItemInt32(5' "5")'                  new ListItemInt32(10' "10")'                  new ListItemInt32(60' "60")              };
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,BindCheckEveryList,The following statement contains a magic number: cboCheckEvery.DataSource = new[] {                  new ListItemInt32(0' "1 or <")'                  new ListItemInt32(2' "2")'                  new ListItemInt32(3' "3")'                  new ListItemInt32(5' "5")'                  new ListItemInt32(10' "10")'                  new ListItemInt32(60' "60")              };
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,BindCheckEveryList,The following statement contains a magic number: cboCheckEvery.DataSource = new[] {                  new ListItemInt32(0' "1 or <")'                  new ListItemInt32(2' "2")'                  new ListItemInt32(3' "3")'                  new ListItemInt32(5' "5")'                  new ListItemInt32(10' "10")'                  new ListItemInt32(60' "60")              };
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,SetWaitStatus,The following statement contains a magic number: int remainingSeconds = (watcher.MillisecondsUntilNextCheck + 999) / 1000;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,SetWaitStatus,The following statement contains a magic number: int remainingSeconds = (watcher.MillisecondsUntilNextCheck + 999) / 1000;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,LoadThreadList,The following statement contains a magic number: try {                  string path = Path.Combine(Settings.GetSettingsDirectory()' Settings.ThreadsFileName);                  if (!File.Exists(path)) return;                  string[] lines = File.ReadAllLines(path);                  if (lines.Length < 1) return;                  int fileVersion = Int32.Parse(lines[0]);                  int linesPerThread;                  switch (fileVersion) {                      case 1: linesPerThread = 6; break;                      case 2: linesPerThread = 7; break;                      case 3: linesPerThread = 10; break;                      case 4: linesPerThread = 13; break;                      default: return;                  }                  if (lines.Length < (1 + linesPerThread)) return;                  _isLoadingThreadsFromFile = true;                  Invoke(() => {                      UpdateCategories(String.Empty);                  });                  int i = 1;                  while (i <= lines.Length - linesPerThread) {                      ThreadInfo thread = new ThreadInfo { ExtraData = new WatcherExtraData() };                      thread.URL = lines[i++];                      thread.PageAuth = lines[i++];                      thread.ImageAuth = lines[i++];                      thread.CheckIntervalSeconds = Int32.Parse(lines[i++]);                      thread.OneTimeDownload = lines[i++] == "1";                      thread.SaveDir = lines[i++];                      thread.SaveDir = thread.SaveDir.Length != 0 ? General.GetAbsoluteDirectoryPath(thread.SaveDir' Settings.AbsoluteDownloadDirectory) : null;                      if (fileVersion >= 2) {                          string stopReasonLine = lines[i++];                          if (stopReasonLine.Length != 0) {                              thread.StopReason = (StopReason)Int32.Parse(stopReasonLine);                          }                      }                      if (fileVersion >= 3) {                          thread.Description = lines[i++];                          thread.ExtraData.AddedOn = new DateTime(Int64.Parse(lines[i++])' DateTimeKind.Utc).ToLocalTime();                          string lastImageOn = lines[i++];                          if (lastImageOn.Length != 0) {                              thread.ExtraData.LastImageOn = new DateTime(Int64.Parse(lastImageOn)' DateTimeKind.Utc).ToLocalTime();                          }                      }                      else {                          thread.Description = String.Empty;                          thread.ExtraData.AddedOn = DateTime.Now;                      }                      if (fileVersion >= 4) {                          thread.ExtraData.AddedFrom = lines[i++];                          thread.Category = lines[i++];                          thread.AutoFollow = lines[i++] == "1";                      }                      else {                          thread.ExtraData.AddedFrom = String.Empty;                          thread.Category = String.Empty;                      }                      Invoke(() => {                          AddThread(thread);                      });                  }                  foreach (ThreadWatcher threadWatcher in ThreadWatchers) {                      ThreadWatcher parentThread;                      _watchers.TryGetValue(((WatcherExtraData)threadWatcher.Tag).AddedFrom' out parentThread);                      threadWatcher.ParentThread = parentThread;                      if (parentThread != null && !parentThread.ChildThreads.ContainsKey(threadWatcher.PageID) && !parentThread.ChildThreads.ContainsKey(parentThread.PageID)) {                          parentThread.ChildThreads.Add(threadWatcher.PageID' threadWatcher);                      }                      ThreadWatcher watcher = threadWatcher;                      Invoke(() => {                          DisplayAddedFrom(watcher);                      });                      if (Settings.ChildThreadsAreNewFormat == true && threadWatcher.StopReason != StopReason.PageNotFound && threadWatcher.StopReason != StopReason.UserRequest) {                          threadWatcher.Start();                      }                  }                  if (Settings.ChildThreadsAreNewFormat != true) {                      foreach (ThreadWatcher threadWatcher in ThreadWatchers) {                          if (threadWatcher.ChildThreads.Count == 0 || threadWatcher.ParentThread != null) continue;                          foreach (ThreadWatcher descendantThread in threadWatcher.DescendantThreads.Values) {                              descendantThread.DoNotRename = true;                              string sourceDir = descendantThread.ThreadDownloadDirectory;                              string destDir;                              if (General.RemoveLastDirectory(sourceDir) == descendantThread.MainDownloadDirectory) {                                  destDir = Path.Combine(descendantThread.MainDownloadDirectory' General.RemoveLastDirectory(sourceDir));                              }                              else {                                  destDir = Path.Combine(General.RemoveLastDirectory(threadWatcher.ThreadDownloadDirectory)'                                      General.GetRelativeDirectoryPath(descendantThread.ThreadDownloadDirectory' threadWatcher.ThreadDownloadDirectory));                              }                              if (String.Equals(destDir' sourceDir' StringComparison.Ordinal) || !Directory.Exists(sourceDir)) continue;                              try {                                  if (String.Equals(destDir' sourceDir' StringComparison.OrdinalIgnoreCase)) {                                      Directory.Move(sourceDir' destDir + " Temp");                                      sourceDir = destDir + " Temp";                                  }                                  if (!Directory.Exists(General.RemoveLastDirectory(destDir))) Directory.CreateDirectory(General.RemoveLastDirectory(destDir));                                  Directory.Move(sourceDir' destDir);                                  descendantThread.ThreadDownloadDirectory = destDir;                              }                              catch (Exception ex) {                                  Logger.Log(ex.ToString());                              }                              descendantThread.DoNotRename = false;                          }                      }                      Settings.ChildThreadsAreNewFormat = true;                      Settings.Save();                        foreach (ThreadWatcher threadWatcher in ThreadWatchers) {                          if (threadWatcher.StopReason != StopReason.PageNotFound && threadWatcher.StopReason != StopReason.UserRequest) threadWatcher.Start();                      }                  }                  _isLoadingThreadsFromFile = false;              }              catch (Exception ex) {                  _isLoadingThreadsFromFile = false;                  Logger.Log(ex.ToString());              }
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,LoadThreadList,The following statement contains a magic number: try {                  string path = Path.Combine(Settings.GetSettingsDirectory()' Settings.ThreadsFileName);                  if (!File.Exists(path)) return;                  string[] lines = File.ReadAllLines(path);                  if (lines.Length < 1) return;                  int fileVersion = Int32.Parse(lines[0]);                  int linesPerThread;                  switch (fileVersion) {                      case 1: linesPerThread = 6; break;                      case 2: linesPerThread = 7; break;                      case 3: linesPerThread = 10; break;                      case 4: linesPerThread = 13; break;                      default: return;                  }                  if (lines.Length < (1 + linesPerThread)) return;                  _isLoadingThreadsFromFile = true;                  Invoke(() => {                      UpdateCategories(String.Empty);                  });                  int i = 1;                  while (i <= lines.Length - linesPerThread) {                      ThreadInfo thread = new ThreadInfo { ExtraData = new WatcherExtraData() };                      thread.URL = lines[i++];                      thread.PageAuth = lines[i++];                      thread.ImageAuth = lines[i++];                      thread.CheckIntervalSeconds = Int32.Parse(lines[i++]);                      thread.OneTimeDownload = lines[i++] == "1";                      thread.SaveDir = lines[i++];                      thread.SaveDir = thread.SaveDir.Length != 0 ? General.GetAbsoluteDirectoryPath(thread.SaveDir' Settings.AbsoluteDownloadDirectory) : null;                      if (fileVersion >= 2) {                          string stopReasonLine = lines[i++];                          if (stopReasonLine.Length != 0) {                              thread.StopReason = (StopReason)Int32.Parse(stopReasonLine);                          }                      }                      if (fileVersion >= 3) {                          thread.Description = lines[i++];                          thread.ExtraData.AddedOn = new DateTime(Int64.Parse(lines[i++])' DateTimeKind.Utc).ToLocalTime();                          string lastImageOn = lines[i++];                          if (lastImageOn.Length != 0) {                              thread.ExtraData.LastImageOn = new DateTime(Int64.Parse(lastImageOn)' DateTimeKind.Utc).ToLocalTime();                          }                      }                      else {                          thread.Description = String.Empty;                          thread.ExtraData.AddedOn = DateTime.Now;                      }                      if (fileVersion >= 4) {                          thread.ExtraData.AddedFrom = lines[i++];                          thread.Category = lines[i++];                          thread.AutoFollow = lines[i++] == "1";                      }                      else {                          thread.ExtraData.AddedFrom = String.Empty;                          thread.Category = String.Empty;                      }                      Invoke(() => {                          AddThread(thread);                      });                  }                  foreach (ThreadWatcher threadWatcher in ThreadWatchers) {                      ThreadWatcher parentThread;                      _watchers.TryGetValue(((WatcherExtraData)threadWatcher.Tag).AddedFrom' out parentThread);                      threadWatcher.ParentThread = parentThread;                      if (parentThread != null && !parentThread.ChildThreads.ContainsKey(threadWatcher.PageID) && !parentThread.ChildThreads.ContainsKey(parentThread.PageID)) {                          parentThread.ChildThreads.Add(threadWatcher.PageID' threadWatcher);                      }                      ThreadWatcher watcher = threadWatcher;                      Invoke(() => {                          DisplayAddedFrom(watcher);                      });                      if (Settings.ChildThreadsAreNewFormat == true && threadWatcher.StopReason != StopReason.PageNotFound && threadWatcher.StopReason != StopReason.UserRequest) {                          threadWatcher.Start();                      }                  }                  if (Settings.ChildThreadsAreNewFormat != true) {                      foreach (ThreadWatcher threadWatcher in ThreadWatchers) {                          if (threadWatcher.ChildThreads.Count == 0 || threadWatcher.ParentThread != null) continue;                          foreach (ThreadWatcher descendantThread in threadWatcher.DescendantThreads.Values) {                              descendantThread.DoNotRename = true;                              string sourceDir = descendantThread.ThreadDownloadDirectory;                              string destDir;                              if (General.RemoveLastDirectory(sourceDir) == descendantThread.MainDownloadDirectory) {                                  destDir = Path.Combine(descendantThread.MainDownloadDirectory' General.RemoveLastDirectory(sourceDir));                              }                              else {                                  destDir = Path.Combine(General.RemoveLastDirectory(threadWatcher.ThreadDownloadDirectory)'                                      General.GetRelativeDirectoryPath(descendantThread.ThreadDownloadDirectory' threadWatcher.ThreadDownloadDirectory));                              }                              if (String.Equals(destDir' sourceDir' StringComparison.Ordinal) || !Directory.Exists(sourceDir)) continue;                              try {                                  if (String.Equals(destDir' sourceDir' StringComparison.OrdinalIgnoreCase)) {                                      Directory.Move(sourceDir' destDir + " Temp");                                      sourceDir = destDir + " Temp";                                  }                                  if (!Directory.Exists(General.RemoveLastDirectory(destDir))) Directory.CreateDirectory(General.RemoveLastDirectory(destDir));                                  Directory.Move(sourceDir' destDir);                                  descendantThread.ThreadDownloadDirectory = destDir;                              }                              catch (Exception ex) {                                  Logger.Log(ex.ToString());                              }                              descendantThread.DoNotRename = false;                          }                      }                      Settings.ChildThreadsAreNewFormat = true;                      Settings.Save();                        foreach (ThreadWatcher threadWatcher in ThreadWatchers) {                          if (threadWatcher.StopReason != StopReason.PageNotFound && threadWatcher.StopReason != StopReason.UserRequest) threadWatcher.Start();                      }                  }                  _isLoadingThreadsFromFile = false;              }              catch (Exception ex) {                  _isLoadingThreadsFromFile = false;                  Logger.Log(ex.ToString());              }
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,LoadThreadList,The following statement contains a magic number: try {                  string path = Path.Combine(Settings.GetSettingsDirectory()' Settings.ThreadsFileName);                  if (!File.Exists(path)) return;                  string[] lines = File.ReadAllLines(path);                  if (lines.Length < 1) return;                  int fileVersion = Int32.Parse(lines[0]);                  int linesPerThread;                  switch (fileVersion) {                      case 1: linesPerThread = 6; break;                      case 2: linesPerThread = 7; break;                      case 3: linesPerThread = 10; break;                      case 4: linesPerThread = 13; break;                      default: return;                  }                  if (lines.Length < (1 + linesPerThread)) return;                  _isLoadingThreadsFromFile = true;                  Invoke(() => {                      UpdateCategories(String.Empty);                  });                  int i = 1;                  while (i <= lines.Length - linesPerThread) {                      ThreadInfo thread = new ThreadInfo { ExtraData = new WatcherExtraData() };                      thread.URL = lines[i++];                      thread.PageAuth = lines[i++];                      thread.ImageAuth = lines[i++];                      thread.CheckIntervalSeconds = Int32.Parse(lines[i++]);                      thread.OneTimeDownload = lines[i++] == "1";                      thread.SaveDir = lines[i++];                      thread.SaveDir = thread.SaveDir.Length != 0 ? General.GetAbsoluteDirectoryPath(thread.SaveDir' Settings.AbsoluteDownloadDirectory) : null;                      if (fileVersion >= 2) {                          string stopReasonLine = lines[i++];                          if (stopReasonLine.Length != 0) {                              thread.StopReason = (StopReason)Int32.Parse(stopReasonLine);                          }                      }                      if (fileVersion >= 3) {                          thread.Description = lines[i++];                          thread.ExtraData.AddedOn = new DateTime(Int64.Parse(lines[i++])' DateTimeKind.Utc).ToLocalTime();                          string lastImageOn = lines[i++];                          if (lastImageOn.Length != 0) {                              thread.ExtraData.LastImageOn = new DateTime(Int64.Parse(lastImageOn)' DateTimeKind.Utc).ToLocalTime();                          }                      }                      else {                          thread.Description = String.Empty;                          thread.ExtraData.AddedOn = DateTime.Now;                      }                      if (fileVersion >= 4) {                          thread.ExtraData.AddedFrom = lines[i++];                          thread.Category = lines[i++];                          thread.AutoFollow = lines[i++] == "1";                      }                      else {                          thread.ExtraData.AddedFrom = String.Empty;                          thread.Category = String.Empty;                      }                      Invoke(() => {                          AddThread(thread);                      });                  }                  foreach (ThreadWatcher threadWatcher in ThreadWatchers) {                      ThreadWatcher parentThread;                      _watchers.TryGetValue(((WatcherExtraData)threadWatcher.Tag).AddedFrom' out parentThread);                      threadWatcher.ParentThread = parentThread;                      if (parentThread != null && !parentThread.ChildThreads.ContainsKey(threadWatcher.PageID) && !parentThread.ChildThreads.ContainsKey(parentThread.PageID)) {                          parentThread.ChildThreads.Add(threadWatcher.PageID' threadWatcher);                      }                      ThreadWatcher watcher = threadWatcher;                      Invoke(() => {                          DisplayAddedFrom(watcher);                      });                      if (Settings.ChildThreadsAreNewFormat == true && threadWatcher.StopReason != StopReason.PageNotFound && threadWatcher.StopReason != StopReason.UserRequest) {                          threadWatcher.Start();                      }                  }                  if (Settings.ChildThreadsAreNewFormat != true) {                      foreach (ThreadWatcher threadWatcher in ThreadWatchers) {                          if (threadWatcher.ChildThreads.Count == 0 || threadWatcher.ParentThread != null) continue;                          foreach (ThreadWatcher descendantThread in threadWatcher.DescendantThreads.Values) {                              descendantThread.DoNotRename = true;                              string sourceDir = descendantThread.ThreadDownloadDirectory;                              string destDir;                              if (General.RemoveLastDirectory(sourceDir) == descendantThread.MainDownloadDirectory) {                                  destDir = Path.Combine(descendantThread.MainDownloadDirectory' General.RemoveLastDirectory(sourceDir));                              }                              else {                                  destDir = Path.Combine(General.RemoveLastDirectory(threadWatcher.ThreadDownloadDirectory)'                                      General.GetRelativeDirectoryPath(descendantThread.ThreadDownloadDirectory' threadWatcher.ThreadDownloadDirectory));                              }                              if (String.Equals(destDir' sourceDir' StringComparison.Ordinal) || !Directory.Exists(sourceDir)) continue;                              try {                                  if (String.Equals(destDir' sourceDir' StringComparison.OrdinalIgnoreCase)) {                                      Directory.Move(sourceDir' destDir + " Temp");                                      sourceDir = destDir + " Temp";                                  }                                  if (!Directory.Exists(General.RemoveLastDirectory(destDir))) Directory.CreateDirectory(General.RemoveLastDirectory(destDir));                                  Directory.Move(sourceDir' destDir);                                  descendantThread.ThreadDownloadDirectory = destDir;                              }                              catch (Exception ex) {                                  Logger.Log(ex.ToString());                              }                              descendantThread.DoNotRename = false;                          }                      }                      Settings.ChildThreadsAreNewFormat = true;                      Settings.Save();                        foreach (ThreadWatcher threadWatcher in ThreadWatchers) {                          if (threadWatcher.StopReason != StopReason.PageNotFound && threadWatcher.StopReason != StopReason.UserRequest) threadWatcher.Start();                      }                  }                  _isLoadingThreadsFromFile = false;              }              catch (Exception ex) {                  _isLoadingThreadsFromFile = false;                  Logger.Log(ex.ToString());              }
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,LoadThreadList,The following statement contains a magic number: try {                  string path = Path.Combine(Settings.GetSettingsDirectory()' Settings.ThreadsFileName);                  if (!File.Exists(path)) return;                  string[] lines = File.ReadAllLines(path);                  if (lines.Length < 1) return;                  int fileVersion = Int32.Parse(lines[0]);                  int linesPerThread;                  switch (fileVersion) {                      case 1: linesPerThread = 6; break;                      case 2: linesPerThread = 7; break;                      case 3: linesPerThread = 10; break;                      case 4: linesPerThread = 13; break;                      default: return;                  }                  if (lines.Length < (1 + linesPerThread)) return;                  _isLoadingThreadsFromFile = true;                  Invoke(() => {                      UpdateCategories(String.Empty);                  });                  int i = 1;                  while (i <= lines.Length - linesPerThread) {                      ThreadInfo thread = new ThreadInfo { ExtraData = new WatcherExtraData() };                      thread.URL = lines[i++];                      thread.PageAuth = lines[i++];                      thread.ImageAuth = lines[i++];                      thread.CheckIntervalSeconds = Int32.Parse(lines[i++]);                      thread.OneTimeDownload = lines[i++] == "1";                      thread.SaveDir = lines[i++];                      thread.SaveDir = thread.SaveDir.Length != 0 ? General.GetAbsoluteDirectoryPath(thread.SaveDir' Settings.AbsoluteDownloadDirectory) : null;                      if (fileVersion >= 2) {                          string stopReasonLine = lines[i++];                          if (stopReasonLine.Length != 0) {                              thread.StopReason = (StopReason)Int32.Parse(stopReasonLine);                          }                      }                      if (fileVersion >= 3) {                          thread.Description = lines[i++];                          thread.ExtraData.AddedOn = new DateTime(Int64.Parse(lines[i++])' DateTimeKind.Utc).ToLocalTime();                          string lastImageOn = lines[i++];                          if (lastImageOn.Length != 0) {                              thread.ExtraData.LastImageOn = new DateTime(Int64.Parse(lastImageOn)' DateTimeKind.Utc).ToLocalTime();                          }                      }                      else {                          thread.Description = String.Empty;                          thread.ExtraData.AddedOn = DateTime.Now;                      }                      if (fileVersion >= 4) {                          thread.ExtraData.AddedFrom = lines[i++];                          thread.Category = lines[i++];                          thread.AutoFollow = lines[i++] == "1";                      }                      else {                          thread.ExtraData.AddedFrom = String.Empty;                          thread.Category = String.Empty;                      }                      Invoke(() => {                          AddThread(thread);                      });                  }                  foreach (ThreadWatcher threadWatcher in ThreadWatchers) {                      ThreadWatcher parentThread;                      _watchers.TryGetValue(((WatcherExtraData)threadWatcher.Tag).AddedFrom' out parentThread);                      threadWatcher.ParentThread = parentThread;                      if (parentThread != null && !parentThread.ChildThreads.ContainsKey(threadWatcher.PageID) && !parentThread.ChildThreads.ContainsKey(parentThread.PageID)) {                          parentThread.ChildThreads.Add(threadWatcher.PageID' threadWatcher);                      }                      ThreadWatcher watcher = threadWatcher;                      Invoke(() => {                          DisplayAddedFrom(watcher);                      });                      if (Settings.ChildThreadsAreNewFormat == true && threadWatcher.StopReason != StopReason.PageNotFound && threadWatcher.StopReason != StopReason.UserRequest) {                          threadWatcher.Start();                      }                  }                  if (Settings.ChildThreadsAreNewFormat != true) {                      foreach (ThreadWatcher threadWatcher in ThreadWatchers) {                          if (threadWatcher.ChildThreads.Count == 0 || threadWatcher.ParentThread != null) continue;                          foreach (ThreadWatcher descendantThread in threadWatcher.DescendantThreads.Values) {                              descendantThread.DoNotRename = true;                              string sourceDir = descendantThread.ThreadDownloadDirectory;                              string destDir;                              if (General.RemoveLastDirectory(sourceDir) == descendantThread.MainDownloadDirectory) {                                  destDir = Path.Combine(descendantThread.MainDownloadDirectory' General.RemoveLastDirectory(sourceDir));                              }                              else {                                  destDir = Path.Combine(General.RemoveLastDirectory(threadWatcher.ThreadDownloadDirectory)'                                      General.GetRelativeDirectoryPath(descendantThread.ThreadDownloadDirectory' threadWatcher.ThreadDownloadDirectory));                              }                              if (String.Equals(destDir' sourceDir' StringComparison.Ordinal) || !Directory.Exists(sourceDir)) continue;                              try {                                  if (String.Equals(destDir' sourceDir' StringComparison.OrdinalIgnoreCase)) {                                      Directory.Move(sourceDir' destDir + " Temp");                                      sourceDir = destDir + " Temp";                                  }                                  if (!Directory.Exists(General.RemoveLastDirectory(destDir))) Directory.CreateDirectory(General.RemoveLastDirectory(destDir));                                  Directory.Move(sourceDir' destDir);                                  descendantThread.ThreadDownloadDirectory = destDir;                              }                              catch (Exception ex) {                                  Logger.Log(ex.ToString());                              }                              descendantThread.DoNotRename = false;                          }                      }                      Settings.ChildThreadsAreNewFormat = true;                      Settings.Save();                        foreach (ThreadWatcher threadWatcher in ThreadWatchers) {                          if (threadWatcher.StopReason != StopReason.PageNotFound && threadWatcher.StopReason != StopReason.UserRequest) threadWatcher.Start();                      }                  }                  _isLoadingThreadsFromFile = false;              }              catch (Exception ex) {                  _isLoadingThreadsFromFile = false;                  Logger.Log(ex.ToString());              }
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,LoadThreadList,The following statement contains a magic number: try {                  string path = Path.Combine(Settings.GetSettingsDirectory()' Settings.ThreadsFileName);                  if (!File.Exists(path)) return;                  string[] lines = File.ReadAllLines(path);                  if (lines.Length < 1) return;                  int fileVersion = Int32.Parse(lines[0]);                  int linesPerThread;                  switch (fileVersion) {                      case 1: linesPerThread = 6; break;                      case 2: linesPerThread = 7; break;                      case 3: linesPerThread = 10; break;                      case 4: linesPerThread = 13; break;                      default: return;                  }                  if (lines.Length < (1 + linesPerThread)) return;                  _isLoadingThreadsFromFile = true;                  Invoke(() => {                      UpdateCategories(String.Empty);                  });                  int i = 1;                  while (i <= lines.Length - linesPerThread) {                      ThreadInfo thread = new ThreadInfo { ExtraData = new WatcherExtraData() };                      thread.URL = lines[i++];                      thread.PageAuth = lines[i++];                      thread.ImageAuth = lines[i++];                      thread.CheckIntervalSeconds = Int32.Parse(lines[i++]);                      thread.OneTimeDownload = lines[i++] == "1";                      thread.SaveDir = lines[i++];                      thread.SaveDir = thread.SaveDir.Length != 0 ? General.GetAbsoluteDirectoryPath(thread.SaveDir' Settings.AbsoluteDownloadDirectory) : null;                      if (fileVersion >= 2) {                          string stopReasonLine = lines[i++];                          if (stopReasonLine.Length != 0) {                              thread.StopReason = (StopReason)Int32.Parse(stopReasonLine);                          }                      }                      if (fileVersion >= 3) {                          thread.Description = lines[i++];                          thread.ExtraData.AddedOn = new DateTime(Int64.Parse(lines[i++])' DateTimeKind.Utc).ToLocalTime();                          string lastImageOn = lines[i++];                          if (lastImageOn.Length != 0) {                              thread.ExtraData.LastImageOn = new DateTime(Int64.Parse(lastImageOn)' DateTimeKind.Utc).ToLocalTime();                          }                      }                      else {                          thread.Description = String.Empty;                          thread.ExtraData.AddedOn = DateTime.Now;                      }                      if (fileVersion >= 4) {                          thread.ExtraData.AddedFrom = lines[i++];                          thread.Category = lines[i++];                          thread.AutoFollow = lines[i++] == "1";                      }                      else {                          thread.ExtraData.AddedFrom = String.Empty;                          thread.Category = String.Empty;                      }                      Invoke(() => {                          AddThread(thread);                      });                  }                  foreach (ThreadWatcher threadWatcher in ThreadWatchers) {                      ThreadWatcher parentThread;                      _watchers.TryGetValue(((WatcherExtraData)threadWatcher.Tag).AddedFrom' out parentThread);                      threadWatcher.ParentThread = parentThread;                      if (parentThread != null && !parentThread.ChildThreads.ContainsKey(threadWatcher.PageID) && !parentThread.ChildThreads.ContainsKey(parentThread.PageID)) {                          parentThread.ChildThreads.Add(threadWatcher.PageID' threadWatcher);                      }                      ThreadWatcher watcher = threadWatcher;                      Invoke(() => {                          DisplayAddedFrom(watcher);                      });                      if (Settings.ChildThreadsAreNewFormat == true && threadWatcher.StopReason != StopReason.PageNotFound && threadWatcher.StopReason != StopReason.UserRequest) {                          threadWatcher.Start();                      }                  }                  if (Settings.ChildThreadsAreNewFormat != true) {                      foreach (ThreadWatcher threadWatcher in ThreadWatchers) {                          if (threadWatcher.ChildThreads.Count == 0 || threadWatcher.ParentThread != null) continue;                          foreach (ThreadWatcher descendantThread in threadWatcher.DescendantThreads.Values) {                              descendantThread.DoNotRename = true;                              string sourceDir = descendantThread.ThreadDownloadDirectory;                              string destDir;                              if (General.RemoveLastDirectory(sourceDir) == descendantThread.MainDownloadDirectory) {                                  destDir = Path.Combine(descendantThread.MainDownloadDirectory' General.RemoveLastDirectory(sourceDir));                              }                              else {                                  destDir = Path.Combine(General.RemoveLastDirectory(threadWatcher.ThreadDownloadDirectory)'                                      General.GetRelativeDirectoryPath(descendantThread.ThreadDownloadDirectory' threadWatcher.ThreadDownloadDirectory));                              }                              if (String.Equals(destDir' sourceDir' StringComparison.Ordinal) || !Directory.Exists(sourceDir)) continue;                              try {                                  if (String.Equals(destDir' sourceDir' StringComparison.OrdinalIgnoreCase)) {                                      Directory.Move(sourceDir' destDir + " Temp");                                      sourceDir = destDir + " Temp";                                  }                                  if (!Directory.Exists(General.RemoveLastDirectory(destDir))) Directory.CreateDirectory(General.RemoveLastDirectory(destDir));                                  Directory.Move(sourceDir' destDir);                                  descendantThread.ThreadDownloadDirectory = destDir;                              }                              catch (Exception ex) {                                  Logger.Log(ex.ToString());                              }                              descendantThread.DoNotRename = false;                          }                      }                      Settings.ChildThreadsAreNewFormat = true;                      Settings.Save();                        foreach (ThreadWatcher threadWatcher in ThreadWatchers) {                          if (threadWatcher.StopReason != StopReason.PageNotFound && threadWatcher.StopReason != StopReason.UserRequest) threadWatcher.Start();                      }                  }                  _isLoadingThreadsFromFile = false;              }              catch (Exception ex) {                  _isLoadingThreadsFromFile = false;                  Logger.Log(ex.ToString());              }
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,LoadThreadList,The following statement contains a magic number: try {                  string path = Path.Combine(Settings.GetSettingsDirectory()' Settings.ThreadsFileName);                  if (!File.Exists(path)) return;                  string[] lines = File.ReadAllLines(path);                  if (lines.Length < 1) return;                  int fileVersion = Int32.Parse(lines[0]);                  int linesPerThread;                  switch (fileVersion) {                      case 1: linesPerThread = 6; break;                      case 2: linesPerThread = 7; break;                      case 3: linesPerThread = 10; break;                      case 4: linesPerThread = 13; break;                      default: return;                  }                  if (lines.Length < (1 + linesPerThread)) return;                  _isLoadingThreadsFromFile = true;                  Invoke(() => {                      UpdateCategories(String.Empty);                  });                  int i = 1;                  while (i <= lines.Length - linesPerThread) {                      ThreadInfo thread = new ThreadInfo { ExtraData = new WatcherExtraData() };                      thread.URL = lines[i++];                      thread.PageAuth = lines[i++];                      thread.ImageAuth = lines[i++];                      thread.CheckIntervalSeconds = Int32.Parse(lines[i++]);                      thread.OneTimeDownload = lines[i++] == "1";                      thread.SaveDir = lines[i++];                      thread.SaveDir = thread.SaveDir.Length != 0 ? General.GetAbsoluteDirectoryPath(thread.SaveDir' Settings.AbsoluteDownloadDirectory) : null;                      if (fileVersion >= 2) {                          string stopReasonLine = lines[i++];                          if (stopReasonLine.Length != 0) {                              thread.StopReason = (StopReason)Int32.Parse(stopReasonLine);                          }                      }                      if (fileVersion >= 3) {                          thread.Description = lines[i++];                          thread.ExtraData.AddedOn = new DateTime(Int64.Parse(lines[i++])' DateTimeKind.Utc).ToLocalTime();                          string lastImageOn = lines[i++];                          if (lastImageOn.Length != 0) {                              thread.ExtraData.LastImageOn = new DateTime(Int64.Parse(lastImageOn)' DateTimeKind.Utc).ToLocalTime();                          }                      }                      else {                          thread.Description = String.Empty;                          thread.ExtraData.AddedOn = DateTime.Now;                      }                      if (fileVersion >= 4) {                          thread.ExtraData.AddedFrom = lines[i++];                          thread.Category = lines[i++];                          thread.AutoFollow = lines[i++] == "1";                      }                      else {                          thread.ExtraData.AddedFrom = String.Empty;                          thread.Category = String.Empty;                      }                      Invoke(() => {                          AddThread(thread);                      });                  }                  foreach (ThreadWatcher threadWatcher in ThreadWatchers) {                      ThreadWatcher parentThread;                      _watchers.TryGetValue(((WatcherExtraData)threadWatcher.Tag).AddedFrom' out parentThread);                      threadWatcher.ParentThread = parentThread;                      if (parentThread != null && !parentThread.ChildThreads.ContainsKey(threadWatcher.PageID) && !parentThread.ChildThreads.ContainsKey(parentThread.PageID)) {                          parentThread.ChildThreads.Add(threadWatcher.PageID' threadWatcher);                      }                      ThreadWatcher watcher = threadWatcher;                      Invoke(() => {                          DisplayAddedFrom(watcher);                      });                      if (Settings.ChildThreadsAreNewFormat == true && threadWatcher.StopReason != StopReason.PageNotFound && threadWatcher.StopReason != StopReason.UserRequest) {                          threadWatcher.Start();                      }                  }                  if (Settings.ChildThreadsAreNewFormat != true) {                      foreach (ThreadWatcher threadWatcher in ThreadWatchers) {                          if (threadWatcher.ChildThreads.Count == 0 || threadWatcher.ParentThread != null) continue;                          foreach (ThreadWatcher descendantThread in threadWatcher.DescendantThreads.Values) {                              descendantThread.DoNotRename = true;                              string sourceDir = descendantThread.ThreadDownloadDirectory;                              string destDir;                              if (General.RemoveLastDirectory(sourceDir) == descendantThread.MainDownloadDirectory) {                                  destDir = Path.Combine(descendantThread.MainDownloadDirectory' General.RemoveLastDirectory(sourceDir));                              }                              else {                                  destDir = Path.Combine(General.RemoveLastDirectory(threadWatcher.ThreadDownloadDirectory)'                                      General.GetRelativeDirectoryPath(descendantThread.ThreadDownloadDirectory' threadWatcher.ThreadDownloadDirectory));                              }                              if (String.Equals(destDir' sourceDir' StringComparison.Ordinal) || !Directory.Exists(sourceDir)) continue;                              try {                                  if (String.Equals(destDir' sourceDir' StringComparison.OrdinalIgnoreCase)) {                                      Directory.Move(sourceDir' destDir + " Temp");                                      sourceDir = destDir + " Temp";                                  }                                  if (!Directory.Exists(General.RemoveLastDirectory(destDir))) Directory.CreateDirectory(General.RemoveLastDirectory(destDir));                                  Directory.Move(sourceDir' destDir);                                  descendantThread.ThreadDownloadDirectory = destDir;                              }                              catch (Exception ex) {                                  Logger.Log(ex.ToString());                              }                              descendantThread.DoNotRename = false;                          }                      }                      Settings.ChildThreadsAreNewFormat = true;                      Settings.Save();                        foreach (ThreadWatcher threadWatcher in ThreadWatchers) {                          if (threadWatcher.StopReason != StopReason.PageNotFound && threadWatcher.StopReason != StopReason.UserRequest) threadWatcher.Start();                      }                  }                  _isLoadingThreadsFromFile = false;              }              catch (Exception ex) {                  _isLoadingThreadsFromFile = false;                  Logger.Log(ex.ToString());              }
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,LoadThreadList,The following statement contains a magic number: try {                  string path = Path.Combine(Settings.GetSettingsDirectory()' Settings.ThreadsFileName);                  if (!File.Exists(path)) return;                  string[] lines = File.ReadAllLines(path);                  if (lines.Length < 1) return;                  int fileVersion = Int32.Parse(lines[0]);                  int linesPerThread;                  switch (fileVersion) {                      case 1: linesPerThread = 6; break;                      case 2: linesPerThread = 7; break;                      case 3: linesPerThread = 10; break;                      case 4: linesPerThread = 13; break;                      default: return;                  }                  if (lines.Length < (1 + linesPerThread)) return;                  _isLoadingThreadsFromFile = true;                  Invoke(() => {                      UpdateCategories(String.Empty);                  });                  int i = 1;                  while (i <= lines.Length - linesPerThread) {                      ThreadInfo thread = new ThreadInfo { ExtraData = new WatcherExtraData() };                      thread.URL = lines[i++];                      thread.PageAuth = lines[i++];                      thread.ImageAuth = lines[i++];                      thread.CheckIntervalSeconds = Int32.Parse(lines[i++]);                      thread.OneTimeDownload = lines[i++] == "1";                      thread.SaveDir = lines[i++];                      thread.SaveDir = thread.SaveDir.Length != 0 ? General.GetAbsoluteDirectoryPath(thread.SaveDir' Settings.AbsoluteDownloadDirectory) : null;                      if (fileVersion >= 2) {                          string stopReasonLine = lines[i++];                          if (stopReasonLine.Length != 0) {                              thread.StopReason = (StopReason)Int32.Parse(stopReasonLine);                          }                      }                      if (fileVersion >= 3) {                          thread.Description = lines[i++];                          thread.ExtraData.AddedOn = new DateTime(Int64.Parse(lines[i++])' DateTimeKind.Utc).ToLocalTime();                          string lastImageOn = lines[i++];                          if (lastImageOn.Length != 0) {                              thread.ExtraData.LastImageOn = new DateTime(Int64.Parse(lastImageOn)' DateTimeKind.Utc).ToLocalTime();                          }                      }                      else {                          thread.Description = String.Empty;                          thread.ExtraData.AddedOn = DateTime.Now;                      }                      if (fileVersion >= 4) {                          thread.ExtraData.AddedFrom = lines[i++];                          thread.Category = lines[i++];                          thread.AutoFollow = lines[i++] == "1";                      }                      else {                          thread.ExtraData.AddedFrom = String.Empty;                          thread.Category = String.Empty;                      }                      Invoke(() => {                          AddThread(thread);                      });                  }                  foreach (ThreadWatcher threadWatcher in ThreadWatchers) {                      ThreadWatcher parentThread;                      _watchers.TryGetValue(((WatcherExtraData)threadWatcher.Tag).AddedFrom' out parentThread);                      threadWatcher.ParentThread = parentThread;                      if (parentThread != null && !parentThread.ChildThreads.ContainsKey(threadWatcher.PageID) && !parentThread.ChildThreads.ContainsKey(parentThread.PageID)) {                          parentThread.ChildThreads.Add(threadWatcher.PageID' threadWatcher);                      }                      ThreadWatcher watcher = threadWatcher;                      Invoke(() => {                          DisplayAddedFrom(watcher);                      });                      if (Settings.ChildThreadsAreNewFormat == true && threadWatcher.StopReason != StopReason.PageNotFound && threadWatcher.StopReason != StopReason.UserRequest) {                          threadWatcher.Start();                      }                  }                  if (Settings.ChildThreadsAreNewFormat != true) {                      foreach (ThreadWatcher threadWatcher in ThreadWatchers) {                          if (threadWatcher.ChildThreads.Count == 0 || threadWatcher.ParentThread != null) continue;                          foreach (ThreadWatcher descendantThread in threadWatcher.DescendantThreads.Values) {                              descendantThread.DoNotRename = true;                              string sourceDir = descendantThread.ThreadDownloadDirectory;                              string destDir;                              if (General.RemoveLastDirectory(sourceDir) == descendantThread.MainDownloadDirectory) {                                  destDir = Path.Combine(descendantThread.MainDownloadDirectory' General.RemoveLastDirectory(sourceDir));                              }                              else {                                  destDir = Path.Combine(General.RemoveLastDirectory(threadWatcher.ThreadDownloadDirectory)'                                      General.GetRelativeDirectoryPath(descendantThread.ThreadDownloadDirectory' threadWatcher.ThreadDownloadDirectory));                              }                              if (String.Equals(destDir' sourceDir' StringComparison.Ordinal) || !Directory.Exists(sourceDir)) continue;                              try {                                  if (String.Equals(destDir' sourceDir' StringComparison.OrdinalIgnoreCase)) {                                      Directory.Move(sourceDir' destDir + " Temp");                                      sourceDir = destDir + " Temp";                                  }                                  if (!Directory.Exists(General.RemoveLastDirectory(destDir))) Directory.CreateDirectory(General.RemoveLastDirectory(destDir));                                  Directory.Move(sourceDir' destDir);                                  descendantThread.ThreadDownloadDirectory = destDir;                              }                              catch (Exception ex) {                                  Logger.Log(ex.ToString());                              }                              descendantThread.DoNotRename = false;                          }                      }                      Settings.ChildThreadsAreNewFormat = true;                      Settings.Save();                        foreach (ThreadWatcher threadWatcher in ThreadWatchers) {                          if (threadWatcher.StopReason != StopReason.PageNotFound && threadWatcher.StopReason != StopReason.UserRequest) threadWatcher.Start();                      }                  }                  _isLoadingThreadsFromFile = false;              }              catch (Exception ex) {                  _isLoadingThreadsFromFile = false;                  Logger.Log(ex.ToString());              }
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,LoadThreadList,The following statement contains a magic number: try {                  string path = Path.Combine(Settings.GetSettingsDirectory()' Settings.ThreadsFileName);                  if (!File.Exists(path)) return;                  string[] lines = File.ReadAllLines(path);                  if (lines.Length < 1) return;                  int fileVersion = Int32.Parse(lines[0]);                  int linesPerThread;                  switch (fileVersion) {                      case 1: linesPerThread = 6; break;                      case 2: linesPerThread = 7; break;                      case 3: linesPerThread = 10; break;                      case 4: linesPerThread = 13; break;                      default: return;                  }                  if (lines.Length < (1 + linesPerThread)) return;                  _isLoadingThreadsFromFile = true;                  Invoke(() => {                      UpdateCategories(String.Empty);                  });                  int i = 1;                  while (i <= lines.Length - linesPerThread) {                      ThreadInfo thread = new ThreadInfo { ExtraData = new WatcherExtraData() };                      thread.URL = lines[i++];                      thread.PageAuth = lines[i++];                      thread.ImageAuth = lines[i++];                      thread.CheckIntervalSeconds = Int32.Parse(lines[i++]);                      thread.OneTimeDownload = lines[i++] == "1";                      thread.SaveDir = lines[i++];                      thread.SaveDir = thread.SaveDir.Length != 0 ? General.GetAbsoluteDirectoryPath(thread.SaveDir' Settings.AbsoluteDownloadDirectory) : null;                      if (fileVersion >= 2) {                          string stopReasonLine = lines[i++];                          if (stopReasonLine.Length != 0) {                              thread.StopReason = (StopReason)Int32.Parse(stopReasonLine);                          }                      }                      if (fileVersion >= 3) {                          thread.Description = lines[i++];                          thread.ExtraData.AddedOn = new DateTime(Int64.Parse(lines[i++])' DateTimeKind.Utc).ToLocalTime();                          string lastImageOn = lines[i++];                          if (lastImageOn.Length != 0) {                              thread.ExtraData.LastImageOn = new DateTime(Int64.Parse(lastImageOn)' DateTimeKind.Utc).ToLocalTime();                          }                      }                      else {                          thread.Description = String.Empty;                          thread.ExtraData.AddedOn = DateTime.Now;                      }                      if (fileVersion >= 4) {                          thread.ExtraData.AddedFrom = lines[i++];                          thread.Category = lines[i++];                          thread.AutoFollow = lines[i++] == "1";                      }                      else {                          thread.ExtraData.AddedFrom = String.Empty;                          thread.Category = String.Empty;                      }                      Invoke(() => {                          AddThread(thread);                      });                  }                  foreach (ThreadWatcher threadWatcher in ThreadWatchers) {                      ThreadWatcher parentThread;                      _watchers.TryGetValue(((WatcherExtraData)threadWatcher.Tag).AddedFrom' out parentThread);                      threadWatcher.ParentThread = parentThread;                      if (parentThread != null && !parentThread.ChildThreads.ContainsKey(threadWatcher.PageID) && !parentThread.ChildThreads.ContainsKey(parentThread.PageID)) {                          parentThread.ChildThreads.Add(threadWatcher.PageID' threadWatcher);                      }                      ThreadWatcher watcher = threadWatcher;                      Invoke(() => {                          DisplayAddedFrom(watcher);                      });                      if (Settings.ChildThreadsAreNewFormat == true && threadWatcher.StopReason != StopReason.PageNotFound && threadWatcher.StopReason != StopReason.UserRequest) {                          threadWatcher.Start();                      }                  }                  if (Settings.ChildThreadsAreNewFormat != true) {                      foreach (ThreadWatcher threadWatcher in ThreadWatchers) {                          if (threadWatcher.ChildThreads.Count == 0 || threadWatcher.ParentThread != null) continue;                          foreach (ThreadWatcher descendantThread in threadWatcher.DescendantThreads.Values) {                              descendantThread.DoNotRename = true;                              string sourceDir = descendantThread.ThreadDownloadDirectory;                              string destDir;                              if (General.RemoveLastDirectory(sourceDir) == descendantThread.MainDownloadDirectory) {                                  destDir = Path.Combine(descendantThread.MainDownloadDirectory' General.RemoveLastDirectory(sourceDir));                              }                              else {                                  destDir = Path.Combine(General.RemoveLastDirectory(threadWatcher.ThreadDownloadDirectory)'                                      General.GetRelativeDirectoryPath(descendantThread.ThreadDownloadDirectory' threadWatcher.ThreadDownloadDirectory));                              }                              if (String.Equals(destDir' sourceDir' StringComparison.Ordinal) || !Directory.Exists(sourceDir)) continue;                              try {                                  if (String.Equals(destDir' sourceDir' StringComparison.OrdinalIgnoreCase)) {                                      Directory.Move(sourceDir' destDir + " Temp");                                      sourceDir = destDir + " Temp";                                  }                                  if (!Directory.Exists(General.RemoveLastDirectory(destDir))) Directory.CreateDirectory(General.RemoveLastDirectory(destDir));                                  Directory.Move(sourceDir' destDir);                                  descendantThread.ThreadDownloadDirectory = destDir;                              }                              catch (Exception ex) {                                  Logger.Log(ex.ToString());                              }                              descendantThread.DoNotRename = false;                          }                      }                      Settings.ChildThreadsAreNewFormat = true;                      Settings.Save();                        foreach (ThreadWatcher threadWatcher in ThreadWatchers) {                          if (threadWatcher.StopReason != StopReason.PageNotFound && threadWatcher.StopReason != StopReason.UserRequest) threadWatcher.Start();                      }                  }                  _isLoadingThreadsFromFile = false;              }              catch (Exception ex) {                  _isLoadingThreadsFromFile = false;                  Logger.Log(ex.ToString());              }
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,LoadThreadList,The following statement contains a magic number: try {                  string path = Path.Combine(Settings.GetSettingsDirectory()' Settings.ThreadsFileName);                  if (!File.Exists(path)) return;                  string[] lines = File.ReadAllLines(path);                  if (lines.Length < 1) return;                  int fileVersion = Int32.Parse(lines[0]);                  int linesPerThread;                  switch (fileVersion) {                      case 1: linesPerThread = 6; break;                      case 2: linesPerThread = 7; break;                      case 3: linesPerThread = 10; break;                      case 4: linesPerThread = 13; break;                      default: return;                  }                  if (lines.Length < (1 + linesPerThread)) return;                  _isLoadingThreadsFromFile = true;                  Invoke(() => {                      UpdateCategories(String.Empty);                  });                  int i = 1;                  while (i <= lines.Length - linesPerThread) {                      ThreadInfo thread = new ThreadInfo { ExtraData = new WatcherExtraData() };                      thread.URL = lines[i++];                      thread.PageAuth = lines[i++];                      thread.ImageAuth = lines[i++];                      thread.CheckIntervalSeconds = Int32.Parse(lines[i++]);                      thread.OneTimeDownload = lines[i++] == "1";                      thread.SaveDir = lines[i++];                      thread.SaveDir = thread.SaveDir.Length != 0 ? General.GetAbsoluteDirectoryPath(thread.SaveDir' Settings.AbsoluteDownloadDirectory) : null;                      if (fileVersion >= 2) {                          string stopReasonLine = lines[i++];                          if (stopReasonLine.Length != 0) {                              thread.StopReason = (StopReason)Int32.Parse(stopReasonLine);                          }                      }                      if (fileVersion >= 3) {                          thread.Description = lines[i++];                          thread.ExtraData.AddedOn = new DateTime(Int64.Parse(lines[i++])' DateTimeKind.Utc).ToLocalTime();                          string lastImageOn = lines[i++];                          if (lastImageOn.Length != 0) {                              thread.ExtraData.LastImageOn = new DateTime(Int64.Parse(lastImageOn)' DateTimeKind.Utc).ToLocalTime();                          }                      }                      else {                          thread.Description = String.Empty;                          thread.ExtraData.AddedOn = DateTime.Now;                      }                      if (fileVersion >= 4) {                          thread.ExtraData.AddedFrom = lines[i++];                          thread.Category = lines[i++];                          thread.AutoFollow = lines[i++] == "1";                      }                      else {                          thread.ExtraData.AddedFrom = String.Empty;                          thread.Category = String.Empty;                      }                      Invoke(() => {                          AddThread(thread);                      });                  }                  foreach (ThreadWatcher threadWatcher in ThreadWatchers) {                      ThreadWatcher parentThread;                      _watchers.TryGetValue(((WatcherExtraData)threadWatcher.Tag).AddedFrom' out parentThread);                      threadWatcher.ParentThread = parentThread;                      if (parentThread != null && !parentThread.ChildThreads.ContainsKey(threadWatcher.PageID) && !parentThread.ChildThreads.ContainsKey(parentThread.PageID)) {                          parentThread.ChildThreads.Add(threadWatcher.PageID' threadWatcher);                      }                      ThreadWatcher watcher = threadWatcher;                      Invoke(() => {                          DisplayAddedFrom(watcher);                      });                      if (Settings.ChildThreadsAreNewFormat == true && threadWatcher.StopReason != StopReason.PageNotFound && threadWatcher.StopReason != StopReason.UserRequest) {                          threadWatcher.Start();                      }                  }                  if (Settings.ChildThreadsAreNewFormat != true) {                      foreach (ThreadWatcher threadWatcher in ThreadWatchers) {                          if (threadWatcher.ChildThreads.Count == 0 || threadWatcher.ParentThread != null) continue;                          foreach (ThreadWatcher descendantThread in threadWatcher.DescendantThreads.Values) {                              descendantThread.DoNotRename = true;                              string sourceDir = descendantThread.ThreadDownloadDirectory;                              string destDir;                              if (General.RemoveLastDirectory(sourceDir) == descendantThread.MainDownloadDirectory) {                                  destDir = Path.Combine(descendantThread.MainDownloadDirectory' General.RemoveLastDirectory(sourceDir));                              }                              else {                                  destDir = Path.Combine(General.RemoveLastDirectory(threadWatcher.ThreadDownloadDirectory)'                                      General.GetRelativeDirectoryPath(descendantThread.ThreadDownloadDirectory' threadWatcher.ThreadDownloadDirectory));                              }                              if (String.Equals(destDir' sourceDir' StringComparison.Ordinal) || !Directory.Exists(sourceDir)) continue;                              try {                                  if (String.Equals(destDir' sourceDir' StringComparison.OrdinalIgnoreCase)) {                                      Directory.Move(sourceDir' destDir + " Temp");                                      sourceDir = destDir + " Temp";                                  }                                  if (!Directory.Exists(General.RemoveLastDirectory(destDir))) Directory.CreateDirectory(General.RemoveLastDirectory(destDir));                                  Directory.Move(sourceDir' destDir);                                  descendantThread.ThreadDownloadDirectory = destDir;                              }                              catch (Exception ex) {                                  Logger.Log(ex.ToString());                              }                              descendantThread.DoNotRename = false;                          }                      }                      Settings.ChildThreadsAreNewFormat = true;                      Settings.Save();                        foreach (ThreadWatcher threadWatcher in ThreadWatchers) {                          if (threadWatcher.StopReason != StopReason.PageNotFound && threadWatcher.StopReason != StopReason.UserRequest) threadWatcher.Start();                      }                  }                  _isLoadingThreadsFromFile = false;              }              catch (Exception ex) {                  _isLoadingThreadsFromFile = false;                  Logger.Log(ex.ToString());              }
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,LoadThreadList,The following statement contains a magic number: try {                  string path = Path.Combine(Settings.GetSettingsDirectory()' Settings.ThreadsFileName);                  if (!File.Exists(path)) return;                  string[] lines = File.ReadAllLines(path);                  if (lines.Length < 1) return;                  int fileVersion = Int32.Parse(lines[0]);                  int linesPerThread;                  switch (fileVersion) {                      case 1: linesPerThread = 6; break;                      case 2: linesPerThread = 7; break;                      case 3: linesPerThread = 10; break;                      case 4: linesPerThread = 13; break;                      default: return;                  }                  if (lines.Length < (1 + linesPerThread)) return;                  _isLoadingThreadsFromFile = true;                  Invoke(() => {                      UpdateCategories(String.Empty);                  });                  int i = 1;                  while (i <= lines.Length - linesPerThread) {                      ThreadInfo thread = new ThreadInfo { ExtraData = new WatcherExtraData() };                      thread.URL = lines[i++];                      thread.PageAuth = lines[i++];                      thread.ImageAuth = lines[i++];                      thread.CheckIntervalSeconds = Int32.Parse(lines[i++]);                      thread.OneTimeDownload = lines[i++] == "1";                      thread.SaveDir = lines[i++];                      thread.SaveDir = thread.SaveDir.Length != 0 ? General.GetAbsoluteDirectoryPath(thread.SaveDir' Settings.AbsoluteDownloadDirectory) : null;                      if (fileVersion >= 2) {                          string stopReasonLine = lines[i++];                          if (stopReasonLine.Length != 0) {                              thread.StopReason = (StopReason)Int32.Parse(stopReasonLine);                          }                      }                      if (fileVersion >= 3) {                          thread.Description = lines[i++];                          thread.ExtraData.AddedOn = new DateTime(Int64.Parse(lines[i++])' DateTimeKind.Utc).ToLocalTime();                          string lastImageOn = lines[i++];                          if (lastImageOn.Length != 0) {                              thread.ExtraData.LastImageOn = new DateTime(Int64.Parse(lastImageOn)' DateTimeKind.Utc).ToLocalTime();                          }                      }                      else {                          thread.Description = String.Empty;                          thread.ExtraData.AddedOn = DateTime.Now;                      }                      if (fileVersion >= 4) {                          thread.ExtraData.AddedFrom = lines[i++];                          thread.Category = lines[i++];                          thread.AutoFollow = lines[i++] == "1";                      }                      else {                          thread.ExtraData.AddedFrom = String.Empty;                          thread.Category = String.Empty;                      }                      Invoke(() => {                          AddThread(thread);                      });                  }                  foreach (ThreadWatcher threadWatcher in ThreadWatchers) {                      ThreadWatcher parentThread;                      _watchers.TryGetValue(((WatcherExtraData)threadWatcher.Tag).AddedFrom' out parentThread);                      threadWatcher.ParentThread = parentThread;                      if (parentThread != null && !parentThread.ChildThreads.ContainsKey(threadWatcher.PageID) && !parentThread.ChildThreads.ContainsKey(parentThread.PageID)) {                          parentThread.ChildThreads.Add(threadWatcher.PageID' threadWatcher);                      }                      ThreadWatcher watcher = threadWatcher;                      Invoke(() => {                          DisplayAddedFrom(watcher);                      });                      if (Settings.ChildThreadsAreNewFormat == true && threadWatcher.StopReason != StopReason.PageNotFound && threadWatcher.StopReason != StopReason.UserRequest) {                          threadWatcher.Start();                      }                  }                  if (Settings.ChildThreadsAreNewFormat != true) {                      foreach (ThreadWatcher threadWatcher in ThreadWatchers) {                          if (threadWatcher.ChildThreads.Count == 0 || threadWatcher.ParentThread != null) continue;                          foreach (ThreadWatcher descendantThread in threadWatcher.DescendantThreads.Values) {                              descendantThread.DoNotRename = true;                              string sourceDir = descendantThread.ThreadDownloadDirectory;                              string destDir;                              if (General.RemoveLastDirectory(sourceDir) == descendantThread.MainDownloadDirectory) {                                  destDir = Path.Combine(descendantThread.MainDownloadDirectory' General.RemoveLastDirectory(sourceDir));                              }                              else {                                  destDir = Path.Combine(General.RemoveLastDirectory(threadWatcher.ThreadDownloadDirectory)'                                      General.GetRelativeDirectoryPath(descendantThread.ThreadDownloadDirectory' threadWatcher.ThreadDownloadDirectory));                              }                              if (String.Equals(destDir' sourceDir' StringComparison.Ordinal) || !Directory.Exists(sourceDir)) continue;                              try {                                  if (String.Equals(destDir' sourceDir' StringComparison.OrdinalIgnoreCase)) {                                      Directory.Move(sourceDir' destDir + " Temp");                                      sourceDir = destDir + " Temp";                                  }                                  if (!Directory.Exists(General.RemoveLastDirectory(destDir))) Directory.CreateDirectory(General.RemoveLastDirectory(destDir));                                  Directory.Move(sourceDir' destDir);                                  descendantThread.ThreadDownloadDirectory = destDir;                              }                              catch (Exception ex) {                                  Logger.Log(ex.ToString());                              }                              descendantThread.DoNotRename = false;                          }                      }                      Settings.ChildThreadsAreNewFormat = true;                      Settings.Save();                        foreach (ThreadWatcher threadWatcher in ThreadWatchers) {                          if (threadWatcher.StopReason != StopReason.PageNotFound && threadWatcher.StopReason != StopReason.UserRequest) threadWatcher.Start();                      }                  }                  _isLoadingThreadsFromFile = false;              }              catch (Exception ex) {                  _isLoadingThreadsFromFile = false;                  Logger.Log(ex.ToString());              }
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,LoadBlacklist,The following statement contains a magic number: try {                  string path = Path.Combine(Settings.GetSettingsDirectory()' Settings.BlacklistFileName);                  if (!File.Exists(path)) return;                  string[] lines = File.ReadAllLines(path);                  if (lines.Length < 1) return;                  for (int i = 0; i < lines.Length; i++) {                      string rule = lines[i];                      if (rule.Split('/').Length == 3) {                          _blacklist.Add(rule);                      }                  }              }              catch (Exception ex) {                  Logger.Log(ex.ToString());              }
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,ParseVersionNumber,The following statement contains a magic number: try {                  if (split.Length >= 1) num |= (Int32.Parse(split[0]) & 0x7F) << 24;                  if (split.Length >= 2) num |= (Int32.Parse(split[1]) & 0xFF) << 16;                  if (split.Length >= 3) num |= (Int32.Parse(split[2]) & 0xFF) << 8;                  if (split.Length >= 4) num |= (Int32.Parse(split[3]) & 0xFF);                  return num;              }              catch {                  return -1;              }
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,ParseVersionNumber,The following statement contains a magic number: try {                  if (split.Length >= 1) num |= (Int32.Parse(split[0]) & 0x7F) << 24;                  if (split.Length >= 2) num |= (Int32.Parse(split[1]) & 0xFF) << 16;                  if (split.Length >= 3) num |= (Int32.Parse(split[2]) & 0xFF) << 8;                  if (split.Length >= 4) num |= (Int32.Parse(split[3]) & 0xFF);                  return num;              }              catch {                  return -1;              }
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,ParseVersionNumber,The following statement contains a magic number: try {                  if (split.Length >= 1) num |= (Int32.Parse(split[0]) & 0x7F) << 24;                  if (split.Length >= 2) num |= (Int32.Parse(split[1]) & 0xFF) << 16;                  if (split.Length >= 3) num |= (Int32.Parse(split[2]) & 0xFF) << 8;                  if (split.Length >= 4) num |= (Int32.Parse(split[3]) & 0xFF);                  return num;              }              catch {                  return -1;              }
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,ParseVersionNumber,The following statement contains a magic number: try {                  if (split.Length >= 1) num |= (Int32.Parse(split[0]) & 0x7F) << 24;                  if (split.Length >= 2) num |= (Int32.Parse(split[1]) & 0xFF) << 16;                  if (split.Length >= 3) num |= (Int32.Parse(split[2]) & 0xFF) << 8;                  if (split.Length >= 4) num |= (Int32.Parse(split[3]) & 0xFF);                  return num;              }              catch {                  return -1;              }
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,ParseVersionNumber,The following statement contains a magic number: try {                  if (split.Length >= 1) num |= (Int32.Parse(split[0]) & 0x7F) << 24;                  if (split.Length >= 2) num |= (Int32.Parse(split[1]) & 0xFF) << 16;                  if (split.Length >= 3) num |= (Int32.Parse(split[2]) & 0xFF) << 8;                  if (split.Length >= 4) num |= (Int32.Parse(split[3]) & 0xFF);                  return num;              }              catch {                  return -1;              }
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,ParseVersionNumber,The following statement contains a magic number: try {                  if (split.Length >= 1) num |= (Int32.Parse(split[0]) & 0x7F) << 24;                  if (split.Length >= 2) num |= (Int32.Parse(split[1]) & 0xFF) << 16;                  if (split.Length >= 3) num |= (Int32.Parse(split[2]) & 0xFF) << 8;                  if (split.Length >= 4) num |= (Int32.Parse(split[3]) & 0xFF);                  return num;              }              catch {                  return -1;              }
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,ParseVersionNumber,The following statement contains a magic number: try {                  if (split.Length >= 1) num |= (Int32.Parse(split[0]) & 0x7F) << 24;                  if (split.Length >= 2) num |= (Int32.Parse(split[1]) & 0xFF) << 16;                  if (split.Length >= 3) num |= (Int32.Parse(split[2]) & 0xFF) << 8;                  if (split.Length >= 4) num |= (Int32.Parse(split[3]) & 0xFF);                  return num;              }              catch {                  return -1;              }
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,ParseVersionNumber,The following statement contains a magic number: try {                  if (split.Length >= 1) num |= (Int32.Parse(split[0]) & 0x7F) << 24;                  if (split.Length >= 2) num |= (Int32.Parse(split[1]) & 0xFF) << 16;                  if (split.Length >= 3) num |= (Int32.Parse(split[2]) & 0xFF) << 8;                  if (split.Length >= 4) num |= (Int32.Parse(split[3]) & 0xFF);                  return num;              }              catch {                  return -1;              }
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,IsBlacklisted,The following statement contains a magic number: if (pageIDSplit.Length != 3) return false;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,IsBlacklisted,The following statement contains a magic number: foreach (string rule in _blacklist) {                  string[] ruleSplit = rule.Split('/');                  if (ruleSplit.Length != 3) continue;                  if (ruleSplit[0] != "*" && ruleSplit[0] != pageIDSplit[0]) continue;                  if (ruleSplit[1] != "*" && ruleSplit[1] != pageIDSplit[1]) continue;                  if (ruleSplit[2] != "*" && ruleSplit[2] != pageIDSplit[2]) continue;                  return true;              }
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,IsBlacklisted,The following statement contains a magic number: foreach (string rule in _blacklist) {                  string[] ruleSplit = rule.Split('/');                  if (ruleSplit.Length != 3) continue;                  if (ruleSplit[0] != "*" && ruleSplit[0] != pageIDSplit[0]) continue;                  if (ruleSplit[1] != "*" && ruleSplit[1] != pageIDSplit[1]) continue;                  if (ruleSplit[2] != "*" && ruleSplit[2] != pageIDSplit[2]) continue;                  return true;              }
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,IsBlacklisted,The following statement contains a magic number: foreach (string rule in _blacklist) {                  string[] ruleSplit = rule.Split('/');                  if (ruleSplit.Length != 3) continue;                  if (ruleSplit[0] != "*" && ruleSplit[0] != pageIDSplit[0]) continue;                  if (ruleSplit[1] != "*" && ruleSplit[1] != pageIDSplit[1]) continue;                  if (ruleSplit[2] != "*" && ruleSplit[2] != pageIDSplit[2]) continue;                  return true;              }
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,IsBlacklisted,The following statement contains a magic number: foreach (string rule in _blacklist) {                  string[] ruleSplit = rule.Split('/');                  if (ruleSplit.Length != 3) continue;                  if (ruleSplit[0] != "*" && ruleSplit[0] != pageIDSplit[0]) continue;                  if (ruleSplit[1] != "*" && ruleSplit[1] != pageIDSplit[1]) continue;                  if (ruleSplit[2] != "*" && ruleSplit[2] != pageIDSplit[2]) continue;                  return true;              }
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.lvThreads.Location = new System.Drawing.Point(8' 8);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.lvThreads.Location = new System.Drawing.Point(8' 8);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.lvThreads.Size = new System.Drawing.Size(744' 287);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.lvThreads.Size = new System.Drawing.Size(744' 287);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.chDescription.Width = 110;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.chStatus.Width = 150;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.chLastImageOn.Width = 115;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.chAddedOn.Width = 115;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.chAddedFrom.Width = 110;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.chCategory.Width = 75;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.grpAddThread.Location = new System.Drawing.Point(8' 305);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.grpAddThread.Location = new System.Drawing.Point(8' 305);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.grpAddThread.Size = new System.Drawing.Size(360' 183);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.grpAddThread.Size = new System.Drawing.Size(360' 183);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.chkAutoFollow.Location = new System.Drawing.Point(12' 126);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.chkAutoFollow.Location = new System.Drawing.Point(12' 126);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.chkAutoFollow.Size = new System.Drawing.Size(78' 17);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.chkAutoFollow.Size = new System.Drawing.Size(78' 17);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.chkAutoFollow.TabIndex = 14;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.lblCategory.Location = new System.Drawing.Point(161' 127);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.lblCategory.Location = new System.Drawing.Point(161' 127);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.lblCategory.Size = new System.Drawing.Size(52' 13);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.lblCategory.Size = new System.Drawing.Size(52' 13);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.lblCategory.TabIndex = 13;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.cboCategory.Location = new System.Drawing.Point(219' 122);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.cboCategory.Location = new System.Drawing.Point(219' 122);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.cboCategory.Size = new System.Drawing.Size(129' 21);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.cboCategory.Size = new System.Drawing.Size(129' 21);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.cboCategory.TabIndex = 12;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.pnlCheckEvery.Location = new System.Drawing.Point(6' 156);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.pnlCheckEvery.Location = new System.Drawing.Point(6' 156);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.pnlCheckEvery.Size = new System.Drawing.Size(229' 21);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.pnlCheckEvery.Size = new System.Drawing.Size(229' 21);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.pnlCheckEvery.TabIndex = 11;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.txtCheckEvery.Location = new System.Drawing.Point(185' 0);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.txtCheckEvery.Size = new System.Drawing.Size(40' 20);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.txtCheckEvery.Size = new System.Drawing.Size(40' 20);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.txtCheckEvery.TabIndex = 10;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.cboCheckEvery.Location = new System.Drawing.Point(124' 0);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.cboCheckEvery.Size = new System.Drawing.Size(55' 21);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.cboCheckEvery.Size = new System.Drawing.Size(55' 21);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.cboCheckEvery.TabIndex = 8;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.lblCheckEvery.Location = new System.Drawing.Point(3' 3);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.lblCheckEvery.Location = new System.Drawing.Point(3' 3);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.lblCheckEvery.Size = new System.Drawing.Size(115' 13);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.lblCheckEvery.Size = new System.Drawing.Size(115' 13);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.lblCheckEvery.TabIndex = 7;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.txtImageAuth.Location = new System.Drawing.Point(164' 72);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.txtImageAuth.Location = new System.Drawing.Point(164' 72);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.txtImageAuth.Size = new System.Drawing.Size(184' 20);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.txtImageAuth.Size = new System.Drawing.Size(184' 20);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.txtImageAuth.TabIndex = 5;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.txtPageAuth.Location = new System.Drawing.Point(164' 44);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.txtPageAuth.Location = new System.Drawing.Point(164' 44);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.txtPageAuth.Size = new System.Drawing.Size(184' 20);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.txtPageAuth.Size = new System.Drawing.Size(184' 20);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.txtPageAuth.TabIndex = 3;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.chkImageAuth.Location = new System.Drawing.Point(12' 74);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.chkImageAuth.Location = new System.Drawing.Point(12' 74);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.chkImageAuth.Size = new System.Drawing.Size(136' 17);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.chkImageAuth.Size = new System.Drawing.Size(136' 17);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.chkImageAuth.TabIndex = 4;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.chkPageAuth.Location = new System.Drawing.Point(12' 46);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.chkPageAuth.Location = new System.Drawing.Point(12' 46);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.chkPageAuth.Size = new System.Drawing.Size(132' 17);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.chkPageAuth.Size = new System.Drawing.Size(132' 17);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.chkPageAuth.TabIndex = 2;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.chkOneTime.Location = new System.Drawing.Point(12' 100);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.chkOneTime.Location = new System.Drawing.Point(12' 100);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.chkOneTime.Size = new System.Drawing.Size(117' 17);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.chkOneTime.Size = new System.Drawing.Size(117' 17);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.chkOneTime.TabIndex = 6;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.lblURL.Location = new System.Drawing.Point(10' 22);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.lblURL.Location = new System.Drawing.Point(10' 22);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.lblURL.Size = new System.Drawing.Size(32' 13);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.lblURL.Size = new System.Drawing.Size(32' 13);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.txtPageURL.Location = new System.Drawing.Point(48' 18);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.txtPageURL.Location = new System.Drawing.Point(48' 18);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.txtPageURL.Size = new System.Drawing.Size(300' 20);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.txtPageURL.Size = new System.Drawing.Size(300' 20);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.btnAdd.Location = new System.Drawing.Point(265' 154);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.btnAdd.Location = new System.Drawing.Point(265' 154);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.btnAdd.Size = new System.Drawing.Size(84' 23);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.btnAdd.Size = new System.Drawing.Size(84' 23);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.btnAdd.TabIndex = 9;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.btnRemoveCompleted.Location = new System.Drawing.Point(630' 305);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.btnRemoveCompleted.Location = new System.Drawing.Point(630' 305);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.btnRemoveCompleted.Size = new System.Drawing.Size(120' 23);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.btnRemoveCompleted.Size = new System.Drawing.Size(120' 23);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.btnRemoveCompleted.TabIndex = 3;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.btnAbout.Location = new System.Drawing.Point(626' 469);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.btnAbout.Location = new System.Drawing.Point(626' 469);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.btnAbout.Size = new System.Drawing.Size(60' 23);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.btnAbout.Size = new System.Drawing.Size(60' 23);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.btnAbout.TabIndex = 7;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.btnSettings.Location = new System.Drawing.Point(553' 469);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.btnSettings.Location = new System.Drawing.Point(553' 469);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.btnSettings.Size = new System.Drawing.Size(67' 23);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.btnSettings.Size = new System.Drawing.Size(67' 23);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.btnSettings.TabIndex = 6;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.miOpenURL.Index = 2;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.miStop.Index = 3;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.miStart.Index = 4;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.miCopyURL.Index = 5;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.miRemove.Index = 6;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.miRemoveAndDeleteFolder.Index = 7;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.miBlacklist.Index = 8;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.miCheckNow.Index = 9;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.miCheckEvery.Index = 10;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.grpDoubleClick.Location = new System.Drawing.Point(374' 301);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.grpDoubleClick.Location = new System.Drawing.Point(374' 301);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.grpDoubleClick.Size = new System.Drawing.Size(124' 84);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.grpDoubleClick.Size = new System.Drawing.Size(124' 84);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.grpDoubleClick.TabIndex = 2;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.rbEdit.Location = new System.Drawing.Point(12' 58);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.rbEdit.Location = new System.Drawing.Point(12' 58);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.rbEdit.Size = new System.Drawing.Size(100' 17);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.rbEdit.Size = new System.Drawing.Size(100' 17);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.rbEdit.TabIndex = 2;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.rbOpenURL.Location = new System.Drawing.Point(12' 38);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.rbOpenURL.Location = new System.Drawing.Point(12' 38);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.rbOpenURL.Size = new System.Drawing.Size(100' 17);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.rbOpenURL.Size = new System.Drawing.Size(100' 17);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.rbOpenFolder.Location = new System.Drawing.Point(12' 18);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.rbOpenFolder.Location = new System.Drawing.Point(12' 18);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.rbOpenFolder.Size = new System.Drawing.Size(100' 17);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.rbOpenFolder.Size = new System.Drawing.Size(100' 17);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.tmrUpdateWaitStatus.Interval = 500;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.btnAddFromClipboard.Location = new System.Drawing.Point(630' 337);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.btnAddFromClipboard.Location = new System.Drawing.Point(630' 337);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.btnAddFromClipboard.Size = new System.Drawing.Size(120' 23);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.btnAddFromClipboard.Size = new System.Drawing.Size(120' 23);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.btnAddFromClipboard.TabIndex = 4;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.tmrSaveThreadList.Interval = 60000;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.btnDownloads.Location = new System.Drawing.Point(463' 469);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.btnDownloads.Location = new System.Drawing.Point(463' 469);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.btnDownloads.Size = new System.Drawing.Size(84' 23);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.btnDownloads.Size = new System.Drawing.Size(84' 23);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.btnDownloads.TabIndex = 5;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.tmrMaintenance.Interval = 1000;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.miReparse.Index = 11;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.btnHelp.Location = new System.Drawing.Point(692' 469);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.btnHelp.Location = new System.Drawing.Point(692' 469);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.btnHelp.Size = new System.Drawing.Size(60' 23);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.btnHelp.Size = new System.Drawing.Size(60' 23);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.btnHelp.TabIndex = 8;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.miMonitorDead.Index = 2;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.miMonitorStopped.Index = 3;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.miSeparatorMonitorQuickLinks.Index = 4;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.miAddFromClipboard.Index = 5;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.miDownloads.Index = 6;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.miSettings.Index = 7;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.miAbout.Index = 8;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.miHelp.Index = 9;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.miSeparatorQuickLinksExit.Index = 10;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.miExit.Index = 11;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.tmrMonitor.Interval = 1000;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.tmrBackupThreadList.Interval = 60000;
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(760' 500);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(760' 500);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size(700' 450);
Magic Number,JDP,frmChanThreadWatch,C:\repos\SuperGouge_ChanThreadWatch\frmChanThreadWatch.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size(700' 450);
Magic Number,JDP,frmDownloads,C:\repos\SuperGouge_ChanThreadWatch\frmDownloads.cs,tmrUpdateList_Tick,The following statement contains a magic number: foreach (DownloadProgressInfo info in downloadProgresses) {                  List<DownloadedSizeSnapshot> snapshotList;                  if (!_snapshotLists.TryGetValue(info.DownloadID' out snapshotList)) {                      snapshotList = new List<DownloadedSizeSnapshot>();                      snapshotList.Add(new DownloadedSizeSnapshot(info.StartTicks' 0));                      _snapshotLists[info.DownloadID] = snapshotList;                  }                  while (snapshotList.Count != 0 && ticksNow - snapshotList[0].Ticks > 5000) {                      snapshotList.RemoveAt(0);                  }                  snapshotList.Add(new DownloadedSizeSnapshot(ticksNow' info.DownloadedSize));                  int iLast = snapshotList.Count - 1;                  long size = snapshotList[iLast].DownloadedSize - snapshotList[0].DownloadedSize;                  long ticks = snapshotList[iLast].Ticks - snapshotList[0].Ticks;                  long? bytesPerSec = null;                  if (size > 0 && ticks > 0) {                      bytesPerSec = Convert.ToInt64(size / (ticks / 1000.0));                  }                  int iFirstForTotalWindow = iLast;                  for (int i = 0; i < snapshotList.Count; i++) {                      if (ticksNow - snapshotList[i].Ticks <= 2000 &&                          snapshotList[i].DownloadedSize < snapshotList[iLast].DownloadedSize)                      {                          iFirstForTotalWindow = i;                          break;                      }                  }                  totalDownloadedSize += snapshotList[iLast].DownloadedSize - snapshotList[iFirstForTotalWindow].DownloadedSize;                  minTotalDownloadedStartTicks = Math.Min(minTotalDownloadedStartTicks' snapshotList[iFirstForTotalWindow].Ticks);                  if (info.EndTicks == null) {                      UpdateDownloadProgress(info' bytesPerSec);                      oldDownloadIDs.Remove(info.DownloadID);                  }              }
Magic Number,JDP,frmDownloads,C:\repos\SuperGouge_ChanThreadWatch\frmDownloads.cs,tmrUpdateList_Tick,The following statement contains a magic number: foreach (DownloadProgressInfo info in downloadProgresses) {                  List<DownloadedSizeSnapshot> snapshotList;                  if (!_snapshotLists.TryGetValue(info.DownloadID' out snapshotList)) {                      snapshotList = new List<DownloadedSizeSnapshot>();                      snapshotList.Add(new DownloadedSizeSnapshot(info.StartTicks' 0));                      _snapshotLists[info.DownloadID] = snapshotList;                  }                  while (snapshotList.Count != 0 && ticksNow - snapshotList[0].Ticks > 5000) {                      snapshotList.RemoveAt(0);                  }                  snapshotList.Add(new DownloadedSizeSnapshot(ticksNow' info.DownloadedSize));                  int iLast = snapshotList.Count - 1;                  long size = snapshotList[iLast].DownloadedSize - snapshotList[0].DownloadedSize;                  long ticks = snapshotList[iLast].Ticks - snapshotList[0].Ticks;                  long? bytesPerSec = null;                  if (size > 0 && ticks > 0) {                      bytesPerSec = Convert.ToInt64(size / (ticks / 1000.0));                  }                  int iFirstForTotalWindow = iLast;                  for (int i = 0; i < snapshotList.Count; i++) {                      if (ticksNow - snapshotList[i].Ticks <= 2000 &&                          snapshotList[i].DownloadedSize < snapshotList[iLast].DownloadedSize)                      {                          iFirstForTotalWindow = i;                          break;                      }                  }                  totalDownloadedSize += snapshotList[iLast].DownloadedSize - snapshotList[iFirstForTotalWindow].DownloadedSize;                  minTotalDownloadedStartTicks = Math.Min(minTotalDownloadedStartTicks' snapshotList[iFirstForTotalWindow].Ticks);                  if (info.EndTicks == null) {                      UpdateDownloadProgress(info' bytesPerSec);                      oldDownloadIDs.Remove(info.DownloadID);                  }              }
Magic Number,JDP,frmDownloads,C:\repos\SuperGouge_ChanThreadWatch\frmDownloads.cs,tmrUpdateList_Tick,The following statement contains a magic number: foreach (DownloadProgressInfo info in downloadProgresses) {                  List<DownloadedSizeSnapshot> snapshotList;                  if (!_snapshotLists.TryGetValue(info.DownloadID' out snapshotList)) {                      snapshotList = new List<DownloadedSizeSnapshot>();                      snapshotList.Add(new DownloadedSizeSnapshot(info.StartTicks' 0));                      _snapshotLists[info.DownloadID] = snapshotList;                  }                  while (snapshotList.Count != 0 && ticksNow - snapshotList[0].Ticks > 5000) {                      snapshotList.RemoveAt(0);                  }                  snapshotList.Add(new DownloadedSizeSnapshot(ticksNow' info.DownloadedSize));                  int iLast = snapshotList.Count - 1;                  long size = snapshotList[iLast].DownloadedSize - snapshotList[0].DownloadedSize;                  long ticks = snapshotList[iLast].Ticks - snapshotList[0].Ticks;                  long? bytesPerSec = null;                  if (size > 0 && ticks > 0) {                      bytesPerSec = Convert.ToInt64(size / (ticks / 1000.0));                  }                  int iFirstForTotalWindow = iLast;                  for (int i = 0; i < snapshotList.Count; i++) {                      if (ticksNow - snapshotList[i].Ticks <= 2000 &&                          snapshotList[i].DownloadedSize < snapshotList[iLast].DownloadedSize)                      {                          iFirstForTotalWindow = i;                          break;                      }                  }                  totalDownloadedSize += snapshotList[iLast].DownloadedSize - snapshotList[iFirstForTotalWindow].DownloadedSize;                  minTotalDownloadedStartTicks = Math.Min(minTotalDownloadedStartTicks' snapshotList[iFirstForTotalWindow].Ticks);                  if (info.EndTicks == null) {                      UpdateDownloadProgress(info' bytesPerSec);                      oldDownloadIDs.Remove(info.DownloadID);                  }              }
Magic Number,JDP,frmDownloads,C:\repos\SuperGouge_ChanThreadWatch\frmDownloads.cs,tmrUpdateList_Tick,The following statement contains a magic number: if (totalDownloadedSize > 0 && totalDownloadedTicks > 0) {                  Text = "Downloads - " + GetKilobytesString(Convert.ToInt64(                      totalDownloadedSize / (totalDownloadedTicks / 1000.0))' "KB/s");              }              else {                  Text = "Downloads";              }
Magic Number,JDP,frmDownloads,C:\repos\SuperGouge_ChanThreadWatch\frmDownloads.cs,UpdateDownloadProgress,The following statement contains a magic number: if (info.TotalSize != null) {                  SetSubItemText(item' ColumnIndex.Percent' (info.DownloadedSize * 100 / info.TotalSize.Value).ToString() + "%");              }              else {                  SetSubItemText(item' ColumnIndex.Size' GetKilobytesString(info.DownloadedSize' "KB"));              }
Magic Number,JDP,frmDownloads,C:\repos\SuperGouge_ChanThreadWatch\frmDownloads.cs,GetKilobytesString,The following statement contains a magic number: return (byteSize.Value / 1024).ToString("#'##0") + " " + units;
Magic Number,JDP,frmDownloads,C:\repos\SuperGouge_ChanThreadWatch\frmDownloads.cs,InitializeComponent,The following statement contains a magic number: this.lvDownloads.Location = new System.Drawing.Point(8' 8);
Magic Number,JDP,frmDownloads,C:\repos\SuperGouge_ChanThreadWatch\frmDownloads.cs,InitializeComponent,The following statement contains a magic number: this.lvDownloads.Location = new System.Drawing.Point(8' 8);
Magic Number,JDP,frmDownloads,C:\repos\SuperGouge_ChanThreadWatch\frmDownloads.cs,InitializeComponent,The following statement contains a magic number: this.lvDownloads.Size = new System.Drawing.Size(620' 196);
Magic Number,JDP,frmDownloads,C:\repos\SuperGouge_ChanThreadWatch\frmDownloads.cs,InitializeComponent,The following statement contains a magic number: this.lvDownloads.Size = new System.Drawing.Size(620' 196);
Magic Number,JDP,frmDownloads,C:\repos\SuperGouge_ChanThreadWatch\frmDownloads.cs,InitializeComponent,The following statement contains a magic number: this.chURL.Width = 355;
Magic Number,JDP,frmDownloads,C:\repos\SuperGouge_ChanThreadWatch\frmDownloads.cs,InitializeComponent,The following statement contains a magic number: this.chSize.Width = 70;
Magic Number,JDP,frmDownloads,C:\repos\SuperGouge_ChanThreadWatch\frmDownloads.cs,InitializeComponent,The following statement contains a magic number: this.chSpeed.Width = 80;
Magic Number,JDP,frmDownloads,C:\repos\SuperGouge_ChanThreadWatch\frmDownloads.cs,InitializeComponent,The following statement contains a magic number: this.chTry.Width = 35;
Magic Number,JDP,frmDownloads,C:\repos\SuperGouge_ChanThreadWatch\frmDownloads.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(636' 213);
Magic Number,JDP,frmDownloads,C:\repos\SuperGouge_ChanThreadWatch\frmDownloads.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(636' 213);
Magic Number,JDP,frmDownloads,C:\repos\SuperGouge_ChanThreadWatch\frmDownloads.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size(260' 140);
Magic Number,JDP,frmDownloads,C:\repos\SuperGouge_ChanThreadWatch\frmDownloads.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size(260' 140);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,frmSettings_Load,The following statement contains a magic number: txtMaximumKilobytesPerSecond.Text = ((Settings.MaximumBytesPerSecond ?? 0) / 1024).ToString();
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,btnOK_Click,The following statement contains a magic number: try {                  string downloadFolder = txtDownloadFolder.Text.Trim();                    if (downloadFolder.Length == 0) {                      throw new Exception("You must enter a download folder.");                  }                  if (!Directory.Exists(downloadFolder)) {                      try {                          Directory.CreateDirectory(downloadFolder);                      }                      catch {                          throw new Exception("Unable to create the download folder.");                      }                  }                    string completedFolder = txtCompletedFolder.Text.Trim();                    if (chkCompletedFolder.Checked) {                      if (completedFolder.Length == 0) {                          throw new Exception("You must enter a completed folder.");                      }                      if (!Directory.Exists(completedFolder)) {                          try {                              Directory.CreateDirectory(completedFolder);                          }                          catch {                              throw new Exception("Unable to create the completed folder.");                          }                      }                  }                    string oldSettingsFolder = Settings.GetSettingsDirectory();                  string newSettingsFolder = Settings.GetSettingsDirectory(rbSettingsInExeFolder.Checked);                  if (!String.Equals(newSettingsFolder' oldSettingsFolder' StringComparison.OrdinalIgnoreCase)) {                      if (!Program.ObtainMutex(newSettingsFolder)) {                          MessageBox.Show(this' "Another instance of this program is using the same settings folder."'                              "Error"' MessageBoxButtons.OK' MessageBoxIcon.Error);                          return;                      }                      try {                          foreach (string fileName in new[] { Settings.SettingsFileName' Settings.ThreadsFileName }) {                              string oldPath = Path.Combine(oldSettingsFolder' fileName);                              string newPath = Path.Combine(newSettingsFolder' fileName);                              if (!File.Exists(oldPath)) continue;                              byte[] contents = File.ReadAllBytes(oldPath);                              File.WriteAllBytes(newPath' contents);                              try { File.Delete(oldPath); }                              catch { }                          }                      }                      catch {                          MessageBox.Show(this' "Unable to move the settings files."'                              "Error"' MessageBoxButtons.OK' MessageBoxIcon.Error);                          return;                      }                  }                    string oldAbsoluteDownloadFolder = Settings.AbsoluteDownloadDirectory;                    Settings.DownloadFolder = downloadFolder;                  Settings.DownloadFolderIsRelative = chkDownloadFolderRelative.Checked;                  Settings.MoveToCompletedFolder = chkCompletedFolder.Checked;                  Settings.CompletedFolder = completedFolder;                  Settings.CompletedFolderIsRelative = chkCompletedFolderRelative.Checked;                  Settings.UseCustomUserAgent = chkCustomUserAgent.Checked;                  Settings.CustomUserAgent = txtCustomUserAgent.Text;                  Settings.SaveThumbnails = chkSaveThumbnails.Checked;                  Settings.RenameDownloadFolderWithDescription = chkRenameDownloadFolderWithDescription.Checked;                  Settings.RenameDownloadFolderWithCategory = chkRenameDownloadFolderWithCategory.Checked;                  Settings.RenameDownloadFolderWithParentThreadDescription = chkRenameDownloadFolderWithParentThreadDescription.Checked;                  Settings.ParentThreadDescriptionFormat = txtParentThreadDescriptionFormat.Text;                  Settings.SortImagesByPoster = chkSortImagesByPoster.Checked;                  Settings.RecursiveAutoFollow = chkRecursiveAutoFollow.Checked;                  Settings.InterBoardAutoFollow = chkInterBoardAutoFollow.Checked;                  Settings.UseOriginalFileNames = chkUseOriginalFileNames.Checked;                  Settings.VerifyImageHashes = chkVerifyImageHashes.Checked;                  Settings.UseSlug = chkUseSlug.Checked;                  if (rbSlugFirst.Checked) {                      Settings.SlugType = SlugType.First;                  }                  else if (rbSlugOnly.Checked) {                      Settings.SlugType = SlugType.Only;                  }                  else {                      Settings.SlugType = SlugType.Last;                  }                  Settings.CheckForUpdates = chkCheckForUpdates.Checked;                  Settings.BlacklistWildcards = chkBlacklistWildcards.Checked;                  Settings.MinimizeToTray = chkMinimizeToTray.Checked;                  Settings.BackupThreadList = chkBackupThreadList.Checked;                  Settings.BackupEvery = Int32.Parse(txtBackupEvery.Text);                  Settings.BackupCheckSize = chkBackupCheckSize.Checked;                  Settings.MaximumBytesPerSecond = Int64.Parse(txtMaximumKilobytesPerSecond.Text) * 1024;                  Settings.WindowTitle = txtWindowTitle.Text;                  Settings.UseExeDirectoryForSettings = rbSettingsInExeFolder.Checked;                    Settings.Save();                    if (!String.Equals(Settings.AbsoluteDownloadDirectory' oldAbsoluteDownloadFolder' StringComparison.OrdinalIgnoreCase)) {                      MessageBox.Show(this' "The new download folder will not affect threads currently being watched until the program is restarted.  " +                                            "If you are still watching the threads at next run' make sure you have moved their download folders into the new download folder."'                          "Download Folder Changed"' MessageBoxButtons.OK' MessageBoxIcon.Information);                  }                    DialogResult = DialogResult.OK;              }              catch (Exception ex) {                  MessageBox.Show(this' ex.Message' "Error"' MessageBoxButtons.OK' MessageBoxIcon.Error);              }
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,txtMaximumKilobytesPerSecond_Leave,The following statement contains a magic number: if (!Int64.TryParse(txtMaximumKilobytesPerSecond.Text' out kbps) || kbps < 0 || kbps > Int64.MaxValue / 1024) {                  txtMaximumKilobytesPerSecond.Text = "0";              }
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.txtDownloadFolder.Location = new System.Drawing.Point(108' 8);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.txtDownloadFolder.Location = new System.Drawing.Point(108' 8);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.txtDownloadFolder.Size = new System.Drawing.Size(544' 20);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.txtDownloadFolder.Size = new System.Drawing.Size(544' 20);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.lblDownloadFolder.Location = new System.Drawing.Point(8' 12);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.lblDownloadFolder.Location = new System.Drawing.Point(8' 12);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.lblDownloadFolder.Size = new System.Drawing.Size(87' 13);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.lblDownloadFolder.Size = new System.Drawing.Size(87' 13);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.btnDownloadFolder.Location = new System.Drawing.Point(658' 8);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.btnDownloadFolder.Location = new System.Drawing.Point(658' 8);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.btnDownloadFolder.Size = new System.Drawing.Size(80' 23);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.btnDownloadFolder.Size = new System.Drawing.Size(80' 23);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.btnDownloadFolder.TabIndex = 2;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.Location = new System.Drawing.Point(698' 385);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.Location = new System.Drawing.Point(698' 385);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.Size = new System.Drawing.Size(60' 23);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.Size = new System.Drawing.Size(60' 23);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.TabIndex = 14;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Location = new System.Drawing.Point(766' 385);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Location = new System.Drawing.Point(766' 385);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Size = new System.Drawing.Size(68' 23);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Size = new System.Drawing.Size(68' 23);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.TabIndex = 15;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkCustomUserAgent.Location = new System.Drawing.Point(10' 66);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkCustomUserAgent.Location = new System.Drawing.Point(10' 66);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkCustomUserAgent.Size = new System.Drawing.Size(117' 17);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkCustomUserAgent.Size = new System.Drawing.Size(117' 17);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkCustomUserAgent.TabIndex = 4;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.txtCustomUserAgent.Location = new System.Drawing.Point(140' 64);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.txtCustomUserAgent.Location = new System.Drawing.Point(140' 64);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.txtCustomUserAgent.Size = new System.Drawing.Size(692' 20);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.txtCustomUserAgent.Size = new System.Drawing.Size(692' 20);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.txtCustomUserAgent.TabIndex = 5;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkDownloadFolderRelative.Location = new System.Drawing.Point(746' 12);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkDownloadFolderRelative.Location = new System.Drawing.Point(746' 12);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkDownloadFolderRelative.Size = new System.Drawing.Size(89' 17);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkDownloadFolderRelative.Size = new System.Drawing.Size(89' 17);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkDownloadFolderRelative.TabIndex = 3;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.lblSettingsLocation.Location = new System.Drawing.Point(8' 393);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.lblSettingsLocation.Location = new System.Drawing.Point(8' 393);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.lblSettingsLocation.Size = new System.Drawing.Size(85' 13);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.lblSettingsLocation.Size = new System.Drawing.Size(85' 13);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.lblSettingsLocation.TabIndex = 11;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.rbSettingsInAppDataFolder.Location = new System.Drawing.Point(108' 391);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.rbSettingsInAppDataFolder.Location = new System.Drawing.Point(108' 391);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.rbSettingsInAppDataFolder.Size = new System.Drawing.Size(130' 17);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.rbSettingsInAppDataFolder.Size = new System.Drawing.Size(130' 17);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.rbSettingsInAppDataFolder.TabIndex = 12;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.rbSettingsInExeFolder.Location = new System.Drawing.Point(252' 391);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.rbSettingsInExeFolder.Location = new System.Drawing.Point(252' 391);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.rbSettingsInExeFolder.Size = new System.Drawing.Size(107' 17);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.rbSettingsInExeFolder.Size = new System.Drawing.Size(107' 17);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.rbSettingsInExeFolder.TabIndex = 13;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkUseOriginalFileNames.Location = new System.Drawing.Point(6' 115);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkUseOriginalFileNames.Location = new System.Drawing.Point(6' 115);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkUseOriginalFileNames.Size = new System.Drawing.Size(273' 17);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkUseOriginalFileNames.Size = new System.Drawing.Size(273' 17);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkUseOriginalFileNames.TabIndex = 8;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkVerifyImageHashes.Location = new System.Drawing.Point(6' 42);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkVerifyImageHashes.Location = new System.Drawing.Point(6' 42);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkVerifyImageHashes.Size = new System.Drawing.Size(265' 17);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkVerifyImageHashes.Size = new System.Drawing.Size(265' 17);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkVerifyImageHashes.TabIndex = 9;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkCheckForUpdates.Location = new System.Drawing.Point(6' 111);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkCheckForUpdates.Location = new System.Drawing.Point(6' 111);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkCheckForUpdates.Size = new System.Drawing.Size(353' 17);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkCheckForUpdates.Size = new System.Drawing.Size(353' 17);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkCheckForUpdates.TabIndex = 10;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkSaveThumbnails.Location = new System.Drawing.Point(6' 19);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkSaveThumbnails.Location = new System.Drawing.Point(6' 19);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkSaveThumbnails.Size = new System.Drawing.Size(221' 17);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkSaveThumbnails.Size = new System.Drawing.Size(221' 17);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkSaveThumbnails.TabIndex = 6;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkRenameDownloadFolderWithDescription.Location = new System.Drawing.Point(6' 19);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkRenameDownloadFolderWithDescription.Location = new System.Drawing.Point(6' 19);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkRenameDownloadFolderWithDescription.Size = new System.Drawing.Size(79' 17);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkRenameDownloadFolderWithDescription.Size = new System.Drawing.Size(79' 17);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkRenameDownloadFolderWithDescription.TabIndex = 7;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkUseSlug.Location = new System.Drawing.Point(6' 138);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkUseSlug.Location = new System.Drawing.Point(6' 138);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkUseSlug.Size = new System.Drawing.Size(285' 17);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkUseSlug.Size = new System.Drawing.Size(285' 17);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkUseSlug.TabIndex = 16;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.pnlSlug.Location = new System.Drawing.Point(6' 154);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.pnlSlug.Location = new System.Drawing.Point(6' 154);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.pnlSlug.Size = new System.Drawing.Size(308' 26);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.pnlSlug.Size = new System.Drawing.Size(308' 26);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.pnlSlug.TabIndex = 17;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.lblSlugType.Location = new System.Drawing.Point(3' 8);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.lblSlugType.Location = new System.Drawing.Point(3' 8);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.lblSlugType.Size = new System.Drawing.Size(54' 13);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.lblSlugType.Size = new System.Drawing.Size(54' 13);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.lblSlugType.TabIndex = 21;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.rbSlugOnly.Location = new System.Drawing.Point(232' 6);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.rbSlugOnly.Location = new System.Drawing.Point(232' 6);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.rbSlugOnly.Size = new System.Drawing.Size(68' 17);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.rbSlugOnly.Size = new System.Drawing.Size(68' 17);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.rbSlugOnly.TabIndex = 20;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.rbSlugLast.Location = new System.Drawing.Point(134' 6);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.rbSlugLast.Location = new System.Drawing.Point(134' 6);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.rbSlugLast.Size = new System.Drawing.Size(92' 17);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.rbSlugLast.Size = new System.Drawing.Size(92' 17);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.rbSlugLast.TabIndex = 19;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.rbSlugFirst.Location = new System.Drawing.Point(63' 6);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.rbSlugFirst.Location = new System.Drawing.Point(63' 6);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.rbSlugFirst.Size = new System.Drawing.Size(65' 17);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.rbSlugFirst.Size = new System.Drawing.Size(65' 17);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.rbSlugFirst.TabIndex = 18;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkRenameDownloadFolderWithCategory.Location = new System.Drawing.Point(91' 19);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkRenameDownloadFolderWithCategory.Location = new System.Drawing.Point(91' 19);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkRenameDownloadFolderWithCategory.Size = new System.Drawing.Size(68' 17);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkRenameDownloadFolderWithCategory.Size = new System.Drawing.Size(68' 17);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkRenameDownloadFolderWithCategory.TabIndex = 18;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkRenameDownloadFolderWithParentThreadDescription.Location = new System.Drawing.Point(6' 42);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkRenameDownloadFolderWithParentThreadDescription.Location = new System.Drawing.Point(6' 42);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkRenameDownloadFolderWithParentThreadDescription.Size = new System.Drawing.Size(144' 17);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkRenameDownloadFolderWithParentThreadDescription.Size = new System.Drawing.Size(144' 17);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkRenameDownloadFolderWithParentThreadDescription.TabIndex = 20;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.lblParentThreadDescriptionFormat.Location = new System.Drawing.Point(3' 7);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.lblParentThreadDescriptionFormat.Location = new System.Drawing.Point(3' 7);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.lblParentThreadDescriptionFormat.Size = new System.Drawing.Size(42' 13);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.lblParentThreadDescriptionFormat.Size = new System.Drawing.Size(42' 13);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.lblParentThreadDescriptionFormat.TabIndex = 21;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.txtParentThreadDescriptionFormat.Location = new System.Drawing.Point(51' 3);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.txtParentThreadDescriptionFormat.Location = new System.Drawing.Point(51' 3);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.txtParentThreadDescriptionFormat.Size = new System.Drawing.Size(150' 20);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.txtParentThreadDescriptionFormat.Size = new System.Drawing.Size(150' 20);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.txtParentThreadDescriptionFormat.TabIndex = 22;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkSortImagesByPoster.Location = new System.Drawing.Point(6' 92);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkSortImagesByPoster.Location = new System.Drawing.Point(6' 92);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkSortImagesByPoster.Size = new System.Drawing.Size(272' 17);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkSortImagesByPoster.Size = new System.Drawing.Size(272' 17);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkSortImagesByPoster.TabIndex = 23;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.grpThreadFolderNaming.Location = new System.Drawing.Point(6' 19);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.grpThreadFolderNaming.Location = new System.Drawing.Point(6' 19);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.grpThreadFolderNaming.Size = new System.Drawing.Size(365' 67);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.grpThreadFolderNaming.Size = new System.Drawing.Size(365' 67);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.grpThreadFolderNaming.TabIndex = 24;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.pnlParentThreadDescriptionFormat.Location = new System.Drawing.Point(156' 36);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.pnlParentThreadDescriptionFormat.Location = new System.Drawing.Point(156' 36);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.pnlParentThreadDescriptionFormat.Size = new System.Drawing.Size(208' 25);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.pnlParentThreadDescriptionFormat.Size = new System.Drawing.Size(208' 25);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.pnlParentThreadDescriptionFormat.TabIndex = 25;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.grpNamingStructure.Location = new System.Drawing.Point(12' 90);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.grpNamingStructure.Location = new System.Drawing.Point(12' 90);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.grpNamingStructure.Size = new System.Drawing.Size(379' 194);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.grpNamingStructure.Size = new System.Drawing.Size(379' 194);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.grpNamingStructure.TabIndex = 25;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.grpGeneral.Location = new System.Drawing.Point(397' 90);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.grpGeneral.Location = new System.Drawing.Point(397' 90);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.grpGeneral.Size = new System.Drawing.Size(437' 204);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.grpGeneral.Size = new System.Drawing.Size(437' 204);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.grpGeneral.TabIndex = 26;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.txtMaximumKilobytesPerSecond.Location = new System.Drawing.Point(244' 178);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.txtMaximumKilobytesPerSecond.Location = new System.Drawing.Point(244' 178);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.txtMaximumKilobytesPerSecond.Size = new System.Drawing.Size(56' 20);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.txtMaximumKilobytesPerSecond.Size = new System.Drawing.Size(56' 20);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.txtMaximumKilobytesPerSecond.TabIndex = 32;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.lblMaximumKilobytesPerSecond.Location = new System.Drawing.Point(6' 181);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.lblMaximumKilobytesPerSecond.Location = new System.Drawing.Point(6' 181);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.lblMaximumKilobytesPerSecond.Size = new System.Drawing.Size(232' 13);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.lblMaximumKilobytesPerSecond.Size = new System.Drawing.Size(232' 13);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.lblMaximumKilobytesPerSecond.TabIndex = 33;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkBlacklistWildcards.Location = new System.Drawing.Point(6' 134);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkBlacklistWildcards.Location = new System.Drawing.Point(6' 134);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkBlacklistWildcards.Size = new System.Drawing.Size(147' 17);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkBlacklistWildcards.Size = new System.Drawing.Size(147' 17);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkBlacklistWildcards.TabIndex = 28;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkMinimizeToTray.Location = new System.Drawing.Point(6' 157);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkMinimizeToTray.Location = new System.Drawing.Point(6' 157);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkMinimizeToTray.Size = new System.Drawing.Size(98' 17);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkMinimizeToTray.Size = new System.Drawing.Size(98' 17);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkMinimizeToTray.TabIndex = 27;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkInterBoardAutoFollow.Location = new System.Drawing.Point(6' 88);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkInterBoardAutoFollow.Location = new System.Drawing.Point(6' 88);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkInterBoardAutoFollow.Size = new System.Drawing.Size(372' 17);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkInterBoardAutoFollow.Size = new System.Drawing.Size(372' 17);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkInterBoardAutoFollow.TabIndex = 12;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkRecursiveAutoFollow.Location = new System.Drawing.Point(6' 65);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkRecursiveAutoFollow.Location = new System.Drawing.Point(6' 65);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkRecursiveAutoFollow.Size = new System.Drawing.Size(343' 17);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkRecursiveAutoFollow.Size = new System.Drawing.Size(343' 17);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkRecursiveAutoFollow.TabIndex = 11;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.cboWindowTitle.Location = new System.Drawing.Point(71' 29);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.cboWindowTitle.Location = new System.Drawing.Point(71' 29);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.cboWindowTitle.Size = new System.Drawing.Size(128' 21);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.cboWindowTitle.Size = new System.Drawing.Size(128' 21);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.cboWindowTitle.TabIndex = 36;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.txtWindowTitle.Location = new System.Drawing.Point(71' 3);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.txtWindowTitle.Location = new System.Drawing.Point(71' 3);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.txtWindowTitle.Size = new System.Drawing.Size(351' 20);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.txtWindowTitle.Size = new System.Drawing.Size(351' 20);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.txtWindowTitle.TabIndex = 35;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.lblWindowTitle.Location = new System.Drawing.Point(3' 6);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.lblWindowTitle.Location = new System.Drawing.Point(3' 6);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.lblWindowTitle.Size = new System.Drawing.Size(62' 13);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.lblWindowTitle.Size = new System.Drawing.Size(62' 13);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.lblWindowTitle.TabIndex = 34;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.btnBackupThreadList.Location = new System.Drawing.Point(289' 47);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.btnBackupThreadList.Location = new System.Drawing.Point(289' 47);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.btnBackupThreadList.Size = new System.Drawing.Size(84' 23);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.btnBackupThreadList.Size = new System.Drawing.Size(84' 23);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.btnBackupThreadList.TabIndex = 27;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.pnlBackupEvery.Location = new System.Drawing.Point(123' 15);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.pnlBackupEvery.Location = new System.Drawing.Point(123' 15);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.pnlBackupEvery.Size = new System.Drawing.Size(177' 26);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.pnlBackupEvery.Size = new System.Drawing.Size(177' 26);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.pnlBackupEvery.TabIndex = 32;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.lblBackupEvery.Location = new System.Drawing.Point(3' 5);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.lblBackupEvery.Location = new System.Drawing.Point(3' 5);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.lblBackupEvery.Size = new System.Drawing.Size(121' 13);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.lblBackupEvery.Size = new System.Drawing.Size(121' 13);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.lblBackupEvery.TabIndex = 30;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.txtBackupEvery.Location = new System.Drawing.Point(130' 2);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.txtBackupEvery.Location = new System.Drawing.Point(130' 2);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.txtBackupEvery.Size = new System.Drawing.Size(40' 20);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.txtBackupEvery.Size = new System.Drawing.Size(40' 20);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.txtBackupEvery.TabIndex = 31;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkBackupThreadList.Location = new System.Drawing.Point(6' 19);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkBackupThreadList.Location = new System.Drawing.Point(6' 19);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkBackupThreadList.Size = new System.Drawing.Size(111' 17);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkBackupThreadList.Size = new System.Drawing.Size(111' 17);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkBackupThreadList.TabIndex = 29;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.grpBackup.Location = new System.Drawing.Point(12' 290);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.grpBackup.Location = new System.Drawing.Point(12' 290);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.grpBackup.Size = new System.Drawing.Size(379' 76);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.grpBackup.Size = new System.Drawing.Size(379' 76);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.grpBackup.TabIndex = 26;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkBackupCheckSize.Location = new System.Drawing.Point(6' 42);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkBackupCheckSize.Location = new System.Drawing.Point(6' 42);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkBackupCheckSize.Size = new System.Drawing.Size(207' 17);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkBackupCheckSize.Size = new System.Drawing.Size(207' 17);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkBackupCheckSize.TabIndex = 33;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.grpWindow.Location = new System.Drawing.Point(397' 300);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.grpWindow.Location = new System.Drawing.Point(397' 300);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.grpWindow.Size = new System.Drawing.Size(437' 77);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.grpWindow.Size = new System.Drawing.Size(437' 77);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.grpWindow.TabIndex = 34;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.pnlWindowTitle.Location = new System.Drawing.Point(6' 16);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.pnlWindowTitle.Location = new System.Drawing.Point(6' 16);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.pnlWindowTitle.Size = new System.Drawing.Size(425' 54);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.pnlWindowTitle.Size = new System.Drawing.Size(425' 54);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.pnlWindowTitle.TabIndex = 32;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.btnWindowTitle.Location = new System.Drawing.Point(6' 28);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.btnWindowTitle.Location = new System.Drawing.Point(6' 28);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.btnWindowTitle.Size = new System.Drawing.Size(60' 23);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.btnWindowTitle.Size = new System.Drawing.Size(60' 23);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.btnWindowTitle.TabIndex = 35;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.txtCompletedFolder.Location = new System.Drawing.Point(180' 36);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.txtCompletedFolder.Location = new System.Drawing.Point(180' 36);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.txtCompletedFolder.Size = new System.Drawing.Size(472' 20);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.txtCompletedFolder.Size = new System.Drawing.Size(472' 20);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.txtCompletedFolder.TabIndex = 36;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.btnCompletedFolder.Location = new System.Drawing.Point(658' 34);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.btnCompletedFolder.Location = new System.Drawing.Point(658' 34);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.btnCompletedFolder.Size = new System.Drawing.Size(80' 23);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.btnCompletedFolder.Size = new System.Drawing.Size(80' 23);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.btnCompletedFolder.TabIndex = 37;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkCompletedFolder.Location = new System.Drawing.Point(10' 39);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkCompletedFolder.Location = new System.Drawing.Point(10' 39);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkCompletedFolder.Size = new System.Drawing.Size(164' 17);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkCompletedFolder.Size = new System.Drawing.Size(164' 17);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkCompletedFolder.TabIndex = 38;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkCompletedFolderRelative.Location = new System.Drawing.Point(746' 38);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkCompletedFolderRelative.Location = new System.Drawing.Point(746' 38);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkCompletedFolderRelative.Size = new System.Drawing.Size(89' 17);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkCompletedFolderRelative.Size = new System.Drawing.Size(89' 17);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.chkCompletedFolderRelative.TabIndex = 39;
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(844' 418);
Magic Number,JDP,frmSettings,C:\repos\SuperGouge_ChanThreadWatch\frmSettings.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(844' 418);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,frmThreadEdit,The following statement contains a magic number: cboCheckEvery.DataSource = new[] {                  new ListItemInt32(0' "1 or <")'                  new ListItemInt32(2' "2")'                  new ListItemInt32(3' "3")'                  new ListItemInt32(5' "5")'                  new ListItemInt32(10' "10")'                  new ListItemInt32(60' "60")              };
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,frmThreadEdit,The following statement contains a magic number: cboCheckEvery.DataSource = new[] {                  new ListItemInt32(0' "1 or <")'                  new ListItemInt32(2' "2")'                  new ListItemInt32(3' "3")'                  new ListItemInt32(5' "5")'                  new ListItemInt32(10' "10")'                  new ListItemInt32(60' "60")              };
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,frmThreadEdit,The following statement contains a magic number: cboCheckEvery.DataSource = new[] {                  new ListItemInt32(0' "1 or <")'                  new ListItemInt32(2' "2")'                  new ListItemInt32(3' "3")'                  new ListItemInt32(5' "5")'                  new ListItemInt32(10' "10")'                  new ListItemInt32(60' "60")              };
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,frmThreadEdit,The following statement contains a magic number: cboCheckEvery.DataSource = new[] {                  new ListItemInt32(0' "1 or <")'                  new ListItemInt32(2' "2")'                  new ListItemInt32(3' "3")'                  new ListItemInt32(5' "5")'                  new ListItemInt32(10' "10")'                  new ListItemInt32(60' "60")              };
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,frmThreadEdit,The following statement contains a magic number: cboCheckEvery.DataSource = new[] {                  new ListItemInt32(0' "1 or <")'                  new ListItemInt32(2' "2")'                  new ListItemInt32(3' "3")'                  new ListItemInt32(5' "5")'                  new ListItemInt32(10' "10")'                  new ListItemInt32(60' "60")              };
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,frmThreadEdit,The following statement contains a magic number: switch (watcher.CheckIntervalSeconds / 60) {                  case 0: cboCheckEvery.SelectedIndex = 0; break;                  case 1: cboCheckEvery.SelectedIndex = 0; break;                  case 2: cboCheckEvery.SelectedIndex = 1; break;                  case 3: cboCheckEvery.SelectedIndex = 2; break;                  case 5: cboCheckEvery.SelectedIndex = 3; break;                  case 10: cboCheckEvery.SelectedIndex = 4; break;                  case 60: cboCheckEvery.SelectedIndex = 5; break;                  default:                      txtCheckEvery.Text = (watcher.CheckIntervalSeconds / 60).ToString(CultureInfo.InvariantCulture);                      cboCheckEvery.SelectedIndex = -1;                      cboCheckEvery.Enabled = false;                      break;              }
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,frmThreadEdit,The following statement contains a magic number: switch (watcher.CheckIntervalSeconds / 60) {                  case 0: cboCheckEvery.SelectedIndex = 0; break;                  case 1: cboCheckEvery.SelectedIndex = 0; break;                  case 2: cboCheckEvery.SelectedIndex = 1; break;                  case 3: cboCheckEvery.SelectedIndex = 2; break;                  case 5: cboCheckEvery.SelectedIndex = 3; break;                  case 10: cboCheckEvery.SelectedIndex = 4; break;                  case 60: cboCheckEvery.SelectedIndex = 5; break;                  default:                      txtCheckEvery.Text = (watcher.CheckIntervalSeconds / 60).ToString(CultureInfo.InvariantCulture);                      cboCheckEvery.SelectedIndex = -1;                      cboCheckEvery.Enabled = false;                      break;              }
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,frmThreadEdit,The following statement contains a magic number: switch (watcher.CheckIntervalSeconds / 60) {                  case 0: cboCheckEvery.SelectedIndex = 0; break;                  case 1: cboCheckEvery.SelectedIndex = 0; break;                  case 2: cboCheckEvery.SelectedIndex = 1; break;                  case 3: cboCheckEvery.SelectedIndex = 2; break;                  case 5: cboCheckEvery.SelectedIndex = 3; break;                  case 10: cboCheckEvery.SelectedIndex = 4; break;                  case 60: cboCheckEvery.SelectedIndex = 5; break;                  default:                      txtCheckEvery.Text = (watcher.CheckIntervalSeconds / 60).ToString(CultureInfo.InvariantCulture);                      cboCheckEvery.SelectedIndex = -1;                      cboCheckEvery.Enabled = false;                      break;              }
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,frmThreadEdit,The following statement contains a magic number: switch (watcher.CheckIntervalSeconds / 60) {                  case 0: cboCheckEvery.SelectedIndex = 0; break;                  case 1: cboCheckEvery.SelectedIndex = 0; break;                  case 2: cboCheckEvery.SelectedIndex = 1; break;                  case 3: cboCheckEvery.SelectedIndex = 2; break;                  case 5: cboCheckEvery.SelectedIndex = 3; break;                  case 10: cboCheckEvery.SelectedIndex = 4; break;                  case 60: cboCheckEvery.SelectedIndex = 5; break;                  default:                      txtCheckEvery.Text = (watcher.CheckIntervalSeconds / 60).ToString(CultureInfo.InvariantCulture);                      cboCheckEvery.SelectedIndex = -1;                      cboCheckEvery.Enabled = false;                      break;              }
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,frmThreadEdit,The following statement contains a magic number: switch (watcher.CheckIntervalSeconds / 60) {                  case 0: cboCheckEvery.SelectedIndex = 0; break;                  case 1: cboCheckEvery.SelectedIndex = 0; break;                  case 2: cboCheckEvery.SelectedIndex = 1; break;                  case 3: cboCheckEvery.SelectedIndex = 2; break;                  case 5: cboCheckEvery.SelectedIndex = 3; break;                  case 10: cboCheckEvery.SelectedIndex = 4; break;                  case 60: cboCheckEvery.SelectedIndex = 5; break;                  default:                      txtCheckEvery.Text = (watcher.CheckIntervalSeconds / 60).ToString(CultureInfo.InvariantCulture);                      cboCheckEvery.SelectedIndex = -1;                      cboCheckEvery.Enabled = false;                      break;              }
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,frmThreadEdit,The following statement contains a magic number: switch (watcher.CheckIntervalSeconds / 60) {                  case 0: cboCheckEvery.SelectedIndex = 0; break;                  case 1: cboCheckEvery.SelectedIndex = 0; break;                  case 2: cboCheckEvery.SelectedIndex = 1; break;                  case 3: cboCheckEvery.SelectedIndex = 2; break;                  case 5: cboCheckEvery.SelectedIndex = 3; break;                  case 10: cboCheckEvery.SelectedIndex = 4; break;                  case 60: cboCheckEvery.SelectedIndex = 5; break;                  default:                      txtCheckEvery.Text = (watcher.CheckIntervalSeconds / 60).ToString(CultureInfo.InvariantCulture);                      cboCheckEvery.SelectedIndex = -1;                      cboCheckEvery.Enabled = false;                      break;              }
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,frmThreadEdit,The following statement contains a magic number: switch (watcher.CheckIntervalSeconds / 60) {                  case 0: cboCheckEvery.SelectedIndex = 0; break;                  case 1: cboCheckEvery.SelectedIndex = 0; break;                  case 2: cboCheckEvery.SelectedIndex = 1; break;                  case 3: cboCheckEvery.SelectedIndex = 2; break;                  case 5: cboCheckEvery.SelectedIndex = 3; break;                  case 10: cboCheckEvery.SelectedIndex = 4; break;                  case 60: cboCheckEvery.SelectedIndex = 5; break;                  default:                      txtCheckEvery.Text = (watcher.CheckIntervalSeconds / 60).ToString(CultureInfo.InvariantCulture);                      cboCheckEvery.SelectedIndex = -1;                      cboCheckEvery.Enabled = false;                      break;              }
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,frmThreadEdit,The following statement contains a magic number: switch (watcher.CheckIntervalSeconds / 60) {                  case 0: cboCheckEvery.SelectedIndex = 0; break;                  case 1: cboCheckEvery.SelectedIndex = 0; break;                  case 2: cboCheckEvery.SelectedIndex = 1; break;                  case 3: cboCheckEvery.SelectedIndex = 2; break;                  case 5: cboCheckEvery.SelectedIndex = 3; break;                  case 10: cboCheckEvery.SelectedIndex = 4; break;                  case 60: cboCheckEvery.SelectedIndex = 5; break;                  default:                      txtCheckEvery.Text = (watcher.CheckIntervalSeconds / 60).ToString(CultureInfo.InvariantCulture);                      cboCheckEvery.SelectedIndex = -1;                      cboCheckEvery.Enabled = false;                      break;              }
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,frmThreadEdit,The following statement contains a magic number: switch (watcher.CheckIntervalSeconds / 60) {                  case 0: cboCheckEvery.SelectedIndex = 0; break;                  case 1: cboCheckEvery.SelectedIndex = 0; break;                  case 2: cboCheckEvery.SelectedIndex = 1; break;                  case 3: cboCheckEvery.SelectedIndex = 2; break;                  case 5: cboCheckEvery.SelectedIndex = 3; break;                  case 10: cboCheckEvery.SelectedIndex = 4; break;                  case 60: cboCheckEvery.SelectedIndex = 5; break;                  default:                      txtCheckEvery.Text = (watcher.CheckIntervalSeconds / 60).ToString(CultureInfo.InvariantCulture);                      cboCheckEvery.SelectedIndex = -1;                      cboCheckEvery.Enabled = false;                      break;              }
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,frmThreadEdit,The following statement contains a magic number: switch (watcher.CheckIntervalSeconds / 60) {                  case 0: cboCheckEvery.SelectedIndex = 0; break;                  case 1: cboCheckEvery.SelectedIndex = 0; break;                  case 2: cboCheckEvery.SelectedIndex = 1; break;                  case 3: cboCheckEvery.SelectedIndex = 2; break;                  case 5: cboCheckEvery.SelectedIndex = 3; break;                  case 10: cboCheckEvery.SelectedIndex = 4; break;                  case 60: cboCheckEvery.SelectedIndex = 5; break;                  default:                      txtCheckEvery.Text = (watcher.CheckIntervalSeconds / 60).ToString(CultureInfo.InvariantCulture);                      cboCheckEvery.SelectedIndex = -1;                      cboCheckEvery.Enabled = false;                      break;              }
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,frmThreadEdit,The following statement contains a magic number: switch (watcher.CheckIntervalSeconds / 60) {                  case 0: cboCheckEvery.SelectedIndex = 0; break;                  case 1: cboCheckEvery.SelectedIndex = 0; break;                  case 2: cboCheckEvery.SelectedIndex = 1; break;                  case 3: cboCheckEvery.SelectedIndex = 2; break;                  case 5: cboCheckEvery.SelectedIndex = 3; break;                  case 10: cboCheckEvery.SelectedIndex = 4; break;                  case 60: cboCheckEvery.SelectedIndex = 5; break;                  default:                      txtCheckEvery.Text = (watcher.CheckIntervalSeconds / 60).ToString(CultureInfo.InvariantCulture);                      cboCheckEvery.SelectedIndex = -1;                      cboCheckEvery.Enabled = false;                      break;              }
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,cboCheckEvery_SelectedIndexChanged,The following statement contains a magic number: if (_cboCheckEveryLastValue == null && (int)cboCheckEvery.SelectedValue == 0) {                  _cboCheckEveryLastValue = 3;              }              else {                  _cboCheckEveryLastValue = cboCheckEvery.SelectedValue;              }
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Location = new System.Drawing.Point(187' 209);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Location = new System.Drawing.Point(187' 209);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Size = new System.Drawing.Size(68' 23);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Size = new System.Drawing.Size(68' 23);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.TabIndex = 3;
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.Location = new System.Drawing.Point(119' 209);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.Location = new System.Drawing.Point(119' 209);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.Size = new System.Drawing.Size(60' 23);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.Size = new System.Drawing.Size(60' 23);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.TabIndex = 2;
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.pnlEdit.Location = new System.Drawing.Point(12' 12);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.pnlEdit.Location = new System.Drawing.Point(12' 12);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.pnlEdit.Size = new System.Drawing.Size(350' 182);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.pnlEdit.Size = new System.Drawing.Size(350' 182);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.pnlEdit.TabIndex = 26;
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.pnlDescription.Location = new System.Drawing.Point(3' 3);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.pnlDescription.Location = new System.Drawing.Point(3' 3);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.pnlDescription.Size = new System.Drawing.Size(200' 29);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.pnlDescription.Size = new System.Drawing.Size(200' 29);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.pnlDescription.TabIndex = 39;
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.txtDescription.Location = new System.Drawing.Point(72' 3);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.txtDescription.Location = new System.Drawing.Point(72' 3);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.txtDescription.Size = new System.Drawing.Size(118' 20);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.txtDescription.Size = new System.Drawing.Size(118' 20);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.txtDescription.TabIndex = 40;
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.lblDescription.Location = new System.Drawing.Point(3' 6);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.lblDescription.Location = new System.Drawing.Point(3' 6);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.lblDescription.Size = new System.Drawing.Size(63' 13);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.lblDescription.Size = new System.Drawing.Size(63' 13);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.lblDescription.TabIndex = 37;
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.pnlCategory.Location = new System.Drawing.Point(3' 38);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.pnlCategory.Location = new System.Drawing.Point(3' 38);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.pnlCategory.Size = new System.Drawing.Size(200' 29);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.pnlCategory.Size = new System.Drawing.Size(200' 29);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.pnlCategory.TabIndex = 38;
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.lblCategory.Location = new System.Drawing.Point(3' 8);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.lblCategory.Location = new System.Drawing.Point(3' 8);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.lblCategory.Size = new System.Drawing.Size(52' 13);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.lblCategory.Size = new System.Drawing.Size(52' 13);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.lblCategory.TabIndex = 37;
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.cboCategory.Location = new System.Drawing.Point(61' 3);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.cboCategory.Location = new System.Drawing.Point(61' 3);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.cboCategory.Size = new System.Drawing.Size(129' 21);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.cboCategory.Size = new System.Drawing.Size(129' 21);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.cboCategory.TabIndex = 36;
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.chkAutoFollow.Location = new System.Drawing.Point(126' 129);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.chkAutoFollow.Location = new System.Drawing.Point(126' 129);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.chkAutoFollow.Size = new System.Drawing.Size(78' 17);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.chkAutoFollow.Size = new System.Drawing.Size(78' 17);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.chkAutoFollow.TabIndex = 36;
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.pnlCheckEvery.Location = new System.Drawing.Point(3' 152);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.pnlCheckEvery.Location = new System.Drawing.Point(3' 152);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.pnlCheckEvery.Size = new System.Drawing.Size(236' 25);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.pnlCheckEvery.Size = new System.Drawing.Size(236' 25);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.pnlCheckEvery.TabIndex = 33;
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.txtCheckEvery.Location = new System.Drawing.Point(185' 0);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.txtCheckEvery.Size = new System.Drawing.Size(40' 20);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.txtCheckEvery.Size = new System.Drawing.Size(40' 20);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.txtCheckEvery.TabIndex = 10;
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.cboCheckEvery.Location = new System.Drawing.Point(124' 0);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.cboCheckEvery.Size = new System.Drawing.Size(55' 21);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.cboCheckEvery.Size = new System.Drawing.Size(55' 21);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.cboCheckEvery.TabIndex = 8;
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.lblCheckEvery.Location = new System.Drawing.Point(3' 4);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.lblCheckEvery.Location = new System.Drawing.Point(3' 4);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.lblCheckEvery.Size = new System.Drawing.Size(115' 13);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.lblCheckEvery.Size = new System.Drawing.Size(115' 13);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.lblCheckEvery.TabIndex = 31;
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.txtImageAuth.Location = new System.Drawing.Point(155' 101);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.txtImageAuth.Location = new System.Drawing.Point(155' 101);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.txtImageAuth.Size = new System.Drawing.Size(184' 20);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.txtImageAuth.Size = new System.Drawing.Size(184' 20);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.txtImageAuth.TabIndex = 29;
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.txtPageAuth.Location = new System.Drawing.Point(155' 73);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.txtPageAuth.Location = new System.Drawing.Point(155' 73);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.txtPageAuth.Size = new System.Drawing.Size(184' 20);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.txtPageAuth.Size = new System.Drawing.Size(184' 20);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.txtPageAuth.TabIndex = 27;
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.chkImageAuth.Location = new System.Drawing.Point(3' 103);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.chkImageAuth.Location = new System.Drawing.Point(3' 103);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.chkImageAuth.Size = new System.Drawing.Size(136' 17);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.chkImageAuth.Size = new System.Drawing.Size(136' 17);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.chkImageAuth.TabIndex = 28;
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.chkPageAuth.Location = new System.Drawing.Point(3' 75);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.chkPageAuth.Location = new System.Drawing.Point(3' 75);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.chkPageAuth.Size = new System.Drawing.Size(132' 17);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.chkPageAuth.Size = new System.Drawing.Size(132' 17);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.chkPageAuth.TabIndex = 26;
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.chkOneTime.Location = new System.Drawing.Point(3' 129);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.chkOneTime.Location = new System.Drawing.Point(3' 129);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.chkOneTime.Size = new System.Drawing.Size(117' 17);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.chkOneTime.Size = new System.Drawing.Size(117' 17);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.chkOneTime.TabIndex = 30;
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(374' 242);
Magic Number,JDP,frmThreadEdit,C:\repos\SuperGouge_ChanThreadWatch\frmThreadEdit.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(374' 242);
Missing Default,JDP,ThreadWatcher,C:\repos\SuperGouge_ChanThreadWatch\Classes\ThreadWatcher.cs,Process,The following switch statement is missing a default case: switch (replace.Type) {                              case ReplaceType.QuoteLinkHref:                                  replace.Value = "href=\"" + HttpUtility.HtmlAttributeEncode(General.GetRelativeFilePath(Path.Combine(watcher.ThreadDownloadDirectory' General.CleanFileName(watcher.ThreadName) + ".html")' _threadDownloadDirectory)) + "\"";                                  break;                              case ReplaceType.DeadLink:                                  string[] tagSplit = replace.Tag.Split('/');                                  string innerHTML = String.Format(">>{0}{1}"' siteHelper.GetBoardName() != tagSplit[1] ? ">/" + tagSplit[1] + "/" : String.Empty' tagSplit[2]);                                  replace.Value = "<a class=\"quotelink\" href=\"" + HttpUtility.HtmlAttributeEncode(General.GetRelativeFilePath(Path.Combine(watcher.ThreadDownloadDirectory' General.CleanFileName(watcher.ThreadName) + ".html")' _threadDownloadDirectory)) + "\">" + innerHTML + "</a>";                                  break;                          }
