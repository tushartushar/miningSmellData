Implementation smell,Namespace,Class,File,Method,Description
Long Statement,SuperSimpleViewEngine,SuperSimpleViewEngine,C:\repos\grumpydev_SuperSimpleViewEngine\SuperSimpleViewEngine\SuperSimpleViewEngine.cs,StandardTypePropertyEvaluator,The length of the statement  "            return property == null ? new Tuple<bool' object>(false' null) : new Tuple<bool' object>(true' property.GetValue(model' null)); " is 127.
Long Statement,SuperSimpleViewEngine,SuperSimpleViewEngine,C:\repos\grumpydev_SuperSimpleViewEngine\SuperSimpleViewEngine\SuperSimpleViewEngine.cs,DynamicDictionaryPropertyEvaluator,The length of the statement  "            return !dictionaryModel.TryGetValue(propertyName' out output) ? new Tuple<bool' object>(false' null) : new Tuple<bool' object>(true' output); " is 141.
Long Statement,SuperSimpleViewEngine,SuperSimpleViewEngine,C:\repos\grumpydev_SuperSimpleViewEngine\SuperSimpleViewEngine\SuperSimpleViewEngine.cs,ReplaceCurrentMatch,The length of the statement  "                    return eachMatch.Groups["Encode"].Success ? host.HtmlEncode(substitution.Item2.ToString()) : substitution.Item2.ToString(); " is 123.
Long Statement,SuperSimpleViewEngine,SuperSimpleViewEngine,C:\repos\grumpydev_SuperSimpleViewEngine\SuperSimpleViewEngine\SuperSimpleViewEngine.cs,PerformMasterPageSubstitutions,The length of the statement  "            var sections = sectionMatches.Cast<Match>().ToDictionary(sectionMatch => sectionMatch.Groups["SectionName"].Value' sectionMatch => sectionMatch.Groups["SectionContents"].Value); " is 177.
Magic Number,SuperSimpleViewEngine,SuperSimpleViewEngine,C:\repos\grumpydev_SuperSimpleViewEngine\SuperSimpleViewEngine\SuperSimpleViewEngine.cs,GetPredicateResult,The following statement contains a magic number: if (substitutionObject.Item1 == false && properties.Last().StartsWith("Has"))              {                  var newProperties =                      properties.Take(properties.Count() - 1).Concat(new[] { properties.Last().Substring(3) });                    substitutionObject = GetPropertyValueFromParameterCollection(item' newProperties);                    return GetHasPredicateResultFromSubstitutionObject(substitutionObject.Item2);              }
