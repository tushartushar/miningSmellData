Implementation smell,Namespace,Class,File,Method,Description
Complex Method,RomulatorFrontend.View,ConfigurationGamePad,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationGamePad.cs,DPadPictureBox_Paint,Cyclomatic complexity of the method is 10
Complex Method,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,ControllerPollingTImer_Tick,Cyclomatic complexity of the method is 17
Complex Method,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,SpawnEmulator,Cyclomatic complexity of the method is 8
Long Parameter List,RomulatorFrontend,GetNetShares,C:\repos\longjoel_Romflow\RomulatorFrontend\GetNetShares.cs,NetShareEnum,The method has 7 parameters.
Long Parameter List,RomulatorFrontend.Controller,ScriptingHostController,C:\repos\longjoel_Romflow\RomulatorFrontend\Controller\ScriptingHostController.cs,GetRoms,The method has 5 parameters.
Long Parameter List,RomulatorFrontend.Controller,ScriptingHostController,C:\repos\longjoel_Romflow\RomulatorFrontend\Controller\ScriptingHostController.cs,GetArtworkURI,The method has 5 parameters.
Long Parameter List,RomulatorFrontend.View,ConfigurationEmulatorCollection,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationEmulatorCollection.cs,DownloadEmulatorButton_Click,The method has 8 parameters.
Long Parameter List,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,MoveWindow,The method has 6 parameters.
Long Parameter List,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,MainWindow,The method has 5 parameters.
Long Parameter List,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,SpawnEmulator,The method has 8 parameters.
Long Statement,RomulatorFrontend,GetNetShares,C:\repos\longjoel_Romflow\RomulatorFrontend\GetNetShares.cs,EnumNetShares,The length of the statement  "	int ret = NetShareEnum (server' 1' ref bufPtr' MAX_PREFERRED_LENGTH' ref entriesread' ref totalentries' ref resume_handle); " is 123.
Long Statement,RomulatorFrontend.Controller,PlayStats,C:\repos\longjoel_Romflow\RomulatorFrontend\Controller\PlayStats.cs,InsertPlayTime,The length of the statement  "	var insertText = "insert into PlayTime (emulator' rom' beginTimestamp' endTimeStamp) values (@emulator' @rom' @begin' @end)"; " is 125.
Long Statement,RomulatorFrontend.Controller,PlayStats,C:\repos\longjoel_Romflow\RomulatorFrontend\Controller\PlayStats.cs,GetPlayTime,The length of the statement  "	var playTimeCommand = "select sum(endTimestamp - beginTimestamp) from PlayTime where emulator = @emulator and rom = @rom"; " is 122.
Long Statement,RomulatorFrontend.Controller,ScriptingHostController,C:\repos\longjoel_Romflow\RomulatorFrontend\Controller\ScriptingHostController.cs,GetRoms,The length of the statement  "						q.AddRange (System.IO.Directory.GetFiles (d.RootDirectory.FullName' rxf.Trim ()' SearchOption.AllDirectories).Where (f => f.Trim ().Length > 0).ToList ()); " is 155.
Long Statement,RomulatorFrontend.View,ConfigurationEmulatorCollection,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationEmulatorCollection.cs,CleanFileName,The length of the statement  "	return System.IO.Path.GetInvalidFileNameChars ().Aggregate (fileName' (current' c) => current.Replace (c.ToString ()' string.Empty)); " is 133.
Long Statement,RomulatorFrontend.View,ConfigurationEmulatorCollection,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationEmulatorCollection.cs,DownloadEmulatorButton_Click,The length of the statement  "				MessageBox.Show (string.Join (Environment.NewLine' "Unable to download emulator. Please make sure you are connected to the internet"' "Exception details:"' exc.Message)); " is 170.
Long Statement,RomulatorFrontend.View,ConfigurationEnvironmentForm,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationEnvironmentForm.cs,SaveSettings,The length of the statement  "			rx.Enabled = (r.Cells ["CommandEnabledCheckBox"] as DataGridViewCheckBoxCell).Value != null && ((bool)(r.Cells ["CommandEnabledCheckBox"] as DataGridViewCheckBoxCell).Value == true); " is 182.
Long Statement,RomulatorFrontend.View,ConfigurationEnvironmentForm,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationEnvironmentForm.cs,LoadPageLookAndFeel,The length of the statement  "	var themes = System.IO.Directory.EnumerateDirectories (Vars.ThemePath).ToList ().Union (System.IO.Directory.EnumerateDirectories (Vars.DefaultThemePath)).ToList (); " is 164.
Long Statement,RomulatorFrontend.View,ConfigurationEnvironmentForm,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationEnvironmentForm.cs,InstallNetworkSharePathButton_Click,The length of the statement  "		this._environment.SharePath = @"\\" + Environment.MachineName + @"\" + shares.Where (s => s.shi1_netname.Contains ("ROMFLOW_ROMS")).First ().shi1_netname; " is 154.
Long Statement,RomulatorFrontend.View,ConfigurationGamePad,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationGamePad.cs,ButtonsPictureBox_Paint,The length of the statement  "			e.Graphics.FillRectangle (Brushes.Green' new Rectangle ((int)(Math.Ceiling (x * crx))' 0' (int)(crx)' ButtonsPictureBox.ClientRectangle.Height)); " is 145.
Long Statement,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,ControllerPollingTImer_Tick,The length of the statement  "			if ((_configurationRoot.Gamepads.GamePadInformation [i].QuitCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuitCombo == inputCombo) { " is 193.
Long Statement,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,ControllerPollingTImer_Tick,The length of the statement  "			if ((_configurationRoot.Gamepads.GamePadInformation [i].QuickSaveCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuickSaveCombo == inputCombo) { " is 203.
Long Statement,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,ControllerPollingTImer_Tick,The length of the statement  "			if ((_configurationRoot.Gamepads.GamePadInformation [i].QuickLoadCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuickLoadCombo == inputCombo) { " is 203.
Long Statement,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,SpawnEmulator,The length of the statement  "					q.AddRange (System.IO.Directory.GetFiles (d.RootDirectory.FullName' rxf.Trim ()' SearchOption.AllDirectories).Where (f => f.Trim ().Length > 0).ToList ()); " is 155.
Long Statement,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,SpawnEmulator,The length of the statement  "		if (System.IO.Path.GetFileNameWithoutExtension (qx).ToLower ().Replace ("'"' "").Replace ("\""' "") == rom.ToLower ().Replace ("'"' "").Replace ("\""' "")) { " is 157.
Long Statement,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,SpawnEmulator,The length of the statement  "					Arguments = runningEmulator.CommandLineParameters.Replace ("%ROM%"' "\"" + qx + "\"").Replace ("%ROMPATH%"' "\"" + System.IO.Path.GetDirectoryName (qx) + "\"")' " is 160.
Long Statement,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,EnableLightbox,The length of the statement  "	MoveWindow (_clientEmulatorProcess.MainWindowHandle' 40' 40' System.Windows.Forms.SystemInformation.PrimaryMonitorSize.Width - 80' System.Windows.Forms.SystemInformation.PrimaryMonitorSize.Height - 80' true); " is 208.
Long Statement,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,ReloadTheme,The length of the statement  "	if (System.IO.File.Exists (System.IO.Path.Combine (Vars.ThemePath' _configurationRoot.Environment.Theme' "Index.html"))) { " is 122.
Long Statement,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,ReloadTheme,The length of the statement  "	else if (System.IO.File.Exists (System.IO.Path.Combine (System.IO.Path.GetFullPath (Path.Combine (AppDomain.CurrentDomain.BaseDirectory' "DefaultThemes"))' _configurationRoot.Environment.Theme' "Index.html"))) { " is 211.
Long Statement,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,ReloadTheme,The length of the statement  "		themePath = System.IO.Path.Combine (System.IO.Path.GetFullPath (Path.Combine (AppDomain.CurrentDomain.BaseDirectory' "DefaultThemes"))' _configurationRoot.Environment.Theme' "Index.html"); " is 188.
Complex Conditional,RomulatorFrontend.Controller,ScriptingHostController,C:\repos\longjoel_Romflow\RomulatorFrontend\Controller\ScriptingHostController.cs,LevenshteinDistance,The conditional expression  "(i > 1) && (j > 1) && (str1 [i - 1] == str2 [j - 2]) && (str1 [i - 2] == str2 [j - 1])"  is complex.
Empty Catch Block,RomulatorFrontend.Controller,PlayStats,C:\repos\longjoel_Romflow\RomulatorFrontend\Controller\PlayStats.cs,GetRating,The method has an empty catch block.
Empty Catch Block,RomulatorFrontend.Controller,PlayStats,C:\repos\longjoel_Romflow\RomulatorFrontend\Controller\PlayStats.cs,GetPlayTime,The method has an empty catch block.
Empty Catch Block,RomulatorFrontend.Controller,ScriptingHostController,C:\repos\longjoel_Romflow\RomulatorFrontend\Controller\ScriptingHostController.cs,GetRoms,The method has an empty catch block.
Empty Catch Block,RomulatorFrontend.View,ConfigurationEmulator,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationEmulator.cs,LaunchEmulatorButton_Click,The method has an empty catch block.
Empty Catch Block,RomulatorFrontend.View,ConfigurationEmulator,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationEmulator.cs,ExploreRomsButton_Click,The method has an empty catch block.
Empty Catch Block,RomulatorFrontend.View,ConfigurationEmulator,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationEmulator.cs,ExplorePathToArtworkButton_Click,The method has an empty catch block.
Empty Catch Block,RomulatorFrontend.View,ConfigurationEnvironmentForm,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationEnvironmentForm.cs,RunAsAdministratorButton_Click,The method has an empty catch block.
Empty Catch Block,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,MainWindow,The method has an empty catch block.
Empty Catch Block,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,SpawnEmulator,The method has an empty catch block.
Magic Number,RomulatorFrontend,GetNetShares,C:\repos\longjoel_Romflow\RomulatorFrontend\GetNetShares.cs,EnumNetShares,The following statement contains a magic number: if (ret == NERR_Success) {  	IntPtr currentPtr = bufPtr;  	for (int i = 0; i < entriesread; i++) {  		SHARE_INFO_1 shi1 = (SHARE_INFO_1)Marshal.PtrToStructure (currentPtr' typeof(SHARE_INFO_1));  		ShareInfos.Add (shi1);  		currentPtr = new IntPtr (currentPtr.ToInt32 () + nStructSize);  	}  	NetApiBufferFree (bufPtr);  	return ShareInfos.ToArray ();  }  else {  	ShareInfos.Add (new SHARE_INFO_1 ("ERROR=" + ret.ToString ()' 10' string.Empty));  	return ShareInfos.ToArray ();  }  
Magic Number,RomulatorFrontend,GetNetShares,C:\repos\longjoel_Romflow\RomulatorFrontend\GetNetShares.cs,EnumNetShares,The following statement contains a magic number: ShareInfos.Add (new SHARE_INFO_1 ("ERROR=" + ret.ToString ()' 10' string.Empty));  
Magic Number,RomulatorFrontend.Controller,ScriptingHostController,C:\repos\longjoel_Romflow\RomulatorFrontend\Controller\ScriptingHostController.cs,LevenshteinDistance,The following statement contains a magic number: for (i = 1; i <= str1.Length; i++) {  	for (j = 1; j <= str2.Length; j++) {  		if (str1 [i - 1] == str2 [j - 1])  			cost = 0;  		else  			cost = 1;  		d [i' j] = Math.Min (d [i - 1' j] + 1' // Deletion  		Math.Min (d [i' j - 1] + 1' // Insertion  		d [i - 1' j - 1] + cost));  		// Substitution  		if ((i > 1) && (j > 1) && (str1 [i - 1] == str2 [j - 2]) && (str1 [i - 2] == str2 [j - 1])) {  			d [i' j] = Math.Min (d [i' j]' d [i - 2' j - 2] + cost);  		}  	}  }  
Magic Number,RomulatorFrontend.Controller,ScriptingHostController,C:\repos\longjoel_Romflow\RomulatorFrontend\Controller\ScriptingHostController.cs,LevenshteinDistance,The following statement contains a magic number: for (i = 1; i <= str1.Length; i++) {  	for (j = 1; j <= str2.Length; j++) {  		if (str1 [i - 1] == str2 [j - 1])  			cost = 0;  		else  			cost = 1;  		d [i' j] = Math.Min (d [i - 1' j] + 1' // Deletion  		Math.Min (d [i' j - 1] + 1' // Insertion  		d [i - 1' j - 1] + cost));  		// Substitution  		if ((i > 1) && (j > 1) && (str1 [i - 1] == str2 [j - 2]) && (str1 [i - 2] == str2 [j - 1])) {  			d [i' j] = Math.Min (d [i' j]' d [i - 2' j - 2] + cost);  		}  	}  }  
Magic Number,RomulatorFrontend.Controller,ScriptingHostController,C:\repos\longjoel_Romflow\RomulatorFrontend\Controller\ScriptingHostController.cs,LevenshteinDistance,The following statement contains a magic number: for (i = 1; i <= str1.Length; i++) {  	for (j = 1; j <= str2.Length; j++) {  		if (str1 [i - 1] == str2 [j - 1])  			cost = 0;  		else  			cost = 1;  		d [i' j] = Math.Min (d [i - 1' j] + 1' // Deletion  		Math.Min (d [i' j - 1] + 1' // Insertion  		d [i - 1' j - 1] + cost));  		// Substitution  		if ((i > 1) && (j > 1) && (str1 [i - 1] == str2 [j - 2]) && (str1 [i - 2] == str2 [j - 1])) {  			d [i' j] = Math.Min (d [i' j]' d [i - 2' j - 2] + cost);  		}  	}  }  
Magic Number,RomulatorFrontend.Controller,ScriptingHostController,C:\repos\longjoel_Romflow\RomulatorFrontend\Controller\ScriptingHostController.cs,LevenshteinDistance,The following statement contains a magic number: for (i = 1; i <= str1.Length; i++) {  	for (j = 1; j <= str2.Length; j++) {  		if (str1 [i - 1] == str2 [j - 1])  			cost = 0;  		else  			cost = 1;  		d [i' j] = Math.Min (d [i - 1' j] + 1' // Deletion  		Math.Min (d [i' j - 1] + 1' // Insertion  		d [i - 1' j - 1] + cost));  		// Substitution  		if ((i > 1) && (j > 1) && (str1 [i - 1] == str2 [j - 2]) && (str1 [i - 2] == str2 [j - 1])) {  			d [i' j] = Math.Min (d [i' j]' d [i - 2' j - 2] + cost);  		}  	}  }  
Magic Number,RomulatorFrontend.Controller,ScriptingHostController,C:\repos\longjoel_Romflow\RomulatorFrontend\Controller\ScriptingHostController.cs,LevenshteinDistance,The following statement contains a magic number: for (j = 1; j <= str2.Length; j++) {  	if (str1 [i - 1] == str2 [j - 1])  		cost = 0;  	else  		cost = 1;  	d [i' j] = Math.Min (d [i - 1' j] + 1' // Deletion  	Math.Min (d [i' j - 1] + 1' // Insertion  	d [i - 1' j - 1] + cost));  	// Substitution  	if ((i > 1) && (j > 1) && (str1 [i - 1] == str2 [j - 2]) && (str1 [i - 2] == str2 [j - 1])) {  		d [i' j] = Math.Min (d [i' j]' d [i - 2' j - 2] + cost);  	}  }  
Magic Number,RomulatorFrontend.Controller,ScriptingHostController,C:\repos\longjoel_Romflow\RomulatorFrontend\Controller\ScriptingHostController.cs,LevenshteinDistance,The following statement contains a magic number: for (j = 1; j <= str2.Length; j++) {  	if (str1 [i - 1] == str2 [j - 1])  		cost = 0;  	else  		cost = 1;  	d [i' j] = Math.Min (d [i - 1' j] + 1' // Deletion  	Math.Min (d [i' j - 1] + 1' // Insertion  	d [i - 1' j - 1] + cost));  	// Substitution  	if ((i > 1) && (j > 1) && (str1 [i - 1] == str2 [j - 2]) && (str1 [i - 2] == str2 [j - 1])) {  		d [i' j] = Math.Min (d [i' j]' d [i - 2' j - 2] + cost);  	}  }  
Magic Number,RomulatorFrontend.Controller,ScriptingHostController,C:\repos\longjoel_Romflow\RomulatorFrontend\Controller\ScriptingHostController.cs,LevenshteinDistance,The following statement contains a magic number: for (j = 1; j <= str2.Length; j++) {  	if (str1 [i - 1] == str2 [j - 1])  		cost = 0;  	else  		cost = 1;  	d [i' j] = Math.Min (d [i - 1' j] + 1' // Deletion  	Math.Min (d [i' j - 1] + 1' // Insertion  	d [i - 1' j - 1] + cost));  	// Substitution  	if ((i > 1) && (j > 1) && (str1 [i - 1] == str2 [j - 2]) && (str1 [i - 2] == str2 [j - 1])) {  		d [i' j] = Math.Min (d [i' j]' d [i - 2' j - 2] + cost);  	}  }  
Magic Number,RomulatorFrontend.Controller,ScriptingHostController,C:\repos\longjoel_Romflow\RomulatorFrontend\Controller\ScriptingHostController.cs,LevenshteinDistance,The following statement contains a magic number: for (j = 1; j <= str2.Length; j++) {  	if (str1 [i - 1] == str2 [j - 1])  		cost = 0;  	else  		cost = 1;  	d [i' j] = Math.Min (d [i - 1' j] + 1' // Deletion  	Math.Min (d [i' j - 1] + 1' // Insertion  	d [i - 1' j - 1] + cost));  	// Substitution  	if ((i > 1) && (j > 1) && (str1 [i - 1] == str2 [j - 2]) && (str1 [i - 2] == str2 [j - 1])) {  		d [i' j] = Math.Min (d [i' j]' d [i - 2' j - 2] + cost);  	}  }  
Magic Number,RomulatorFrontend.Controller,ScriptingHostController,C:\repos\longjoel_Romflow\RomulatorFrontend\Controller\ScriptingHostController.cs,LevenshteinDistance,The following statement contains a magic number: if ((i > 1) && (j > 1) && (str1 [i - 1] == str2 [j - 2]) && (str1 [i - 2] == str2 [j - 1])) {  	d [i' j] = Math.Min (d [i' j]' d [i - 2' j - 2] + cost);  }  
Magic Number,RomulatorFrontend.Controller,ScriptingHostController,C:\repos\longjoel_Romflow\RomulatorFrontend\Controller\ScriptingHostController.cs,LevenshteinDistance,The following statement contains a magic number: if ((i > 1) && (j > 1) && (str1 [i - 1] == str2 [j - 2]) && (str1 [i - 2] == str2 [j - 1])) {  	d [i' j] = Math.Min (d [i' j]' d [i - 2' j - 2] + cost);  }  
Magic Number,RomulatorFrontend.Controller,ScriptingHostController,C:\repos\longjoel_Romflow\RomulatorFrontend\Controller\ScriptingHostController.cs,LevenshteinDistance,The following statement contains a magic number: if ((i > 1) && (j > 1) && (str1 [i - 1] == str2 [j - 2]) && (str1 [i - 2] == str2 [j - 1])) {  	d [i' j] = Math.Min (d [i' j]' d [i - 2' j - 2] + cost);  }  
Magic Number,RomulatorFrontend.Controller,ScriptingHostController,C:\repos\longjoel_Romflow\RomulatorFrontend\Controller\ScriptingHostController.cs,LevenshteinDistance,The following statement contains a magic number: if ((i > 1) && (j > 1) && (str1 [i - 1] == str2 [j - 2]) && (str1 [i - 2] == str2 [j - 1])) {  	d [i' j] = Math.Min (d [i' j]' d [i - 2' j - 2] + cost);  }  
Magic Number,RomulatorFrontend.Controller,ScriptingHostController,C:\repos\longjoel_Romflow\RomulatorFrontend\Controller\ScriptingHostController.cs,LevenshteinDistance,The following statement contains a magic number: d [i' j] = Math.Min (d [i' j]' d [i - 2' j - 2] + cost);  
Magic Number,RomulatorFrontend.Controller,ScriptingHostController,C:\repos\longjoel_Romflow\RomulatorFrontend\Controller\ScriptingHostController.cs,LevenshteinDistance,The following statement contains a magic number: d [i' j] = Math.Min (d [i' j]' d [i - 2' j - 2] + cost);  
Magic Number,RomulatorFrontend.Model,ConfigurationEnvironment,C:\repos\longjoel_Romflow\RomulatorFrontend\Model\ConfigurationEnvironment.cs,ConfigurationEnvironment,The following statement contains a magic number: GamepadPollRate = 125;  
Magic Number,RomulatorFrontend.Model,GamepadCollection,C:\repos\longjoel_Romflow\RomulatorFrontend\Model\GamepadCollection.cs,GetGamepadCount,The following statement contains a magic number: info.dwFlags = 128;  
Magic Number,RomulatorFrontend.View,ConfigurationEmulatorCollection,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationEmulatorCollection.cs,DownloadEmulatorButton_Click,The following statement contains a magic number: if (this.EmulatorListingComboBox.SelectedIndex != -1) {  	var emuPath = System.IO.Path.Combine (Vars.EmulatorRootPath' EmulatorListingComboBox.Text);  	var romPath = System.IO.Path.Combine (Vars.RomRootPath' EmulatorListingComboBox.Text);  	var artPath = System.IO.Path.Combine (Vars.ArtworkRootPath' EmulatorListingComboBox.Text);  	var downloadURI = _emuConfigs [EmulatorListingComboBox.SelectedIndex] [1];  	var drx = System.IO.Path.GetFileName (downloadURI);  	var tempEmuPath = CleanFileName (System.IO.Path.Combine (Vars.TempFolderPath' drx));  	this.EmulatorCollectionTabControl.Enabled = false;  	this.AddEmulatorButton.Enabled = false;  	this.RemoveEmulatorButton.Enabled = false;  	this.DownloadEmulatorButton.Enabled = false;  	this.EmulatorListingComboBox.Enabled = false;  	DownloadProgressBar.Value = 0;  	var romWorker = new BackgroundWorker ();  	romWorker.WorkerReportsProgress = true;  	romWorker.ProgressChanged += (o' ex) =>  {  		DownloadProgressBar.Value = ex.ProgressPercentage;  	};  	romWorker.RunWorkerCompleted += (o' ex) =>  {  		if (DownloadProgressBar.Value == 100) {  			// create the info  			var emu = new Model.ConfigurationEmulator ();  			var ecf = _emuConfigs [EmulatorListingComboBox.SelectedIndex];  			emu.EmulatorName = ecf [0];  			emu.CommandLineParameters = ecf [2];  			emu.PathToEmulator = System.IO.Path.Combine (emuPath' ecf [4].Trim ());  			emu.PathToRoms = romPath;  			emu.PathToArtwork = artPath;  			emu.Lightbox = true;  			emu.RomExtensionFilter = ecf [3];  			_root.Emulators.EmulatorConfigurations.Add (emu);  			var tp = new TabPage (ecf [0]);  			tp.Controls.Add (new ConfigurationEmulator (emu) {  				Dock = DockStyle.Fill  			});  			EmulatorCollectionTabControl.TabPages.Add (tp);  		}  		DownloadProgressBar.Value = 0;  		this.EmulatorCollectionTabControl.Enabled = true;  		this.AddEmulatorButton.Enabled = true;  		this.RemoveEmulatorButton.Enabled = true;  		this.DownloadEmulatorButton.Enabled = true;  		this.EmulatorListingComboBox.Enabled = true;  	};  	romWorker.DoWork += (o' ex) =>  {  		if (!System.IO.Directory.Exists (emuPath))  			System.IO.Directory.CreateDirectory (emuPath);  		if (!System.IO.Directory.Exists (romPath))  			System.IO.Directory.CreateDirectory (romPath);  		if (!System.IO.Directory.Exists (artPath))  			System.IO.Directory.CreateDirectory (artPath);  		romWorker.ReportProgress (10);  		var w = new System.Net.WebClient ();  		try {  			w.DownloadFile (downloadURI' tempEmuPath);  			romWorker.ReportProgress (20);  			Decompress (tempEmuPath' emuPath);  			romWorker.ReportProgress (100);  		}  		catch (Exception exc) {  			MessageBox.Show (string.Join (Environment.NewLine' "Unable to download emulator. Please make sure you are connected to the internet"' "Exception details:"' exc.Message));  		}  	};  	romWorker.RunWorkerAsync ();  }  
Magic Number,RomulatorFrontend.View,ConfigurationEmulatorCollection,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationEmulatorCollection.cs,DownloadEmulatorButton_Click,The following statement contains a magic number: if (this.EmulatorListingComboBox.SelectedIndex != -1) {  	var emuPath = System.IO.Path.Combine (Vars.EmulatorRootPath' EmulatorListingComboBox.Text);  	var romPath = System.IO.Path.Combine (Vars.RomRootPath' EmulatorListingComboBox.Text);  	var artPath = System.IO.Path.Combine (Vars.ArtworkRootPath' EmulatorListingComboBox.Text);  	var downloadURI = _emuConfigs [EmulatorListingComboBox.SelectedIndex] [1];  	var drx = System.IO.Path.GetFileName (downloadURI);  	var tempEmuPath = CleanFileName (System.IO.Path.Combine (Vars.TempFolderPath' drx));  	this.EmulatorCollectionTabControl.Enabled = false;  	this.AddEmulatorButton.Enabled = false;  	this.RemoveEmulatorButton.Enabled = false;  	this.DownloadEmulatorButton.Enabled = false;  	this.EmulatorListingComboBox.Enabled = false;  	DownloadProgressBar.Value = 0;  	var romWorker = new BackgroundWorker ();  	romWorker.WorkerReportsProgress = true;  	romWorker.ProgressChanged += (o' ex) =>  {  		DownloadProgressBar.Value = ex.ProgressPercentage;  	};  	romWorker.RunWorkerCompleted += (o' ex) =>  {  		if (DownloadProgressBar.Value == 100) {  			// create the info  			var emu = new Model.ConfigurationEmulator ();  			var ecf = _emuConfigs [EmulatorListingComboBox.SelectedIndex];  			emu.EmulatorName = ecf [0];  			emu.CommandLineParameters = ecf [2];  			emu.PathToEmulator = System.IO.Path.Combine (emuPath' ecf [4].Trim ());  			emu.PathToRoms = romPath;  			emu.PathToArtwork = artPath;  			emu.Lightbox = true;  			emu.RomExtensionFilter = ecf [3];  			_root.Emulators.EmulatorConfigurations.Add (emu);  			var tp = new TabPage (ecf [0]);  			tp.Controls.Add (new ConfigurationEmulator (emu) {  				Dock = DockStyle.Fill  			});  			EmulatorCollectionTabControl.TabPages.Add (tp);  		}  		DownloadProgressBar.Value = 0;  		this.EmulatorCollectionTabControl.Enabled = true;  		this.AddEmulatorButton.Enabled = true;  		this.RemoveEmulatorButton.Enabled = true;  		this.DownloadEmulatorButton.Enabled = true;  		this.EmulatorListingComboBox.Enabled = true;  	};  	romWorker.DoWork += (o' ex) =>  {  		if (!System.IO.Directory.Exists (emuPath))  			System.IO.Directory.CreateDirectory (emuPath);  		if (!System.IO.Directory.Exists (romPath))  			System.IO.Directory.CreateDirectory (romPath);  		if (!System.IO.Directory.Exists (artPath))  			System.IO.Directory.CreateDirectory (artPath);  		romWorker.ReportProgress (10);  		var w = new System.Net.WebClient ();  		try {  			w.DownloadFile (downloadURI' tempEmuPath);  			romWorker.ReportProgress (20);  			Decompress (tempEmuPath' emuPath);  			romWorker.ReportProgress (100);  		}  		catch (Exception exc) {  			MessageBox.Show (string.Join (Environment.NewLine' "Unable to download emulator. Please make sure you are connected to the internet"' "Exception details:"' exc.Message));  		}  	};  	romWorker.RunWorkerAsync ();  }  
Magic Number,RomulatorFrontend.View,ConfigurationEmulatorCollection,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationEmulatorCollection.cs,DownloadEmulatorButton_Click,The following statement contains a magic number: if (this.EmulatorListingComboBox.SelectedIndex != -1) {  	var emuPath = System.IO.Path.Combine (Vars.EmulatorRootPath' EmulatorListingComboBox.Text);  	var romPath = System.IO.Path.Combine (Vars.RomRootPath' EmulatorListingComboBox.Text);  	var artPath = System.IO.Path.Combine (Vars.ArtworkRootPath' EmulatorListingComboBox.Text);  	var downloadURI = _emuConfigs [EmulatorListingComboBox.SelectedIndex] [1];  	var drx = System.IO.Path.GetFileName (downloadURI);  	var tempEmuPath = CleanFileName (System.IO.Path.Combine (Vars.TempFolderPath' drx));  	this.EmulatorCollectionTabControl.Enabled = false;  	this.AddEmulatorButton.Enabled = false;  	this.RemoveEmulatorButton.Enabled = false;  	this.DownloadEmulatorButton.Enabled = false;  	this.EmulatorListingComboBox.Enabled = false;  	DownloadProgressBar.Value = 0;  	var romWorker = new BackgroundWorker ();  	romWorker.WorkerReportsProgress = true;  	romWorker.ProgressChanged += (o' ex) =>  {  		DownloadProgressBar.Value = ex.ProgressPercentage;  	};  	romWorker.RunWorkerCompleted += (o' ex) =>  {  		if (DownloadProgressBar.Value == 100) {  			// create the info  			var emu = new Model.ConfigurationEmulator ();  			var ecf = _emuConfigs [EmulatorListingComboBox.SelectedIndex];  			emu.EmulatorName = ecf [0];  			emu.CommandLineParameters = ecf [2];  			emu.PathToEmulator = System.IO.Path.Combine (emuPath' ecf [4].Trim ());  			emu.PathToRoms = romPath;  			emu.PathToArtwork = artPath;  			emu.Lightbox = true;  			emu.RomExtensionFilter = ecf [3];  			_root.Emulators.EmulatorConfigurations.Add (emu);  			var tp = new TabPage (ecf [0]);  			tp.Controls.Add (new ConfigurationEmulator (emu) {  				Dock = DockStyle.Fill  			});  			EmulatorCollectionTabControl.TabPages.Add (tp);  		}  		DownloadProgressBar.Value = 0;  		this.EmulatorCollectionTabControl.Enabled = true;  		this.AddEmulatorButton.Enabled = true;  		this.RemoveEmulatorButton.Enabled = true;  		this.DownloadEmulatorButton.Enabled = true;  		this.EmulatorListingComboBox.Enabled = true;  	};  	romWorker.DoWork += (o' ex) =>  {  		if (!System.IO.Directory.Exists (emuPath))  			System.IO.Directory.CreateDirectory (emuPath);  		if (!System.IO.Directory.Exists (romPath))  			System.IO.Directory.CreateDirectory (romPath);  		if (!System.IO.Directory.Exists (artPath))  			System.IO.Directory.CreateDirectory (artPath);  		romWorker.ReportProgress (10);  		var w = new System.Net.WebClient ();  		try {  			w.DownloadFile (downloadURI' tempEmuPath);  			romWorker.ReportProgress (20);  			Decompress (tempEmuPath' emuPath);  			romWorker.ReportProgress (100);  		}  		catch (Exception exc) {  			MessageBox.Show (string.Join (Environment.NewLine' "Unable to download emulator. Please make sure you are connected to the internet"' "Exception details:"' exc.Message));  		}  	};  	romWorker.RunWorkerAsync ();  }  
Magic Number,RomulatorFrontend.View,ConfigurationEmulatorCollection,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationEmulatorCollection.cs,DownloadEmulatorButton_Click,The following statement contains a magic number: if (this.EmulatorListingComboBox.SelectedIndex != -1) {  	var emuPath = System.IO.Path.Combine (Vars.EmulatorRootPath' EmulatorListingComboBox.Text);  	var romPath = System.IO.Path.Combine (Vars.RomRootPath' EmulatorListingComboBox.Text);  	var artPath = System.IO.Path.Combine (Vars.ArtworkRootPath' EmulatorListingComboBox.Text);  	var downloadURI = _emuConfigs [EmulatorListingComboBox.SelectedIndex] [1];  	var drx = System.IO.Path.GetFileName (downloadURI);  	var tempEmuPath = CleanFileName (System.IO.Path.Combine (Vars.TempFolderPath' drx));  	this.EmulatorCollectionTabControl.Enabled = false;  	this.AddEmulatorButton.Enabled = false;  	this.RemoveEmulatorButton.Enabled = false;  	this.DownloadEmulatorButton.Enabled = false;  	this.EmulatorListingComboBox.Enabled = false;  	DownloadProgressBar.Value = 0;  	var romWorker = new BackgroundWorker ();  	romWorker.WorkerReportsProgress = true;  	romWorker.ProgressChanged += (o' ex) =>  {  		DownloadProgressBar.Value = ex.ProgressPercentage;  	};  	romWorker.RunWorkerCompleted += (o' ex) =>  {  		if (DownloadProgressBar.Value == 100) {  			// create the info  			var emu = new Model.ConfigurationEmulator ();  			var ecf = _emuConfigs [EmulatorListingComboBox.SelectedIndex];  			emu.EmulatorName = ecf [0];  			emu.CommandLineParameters = ecf [2];  			emu.PathToEmulator = System.IO.Path.Combine (emuPath' ecf [4].Trim ());  			emu.PathToRoms = romPath;  			emu.PathToArtwork = artPath;  			emu.Lightbox = true;  			emu.RomExtensionFilter = ecf [3];  			_root.Emulators.EmulatorConfigurations.Add (emu);  			var tp = new TabPage (ecf [0]);  			tp.Controls.Add (new ConfigurationEmulator (emu) {  				Dock = DockStyle.Fill  			});  			EmulatorCollectionTabControl.TabPages.Add (tp);  		}  		DownloadProgressBar.Value = 0;  		this.EmulatorCollectionTabControl.Enabled = true;  		this.AddEmulatorButton.Enabled = true;  		this.RemoveEmulatorButton.Enabled = true;  		this.DownloadEmulatorButton.Enabled = true;  		this.EmulatorListingComboBox.Enabled = true;  	};  	romWorker.DoWork += (o' ex) =>  {  		if (!System.IO.Directory.Exists (emuPath))  			System.IO.Directory.CreateDirectory (emuPath);  		if (!System.IO.Directory.Exists (romPath))  			System.IO.Directory.CreateDirectory (romPath);  		if (!System.IO.Directory.Exists (artPath))  			System.IO.Directory.CreateDirectory (artPath);  		romWorker.ReportProgress (10);  		var w = new System.Net.WebClient ();  		try {  			w.DownloadFile (downloadURI' tempEmuPath);  			romWorker.ReportProgress (20);  			Decompress (tempEmuPath' emuPath);  			romWorker.ReportProgress (100);  		}  		catch (Exception exc) {  			MessageBox.Show (string.Join (Environment.NewLine' "Unable to download emulator. Please make sure you are connected to the internet"' "Exception details:"' exc.Message));  		}  	};  	romWorker.RunWorkerAsync ();  }  
Magic Number,RomulatorFrontend.View,ConfigurationEmulatorCollection,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationEmulatorCollection.cs,DownloadEmulatorButton_Click,The following statement contains a magic number: if (this.EmulatorListingComboBox.SelectedIndex != -1) {  	var emuPath = System.IO.Path.Combine (Vars.EmulatorRootPath' EmulatorListingComboBox.Text);  	var romPath = System.IO.Path.Combine (Vars.RomRootPath' EmulatorListingComboBox.Text);  	var artPath = System.IO.Path.Combine (Vars.ArtworkRootPath' EmulatorListingComboBox.Text);  	var downloadURI = _emuConfigs [EmulatorListingComboBox.SelectedIndex] [1];  	var drx = System.IO.Path.GetFileName (downloadURI);  	var tempEmuPath = CleanFileName (System.IO.Path.Combine (Vars.TempFolderPath' drx));  	this.EmulatorCollectionTabControl.Enabled = false;  	this.AddEmulatorButton.Enabled = false;  	this.RemoveEmulatorButton.Enabled = false;  	this.DownloadEmulatorButton.Enabled = false;  	this.EmulatorListingComboBox.Enabled = false;  	DownloadProgressBar.Value = 0;  	var romWorker = new BackgroundWorker ();  	romWorker.WorkerReportsProgress = true;  	romWorker.ProgressChanged += (o' ex) =>  {  		DownloadProgressBar.Value = ex.ProgressPercentage;  	};  	romWorker.RunWorkerCompleted += (o' ex) =>  {  		if (DownloadProgressBar.Value == 100) {  			// create the info  			var emu = new Model.ConfigurationEmulator ();  			var ecf = _emuConfigs [EmulatorListingComboBox.SelectedIndex];  			emu.EmulatorName = ecf [0];  			emu.CommandLineParameters = ecf [2];  			emu.PathToEmulator = System.IO.Path.Combine (emuPath' ecf [4].Trim ());  			emu.PathToRoms = romPath;  			emu.PathToArtwork = artPath;  			emu.Lightbox = true;  			emu.RomExtensionFilter = ecf [3];  			_root.Emulators.EmulatorConfigurations.Add (emu);  			var tp = new TabPage (ecf [0]);  			tp.Controls.Add (new ConfigurationEmulator (emu) {  				Dock = DockStyle.Fill  			});  			EmulatorCollectionTabControl.TabPages.Add (tp);  		}  		DownloadProgressBar.Value = 0;  		this.EmulatorCollectionTabControl.Enabled = true;  		this.AddEmulatorButton.Enabled = true;  		this.RemoveEmulatorButton.Enabled = true;  		this.DownloadEmulatorButton.Enabled = true;  		this.EmulatorListingComboBox.Enabled = true;  	};  	romWorker.DoWork += (o' ex) =>  {  		if (!System.IO.Directory.Exists (emuPath))  			System.IO.Directory.CreateDirectory (emuPath);  		if (!System.IO.Directory.Exists (romPath))  			System.IO.Directory.CreateDirectory (romPath);  		if (!System.IO.Directory.Exists (artPath))  			System.IO.Directory.CreateDirectory (artPath);  		romWorker.ReportProgress (10);  		var w = new System.Net.WebClient ();  		try {  			w.DownloadFile (downloadURI' tempEmuPath);  			romWorker.ReportProgress (20);  			Decompress (tempEmuPath' emuPath);  			romWorker.ReportProgress (100);  		}  		catch (Exception exc) {  			MessageBox.Show (string.Join (Environment.NewLine' "Unable to download emulator. Please make sure you are connected to the internet"' "Exception details:"' exc.Message));  		}  	};  	romWorker.RunWorkerAsync ();  }  
Magic Number,RomulatorFrontend.View,ConfigurationEmulatorCollection,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationEmulatorCollection.cs,DownloadEmulatorButton_Click,The following statement contains a magic number: if (this.EmulatorListingComboBox.SelectedIndex != -1) {  	var emuPath = System.IO.Path.Combine (Vars.EmulatorRootPath' EmulatorListingComboBox.Text);  	var romPath = System.IO.Path.Combine (Vars.RomRootPath' EmulatorListingComboBox.Text);  	var artPath = System.IO.Path.Combine (Vars.ArtworkRootPath' EmulatorListingComboBox.Text);  	var downloadURI = _emuConfigs [EmulatorListingComboBox.SelectedIndex] [1];  	var drx = System.IO.Path.GetFileName (downloadURI);  	var tempEmuPath = CleanFileName (System.IO.Path.Combine (Vars.TempFolderPath' drx));  	this.EmulatorCollectionTabControl.Enabled = false;  	this.AddEmulatorButton.Enabled = false;  	this.RemoveEmulatorButton.Enabled = false;  	this.DownloadEmulatorButton.Enabled = false;  	this.EmulatorListingComboBox.Enabled = false;  	DownloadProgressBar.Value = 0;  	var romWorker = new BackgroundWorker ();  	romWorker.WorkerReportsProgress = true;  	romWorker.ProgressChanged += (o' ex) =>  {  		DownloadProgressBar.Value = ex.ProgressPercentage;  	};  	romWorker.RunWorkerCompleted += (o' ex) =>  {  		if (DownloadProgressBar.Value == 100) {  			// create the info  			var emu = new Model.ConfigurationEmulator ();  			var ecf = _emuConfigs [EmulatorListingComboBox.SelectedIndex];  			emu.EmulatorName = ecf [0];  			emu.CommandLineParameters = ecf [2];  			emu.PathToEmulator = System.IO.Path.Combine (emuPath' ecf [4].Trim ());  			emu.PathToRoms = romPath;  			emu.PathToArtwork = artPath;  			emu.Lightbox = true;  			emu.RomExtensionFilter = ecf [3];  			_root.Emulators.EmulatorConfigurations.Add (emu);  			var tp = new TabPage (ecf [0]);  			tp.Controls.Add (new ConfigurationEmulator (emu) {  				Dock = DockStyle.Fill  			});  			EmulatorCollectionTabControl.TabPages.Add (tp);  		}  		DownloadProgressBar.Value = 0;  		this.EmulatorCollectionTabControl.Enabled = true;  		this.AddEmulatorButton.Enabled = true;  		this.RemoveEmulatorButton.Enabled = true;  		this.DownloadEmulatorButton.Enabled = true;  		this.EmulatorListingComboBox.Enabled = true;  	};  	romWorker.DoWork += (o' ex) =>  {  		if (!System.IO.Directory.Exists (emuPath))  			System.IO.Directory.CreateDirectory (emuPath);  		if (!System.IO.Directory.Exists (romPath))  			System.IO.Directory.CreateDirectory (romPath);  		if (!System.IO.Directory.Exists (artPath))  			System.IO.Directory.CreateDirectory (artPath);  		romWorker.ReportProgress (10);  		var w = new System.Net.WebClient ();  		try {  			w.DownloadFile (downloadURI' tempEmuPath);  			romWorker.ReportProgress (20);  			Decompress (tempEmuPath' emuPath);  			romWorker.ReportProgress (100);  		}  		catch (Exception exc) {  			MessageBox.Show (string.Join (Environment.NewLine' "Unable to download emulator. Please make sure you are connected to the internet"' "Exception details:"' exc.Message));  		}  	};  	romWorker.RunWorkerAsync ();  }  
Magic Number,RomulatorFrontend.View,ConfigurationEmulatorCollection,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationEmulatorCollection.cs,DownloadEmulatorButton_Click,The following statement contains a magic number: if (this.EmulatorListingComboBox.SelectedIndex != -1) {  	var emuPath = System.IO.Path.Combine (Vars.EmulatorRootPath' EmulatorListingComboBox.Text);  	var romPath = System.IO.Path.Combine (Vars.RomRootPath' EmulatorListingComboBox.Text);  	var artPath = System.IO.Path.Combine (Vars.ArtworkRootPath' EmulatorListingComboBox.Text);  	var downloadURI = _emuConfigs [EmulatorListingComboBox.SelectedIndex] [1];  	var drx = System.IO.Path.GetFileName (downloadURI);  	var tempEmuPath = CleanFileName (System.IO.Path.Combine (Vars.TempFolderPath' drx));  	this.EmulatorCollectionTabControl.Enabled = false;  	this.AddEmulatorButton.Enabled = false;  	this.RemoveEmulatorButton.Enabled = false;  	this.DownloadEmulatorButton.Enabled = false;  	this.EmulatorListingComboBox.Enabled = false;  	DownloadProgressBar.Value = 0;  	var romWorker = new BackgroundWorker ();  	romWorker.WorkerReportsProgress = true;  	romWorker.ProgressChanged += (o' ex) =>  {  		DownloadProgressBar.Value = ex.ProgressPercentage;  	};  	romWorker.RunWorkerCompleted += (o' ex) =>  {  		if (DownloadProgressBar.Value == 100) {  			// create the info  			var emu = new Model.ConfigurationEmulator ();  			var ecf = _emuConfigs [EmulatorListingComboBox.SelectedIndex];  			emu.EmulatorName = ecf [0];  			emu.CommandLineParameters = ecf [2];  			emu.PathToEmulator = System.IO.Path.Combine (emuPath' ecf [4].Trim ());  			emu.PathToRoms = romPath;  			emu.PathToArtwork = artPath;  			emu.Lightbox = true;  			emu.RomExtensionFilter = ecf [3];  			_root.Emulators.EmulatorConfigurations.Add (emu);  			var tp = new TabPage (ecf [0]);  			tp.Controls.Add (new ConfigurationEmulator (emu) {  				Dock = DockStyle.Fill  			});  			EmulatorCollectionTabControl.TabPages.Add (tp);  		}  		DownloadProgressBar.Value = 0;  		this.EmulatorCollectionTabControl.Enabled = true;  		this.AddEmulatorButton.Enabled = true;  		this.RemoveEmulatorButton.Enabled = true;  		this.DownloadEmulatorButton.Enabled = true;  		this.EmulatorListingComboBox.Enabled = true;  	};  	romWorker.DoWork += (o' ex) =>  {  		if (!System.IO.Directory.Exists (emuPath))  			System.IO.Directory.CreateDirectory (emuPath);  		if (!System.IO.Directory.Exists (romPath))  			System.IO.Directory.CreateDirectory (romPath);  		if (!System.IO.Directory.Exists (artPath))  			System.IO.Directory.CreateDirectory (artPath);  		romWorker.ReportProgress (10);  		var w = new System.Net.WebClient ();  		try {  			w.DownloadFile (downloadURI' tempEmuPath);  			romWorker.ReportProgress (20);  			Decompress (tempEmuPath' emuPath);  			romWorker.ReportProgress (100);  		}  		catch (Exception exc) {  			MessageBox.Show (string.Join (Environment.NewLine' "Unable to download emulator. Please make sure you are connected to the internet"' "Exception details:"' exc.Message));  		}  	};  	romWorker.RunWorkerAsync ();  }  
Magic Number,RomulatorFrontend.View,ConfigurationEmulatorCollection,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationEmulatorCollection.cs,DownloadEmulatorButton_Click,The following statement contains a magic number: romWorker.RunWorkerCompleted += (o' ex) =>  {  	if (DownloadProgressBar.Value == 100) {  		// create the info  		var emu = new Model.ConfigurationEmulator ();  		var ecf = _emuConfigs [EmulatorListingComboBox.SelectedIndex];  		emu.EmulatorName = ecf [0];  		emu.CommandLineParameters = ecf [2];  		emu.PathToEmulator = System.IO.Path.Combine (emuPath' ecf [4].Trim ());  		emu.PathToRoms = romPath;  		emu.PathToArtwork = artPath;  		emu.Lightbox = true;  		emu.RomExtensionFilter = ecf [3];  		_root.Emulators.EmulatorConfigurations.Add (emu);  		var tp = new TabPage (ecf [0]);  		tp.Controls.Add (new ConfigurationEmulator (emu) {  			Dock = DockStyle.Fill  		});  		EmulatorCollectionTabControl.TabPages.Add (tp);  	}  	DownloadProgressBar.Value = 0;  	this.EmulatorCollectionTabControl.Enabled = true;  	this.AddEmulatorButton.Enabled = true;  	this.RemoveEmulatorButton.Enabled = true;  	this.DownloadEmulatorButton.Enabled = true;  	this.EmulatorListingComboBox.Enabled = true;  };  
Magic Number,RomulatorFrontend.View,ConfigurationEmulatorCollection,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationEmulatorCollection.cs,DownloadEmulatorButton_Click,The following statement contains a magic number: romWorker.RunWorkerCompleted += (o' ex) =>  {  	if (DownloadProgressBar.Value == 100) {  		// create the info  		var emu = new Model.ConfigurationEmulator ();  		var ecf = _emuConfigs [EmulatorListingComboBox.SelectedIndex];  		emu.EmulatorName = ecf [0];  		emu.CommandLineParameters = ecf [2];  		emu.PathToEmulator = System.IO.Path.Combine (emuPath' ecf [4].Trim ());  		emu.PathToRoms = romPath;  		emu.PathToArtwork = artPath;  		emu.Lightbox = true;  		emu.RomExtensionFilter = ecf [3];  		_root.Emulators.EmulatorConfigurations.Add (emu);  		var tp = new TabPage (ecf [0]);  		tp.Controls.Add (new ConfigurationEmulator (emu) {  			Dock = DockStyle.Fill  		});  		EmulatorCollectionTabControl.TabPages.Add (tp);  	}  	DownloadProgressBar.Value = 0;  	this.EmulatorCollectionTabControl.Enabled = true;  	this.AddEmulatorButton.Enabled = true;  	this.RemoveEmulatorButton.Enabled = true;  	this.DownloadEmulatorButton.Enabled = true;  	this.EmulatorListingComboBox.Enabled = true;  };  
Magic Number,RomulatorFrontend.View,ConfigurationEmulatorCollection,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationEmulatorCollection.cs,DownloadEmulatorButton_Click,The following statement contains a magic number: romWorker.RunWorkerCompleted += (o' ex) =>  {  	if (DownloadProgressBar.Value == 100) {  		// create the info  		var emu = new Model.ConfigurationEmulator ();  		var ecf = _emuConfigs [EmulatorListingComboBox.SelectedIndex];  		emu.EmulatorName = ecf [0];  		emu.CommandLineParameters = ecf [2];  		emu.PathToEmulator = System.IO.Path.Combine (emuPath' ecf [4].Trim ());  		emu.PathToRoms = romPath;  		emu.PathToArtwork = artPath;  		emu.Lightbox = true;  		emu.RomExtensionFilter = ecf [3];  		_root.Emulators.EmulatorConfigurations.Add (emu);  		var tp = new TabPage (ecf [0]);  		tp.Controls.Add (new ConfigurationEmulator (emu) {  			Dock = DockStyle.Fill  		});  		EmulatorCollectionTabControl.TabPages.Add (tp);  	}  	DownloadProgressBar.Value = 0;  	this.EmulatorCollectionTabControl.Enabled = true;  	this.AddEmulatorButton.Enabled = true;  	this.RemoveEmulatorButton.Enabled = true;  	this.DownloadEmulatorButton.Enabled = true;  	this.EmulatorListingComboBox.Enabled = true;  };  
Magic Number,RomulatorFrontend.View,ConfigurationEmulatorCollection,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationEmulatorCollection.cs,DownloadEmulatorButton_Click,The following statement contains a magic number: romWorker.RunWorkerCompleted += (o' ex) =>  {  	if (DownloadProgressBar.Value == 100) {  		// create the info  		var emu = new Model.ConfigurationEmulator ();  		var ecf = _emuConfigs [EmulatorListingComboBox.SelectedIndex];  		emu.EmulatorName = ecf [0];  		emu.CommandLineParameters = ecf [2];  		emu.PathToEmulator = System.IO.Path.Combine (emuPath' ecf [4].Trim ());  		emu.PathToRoms = romPath;  		emu.PathToArtwork = artPath;  		emu.Lightbox = true;  		emu.RomExtensionFilter = ecf [3];  		_root.Emulators.EmulatorConfigurations.Add (emu);  		var tp = new TabPage (ecf [0]);  		tp.Controls.Add (new ConfigurationEmulator (emu) {  			Dock = DockStyle.Fill  		});  		EmulatorCollectionTabControl.TabPages.Add (tp);  	}  	DownloadProgressBar.Value = 0;  	this.EmulatorCollectionTabControl.Enabled = true;  	this.AddEmulatorButton.Enabled = true;  	this.RemoveEmulatorButton.Enabled = true;  	this.DownloadEmulatorButton.Enabled = true;  	this.EmulatorListingComboBox.Enabled = true;  };  
Magic Number,RomulatorFrontend.View,ConfigurationEmulatorCollection,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationEmulatorCollection.cs,DownloadEmulatorButton_Click,The following statement contains a magic number: if (DownloadProgressBar.Value == 100) {  	// create the info  	var emu = new Model.ConfigurationEmulator ();  	var ecf = _emuConfigs [EmulatorListingComboBox.SelectedIndex];  	emu.EmulatorName = ecf [0];  	emu.CommandLineParameters = ecf [2];  	emu.PathToEmulator = System.IO.Path.Combine (emuPath' ecf [4].Trim ());  	emu.PathToRoms = romPath;  	emu.PathToArtwork = artPath;  	emu.Lightbox = true;  	emu.RomExtensionFilter = ecf [3];  	_root.Emulators.EmulatorConfigurations.Add (emu);  	var tp = new TabPage (ecf [0]);  	tp.Controls.Add (new ConfigurationEmulator (emu) {  		Dock = DockStyle.Fill  	});  	EmulatorCollectionTabControl.TabPages.Add (tp);  }  
Magic Number,RomulatorFrontend.View,ConfigurationEmulatorCollection,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationEmulatorCollection.cs,DownloadEmulatorButton_Click,The following statement contains a magic number: if (DownloadProgressBar.Value == 100) {  	// create the info  	var emu = new Model.ConfigurationEmulator ();  	var ecf = _emuConfigs [EmulatorListingComboBox.SelectedIndex];  	emu.EmulatorName = ecf [0];  	emu.CommandLineParameters = ecf [2];  	emu.PathToEmulator = System.IO.Path.Combine (emuPath' ecf [4].Trim ());  	emu.PathToRoms = romPath;  	emu.PathToArtwork = artPath;  	emu.Lightbox = true;  	emu.RomExtensionFilter = ecf [3];  	_root.Emulators.EmulatorConfigurations.Add (emu);  	var tp = new TabPage (ecf [0]);  	tp.Controls.Add (new ConfigurationEmulator (emu) {  		Dock = DockStyle.Fill  	});  	EmulatorCollectionTabControl.TabPages.Add (tp);  }  
Magic Number,RomulatorFrontend.View,ConfigurationEmulatorCollection,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationEmulatorCollection.cs,DownloadEmulatorButton_Click,The following statement contains a magic number: if (DownloadProgressBar.Value == 100) {  	// create the info  	var emu = new Model.ConfigurationEmulator ();  	var ecf = _emuConfigs [EmulatorListingComboBox.SelectedIndex];  	emu.EmulatorName = ecf [0];  	emu.CommandLineParameters = ecf [2];  	emu.PathToEmulator = System.IO.Path.Combine (emuPath' ecf [4].Trim ());  	emu.PathToRoms = romPath;  	emu.PathToArtwork = artPath;  	emu.Lightbox = true;  	emu.RomExtensionFilter = ecf [3];  	_root.Emulators.EmulatorConfigurations.Add (emu);  	var tp = new TabPage (ecf [0]);  	tp.Controls.Add (new ConfigurationEmulator (emu) {  		Dock = DockStyle.Fill  	});  	EmulatorCollectionTabControl.TabPages.Add (tp);  }  
Magic Number,RomulatorFrontend.View,ConfigurationEmulatorCollection,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationEmulatorCollection.cs,DownloadEmulatorButton_Click,The following statement contains a magic number: if (DownloadProgressBar.Value == 100) {  	// create the info  	var emu = new Model.ConfigurationEmulator ();  	var ecf = _emuConfigs [EmulatorListingComboBox.SelectedIndex];  	emu.EmulatorName = ecf [0];  	emu.CommandLineParameters = ecf [2];  	emu.PathToEmulator = System.IO.Path.Combine (emuPath' ecf [4].Trim ());  	emu.PathToRoms = romPath;  	emu.PathToArtwork = artPath;  	emu.Lightbox = true;  	emu.RomExtensionFilter = ecf [3];  	_root.Emulators.EmulatorConfigurations.Add (emu);  	var tp = new TabPage (ecf [0]);  	tp.Controls.Add (new ConfigurationEmulator (emu) {  		Dock = DockStyle.Fill  	});  	EmulatorCollectionTabControl.TabPages.Add (tp);  }  
Magic Number,RomulatorFrontend.View,ConfigurationEmulatorCollection,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationEmulatorCollection.cs,DownloadEmulatorButton_Click,The following statement contains a magic number: emu.CommandLineParameters = ecf [2];  
Magic Number,RomulatorFrontend.View,ConfigurationEmulatorCollection,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationEmulatorCollection.cs,DownloadEmulatorButton_Click,The following statement contains a magic number: emu.PathToEmulator = System.IO.Path.Combine (emuPath' ecf [4].Trim ());  
Magic Number,RomulatorFrontend.View,ConfigurationEmulatorCollection,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationEmulatorCollection.cs,DownloadEmulatorButton_Click,The following statement contains a magic number: emu.RomExtensionFilter = ecf [3];  
Magic Number,RomulatorFrontend.View,ConfigurationEmulatorCollection,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationEmulatorCollection.cs,DownloadEmulatorButton_Click,The following statement contains a magic number: romWorker.DoWork += (o' ex) =>  {  	if (!System.IO.Directory.Exists (emuPath))  		System.IO.Directory.CreateDirectory (emuPath);  	if (!System.IO.Directory.Exists (romPath))  		System.IO.Directory.CreateDirectory (romPath);  	if (!System.IO.Directory.Exists (artPath))  		System.IO.Directory.CreateDirectory (artPath);  	romWorker.ReportProgress (10);  	var w = new System.Net.WebClient ();  	try {  		w.DownloadFile (downloadURI' tempEmuPath);  		romWorker.ReportProgress (20);  		Decompress (tempEmuPath' emuPath);  		romWorker.ReportProgress (100);  	}  	catch (Exception exc) {  		MessageBox.Show (string.Join (Environment.NewLine' "Unable to download emulator. Please make sure you are connected to the internet"' "Exception details:"' exc.Message));  	}  };  
Magic Number,RomulatorFrontend.View,ConfigurationEmulatorCollection,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationEmulatorCollection.cs,DownloadEmulatorButton_Click,The following statement contains a magic number: romWorker.DoWork += (o' ex) =>  {  	if (!System.IO.Directory.Exists (emuPath))  		System.IO.Directory.CreateDirectory (emuPath);  	if (!System.IO.Directory.Exists (romPath))  		System.IO.Directory.CreateDirectory (romPath);  	if (!System.IO.Directory.Exists (artPath))  		System.IO.Directory.CreateDirectory (artPath);  	romWorker.ReportProgress (10);  	var w = new System.Net.WebClient ();  	try {  		w.DownloadFile (downloadURI' tempEmuPath);  		romWorker.ReportProgress (20);  		Decompress (tempEmuPath' emuPath);  		romWorker.ReportProgress (100);  	}  	catch (Exception exc) {  		MessageBox.Show (string.Join (Environment.NewLine' "Unable to download emulator. Please make sure you are connected to the internet"' "Exception details:"' exc.Message));  	}  };  
Magic Number,RomulatorFrontend.View,ConfigurationEmulatorCollection,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationEmulatorCollection.cs,DownloadEmulatorButton_Click,The following statement contains a magic number: romWorker.DoWork += (o' ex) =>  {  	if (!System.IO.Directory.Exists (emuPath))  		System.IO.Directory.CreateDirectory (emuPath);  	if (!System.IO.Directory.Exists (romPath))  		System.IO.Directory.CreateDirectory (romPath);  	if (!System.IO.Directory.Exists (artPath))  		System.IO.Directory.CreateDirectory (artPath);  	romWorker.ReportProgress (10);  	var w = new System.Net.WebClient ();  	try {  		w.DownloadFile (downloadURI' tempEmuPath);  		romWorker.ReportProgress (20);  		Decompress (tempEmuPath' emuPath);  		romWorker.ReportProgress (100);  	}  	catch (Exception exc) {  		MessageBox.Show (string.Join (Environment.NewLine' "Unable to download emulator. Please make sure you are connected to the internet"' "Exception details:"' exc.Message));  	}  };  
Magic Number,RomulatorFrontend.View,ConfigurationEmulatorCollection,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationEmulatorCollection.cs,DownloadEmulatorButton_Click,The following statement contains a magic number: romWorker.ReportProgress (10);  
Magic Number,RomulatorFrontend.View,ConfigurationEmulatorCollection,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationEmulatorCollection.cs,DownloadEmulatorButton_Click,The following statement contains a magic number: try {  	w.DownloadFile (downloadURI' tempEmuPath);  	romWorker.ReportProgress (20);  	Decompress (tempEmuPath' emuPath);  	romWorker.ReportProgress (100);  }  catch (Exception exc) {  	MessageBox.Show (string.Join (Environment.NewLine' "Unable to download emulator. Please make sure you are connected to the internet"' "Exception details:"' exc.Message));  }  
Magic Number,RomulatorFrontend.View,ConfigurationEmulatorCollection,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationEmulatorCollection.cs,DownloadEmulatorButton_Click,The following statement contains a magic number: try {  	w.DownloadFile (downloadURI' tempEmuPath);  	romWorker.ReportProgress (20);  	Decompress (tempEmuPath' emuPath);  	romWorker.ReportProgress (100);  }  catch (Exception exc) {  	MessageBox.Show (string.Join (Environment.NewLine' "Unable to download emulator. Please make sure you are connected to the internet"' "Exception details:"' exc.Message));  }  
Magic Number,RomulatorFrontend.View,ConfigurationEmulatorCollection,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationEmulatorCollection.cs,DownloadEmulatorButton_Click,The following statement contains a magic number: romWorker.ReportProgress (20);  
Magic Number,RomulatorFrontend.View,ConfigurationEmulatorCollection,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationEmulatorCollection.cs,DownloadEmulatorButton_Click,The following statement contains a magic number: romWorker.ReportProgress (100);  
Magic Number,RomulatorFrontend.View,ConfigurationGamePad,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationGamePad.cs,DPadPictureBox_Paint,The following statement contains a magic number: if (_gamepad.DirectionalPad == Model.DPadEnum.Up) {  	e.Graphics.FillPie (Brushes.Green' DPadPictureBox.ClientRectangle' -90 - 22.5f' 45);  }  
Magic Number,RomulatorFrontend.View,ConfigurationGamePad,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationGamePad.cs,DPadPictureBox_Paint,The following statement contains a magic number: if (_gamepad.DirectionalPad == Model.DPadEnum.Up) {  	e.Graphics.FillPie (Brushes.Green' DPadPictureBox.ClientRectangle' -90 - 22.5f' 45);  }  
Magic Number,RomulatorFrontend.View,ConfigurationGamePad,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationGamePad.cs,DPadPictureBox_Paint,The following statement contains a magic number: e.Graphics.FillPie (Brushes.Green' DPadPictureBox.ClientRectangle' -90 - 22.5f' 45);  
Magic Number,RomulatorFrontend.View,ConfigurationGamePad,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationGamePad.cs,DPadPictureBox_Paint,The following statement contains a magic number: e.Graphics.FillPie (Brushes.Green' DPadPictureBox.ClientRectangle' -90 - 22.5f' 45);  
Magic Number,RomulatorFrontend.View,ConfigurationGamePad,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationGamePad.cs,DPadPictureBox_Paint,The following statement contains a magic number: if (_gamepad.DirectionalPad == Model.DPadEnum.UpRight) {  	e.Graphics.FillPie (Brushes.Green' DPadPictureBox.ClientRectangle' -45 - 22.5f' 45);  }  
Magic Number,RomulatorFrontend.View,ConfigurationGamePad,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationGamePad.cs,DPadPictureBox_Paint,The following statement contains a magic number: if (_gamepad.DirectionalPad == Model.DPadEnum.UpRight) {  	e.Graphics.FillPie (Brushes.Green' DPadPictureBox.ClientRectangle' -45 - 22.5f' 45);  }  
Magic Number,RomulatorFrontend.View,ConfigurationGamePad,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationGamePad.cs,DPadPictureBox_Paint,The following statement contains a magic number: e.Graphics.FillPie (Brushes.Green' DPadPictureBox.ClientRectangle' -45 - 22.5f' 45);  
Magic Number,RomulatorFrontend.View,ConfigurationGamePad,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationGamePad.cs,DPadPictureBox_Paint,The following statement contains a magic number: e.Graphics.FillPie (Brushes.Green' DPadPictureBox.ClientRectangle' -45 - 22.5f' 45);  
Magic Number,RomulatorFrontend.View,ConfigurationGamePad,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationGamePad.cs,DPadPictureBox_Paint,The following statement contains a magic number: if (_gamepad.DirectionalPad == Model.DPadEnum.Right) {  	e.Graphics.FillPie (Brushes.Green' DPadPictureBox.ClientRectangle' 0 - 22.5f' 45);  }  
Magic Number,RomulatorFrontend.View,ConfigurationGamePad,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationGamePad.cs,DPadPictureBox_Paint,The following statement contains a magic number: e.Graphics.FillPie (Brushes.Green' DPadPictureBox.ClientRectangle' 0 - 22.5f' 45);  
Magic Number,RomulatorFrontend.View,ConfigurationGamePad,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationGamePad.cs,DPadPictureBox_Paint,The following statement contains a magic number: if (_gamepad.DirectionalPad == Model.DPadEnum.DownRight) {  	e.Graphics.FillPie (Brushes.Green' DPadPictureBox.ClientRectangle' 45 - 22.5f' 45);  }  
Magic Number,RomulatorFrontend.View,ConfigurationGamePad,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationGamePad.cs,DPadPictureBox_Paint,The following statement contains a magic number: if (_gamepad.DirectionalPad == Model.DPadEnum.DownRight) {  	e.Graphics.FillPie (Brushes.Green' DPadPictureBox.ClientRectangle' 45 - 22.5f' 45);  }  
Magic Number,RomulatorFrontend.View,ConfigurationGamePad,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationGamePad.cs,DPadPictureBox_Paint,The following statement contains a magic number: e.Graphics.FillPie (Brushes.Green' DPadPictureBox.ClientRectangle' 45 - 22.5f' 45);  
Magic Number,RomulatorFrontend.View,ConfigurationGamePad,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationGamePad.cs,DPadPictureBox_Paint,The following statement contains a magic number: e.Graphics.FillPie (Brushes.Green' DPadPictureBox.ClientRectangle' 45 - 22.5f' 45);  
Magic Number,RomulatorFrontend.View,ConfigurationGamePad,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationGamePad.cs,DPadPictureBox_Paint,The following statement contains a magic number: if (_gamepad.DirectionalPad == Model.DPadEnum.Down) {  	e.Graphics.FillPie (Brushes.Green' DPadPictureBox.ClientRectangle' 90 - 22.5f' 45);  }  
Magic Number,RomulatorFrontend.View,ConfigurationGamePad,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationGamePad.cs,DPadPictureBox_Paint,The following statement contains a magic number: if (_gamepad.DirectionalPad == Model.DPadEnum.Down) {  	e.Graphics.FillPie (Brushes.Green' DPadPictureBox.ClientRectangle' 90 - 22.5f' 45);  }  
Magic Number,RomulatorFrontend.View,ConfigurationGamePad,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationGamePad.cs,DPadPictureBox_Paint,The following statement contains a magic number: e.Graphics.FillPie (Brushes.Green' DPadPictureBox.ClientRectangle' 90 - 22.5f' 45);  
Magic Number,RomulatorFrontend.View,ConfigurationGamePad,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationGamePad.cs,DPadPictureBox_Paint,The following statement contains a magic number: e.Graphics.FillPie (Brushes.Green' DPadPictureBox.ClientRectangle' 90 - 22.5f' 45);  
Magic Number,RomulatorFrontend.View,ConfigurationGamePad,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationGamePad.cs,DPadPictureBox_Paint,The following statement contains a magic number: if (_gamepad.DirectionalPad == Model.DPadEnum.UpLeft) {  	e.Graphics.FillPie (Brushes.Green' DPadPictureBox.ClientRectangle' 225 - 22.5f' 45);  }  
Magic Number,RomulatorFrontend.View,ConfigurationGamePad,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationGamePad.cs,DPadPictureBox_Paint,The following statement contains a magic number: if (_gamepad.DirectionalPad == Model.DPadEnum.UpLeft) {  	e.Graphics.FillPie (Brushes.Green' DPadPictureBox.ClientRectangle' 225 - 22.5f' 45);  }  
Magic Number,RomulatorFrontend.View,ConfigurationGamePad,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationGamePad.cs,DPadPictureBox_Paint,The following statement contains a magic number: e.Graphics.FillPie (Brushes.Green' DPadPictureBox.ClientRectangle' 225 - 22.5f' 45);  
Magic Number,RomulatorFrontend.View,ConfigurationGamePad,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationGamePad.cs,DPadPictureBox_Paint,The following statement contains a magic number: e.Graphics.FillPie (Brushes.Green' DPadPictureBox.ClientRectangle' 225 - 22.5f' 45);  
Magic Number,RomulatorFrontend.View,ConfigurationGamePad,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationGamePad.cs,DPadPictureBox_Paint,The following statement contains a magic number: if (_gamepad.DirectionalPad == Model.DPadEnum.Left) {  	e.Graphics.FillPie (Brushes.Green' DPadPictureBox.ClientRectangle' 180 - 22.5f' 45);  }  
Magic Number,RomulatorFrontend.View,ConfigurationGamePad,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationGamePad.cs,DPadPictureBox_Paint,The following statement contains a magic number: if (_gamepad.DirectionalPad == Model.DPadEnum.Left) {  	e.Graphics.FillPie (Brushes.Green' DPadPictureBox.ClientRectangle' 180 - 22.5f' 45);  }  
Magic Number,RomulatorFrontend.View,ConfigurationGamePad,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationGamePad.cs,DPadPictureBox_Paint,The following statement contains a magic number: e.Graphics.FillPie (Brushes.Green' DPadPictureBox.ClientRectangle' 180 - 22.5f' 45);  
Magic Number,RomulatorFrontend.View,ConfigurationGamePad,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationGamePad.cs,DPadPictureBox_Paint,The following statement contains a magic number: e.Graphics.FillPie (Brushes.Green' DPadPictureBox.ClientRectangle' 180 - 22.5f' 45);  
Magic Number,RomulatorFrontend.View,ConfigurationGamePad,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationGamePad.cs,DPadPictureBox_Paint,The following statement contains a magic number: if (_gamepad.DirectionalPad == Model.DPadEnum.DownLeft) {  	e.Graphics.FillPie (Brushes.Green' DPadPictureBox.ClientRectangle' 135 - 22.5f' 45);  }  
Magic Number,RomulatorFrontend.View,ConfigurationGamePad,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationGamePad.cs,DPadPictureBox_Paint,The following statement contains a magic number: if (_gamepad.DirectionalPad == Model.DPadEnum.DownLeft) {  	e.Graphics.FillPie (Brushes.Green' DPadPictureBox.ClientRectangle' 135 - 22.5f' 45);  }  
Magic Number,RomulatorFrontend.View,ConfigurationGamePad,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationGamePad.cs,DPadPictureBox_Paint,The following statement contains a magic number: e.Graphics.FillPie (Brushes.Green' DPadPictureBox.ClientRectangle' 135 - 22.5f' 45);  
Magic Number,RomulatorFrontend.View,ConfigurationGamePad,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationGamePad.cs,DPadPictureBox_Paint,The following statement contains a magic number: e.Graphics.FillPie (Brushes.Green' DPadPictureBox.ClientRectangle' 135 - 22.5f' 45);  
Magic Number,RomulatorFrontend.View,ConfigurationGamePad,C:\repos\longjoel_Romflow\RomulatorFrontend\View\ConfigurationGamePad.cs,ButtonsPictureBox_Paint,The following statement contains a magic number: for (int x = 0; x < 16; x++) {  	if (_gamepad.Buttons [x] == true) {  		e.Graphics.FillRectangle (Brushes.Green' new Rectangle ((int)(Math.Ceiling (x * crx))' 0' (int)(crx)' ButtonsPictureBox.ClientRectangle.Height));  	}  }  
Magic Number,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,ControllerPollingTImer_Tick,The following statement contains a magic number: if (_clientEmulatorProcess != null) {  	for (int i = 0; i < (int)Math.Min (GamePads.Count ()' _configurationRoot.Gamepads.GamePadInformation.Count); i++) {  		var inputCombo = GamePads [i].ToString ();  		if ((_configurationRoot.Gamepads.GamePadInformation [i].QuitCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuitCombo == inputCombo) {  			if (_clientEmulatorProcess != null && _currentEmulator.IsAutoLoadAutoSave) {  				SetForegroundWindow (_clientEmulatorProcess.Handle);  				for (int j = 0; j < 10; j++) {  					SendKeys.SendWait (_currentEmulator.QuickSaveCombination);  					System.Threading.Thread.Sleep (100);  				}  				System.Threading.Thread.Sleep (1000);  			}  			_clientEmulatorProcess.CloseMainWindow ();  			_clientEmulatorProcess.Kill ();  			_clientEmulatorProcess = null;  		}  		if ((_configurationRoot.Gamepads.GamePadInformation [i].QuickSaveCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuickSaveCombo == inputCombo) {  			SetForegroundWindow (_clientEmulatorProcess.Handle);  			for (int j = 0; j < 5; j++) {  				SendKeys.SendWait (_currentEmulator.QuickSaveCombination);  				System.Threading.Thread.Sleep (100);  			}  		}  		if ((_configurationRoot.Gamepads.GamePadInformation [i].QuickLoadCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuickLoadCombo == inputCombo) {  			SetForegroundWindow (_clientEmulatorProcess.Handle);  			for (int j = 0; j < 5; j++) {  				SendKeys.SendWait (_currentEmulator.QuickLoadCombination);  				System.Threading.Thread.Sleep (100);  			}  		}  	}  }  // if there is not an emulator running' poll the game pads for navigation ques  else {  	for (int i = 0; i < Math.Min (GamePads.Count ()' _configurationRoot.Gamepads.GamePadInformation.Count); i++) {  		var gpts = GamePads [i].ToString ().ToUpper ();  		var gpc = _configurationRoot.Gamepads.GamePadInformation [i];  		if (gpts == gpc.NavigateBackButton.ToUpper ()) {  			RootWebBrowser.Document.InvokeScript ("eval"' new string[] {  				"RomFlowJS.HOST.NavigateBackward();"  			});  		}  		if (gpts == gpc.NavigateForwardButton.ToUpper ()) {  			RootWebBrowser.Document.InvokeScript ("eval"' new string[] {  				"RomFlowJS.HOST.NavigateForward();"  			});  		}  		if (gpts == gpc.NavigateUpButton.ToUpper ()) {  			RootWebBrowser.Document.InvokeScript ("eval"' new string[] {  				"RomFlowJS.HOST.NavigateUp();"  			});  		}  		if (gpts == gpc.NavigateDownButton.ToUpper ()) {  			RootWebBrowser.Document.InvokeScript ("eval"' new string[] {  				"RomFlowJS.HOST.NavigateDown();"  			});  		}  		if (gpts == gpc.NavigateLeftButton.ToUpper ()) {  			RootWebBrowser.Document.InvokeScript ("eval"' new string[] {  				"RomFlowJS.HOST.NavigateLeft();"  			});  		}  		if (gpts == gpc.NavigateRightButton.ToUpper ()) {  			RootWebBrowser.Document.InvokeScript ("eval"' new string[] {  				"RomFlowJS.HOST.NavigateRight();"  			});  		}  	}  }  
Magic Number,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,ControllerPollingTImer_Tick,The following statement contains a magic number: if (_clientEmulatorProcess != null) {  	for (int i = 0; i < (int)Math.Min (GamePads.Count ()' _configurationRoot.Gamepads.GamePadInformation.Count); i++) {  		var inputCombo = GamePads [i].ToString ();  		if ((_configurationRoot.Gamepads.GamePadInformation [i].QuitCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuitCombo == inputCombo) {  			if (_clientEmulatorProcess != null && _currentEmulator.IsAutoLoadAutoSave) {  				SetForegroundWindow (_clientEmulatorProcess.Handle);  				for (int j = 0; j < 10; j++) {  					SendKeys.SendWait (_currentEmulator.QuickSaveCombination);  					System.Threading.Thread.Sleep (100);  				}  				System.Threading.Thread.Sleep (1000);  			}  			_clientEmulatorProcess.CloseMainWindow ();  			_clientEmulatorProcess.Kill ();  			_clientEmulatorProcess = null;  		}  		if ((_configurationRoot.Gamepads.GamePadInformation [i].QuickSaveCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuickSaveCombo == inputCombo) {  			SetForegroundWindow (_clientEmulatorProcess.Handle);  			for (int j = 0; j < 5; j++) {  				SendKeys.SendWait (_currentEmulator.QuickSaveCombination);  				System.Threading.Thread.Sleep (100);  			}  		}  		if ((_configurationRoot.Gamepads.GamePadInformation [i].QuickLoadCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuickLoadCombo == inputCombo) {  			SetForegroundWindow (_clientEmulatorProcess.Handle);  			for (int j = 0; j < 5; j++) {  				SendKeys.SendWait (_currentEmulator.QuickLoadCombination);  				System.Threading.Thread.Sleep (100);  			}  		}  	}  }  // if there is not an emulator running' poll the game pads for navigation ques  else {  	for (int i = 0; i < Math.Min (GamePads.Count ()' _configurationRoot.Gamepads.GamePadInformation.Count); i++) {  		var gpts = GamePads [i].ToString ().ToUpper ();  		var gpc = _configurationRoot.Gamepads.GamePadInformation [i];  		if (gpts == gpc.NavigateBackButton.ToUpper ()) {  			RootWebBrowser.Document.InvokeScript ("eval"' new string[] {  				"RomFlowJS.HOST.NavigateBackward();"  			});  		}  		if (gpts == gpc.NavigateForwardButton.ToUpper ()) {  			RootWebBrowser.Document.InvokeScript ("eval"' new string[] {  				"RomFlowJS.HOST.NavigateForward();"  			});  		}  		if (gpts == gpc.NavigateUpButton.ToUpper ()) {  			RootWebBrowser.Document.InvokeScript ("eval"' new string[] {  				"RomFlowJS.HOST.NavigateUp();"  			});  		}  		if (gpts == gpc.NavigateDownButton.ToUpper ()) {  			RootWebBrowser.Document.InvokeScript ("eval"' new string[] {  				"RomFlowJS.HOST.NavigateDown();"  			});  		}  		if (gpts == gpc.NavigateLeftButton.ToUpper ()) {  			RootWebBrowser.Document.InvokeScript ("eval"' new string[] {  				"RomFlowJS.HOST.NavigateLeft();"  			});  		}  		if (gpts == gpc.NavigateRightButton.ToUpper ()) {  			RootWebBrowser.Document.InvokeScript ("eval"' new string[] {  				"RomFlowJS.HOST.NavigateRight();"  			});  		}  	}  }  
Magic Number,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,ControllerPollingTImer_Tick,The following statement contains a magic number: if (_clientEmulatorProcess != null) {  	for (int i = 0; i < (int)Math.Min (GamePads.Count ()' _configurationRoot.Gamepads.GamePadInformation.Count); i++) {  		var inputCombo = GamePads [i].ToString ();  		if ((_configurationRoot.Gamepads.GamePadInformation [i].QuitCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuitCombo == inputCombo) {  			if (_clientEmulatorProcess != null && _currentEmulator.IsAutoLoadAutoSave) {  				SetForegroundWindow (_clientEmulatorProcess.Handle);  				for (int j = 0; j < 10; j++) {  					SendKeys.SendWait (_currentEmulator.QuickSaveCombination);  					System.Threading.Thread.Sleep (100);  				}  				System.Threading.Thread.Sleep (1000);  			}  			_clientEmulatorProcess.CloseMainWindow ();  			_clientEmulatorProcess.Kill ();  			_clientEmulatorProcess = null;  		}  		if ((_configurationRoot.Gamepads.GamePadInformation [i].QuickSaveCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuickSaveCombo == inputCombo) {  			SetForegroundWindow (_clientEmulatorProcess.Handle);  			for (int j = 0; j < 5; j++) {  				SendKeys.SendWait (_currentEmulator.QuickSaveCombination);  				System.Threading.Thread.Sleep (100);  			}  		}  		if ((_configurationRoot.Gamepads.GamePadInformation [i].QuickLoadCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuickLoadCombo == inputCombo) {  			SetForegroundWindow (_clientEmulatorProcess.Handle);  			for (int j = 0; j < 5; j++) {  				SendKeys.SendWait (_currentEmulator.QuickLoadCombination);  				System.Threading.Thread.Sleep (100);  			}  		}  	}  }  // if there is not an emulator running' poll the game pads for navigation ques  else {  	for (int i = 0; i < Math.Min (GamePads.Count ()' _configurationRoot.Gamepads.GamePadInformation.Count); i++) {  		var gpts = GamePads [i].ToString ().ToUpper ();  		var gpc = _configurationRoot.Gamepads.GamePadInformation [i];  		if (gpts == gpc.NavigateBackButton.ToUpper ()) {  			RootWebBrowser.Document.InvokeScript ("eval"' new string[] {  				"RomFlowJS.HOST.NavigateBackward();"  			});  		}  		if (gpts == gpc.NavigateForwardButton.ToUpper ()) {  			RootWebBrowser.Document.InvokeScript ("eval"' new string[] {  				"RomFlowJS.HOST.NavigateForward();"  			});  		}  		if (gpts == gpc.NavigateUpButton.ToUpper ()) {  			RootWebBrowser.Document.InvokeScript ("eval"' new string[] {  				"RomFlowJS.HOST.NavigateUp();"  			});  		}  		if (gpts == gpc.NavigateDownButton.ToUpper ()) {  			RootWebBrowser.Document.InvokeScript ("eval"' new string[] {  				"RomFlowJS.HOST.NavigateDown();"  			});  		}  		if (gpts == gpc.NavigateLeftButton.ToUpper ()) {  			RootWebBrowser.Document.InvokeScript ("eval"' new string[] {  				"RomFlowJS.HOST.NavigateLeft();"  			});  		}  		if (gpts == gpc.NavigateRightButton.ToUpper ()) {  			RootWebBrowser.Document.InvokeScript ("eval"' new string[] {  				"RomFlowJS.HOST.NavigateRight();"  			});  		}  	}  }  
Magic Number,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,ControllerPollingTImer_Tick,The following statement contains a magic number: if (_clientEmulatorProcess != null) {  	for (int i = 0; i < (int)Math.Min (GamePads.Count ()' _configurationRoot.Gamepads.GamePadInformation.Count); i++) {  		var inputCombo = GamePads [i].ToString ();  		if ((_configurationRoot.Gamepads.GamePadInformation [i].QuitCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuitCombo == inputCombo) {  			if (_clientEmulatorProcess != null && _currentEmulator.IsAutoLoadAutoSave) {  				SetForegroundWindow (_clientEmulatorProcess.Handle);  				for (int j = 0; j < 10; j++) {  					SendKeys.SendWait (_currentEmulator.QuickSaveCombination);  					System.Threading.Thread.Sleep (100);  				}  				System.Threading.Thread.Sleep (1000);  			}  			_clientEmulatorProcess.CloseMainWindow ();  			_clientEmulatorProcess.Kill ();  			_clientEmulatorProcess = null;  		}  		if ((_configurationRoot.Gamepads.GamePadInformation [i].QuickSaveCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuickSaveCombo == inputCombo) {  			SetForegroundWindow (_clientEmulatorProcess.Handle);  			for (int j = 0; j < 5; j++) {  				SendKeys.SendWait (_currentEmulator.QuickSaveCombination);  				System.Threading.Thread.Sleep (100);  			}  		}  		if ((_configurationRoot.Gamepads.GamePadInformation [i].QuickLoadCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuickLoadCombo == inputCombo) {  			SetForegroundWindow (_clientEmulatorProcess.Handle);  			for (int j = 0; j < 5; j++) {  				SendKeys.SendWait (_currentEmulator.QuickLoadCombination);  				System.Threading.Thread.Sleep (100);  			}  		}  	}  }  // if there is not an emulator running' poll the game pads for navigation ques  else {  	for (int i = 0; i < Math.Min (GamePads.Count ()' _configurationRoot.Gamepads.GamePadInformation.Count); i++) {  		var gpts = GamePads [i].ToString ().ToUpper ();  		var gpc = _configurationRoot.Gamepads.GamePadInformation [i];  		if (gpts == gpc.NavigateBackButton.ToUpper ()) {  			RootWebBrowser.Document.InvokeScript ("eval"' new string[] {  				"RomFlowJS.HOST.NavigateBackward();"  			});  		}  		if (gpts == gpc.NavigateForwardButton.ToUpper ()) {  			RootWebBrowser.Document.InvokeScript ("eval"' new string[] {  				"RomFlowJS.HOST.NavigateForward();"  			});  		}  		if (gpts == gpc.NavigateUpButton.ToUpper ()) {  			RootWebBrowser.Document.InvokeScript ("eval"' new string[] {  				"RomFlowJS.HOST.NavigateUp();"  			});  		}  		if (gpts == gpc.NavigateDownButton.ToUpper ()) {  			RootWebBrowser.Document.InvokeScript ("eval"' new string[] {  				"RomFlowJS.HOST.NavigateDown();"  			});  		}  		if (gpts == gpc.NavigateLeftButton.ToUpper ()) {  			RootWebBrowser.Document.InvokeScript ("eval"' new string[] {  				"RomFlowJS.HOST.NavigateLeft();"  			});  		}  		if (gpts == gpc.NavigateRightButton.ToUpper ()) {  			RootWebBrowser.Document.InvokeScript ("eval"' new string[] {  				"RomFlowJS.HOST.NavigateRight();"  			});  		}  	}  }  
Magic Number,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,ControllerPollingTImer_Tick,The following statement contains a magic number: if (_clientEmulatorProcess != null) {  	for (int i = 0; i < (int)Math.Min (GamePads.Count ()' _configurationRoot.Gamepads.GamePadInformation.Count); i++) {  		var inputCombo = GamePads [i].ToString ();  		if ((_configurationRoot.Gamepads.GamePadInformation [i].QuitCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuitCombo == inputCombo) {  			if (_clientEmulatorProcess != null && _currentEmulator.IsAutoLoadAutoSave) {  				SetForegroundWindow (_clientEmulatorProcess.Handle);  				for (int j = 0; j < 10; j++) {  					SendKeys.SendWait (_currentEmulator.QuickSaveCombination);  					System.Threading.Thread.Sleep (100);  				}  				System.Threading.Thread.Sleep (1000);  			}  			_clientEmulatorProcess.CloseMainWindow ();  			_clientEmulatorProcess.Kill ();  			_clientEmulatorProcess = null;  		}  		if ((_configurationRoot.Gamepads.GamePadInformation [i].QuickSaveCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuickSaveCombo == inputCombo) {  			SetForegroundWindow (_clientEmulatorProcess.Handle);  			for (int j = 0; j < 5; j++) {  				SendKeys.SendWait (_currentEmulator.QuickSaveCombination);  				System.Threading.Thread.Sleep (100);  			}  		}  		if ((_configurationRoot.Gamepads.GamePadInformation [i].QuickLoadCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuickLoadCombo == inputCombo) {  			SetForegroundWindow (_clientEmulatorProcess.Handle);  			for (int j = 0; j < 5; j++) {  				SendKeys.SendWait (_currentEmulator.QuickLoadCombination);  				System.Threading.Thread.Sleep (100);  			}  		}  	}  }  // if there is not an emulator running' poll the game pads for navigation ques  else {  	for (int i = 0; i < Math.Min (GamePads.Count ()' _configurationRoot.Gamepads.GamePadInformation.Count); i++) {  		var gpts = GamePads [i].ToString ().ToUpper ();  		var gpc = _configurationRoot.Gamepads.GamePadInformation [i];  		if (gpts == gpc.NavigateBackButton.ToUpper ()) {  			RootWebBrowser.Document.InvokeScript ("eval"' new string[] {  				"RomFlowJS.HOST.NavigateBackward();"  			});  		}  		if (gpts == gpc.NavigateForwardButton.ToUpper ()) {  			RootWebBrowser.Document.InvokeScript ("eval"' new string[] {  				"RomFlowJS.HOST.NavigateForward();"  			});  		}  		if (gpts == gpc.NavigateUpButton.ToUpper ()) {  			RootWebBrowser.Document.InvokeScript ("eval"' new string[] {  				"RomFlowJS.HOST.NavigateUp();"  			});  		}  		if (gpts == gpc.NavigateDownButton.ToUpper ()) {  			RootWebBrowser.Document.InvokeScript ("eval"' new string[] {  				"RomFlowJS.HOST.NavigateDown();"  			});  		}  		if (gpts == gpc.NavigateLeftButton.ToUpper ()) {  			RootWebBrowser.Document.InvokeScript ("eval"' new string[] {  				"RomFlowJS.HOST.NavigateLeft();"  			});  		}  		if (gpts == gpc.NavigateRightButton.ToUpper ()) {  			RootWebBrowser.Document.InvokeScript ("eval"' new string[] {  				"RomFlowJS.HOST.NavigateRight();"  			});  		}  	}  }  
Magic Number,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,ControllerPollingTImer_Tick,The following statement contains a magic number: if (_clientEmulatorProcess != null) {  	for (int i = 0; i < (int)Math.Min (GamePads.Count ()' _configurationRoot.Gamepads.GamePadInformation.Count); i++) {  		var inputCombo = GamePads [i].ToString ();  		if ((_configurationRoot.Gamepads.GamePadInformation [i].QuitCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuitCombo == inputCombo) {  			if (_clientEmulatorProcess != null && _currentEmulator.IsAutoLoadAutoSave) {  				SetForegroundWindow (_clientEmulatorProcess.Handle);  				for (int j = 0; j < 10; j++) {  					SendKeys.SendWait (_currentEmulator.QuickSaveCombination);  					System.Threading.Thread.Sleep (100);  				}  				System.Threading.Thread.Sleep (1000);  			}  			_clientEmulatorProcess.CloseMainWindow ();  			_clientEmulatorProcess.Kill ();  			_clientEmulatorProcess = null;  		}  		if ((_configurationRoot.Gamepads.GamePadInformation [i].QuickSaveCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuickSaveCombo == inputCombo) {  			SetForegroundWindow (_clientEmulatorProcess.Handle);  			for (int j = 0; j < 5; j++) {  				SendKeys.SendWait (_currentEmulator.QuickSaveCombination);  				System.Threading.Thread.Sleep (100);  			}  		}  		if ((_configurationRoot.Gamepads.GamePadInformation [i].QuickLoadCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuickLoadCombo == inputCombo) {  			SetForegroundWindow (_clientEmulatorProcess.Handle);  			for (int j = 0; j < 5; j++) {  				SendKeys.SendWait (_currentEmulator.QuickLoadCombination);  				System.Threading.Thread.Sleep (100);  			}  		}  	}  }  // if there is not an emulator running' poll the game pads for navigation ques  else {  	for (int i = 0; i < Math.Min (GamePads.Count ()' _configurationRoot.Gamepads.GamePadInformation.Count); i++) {  		var gpts = GamePads [i].ToString ().ToUpper ();  		var gpc = _configurationRoot.Gamepads.GamePadInformation [i];  		if (gpts == gpc.NavigateBackButton.ToUpper ()) {  			RootWebBrowser.Document.InvokeScript ("eval"' new string[] {  				"RomFlowJS.HOST.NavigateBackward();"  			});  		}  		if (gpts == gpc.NavigateForwardButton.ToUpper ()) {  			RootWebBrowser.Document.InvokeScript ("eval"' new string[] {  				"RomFlowJS.HOST.NavigateForward();"  			});  		}  		if (gpts == gpc.NavigateUpButton.ToUpper ()) {  			RootWebBrowser.Document.InvokeScript ("eval"' new string[] {  				"RomFlowJS.HOST.NavigateUp();"  			});  		}  		if (gpts == gpc.NavigateDownButton.ToUpper ()) {  			RootWebBrowser.Document.InvokeScript ("eval"' new string[] {  				"RomFlowJS.HOST.NavigateDown();"  			});  		}  		if (gpts == gpc.NavigateLeftButton.ToUpper ()) {  			RootWebBrowser.Document.InvokeScript ("eval"' new string[] {  				"RomFlowJS.HOST.NavigateLeft();"  			});  		}  		if (gpts == gpc.NavigateRightButton.ToUpper ()) {  			RootWebBrowser.Document.InvokeScript ("eval"' new string[] {  				"RomFlowJS.HOST.NavigateRight();"  			});  		}  	}  }  
Magic Number,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,ControllerPollingTImer_Tick,The following statement contains a magic number: if (_clientEmulatorProcess != null) {  	for (int i = 0; i < (int)Math.Min (GamePads.Count ()' _configurationRoot.Gamepads.GamePadInformation.Count); i++) {  		var inputCombo = GamePads [i].ToString ();  		if ((_configurationRoot.Gamepads.GamePadInformation [i].QuitCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuitCombo == inputCombo) {  			if (_clientEmulatorProcess != null && _currentEmulator.IsAutoLoadAutoSave) {  				SetForegroundWindow (_clientEmulatorProcess.Handle);  				for (int j = 0; j < 10; j++) {  					SendKeys.SendWait (_currentEmulator.QuickSaveCombination);  					System.Threading.Thread.Sleep (100);  				}  				System.Threading.Thread.Sleep (1000);  			}  			_clientEmulatorProcess.CloseMainWindow ();  			_clientEmulatorProcess.Kill ();  			_clientEmulatorProcess = null;  		}  		if ((_configurationRoot.Gamepads.GamePadInformation [i].QuickSaveCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuickSaveCombo == inputCombo) {  			SetForegroundWindow (_clientEmulatorProcess.Handle);  			for (int j = 0; j < 5; j++) {  				SendKeys.SendWait (_currentEmulator.QuickSaveCombination);  				System.Threading.Thread.Sleep (100);  			}  		}  		if ((_configurationRoot.Gamepads.GamePadInformation [i].QuickLoadCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuickLoadCombo == inputCombo) {  			SetForegroundWindow (_clientEmulatorProcess.Handle);  			for (int j = 0; j < 5; j++) {  				SendKeys.SendWait (_currentEmulator.QuickLoadCombination);  				System.Threading.Thread.Sleep (100);  			}  		}  	}  }  // if there is not an emulator running' poll the game pads for navigation ques  else {  	for (int i = 0; i < Math.Min (GamePads.Count ()' _configurationRoot.Gamepads.GamePadInformation.Count); i++) {  		var gpts = GamePads [i].ToString ().ToUpper ();  		var gpc = _configurationRoot.Gamepads.GamePadInformation [i];  		if (gpts == gpc.NavigateBackButton.ToUpper ()) {  			RootWebBrowser.Document.InvokeScript ("eval"' new string[] {  				"RomFlowJS.HOST.NavigateBackward();"  			});  		}  		if (gpts == gpc.NavigateForwardButton.ToUpper ()) {  			RootWebBrowser.Document.InvokeScript ("eval"' new string[] {  				"RomFlowJS.HOST.NavigateForward();"  			});  		}  		if (gpts == gpc.NavigateUpButton.ToUpper ()) {  			RootWebBrowser.Document.InvokeScript ("eval"' new string[] {  				"RomFlowJS.HOST.NavigateUp();"  			});  		}  		if (gpts == gpc.NavigateDownButton.ToUpper ()) {  			RootWebBrowser.Document.InvokeScript ("eval"' new string[] {  				"RomFlowJS.HOST.NavigateDown();"  			});  		}  		if (gpts == gpc.NavigateLeftButton.ToUpper ()) {  			RootWebBrowser.Document.InvokeScript ("eval"' new string[] {  				"RomFlowJS.HOST.NavigateLeft();"  			});  		}  		if (gpts == gpc.NavigateRightButton.ToUpper ()) {  			RootWebBrowser.Document.InvokeScript ("eval"' new string[] {  				"RomFlowJS.HOST.NavigateRight();"  			});  		}  	}  }  
Magic Number,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,ControllerPollingTImer_Tick,The following statement contains a magic number: for (int i = 0; i < (int)Math.Min (GamePads.Count ()' _configurationRoot.Gamepads.GamePadInformation.Count); i++) {  	var inputCombo = GamePads [i].ToString ();  	if ((_configurationRoot.Gamepads.GamePadInformation [i].QuitCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuitCombo == inputCombo) {  		if (_clientEmulatorProcess != null && _currentEmulator.IsAutoLoadAutoSave) {  			SetForegroundWindow (_clientEmulatorProcess.Handle);  			for (int j = 0; j < 10; j++) {  				SendKeys.SendWait (_currentEmulator.QuickSaveCombination);  				System.Threading.Thread.Sleep (100);  			}  			System.Threading.Thread.Sleep (1000);  		}  		_clientEmulatorProcess.CloseMainWindow ();  		_clientEmulatorProcess.Kill ();  		_clientEmulatorProcess = null;  	}  	if ((_configurationRoot.Gamepads.GamePadInformation [i].QuickSaveCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuickSaveCombo == inputCombo) {  		SetForegroundWindow (_clientEmulatorProcess.Handle);  		for (int j = 0; j < 5; j++) {  			SendKeys.SendWait (_currentEmulator.QuickSaveCombination);  			System.Threading.Thread.Sleep (100);  		}  	}  	if ((_configurationRoot.Gamepads.GamePadInformation [i].QuickLoadCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuickLoadCombo == inputCombo) {  		SetForegroundWindow (_clientEmulatorProcess.Handle);  		for (int j = 0; j < 5; j++) {  			SendKeys.SendWait (_currentEmulator.QuickLoadCombination);  			System.Threading.Thread.Sleep (100);  		}  	}  }  
Magic Number,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,ControllerPollingTImer_Tick,The following statement contains a magic number: for (int i = 0; i < (int)Math.Min (GamePads.Count ()' _configurationRoot.Gamepads.GamePadInformation.Count); i++) {  	var inputCombo = GamePads [i].ToString ();  	if ((_configurationRoot.Gamepads.GamePadInformation [i].QuitCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuitCombo == inputCombo) {  		if (_clientEmulatorProcess != null && _currentEmulator.IsAutoLoadAutoSave) {  			SetForegroundWindow (_clientEmulatorProcess.Handle);  			for (int j = 0; j < 10; j++) {  				SendKeys.SendWait (_currentEmulator.QuickSaveCombination);  				System.Threading.Thread.Sleep (100);  			}  			System.Threading.Thread.Sleep (1000);  		}  		_clientEmulatorProcess.CloseMainWindow ();  		_clientEmulatorProcess.Kill ();  		_clientEmulatorProcess = null;  	}  	if ((_configurationRoot.Gamepads.GamePadInformation [i].QuickSaveCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuickSaveCombo == inputCombo) {  		SetForegroundWindow (_clientEmulatorProcess.Handle);  		for (int j = 0; j < 5; j++) {  			SendKeys.SendWait (_currentEmulator.QuickSaveCombination);  			System.Threading.Thread.Sleep (100);  		}  	}  	if ((_configurationRoot.Gamepads.GamePadInformation [i].QuickLoadCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuickLoadCombo == inputCombo) {  		SetForegroundWindow (_clientEmulatorProcess.Handle);  		for (int j = 0; j < 5; j++) {  			SendKeys.SendWait (_currentEmulator.QuickLoadCombination);  			System.Threading.Thread.Sleep (100);  		}  	}  }  
Magic Number,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,ControllerPollingTImer_Tick,The following statement contains a magic number: for (int i = 0; i < (int)Math.Min (GamePads.Count ()' _configurationRoot.Gamepads.GamePadInformation.Count); i++) {  	var inputCombo = GamePads [i].ToString ();  	if ((_configurationRoot.Gamepads.GamePadInformation [i].QuitCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuitCombo == inputCombo) {  		if (_clientEmulatorProcess != null && _currentEmulator.IsAutoLoadAutoSave) {  			SetForegroundWindow (_clientEmulatorProcess.Handle);  			for (int j = 0; j < 10; j++) {  				SendKeys.SendWait (_currentEmulator.QuickSaveCombination);  				System.Threading.Thread.Sleep (100);  			}  			System.Threading.Thread.Sleep (1000);  		}  		_clientEmulatorProcess.CloseMainWindow ();  		_clientEmulatorProcess.Kill ();  		_clientEmulatorProcess = null;  	}  	if ((_configurationRoot.Gamepads.GamePadInformation [i].QuickSaveCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuickSaveCombo == inputCombo) {  		SetForegroundWindow (_clientEmulatorProcess.Handle);  		for (int j = 0; j < 5; j++) {  			SendKeys.SendWait (_currentEmulator.QuickSaveCombination);  			System.Threading.Thread.Sleep (100);  		}  	}  	if ((_configurationRoot.Gamepads.GamePadInformation [i].QuickLoadCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuickLoadCombo == inputCombo) {  		SetForegroundWindow (_clientEmulatorProcess.Handle);  		for (int j = 0; j < 5; j++) {  			SendKeys.SendWait (_currentEmulator.QuickLoadCombination);  			System.Threading.Thread.Sleep (100);  		}  	}  }  
Magic Number,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,ControllerPollingTImer_Tick,The following statement contains a magic number: for (int i = 0; i < (int)Math.Min (GamePads.Count ()' _configurationRoot.Gamepads.GamePadInformation.Count); i++) {  	var inputCombo = GamePads [i].ToString ();  	if ((_configurationRoot.Gamepads.GamePadInformation [i].QuitCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuitCombo == inputCombo) {  		if (_clientEmulatorProcess != null && _currentEmulator.IsAutoLoadAutoSave) {  			SetForegroundWindow (_clientEmulatorProcess.Handle);  			for (int j = 0; j < 10; j++) {  				SendKeys.SendWait (_currentEmulator.QuickSaveCombination);  				System.Threading.Thread.Sleep (100);  			}  			System.Threading.Thread.Sleep (1000);  		}  		_clientEmulatorProcess.CloseMainWindow ();  		_clientEmulatorProcess.Kill ();  		_clientEmulatorProcess = null;  	}  	if ((_configurationRoot.Gamepads.GamePadInformation [i].QuickSaveCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuickSaveCombo == inputCombo) {  		SetForegroundWindow (_clientEmulatorProcess.Handle);  		for (int j = 0; j < 5; j++) {  			SendKeys.SendWait (_currentEmulator.QuickSaveCombination);  			System.Threading.Thread.Sleep (100);  		}  	}  	if ((_configurationRoot.Gamepads.GamePadInformation [i].QuickLoadCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuickLoadCombo == inputCombo) {  		SetForegroundWindow (_clientEmulatorProcess.Handle);  		for (int j = 0; j < 5; j++) {  			SendKeys.SendWait (_currentEmulator.QuickLoadCombination);  			System.Threading.Thread.Sleep (100);  		}  	}  }  
Magic Number,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,ControllerPollingTImer_Tick,The following statement contains a magic number: for (int i = 0; i < (int)Math.Min (GamePads.Count ()' _configurationRoot.Gamepads.GamePadInformation.Count); i++) {  	var inputCombo = GamePads [i].ToString ();  	if ((_configurationRoot.Gamepads.GamePadInformation [i].QuitCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuitCombo == inputCombo) {  		if (_clientEmulatorProcess != null && _currentEmulator.IsAutoLoadAutoSave) {  			SetForegroundWindow (_clientEmulatorProcess.Handle);  			for (int j = 0; j < 10; j++) {  				SendKeys.SendWait (_currentEmulator.QuickSaveCombination);  				System.Threading.Thread.Sleep (100);  			}  			System.Threading.Thread.Sleep (1000);  		}  		_clientEmulatorProcess.CloseMainWindow ();  		_clientEmulatorProcess.Kill ();  		_clientEmulatorProcess = null;  	}  	if ((_configurationRoot.Gamepads.GamePadInformation [i].QuickSaveCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuickSaveCombo == inputCombo) {  		SetForegroundWindow (_clientEmulatorProcess.Handle);  		for (int j = 0; j < 5; j++) {  			SendKeys.SendWait (_currentEmulator.QuickSaveCombination);  			System.Threading.Thread.Sleep (100);  		}  	}  	if ((_configurationRoot.Gamepads.GamePadInformation [i].QuickLoadCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuickLoadCombo == inputCombo) {  		SetForegroundWindow (_clientEmulatorProcess.Handle);  		for (int j = 0; j < 5; j++) {  			SendKeys.SendWait (_currentEmulator.QuickLoadCombination);  			System.Threading.Thread.Sleep (100);  		}  	}  }  
Magic Number,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,ControllerPollingTImer_Tick,The following statement contains a magic number: for (int i = 0; i < (int)Math.Min (GamePads.Count ()' _configurationRoot.Gamepads.GamePadInformation.Count); i++) {  	var inputCombo = GamePads [i].ToString ();  	if ((_configurationRoot.Gamepads.GamePadInformation [i].QuitCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuitCombo == inputCombo) {  		if (_clientEmulatorProcess != null && _currentEmulator.IsAutoLoadAutoSave) {  			SetForegroundWindow (_clientEmulatorProcess.Handle);  			for (int j = 0; j < 10; j++) {  				SendKeys.SendWait (_currentEmulator.QuickSaveCombination);  				System.Threading.Thread.Sleep (100);  			}  			System.Threading.Thread.Sleep (1000);  		}  		_clientEmulatorProcess.CloseMainWindow ();  		_clientEmulatorProcess.Kill ();  		_clientEmulatorProcess = null;  	}  	if ((_configurationRoot.Gamepads.GamePadInformation [i].QuickSaveCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuickSaveCombo == inputCombo) {  		SetForegroundWindow (_clientEmulatorProcess.Handle);  		for (int j = 0; j < 5; j++) {  			SendKeys.SendWait (_currentEmulator.QuickSaveCombination);  			System.Threading.Thread.Sleep (100);  		}  	}  	if ((_configurationRoot.Gamepads.GamePadInformation [i].QuickLoadCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuickLoadCombo == inputCombo) {  		SetForegroundWindow (_clientEmulatorProcess.Handle);  		for (int j = 0; j < 5; j++) {  			SendKeys.SendWait (_currentEmulator.QuickLoadCombination);  			System.Threading.Thread.Sleep (100);  		}  	}  }  
Magic Number,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,ControllerPollingTImer_Tick,The following statement contains a magic number: for (int i = 0; i < (int)Math.Min (GamePads.Count ()' _configurationRoot.Gamepads.GamePadInformation.Count); i++) {  	var inputCombo = GamePads [i].ToString ();  	if ((_configurationRoot.Gamepads.GamePadInformation [i].QuitCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuitCombo == inputCombo) {  		if (_clientEmulatorProcess != null && _currentEmulator.IsAutoLoadAutoSave) {  			SetForegroundWindow (_clientEmulatorProcess.Handle);  			for (int j = 0; j < 10; j++) {  				SendKeys.SendWait (_currentEmulator.QuickSaveCombination);  				System.Threading.Thread.Sleep (100);  			}  			System.Threading.Thread.Sleep (1000);  		}  		_clientEmulatorProcess.CloseMainWindow ();  		_clientEmulatorProcess.Kill ();  		_clientEmulatorProcess = null;  	}  	if ((_configurationRoot.Gamepads.GamePadInformation [i].QuickSaveCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuickSaveCombo == inputCombo) {  		SetForegroundWindow (_clientEmulatorProcess.Handle);  		for (int j = 0; j < 5; j++) {  			SendKeys.SendWait (_currentEmulator.QuickSaveCombination);  			System.Threading.Thread.Sleep (100);  		}  	}  	if ((_configurationRoot.Gamepads.GamePadInformation [i].QuickLoadCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuickLoadCombo == inputCombo) {  		SetForegroundWindow (_clientEmulatorProcess.Handle);  		for (int j = 0; j < 5; j++) {  			SendKeys.SendWait (_currentEmulator.QuickLoadCombination);  			System.Threading.Thread.Sleep (100);  		}  	}  }  
Magic Number,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,ControllerPollingTImer_Tick,The following statement contains a magic number: if ((_configurationRoot.Gamepads.GamePadInformation [i].QuitCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuitCombo == inputCombo) {  	if (_clientEmulatorProcess != null && _currentEmulator.IsAutoLoadAutoSave) {  		SetForegroundWindow (_clientEmulatorProcess.Handle);  		for (int j = 0; j < 10; j++) {  			SendKeys.SendWait (_currentEmulator.QuickSaveCombination);  			System.Threading.Thread.Sleep (100);  		}  		System.Threading.Thread.Sleep (1000);  	}  	_clientEmulatorProcess.CloseMainWindow ();  	_clientEmulatorProcess.Kill ();  	_clientEmulatorProcess = null;  }  
Magic Number,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,ControllerPollingTImer_Tick,The following statement contains a magic number: if ((_configurationRoot.Gamepads.GamePadInformation [i].QuitCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuitCombo == inputCombo) {  	if (_clientEmulatorProcess != null && _currentEmulator.IsAutoLoadAutoSave) {  		SetForegroundWindow (_clientEmulatorProcess.Handle);  		for (int j = 0; j < 10; j++) {  			SendKeys.SendWait (_currentEmulator.QuickSaveCombination);  			System.Threading.Thread.Sleep (100);  		}  		System.Threading.Thread.Sleep (1000);  	}  	_clientEmulatorProcess.CloseMainWindow ();  	_clientEmulatorProcess.Kill ();  	_clientEmulatorProcess = null;  }  
Magic Number,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,ControllerPollingTImer_Tick,The following statement contains a magic number: if ((_configurationRoot.Gamepads.GamePadInformation [i].QuitCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuitCombo == inputCombo) {  	if (_clientEmulatorProcess != null && _currentEmulator.IsAutoLoadAutoSave) {  		SetForegroundWindow (_clientEmulatorProcess.Handle);  		for (int j = 0; j < 10; j++) {  			SendKeys.SendWait (_currentEmulator.QuickSaveCombination);  			System.Threading.Thread.Sleep (100);  		}  		System.Threading.Thread.Sleep (1000);  	}  	_clientEmulatorProcess.CloseMainWindow ();  	_clientEmulatorProcess.Kill ();  	_clientEmulatorProcess = null;  }  
Magic Number,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,ControllerPollingTImer_Tick,The following statement contains a magic number: if (_clientEmulatorProcess != null && _currentEmulator.IsAutoLoadAutoSave) {  	SetForegroundWindow (_clientEmulatorProcess.Handle);  	for (int j = 0; j < 10; j++) {  		SendKeys.SendWait (_currentEmulator.QuickSaveCombination);  		System.Threading.Thread.Sleep (100);  	}  	System.Threading.Thread.Sleep (1000);  }  
Magic Number,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,ControllerPollingTImer_Tick,The following statement contains a magic number: if (_clientEmulatorProcess != null && _currentEmulator.IsAutoLoadAutoSave) {  	SetForegroundWindow (_clientEmulatorProcess.Handle);  	for (int j = 0; j < 10; j++) {  		SendKeys.SendWait (_currentEmulator.QuickSaveCombination);  		System.Threading.Thread.Sleep (100);  	}  	System.Threading.Thread.Sleep (1000);  }  
Magic Number,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,ControllerPollingTImer_Tick,The following statement contains a magic number: if (_clientEmulatorProcess != null && _currentEmulator.IsAutoLoadAutoSave) {  	SetForegroundWindow (_clientEmulatorProcess.Handle);  	for (int j = 0; j < 10; j++) {  		SendKeys.SendWait (_currentEmulator.QuickSaveCombination);  		System.Threading.Thread.Sleep (100);  	}  	System.Threading.Thread.Sleep (1000);  }  
Magic Number,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,ControllerPollingTImer_Tick,The following statement contains a magic number: for (int j = 0; j < 10; j++) {  	SendKeys.SendWait (_currentEmulator.QuickSaveCombination);  	System.Threading.Thread.Sleep (100);  }  
Magic Number,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,ControllerPollingTImer_Tick,The following statement contains a magic number: for (int j = 0; j < 10; j++) {  	SendKeys.SendWait (_currentEmulator.QuickSaveCombination);  	System.Threading.Thread.Sleep (100);  }  
Magic Number,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,ControllerPollingTImer_Tick,The following statement contains a magic number: System.Threading.Thread.Sleep (100);  
Magic Number,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,ControllerPollingTImer_Tick,The following statement contains a magic number: System.Threading.Thread.Sleep (1000);  
Magic Number,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,ControllerPollingTImer_Tick,The following statement contains a magic number: if ((_configurationRoot.Gamepads.GamePadInformation [i].QuickSaveCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuickSaveCombo == inputCombo) {  	SetForegroundWindow (_clientEmulatorProcess.Handle);  	for (int j = 0; j < 5; j++) {  		SendKeys.SendWait (_currentEmulator.QuickSaveCombination);  		System.Threading.Thread.Sleep (100);  	}  }  
Magic Number,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,ControllerPollingTImer_Tick,The following statement contains a magic number: if ((_configurationRoot.Gamepads.GamePadInformation [i].QuickSaveCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuickSaveCombo == inputCombo) {  	SetForegroundWindow (_clientEmulatorProcess.Handle);  	for (int j = 0; j < 5; j++) {  		SendKeys.SendWait (_currentEmulator.QuickSaveCombination);  		System.Threading.Thread.Sleep (100);  	}  }  
Magic Number,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,ControllerPollingTImer_Tick,The following statement contains a magic number: for (int j = 0; j < 5; j++) {  	SendKeys.SendWait (_currentEmulator.QuickSaveCombination);  	System.Threading.Thread.Sleep (100);  }  
Magic Number,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,ControllerPollingTImer_Tick,The following statement contains a magic number: for (int j = 0; j < 5; j++) {  	SendKeys.SendWait (_currentEmulator.QuickSaveCombination);  	System.Threading.Thread.Sleep (100);  }  
Magic Number,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,ControllerPollingTImer_Tick,The following statement contains a magic number: System.Threading.Thread.Sleep (100);  
Magic Number,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,ControllerPollingTImer_Tick,The following statement contains a magic number: if ((_configurationRoot.Gamepads.GamePadInformation [i].QuickLoadCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuickLoadCombo == inputCombo) {  	SetForegroundWindow (_clientEmulatorProcess.Handle);  	for (int j = 0; j < 5; j++) {  		SendKeys.SendWait (_currentEmulator.QuickLoadCombination);  		System.Threading.Thread.Sleep (100);  	}  }  
Magic Number,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,ControllerPollingTImer_Tick,The following statement contains a magic number: if ((_configurationRoot.Gamepads.GamePadInformation [i].QuickLoadCombo != string.Empty && inputCombo != string.Empty) && _configurationRoot.Gamepads.GamePadInformation [i].QuickLoadCombo == inputCombo) {  	SetForegroundWindow (_clientEmulatorProcess.Handle);  	for (int j = 0; j < 5; j++) {  		SendKeys.SendWait (_currentEmulator.QuickLoadCombination);  		System.Threading.Thread.Sleep (100);  	}  }  
Magic Number,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,ControllerPollingTImer_Tick,The following statement contains a magic number: for (int j = 0; j < 5; j++) {  	SendKeys.SendWait (_currentEmulator.QuickLoadCombination);  	System.Threading.Thread.Sleep (100);  }  
Magic Number,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,ControllerPollingTImer_Tick,The following statement contains a magic number: for (int j = 0; j < 5; j++) {  	SendKeys.SendWait (_currentEmulator.QuickLoadCombination);  	System.Threading.Thread.Sleep (100);  }  
Magic Number,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,ControllerPollingTImer_Tick,The following statement contains a magic number: System.Threading.Thread.Sleep (100);  
Magic Number,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,TryLoad,The following statement contains a magic number: if (_configurationRoot.Environment.GamepadPollRate == 0)  	_configurationRoot.Environment.GamepadPollRate = 250;  
Magic Number,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,TryLoad,The following statement contains a magic number: _configurationRoot.Environment.GamepadPollRate = 250;  
Magic Number,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,SpawnEmulator,The following statement contains a magic number: foreach (var qx in romList) {  	if (System.IO.Path.GetFileNameWithoutExtension (qx).ToLower ().Replace ("'"' "").Replace ("\""' "") == rom.ToLower ().Replace ("'"' "").Replace ("\""' "")) {  		_clientEmulatorProcess = new Process () {  			StartInfo = new ProcessStartInfo () {  				Arguments = runningEmulator.CommandLineParameters.Replace ("%ROM%"' "\"" + qx + "\"").Replace ("%ROMPATH%"' "\"" + System.IO.Path.GetDirectoryName (qx) + "\"")'  				FileName = runningEmulator.PathToEmulator'  				UseShellExecute = false'  				CreateNoWindow = true  			}'  			EnableRaisingEvents = true  		};  		_clientEmulatorProcess.Exited += (o' e) =>  {  			_emulatorEndTime = DateTime.Now;  			DisableLightbox ();  			Invoke (new Action (() =>  {  				Controller.PlayStats.InsertPlayTime (emulator' rom' _emulatorStartTime' _emulatorEndTime);  				_clientEmulatorProcess = null;  			}));  			Invoke (new Action (() =>  {  				if (RootWebBrowser.Document != null) {  					RootWebBrowser.Document.InvokeScript ("eval"' new string[] {  						"RomFlowJS.HOST.OnEmulatorExit();"  					});  				}  			}));  		};  		// get rid of the mouse first.  		if (_currentEmulator.Lightbox) {  			Cursor.Position = new Point (Screen.PrimaryScreen.Bounds.Width' 0);  			// ShowCursor(false);  		}  		_clientEmulatorProcess.Start ();  		_emulatorStartTime = DateTime.Now;  		while (_clientEmulatorProcess.MainWindowHandle == IntPtr.Zero) {  			_clientEmulatorProcess.Refresh ();  			System.Threading.Thread.Sleep (10);  		}  		if (_currentEmulator.Lightbox) {  			EnableLightbox ();  		}  	}  }  
Magic Number,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,SpawnEmulator,The following statement contains a magic number: if (System.IO.Path.GetFileNameWithoutExtension (qx).ToLower ().Replace ("'"' "").Replace ("\""' "") == rom.ToLower ().Replace ("'"' "").Replace ("\""' "")) {  	_clientEmulatorProcess = new Process () {  		StartInfo = new ProcessStartInfo () {  			Arguments = runningEmulator.CommandLineParameters.Replace ("%ROM%"' "\"" + qx + "\"").Replace ("%ROMPATH%"' "\"" + System.IO.Path.GetDirectoryName (qx) + "\"")'  			FileName = runningEmulator.PathToEmulator'  			UseShellExecute = false'  			CreateNoWindow = true  		}'  		EnableRaisingEvents = true  	};  	_clientEmulatorProcess.Exited += (o' e) =>  {  		_emulatorEndTime = DateTime.Now;  		DisableLightbox ();  		Invoke (new Action (() =>  {  			Controller.PlayStats.InsertPlayTime (emulator' rom' _emulatorStartTime' _emulatorEndTime);  			_clientEmulatorProcess = null;  		}));  		Invoke (new Action (() =>  {  			if (RootWebBrowser.Document != null) {  				RootWebBrowser.Document.InvokeScript ("eval"' new string[] {  					"RomFlowJS.HOST.OnEmulatorExit();"  				});  			}  		}));  	};  	// get rid of the mouse first.  	if (_currentEmulator.Lightbox) {  		Cursor.Position = new Point (Screen.PrimaryScreen.Bounds.Width' 0);  		// ShowCursor(false);  	}  	_clientEmulatorProcess.Start ();  	_emulatorStartTime = DateTime.Now;  	while (_clientEmulatorProcess.MainWindowHandle == IntPtr.Zero) {  		_clientEmulatorProcess.Refresh ();  		System.Threading.Thread.Sleep (10);  	}  	if (_currentEmulator.Lightbox) {  		EnableLightbox ();  	}  }  
Magic Number,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,SpawnEmulator,The following statement contains a magic number: while (_clientEmulatorProcess.MainWindowHandle == IntPtr.Zero) {  	_clientEmulatorProcess.Refresh ();  	System.Threading.Thread.Sleep (10);  }  
Magic Number,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,SpawnEmulator,The following statement contains a magic number: System.Threading.Thread.Sleep (10);  
Magic Number,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,EnableLightbox,The following statement contains a magic number: ShowWindow (_clientEmulatorProcess.MainWindowHandle' 3);  
Magic Number,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,EnableLightbox,The following statement contains a magic number: MoveWindow (_clientEmulatorProcess.MainWindowHandle' 40' 40' System.Windows.Forms.SystemInformation.PrimaryMonitorSize.Width - 80' System.Windows.Forms.SystemInformation.PrimaryMonitorSize.Height - 80' true);  
Magic Number,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,EnableLightbox,The following statement contains a magic number: MoveWindow (_clientEmulatorProcess.MainWindowHandle' 40' 40' System.Windows.Forms.SystemInformation.PrimaryMonitorSize.Width - 80' System.Windows.Forms.SystemInformation.PrimaryMonitorSize.Height - 80' true);  
Magic Number,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,EnableLightbox,The following statement contains a magic number: MoveWindow (_clientEmulatorProcess.MainWindowHandle' 40' 40' System.Windows.Forms.SystemInformation.PrimaryMonitorSize.Width - 80' System.Windows.Forms.SystemInformation.PrimaryMonitorSize.Height - 80' true);  
Magic Number,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,EnableLightbox,The following statement contains a magic number: MoveWindow (_clientEmulatorProcess.MainWindowHandle' 40' 40' System.Windows.Forms.SystemInformation.PrimaryMonitorSize.Width - 80' System.Windows.Forms.SystemInformation.PrimaryMonitorSize.Height - 80' true);  
Magic Number,RomulatorFrontend.View,MainWindow,C:\repos\longjoel_Romflow\RomulatorFrontend\View\MainWindow.cs,EnableLightbox,The following statement contains a magic number: System.Threading.Thread.Sleep (100);  
