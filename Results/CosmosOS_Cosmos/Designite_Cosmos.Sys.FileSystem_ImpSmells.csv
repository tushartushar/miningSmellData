Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Cosmos.Sys.FileSystem.Ext2,Ext2,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\Ext2\Ext2.cs,GetDirectoryListing,Cyclomatic complexity of the method is 10
Long Identifier,Cosmos.Sys.FileSystem.Ext2,Ext2,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\Ext2\Ext2.cs,ReadINodeBlock,The length of the parameter xIndirectBlockRefsPerDataBlock is 30.
Long Statement,Cosmos.Sys.FileSystem.Ext2,Ext2,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\Ext2\Ext2.cs,ToUInt32,The length of the statement  "            return (uint)((((buffer[index + 3] << 0x18) | (buffer[index + 2] << 0x10)) | (buffer[index + 1] << 8)) | buffer[index]); " is 120.
Long Statement,Cosmos.Sys.FileSystem.FAT32,FAT32,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\FAT32\FAT.cs,Format,The length of the statement  "            FileAllocationTable = new FileAllocationTableFAT32(this' p' BootSector.ReservedSectorCount' (uint)(BootSector.ReservedSectorCount + BootSector.FATsz16)); " is 153.
Magic Number,Cosmos.Sys.FileSystem,MBR,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\MBR.cs,MBR,The following statement contains a magic number: Partition = new IBMPartitionInformation[4];
Magic Number,Cosmos.Sys.FileSystem,MBR,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\MBR.cs,MBR,The following statement contains a magic number: Partition[2] = new IBMPartitionInformation(this' 2);
Magic Number,Cosmos.Sys.FileSystem,MBR,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\MBR.cs,MBR,The following statement contains a magic number: Partition[2] = new IBMPartitionInformation(this' 2);
Magic Number,Cosmos.Sys.FileSystem,MBR,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\MBR.cs,MBR,The following statement contains a magic number: Partition[3] = new IBMPartitionInformation(this' 3);
Magic Number,Cosmos.Sys.FileSystem,MBR,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\MBR.cs,MBR,The following statement contains a magic number: Partition[3] = new IBMPartitionInformation(this' 3);
Magic Number,Cosmos.Sys.FileSystem,MBR,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\MBR.cs,Save,The following statement contains a magic number: Sector[510] = 0x55;
Magic Number,Cosmos.Sys.FileSystem,MBR,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\MBR.cs,Save,The following statement contains a magic number: Sector[511] = 0xaa;
Magic Number,Cosmos.Sys.FileSystem,IBMPartitionInformation,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\MBR.cs,IBMPartitionInformation,The following statement contains a magic number: this.offset=446+16*index;
Magic Number,Cosmos.Sys.FileSystem,IBMPartitionInformation,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\MBR.cs,IBMPartitionInformation,The following statement contains a magic number: this.offset=446+16*index;
Magic Number,Cosmos.Sys.FileSystem,MBT,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\MBT.cs,getPartitions,The following statement contains a magic number: !(xBlockContents[xBlockDev.BlockSize - 2] == 0x55 && xBlockContents[xBlockDev.BlockSize - 1] == 0xAA)
Magic Number,Cosmos.Sys.FileSystem,MBT,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\MBT.cs,getPartitions,The following statement contains a magic number: xContentsIndex += 16;
Magic Number,Cosmos.Sys.FileSystem,MBT,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\MBT.cs,getPartitions,The following statement contains a magic number: xContentsIndex += 8;
Magic Number,Cosmos.Sys.FileSystem,MBT,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\MBT.cs,getPartitions,The following statement contains a magic number: xContentsIndex += 4;
Magic Number,Cosmos.Sys.FileSystem,MBT,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\MBT.cs,getPartitions,The following statement contains a magic number: xContentsIndex += 4;
Magic Number,Cosmos.Sys.FileSystem,MBT,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\MBT.cs,getPartitions,The following statement contains a magic number: xStart += 2;
Magic Number,Cosmos.Sys.FileSystem,MBT,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\MBT.cs,getPartitions,The following statement contains a magic number: j < 4
Magic Number,Cosmos.Sys.FileSystem.Ext2,Ext2,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\Ext2\Ext2.cs,Initialize,The following statement contains a magic number: mBackend.ReadBlock(2'                                 mBuffer);
Magic Number,Cosmos.Sys.FileSystem.Ext2,Ext2,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\Ext2\Ext2.cs,Initialize,The following statement contains a magic number: Console.WriteLine("INode#3: " + mBufferAddress[2]);
Magic Number,Cosmos.Sys.FileSystem.Ext2,Ext2,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\Ext2\Ext2.cs,Initialize,The following statement contains a magic number: Console.WriteLine("INode#4: " + mBufferAddress[3]);
Magic Number,Cosmos.Sys.FileSystem.Ext2,Ext2,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\Ext2\Ext2.cs,Initialize,The following statement contains a magic number: xATABlock = ( BlockSize * 2 ) / mBackend.BlockSize ;
Magic Number,Cosmos.Sys.FileSystem.Ext2,Ext2,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\Ext2\Ext2.cs,Initialize,The following statement contains a magic number: BlockSize == 1024
Magic Number,Cosmos.Sys.FileSystem.Ext2,Ext2,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\Ext2\Ext2.cs,Initialize,The following statement contains a magic number: xATABlock += (uint)(i / 16);
Magic Number,Cosmos.Sys.FileSystem.Ext2,Ext2,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\Ext2\Ext2.cs,Initialize,The following statement contains a magic number: (i % 16) == 0
Magic Number,Cosmos.Sys.FileSystem.Ext2,Ext2,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\Ext2\Ext2.cs,Initialize,The following statement contains a magic number: mGroupDescriptors[i] = xDescriptorPtr[i % 16];
Magic Number,Cosmos.Sys.FileSystem.Ext2,Ext2,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\Ext2\Ext2.cs,GetBitState,The following statement contains a magic number: var xPhyBlock = aBitmapStart * 8;
Magic Number,Cosmos.Sys.FileSystem.Ext2,Ext2,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\Ext2\Ext2.cs,GetBitState,The following statement contains a magic number: xPhyBlock += (uint)aIndex % 4096;
Magic Number,Cosmos.Sys.FileSystem.Ext2,Ext2,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\Ext2\Ext2.cs,GetBitState,The following statement contains a magic number: aIndex /= 4096;
Magic Number,Cosmos.Sys.FileSystem.Ext2,Ext2,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\Ext2\Ext2.cs,GetBitState,The following statement contains a magic number: int xBufferIndex = aIndex / 8;
Magic Number,Cosmos.Sys.FileSystem.Ext2,Ext2,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\Ext2\Ext2.cs,GetBitState,The following statement contains a magic number: aIndex /= 8;
Magic Number,Cosmos.Sys.FileSystem.Ext2,Ext2,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\Ext2\Ext2.cs,ToUInt32,The following statement contains a magic number: return (uint)((((buffer[index + 3] << 0x18) | (buffer[index + 2] << 0x10)) | (buffer[index + 1] << 8)) | buffer[index]);
Magic Number,Cosmos.Sys.FileSystem.Ext2,Ext2,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\Ext2\Ext2.cs,ToUInt32,The following statement contains a magic number: return (uint)((((buffer[index + 3] << 0x18) | (buffer[index + 2] << 0x10)) | (buffer[index + 1] << 8)) | buffer[index]);
Magic Number,Cosmos.Sys.FileSystem.Ext2,Ext2,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\Ext2\Ext2.cs,ToUInt32,The following statement contains a magic number: return (uint)((((buffer[index + 3] << 0x18) | (buffer[index + 2] << 0x10)) | (buffer[index + 1] << 8)) | buffer[index]);
Magic Number,Cosmos.Sys.FileSystem.Ext2,Ext2,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\Ext2\Ext2.cs,ToUInt16,The following statement contains a magic number: return (ushort)((buffer[index + 1] << 8) | buffer[index]);
Magic Number,Cosmos.Sys.FileSystem.Ext2,Ext2,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\Ext2\Ext2.cs,GetDirectoryListing,The following statement contains a magic number: var xResult = new List<FilesystemEntry>(10);
Magic Number,Cosmos.Sys.FileSystem.Ext2,Ext2,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\Ext2\Ext2.cs,GetDirectoryListing,The following statement contains a magic number: var xRecLength = ToUInt16(xFSBuffer' xIndex + 4);
Magic Number,Cosmos.Sys.FileSystem.Ext2,Ext2,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\Ext2\Ext2.cs,GetDirectoryListing,The following statement contains a magic number: var xNameLength = xFSBuffer[xIndex + 6];
Magic Number,Cosmos.Sys.FileSystem.Ext2,Ext2,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\Ext2\Ext2.cs,GetDirectoryListing,The following statement contains a magic number: var xFileType = xFSBuffer[xIndex + 7];
Magic Number,Cosmos.Sys.FileSystem.Ext2,Ext2,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\Ext2\Ext2.cs,GetDirectoryListing,The following statement contains a magic number: var xFSEntry = new FilesystemEntry                                  {                                      Id = xINodeNumber'                                      IsDirectory = (xFileType == 2)'                                      IsReadonly = true'                                      Filesystem = this                                  };
Magic Number,Cosmos.Sys.FileSystem.Ext2,Ext2,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\Ext2\Ext2.cs,GetDirectoryListing,The following statement contains a magic number: xName[c] = (char)xFSBuffer[xIndex + 8 + c];
Magic Number,Cosmos.Sys.FileSystem.Ext2,Ext2,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\Ext2\Ext2.cs,GetDirectoryListing,The following statement contains a magic number: !(xNameLength == 2 && xFSBuffer[xIndex + 8] == (byte)'.' && xFSBuffer[xIndex + 9] == (byte)'.')
Magic Number,Cosmos.Sys.FileSystem.Ext2,Ext2,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\Ext2\Ext2.cs,GetDirectoryListing,The following statement contains a magic number: !(xNameLength == 2 && xFSBuffer[xIndex + 8] == (byte)'.' && xFSBuffer[xIndex + 9] == (byte)'.')
Magic Number,Cosmos.Sys.FileSystem.Ext2,Ext2,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\Ext2\Ext2.cs,GetDirectoryListing,The following statement contains a magic number: !(xNameLength == 2 && xFSBuffer[xIndex + 8] == (byte)'.' && xFSBuffer[xIndex + 9] == (byte)'.')
Magic Number,Cosmos.Sys.FileSystem.Ext2,Ext2,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\Ext2\Ext2.cs,GetDirectoryListing,The following statement contains a magic number: xIteration == 5
Magic Number,Cosmos.Sys.FileSystem.Ext2,Ext2,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\Ext2\Ext2.cs,ReadINodeBlock,The following statement contains a magic number: aBlockId >= 0 && aBlockId <= 11
Magic Number,Cosmos.Sys.FileSystem.Ext2,Ext2,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\Ext2\Ext2.cs,BlockDeviceContainsExt2,The following statement contains a magic number: aDevice.ReadBlock(2'                                    xBuffer);
Magic Number,Cosmos.Sys.FileSystem.Ext2,Ext2,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\Ext2\Ext2.cs,BlockDeviceContainsExt2,The following statement contains a magic number: bool xResult = (xBuffer[56] == 0x53 && xBuffer[57] == 0xEF);
Magic Number,Cosmos.Sys.FileSystem.Ext2,Ext2,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\Ext2\Ext2.cs,BlockDeviceContainsExt2,The following statement contains a magic number: bool xResult = (xBuffer[56] == 0x53 && xBuffer[57] == 0xEF);
Magic Number,Cosmos.Sys.FileSystem.Ext2,Ext2,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\Ext2\Ext2.cs,BlockDeviceContainsExt2,The following statement contains a magic number: aDevice.BlockCount > 3
Magic Number,Cosmos.Sys.FileSystem.FAT32,FAT32,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\FAT32\FAT.cs,Format,The following statement contains a magic number: BootSector.BPB_FATSz32 = (BootSector.TotalSectors32 * 512 * 4 / clustersize + p.BlockSize - 1) / p.BlockSize;
Magic Number,Cosmos.Sys.FileSystem.FAT32,FAT32,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\FAT32\FAT.cs,Format,The following statement contains a magic number: BootSector.BPB_FATSz32 = (BootSector.TotalSectors32 * 512 * 4 / clustersize + p.BlockSize - 1) / p.BlockSize;
Magic Number,Cosmos.Sys.FileSystem.FAT32,FAT32,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\FAT32\FAT.cs,Format,The following statement contains a magic number: BootSector.ReservedSectorCount = 32;
Magic Number,Cosmos.Sys.FileSystem.FAT32,FAT32,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\FAT32\FAT.cs,Format,The following statement contains a magic number: BootSector.NumberFATs = 2;
Magic Number,Cosmos.Sys.FileSystem.FAT32,FAT32,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\FAT32\FAT.cs,Format,The following statement contains a magic number: FileSystemInfo32.Free_Count = (BootSector.TotalSectors32 / BootSector.SectorsPerCluster -2);
Magic Number,Cosmos.Sys.FileSystem.FAT32,FAT32,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\FAT32\FAT.cs,FirstSectorOfCluster,The following statement contains a magic number: return (cluster - 2) * SectorsPerCluster + FirstDataSector;
Magic Number,Cosmos.Sys.FileSystem.FAT32,FileAllocationTableFAT32,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\FAT32\FileAllocationTable.cs,FileAllocationTableFAT32,The following statement contains a magic number: switch (fat32.BootSector.BytesPerSec/4)              {                  case 128:                      Shift = 7;                      Mask = 0x7f;                      break;                  default:                      throw new Exception("weird sector size");              }
Magic Number,Cosmos.Sys.FileSystem.FAT32,FileAllocationTableFAT32,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\FAT32\FileAllocationTable.cs,FileAllocationTableFAT32,The following statement contains a magic number: switch (fat32.BootSector.BytesPerSec/4)              {                  case 128:                      Shift = 7;                      Mask = 0x7f;                      break;                  default:                      throw new Exception("weird sector size");              }
Magic Number,Cosmos.Sys.FileSystem.FAT32,FileAllocationTableFAT32,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\FAT32\FileAllocationTable.cs,FileAllocationTableFAT32,The following statement contains a magic number: switch (fat32.BootSector.BytesPerSec/4)              {                  case 128:                      Shift = 7;                      Mask = 0x7f;                      break;                  default:                      throw new Exception("weird sector size");              }
Magic Number,Cosmos.Sys.FileSystem.FAT32,FileAllocationTableFAT32,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\FAT32\FileAllocationTable.cs,Format,The following statement contains a magic number: b[2] = 0xff;
Magic Number,Cosmos.Sys.FileSystem.FAT32,FileAllocationTableFAT32,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\FAT32\FileAllocationTable.cs,Format,The following statement contains a magic number: b[3] = 0xff;
Magic Number,Cosmos.Sys.FileSystem.FAT32,FileAllocationTableFAT32,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\FAT32\FileAllocationTable.cs,Format,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes((uint)0x0ffffff8)' 0' b' 4' 4);
Magic Number,Cosmos.Sys.FileSystem.FAT32,FileAllocationTableFAT32,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\FAT32\FileAllocationTable.cs,Format,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes((uint)0x0ffffff8)' 0' b' 4' 4);
Magic Number,Cosmos.Sys.FileSystem.FAT32,FileAllocationTableFAT32,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\FAT32\FileAllocationTable.cs,GetFreeCluster,The following statement contains a magic number: uint actualcluster = (start + i - 2) % (TotalClusters) + 2;
Magic Number,Cosmos.Sys.FileSystem.FAT32,FileAllocationTableFAT32,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\FAT32\FileAllocationTable.cs,GetFreeCluster,The following statement contains a magic number: uint actualcluster = (start + i - 2) % (TotalClusters) + 2;
Magic Number,Cosmos.Sys.FileSystem.FAT32,FileAllocationTableFAT32,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\FAT32\FileAllocationTable.cs,ReadClusterAllocation,The following statement contains a magic number: return BitConverter.ToUInt32(data'(int)(index<<2));
Magic Number,Cosmos.Sys.FileSystem.FAT32,FileAllocationTableFAT32,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\FAT32\FileAllocationTable.cs,WriteClusterAllocation,The following statement contains a magic number: index <<= 2;
Magic Number,Cosmos.Sys.FileSystem.FAT32,FileAllocationTableFAT32,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\FAT32\FileAllocationTable.cs,WriteClusterAllocation,The following statement contains a magic number: data[index++] = b[2];
Magic Number,Cosmos.Sys.FileSystem.FAT32,FileAllocationTableFAT32,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel.FileSystems\FAT32\FileAllocationTable.cs,WriteClusterAllocation,The following statement contains a magic number: data[index++] = b[3];
