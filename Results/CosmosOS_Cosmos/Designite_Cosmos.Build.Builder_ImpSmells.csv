Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Cosmos.Build.Builder,CosmosTask,C:\repos\CosmosOS_Cosmos\source\Cosmos.Build.Builder\CosmosTask.cs,CheckForInno,The length of the statement  "      using (var xKey = Registry.LocalMachine.OpenSubKey(@"SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Inno Setup 5_is1"' false)) { " is 133.
Long Statement,Cosmos.Build.Builder,CosmosTask,C:\repos\CosmosOS_Cosmos\source\Cosmos.Build.Builder\CosmosTask.cs,Pack,The length of the statement  "      string xParams = $"{Quoted(project)} /nodeReuse:False /t:Restore;Pack /maxcpucount /p:PackageOutputPath={Quoted(destDir)}"; " is 123.
Long Statement,Cosmos.Build.Builder,CosmosTask,C:\repos\CosmosOS_Cosmos\source\Cosmos.Build.Builder\CosmosTask.cs,Publish,The length of the statement  "      string xParams = $"{Quoted(project)} /nodeReuse:False /t:Publish /maxcpucount /p:RuntimeIdentifier=win7-x86 /p:PublishDir={Quoted(destDir)}"; " is 141.
Long Statement,Cosmos.Build.Builder,CosmosTask,C:\repos\CosmosOS_Cosmos\source\Cosmos.Build.Builder\CosmosTask.cs,CreateSetup,The length of the statement  "      Log.WriteLine($"  {xISCC} /Q {Quoted(mInnoFile)} /dBuildConfiguration={xCfg} /dVSVersion={vsVersionConfiguration} /dChangeSetVersion={Quoted(mReleaseNo.ToString())}"); " is 167.
Long Statement,Cosmos.Build.Builder,CosmosTask,C:\repos\CosmosOS_Cosmos\source\Cosmos.Build.Builder\CosmosTask.cs,CreateSetup,The length of the statement  "      StartConsole(xISCC' $"/Q {Quoted(mInnoFile)} /dBuildConfiguration={xCfg} /dVSVersion={vsVersionConfiguration} /dChangeSetVersion={Quoted(mReleaseNo.ToString())}"); " is 163.
Long Statement,Cosmos.Build.Builder,MainWindow,C:\repos\CosmosOS_Cosmos\source\Cosmos.Build.Builder\MainWindow.xaml.cs,Window_Loaded,The length of the statement  "        MessageBox.Show("Builder not meant to be called directly. Use install.bat instead."' "Error"' MessageBoxButton.OK' MessageBoxImage.Error); " is 138.
Long Statement,Cosmos.Build.Builder,MainWindow,C:\repos\CosmosOS_Cosmos\source\Cosmos.Build.Builder\MainWindow.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Cosmos.Build.Builder;component/mainwindow.xaml"' System.UriKind.Relative); " is 120.
Long Statement,Cosmos.Build.Builder,MainWindow,C:\repos\CosmosOS_Cosmos\source\Cosmos.Build.Builder\MainWindow.xaml.cs,Connect,The length of the statement  "            ((Cosmos.Build.Builder.MainWindow)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.Window_SizeChanged); " is 127.
Long Statement,Cosmos.Build.Builder,MainWindow,C:\repos\CosmosOS_Cosmos\source\Cosmos.Build.Builder\MainWindow.xaml.cs,Connect,The length of the statement  "            ((Cosmos.Build.Builder.MainWindow)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.Window_Closing); " is 121.
Magic Number,Cosmos.Build.Builder,CosmosTask,C:\repos\CosmosOS_Cosmos\source\Cosmos.Build.Builder\CosmosTask.cs,CheckIfVSRunning,The following statement contains a magic number: int xSeconds = 500;
Magic Number,Cosmos.Build.Builder,CosmosTask,C:\repos\CosmosOS_Cosmos\source\Cosmos.Build.Builder\CosmosTask.cs,CheckIfVSRunning,The following statement contains a magic number: if (Debugger.IsAttached) {          Log.WriteLine("Check if Visual Studio is running is ignored by debugging of Builder.");        } else {          Log.WriteLine("Check if Visual Studio is running.");          if (IsRunning("devenv")) {            Log.WriteLine("--Visual Studio is running.");            Log.WriteLine("--Waiting " + xSeconds + " seconds to see if Visual Studio exits.");            // VS doesnt exit right away and user can try devkit again after VS window has closed but is still running.            // So we wait a few seconds first.            if (WaitForExit("devenv"' xSeconds * 1000)) {              throw new Exception("Visual Studio is running. Please close it or kill it in task manager.");            }          }        }
Magic Number,Cosmos.Build.Builder,MainWindow,C:\repos\CosmosOS_Cosmos\source\Cosmos.Build.Builder\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: for (int i = 0; i < mTailLineCount; i++) {          var xTextBlock = new TextBlock();          xTextBlock.Background = Brushes.Black;          xTextBlock.Foreground = Brushes.Green;          xTextBlock.FontSize = 16;          mTailLines.Add(xTextBlock);          spnlTail.Children.Add(xTextBlock);        }
Magic Number,Cosmos.Build.Builder,MainWindow,C:\repos\CosmosOS_Cosmos\source\Cosmos.Build.Builder\MainWindow.xaml.cs,ThreadDone,The following statement contains a magic number: Dispatcher.Invoke(DispatcherPriority.Normal' (Action)delegate () {          if (App.StayOpen == false) {            mCloseTimer = new DispatcherTimer();            mCloseTimer.Interval = TimeSpan.FromSeconds(5);            mCloseTimer.Tick += delegate {              mCloseTimer.Stop();              if (mPreventAutoClose) {                if (WindowState == WindowState.Minimized) {                  WindowState = WindowState.Normal;                }              } else {                Close();              }            };            mCloseTimer.Start();          }        });
Magic Number,Cosmos.Build.Builder,MainWindow,C:\repos\CosmosOS_Cosmos\source\Cosmos.Build.Builder\MainWindow.xaml.cs,Log_LogSection,The following statement contains a magic number: Dispatcher.Invoke(DispatcherPriority.Normal' (Action)delegate () {          Title = aLine;            ClearTail();          tblkTail.Text = mTailCaption + aLine;            mClipboard.AppendLine();          mClipboard.AppendLine(new string('='' aLine.Length));          mClipboard.AppendLine(aLine);          mClipboard.AppendLine(new string('='' aLine.Length));          mClipboard.AppendLine();            mSection = new TextBlock();          mSection.Text = aLine;          mSection.Background = Brushes.LightGray;          mSection.Foreground = Brushes.Green;          mSection.FontSize = 18;          mSection.FontWeight = FontWeights.Bold;          mSection.MouseUp += new MouseButtonEventHandler(mSection_MouseUp);          spnlLog.Children.Add(mSection);            mContent = new TextBlock();          mContent.Visibility = Visibility.Collapsed;          spnlLog.Children.Add(mContent);          mSection.Tag = mContent;        });
Magic Number,Cosmos.Build.Builder,MainWindow,C:\repos\CosmosOS_Cosmos\source\Cosmos.Build.Builder\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 4 "..\..\MainWindow.xaml"              ((Cosmos.Build.Builder.MainWindow)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 4 "..\..\MainWindow.xaml"              ((Cosmos.Build.Builder.MainWindow)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.Window_SizeChanged);                            #line default              #line hidden                            #line 4 "..\..\MainWindow.xaml"              ((Cosmos.Build.Builder.MainWindow)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.Window_Closing);                            #line default              #line hidden              return;              case 2:              this.butnCopy = ((System.Windows.Controls.Button)(target));                            #line 7 "..\..\MainWindow.xaml"              this.butnCopy.Click += new System.Windows.RoutedEventHandler(this.butnCopy_Click);                            #line default              #line hidden              return;              case 3:              this.tblkTail = ((System.Windows.Controls.TextBlock)(target));              return;              case 4:              this.spnlTail = ((System.Windows.Controls.StackPanel)(target));              return;              case 5:              this.spnlLog = ((System.Windows.Controls.StackPanel)(target));              return;              }
Magic Number,Cosmos.Build.Builder,MainWindow,C:\repos\CosmosOS_Cosmos\source\Cosmos.Build.Builder\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 4 "..\..\MainWindow.xaml"              ((Cosmos.Build.Builder.MainWindow)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 4 "..\..\MainWindow.xaml"              ((Cosmos.Build.Builder.MainWindow)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.Window_SizeChanged);                            #line default              #line hidden                            #line 4 "..\..\MainWindow.xaml"              ((Cosmos.Build.Builder.MainWindow)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.Window_Closing);                            #line default              #line hidden              return;              case 2:              this.butnCopy = ((System.Windows.Controls.Button)(target));                            #line 7 "..\..\MainWindow.xaml"              this.butnCopy.Click += new System.Windows.RoutedEventHandler(this.butnCopy_Click);                            #line default              #line hidden              return;              case 3:              this.tblkTail = ((System.Windows.Controls.TextBlock)(target));              return;              case 4:              this.spnlTail = ((System.Windows.Controls.StackPanel)(target));              return;              case 5:              this.spnlLog = ((System.Windows.Controls.StackPanel)(target));              return;              }
Magic Number,Cosmos.Build.Builder,MainWindow,C:\repos\CosmosOS_Cosmos\source\Cosmos.Build.Builder\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 4 "..\..\MainWindow.xaml"              ((Cosmos.Build.Builder.MainWindow)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 4 "..\..\MainWindow.xaml"              ((Cosmos.Build.Builder.MainWindow)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.Window_SizeChanged);                            #line default              #line hidden                            #line 4 "..\..\MainWindow.xaml"              ((Cosmos.Build.Builder.MainWindow)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.Window_Closing);                            #line default              #line hidden              return;              case 2:              this.butnCopy = ((System.Windows.Controls.Button)(target));                            #line 7 "..\..\MainWindow.xaml"              this.butnCopy.Click += new System.Windows.RoutedEventHandler(this.butnCopy_Click);                            #line default              #line hidden              return;              case 3:              this.tblkTail = ((System.Windows.Controls.TextBlock)(target));              return;              case 4:              this.spnlTail = ((System.Windows.Controls.StackPanel)(target));              return;              case 5:              this.spnlLog = ((System.Windows.Controls.StackPanel)(target));              return;              }
Magic Number,Cosmos.Build.Builder,MainWindow,C:\repos\CosmosOS_Cosmos\source\Cosmos.Build.Builder\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 4 "..\..\MainWindow.xaml"              ((Cosmos.Build.Builder.MainWindow)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 4 "..\..\MainWindow.xaml"              ((Cosmos.Build.Builder.MainWindow)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.Window_SizeChanged);                            #line default              #line hidden                            #line 4 "..\..\MainWindow.xaml"              ((Cosmos.Build.Builder.MainWindow)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.Window_Closing);                            #line default              #line hidden              return;              case 2:              this.butnCopy = ((System.Windows.Controls.Button)(target));                            #line 7 "..\..\MainWindow.xaml"              this.butnCopy.Click += new System.Windows.RoutedEventHandler(this.butnCopy_Click);                            #line default              #line hidden              return;              case 3:              this.tblkTail = ((System.Windows.Controls.TextBlock)(target));              return;              case 4:              this.spnlTail = ((System.Windows.Controls.StackPanel)(target));              return;              case 5:              this.spnlLog = ((System.Windows.Controls.StackPanel)(target));              return;              }
Missing Default,Cosmos.Build.Builder,MainWindow,C:\repos\CosmosOS_Cosmos\source\Cosmos.Build.Builder\MainWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 4 "..\..\MainWindow.xaml"              ((Cosmos.Build.Builder.MainWindow)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden                            #line 4 "..\..\MainWindow.xaml"              ((Cosmos.Build.Builder.MainWindow)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.Window_SizeChanged);                            #line default              #line hidden                            #line 4 "..\..\MainWindow.xaml"              ((Cosmos.Build.Builder.MainWindow)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.Window_Closing);                            #line default              #line hidden              return;              case 2:              this.butnCopy = ((System.Windows.Controls.Button)(target));                            #line 7 "..\..\MainWindow.xaml"              this.butnCopy.Click += new System.Windows.RoutedEventHandler(this.butnCopy_Click);                            #line default              #line hidden              return;              case 3:              this.tblkTail = ((System.Windows.Controls.TextBlock)(target));              return;              case 4:              this.spnlTail = ((System.Windows.Controls.StackPanel)(target));              return;              case 5:              this.spnlLog = ((System.Windows.Controls.StackPanel)(target));              return;              }
