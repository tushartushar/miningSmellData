Implementation smell,Namespace,Class,File,Method,Description
Long Method,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,ConvertButton_Click,The method has 162 lines of code.
Long Method,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,TestButton2_Click,The method has 154 lines of code.
Long Method,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The method has 173 lines of code.
Long Method,Orvid.Compression,LZMADecoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,Code,The method has 114 lines of code.
Long Method,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetOptimum,The method has 449 lines of code.
Long Method,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,CodeOneBlock,The method has 156 lines of code.
Long Method,Orvid.Compression,LZBinTree,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetMatches,The method has 122 lines of code.
Complex Method,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,ConvertButton_Click,Cyclomatic complexity of the method is 15
Complex Method,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,TestButton2_Click,Cyclomatic complexity of the method is 18
Complex Method,Orvid.Compression,LZMADecoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,Code,Cyclomatic complexity of the method is 15
Complex Method,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetOptimum,Cyclomatic complexity of the method is 64
Complex Method,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,CodeOneBlock,Cyclomatic complexity of the method is 24
Complex Method,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,SetCoderProperties,Cyclomatic complexity of the method is 26
Complex Method,Orvid.Compression,LZBinTree,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetMatches,Cyclomatic complexity of the method is 22
Long Parameter List,Orvid.Compression,LZMADecoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,Code,The method has 5 parameters. Parameters: inStream' outStream' inSize' outSize' progress
Long Parameter List,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,Code,The method has 5 parameters. Parameters: inStream' outStream' inSize' outSize' progress
Long Parameter List,Orvid.Compression,RangeBitTreeEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,ReverseEncode,The method has 5 parameters. Parameters: Models' startIndex' rangeEncoder' NumBitLevels' symbol
Long Parameter List,Orvid.Compression,ICoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,Code,The method has 5 parameters. Parameters: inStream' outStream' inSize' outSize' progress
Long Identifier,Orvid.Compression,LZMABase,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,,The length of the parameter kNumLitPosStatesBitsEncodingMax is 31.
Long Statement,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,ConvertButton_Click,The length of the statement  "                    if (MessageBox.Show("A file at '" + OutputFileName + "' already exists! Would you like to overwrite it?"' "File Already Exists"' MessageBoxButtons.YesNoCancel) == System.Windows.Forms.DialogResult.Yes) " is 201.
Long Statement,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,button1_Click,The length of the statement  "            //Orvid.Graphics.Image i = opfFont.GetCharacter(Int32.Parse(textBox2.Text)' Orvid.Graphics.FontSupport.FontStyle.Normal); " is 121.
Long Statement,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,CompressionComboBox_SelectedIndexChanged,The length of the statement  "            CompressionMode = (CompressionType)Enum.Parse(typeof(CompressionType)' (String)CompressionComboBox.Items[CompressionComboBox.SelectedIndex]); " is 141.
Long Statement,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,TestButton2_Click,The length of the statement  "                    i = Orvid.Graphics.ImageManipulator.Resize(i' new Orvid.Graphics.Vec2(b.Width / 4' b.Height / 4)' Orvid.Graphics.ImageManipulator.ScalingAlgorithm.Bicubic); " is 156.
Long Statement,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,TestButton2_Click,The length of the statement  "                        i = Orvid.Graphics.ImageManipulator.Resize(i' new Orvid.Graphics.Vec2(b.Width / 4' b.Height / 4)' Orvid.Graphics.ImageManipulator.ScalingAlgorithm.Bilinear); " is 157.
Long Statement,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,TestButton2_Click,The length of the statement  "                        i = Orvid.Graphics.ImageManipulator.Resize(i' new Orvid.Graphics.Vec2(b.Width / 2' b.Height / 2)' Orvid.Graphics.ImageManipulator.ScalingAlgorithm.NearestNeighbor); " is 164.
Long Statement,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The length of the statement  "            this.ConvertButton.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.5F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 162.
Long Statement,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The length of the statement  "            this.CompressionComboBox.SelectedIndexChanged += new System.EventHandler(this.CompressionComboBox_SelectedIndexChanged); " is 120.
Long Statement,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The length of the statement  "            this.pictureBox2.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 147.
Long Statement,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetOptimum,The length of the statement  "                            UInt32 nextMatchPrice = curAndLenCharPrice + _isMatch[(state2.Index << LZMABase.kNumPosStatesBitsMax) + posStateNext].GetPrice1(); " is 130.
Long Statement,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetOptimum,The length of the statement  "                                    UInt32 nextMatchPrice = curAndLenCharPrice + _isMatch[(state2.Index << LZMABase.kNumPosStatesBitsMax) + posStateNext].GetPrice1(); " is 130.
Long Statement,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,FillDistancesPrices,The length of the statement  "                    _posSlotPrices[st + posSlot] += ((((posSlot >> 1) - 1) - LZMABase.kNumAlignBits) << RangeBitEncoder.kNumBitPriceShiftBits); " is 123.
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,ConvertToByteArray,The following statement contains a magic number: bitnum += 8;
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,ConvertToByteArray,The following statement contains a magic number: byte[] arr2 = new byte[m.Length + 4];
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,ConvertToByteArray,The following statement contains a magic number: Array.Copy(tmp' arr2' 4);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,ConvertToByteArray,The following statement contains a magic number: Array.Copy(tmp' 0' arr2' 4' m.Length);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,GetGreyscaleByte,The following statement contains a magic number: return (byte)((0.2125 * c.R) + (0.7154 * c.G) + (0.0721 * c.B));
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,GetGreyscaleByte,The following statement contains a magic number: return (byte)((0.2125 * c.R) + (0.7154 * c.G) + (0.0721 * c.B));
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,GetGreyscaleByte,The following statement contains a magic number: return (byte)((0.2125 * c.R) + (0.7154 * c.G) + (0.0721 * c.B));
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(80' 119);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(80' 119);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(31' 13);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(31' 13);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.FontComboBox.Location = new System.Drawing.Point(117' 116);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.FontComboBox.Location = new System.Drawing.Point(117' 116);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.FontComboBox.Size = new System.Drawing.Size(200' 21);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.FontComboBox.Size = new System.Drawing.Size(200' 21);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(50' 150);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(50' 150);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(61' 13);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(61' 13);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.label2.TabIndex = 2;
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.Location = new System.Drawing.Point(117' 147);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.Location = new System.Drawing.Point(117' 147);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.Size = new System.Drawing.Size(200' 20);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.Size = new System.Drawing.Size(200' 20);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.TabIndex = 3;
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.BrowseButton.Location = new System.Drawing.Point(323' 144);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.BrowseButton.Location = new System.Drawing.Point(323' 144);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.BrowseButton.Size = new System.Drawing.Size(75' 23);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.BrowseButton.Size = new System.Drawing.Size(75' 23);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.BrowseButton.TabIndex = 4;
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.ConvertButton.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.5F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0)));
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.ConvertButton.Location = new System.Drawing.Point(181' 268);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.ConvertButton.Location = new System.Drawing.Point(181' 268);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.ConvertButton.Size = new System.Drawing.Size(87' 31);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.ConvertButton.Size = new System.Drawing.Size(87' 31);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.ConvertButton.TabIndex = 5;
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox1.Location = new System.Drawing.Point(12' 12);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox1.Location = new System.Drawing.Point(12' 12);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox1.Size = new System.Drawing.Size(32' 32);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox1.Size = new System.Drawing.Size(32' 32);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox1.TabIndex = 6;
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.button1.Location = new System.Drawing.Point(301' 268);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.button1.Location = new System.Drawing.Point(301' 268);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.button1.Size = new System.Drawing.Size(75' 23);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.button1.Size = new System.Drawing.Size(75' 23);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.button1.TabIndex = 7;
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.CompressionComboBox.Location = new System.Drawing.Point(117' 173);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.CompressionComboBox.Location = new System.Drawing.Point(117' 173);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.CompressionComboBox.Size = new System.Drawing.Size(200' 21);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.CompressionComboBox.Size = new System.Drawing.Size(200' 21);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.CompressionComboBox.TabIndex = 8;
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.label3.Location = new System.Drawing.Point(2' 176);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.label3.Location = new System.Drawing.Point(2' 176);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new System.Drawing.Size(109' 13);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new System.Drawing.Size(109' 13);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.label3.TabIndex = 9;
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox2.Location = new System.Drawing.Point(311' 12);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox2.Location = new System.Drawing.Point(311' 12);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox2.Size = new System.Drawing.Size(32' 32);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox2.Size = new System.Drawing.Size(32' 32);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox2.TabIndex = 10;
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.textBox2.Location = new System.Drawing.Point(288' 242);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.textBox2.Location = new System.Drawing.Point(288' 242);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.textBox2.Size = new System.Drawing.Size(100' 20);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.textBox2.Size = new System.Drawing.Size(100' 20);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.textBox2.TabIndex = 11;
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.TestButton2.Location = new System.Drawing.Point(42' 268);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.TestButton2.Location = new System.Drawing.Point(42' 268);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.TestButton2.Size = new System.Drawing.Size(75' 44);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.TestButton2.Size = new System.Drawing.Size(75' 44);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.TestButton2.TabIndex = 12;
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(449' 363);
Magic Number,TTF2OPFF_Converter,Form1,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(449' 363);
Magic Number,TTF2OPFF_Converter,BinaryWriter,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,Write,The following statement contains a magic number: this.curByte = new bool[8];
Magic Number,TTF2OPFF_Converter,BinaryWriter,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,Write,The following statement contains a magic number: curBitIndx == 8
Magic Number,TTF2OPFF_Converter,BinaryWriter,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,Write,The following statement contains a magic number: i < 8
Magic Number,TTF2OPFF_Converter,BinaryWriter,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,Write,The following statement contains a magic number: i < 32
Magic Number,TTF2OPFF_Converter,BinaryWriter,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,Write,The following statement contains a magic number: i < 64
Magic Number,TTF2OPFF_Converter,BinaryWriter,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,Write,The following statement contains a magic number: i < 16
Magic Number,TTF2OPFF_Converter,BinaryWriter,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\Form1.cs,ConvertToByte,The following statement contains a magic number: i < 8
Magic Number,Orvid.Compression,LZMACoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,Compress,The following statement contains a magic number: outStream.WriteByte((Byte)(fileSize >> (8 * i)));
Magic Number,Orvid.Compression,LZMACoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,Compress,The following statement contains a magic number: i < 8
Magic Number,Orvid.Compression,LZMACoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,Decompress,The following statement contains a magic number: byte[] properties2 = new byte[5];
Magic Number,Orvid.Compression,LZMACoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,Decompress,The following statement contains a magic number: newInStream.Read(properties2' 0' 5) != 5
Magic Number,Orvid.Compression,LZMACoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,Decompress,The following statement contains a magic number: newInStream.Read(properties2' 0' 5) != 5
Magic Number,Orvid.Compression,LZMACoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,Decompress,The following statement contains a magic number: outSize |= ((long)(byte)v) << (8 * i);
Magic Number,Orvid.Compression,LZMACoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,Decompress,The following statement contains a magic number: i < 8
Magic Number,Orvid.Compression,State,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,UpdateChar,The following statement contains a magic number: Index < 4
Magic Number,Orvid.Compression,State,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,UpdateMatch,The following statement contains a magic number: Index = (uint)(Index < 7 ? 7 : 10);
Magic Number,Orvid.Compression,State,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,UpdateMatch,The following statement contains a magic number: Index = (uint)(Index < 7 ? 7 : 10);
Magic Number,Orvid.Compression,State,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,UpdateMatch,The following statement contains a magic number: Index = (uint)(Index < 7 ? 7 : 10);
Magic Number,Orvid.Compression,State,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,UpdateRep,The following statement contains a magic number: Index = (uint)(Index < 7 ? 8 : 11);
Magic Number,Orvid.Compression,State,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,UpdateRep,The following statement contains a magic number: Index = (uint)(Index < 7 ? 8 : 11);
Magic Number,Orvid.Compression,State,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,UpdateRep,The following statement contains a magic number: Index = (uint)(Index < 7 ? 8 : 11);
Magic Number,Orvid.Compression,State,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,UpdateShortRep,The following statement contains a magic number: Index = (uint)(Index < 7 ? 9 : 11);
Magic Number,Orvid.Compression,State,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,UpdateShortRep,The following statement contains a magic number: Index = (uint)(Index < 7 ? 9 : 11);
Magic Number,Orvid.Compression,State,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,UpdateShortRep,The following statement contains a magic number: Index = (uint)(Index < 7 ? 9 : 11);
Magic Number,Orvid.Compression,State,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,IsCharState,The following statement contains a magic number: return Index < 7;
Magic Number,Orvid.Compression,LZMADecoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,SetDictionarySize,The following statement contains a magic number: uint blockSize = Math.Max(m_DictionarySizeCheck' (1 << 12));
Magic Number,Orvid.Compression,LZMADecoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,SetLiteralProperties,The following statement contains a magic number: lp > 8
Magic Number,Orvid.Compression,LZMADecoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,SetLiteralProperties,The following statement contains a magic number: lc > 8
Magic Number,Orvid.Compression,LZMADecoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,SetDecoderProperties,The following statement contains a magic number: properties.Length < 5
Magic Number,Orvid.Compression,LZMADecoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,SetDecoderProperties,The following statement contains a magic number: int lc = properties[0] % 9;
Magic Number,Orvid.Compression,LZMADecoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,SetDecoderProperties,The following statement contains a magic number: int remainder = properties[0] / 9;
Magic Number,Orvid.Compression,LZMADecoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,SetDecoderProperties,The following statement contains a magic number: int lp = remainder % 5;
Magic Number,Orvid.Compression,LZMADecoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,SetDecoderProperties,The following statement contains a magic number: int pb = remainder / 5;
Magic Number,Orvid.Compression,LZMADecoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,SetDecoderProperties,The following statement contains a magic number: dictionarySize += ((UInt32)(properties[1 + i])) << (i * 8);
Magic Number,Orvid.Compression,LZMADecoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,SetDecoderProperties,The following statement contains a magic number: i < 4
Magic Number,Orvid.Compression,LiteralDecoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetState,The following statement contains a magic number: return ((pos & m_PosMask) << m_NumPrevBits) + (uint)(prevByte >> (8 - m_NumPrevBits));
Magic Number,Orvid.Compression,Decoder2,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,DecodeWithMatchByte,The following statement contains a magic number: uint matchBit = (uint)(matchByte >> 7) & 1;
Magic Number,Orvid.Compression,Decoder2,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,DecodeWithMatchByte,The following statement contains a magic number: uint bit = m_Decoders[((1 + matchBit) << 8) + symbol].Decode(rangeDecoder);
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,LZMAEncoder,The following statement contains a magic number: const Byte kFastSlots = 22;
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,LZMAEncoder,The following statement contains a magic number: int c = 2;
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetPosSlot,The following statement contains a magic number: pos < (1 << 11)
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetPosSlot,The following statement contains a magic number: return (UInt32)(g_FastPos[pos >> 10] + 20);
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetPosSlot,The following statement contains a magic number: return (UInt32)(g_FastPos[pos >> 10] + 20);
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetPosSlot,The following statement contains a magic number: pos < (1 << 21)
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetPosSlot,The following statement contains a magic number: return (UInt32)(g_FastPos[pos >> 20] + 40);
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetPosSlot,The following statement contains a magic number: return (UInt32)(g_FastPos[pos >> 20] + 40);
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetPosSlot2,The following statement contains a magic number: return (UInt32)(g_FastPos[pos >> 6] + 12);
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetPosSlot2,The following statement contains a magic number: return (UInt32)(g_FastPos[pos >> 6] + 12);
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetPosSlot2,The following statement contains a magic number: pos < (1 << 17)
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetPosSlot2,The following statement contains a magic number: return (UInt32)(g_FastPos[pos >> 16] + 32);
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetPosSlot2,The following statement contains a magic number: return (UInt32)(g_FastPos[pos >> 16] + 32);
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetPosSlot2,The following statement contains a magic number: pos < (1 << 27)
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetPosSlot2,The following statement contains a magic number: return (UInt32)(g_FastPos[pos >> 26] + 52);
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetPosSlot2,The following statement contains a magic number: return (UInt32)(g_FastPos[pos >> 26] + 52);
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,Create,The following statement contains a magic number: int numHashBytes = 4;
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,Create,The following statement contains a magic number: numHashBytes = 2;
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,ReadMatchDistances,The following statement contains a magic number: lenRes = _matchDistances[numDistancePairs - 2];
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetOptimum,The following statement contains a magic number: numAvailableBytes < 2
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetOptimum,The following statement contains a magic number: lenMain < 2 && currentByte != matchByte && repLens[repMaxIndex] < 2
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetOptimum,The following statement contains a magic number: lenMain < 2 && currentByte != matchByte && repLens[repMaxIndex] < 2
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetOptimum,The following statement contains a magic number: lenEnd < 2
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetOptimum,The following statement contains a magic number: _optimum[0].Backs2 = reps[2];
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetOptimum,The following statement contains a magic number: _optimum[0].Backs3 = reps[3];
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetOptimum,The following statement contains a magic number: repLen < 2
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetOptimum,The following statement contains a magic number: UInt32 curAndLenPrice = price + _repMatchLenEncoder.GetPrice(repLen - 2' posState);
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetOptimum,The following statement contains a magic number: len = ((repLens[0] >= 2) ? repLens[0] + 1 : 2);
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetOptimum,The following statement contains a magic number: len = ((repLens[0] >= 2) ? repLens[0] + 1 : 2);
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetOptimum,The following statement contains a magic number: offs += 2;
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetOptimum,The following statement contains a magic number: offs += 2;
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetOptimum,The following statement contains a magic number: _optimum[cur].Backs2 = reps[2];
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetOptimum,The following statement contains a magic number: _optimum[cur].Backs3 = reps[3];
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetOptimum,The following statement contains a magic number: UInt32 curAnd1Price = curPrice +                      _isMatch[(state.Index << LZMABase.kNumPosStatesBitsMax) + posState].GetPrice0() +                      _literalEncoder.GetSubCoder(position' _matchFinder.GetIndexByte(0 - 2)).                      GetPrice(!state.IsCharState()' matchByte' currentByte);
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetOptimum,The following statement contains a magic number: numAvailableBytes < 2
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetOptimum,The following statement contains a magic number: lenTest2 >= 2
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetOptimum,The following statement contains a magic number: UInt32 startLen = 2;
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetOptimum,The following statement contains a magic number: lenTest < 2
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetOptimum,The following statement contains a magic number: lenTest2 >= 2
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetOptimum,The following statement contains a magic number: numDistancePairs += 2;
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetOptimum,The following statement contains a magic number: offs += 2;
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetOptimum,The following statement contains a magic number: lenTest2 >= 2
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetOptimum,The following statement contains a magic number: offs += 2;
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,ChangePair,The following statement contains a magic number: const int kDif = 7;
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,ChangePair,The following statement contains a magic number: return (smallDist < ((UInt32)(1) << (32 - kDif)) && bigDist >= (smallDist << kDif));
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,WriteEndMarker,The following statement contains a magic number: int footerBits = 30;
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,CodeOneBlock,The following statement contains a magic number: _matchPriceCount >= (1 << 7)
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,CodeOneBlock,The following statement contains a magic number: nowPos64 - progressPosValuePrev >= (1 << 12)
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,WriteCoderProperties,The following statement contains a magic number: properties[0] = (Byte)((_posStateBits * 5 + _numLiteralPosStateBits) * 9 + _numLiteralContextBits);
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,WriteCoderProperties,The following statement contains a magic number: properties[0] = (Byte)((_posStateBits * 5 + _numLiteralPosStateBits) * 9 + _numLiteralContextBits);
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,WriteCoderProperties,The following statement contains a magic number: properties[1 + i] = (Byte)(_dictionarySize >> (8 * i));
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,WriteCoderProperties,The following statement contains a magic number: i < 4
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,FillDistancesPrices,The following statement contains a magic number: UInt32 baseVal = ((2 | (posSlot & 1)) << footerBits);
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,SetCoderProperties,The following statement contains a magic number: switch (propIDs[i])                  {                      case CoderPropID.NumFastBytes:                          {                              if (!(prop is Int32))                                  throw new Exception();                              Int32 numFastBytes = (Int32)prop;                              if (numFastBytes < 5 || numFastBytes > LZMABase.kMatchMaxLen)                                  throw new Exception();                              _numFastBytes = (UInt32)numFastBytes;                              break;                          }                      case CoderPropID.Algorithm:                          {                              break;                          }                      case CoderPropID.MatchFinder:                          {                              if (!(prop is String))                                  throw new Exception();                              EMatchFinderType matchFinderIndexPrev = _matchFinderType;                              int m = FindMatchFinder(((string)prop).ToUpper());                              if (m < 0)                                  throw new Exception();                              _matchFinderType = (EMatchFinderType)m;                              if (_matchFinder != null && matchFinderIndexPrev != _matchFinderType)                              {                                  _dictionarySizePrev = 0xFFFFFFFF;                                  _matchFinder = null;                              }                              break;                          }                      case CoderPropID.DictionarySize:                          {                              const int kDicLogSizeMaxCompress = 30;                              if (!(prop is Int32))                                  throw new Exception(); ;                              Int32 dictionarySize = (Int32)prop;                              if (dictionarySize < (UInt32)(1 << LZMABase.kDicLogSizeMin) ||                                  dictionarySize > (UInt32)(1 << kDicLogSizeMaxCompress))                                  throw new Exception();                              _dictionarySize = (UInt32)dictionarySize;                              int dicLogSize;                              for (dicLogSize = 0; dicLogSize < (UInt32)kDicLogSizeMaxCompress; dicLogSize++)                                  if (dictionarySize <= ((UInt32)(1) << dicLogSize))                                      break;                              _distTableSize = (UInt32)dicLogSize * 2;                              break;                          }                      case CoderPropID.PosStateBits:                          {                              if (!(prop is Int32))                                  throw new Exception();                              Int32 v = (Int32)prop;                              if (v < 0 || v > (UInt32)LZMABase.kNumPosStatesBitsEncodingMax)                                  throw new Exception();                              _posStateBits = (int)v;                              _posStateMask = (((UInt32)1) << (int)_posStateBits) - 1;                              break;                          }                      case CoderPropID.LitPosBits:                          {                              if (!(prop is Int32))                                  throw new Exception();                              Int32 v = (Int32)prop;                              if (v < 0 || v > (UInt32)LZMABase.kNumLitPosStatesBitsEncodingMax)                                  throw new Exception();                              _numLiteralPosStateBits = (int)v;                              break;                          }                      case CoderPropID.LitContextBits:                          {                              if (!(prop is Int32))                                  throw new Exception();                              Int32 v = (Int32)prop;                              if (v < 0 || v > (UInt32)LZMABase.kNumLitContextBitsMax)                                  throw new Exception(); ;                              _numLiteralContextBits = (int)v;                              break;                          }                      case CoderPropID.EndMarker:                          {                              if (!(prop is Boolean))                                  throw new Exception();                              SetWriteEndMarkerMode((Boolean)prop);                              break;                          }                      default:                          throw new Exception();                  }
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,SetCoderProperties,The following statement contains a magic number: switch (propIDs[i])                  {                      case CoderPropID.NumFastBytes:                          {                              if (!(prop is Int32))                                  throw new Exception();                              Int32 numFastBytes = (Int32)prop;                              if (numFastBytes < 5 || numFastBytes > LZMABase.kMatchMaxLen)                                  throw new Exception();                              _numFastBytes = (UInt32)numFastBytes;                              break;                          }                      case CoderPropID.Algorithm:                          {                              break;                          }                      case CoderPropID.MatchFinder:                          {                              if (!(prop is String))                                  throw new Exception();                              EMatchFinderType matchFinderIndexPrev = _matchFinderType;                              int m = FindMatchFinder(((string)prop).ToUpper());                              if (m < 0)                                  throw new Exception();                              _matchFinderType = (EMatchFinderType)m;                              if (_matchFinder != null && matchFinderIndexPrev != _matchFinderType)                              {                                  _dictionarySizePrev = 0xFFFFFFFF;                                  _matchFinder = null;                              }                              break;                          }                      case CoderPropID.DictionarySize:                          {                              const int kDicLogSizeMaxCompress = 30;                              if (!(prop is Int32))                                  throw new Exception(); ;                              Int32 dictionarySize = (Int32)prop;                              if (dictionarySize < (UInt32)(1 << LZMABase.kDicLogSizeMin) ||                                  dictionarySize > (UInt32)(1 << kDicLogSizeMaxCompress))                                  throw new Exception();                              _dictionarySize = (UInt32)dictionarySize;                              int dicLogSize;                              for (dicLogSize = 0; dicLogSize < (UInt32)kDicLogSizeMaxCompress; dicLogSize++)                                  if (dictionarySize <= ((UInt32)(1) << dicLogSize))                                      break;                              _distTableSize = (UInt32)dicLogSize * 2;                              break;                          }                      case CoderPropID.PosStateBits:                          {                              if (!(prop is Int32))                                  throw new Exception();                              Int32 v = (Int32)prop;                              if (v < 0 || v > (UInt32)LZMABase.kNumPosStatesBitsEncodingMax)                                  throw new Exception();                              _posStateBits = (int)v;                              _posStateMask = (((UInt32)1) << (int)_posStateBits) - 1;                              break;                          }                      case CoderPropID.LitPosBits:                          {                              if (!(prop is Int32))                                  throw new Exception();                              Int32 v = (Int32)prop;                              if (v < 0 || v > (UInt32)LZMABase.kNumLitPosStatesBitsEncodingMax)                                  throw new Exception();                              _numLiteralPosStateBits = (int)v;                              break;                          }                      case CoderPropID.LitContextBits:                          {                              if (!(prop is Int32))                                  throw new Exception();                              Int32 v = (Int32)prop;                              if (v < 0 || v > (UInt32)LZMABase.kNumLitContextBitsMax)                                  throw new Exception(); ;                              _numLiteralContextBits = (int)v;                              break;                          }                      case CoderPropID.EndMarker:                          {                              if (!(prop is Boolean))                                  throw new Exception();                              SetWriteEndMarkerMode((Boolean)prop);                              break;                          }                      default:                          throw new Exception();                  }
Magic Number,Orvid.Compression,LZMAEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,SetCoderProperties,The following statement contains a magic number: switch (propIDs[i])                  {                      case CoderPropID.NumFastBytes:                          {                              if (!(prop is Int32))                                  throw new Exception();                              Int32 numFastBytes = (Int32)prop;                              if (numFastBytes < 5 || numFastBytes > LZMABase.kMatchMaxLen)                                  throw new Exception();                              _numFastBytes = (UInt32)numFastBytes;                              break;                          }                      case CoderPropID.Algorithm:                          {                              break;                          }                      case CoderPropID.MatchFinder:                          {                              if (!(prop is String))                                  throw new Exception();                              EMatchFinderType matchFinderIndexPrev = _matchFinderType;                              int m = FindMatchFinder(((string)prop).ToUpper());                              if (m < 0)                                  throw new Exception();                              _matchFinderType = (EMatchFinderType)m;                              if (_matchFinder != null && matchFinderIndexPrev != _matchFinderType)                              {                                  _dictionarySizePrev = 0xFFFFFFFF;                                  _matchFinder = null;                              }                              break;                          }                      case CoderPropID.DictionarySize:                          {                              const int kDicLogSizeMaxCompress = 30;                              if (!(prop is Int32))                                  throw new Exception(); ;                              Int32 dictionarySize = (Int32)prop;                              if (dictionarySize < (UInt32)(1 << LZMABase.kDicLogSizeMin) ||                                  dictionarySize > (UInt32)(1 << kDicLogSizeMaxCompress))                                  throw new Exception();                              _dictionarySize = (UInt32)dictionarySize;                              int dicLogSize;                              for (dicLogSize = 0; dicLogSize < (UInt32)kDicLogSizeMaxCompress; dicLogSize++)                                  if (dictionarySize <= ((UInt32)(1) << dicLogSize))                                      break;                              _distTableSize = (UInt32)dicLogSize * 2;                              break;                          }                      case CoderPropID.PosStateBits:                          {                              if (!(prop is Int32))                                  throw new Exception();                              Int32 v = (Int32)prop;                              if (v < 0 || v > (UInt32)LZMABase.kNumPosStatesBitsEncodingMax)                                  throw new Exception();                              _posStateBits = (int)v;                              _posStateMask = (((UInt32)1) << (int)_posStateBits) - 1;                              break;                          }                      case CoderPropID.LitPosBits:                          {                              if (!(prop is Int32))                                  throw new Exception();                              Int32 v = (Int32)prop;                              if (v < 0 || v > (UInt32)LZMABase.kNumLitPosStatesBitsEncodingMax)                                  throw new Exception();                              _numLiteralPosStateBits = (int)v;                              break;                          }                      case CoderPropID.LitContextBits:                          {                              if (!(prop is Int32))                                  throw new Exception();                              Int32 v = (Int32)prop;                              if (v < 0 || v > (UInt32)LZMABase.kNumLitContextBitsMax)                                  throw new Exception(); ;                              _numLiteralContextBits = (int)v;                              break;                          }                      case CoderPropID.EndMarker:                          {                              if (!(prop is Boolean))                                  throw new Exception();                              SetWriteEndMarkerMode((Boolean)prop);                              break;                          }                      default:                          throw new Exception();                  }
Magic Number,Orvid.Compression,LiteralEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetSubCoder,The following statement contains a magic number: return m_Coders[((pos & m_PosMask) << m_NumPrevBits) + (uint)(prevByte >> (8 - m_NumPrevBits))];
Magic Number,Orvid.Compression,Encoder2,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,EncodeMatched,The following statement contains a magic number: state += ((1 + matchBit) << 8);
Magic Number,Orvid.Compression,Encoder2,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetPrice,The following statement contains a magic number: int i = 7;
Magic Number,Orvid.Compression,Encoder2,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetPrice,The following statement contains a magic number: price += m_Encoders[((1 + matchBit) << 8) + context].GetPrice(bit);
Magic Number,Orvid.Compression,LZBinTree,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,SetType,The following statement contains a magic number: HASH_ARRAY = (numHashBytes > 2);
Magic Number,Orvid.Compression,LZBinTree,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,SetType,The following statement contains a magic number: kMinMatchCheck = 4;
Magic Number,Orvid.Compression,LZBinTree,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,Create,The following statement contains a magic number: historySize > kMaxValForNormalize - 256
Magic Number,Orvid.Compression,LZBinTree,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,Create,The following statement contains a magic number: _cutValue = 16 + (matchMaxLen >> 1);
Magic Number,Orvid.Compression,LZBinTree,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,Create,The following statement contains a magic number: UInt32 windowReservSize = (historySize + keepAddBufferBefore +                      matchMaxLen + keepAddBufferAfter) / 2 + 256;
Magic Number,Orvid.Compression,LZBinTree,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,Create,The following statement contains a magic number: UInt32 windowReservSize = (historySize + keepAddBufferBefore +                      matchMaxLen + keepAddBufferAfter) / 2 + 256;
Magic Number,Orvid.Compression,LZBinTree,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,Create,The following statement contains a magic number: _son = new UInt32[(_cyclicBufferSize = cyclicBufferSize) * 2];
Magic Number,Orvid.Compression,LZBinTree,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,Create,The following statement contains a magic number: hs |= (hs >> 2);
Magic Number,Orvid.Compression,LZBinTree,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,Create,The following statement contains a magic number: hs |= (hs >> 4);
Magic Number,Orvid.Compression,LZBinTree,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,Create,The following statement contains a magic number: hs |= (hs >> 8);
Magic Number,Orvid.Compression,LZBinTree,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,Create,The following statement contains a magic number: hs > (1 << 24)
Magic Number,Orvid.Compression,LZBinTree,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetMatches,The following statement contains a magic number: temp ^= ((UInt32)(_bufferBase[cur + 2]) << 8);
Magic Number,Orvid.Compression,LZBinTree,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetMatches,The following statement contains a magic number: temp ^= ((UInt32)(_bufferBase[cur + 2]) << 8);
Magic Number,Orvid.Compression,LZBinTree,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetMatches,The following statement contains a magic number: hashValue = (temp ^ (CRC.Table[_bufferBase[cur + 3]] << 5)) & _hashMask;
Magic Number,Orvid.Compression,LZBinTree,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetMatches,The following statement contains a magic number: hashValue = (temp ^ (CRC.Table[_bufferBase[cur + 3]] << 5)) & _hashMask;
Magic Number,Orvid.Compression,LZBinTree,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetMatches,The following statement contains a magic number: distances[offset++] = maxLen = 2;
Magic Number,Orvid.Compression,LZBinTree,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetMatches,The following statement contains a magic number: offset -= 2;
Magic Number,Orvid.Compression,LZBinTree,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetMatches,The following statement contains a magic number: distances[offset++] = maxLen = 3;
Magic Number,Orvid.Compression,LZBinTree,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetMatches,The following statement contains a magic number: offset -= 2;
Magic Number,Orvid.Compression,LZBinTree,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,Skip,The following statement contains a magic number: temp ^= ((UInt32)(_bufferBase[cur + 2]) << 8);
Magic Number,Orvid.Compression,LZBinTree,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,Skip,The following statement contains a magic number: temp ^= ((UInt32)(_bufferBase[cur + 2]) << 8);
Magic Number,Orvid.Compression,LZBinTree,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,Skip,The following statement contains a magic number: hashValue = (temp ^ (CRC.Table[_bufferBase[cur + 3]] << 5)) & _hashMask;
Magic Number,Orvid.Compression,LZBinTree,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,Skip,The following statement contains a magic number: hashValue = (temp ^ (CRC.Table[_bufferBase[cur + 3]] << 5)) & _hashMask;
Magic Number,Orvid.Compression,LZBinTree,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,Normalize,The following statement contains a magic number: NormalizeLinks(_son' _cyclicBufferSize * 2' subValue);
Magic Number,Orvid.Compression,CRC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,CRC,The following statement contains a magic number: Table = new uint[256];
Magic Number,Orvid.Compression,CRC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,CRC,The following statement contains a magic number: j < 8
Magic Number,Orvid.Compression,CRC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,CRC,The following statement contains a magic number: i < 256
Magic Number,Orvid.Compression,CRC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,UpdateByte,The following statement contains a magic number: _value = Table[(((byte)(_value)) ^ b)] ^ (_value >> 8);
Magic Number,Orvid.Compression,CRC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,Update,The following statement contains a magic number: _value = Table[(((byte)(_value)) ^ data[offset + i])] ^ (_value >> 8);
Magic Number,Orvid.Compression,RangeEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,FlushData,The following statement contains a magic number: i < 5
Magic Number,Orvid.Compression,RangeEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,Encode,The following statement contains a magic number: Range <<= 8;
Magic Number,Orvid.Compression,RangeEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,ShiftLow,The following statement contains a magic number: Stream.WriteByte((byte)(temp + (Low >> 32)));
Magic Number,Orvid.Compression,RangeEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,ShiftLow,The following statement contains a magic number: _cache = (byte)(((uint)Low) >> 24);
Magic Number,Orvid.Compression,RangeEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,ShiftLow,The following statement contains a magic number: (uint)Low < (uint)0xFF000000 || (uint)(Low >> 32) == 1
Magic Number,Orvid.Compression,RangeEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,ShiftLow,The following statement contains a magic number: Low = ((uint)Low) << 8;
Magic Number,Orvid.Compression,RangeEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,EncodeDirectBits,The following statement contains a magic number: Range <<= 8;
Magic Number,Orvid.Compression,RangeEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,EncodeBit,The following statement contains a magic number: Range <<= 8;
Magic Number,Orvid.Compression,RangeEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,GetProcessedSizeAdd,The following statement contains a magic number: return _cacheSize + Stream.Position - StartPosition + 4;
Magic Number,Orvid.Compression,RangeDecoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,Init,The following statement contains a magic number: Code = (Code << 8) | (byte)Stream.ReadByte();
Magic Number,Orvid.Compression,RangeDecoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,Init,The following statement contains a magic number: i < 5
Magic Number,Orvid.Compression,RangeDecoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,Normalize,The following statement contains a magic number: Code = (Code << 8) | (byte)Stream.ReadByte();
Magic Number,Orvid.Compression,RangeDecoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,Normalize,The following statement contains a magic number: Range <<= 8;
Magic Number,Orvid.Compression,RangeDecoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,Normalize2,The following statement contains a magic number: Code = (Code << 8) | (byte)Stream.ReadByte();
Magic Number,Orvid.Compression,RangeDecoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,Normalize2,The following statement contains a magic number: Range <<= 8;
Magic Number,Orvid.Compression,RangeDecoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,DecodeDirectBits,The following statement contains a magic number: uint t = (code - range) >> 31;
Magic Number,Orvid.Compression,RangeDecoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,DecodeDirectBits,The following statement contains a magic number: code = (code << 8) | (byte)Stream.ReadByte();
Magic Number,Orvid.Compression,RangeDecoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,DecodeDirectBits,The following statement contains a magic number: range <<= 8;
Magic Number,Orvid.Compression,RangeBitEncoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,Encode,The following statement contains a magic number: encoder.Range <<= 8;
Magic Number,Orvid.Compression,RangeBitDecoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,Decode,The following statement contains a magic number: rangeDecoder.Code = (rangeDecoder.Code << 8) | (byte)rangeDecoder.Stream.ReadByte();
Magic Number,Orvid.Compression,RangeBitDecoder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tools\TTF2OPFF Converter\LZMACoder.cs,Decode,The following statement contains a magic number: rangeDecoder.Range <<= 8;
