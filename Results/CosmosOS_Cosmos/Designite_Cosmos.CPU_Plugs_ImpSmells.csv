Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Cosmos.CPU_Plugs.System,StringImpl,C:\repos\CosmosOS_Cosmos\source\Kernel-X86\10-CPU\Cosmos.CPU_Plugs\System\StringImpl.cs,nativeCompareOrdinalEx,Cyclomatic complexity of the method is 11
Long Parameter List,Cosmos.CPU_Plugs.System,ArrayImpl,C:\repos\CosmosOS_Cosmos\source\Kernel-X86\10-CPU\Cosmos.CPU_Plugs\System\ArrayImpl.cs,TrySZBinarySearch,The method has 5 parameters. Parameters: aArray' sourceIndex' count' value' retVal
Long Parameter List,Cosmos.CPU_Plugs.System,ArrayImpl,C:\repos\CosmosOS_Cosmos\source\Kernel-X86\10-CPU\Cosmos.CPU_Plugs\System\ArrayImpl.cs,TrySZLastIndexOf,The method has 5 parameters. Parameters: aArray' sourceIndex' count' value' retVal
Long Parameter List,Cosmos.CPU_Plugs.System,ArrayImpl,C:\repos\CosmosOS_Cosmos\source\Kernel-X86\10-CPU\Cosmos.CPU_Plugs\System\ArrayImpl.cs,TrySZIndexOf,The method has 5 parameters. Parameters: aArray' sourceIndex' count' value' retVal
Long Parameter List,Cosmos.CPU_Plugs.System,StringImpl,C:\repos\CosmosOS_Cosmos\source\Kernel-X86\10-CPU\Cosmos.CPU_Plugs\System\StringImpl.cs,Ctor,The method has 5 parameters. Parameters: aThis' aChars' aStringEmpty' aStringLength' aFirstChar
Long Parameter List,Cosmos.CPU_Plugs.System,StringImpl,C:\repos\CosmosOS_Cosmos\source\Kernel-X86\10-CPU\Cosmos.CPU_Plugs\System\StringImpl.cs,Ctor,The method has 7 parameters. Parameters: aThis' aChars' start' length' aStringEmpty' aStringLength' aFirstChar
Long Parameter List,Cosmos.CPU_Plugs.System,StringImpl,C:\repos\CosmosOS_Cosmos\source\Kernel-X86\10-CPU\Cosmos.CPU_Plugs\System\StringImpl.cs,Ctor,The method has 5 parameters. Parameters: aThis' aChars' aStringEmpty' aStringLength' aFirstChar
Long Parameter List,Cosmos.CPU_Plugs.System,StringImpl,C:\repos\CosmosOS_Cosmos\source\Kernel-X86\10-CPU\Cosmos.CPU_Plugs\System\StringImpl.cs,Ctor,The method has 7 parameters. Parameters: aThis' aChars' start' length' aStringEmpty' aStringLength' aFirstChar
Long Parameter List,Cosmos.CPU_Plugs.System,StringImpl,C:\repos\CosmosOS_Cosmos\source\Kernel-X86\10-CPU\Cosmos.CPU_Plugs\System\StringImpl.cs,Ctor,The method has 6 parameters. Parameters: aThis' aChar' aLength' aStringEmpty' aStringLength' aFirstChar
Long Parameter List,Cosmos.CPU_Plugs.System,StringImpl,C:\repos\CosmosOS_Cosmos\source\Kernel-X86\10-CPU\Cosmos.CPU_Plugs\System\StringImpl.cs,Format,The method has 5 parameters. Parameters: aProvider' aFormat' aArg0' aArg1' aArg2
Long Parameter List,Cosmos.CPU_Plugs.System,StringImpl,C:\repos\CosmosOS_Cosmos\source\Kernel-X86\10-CPU\Cosmos.CPU_Plugs\System\StringImpl.cs,IndexOf,The method has 5 parameters. Parameters: aThis' aSubstring' aIdx' aLength' aComparison
Long Parameter List,Cosmos.CPU_Plugs.System,StringImpl,C:\repos\CosmosOS_Cosmos\source\Kernel-X86\10-CPU\Cosmos.CPU_Plugs\System\StringImpl.cs,nativeCompareOrdinalEx,The method has 5 parameters. Parameters: aStrA' aIndexA' aStrB' aIndexB' aCount
Long Parameter List,Cosmos.CPU_Plugs.System,StringImpl,C:\repos\CosmosOS_Cosmos\source\Kernel-X86\10-CPU\Cosmos.CPU_Plugs\System\StringImpl.cs,CompareOrdinalHelper,The method has 6 parameters. Parameters: strA' indexA' countA' strB' indexB' countB
Long Statement,Cosmos.CPU_Plugs.System,StringImpl,C:\repos\CosmosOS_Cosmos\source\Kernel-X86\10-CPU\Cosmos.CPU_Plugs\System\StringImpl.cs,nativeCompareOrdinalEx,The length of the statement  "            //mDebugger.SendInternal($"nativeCompareOrdinalEx : aStrA|aIndexA = {aStrA}|{aIndexA}' aStrB|aIndexB = {aStrB}|{aIndexB}' aCount = {aCount}"); " is 142.
Long Statement,Cosmos.CPU_Plugs.System,StringImpl,C:\repos\CosmosOS_Cosmos\source\Kernel-X86\10-CPU\Cosmos.CPU_Plugs\System\StringImpl.cs,nativeCompareOrdinalEx,The length of the statement  "                mDebugger.SendInternal("nativeCompareOrdinalEx : xLengthA == xLengthB && aIndexA == aIndexB && aStrA is the same object asaStrB' returning 0"); " is 143.
Magic Number,Cosmos.CPU_Plugs.System,ArrayImpl,C:\repos\CosmosOS_Cosmos\source\Kernel-X86\10-CPU\Cosmos.CPU_Plugs\System\ArrayImpl.cs,Clear,The following statement contains a magic number: aArray += 3;
Magic Number,Cosmos.CPU_Plugs.System,ArrayImpl,C:\repos\CosmosOS_Cosmos\source\Kernel-X86\10-CPU\Cosmos.CPU_Plugs\System\ArrayImpl.cs,TrySZLastIndexOf,The following statement contains a magic number: aArray += 4;
Magic Number,Cosmos.CPU_Plugs.System,ArrayImpl,C:\repos\CosmosOS_Cosmos\source\Kernel-X86\10-CPU\Cosmos.CPU_Plugs\System\ArrayImpl.cs,TrySZIndexOf,The following statement contains a magic number: aArray += 4;
Magic Number,Cosmos.CPU_Plugs.System,ArrayImpl,C:\repos\CosmosOS_Cosmos\source\Kernel-X86\10-CPU\Cosmos.CPU_Plugs\System\ArrayImpl.cs,GetValue,The following statement contains a magic number: aThis += 3;
Magic Number,Cosmos.CPU_Plugs.System,ArrayImpl,C:\repos\CosmosOS_Cosmos\source\Kernel-X86\10-CPU\Cosmos.CPU_Plugs\System\ArrayImpl.cs,GetValue,The following statement contains a magic number: switch (xElementSize)              {                  case 1:                      return *((byte*) aThis);                  case 2:                      return *((ushort*) aThis);                  case 3:                      return (*aThis) & 0x0FFFFFFF;                  case 4:                      return *aThis;              }
Magic Number,Cosmos.CPU_Plugs.System,ArrayImpl,C:\repos\CosmosOS_Cosmos\source\Kernel-X86\10-CPU\Cosmos.CPU_Plugs\System\ArrayImpl.cs,GetValue,The following statement contains a magic number: switch (xElementSize)              {                  case 1:                      return *((byte*) aThis);                  case 2:                      return *((ushort*) aThis);                  case 3:                      return (*aThis) & 0x0FFFFFFF;                  case 4:                      return *aThis;              }
Magic Number,Cosmos.CPU_Plugs.System,ArrayImpl,C:\repos\CosmosOS_Cosmos\source\Kernel-X86\10-CPU\Cosmos.CPU_Plugs\System\ArrayImpl.cs,GetValue,The following statement contains a magic number: switch (xElementSize)              {                  case 1:                      return *((byte*) aThis);                  case 2:                      return *((ushort*) aThis);                  case 3:                      return (*aThis) & 0x0FFFFFFF;                  case 4:                      return *aThis;              }
Magic Number,Cosmos.CPU_Plugs.System,ArrayImpl,C:\repos\CosmosOS_Cosmos\source\Kernel-X86\10-CPU\Cosmos.CPU_Plugs\System\ArrayImpl.cs,SetValue,The following statement contains a magic number: aThis += 3;
Magic Number,Cosmos.CPU_Plugs.System,ArrayImpl,C:\repos\CosmosOS_Cosmos\source\Kernel-X86\10-CPU\Cosmos.CPU_Plugs\System\ArrayImpl.cs,SetValue,The following statement contains a magic number: switch (xElementSize)              {                  case 1:                      *((byte*) aThis) = (byte) aValue;                      return;                  case 2:                      *((ushort*) aThis) = (ushort) aValue;                      return;                  case 3:                      *((uint*) aThis) = (uint) aValue;                      return;                  case 4:                      *((uint*) aThis) = (uint) aValue;                      return;              }
Magic Number,Cosmos.CPU_Plugs.System,ArrayImpl,C:\repos\CosmosOS_Cosmos\source\Kernel-X86\10-CPU\Cosmos.CPU_Plugs\System\ArrayImpl.cs,SetValue,The following statement contains a magic number: switch (xElementSize)              {                  case 1:                      *((byte*) aThis) = (byte) aValue;                      return;                  case 2:                      *((ushort*) aThis) = (ushort) aValue;                      return;                  case 3:                      *((uint*) aThis) = (uint) aValue;                      return;                  case 4:                      *((uint*) aThis) = (uint) aValue;                      return;              }
Magic Number,Cosmos.CPU_Plugs.System,ArrayImpl,C:\repos\CosmosOS_Cosmos\source\Kernel-X86\10-CPU\Cosmos.CPU_Plugs\System\ArrayImpl.cs,SetValue,The following statement contains a magic number: switch (xElementSize)              {                  case 1:                      *((byte*) aThis) = (byte) aValue;                      return;                  case 2:                      *((ushort*) aThis) = (ushort) aValue;                      return;                  case 3:                      *((uint*) aThis) = (uint) aValue;                      return;                  case 4:                      *((uint*) aThis) = (uint) aValue;                      return;              }
Magic Number,Cosmos.CPU_Plugs.System,DelegateImpl,C:\repos\CosmosOS_Cosmos\source\Kernel-X86\10-CPU\Cosmos.CPU_Plugs\System\DelegateImpl.cs,InternalAllocLike,The following statement contains a magic number: uint xNeededSize = 1024;
Magic Number,Cosmos.CPU_Plugs.System,DelegateImpl,C:\repos\CosmosOS_Cosmos\source\Kernel-X86\10-CPU\Cosmos.CPU_Plugs\System\DelegateImpl.cs,InternalAllocLike,The following statement contains a magic number: xNeededSize += 12;
Magic Number,Cosmos.CPU_Plugs.System,DelegateImpl,C:\repos\CosmosOS_Cosmos\source\Kernel-X86\10-CPU\Cosmos.CPU_Plugs\System\DelegateImpl.cs,InternalAllocLike,The following statement contains a magic number: for (int i = 0; i < 1024; i++) {                  xResult[i] = xDelegateAsByte[i];              }
Magic Number,Cosmos.CPU_Plugs.System,StringImpl,C:\repos\CosmosOS_Cosmos\source\Kernel-X86\10-CPU\Cosmos.CPU_Plugs\System\StringImpl.cs,GetStringToNumber,The following statement contains a magic number: if (!string.IsNullOrWhiteSpace(aString)) {                  char[] xCharArray = aString.ToCharArray();                  for (int i = 0; i < xCharArray.Length; i++) {                      if (char.IsDigit(xCharArray[i])) {                          int xValue = xCharArray[i] - '0';                          int xMax = xCharArray.Length - 1;                          for (int j = 0; j < xMax - i; i++) {                              xValue *= 10;                          }                            xNumber += xValue;                      } else if (xCharArray[i] == '-') {                          xIsNegative = true;                      } else if (xCharArray[i] == '.') {                          break;                      } else {                          throw new FormatException("The string parameter is not a number and is invalid.");                      }                  }              }
Magic Number,Cosmos.CPU_Plugs.System,StringImpl,C:\repos\CosmosOS_Cosmos\source\Kernel-X86\10-CPU\Cosmos.CPU_Plugs\System\StringImpl.cs,BuildBadCharTable,The following statement contains a magic number: var badShift = new int[256];
Magic Number,Cosmos.CPU_Plugs.System,StringImpl,C:\repos\CosmosOS_Cosmos\source\Kernel-X86\10-CPU\Cosmos.CPU_Plugs\System\StringImpl.cs,BuildBadCharTable,The following statement contains a magic number: for (int i = 0; i < 256; i++) {                  badShift[i] = needle.Length;              }
Magic Number,Cosmos.CPU_Plugs.System,StringImpl,C:\repos\CosmosOS_Cosmos\source\Kernel-X86\10-CPU\Cosmos.CPU_Plugs\System\StringImpl.cs,ToLower,The following statement contains a magic number: return ChangeCasing(aThis' 65' 90' 32);
Magic Number,Cosmos.CPU_Plugs.System,StringImpl,C:\repos\CosmosOS_Cosmos\source\Kernel-X86\10-CPU\Cosmos.CPU_Plugs\System\StringImpl.cs,ToLower,The following statement contains a magic number: return ChangeCasing(aThis' 65' 90' 32);
Magic Number,Cosmos.CPU_Plugs.System,StringImpl,C:\repos\CosmosOS_Cosmos\source\Kernel-X86\10-CPU\Cosmos.CPU_Plugs\System\StringImpl.cs,ToLower,The following statement contains a magic number: return ChangeCasing(aThis' 65' 90' 32);
Magic Number,Cosmos.CPU_Plugs.System,StringImpl,C:\repos\CosmosOS_Cosmos\source\Kernel-X86\10-CPU\Cosmos.CPU_Plugs\System\StringImpl.cs,ToUpper,The following statement contains a magic number: return ChangeCasing(aThis' 97' 122' -32);
Magic Number,Cosmos.CPU_Plugs.System,StringImpl,C:\repos\CosmosOS_Cosmos\source\Kernel-X86\10-CPU\Cosmos.CPU_Plugs\System\StringImpl.cs,ToUpper,The following statement contains a magic number: return ChangeCasing(aThis' 97' 122' -32);
Magic Number,Cosmos.CPU_Plugs.System,StringImpl,C:\repos\CosmosOS_Cosmos\source\Kernel-X86\10-CPU\Cosmos.CPU_Plugs\System\StringImpl.cs,ToUpper,The following statement contains a magic number: return ChangeCasing(aThis' 97' 122' -32);
Magic Number,Cosmos.CPU_Plugs.System,StringImpl,C:\repos\CosmosOS_Cosmos\source\Kernel-X86\10-CPU\Cosmos.CPU_Plugs\System\StringImpl.cs,ToUpper,The following statement contains a magic number: return ChangeCasing(aThis' 97' 122' -32);
Magic Number,Cosmos.CPU_Plugs.System,StringImpl,C:\repos\CosmosOS_Cosmos\source\Kernel-X86\10-CPU\Cosmos.CPU_Plugs\System\StringImpl.cs,ToUpper,The following statement contains a magic number: return ChangeCasing(aThis' 97' 122' -32);
Magic Number,Cosmos.CPU_Plugs.System,StringImpl,C:\repos\CosmosOS_Cosmos\source\Kernel-X86\10-CPU\Cosmos.CPU_Plugs\System\StringImpl.cs,ToUpper,The following statement contains a magic number: return ChangeCasing(aThis' 97' 122' -32);
Missing Default,Cosmos.CPU_Plugs.System,ArrayImpl,C:\repos\CosmosOS_Cosmos\source\Kernel-X86\10-CPU\Cosmos.CPU_Plugs\System\ArrayImpl.cs,GetValue,The following switch statement is missing a default case: switch (xElementSize)              {                  case 1:                      return *((byte*) aThis);                  case 2:                      return *((ushort*) aThis);                  case 3:                      return (*aThis) & 0x0FFFFFFF;                  case 4:                      return *aThis;              }
Missing Default,Cosmos.CPU_Plugs.System,ArrayImpl,C:\repos\CosmosOS_Cosmos\source\Kernel-X86\10-CPU\Cosmos.CPU_Plugs\System\ArrayImpl.cs,SetValue,The following switch statement is missing a default case: switch (xElementSize)              {                  case 1:                      *((byte*) aThis) = (byte) aValue;                      return;                  case 2:                      *((ushort*) aThis) = (ushort) aValue;                      return;                  case 3:                      *((uint*) aThis) = (uint) aValue;                      return;                  case 4:                      *((uint*) aThis) = (uint) aValue;                      return;              }
