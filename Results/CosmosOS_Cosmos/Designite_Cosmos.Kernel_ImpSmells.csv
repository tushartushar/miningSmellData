Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Cosmos.Kernel,CPU,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel\CPU.cs,GetCPUId,The method has 5 parameters. Parameters: d' c' b' a' v
Magic Number,Cosmos.Kernel,CPU,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel\CPU.cs,CPUIDuint2string,The following statement contains a magic number: return new string(new char[] { (char)(a)' (char)(a >> 8)' (char)(a >> 16)' (char)(a >> 24) });
Magic Number,Cosmos.Kernel,CPU,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel\CPU.cs,CPUIDuint2string,The following statement contains a magic number: return new string(new char[] { (char)(a)' (char)(a >> 8)' (char)(a >> 16)' (char)(a >> 24) });
Magic Number,Cosmos.Kernel,CPU,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel\CPU.cs,CPUIDuint2string,The following statement contains a magic number: return new string(new char[] { (char)(a)' (char)(a >> 8)' (char)(a >> 16)' (char)(a >> 24) });
Magic Number,Cosmos.Kernel,BinaryExtension,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel\Extension\Binary.cs,ConvertToBinary,The following statement contains a magic number: while (d > 0)              {                  if (d.IsOdd())                  {                      bin = "1" + bin;                      d = d - 1;                  }                  else                  {                      bin = "0" + bin;                  }                    d = d / 2;              }
Magic Number,Cosmos.Kernel,BinaryExtension,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel\Extension\Binary.cs,ConvertFromBinary,The following statement contains a magic number: for (int i = bin.Length - 1; i >= 0; i--)              {                  if (bin[i].ToString() == "1")                      value += multiplier;                                    multiplier *= 2;              }
Magic Number,Cosmos.Kernel,BinaryExtension,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel\Extension\Binary.cs,IsOdd,The following statement contains a magic number: if ((n % 2) > 0)                  return true;              else                  return false;
Magic Number,Cosmos.Kernel.ManagedMemory,ManagedUInt32Array,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel\ManagedMemory\ManagedUInt32Array.cs,ManagedUInt32Array,The following statement contains a magic number: if (aAlignment > 1) {                  Address = Heap.MemAlloc((uint)((aSize * 4) + aAlignment));                  mUnalignedData = (uint*)Address;                  mAlignmentCorrection = (int)(aAlignment - (Address % aAlignment));                  Address += mAlignmentCorrection;                  mAlignedData = (uint*)Address;              }else{                  Address = Heap.MemAlloc((uint)(aSize * 4));                  mUnalignedData = (uint*)Address;                  mAlignedData = mUnalignedData;              }
Magic Number,Cosmos.Kernel.ManagedMemory,ManagedUInt32Array,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Kernel\ManagedMemory\ManagedUInt32Array.cs,ManagedUInt32Array,The following statement contains a magic number: if (aAlignment > 1) {                  Address = Heap.MemAlloc((uint)((aSize * 4) + aAlignment));                  mUnalignedData = (uint*)Address;                  mAlignmentCorrection = (int)(aAlignment - (Address % aAlignment));                  Address += mAlignmentCorrection;                  mAlignedData = (uint*)Address;              }else{                  Address = Heap.MemAlloc((uint)(aSize * 4));                  mUnalignedData = (uint*)Address;                  mAlignedData = mUnalignedData;              }
