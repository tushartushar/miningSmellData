Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Cosmos.Sys,VFSManager,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\VFSManager.cs,ReadFileAsString,Cyclomatic complexity of the method is 9
Complex Method,Cosmos.Sys.Network,TCPIPStack,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIPStack.cs,IPv4_TCPHandler,Cyclomatic complexity of the method is 8
Complex Method,Cosmos.Sys.Network.TCPIP,IPv4OutgoingBuffer,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPv4OutgoingBuffer.cs,Send,Cyclomatic complexity of the method is 10
Long Parameter List,Cosmos.Sys,VFSManager,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\VFSManager.cs,InternalGetFileDirectoryNames,The method has 6 parameters. Parameters: path' userPathOriginal' searchPattern' includeFiles' includeDirs' searchOption
Long Parameter List,Cosmos.Sys.Network,ICMPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\ChadTCPIP\ICMPPacket.cs,ICMPPacket,The method has 5 parameters. Parameters: aSrcIP' aDestIP' aType' aData' aCode
Long Parameter List,Cosmos.Sys.Network,IP4Packet,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\ChadTCPIP\IP4Packet.cs,Initialize,The method has 5 parameters. Parameters: aData' aHeaderSize' aProtocol' aSrcAddr' aDestAddr
Long Parameter List,Cosmos.Sys.Network,UDPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\ChadTCPIP\UDPPacket.cs,UDPPacket,The method has 5 parameters. Parameters: aSrcIP' aSrcPort' aDestIP' aDestPort' aData
Long Parameter List,Cosmos.Sys.Network.TCPIP.ARP,ARPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ARP\ARPPacket.cs,ARPPacket,The method has 8 parameters. Parameters: dest' src' hwType' protoType' hwLen' protoLen' operation' packet_size
Long Parameter List,Cosmos.Sys.Network.TCPIP.ARP,ARPPacket_EthernetIPv4,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ARP\ARPPacket_EthernetIPv4.cs,ARPPacket_EthernetIPv4,The method has 6 parameters. Parameters: operation' senderMAC' senderIP' targetMAC' targetIP' packet_size
Long Parameter List,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,IPPacket,The method has 6 parameters. Parameters: srcMAC' destMAC' dataLength' protocol' source' dest
Long Parameter List,Cosmos.Sys.Network.TCPIP.ICMP,ICMPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ICMP\ICMPPacket.cs,ICMPPacket,The method has 7 parameters. Parameters: source' dest' type' code' id' seq' icmpDataSize
Long Parameter List,Cosmos.Sys.Network.TCPIP.TCP,TCPConnection,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPConnection.cs,TCPConnection,The method has 6 parameters. Parameters: remoteIP' remotePort' localIP' localPort' initialSeqNumber' initialState
Long Parameter List,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,TCPPacket,The method has 5 parameters. Parameters: connection' seqNum' ackNum' tcpFlags' winSize
Long Parameter List,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,TCPPacket,The method has 6 parameters. Parameters: connection' seqNum' ackNum' tcpFlags' winSize' optionCount
Long Parameter List,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,TCPPacket,The method has 8 parameters. Parameters: source' dest' srcPort' destPort' seqNum' ackNum' tcpFlags' winSize
Long Parameter List,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,TCPPacket,The method has 9 parameters. Parameters: source' dest' srcPort' destPort' seqNum' ackNum' tcpFlags' winSize' data
Long Parameter List,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,TCPPacket,The method has 11 parameters. Parameters: source' dest' srcPort' destPort' seqNum' ackNum' tcpFlags' winSize' data' dataLength' optionLength
Long Parameter List,Cosmos.Sys.Network.TCPIP.UDP,UDPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\UDP\UDPPacket.cs,UDPPacket,The method has 5 parameters. Parameters: source' dest' srcPort' destPort' data
Long Statement,Cosmos.Sys,VFSManager,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\VFSManager.cs,GetDirectoryEntry,The length of the statement  "                        //// Cosmos.Debug.Debugger.SendMessage("GetDirectoryEntry"' "Checking if " + xListing[j].Name + " equals " + xPathParts[i]); " is 124.
Long Statement,Cosmos.Sys.Network,TcpClient,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TcpClient.cs,Close,The length of the statement  "            TCPPacket packet = new TCPPacket(connection' connection.LocalSequenceNumber' connection.RemoteSequenceNumber + 1' 0x11' 8192); " is 126.
Long Statement,Cosmos.Sys.Network,TCPIPStack,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIPStack.cs,IPv4_TCPHandler,The length of the statement  "                    TCP.TCPConnection connection = new TCP.TCPConnection(tcp_packet.SourceIP' tcp_packet.SourcePort' tcp_packet.DestinationIP'  " is 122.
Long Statement,Cosmos.Sys.Network,TCPIPStack,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIPStack.cs,IPv4_TCPHandler,The length of the statement  "                TCP.TCPPacket reset_packet = new TCP.TCPPacket(tcp_packet.DestinationIP' tcp_packet.SourceIP' tcp_packet.DestinationPort' " is 121.
Long Statement,Cosmos.Sys.Network,TCPIPStack,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIPStack.cs,IPv4_TCPHandler,The length of the statement  "                if ((tcp_packet.Syn == true) && (tcp_packet.Ack == true) && ((active_connection.LocalSequenceNumber + 1) == tcp_packet.AckNumber)) " is 130.
Long Statement,Cosmos.Sys.Network,IP4Packet,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\ChadTCPIP\IP4Packet.cs,Initialize,The length of the statement  "            // This field is an identification field and is primarily used for uniquely identifying fragments of an original IP datagram. Some experimental work has suggested using the ID field for other purposes' such as for adding packet-tracing information to datagrams in order to help trace back datagrams with spoofed source addresses. " is 329.
Long Statement,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,ToString,The length of the statement  "            return "IP Packet Src=" + sourceIP + "' Dest=" + destIP + "' Protocol=" + proto + "' TTL=" + ttl + "' DataLen=" + DataLength; " is 125.
Long Statement,Cosmos.Sys.Network.TCPIP.UDP,UDPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\UDP\UDPPacket.cs,ToString,The length of the statement  "            return "UDP Packet Src=" + sourceIP + ":" + sourcePort + "' Dest=" + destIP + ":" + destPort + "' DataLen=" + UDP_DataLength; " is 125.
Virtual Method Call from Constructor,Cosmos.Sys.Network.TCPIP,EthernetPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\EthernetPacket.cs,EthernetPacket,The constructor "EthernetPacket" calls a virtual method "initFields".
Virtual Method Call from Constructor,Cosmos.Sys.Network.TCPIP,EthernetPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\EthernetPacket.cs,EthernetPacket,The constructor "EthernetPacket" calls a virtual method "initFields".
Magic Number,Cosmos.Sys,VFSManager,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\VFSManager.cs,Init,The following statement contains a magic number: mFilesystems = new List<Filesystem>(4);
Magic Number,Cosmos.Sys,VFSManager,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\VFSManager.cs,ParseStringToInt,The following statement contains a magic number: for (int i = 0; i < aString.Length; i++) {                  if (i > 0) {                      xResult *= 10;                  }                    #region actual parsing                    switch (aString[i]) {                      case '0':                          break;                      case '1':                          xResult += 1;                          break;                      case '2':                          xResult += 2;                          break;                      case '3':                          xResult += 3;                          break;                      case '4':                          xResult += 4;                          break;                      case '5':                          xResult += 5;                          break;                      case '6':                          xResult += 6;                          break;                      case '7':                          xResult += 7;                          break;                      case '8':                          xResult += 8;                          break;                      case '9':                          xResult += 9;                          break;                      default:                          throw new Exception("Wrong number format! " + aString[i] + " is not a number.");                  }                    #endregion              }
Magic Number,Cosmos.Sys,VFSManager,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\VFSManager.cs,ParseStringToInt,The following statement contains a magic number: for (int i = 0; i < aString.Length; i++) {                  if (i > 0) {                      xResult *= 10;                  }                    #region actual parsing                    switch (aString[i]) {                      case '0':                          break;                      case '1':                          xResult += 1;                          break;                      case '2':                          xResult += 2;                          break;                      case '3':                          xResult += 3;                          break;                      case '4':                          xResult += 4;                          break;                      case '5':                          xResult += 5;                          break;                      case '6':                          xResult += 6;                          break;                      case '7':                          xResult += 7;                          break;                      case '8':                          xResult += 8;                          break;                      case '9':                          xResult += 9;                          break;                      default:                          throw new Exception("Wrong number format! " + aString[i] + " is not a number.");                  }                    #endregion              }
Magic Number,Cosmos.Sys,VFSManager,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\VFSManager.cs,ParseStringToInt,The following statement contains a magic number: for (int i = 0; i < aString.Length; i++) {                  if (i > 0) {                      xResult *= 10;                  }                    #region actual parsing                    switch (aString[i]) {                      case '0':                          break;                      case '1':                          xResult += 1;                          break;                      case '2':                          xResult += 2;                          break;                      case '3':                          xResult += 3;                          break;                      case '4':                          xResult += 4;                          break;                      case '5':                          xResult += 5;                          break;                      case '6':                          xResult += 6;                          break;                      case '7':                          xResult += 7;                          break;                      case '8':                          xResult += 8;                          break;                      case '9':                          xResult += 9;                          break;                      default:                          throw new Exception("Wrong number format! " + aString[i] + " is not a number.");                  }                    #endregion              }
Magic Number,Cosmos.Sys,VFSManager,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\VFSManager.cs,ParseStringToInt,The following statement contains a magic number: for (int i = 0; i < aString.Length; i++) {                  if (i > 0) {                      xResult *= 10;                  }                    #region actual parsing                    switch (aString[i]) {                      case '0':                          break;                      case '1':                          xResult += 1;                          break;                      case '2':                          xResult += 2;                          break;                      case '3':                          xResult += 3;                          break;                      case '4':                          xResult += 4;                          break;                      case '5':                          xResult += 5;                          break;                      case '6':                          xResult += 6;                          break;                      case '7':                          xResult += 7;                          break;                      case '8':                          xResult += 8;                          break;                      case '9':                          xResult += 9;                          break;                      default:                          throw new Exception("Wrong number format! " + aString[i] + " is not a number.");                  }                    #endregion              }
Magic Number,Cosmos.Sys,VFSManager,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\VFSManager.cs,ParseStringToInt,The following statement contains a magic number: for (int i = 0; i < aString.Length; i++) {                  if (i > 0) {                      xResult *= 10;                  }                    #region actual parsing                    switch (aString[i]) {                      case '0':                          break;                      case '1':                          xResult += 1;                          break;                      case '2':                          xResult += 2;                          break;                      case '3':                          xResult += 3;                          break;                      case '4':                          xResult += 4;                          break;                      case '5':                          xResult += 5;                          break;                      case '6':                          xResult += 6;                          break;                      case '7':                          xResult += 7;                          break;                      case '8':                          xResult += 8;                          break;                      case '9':                          xResult += 9;                          break;                      default:                          throw new Exception("Wrong number format! " + aString[i] + " is not a number.");                  }                    #endregion              }
Magic Number,Cosmos.Sys,VFSManager,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\VFSManager.cs,ParseStringToInt,The following statement contains a magic number: for (int i = 0; i < aString.Length; i++) {                  if (i > 0) {                      xResult *= 10;                  }                    #region actual parsing                    switch (aString[i]) {                      case '0':                          break;                      case '1':                          xResult += 1;                          break;                      case '2':                          xResult += 2;                          break;                      case '3':                          xResult += 3;                          break;                      case '4':                          xResult += 4;                          break;                      case '5':                          xResult += 5;                          break;                      case '6':                          xResult += 6;                          break;                      case '7':                          xResult += 7;                          break;                      case '8':                          xResult += 8;                          break;                      case '9':                          xResult += 9;                          break;                      default:                          throw new Exception("Wrong number format! " + aString[i] + " is not a number.");                  }                    #endregion              }
Magic Number,Cosmos.Sys,VFSManager,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\VFSManager.cs,ParseStringToInt,The following statement contains a magic number: for (int i = 0; i < aString.Length; i++) {                  if (i > 0) {                      xResult *= 10;                  }                    #region actual parsing                    switch (aString[i]) {                      case '0':                          break;                      case '1':                          xResult += 1;                          break;                      case '2':                          xResult += 2;                          break;                      case '3':                          xResult += 3;                          break;                      case '4':                          xResult += 4;                          break;                      case '5':                          xResult += 5;                          break;                      case '6':                          xResult += 6;                          break;                      case '7':                          xResult += 7;                          break;                      case '8':                          xResult += 8;                          break;                      case '9':                          xResult += 9;                          break;                      default:                          throw new Exception("Wrong number format! " + aString[i] + " is not a number.");                  }                    #endregion              }
Magic Number,Cosmos.Sys,VFSManager,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\VFSManager.cs,ParseStringToInt,The following statement contains a magic number: for (int i = 0; i < aString.Length; i++) {                  if (i > 0) {                      xResult *= 10;                  }                    #region actual parsing                    switch (aString[i]) {                      case '0':                          break;                      case '1':                          xResult += 1;                          break;                      case '2':                          xResult += 2;                          break;                      case '3':                          xResult += 3;                          break;                      case '4':                          xResult += 4;                          break;                      case '5':                          xResult += 5;                          break;                      case '6':                          xResult += 6;                          break;                      case '7':                          xResult += 7;                          break;                      case '8':                          xResult += 8;                          break;                      case '9':                          xResult += 9;                          break;                      default:                          throw new Exception("Wrong number format! " + aString[i] + " is not a number.");                  }                    #endregion              }
Magic Number,Cosmos.Sys,VFSManager,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\VFSManager.cs,ParseStringToInt,The following statement contains a magic number: for (int i = 0; i < aString.Length; i++) {                  if (i > 0) {                      xResult *= 10;                  }                    #region actual parsing                    switch (aString[i]) {                      case '0':                          break;                      case '1':                          xResult += 1;                          break;                      case '2':                          xResult += 2;                          break;                      case '3':                          xResult += 3;                          break;                      case '4':                          xResult += 4;                          break;                      case '5':                          xResult += 5;                          break;                      case '6':                          xResult += 6;                          break;                      case '7':                          xResult += 7;                          break;                      case '8':                          xResult += 8;                          break;                      case '9':                          xResult += 9;                          break;                      default:                          throw new Exception("Wrong number format! " + aString[i] + " is not a number.");                  }                    #endregion              }
Magic Number,Cosmos.Sys.Network,IPv4Address,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\IPv4Address.cs,IPv4Address,The following statement contains a magic number: address[2] = aThird;
Magic Number,Cosmos.Sys.Network,IPv4Address,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\IPv4Address.cs,IPv4Address,The following statement contains a magic number: address[3] = aFourth;
Magic Number,Cosmos.Sys.Network,IPv4Address,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\IPv4Address.cs,IPv4Address,The following statement contains a magic number: if (buffer == null || buffer.Length < (offset + 4))                  throw new ArgumentException("buffer does not contain enough data starting at offset"' "buffer");
Magic Number,Cosmos.Sys.Network,IPv4Address,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\IPv4Address.cs,IPv4Address,The following statement contains a magic number: address[2] = buffer[offset + 2];
Magic Number,Cosmos.Sys.Network,IPv4Address,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\IPv4Address.cs,IPv4Address,The following statement contains a magic number: address[2] = buffer[offset + 2];
Magic Number,Cosmos.Sys.Network,IPv4Address,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\IPv4Address.cs,IPv4Address,The following statement contains a magic number: address[3] = buffer[offset + 3];
Magic Number,Cosmos.Sys.Network,IPv4Address,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\IPv4Address.cs,IPv4Address,The following statement contains a magic number: address[3] = buffer[offset + 3];
Magic Number,Cosmos.Sys.Network,IPv4Address,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\IPv4Address.cs,Parse,The following statement contains a magic number: if (fragments.Length == 4)              {                  byte first = byte.Parse(fragments[0]);                  byte second = byte.Parse(fragments[1]);                  byte third = byte.Parse(fragments[2]);                  byte fourth = byte.Parse(fragments[3]);                    return new IPv4Address(first' second' third' fourth);              }              else              {                  return null;              }
Magic Number,Cosmos.Sys.Network,IPv4Address,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\IPv4Address.cs,Parse,The following statement contains a magic number: if (fragments.Length == 4)              {                  byte first = byte.Parse(fragments[0]);                  byte second = byte.Parse(fragments[1]);                  byte third = byte.Parse(fragments[2]);                  byte fourth = byte.Parse(fragments[3]);                    return new IPv4Address(first' second' third' fourth);              }              else              {                  return null;              }
Magic Number,Cosmos.Sys.Network,IPv4Address,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\IPv4Address.cs,Parse,The following statement contains a magic number: if (fragments.Length == 4)              {                  byte first = byte.Parse(fragments[0]);                  byte second = byte.Parse(fragments[1]);                  byte third = byte.Parse(fragments[2]);                  byte fourth = byte.Parse(fragments[3]);                    return new IPv4Address(first' second' third' fourth);              }              else              {                  return null;              }
Magic Number,Cosmos.Sys.Network,IPv4Address,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\IPv4Address.cs,IsLoopbackAddress,The following statement contains a magic number: if (address[0] == 127)                  return true;              else                  return false;
Magic Number,Cosmos.Sys.Network,IPv4Address,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\IPv4Address.cs,IsBroadcastAddress,The following statement contains a magic number: if (address[0] == 255)              {                  return true;              }
Magic Number,Cosmos.Sys.Network,IPv4Address,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\IPv4Address.cs,ToString,The following statement contains a magic number: return                  address[0] +                  "." +                  address[1] +                  "." +                  address[2] +                  "." +                  address[3];
Magic Number,Cosmos.Sys.Network,IPv4Address,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\IPv4Address.cs,ToString,The following statement contains a magic number: return                  address[0] +                  "." +                  address[1] +                  "." +                  address[2] +                  "." +                  address[3];
Magic Number,Cosmos.Sys.Network,IPv4Address,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\IPv4Address.cs,To32BitNumber,The following statement contains a magic number: return (UInt32)((address[0] << 24) | (address[1] << 16) | (address[2] << 8) | (address[3] << 0));
Magic Number,Cosmos.Sys.Network,IPv4Address,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\IPv4Address.cs,To32BitNumber,The following statement contains a magic number: return (UInt32)((address[0] << 24) | (address[1] << 16) | (address[2] << 8) | (address[3] << 0));
Magic Number,Cosmos.Sys.Network,IPv4Address,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\IPv4Address.cs,To32BitNumber,The following statement contains a magic number: return (UInt32)((address[0] << 24) | (address[1] << 16) | (address[2] << 8) | (address[3] << 0));
Magic Number,Cosmos.Sys.Network,IPv4Address,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\IPv4Address.cs,To32BitNumber,The following statement contains a magic number: return (UInt32)((address[0] << 24) | (address[1] << 16) | (address[2] << 8) | (address[3] << 0));
Magic Number,Cosmos.Sys.Network,IPv4Address,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\IPv4Address.cs,To32BitNumber,The following statement contains a magic number: return (UInt32)((address[0] << 24) | (address[1] << 16) | (address[2] << 8) | (address[3] << 0));
Magic Number,Cosmos.Sys.Network,IPv4Address,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\IPv4Address.cs,CompareTo,The following statement contains a magic number: if (obj is IPv4Address)              {                  IPv4Address other = (IPv4Address)obj;                  int i = 0;                  i = address[0].CompareTo(other.address[0]);                  if (i != 0) return i;                  i = address[1].CompareTo(other.address[1]);                  if (i != 0) return i;                  i = address[2].CompareTo(other.address[2]);                  if (i != 0) return i;                  i = address[3].CompareTo(other.address[3]);                  if (i != 0) return i;                    return 0;              }              else                  throw new ArgumentException("obj is not a IPv4Address"' "obj");
Magic Number,Cosmos.Sys.Network,IPv4Address,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\IPv4Address.cs,CompareTo,The following statement contains a magic number: if (obj is IPv4Address)              {                  IPv4Address other = (IPv4Address)obj;                  int i = 0;                  i = address[0].CompareTo(other.address[0]);                  if (i != 0) return i;                  i = address[1].CompareTo(other.address[1]);                  if (i != 0) return i;                  i = address[2].CompareTo(other.address[2]);                  if (i != 0) return i;                  i = address[3].CompareTo(other.address[3]);                  if (i != 0) return i;                    return 0;              }              else                  throw new ArgumentException("obj is not a IPv4Address"' "obj");
Magic Number,Cosmos.Sys.Network,IPv4Address,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\IPv4Address.cs,CompareTo,The following statement contains a magic number: if (obj is IPv4Address)              {                  IPv4Address other = (IPv4Address)obj;                  int i = 0;                  i = address[0].CompareTo(other.address[0]);                  if (i != 0) return i;                  i = address[1].CompareTo(other.address[1]);                  if (i != 0) return i;                  i = address[2].CompareTo(other.address[2]);                  if (i != 0) return i;                  i = address[3].CompareTo(other.address[3]);                  if (i != 0) return i;                    return 0;              }              else                  throw new ArgumentException("obj is not a IPv4Address"' "obj");
Magic Number,Cosmos.Sys.Network,IPv4Address,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\IPv4Address.cs,CompareTo,The following statement contains a magic number: if (obj is IPv4Address)              {                  IPv4Address other = (IPv4Address)obj;                  int i = 0;                  i = address[0].CompareTo(other.address[0]);                  if (i != 0) return i;                  i = address[1].CompareTo(other.address[1]);                  if (i != 0) return i;                  i = address[2].CompareTo(other.address[2]);                  if (i != 0) return i;                  i = address[3].CompareTo(other.address[3]);                  if (i != 0) return i;                    return 0;              }              else                  throw new ArgumentException("obj is not a IPv4Address"' "obj");
Magic Number,Cosmos.Sys.Network,TcpClient,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TcpClient.cs,TcpClient,The following statement contains a magic number: TCPPacket packet = new TCPPacket(connection' connection.LocalSequenceNumber' 0' 0x02' 8192);
Magic Number,Cosmos.Sys.Network,TcpClient,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TcpClient.cs,SendData,The following statement contains a magic number: if (data.Length < mss)              {                  TCPPacket packet = new TCPPacket(connection.LocalIP' connection.RemoteIP' connection.LocalPort' connection.RemotePort'                      connection.LocalSequenceNumber' connection.RemoteSequenceNumber' 0x18' 8192' data);                    TCPIP.IPv4OutgoingBuffer.AddPacket(packet);                    connection.LocalSequenceNumber += (uint)data.Length;                    return;              }
Magic Number,Cosmos.Sys.Network,TcpClient,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TcpClient.cs,SendData,The following statement contains a magic number: while (remaining_bytes > 0)              {                  if (remaining_bytes > mss)                  {                      new_buffer = new byte[mss];                  }                  else                  {                      new_buffer = new byte[remaining_bytes];                      tcp_flags = 0x18;                  }                    for (int b = 0; b < new_buffer.Length; b++)                  {                      new_buffer[b] = data[data_idx];                      data_idx++;                      remaining_bytes--;                  }                    TCPPacket packet = new TCPPacket(connection.LocalIP' connection.RemoteIP' connection.LocalPort' connection.RemotePort'                      connection.LocalSequenceNumber' connection.RemoteSequenceNumber' tcp_flags' 8192' new_buffer);                    TCPIP.IPv4OutgoingBuffer.AddPacket(packet);                    connection.LocalSequenceNumber += (uint)new_buffer.Length;              }
Magic Number,Cosmos.Sys.Network,TcpClient,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TcpClient.cs,Close,The following statement contains a magic number: TCPPacket packet = new TCPPacket(connection' connection.LocalSequenceNumber' connection.RemoteSequenceNumber + 1' 0x11' 8192);
Magic Number,Cosmos.Sys.Network,TCPIPStack,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIPStack.cs,HandlePacket,The following statement contains a magic number: UInt16 etherType = (UInt16)((packetData[12] << 8) | packetData[13]);
Magic Number,Cosmos.Sys.Network,TCPIPStack,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIPStack.cs,HandlePacket,The following statement contains a magic number: UInt16 etherType = (UInt16)((packetData[12] << 8) | packetData[13]);
Magic Number,Cosmos.Sys.Network,TCPIPStack,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIPStack.cs,HandlePacket,The following statement contains a magic number: UInt16 etherType = (UInt16)((packetData[12] << 8) | packetData[13]);
Magic Number,Cosmos.Sys.Network,TCPIPStack,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIPStack.cs,IPv4Handler,The following statement contains a magic number: if ((addressMap.ContainsKey(ip_packet.DestinationIP.To32BitNumber()) == true) ||                  (ip_packet.DestinationIP.address[3] == 255))              {                  switch (ip_packet.Protocol)                  {                      case 1:                          IPv4_ICMPHandler(packetData);                          break;                      case 6:                          IPv4_TCPHandler(packetData);                          break;                      case 17:                          IPv4_UDPHandler(packetData);                          break;                  }              }
Magic Number,Cosmos.Sys.Network,TCPIPStack,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIPStack.cs,IPv4Handler,The following statement contains a magic number: if ((addressMap.ContainsKey(ip_packet.DestinationIP.To32BitNumber()) == true) ||                  (ip_packet.DestinationIP.address[3] == 255))              {                  switch (ip_packet.Protocol)                  {                      case 1:                          IPv4_ICMPHandler(packetData);                          break;                      case 6:                          IPv4_TCPHandler(packetData);                          break;                      case 17:                          IPv4_UDPHandler(packetData);                          break;                  }              }
Magic Number,Cosmos.Sys.Network,TCPIPStack,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIPStack.cs,IPv4Handler,The following statement contains a magic number: if ((addressMap.ContainsKey(ip_packet.DestinationIP.To32BitNumber()) == true) ||                  (ip_packet.DestinationIP.address[3] == 255))              {                  switch (ip_packet.Protocol)                  {                      case 1:                          IPv4_ICMPHandler(packetData);                          break;                      case 6:                          IPv4_TCPHandler(packetData);                          break;                      case 17:                          IPv4_UDPHandler(packetData);                          break;                  }              }
Magic Number,Cosmos.Sys.Network,TCPIPStack,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIPStack.cs,IPv4Handler,The following statement contains a magic number: if ((addressMap.ContainsKey(ip_packet.DestinationIP.To32BitNumber()) == true) ||                  (ip_packet.DestinationIP.address[3] == 255))              {                  switch (ip_packet.Protocol)                  {                      case 1:                          IPv4_ICMPHandler(packetData);                          break;                      case 6:                          IPv4_TCPHandler(packetData);                          break;                      case 17:                          IPv4_UDPHandler(packetData);                          break;                  }              }
Magic Number,Cosmos.Sys.Network,TCPIPStack,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIPStack.cs,IPv4_TCPHandler,The following statement contains a magic number: if (tcp_packet.Syn == true)              {                  if (tcpListeners.ContainsKey(tcp_packet.DestinationPort) == true)                  {                      TCP.TCPConnection connection = new TCP.TCPConnection(tcp_packet.SourceIP' tcp_packet.SourcePort' tcp_packet.DestinationIP'                           tcp_packet.DestinationPort' tcp_packet.SequenceNumber' TCP.TCPConnection.State.SYN_RECVD);                        tcpSockets.Add(connection);                        TCP.TCPPacket syn_ack = new TCP.TCPPacket(connection' connection.LocalSequenceNumber'                                                                   ++connection.RemoteSequenceNumber' 0x12' 8192' 2);                      syn_ack.AddMSSOption(1360);                      syn_ack.AddSACKOption();                        TCPIP.IPv4OutgoingBuffer.AddPacket(syn_ack);                        return;                  }              }
Magic Number,Cosmos.Sys.Network,TCPIPStack,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIPStack.cs,IPv4_TCPHandler,The following statement contains a magic number: if (tcp_packet.Syn == true)              {                  if (tcpListeners.ContainsKey(tcp_packet.DestinationPort) == true)                  {                      TCP.TCPConnection connection = new TCP.TCPConnection(tcp_packet.SourceIP' tcp_packet.SourcePort' tcp_packet.DestinationIP'                           tcp_packet.DestinationPort' tcp_packet.SequenceNumber' TCP.TCPConnection.State.SYN_RECVD);                        tcpSockets.Add(connection);                        TCP.TCPPacket syn_ack = new TCP.TCPPacket(connection' connection.LocalSequenceNumber'                                                                   ++connection.RemoteSequenceNumber' 0x12' 8192' 2);                      syn_ack.AddMSSOption(1360);                      syn_ack.AddSACKOption();                        TCPIP.IPv4OutgoingBuffer.AddPacket(syn_ack);                        return;                  }              }
Magic Number,Cosmos.Sys.Network,TCPIPStack,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIPStack.cs,IPv4_TCPHandler,The following statement contains a magic number: if (tcp_packet.Syn == true)              {                  if (tcpListeners.ContainsKey(tcp_packet.DestinationPort) == true)                  {                      TCP.TCPConnection connection = new TCP.TCPConnection(tcp_packet.SourceIP' tcp_packet.SourcePort' tcp_packet.DestinationIP'                           tcp_packet.DestinationPort' tcp_packet.SequenceNumber' TCP.TCPConnection.State.SYN_RECVD);                        tcpSockets.Add(connection);                        TCP.TCPPacket syn_ack = new TCP.TCPPacket(connection' connection.LocalSequenceNumber'                                                                   ++connection.RemoteSequenceNumber' 0x12' 8192' 2);                      syn_ack.AddMSSOption(1360);                      syn_ack.AddSACKOption();                        TCPIP.IPv4OutgoingBuffer.AddPacket(syn_ack);                        return;                  }              }
Magic Number,Cosmos.Sys.Network,TCPIPStack,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIPStack.cs,IPv4_TCPHandler,The following statement contains a magic number: if (active_connection == null)              {                  TCP.TCPPacket reset_packet = new TCP.TCPPacket(tcp_packet.DestinationIP' tcp_packet.SourceIP' tcp_packet.DestinationPort'                                                                  tcp_packet.SourcePort' 0' (tcp_packet.SequenceNumber + 1)' 0x14' 8192);                  TCPIP.IPv4OutgoingBuffer.AddPacket(reset_packet);                  return;              }
Magic Number,Cosmos.Sys.Network,TCPIPStack,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIPStack.cs,IPv4_TCPHandler,The following statement contains a magic number: if (active_connection.ConnectionState == TCP.TCPConnection.State.SYN_RECVD)              {                  if ((tcp_packet.Ack == true) && ((active_connection.LocalSequenceNumber + 1) == tcp_packet.AckNumber))                  {                      active_connection.LocalSequenceNumber++;                      active_connection.ConnectionState = TCP.TCPConnection.State.ESTABLISHED;                        ClientConnected connectCallback = tcpListeners[tcp_packet.DestinationPort];                        connectCallback(new TcpClient(active_connection));                  }              }              else if (active_connection.ConnectionState == TCP.TCPConnection.State.SYN_SENT)              {                  if ((tcp_packet.Syn == true) && (tcp_packet.Ack == true) && ((active_connection.LocalSequenceNumber + 1) == tcp_packet.AckNumber))                  {                      active_connection.LocalSequenceNumber++;                      active_connection.RemoteSequenceNumber = tcp_packet.SequenceNumber + 1;                      active_connection.ConnectionState = TCP.TCPConnection.State.ESTABLISHED;                        TCP.TCPPacket ack = new TCP.TCPPacket(active_connection' active_connection.LocalSequenceNumber'                                                          active_connection.RemoteSequenceNumber' 0x10' 8192);                      TCPIP.IPv4OutgoingBuffer.AddPacket(ack);                  }              }              else if (active_connection.ConnectionState == TCP.TCPConnection.State.ESTABLISHED)              {                  if (tcp_packet.Ack == true)                  {                      //active_connection.LocalSequenceNumber = tcp_packet.AckNumber;                  }                    if (tcp_packet.TCP_DataLength > 0)                  {                      active_connection.RemoteSequenceNumber += tcp_packet.TCP_DataLength;                        TCP.TCPPacket ack = new TCP.TCPPacket(active_connection' active_connection.LocalSequenceNumber'                                                          active_connection.RemoteSequenceNumber' 0x10' 8192);                      TCPIP.IPv4OutgoingBuffer.AddPacket(ack);                        active_connection.client.dataReceived(tcp_packet.TCP_Data);                  }                    if (tcp_packet.Fin == true)                  {                      active_connection.client.disconnect();                  }              }
Magic Number,Cosmos.Sys.Network,TCPIPStack,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIPStack.cs,IPv4_TCPHandler,The following statement contains a magic number: if (active_connection.ConnectionState == TCP.TCPConnection.State.SYN_RECVD)              {                  if ((tcp_packet.Ack == true) && ((active_connection.LocalSequenceNumber + 1) == tcp_packet.AckNumber))                  {                      active_connection.LocalSequenceNumber++;                      active_connection.ConnectionState = TCP.TCPConnection.State.ESTABLISHED;                        ClientConnected connectCallback = tcpListeners[tcp_packet.DestinationPort];                        connectCallback(new TcpClient(active_connection));                  }              }              else if (active_connection.ConnectionState == TCP.TCPConnection.State.SYN_SENT)              {                  if ((tcp_packet.Syn == true) && (tcp_packet.Ack == true) && ((active_connection.LocalSequenceNumber + 1) == tcp_packet.AckNumber))                  {                      active_connection.LocalSequenceNumber++;                      active_connection.RemoteSequenceNumber = tcp_packet.SequenceNumber + 1;                      active_connection.ConnectionState = TCP.TCPConnection.State.ESTABLISHED;                        TCP.TCPPacket ack = new TCP.TCPPacket(active_connection' active_connection.LocalSequenceNumber'                                                          active_connection.RemoteSequenceNumber' 0x10' 8192);                      TCPIP.IPv4OutgoingBuffer.AddPacket(ack);                  }              }              else if (active_connection.ConnectionState == TCP.TCPConnection.State.ESTABLISHED)              {                  if (tcp_packet.Ack == true)                  {                      //active_connection.LocalSequenceNumber = tcp_packet.AckNumber;                  }                    if (tcp_packet.TCP_DataLength > 0)                  {                      active_connection.RemoteSequenceNumber += tcp_packet.TCP_DataLength;                        TCP.TCPPacket ack = new TCP.TCPPacket(active_connection' active_connection.LocalSequenceNumber'                                                          active_connection.RemoteSequenceNumber' 0x10' 8192);                      TCPIP.IPv4OutgoingBuffer.AddPacket(ack);                        active_connection.client.dataReceived(tcp_packet.TCP_Data);                  }                    if (tcp_packet.Fin == true)                  {                      active_connection.client.disconnect();                  }              }
Magic Number,Cosmos.Sys.Network,TCPIPStack,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIPStack.cs,IPv4_ICMPHandler,The following statement contains a magic number: switch (icmp_packet.ICMP_Type)              {                  case 0:                      ICMP.ICMPEchoReply recvd_reply = new ICMP.ICMPEchoReply(packetData);                      Console.WriteLine("Received ICMP Echo reply from " + recvd_reply.SourceIP.ToString());                      break;                  case 8:                      ICMP.ICMPEchoRequest request = new ICMP.ICMPEchoRequest(packetData);                      ICMP.ICMPEchoReply reply = new ICMP.ICMPEchoReply(request);                      Console.WriteLine("Sending ICMP Echo reply to " + reply.DestinationIP.ToString());                      TCPIP.IPv4OutgoingBuffer.AddPacket(reply);                      break;              }
Magic Number,Cosmos.Sys.Network,ICMPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\ChadTCPIP\ICMPPacket.cs,ICMPPacket,The following statement contains a magic number: mICMPHead = base.Initialize(                      aData'  //Data in ICMP body                      8'      //Size of ICMP header                      0x01'   //ICMP                      aSrcIP'                       aDestIP                      );
Magic Number,Cosmos.Sys.Network,ICMPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\ChadTCPIP\ICMPPacket.cs,SetChecksum,The following statement contains a magic number: mData[mICMPHead + 2] = (byte)(this.Checksum >> 8);
Magic Number,Cosmos.Sys.Network,ICMPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\ChadTCPIP\ICMPPacket.cs,SetChecksum,The following statement contains a magic number: mData[mICMPHead + 2] = (byte)(this.Checksum >> 8);
Magic Number,Cosmos.Sys.Network,ICMPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\ChadTCPIP\ICMPPacket.cs,SetChecksum,The following statement contains a magic number: mData[mICMPHead + 3] = (byte)this.Checksum;
Magic Number,Cosmos.Sys.Network,IP4Packet,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\ChadTCPIP\IP4Packet.cs,Initialize,The following statement contains a magic number: mData[mHeaderBegin] = (byte)(0x40 | (mHeaderSize >> 2));
Magic Number,Cosmos.Sys.Network,IP4Packet,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\ChadTCPIP\IP4Packet.cs,Initialize,The following statement contains a magic number: mData[mHeaderBegin + 2] = (byte)(xSize >> 8);
Magic Number,Cosmos.Sys.Network,IP4Packet,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\ChadTCPIP\IP4Packet.cs,Initialize,The following statement contains a magic number: mData[mHeaderBegin + 2] = (byte)(xSize >> 8);
Magic Number,Cosmos.Sys.Network,IP4Packet,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\ChadTCPIP\IP4Packet.cs,Initialize,The following statement contains a magic number: mData[mHeaderBegin + 3] = (byte)xSize;
Magic Number,Cosmos.Sys.Network,IP4Packet,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\ChadTCPIP\IP4Packet.cs,Initialize,The following statement contains a magic number: mData[mHeaderBegin + 4] = 0x5a;
Magic Number,Cosmos.Sys.Network,IP4Packet,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\ChadTCPIP\IP4Packet.cs,Initialize,The following statement contains a magic number: mData[mHeaderBegin + 5] = 0xf8;
Magic Number,Cosmos.Sys.Network,IP4Packet,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\ChadTCPIP\IP4Packet.cs,Initialize,The following statement contains a magic number: mData[mHeaderBegin + 6] = 0x00;
Magic Number,Cosmos.Sys.Network,IP4Packet,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\ChadTCPIP\IP4Packet.cs,Initialize,The following statement contains a magic number: mData[mHeaderBegin + 7] = 0x00;
Magic Number,Cosmos.Sys.Network,IP4Packet,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\ChadTCPIP\IP4Packet.cs,Initialize,The following statement contains a magic number: mData[mHeaderBegin + 8] = 0x80;
Magic Number,Cosmos.Sys.Network,IP4Packet,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\ChadTCPIP\IP4Packet.cs,Initialize,The following statement contains a magic number: mData[mHeaderBegin + 10] = 0x00;
Magic Number,Cosmos.Sys.Network,IP4Packet,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\ChadTCPIP\IP4Packet.cs,Initialize,The following statement contains a magic number: mData[mHeaderBegin + 11] = 0x00;
Magic Number,Cosmos.Sys.Network,IP4Packet,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\ChadTCPIP\IP4Packet.cs,SetChecksum,The following statement contains a magic number: mData[mHeaderBegin + 10] = 0;
Magic Number,Cosmos.Sys.Network,IP4Packet,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\ChadTCPIP\IP4Packet.cs,SetChecksum,The following statement contains a magic number: mData[mHeaderBegin + 11] = 0;
Magic Number,Cosmos.Sys.Network,IP4Packet,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\ChadTCPIP\IP4Packet.cs,SetChecksum,The following statement contains a magic number: for (int i = 0; i < mHeaderSize; i = i + 2)              {                  xResult += (UInt16)((mData[mHeaderBegin + i] << 8) + mData[mHeaderBegin + i + 1]);              }
Magic Number,Cosmos.Sys.Network,IP4Packet,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\ChadTCPIP\IP4Packet.cs,SetChecksum,The following statement contains a magic number: for (int i = 0; i < mHeaderSize; i = i + 2)              {                  xResult += (UInt16)((mData[mHeaderBegin + i] << 8) + mData[mHeaderBegin + i + 1]);              }
Magic Number,Cosmos.Sys.Network,IP4Packet,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\ChadTCPIP\IP4Packet.cs,SetChecksum,The following statement contains a magic number: xResult = (~((xResult & 0xFFFF) + (xResult >> 16)));
Magic Number,Cosmos.Sys.Network,IP4Packet,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\ChadTCPIP\IP4Packet.cs,SetChecksum,The following statement contains a magic number: mData[mHeaderBegin + 10] = (byte)(xResult >> 8);
Magic Number,Cosmos.Sys.Network,IP4Packet,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\ChadTCPIP\IP4Packet.cs,SetChecksum,The following statement contains a magic number: mData[mHeaderBegin + 10] = (byte)(xResult >> 8);
Magic Number,Cosmos.Sys.Network,IP4Packet,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\ChadTCPIP\IP4Packet.cs,SetChecksum,The following statement contains a magic number: mData[mHeaderBegin + 11] = (byte)xResult;
Magic Number,Cosmos.Sys.Network,UDPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\ChadTCPIP\UDPPacket.cs,UDPPacket,The following statement contains a magic number: mHeaderBegin = Initialize(aData' 8' 0x11' aSrcIP' aDestIP);
Magic Number,Cosmos.Sys.Network,UDPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\ChadTCPIP\UDPPacket.cs,UDPPacket,The following statement contains a magic number: mData[mHeaderBegin + 4] = (byte)(xSize >> 8);
Magic Number,Cosmos.Sys.Network,UDPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\ChadTCPIP\UDPPacket.cs,UDPPacket,The following statement contains a magic number: mData[mHeaderBegin + 4] = (byte)(xSize >> 8);
Magic Number,Cosmos.Sys.Network,UDPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\ChadTCPIP\UDPPacket.cs,UDPPacket,The following statement contains a magic number: mData[mHeaderBegin + 5] = (byte)xSize;
Magic Number,Cosmos.Sys.Network,UDPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\ChadTCPIP\UDPPacket.cs,Conclude,The following statement contains a magic number: mData[mHeaderBegin + 6] = 0;
Magic Number,Cosmos.Sys.Network,UDPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\ChadTCPIP\UDPPacket.cs,Conclude,The following statement contains a magic number: mData[mHeaderBegin + 7] = 0;
Magic Number,Cosmos.Sys.Network.TCPIP.ARP,ARPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ARP\ARPPacket.cs,initFields,The following statement contains a magic number: aHardwareType = (UInt16)((mRawData[14] << 8) | mRawData[15]);
Magic Number,Cosmos.Sys.Network.TCPIP.ARP,ARPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ARP\ARPPacket.cs,initFields,The following statement contains a magic number: aHardwareType = (UInt16)((mRawData[14] << 8) | mRawData[15]);
Magic Number,Cosmos.Sys.Network.TCPIP.ARP,ARPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ARP\ARPPacket.cs,initFields,The following statement contains a magic number: aHardwareType = (UInt16)((mRawData[14] << 8) | mRawData[15]);
Magic Number,Cosmos.Sys.Network.TCPIP.ARP,ARPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ARP\ARPPacket.cs,initFields,The following statement contains a magic number: aProtocolType = (UInt16)((mRawData[16] << 8) | mRawData[17]);
Magic Number,Cosmos.Sys.Network.TCPIP.ARP,ARPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ARP\ARPPacket.cs,initFields,The following statement contains a magic number: aProtocolType = (UInt16)((mRawData[16] << 8) | mRawData[17]);
Magic Number,Cosmos.Sys.Network.TCPIP.ARP,ARPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ARP\ARPPacket.cs,initFields,The following statement contains a magic number: aProtocolType = (UInt16)((mRawData[16] << 8) | mRawData[17]);
Magic Number,Cosmos.Sys.Network.TCPIP.ARP,ARPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ARP\ARPPacket.cs,initFields,The following statement contains a magic number: aHardwareLen = mRawData[18];
Magic Number,Cosmos.Sys.Network.TCPIP.ARP,ARPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ARP\ARPPacket.cs,initFields,The following statement contains a magic number: aProtocolLen = mRawData[19];
Magic Number,Cosmos.Sys.Network.TCPIP.ARP,ARPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ARP\ARPPacket.cs,initFields,The following statement contains a magic number: aOperation = (UInt16)((mRawData[20] << 8) | mRawData[21]);
Magic Number,Cosmos.Sys.Network.TCPIP.ARP,ARPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ARP\ARPPacket.cs,initFields,The following statement contains a magic number: aOperation = (UInt16)((mRawData[20] << 8) | mRawData[21]);
Magic Number,Cosmos.Sys.Network.TCPIP.ARP,ARPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ARP\ARPPacket.cs,initFields,The following statement contains a magic number: aOperation = (UInt16)((mRawData[20] << 8) | mRawData[21]);
Magic Number,Cosmos.Sys.Network.TCPIP.ARP,ARPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ARP\ARPPacket.cs,ARPPacket,The following statement contains a magic number: mRawData[14] = (byte)(hwType >> 8);
Magic Number,Cosmos.Sys.Network.TCPIP.ARP,ARPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ARP\ARPPacket.cs,ARPPacket,The following statement contains a magic number: mRawData[14] = (byte)(hwType >> 8);
Magic Number,Cosmos.Sys.Network.TCPIP.ARP,ARPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ARP\ARPPacket.cs,ARPPacket,The following statement contains a magic number: mRawData[15] = (byte)(hwType >> 0);
Magic Number,Cosmos.Sys.Network.TCPIP.ARP,ARPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ARP\ARPPacket.cs,ARPPacket,The following statement contains a magic number: mRawData[16] = (byte)(protoType >> 8);
Magic Number,Cosmos.Sys.Network.TCPIP.ARP,ARPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ARP\ARPPacket.cs,ARPPacket,The following statement contains a magic number: mRawData[16] = (byte)(protoType >> 8);
Magic Number,Cosmos.Sys.Network.TCPIP.ARP,ARPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ARP\ARPPacket.cs,ARPPacket,The following statement contains a magic number: mRawData[17] = (byte)(protoType >> 0);
Magic Number,Cosmos.Sys.Network.TCPIP.ARP,ARPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ARP\ARPPacket.cs,ARPPacket,The following statement contains a magic number: mRawData[18] = hwLen;
Magic Number,Cosmos.Sys.Network.TCPIP.ARP,ARPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ARP\ARPPacket.cs,ARPPacket,The following statement contains a magic number: mRawData[19] = protoLen;
Magic Number,Cosmos.Sys.Network.TCPIP.ARP,ARPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ARP\ARPPacket.cs,ARPPacket,The following statement contains a magic number: mRawData[20] = (byte)(operation >> 8);
Magic Number,Cosmos.Sys.Network.TCPIP.ARP,ARPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ARP\ARPPacket.cs,ARPPacket,The following statement contains a magic number: mRawData[20] = (byte)(operation >> 8);
Magic Number,Cosmos.Sys.Network.TCPIP.ARP,ARPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ARP\ARPPacket.cs,ARPPacket,The following statement contains a magic number: mRawData[21] = (byte)(operation >> 0);
Magic Number,Cosmos.Sys.Network.TCPIP.ARP,ARPPacket_EthernetIPv4,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ARP\ARPPacket_EthernetIPv4.cs,initFields,The following statement contains a magic number: mSenderMAC = new HW.Network.MACAddress(mRawData' 22);
Magic Number,Cosmos.Sys.Network.TCPIP.ARP,ARPPacket_EthernetIPv4,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ARP\ARPPacket_EthernetIPv4.cs,initFields,The following statement contains a magic number: mSenderIP = new IPv4Address(mRawData' 28);
Magic Number,Cosmos.Sys.Network.TCPIP.ARP,ARPPacket_EthernetIPv4,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ARP\ARPPacket_EthernetIPv4.cs,initFields,The following statement contains a magic number: mTargetMAC = new HW.Network.MACAddress(mRawData' 32);
Magic Number,Cosmos.Sys.Network.TCPIP.ARP,ARPPacket_EthernetIPv4,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ARP\ARPPacket_EthernetIPv4.cs,initFields,The following statement contains a magic number: mTargetIP = new IPv4Address(mRawData' 38);
Magic Number,Cosmos.Sys.Network.TCPIP.ARP,ARPPacket_EthernetIPv4,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ARP\ARPPacket_EthernetIPv4.cs,ARPPacket_EthernetIPv4,The following statement contains a magic number: for (int i = 0; i < 6; i++)              {                  mRawData[22 + i] = senderMAC.bytes[i];                  mRawData[32 + i] = targetMAC.bytes[i];              }
Magic Number,Cosmos.Sys.Network.TCPIP.ARP,ARPPacket_EthernetIPv4,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ARP\ARPPacket_EthernetIPv4.cs,ARPPacket_EthernetIPv4,The following statement contains a magic number: for (int i = 0; i < 6; i++)              {                  mRawData[22 + i] = senderMAC.bytes[i];                  mRawData[32 + i] = targetMAC.bytes[i];              }
Magic Number,Cosmos.Sys.Network.TCPIP.ARP,ARPPacket_EthernetIPv4,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ARP\ARPPacket_EthernetIPv4.cs,ARPPacket_EthernetIPv4,The following statement contains a magic number: for (int i = 0; i < 6; i++)              {                  mRawData[22 + i] = senderMAC.bytes[i];                  mRawData[32 + i] = targetMAC.bytes[i];              }
Magic Number,Cosmos.Sys.Network.TCPIP.ARP,ARPPacket_EthernetIPv4,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ARP\ARPPacket_EthernetIPv4.cs,ARPPacket_EthernetIPv4,The following statement contains a magic number: for (int i = 0; i < 4; i++)              {                  mRawData[28 + i] = senderIP.address[i];                  mRawData[38 + i] = targetIP.address[i];              }
Magic Number,Cosmos.Sys.Network.TCPIP.ARP,ARPPacket_EthernetIPv4,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ARP\ARPPacket_EthernetIPv4.cs,ARPPacket_EthernetIPv4,The following statement contains a magic number: for (int i = 0; i < 4; i++)              {                  mRawData[28 + i] = senderIP.address[i];                  mRawData[38 + i] = targetIP.address[i];              }
Magic Number,Cosmos.Sys.Network.TCPIP.ARP,ARPPacket_EthernetIPv4,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ARP\ARPPacket_EthernetIPv4.cs,ARPPacket_EthernetIPv4,The following statement contains a magic number: for (int i = 0; i < 4; i++)              {                  mRawData[28 + i] = senderIP.address[i];                  mRawData[38 + i] = targetIP.address[i];              }
Magic Number,Cosmos.Sys.Network.TCPIP,EthernetPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\EthernetPacket.cs,initFields,The following statement contains a magic number: srcMAC = new HW.Network.MACAddress(mRawData' 6);
Magic Number,Cosmos.Sys.Network.TCPIP,EthernetPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\EthernetPacket.cs,initFields,The following statement contains a magic number: aEtherType = (UInt16)((mRawData[12] << 8) | mRawData[13]);
Magic Number,Cosmos.Sys.Network.TCPIP,EthernetPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\EthernetPacket.cs,initFields,The following statement contains a magic number: aEtherType = (UInt16)((mRawData[12] << 8) | mRawData[13]);
Magic Number,Cosmos.Sys.Network.TCPIP,EthernetPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\EthernetPacket.cs,initFields,The following statement contains a magic number: aEtherType = (UInt16)((mRawData[12] << 8) | mRawData[13]);
Magic Number,Cosmos.Sys.Network.TCPIP,EthernetPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\EthernetPacket.cs,EthernetPacket,The following statement contains a magic number: for (int i = 0; i < 6; i++)              {                  mRawData[i] = dest.bytes[i];                  mRawData[6 + i] = src.bytes[i];              }
Magic Number,Cosmos.Sys.Network.TCPIP,EthernetPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\EthernetPacket.cs,EthernetPacket,The following statement contains a magic number: for (int i = 0; i < 6; i++)              {                  mRawData[i] = dest.bytes[i];                  mRawData[6 + i] = src.bytes[i];              }
Magic Number,Cosmos.Sys.Network.TCPIP,EthernetPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\EthernetPacket.cs,EthernetPacket,The following statement contains a magic number: mRawData[12] = (byte)(type >> 8);
Magic Number,Cosmos.Sys.Network.TCPIP,EthernetPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\EthernetPacket.cs,EthernetPacket,The following statement contains a magic number: mRawData[12] = (byte)(type >> 8);
Magic Number,Cosmos.Sys.Network.TCPIP,EthernetPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\EthernetPacket.cs,EthernetPacket,The following statement contains a magic number: mRawData[13] = (byte)(type >> 0);
Magic Number,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,initFields,The following statement contains a magic number: ipVersion = (byte)((mRawData[14] & 0xF0) >> 4);
Magic Number,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,initFields,The following statement contains a magic number: ipVersion = (byte)((mRawData[14] & 0xF0) >> 4);
Magic Number,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,initFields,The following statement contains a magic number: ipHeaderLength = (byte)(mRawData[14] & 0x0F);
Magic Number,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,initFields,The following statement contains a magic number: tos = mRawData[15];
Magic Number,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,initFields,The following statement contains a magic number: ipLength = (UInt16)((mRawData[16] << 8) | mRawData[17]);
Magic Number,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,initFields,The following statement contains a magic number: ipLength = (UInt16)((mRawData[16] << 8) | mRawData[17]);
Magic Number,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,initFields,The following statement contains a magic number: ipLength = (UInt16)((mRawData[16] << 8) | mRawData[17]);
Magic Number,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,initFields,The following statement contains a magic number: fragmentID = (UInt16)((mRawData[18] << 8) | mRawData[19]);
Magic Number,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,initFields,The following statement contains a magic number: fragmentID = (UInt16)((mRawData[18] << 8) | mRawData[19]);
Magic Number,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,initFields,The following statement contains a magic number: fragmentID = (UInt16)((mRawData[18] << 8) | mRawData[19]);
Magic Number,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,initFields,The following statement contains a magic number: flags = (byte)((mRawData[20] & 0xE0) >> 5);
Magic Number,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,initFields,The following statement contains a magic number: flags = (byte)((mRawData[20] & 0xE0) >> 5);
Magic Number,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,initFields,The following statement contains a magic number: fragmentOffset = (UInt16)(((mRawData[20] & 0x1F) << 8) | mRawData[21]);
Magic Number,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,initFields,The following statement contains a magic number: fragmentOffset = (UInt16)(((mRawData[20] & 0x1F) << 8) | mRawData[21]);
Magic Number,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,initFields,The following statement contains a magic number: fragmentOffset = (UInt16)(((mRawData[20] & 0x1F) << 8) | mRawData[21]);
Magic Number,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,initFields,The following statement contains a magic number: ttl = mRawData[22];
Magic Number,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,initFields,The following statement contains a magic number: proto = mRawData[23];
Magic Number,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,initFields,The following statement contains a magic number: ipCRC = (UInt16)((mRawData[24] << 8) | mRawData[25]);
Magic Number,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,initFields,The following statement contains a magic number: ipCRC = (UInt16)((mRawData[24] << 8) | mRawData[25]);
Magic Number,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,initFields,The following statement contains a magic number: ipCRC = (UInt16)((mRawData[24] << 8) | mRawData[25]);
Magic Number,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,initFields,The following statement contains a magic number: sourceIP = new IPv4Address(mRawData' 26);
Magic Number,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,initFields,The following statement contains a magic number: destIP = new IPv4Address(mRawData' 30);
Magic Number,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,initFields,The following statement contains a magic number: dataOffset = (UInt16)(14 + HeaderLength);
Magic Number,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,IPPacket,The following statement contains a magic number: mRawData[14] = 0x45;
Magic Number,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,IPPacket,The following statement contains a magic number: mRawData[15] = 0;
Magic Number,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,IPPacket,The following statement contains a magic number: ipLength = (UInt16)(dataLength + 20);
Magic Number,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,IPPacket,The following statement contains a magic number: ipHeaderLength = 5;
Magic Number,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,IPPacket,The following statement contains a magic number: mRawData[16] = (byte)((ipLength >> 8) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,IPPacket,The following statement contains a magic number: mRawData[16] = (byte)((ipLength >> 8) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,IPPacket,The following statement contains a magic number: mRawData[17] = (byte)((ipLength >> 0) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,IPPacket,The following statement contains a magic number: mRawData[18] = (byte)((fragmentID >> 8) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,IPPacket,The following statement contains a magic number: mRawData[18] = (byte)((fragmentID >> 8) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,IPPacket,The following statement contains a magic number: mRawData[19] = (byte)((fragmentID >> 0) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,IPPacket,The following statement contains a magic number: mRawData[20] = 0x00;
Magic Number,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,IPPacket,The following statement contains a magic number: mRawData[21] = 0x00;
Magic Number,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,IPPacket,The following statement contains a magic number: mRawData[22] = 0x80;
Magic Number,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,IPPacket,The following statement contains a magic number: mRawData[23] = protocol;
Magic Number,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,IPPacket,The following statement contains a magic number: mRawData[24] = 0x00;
Magic Number,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,IPPacket,The following statement contains a magic number: mRawData[25] = 0x00;
Magic Number,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,IPPacket,The following statement contains a magic number: for (int b = 0; b < 4; b++)              {                  mRawData[26 + b] = source.address[b];                  mRawData[30 + b] = dest.address[b];              }
Magic Number,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,IPPacket,The following statement contains a magic number: for (int b = 0; b < 4; b++)              {                  mRawData[26 + b] = source.address[b];                  mRawData[30 + b] = dest.address[b];              }
Magic Number,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,IPPacket,The following statement contains a magic number: for (int b = 0; b < 4; b++)              {                  mRawData[26 + b] = source.address[b];                  mRawData[30 + b] = dest.address[b];              }
Magic Number,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,IPPacket,The following statement contains a magic number: ipCRC = CalcIPCRC(20);
Magic Number,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,IPPacket,The following statement contains a magic number: mRawData[24] = (byte)((ipCRC >> 8) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,IPPacket,The following statement contains a magic number: mRawData[24] = (byte)((ipCRC >> 8) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,IPPacket,The following statement contains a magic number: mRawData[25] = (byte)((ipCRC >> 0) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,CalcOcCRC,The following statement contains a magic number: for (UInt16 w = offset; w < offset + length; w += 2)              {                  crc += (UInt16)((buffer[w] << 8) | buffer[w + 1]);              }
Magic Number,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,CalcOcCRC,The following statement contains a magic number: for (UInt16 w = offset; w < offset + length; w += 2)              {                  crc += (UInt16)((buffer[w] << 8) | buffer[w + 1]);              }
Magic Number,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,CalcOcCRC,The following statement contains a magic number: crc = (~((crc & 0xFFFF) + (crc >> 16)));
Magic Number,Cosmos.Sys.Network.TCPIP,IPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\IPPacket.cs,CalcIPCRC,The following statement contains a magic number: return CalcOcCRC(14' headerLength);
Magic Number,Cosmos.Sys.Network.TCPIP.ICMP,ICMPEchoReply,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ICMP\ICMPEchoReply.cs,initFields,The following statement contains a magic number: icmpID = (UInt16)((mRawData[this.dataOffset + 4] << 8) | mRawData[this.dataOffset + 5]);
Magic Number,Cosmos.Sys.Network.TCPIP.ICMP,ICMPEchoReply,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ICMP\ICMPEchoReply.cs,initFields,The following statement contains a magic number: icmpID = (UInt16)((mRawData[this.dataOffset + 4] << 8) | mRawData[this.dataOffset + 5]);
Magic Number,Cosmos.Sys.Network.TCPIP.ICMP,ICMPEchoReply,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ICMP\ICMPEchoReply.cs,initFields,The following statement contains a magic number: icmpID = (UInt16)((mRawData[this.dataOffset + 4] << 8) | mRawData[this.dataOffset + 5]);
Magic Number,Cosmos.Sys.Network.TCPIP.ICMP,ICMPEchoReply,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ICMP\ICMPEchoReply.cs,initFields,The following statement contains a magic number: icmpSequence = (UInt16)((mRawData[this.dataOffset + 6] << 8) | mRawData[this.dataOffset + 7]);
Magic Number,Cosmos.Sys.Network.TCPIP.ICMP,ICMPEchoReply,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ICMP\ICMPEchoReply.cs,initFields,The following statement contains a magic number: icmpSequence = (UInt16)((mRawData[this.dataOffset + 6] << 8) | mRawData[this.dataOffset + 7]);
Magic Number,Cosmos.Sys.Network.TCPIP.ICMP,ICMPEchoReply,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ICMP\ICMPEchoReply.cs,initFields,The following statement contains a magic number: icmpSequence = (UInt16)((mRawData[this.dataOffset + 6] << 8) | mRawData[this.dataOffset + 7]);
Magic Number,Cosmos.Sys.Network.TCPIP.ICMP,ICMPEchoReply,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ICMP\ICMPEchoReply.cs,ICMPEchoReply,The following statement contains a magic number: for (int b = 0; b < this.ICMP_DataLength; b++)              {                  mRawData[this.dataOffset + 8 + b] = request.RawData[this.dataOffset + 8 + b];              }
Magic Number,Cosmos.Sys.Network.TCPIP.ICMP,ICMPEchoReply,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ICMP\ICMPEchoReply.cs,ICMPEchoReply,The following statement contains a magic number: for (int b = 0; b < this.ICMP_DataLength; b++)              {                  mRawData[this.dataOffset + 8 + b] = request.RawData[this.dataOffset + 8 + b];              }
Magic Number,Cosmos.Sys.Network.TCPIP.ICMP,ICMPEchoReply,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ICMP\ICMPEchoReply.cs,ICMPEchoReply,The following statement contains a magic number: mRawData[this.dataOffset + 2] = 0x00;
Magic Number,Cosmos.Sys.Network.TCPIP.ICMP,ICMPEchoReply,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ICMP\ICMPEchoReply.cs,ICMPEchoReply,The following statement contains a magic number: mRawData[this.dataOffset + 3] = 0x00;
Magic Number,Cosmos.Sys.Network.TCPIP.ICMP,ICMPEchoReply,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ICMP\ICMPEchoReply.cs,ICMPEchoReply,The following statement contains a magic number: icmpCRC = CalcICMPCRC((UInt16)(this.ICMP_DataLength + 8));
Magic Number,Cosmos.Sys.Network.TCPIP.ICMP,ICMPEchoReply,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ICMP\ICMPEchoReply.cs,ICMPEchoReply,The following statement contains a magic number: mRawData[this.dataOffset + 2] = (byte)((icmpCRC >> 8) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP.ICMP,ICMPEchoReply,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ICMP\ICMPEchoReply.cs,ICMPEchoReply,The following statement contains a magic number: mRawData[this.dataOffset + 2] = (byte)((icmpCRC >> 8) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP.ICMP,ICMPEchoReply,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ICMP\ICMPEchoReply.cs,ICMPEchoReply,The following statement contains a magic number: mRawData[this.dataOffset + 3] = (byte)((icmpCRC >> 0) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP.ICMP,ICMPEchoRequest,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ICMP\ICMPEchoRequest.cs,ICMPEchoRequest,The following statement contains a magic number: for (byte b = 8; b < this.ICMP_DataLength; b++)              {                  mRawData[this.dataOffset + b] = b;              }
Magic Number,Cosmos.Sys.Network.TCPIP.ICMP,ICMPEchoRequest,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ICMP\ICMPEchoRequest.cs,ICMPEchoRequest,The following statement contains a magic number: mRawData[this.dataOffset + 2] = 0x00;
Magic Number,Cosmos.Sys.Network.TCPIP.ICMP,ICMPEchoRequest,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ICMP\ICMPEchoRequest.cs,ICMPEchoRequest,The following statement contains a magic number: mRawData[this.dataOffset + 3] = 0x00;
Magic Number,Cosmos.Sys.Network.TCPIP.ICMP,ICMPEchoRequest,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ICMP\ICMPEchoRequest.cs,ICMPEchoRequest,The following statement contains a magic number: icmpCRC = CalcICMPCRC((UInt16)(this.ICMP_DataLength + 8));
Magic Number,Cosmos.Sys.Network.TCPIP.ICMP,ICMPEchoRequest,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ICMP\ICMPEchoRequest.cs,ICMPEchoRequest,The following statement contains a magic number: mRawData[this.dataOffset + 2] = (byte)((icmpCRC >> 8) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP.ICMP,ICMPEchoRequest,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ICMP\ICMPEchoRequest.cs,ICMPEchoRequest,The following statement contains a magic number: mRawData[this.dataOffset + 2] = (byte)((icmpCRC >> 8) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP.ICMP,ICMPEchoRequest,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ICMP\ICMPEchoRequest.cs,ICMPEchoRequest,The following statement contains a magic number: mRawData[this.dataOffset + 3] = (byte)((icmpCRC >> 0) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP.ICMP,ICMPEchoRequest,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ICMP\ICMPEchoRequest.cs,initFields,The following statement contains a magic number: icmpID = (UInt16)((mRawData[this.dataOffset + 4] << 8) | mRawData[this.dataOffset + 5]);
Magic Number,Cosmos.Sys.Network.TCPIP.ICMP,ICMPEchoRequest,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ICMP\ICMPEchoRequest.cs,initFields,The following statement contains a magic number: icmpID = (UInt16)((mRawData[this.dataOffset + 4] << 8) | mRawData[this.dataOffset + 5]);
Magic Number,Cosmos.Sys.Network.TCPIP.ICMP,ICMPEchoRequest,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ICMP\ICMPEchoRequest.cs,initFields,The following statement contains a magic number: icmpID = (UInt16)((mRawData[this.dataOffset + 4] << 8) | mRawData[this.dataOffset + 5]);
Magic Number,Cosmos.Sys.Network.TCPIP.ICMP,ICMPEchoRequest,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ICMP\ICMPEchoRequest.cs,initFields,The following statement contains a magic number: icmpSequence = (UInt16)((mRawData[this.dataOffset + 6] << 8) | mRawData[this.dataOffset + 7]);
Magic Number,Cosmos.Sys.Network.TCPIP.ICMP,ICMPEchoRequest,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ICMP\ICMPEchoRequest.cs,initFields,The following statement contains a magic number: icmpSequence = (UInt16)((mRawData[this.dataOffset + 6] << 8) | mRawData[this.dataOffset + 7]);
Magic Number,Cosmos.Sys.Network.TCPIP.ICMP,ICMPEchoRequest,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ICMP\ICMPEchoRequest.cs,initFields,The following statement contains a magic number: icmpSequence = (UInt16)((mRawData[this.dataOffset + 6] << 8) | mRawData[this.dataOffset + 7]);
Magic Number,Cosmos.Sys.Network.TCPIP.ICMP,ICMPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ICMP\ICMPPacket.cs,initFields,The following statement contains a magic number: icmpCRC = (UInt16)((mRawData[this.dataOffset + 2] << 8) | mRawData[this.dataOffset + 3]);
Magic Number,Cosmos.Sys.Network.TCPIP.ICMP,ICMPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ICMP\ICMPPacket.cs,initFields,The following statement contains a magic number: icmpCRC = (UInt16)((mRawData[this.dataOffset + 2] << 8) | mRawData[this.dataOffset + 3]);
Magic Number,Cosmos.Sys.Network.TCPIP.ICMP,ICMPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ICMP\ICMPPacket.cs,initFields,The following statement contains a magic number: icmpCRC = (UInt16)((mRawData[this.dataOffset + 2] << 8) | mRawData[this.dataOffset + 3]);
Magic Number,Cosmos.Sys.Network.TCPIP.ICMP,ICMPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ICMP\ICMPPacket.cs,ICMPPacket,The following statement contains a magic number: mRawData[this.dataOffset + 2] = 0x00;
Magic Number,Cosmos.Sys.Network.TCPIP.ICMP,ICMPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ICMP\ICMPPacket.cs,ICMPPacket,The following statement contains a magic number: mRawData[this.dataOffset + 3] = 0x00;
Magic Number,Cosmos.Sys.Network.TCPIP.ICMP,ICMPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ICMP\ICMPPacket.cs,ICMPPacket,The following statement contains a magic number: mRawData[this.dataOffset + 4] = (byte)((id >> 8) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP.ICMP,ICMPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ICMP\ICMPPacket.cs,ICMPPacket,The following statement contains a magic number: mRawData[this.dataOffset + 4] = (byte)((id >> 8) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP.ICMP,ICMPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ICMP\ICMPPacket.cs,ICMPPacket,The following statement contains a magic number: mRawData[this.dataOffset + 5] = (byte)((id >> 0) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP.ICMP,ICMPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ICMP\ICMPPacket.cs,ICMPPacket,The following statement contains a magic number: mRawData[this.dataOffset + 6] = (byte)((seq >> 8) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP.ICMP,ICMPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ICMP\ICMPPacket.cs,ICMPPacket,The following statement contains a magic number: mRawData[this.dataOffset + 6] = (byte)((seq >> 8) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP.ICMP,ICMPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ICMP\ICMPPacket.cs,ICMPPacket,The following statement contains a magic number: mRawData[this.dataOffset + 7] = (byte)((seq >> 0) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP.ICMP,ICMPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ICMP\ICMPPacket.cs,ICMPPacket,The following statement contains a magic number: icmpCRC = CalcICMPCRC((UInt16)(icmpDataSize + 8));
Magic Number,Cosmos.Sys.Network.TCPIP.ICMP,ICMPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ICMP\ICMPPacket.cs,ICMPPacket,The following statement contains a magic number: mRawData[this.dataOffset + 2] = (byte)((icmpCRC >> 8) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP.ICMP,ICMPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ICMP\ICMPPacket.cs,ICMPPacket,The following statement contains a magic number: mRawData[this.dataOffset + 2] = (byte)((icmpCRC >> 8) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP.ICMP,ICMPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ICMP\ICMPPacket.cs,ICMPPacket,The following statement contains a magic number: mRawData[this.dataOffset + 3] = (byte)((icmpCRC >> 0) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP.ICMP,ICMPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\ICMP\ICMPPacket.cs,GetICMPData,The following statement contains a magic number: for (int b = 0; b < ICMP_DataLength; b++)              {                  data[b] = mRawData[this.dataOffset + 8 + b];              }
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,TCPPacket,The following statement contains a magic number: numOptions = optionLength / 4;
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,TCPPacket,The following statement contains a magic number: mRawData[this.dataOffset + 0] = (byte)((srcPort >> 8) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,TCPPacket,The following statement contains a magic number: mRawData[this.dataOffset + 2] = (byte)((destPort >> 8) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,TCPPacket,The following statement contains a magic number: mRawData[this.dataOffset + 2] = (byte)((destPort >> 8) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,TCPPacket,The following statement contains a magic number: mRawData[this.dataOffset + 3] = (byte)((destPort >> 0) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,TCPPacket,The following statement contains a magic number: mRawData[this.dataOffset + 4] = (byte)((seqNum >> 24) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,TCPPacket,The following statement contains a magic number: mRawData[this.dataOffset + 4] = (byte)((seqNum >> 24) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,TCPPacket,The following statement contains a magic number: mRawData[this.dataOffset + 5] = (byte)((seqNum >> 16) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,TCPPacket,The following statement contains a magic number: mRawData[this.dataOffset + 5] = (byte)((seqNum >> 16) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,TCPPacket,The following statement contains a magic number: mRawData[this.dataOffset + 6] = (byte)((seqNum >> 8) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,TCPPacket,The following statement contains a magic number: mRawData[this.dataOffset + 6] = (byte)((seqNum >> 8) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,TCPPacket,The following statement contains a magic number: mRawData[this.dataOffset + 7] = (byte)((seqNum >> 0) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,TCPPacket,The following statement contains a magic number: mRawData[this.dataOffset + 8] = (byte)((ackNum >> 24) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,TCPPacket,The following statement contains a magic number: mRawData[this.dataOffset + 8] = (byte)((ackNum >> 24) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,TCPPacket,The following statement contains a magic number: mRawData[this.dataOffset + 9] = (byte)((ackNum >> 16) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,TCPPacket,The following statement contains a magic number: mRawData[this.dataOffset + 9] = (byte)((ackNum >> 16) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,TCPPacket,The following statement contains a magic number: mRawData[this.dataOffset + 10] = (byte)((ackNum >> 8) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,TCPPacket,The following statement contains a magic number: mRawData[this.dataOffset + 10] = (byte)((ackNum >> 8) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,TCPPacket,The following statement contains a magic number: mRawData[this.dataOffset + 11] = (byte)((ackNum >> 0) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,TCPPacket,The following statement contains a magic number: mRawData[this.dataOffset + 12] = (byte)((5 + numOptions) << 4);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,TCPPacket,The following statement contains a magic number: mRawData[this.dataOffset + 12] = (byte)((5 + numOptions) << 4);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,TCPPacket,The following statement contains a magic number: mRawData[this.dataOffset + 12] = (byte)((5 + numOptions) << 4);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,TCPPacket,The following statement contains a magic number: mRawData[this.dataOffset + 13] = tcpFlags;
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,TCPPacket,The following statement contains a magic number: mRawData[this.dataOffset + 14] = (byte)((winSize >> 8) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,TCPPacket,The following statement contains a magic number: mRawData[this.dataOffset + 14] = (byte)((winSize >> 8) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,TCPPacket,The following statement contains a magic number: mRawData[this.dataOffset + 15] = (byte)((winSize >> 0) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,TCPPacket,The following statement contains a magic number: mRawData[this.dataOffset + 16] = 0x00;
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,TCPPacket,The following statement contains a magic number: mRawData[this.dataOffset + 17] = 0x00;
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,TCPPacket,The following statement contains a magic number: mRawData[this.dataOffset + 18] = 0x00;
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,TCPPacket,The following statement contains a magic number: mRawData[this.dataOffset + 19] = 0x00;
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,RecalcCRC,The following statement contains a magic number: mRawData[this.dataOffset + 16] = 0x00;
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,RecalcCRC,The following statement contains a magic number: mRawData[this.dataOffset + 17] = 0x00;
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,RecalcCRC,The following statement contains a magic number: mRawData[this.dataOffset + 16] = (byte)((tcpChecksum >> 8) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,RecalcCRC,The following statement contains a magic number: mRawData[this.dataOffset + 16] = (byte)((tcpChecksum >> 8) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,RecalcCRC,The following statement contains a magic number: mRawData[this.dataOffset + 17] = (byte)((tcpChecksum >> 0) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,CalcTCPCRC,The following statement contains a magic number: byte[] tempHeader = new byte[32 + TCP_DataLength + optionsLength];
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,CalcTCPCRC,The following statement contains a magic number: for (int b = 0; b < 8; b++)              {                  tempHeader[b] = mRawData[26 + b];              }
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,CalcTCPCRC,The following statement contains a magic number: for (int b = 0; b < 8; b++)              {                  tempHeader[b] = mRawData[26 + b];              }
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,CalcTCPCRC,The following statement contains a magic number: tempHeader[9] = 6;
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,CalcTCPCRC,The following statement contains a magic number: tempHeader[9] = 6;
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,CalcTCPCRC,The following statement contains a magic number: tempHeader[10] = (byte)(this.TCP_Length >> 8);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,CalcTCPCRC,The following statement contains a magic number: tempHeader[10] = (byte)(this.TCP_Length >> 8);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,CalcTCPCRC,The following statement contains a magic number: tempHeader[11] = (byte)(this.TCP_Length & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,CalcTCPCRC,The following statement contains a magic number: for (int b = 0; b < 20 + optionsLength; b++)              {                  tempHeader[12 + b] = mRawData[this.dataOffset + b];              }
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,CalcTCPCRC,The following statement contains a magic number: for (int b = 0; b < 20 + optionsLength; b++)              {                  tempHeader[12 + b] = mRawData[this.dataOffset + b];              }
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,CalcTCPCRC,The following statement contains a magic number: for (int b = 0; b < this.TCP_DataLength; b++)              {                  tempHeader[32 + optionsLength + b] = mRawData[this.tcpDataOffset + b];              }
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,initFields,The following statement contains a magic number: sourcePort = (UInt16)((mRawData[this.dataOffset] << 8) | mRawData[this.dataOffset + 1]);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,initFields,The following statement contains a magic number: destPort = (UInt16)((mRawData[this.dataOffset + 2] << 8) | mRawData[this.dataOffset + 3]);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,initFields,The following statement contains a magic number: destPort = (UInt16)((mRawData[this.dataOffset + 2] << 8) | mRawData[this.dataOffset + 3]);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,initFields,The following statement contains a magic number: destPort = (UInt16)((mRawData[this.dataOffset + 2] << 8) | mRawData[this.dataOffset + 3]);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,initFields,The following statement contains a magic number: seqNum = (UInt32)((mRawData[this.dataOffset + 4] << 24) | (mRawData[this.dataOffset + 5] << 16) |                                  (mRawData[this.dataOffset + 6] << 8) | mRawData[this.dataOffset + 7]);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,initFields,The following statement contains a magic number: seqNum = (UInt32)((mRawData[this.dataOffset + 4] << 24) | (mRawData[this.dataOffset + 5] << 16) |                                  (mRawData[this.dataOffset + 6] << 8) | mRawData[this.dataOffset + 7]);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,initFields,The following statement contains a magic number: seqNum = (UInt32)((mRawData[this.dataOffset + 4] << 24) | (mRawData[this.dataOffset + 5] << 16) |                                  (mRawData[this.dataOffset + 6] << 8) | mRawData[this.dataOffset + 7]);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,initFields,The following statement contains a magic number: seqNum = (UInt32)((mRawData[this.dataOffset + 4] << 24) | (mRawData[this.dataOffset + 5] << 16) |                                  (mRawData[this.dataOffset + 6] << 8) | mRawData[this.dataOffset + 7]);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,initFields,The following statement contains a magic number: seqNum = (UInt32)((mRawData[this.dataOffset + 4] << 24) | (mRawData[this.dataOffset + 5] << 16) |                                  (mRawData[this.dataOffset + 6] << 8) | mRawData[this.dataOffset + 7]);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,initFields,The following statement contains a magic number: seqNum = (UInt32)((mRawData[this.dataOffset + 4] << 24) | (mRawData[this.dataOffset + 5] << 16) |                                  (mRawData[this.dataOffset + 6] << 8) | mRawData[this.dataOffset + 7]);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,initFields,The following statement contains a magic number: seqNum = (UInt32)((mRawData[this.dataOffset + 4] << 24) | (mRawData[this.dataOffset + 5] << 16) |                                  (mRawData[this.dataOffset + 6] << 8) | mRawData[this.dataOffset + 7]);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,initFields,The following statement contains a magic number: ackNum = (UInt32)((mRawData[this.dataOffset + 8] << 24) | (mRawData[this.dataOffset + 9] << 16) |                                  (mRawData[this.dataOffset + 10] << 8) | mRawData[this.dataOffset + 11]);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,initFields,The following statement contains a magic number: ackNum = (UInt32)((mRawData[this.dataOffset + 8] << 24) | (mRawData[this.dataOffset + 9] << 16) |                                  (mRawData[this.dataOffset + 10] << 8) | mRawData[this.dataOffset + 11]);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,initFields,The following statement contains a magic number: ackNum = (UInt32)((mRawData[this.dataOffset + 8] << 24) | (mRawData[this.dataOffset + 9] << 16) |                                  (mRawData[this.dataOffset + 10] << 8) | mRawData[this.dataOffset + 11]);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,initFields,The following statement contains a magic number: ackNum = (UInt32)((mRawData[this.dataOffset + 8] << 24) | (mRawData[this.dataOffset + 9] << 16) |                                  (mRawData[this.dataOffset + 10] << 8) | mRawData[this.dataOffset + 11]);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,initFields,The following statement contains a magic number: ackNum = (UInt32)((mRawData[this.dataOffset + 8] << 24) | (mRawData[this.dataOffset + 9] << 16) |                                  (mRawData[this.dataOffset + 10] << 8) | mRawData[this.dataOffset + 11]);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,initFields,The following statement contains a magic number: ackNum = (UInt32)((mRawData[this.dataOffset + 8] << 24) | (mRawData[this.dataOffset + 9] << 16) |                                  (mRawData[this.dataOffset + 10] << 8) | mRawData[this.dataOffset + 11]);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,initFields,The following statement contains a magic number: ackNum = (UInt32)((mRawData[this.dataOffset + 8] << 24) | (mRawData[this.dataOffset + 9] << 16) |                                  (mRawData[this.dataOffset + 10] << 8) | mRawData[this.dataOffset + 11]);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,initFields,The following statement contains a magic number: tcpHeaderDWords = (byte)((mRawData[this.dataOffset + 12] & 0xF0) >> 4);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,initFields,The following statement contains a magic number: tcpHeaderDWords = (byte)((mRawData[this.dataOffset + 12] & 0xF0) >> 4);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,initFields,The following statement contains a magic number: tcpFlags = mRawData[this.dataOffset + 13];
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,initFields,The following statement contains a magic number: windowSize = (UInt16)((mRawData[this.dataOffset + 14] << 8) | mRawData[this.dataOffset + 15]);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,initFields,The following statement contains a magic number: windowSize = (UInt16)((mRawData[this.dataOffset + 14] << 8) | mRawData[this.dataOffset + 15]);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,initFields,The following statement contains a magic number: windowSize = (UInt16)((mRawData[this.dataOffset + 14] << 8) | mRawData[this.dataOffset + 15]);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,initFields,The following statement contains a magic number: tcpChecksum = (UInt16)((mRawData[this.dataOffset + 16] << 8) | mRawData[this.dataOffset + 17]);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,initFields,The following statement contains a magic number: tcpChecksum = (UInt16)((mRawData[this.dataOffset + 16] << 8) | mRawData[this.dataOffset + 17]);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,initFields,The following statement contains a magic number: tcpChecksum = (UInt16)((mRawData[this.dataOffset + 16] << 8) | mRawData[this.dataOffset + 17]);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,initFields,The following statement contains a magic number: urgentPointer = (UInt16)((mRawData[this.dataOffset + 18] << 8) | mRawData[this.dataOffset + 19]);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,initFields,The following statement contains a magic number: urgentPointer = (UInt16)((mRawData[this.dataOffset + 18] << 8) | mRawData[this.dataOffset + 19]);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,initFields,The following statement contains a magic number: urgentPointer = (UInt16)((mRawData[this.dataOffset + 18] << 8) | mRawData[this.dataOffset + 19]);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,initFields,The following statement contains a magic number: tcpDataOffset = (UInt16)(this.dataOffset + (this.tcpHeaderDWords * 4));
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,AddMSSOption,The following statement contains a magic number: mRawData[this.dataOffset + optionsOffset + 2] = (byte)(mss >> 8);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,AddMSSOption,The following statement contains a magic number: mRawData[this.dataOffset + optionsOffset + 2] = (byte)(mss >> 8);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,AddMSSOption,The following statement contains a magic number: mRawData[this.dataOffset + optionsOffset + 3] = (byte)(mss & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,AddMSSOption,The following statement contains a magic number: optionsOffset += 4;
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,AddSACKOption,The following statement contains a magic number: mRawData[this.dataOffset + optionsOffset + 2] = 0x04;
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,AddSACKOption,The following statement contains a magic number: mRawData[this.dataOffset + optionsOffset + 3] = 0x02;
Magic Number,Cosmos.Sys.Network.TCPIP.TCP,TCPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\TCP\TCPPacket.cs,AddSACKOption,The following statement contains a magic number: optionsOffset += 4;
Magic Number,Cosmos.Sys.Network.TCPIP.UDP,UDPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\UDP\UDPPacket.cs,UDPPacket,The following statement contains a magic number: mRawData[this.dataOffset + 0] = (byte)((srcPort >> 8) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP.UDP,UDPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\UDP\UDPPacket.cs,UDPPacket,The following statement contains a magic number: mRawData[this.dataOffset + 2] = (byte)((destPort >> 8) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP.UDP,UDPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\UDP\UDPPacket.cs,UDPPacket,The following statement contains a magic number: mRawData[this.dataOffset + 2] = (byte)((destPort >> 8) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP.UDP,UDPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\UDP\UDPPacket.cs,UDPPacket,The following statement contains a magic number: mRawData[this.dataOffset + 3] = (byte)((destPort >> 0) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP.UDP,UDPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\UDP\UDPPacket.cs,UDPPacket,The following statement contains a magic number: udpLen = (UInt16)(data.Length + 8);
Magic Number,Cosmos.Sys.Network.TCPIP.UDP,UDPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\UDP\UDPPacket.cs,UDPPacket,The following statement contains a magic number: mRawData[this.dataOffset + 4] = (byte)((udpLen >> 8) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP.UDP,UDPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\UDP\UDPPacket.cs,UDPPacket,The following statement contains a magic number: mRawData[this.dataOffset + 4] = (byte)((udpLen >> 8) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP.UDP,UDPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\UDP\UDPPacket.cs,UDPPacket,The following statement contains a magic number: mRawData[this.dataOffset + 5] = (byte)((udpLen >> 0) & 0xFF);
Magic Number,Cosmos.Sys.Network.TCPIP.UDP,UDPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\UDP\UDPPacket.cs,UDPPacket,The following statement contains a magic number: mRawData[this.dataOffset + 6] = 0;
Magic Number,Cosmos.Sys.Network.TCPIP.UDP,UDPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\UDP\UDPPacket.cs,UDPPacket,The following statement contains a magic number: mRawData[this.dataOffset + 7] = 0;
Magic Number,Cosmos.Sys.Network.TCPIP.UDP,UDPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\UDP\UDPPacket.cs,UDPPacket,The following statement contains a magic number: for (int b = 0; b < data.Length; b++)              {                  mRawData[this.dataOffset + 8 + b] = data[b];              }
Magic Number,Cosmos.Sys.Network.TCPIP.UDP,UDPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\UDP\UDPPacket.cs,initFields,The following statement contains a magic number: sourcePort = (UInt16)((mRawData[this.dataOffset] << 8) | mRawData[this.dataOffset + 1]);
Magic Number,Cosmos.Sys.Network.TCPIP.UDP,UDPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\UDP\UDPPacket.cs,initFields,The following statement contains a magic number: destPort = (UInt16)((mRawData[this.dataOffset + 2] << 8) | mRawData[this.dataOffset + 3]);
Magic Number,Cosmos.Sys.Network.TCPIP.UDP,UDPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\UDP\UDPPacket.cs,initFields,The following statement contains a magic number: destPort = (UInt16)((mRawData[this.dataOffset + 2] << 8) | mRawData[this.dataOffset + 3]);
Magic Number,Cosmos.Sys.Network.TCPIP.UDP,UDPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\UDP\UDPPacket.cs,initFields,The following statement contains a magic number: destPort = (UInt16)((mRawData[this.dataOffset + 2] << 8) | mRawData[this.dataOffset + 3]);
Magic Number,Cosmos.Sys.Network.TCPIP.UDP,UDPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\UDP\UDPPacket.cs,initFields,The following statement contains a magic number: udpLen = (UInt16)((mRawData[this.dataOffset + 4] << 8) | mRawData[this.dataOffset + 5]);
Magic Number,Cosmos.Sys.Network.TCPIP.UDP,UDPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\UDP\UDPPacket.cs,initFields,The following statement contains a magic number: udpLen = (UInt16)((mRawData[this.dataOffset + 4] << 8) | mRawData[this.dataOffset + 5]);
Magic Number,Cosmos.Sys.Network.TCPIP.UDP,UDPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\UDP\UDPPacket.cs,initFields,The following statement contains a magic number: udpLen = (UInt16)((mRawData[this.dataOffset + 4] << 8) | mRawData[this.dataOffset + 5]);
Magic Number,Cosmos.Sys.Network.TCPIP.UDP,UDPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\UDP\UDPPacket.cs,initFields,The following statement contains a magic number: udpCRC = (UInt16)((mRawData[this.dataOffset + 6] << 8) | mRawData[this.dataOffset + 7]);
Magic Number,Cosmos.Sys.Network.TCPIP.UDP,UDPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\UDP\UDPPacket.cs,initFields,The following statement contains a magic number: udpCRC = (UInt16)((mRawData[this.dataOffset + 6] << 8) | mRawData[this.dataOffset + 7]);
Magic Number,Cosmos.Sys.Network.TCPIP.UDP,UDPPacket,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIP\UDP\UDPPacket.cs,initFields,The following statement contains a magic number: udpCRC = (UInt16)((mRawData[this.dataOffset + 6] << 8) | mRawData[this.dataOffset + 7]);
Missing Default,Cosmos.Sys.Network,TCPIPStack,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIPStack.cs,HandlePacket,The following switch statement is missing a default case: switch (etherType)              {                  case 0x0806:                      ARPHandler(packetData);                      break;                  case 0x0800:                      IPv4Handler(packetData);                      break;              }
Missing Default,Cosmos.Sys.Network,TCPIPStack,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIPStack.cs,IPv4Handler,The following switch statement is missing a default case: switch (ip_packet.Protocol)                  {                      case 1:                          IPv4_ICMPHandler(packetData);                          break;                      case 6:                          IPv4_TCPHandler(packetData);                          break;                      case 17:                          IPv4_UDPHandler(packetData);                          break;                  }
Missing Default,Cosmos.Sys.Network,TCPIPStack,C:\repos\CosmosOS_Cosmos\source\Archive\Cosmos.Sys\Network\TCPIPStack.cs,IPv4_ICMPHandler,The following switch statement is missing a default case: switch (icmp_packet.ICMP_Type)              {                  case 0:                      ICMP.ICMPEchoReply recvd_reply = new ICMP.ICMPEchoReply(packetData);                      Console.WriteLine("Received ICMP Echo reply from " + recvd_reply.SourceIP.ToString());                      break;                  case 8:                      ICMP.ICMPEchoRequest request = new ICMP.ICMPEchoRequest(packetData);                      ICMP.ICMPEchoReply reply = new ICMP.ICMPEchoReply(request);                      Console.WriteLine("Sending ICMP Echo reply to " + reply.DestinationIP.ToString());                      TCPIP.IPv4OutgoingBuffer.AddPacket(reply);                      break;              }
