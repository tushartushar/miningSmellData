Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Cosmos.TestRunner.Core,Engine,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tests\Cosmos.TestRunner.Core\Engine.Bochs.cs,RunObjDump,The method has 5 parameters. Parameters: cosmosBuildDir' workingDir' inputFile' errorReceived' outputReceived
Long Statement,Cosmos.TestRunner.Core,Engine,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tests\Cosmos.TestRunner.Core\Engine.Bochs.cs,RunObjDump,The length of the statement  "            File.WriteAllText(xTempBatFile' "@ECHO OFF\r\n\"" + Path.Combine(cosmosBuildDir' @"tools\cygwin\objdump.exe") + "\" --wide --syms \"" + inputFile + "\" > \"" + Path.GetFileName(xMapFile) + "\""); " is 195.
Long Statement,Cosmos.TestRunner.Core,Engine,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tests\Cosmos.TestRunner.Core\Engine.Bochs.cs,RunNasm,The length of the statement  "                $"ExePath:{Path.Combine(xUsingUserkit ? GetCosmosUserkitFolder() : FindCosmosRoot()' "Build"' "Tools"' "NAsm"' "nasm.exe")}"' " is 125.
Long Statement,Cosmos.TestRunner.Core,Engine,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tests\Cosmos.TestRunner.Core\Engine.Bochs.cs,RunLd,The length of the statement  "            var xProcess = Process.Start(Path.Combine(GetCosmosUserkitFolder()' "build"' "tools"' "cygwin"' "ld.exe")' xArgsString); " is 120.
Long Statement,Cosmos.TestRunner.Core,Engine,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tests\Cosmos.TestRunner.Core\Engine.Bochs.cs,ExecuteKernel,The length of the statement  "                var xOriginalHarddiskPath = Path.Combine(GetCosmosUserkitFolder()' "Build"' "VMware"' "Workstation"' "Filesystem.vmdk"); " is 120.
Magic Number,Cosmos.TestRunner.Core,Engine,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tests\Cosmos.TestRunner.Core\Engine.Bochs.cs,RunProcess,The following statement contains a magic number: xProcess.WaitForExit(AllowedSecondsInKernel * 1000);
Magic Number,Cosmos.TestRunner.Core,Engine,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tests\Cosmos.TestRunner.Core\Engine.Bochs.cs,RunObjDump,The following statement contains a magic number: xProcess.WaitForExit(20000);
Magic Number,Cosmos.TestRunner.Core,Engine,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tests\Cosmos.TestRunner.Core\Engine.Bochs.cs,RunLd,The following statement contains a magic number: xProcess.WaitForExit(10000);
Magic Number,Cosmos.TestRunner.Core,Engine,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tests\Cosmos.TestRunner.Core\Engine.Bochs.cs,HandleRunning,The following statement contains a magic number: Thread.Sleep(50);
Magic Number,Cosmos.TestRunner.Core,Engine,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tests\Cosmos.TestRunner.Core\Engine.Bochs.cs,ChannelPacketReceived,The following statement contains a magic number: arg1 == 129
Magic Number,Cosmos.TestRunner.Core,OutputHandlerConsole,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tests\Cosmos.TestRunner.Core\OutputHandlerConsole.cs,Log,The following statement contains a magic number: Console.Write(new string(' '' mLogLevel * 2));
Magic Number,Cosmos.TestRunner.Core,OutputHandlerFullConsole,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tests\Cosmos.TestRunner.Core\OutputHandlerFullConsole.cs,Log,The following statement contains a magic number: Console.Write(new string(' '' mLogLevel * 2));
Missing Default,Cosmos.TestRunner.Core,Engine,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Tests\Cosmos.TestRunner.Core\Engine.Bochs.cs,ChannelPacketReceived,The following switch statement is missing a default case: switch (arg2)                  {                      case (byte)TestChannelCommandEnum.TestCompleted:                          KernelTestCompleted();                          break;                      case (byte)TestChannelCommandEnum.TestFailed:                          KernelTestFailed();                          break;                      case (byte)TestChannelCommandEnum.AssertionSucceeded:                          KernelAssertionSucceeded();                          break;                  }
