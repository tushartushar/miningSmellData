Implementation smell,Namespace,Class,File,Method,Description
Long Method,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The method has 192 lines of code.
Long Method,PlugViewer,PlugTemplateDumper,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\PlugTemplateDumper.cs,Dump,The method has 145 lines of code.
Long Method,PlugViewer,TreeViewSorter,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\TreeViewSorter.cs,Compare,The method has 104 lines of code.
Long Method,PlugViewer.TreeViewNodes,ClassTreeNode,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\TreeViewNodes\ClassTreeNode.cs,ClassTreeNode,The method has 127 lines of code.
Complex Method,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,LoadType,Cyclomatic complexity of the method is 14
Complex Method,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,LoadMethod,Cyclomatic complexity of the method is 13
Complex Method,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,LoadImplementedInterface,Cyclomatic complexity of the method is 10
Complex Method,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,LoadInterface,Cyclomatic complexity of the method is 10
Complex Method,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,LoadStruct,Cyclomatic complexity of the method is 10
Complex Method,PlugViewer,NameBuilder,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\NameBuilder.cs,BuildMethodDisplayName,Cyclomatic complexity of the method is 22
Complex Method,PlugViewer,PlugTemplateDumper,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\PlugTemplateDumper.cs,Dump,Cyclomatic complexity of the method is 25
Complex Method,PlugViewer,TreeViewSorter,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\TreeViewSorter.cs,Compare,Cyclomatic complexity of the method is 21
Complex Method,PlugViewer.TreeViewNodes,ClassTreeNode,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\TreeViewNodes\ClassTreeNode.cs,ClassTreeNode,Cyclomatic complexity of the method is 20
Complex Method,PlugViewer.TreeViewNodes,MethodTreeNode,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\TreeViewNodes\MethodTreeNode.cs,MethodTreeNode,Cyclomatic complexity of the method is 12
Complex Method,PlugViewer.Warnings,InterfaceUsageWarning,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\Warnings\InterfaceUsageWarning.cs,EvaluateNode,Cyclomatic complexity of the method is 8
Long Statement,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(MainForm)); " is 128.
Long Statement,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The length of the statement  "            this.treeView1.NodeMouseClick += new System.Windows.Forms.TreeNodeMouseClickEventHandler(this.treeView1_NodeMouseClick); " is 120.
Long Statement,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The length of the statement  "            this.imageList1.ImageStream = ((System.Windows.Forms.ImageListStreamer)(resources.GetObject("imageList1.ImageStream"))); " is 120.
Long Statement,PlugViewer,PlugTemplateDumper,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\PlugTemplateDumper.cs,Dump,The length of the statement  "            const MethodImplAttributes BadFlags = MethodImplAttributes.InternalCall | MethodImplAttributes.Native | MethodImplAttributes.Unmanaged; " is 135.
Long Statement,PlugViewer,PlugTemplateDumper,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\PlugTemplateDumper.cs,Dump,The length of the statement  "                    foreach (MethodInfo m in t.GetMethods(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Static | BindingFlags.DeclaredOnly)) " is 158.
Long Statement,PlugViewer,PlugTemplateDumper,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\PlugTemplateDumper.cs,Dump,The length of the statement  "                                strm.WriteLine("\t[IL2CPU.API.Plug(Target = typeof(" + t.Namespace + "." + t.Name + str + ")' TargetFramework = IL2CPU.API.FrameworkVersion.v4_0)]"); " is 149.
Long Statement,PlugViewer,PlugTemplateDumper,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\PlugTemplateDumper.cs,Dump,The length of the statement  "                            strm.WriteLine("\t\t\tthrow new System.NotImplementedException(\"Method '" + t.FullName + "." + m.Name + "' has not been implemented!\");"); " is 140.
Complex Conditional,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,LoadType,The conditional expression  "!type.IsEnum && !type.IsInterface && !type.IsValueType && type.IsClass"  is complex.
Empty Catch Block,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,AddAssemblyToView,The method has an empty catch block.
Empty Catch Block,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,OpenDll,The method has an empty catch block.
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,ShouldLoadMethod,The following statement contains a magic number: method.Name.Length <= 4
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer1.Location = new System.Drawing.Point(0' 24);
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer1.Size = new System.Drawing.Size(627' 478);
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer1.Size = new System.Drawing.Size(627' 478);
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer1.SplitterDistance = 209;
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.treeView1.Size = new System.Drawing.Size(209' 478);
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.treeView1.Size = new System.Drawing.Size(209' 478);
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(2' "Class.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(3' "Class_Internal.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(4' "Class_Private.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(5' "Class_Protected.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(6' "Constant.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(7' "Delegate.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(8' "Delegate_Friend.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(9' "Delegate_Private.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(10' "Delegate_Protected.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(11' "Enum.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(12' "Enum_Internal.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(13' "Enum_Private.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(14' "Enum_Protected.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(15' "EnumItem.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(16' "EnumItem_Internal.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(17' "EnumItem_Private.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(18' "EnumItem_Protected.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(19' "Error.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(20' "Event.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(21' "Exception.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(22' "Exception_Internal.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(23' "Exception_Private.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(24' "Exception_Protected.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(25' "Field.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(26' "Field_Internal.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(27' "Field_Private.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(28' "Field_Protected.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(29' "Interface.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(30' "Interface_Internal.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(31' "Interface_Private.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(32' "Interface_Protected.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(33' "InterfaceImpl.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(34' "InterfaceImpl_Internal.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(35' "InterfaceImpl_Private.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(36' "InterfaceImpl_Protected.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(37' "Library.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(38' "Method.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(39' "Method_Internal.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(40' "Method_Private.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(41' "Method_Protected.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(42' "MethodOverload.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(43' "MethodOverload_Internal.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(44' "MethodOverload_Private.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(45' "MethodOverload_Protected.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(46' "Namespace.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(47' "Operator.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(48' "Operator_Internal.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(49' "Operator_Private.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(50' "Operator_Protected.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(51' "Plug.png");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(52' "Properties.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(53' "Properties_Internal.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(54' "Properties_Private.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(55' "Properties_Protected.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(56' "Properties-ReadOnly.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(57' "Properties-ReadOnly_Internal.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(58' "Properties-ReadOnly_Private.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(59' "Properties-ReadOnly_Protected.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(60' "Structure.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(61' "Structure_Internal.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(62' "Structure_Private.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(63' "Structure_Protected.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(64' "Union.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(65' "Union_Internal.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(66' "Union_Private.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(67' "Union_Protected.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(68' "ValueType.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(69' "ValueType_Internal.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(70' "ValueType_Private.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(71' "ValueType_Protected.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName(72' "Warning.bmp");
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.Rtb.Size = new System.Drawing.Size(414' 478);
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.Rtb.Size = new System.Drawing.Size(414' 478);
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.menuStrip1.Size = new System.Drawing.Size(627' 24);
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.menuStrip1.Size = new System.Drawing.Size(627' 24);
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.menuStrip1.TabIndex = 2;
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.fileToolStripMenuItem.Size = new System.Drawing.Size(35' 20);
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.fileToolStripMenuItem.Size = new System.Drawing.Size(35' 20);
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.openToolStripMenuItem.Size = new System.Drawing.Size(111' 22);
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.openToolStripMenuItem.Size = new System.Drawing.Size(111' 22);
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.debugToolStripMenuItem.Size = new System.Drawing.Size(50' 20);
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.debugToolStripMenuItem.Size = new System.Drawing.Size(50' 20);
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(627' 502);
Magic Number,PlugViewer,MainForm,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(627' 502);
Magic Number,PlugViewer,TestRunner,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\TestRunner.cs,RunTests,The following statement contains a magic number: b < 8
Magic Number,PlugViewer.TreeViewNodes,OTreeNode,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\TreeViewNodes\OTreeNode.cs,OTreeNode,The following statement contains a magic number: TreeNodes = new List<OTreeNode>[8];
Magic Number,PlugViewer.TreeViewNodes,OTreeNode,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\TreeViewNodes\OTreeNode.cs,OTreeNode,The following statement contains a magic number: b < 8
Missing Default,PlugViewer.TreeViewNodes,ClassTreeNode,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\TreeViewNodes\ClassTreeNode.cs,ClassTreeNode,The following switch statement is missing a default case: switch (type)              {                  case ClassType.Class:                      {                          switch (access)                          {                              case Access.Public:                                  this.SelectedImageIndex = Constants.Class_Public;                                  this.ImageIndex = Constants.Class_Public;                                  break;                              case Access.Private:                                  this.SelectedImageIndex = Constants.Class_Private;                                  this.ImageIndex = Constants.Class_Private;                                  break;                              case Access.Protected:                                  this.SelectedImageIndex = Constants.Class_Protected;                                  this.ImageIndex = Constants.Class_Protected;                                  break;                              case Access.Internal:                                  this.SelectedImageIndex = Constants.Class_Internal;                                  this.ImageIndex = Constants.Class_Internal;                                  break;                          }                          break;                      }                  case ClassType.Struct:                      {                          switch (access)                          {                              case Access.Public:                                  this.SelectedImageIndex = Constants.Struct_Public;                                  this.ImageIndex = Constants.Struct_Public;                                  break;                              case Access.Private:                                  this.SelectedImageIndex = Constants.Struct_Private;                                  this.ImageIndex = Constants.Struct_Private;                                  break;                              case Access.Protected:                                  this.SelectedImageIndex = Constants.Struct_Protected;                                  this.ImageIndex = Constants.Struct_Protected;                                  break;                              case Access.Internal:                                  this.SelectedImageIndex = Constants.Struct_Internal;                                  this.ImageIndex = Constants.Struct_Internal;                                  break;                          }                          break;                      }                  case ClassType.Enum:                      {                          switch (access)                          {                              case Access.Public:                                  this.SelectedImageIndex = Constants.Enum_Public;                                  this.ImageIndex = Constants.Enum_Public;                                  break;                              case Access.Private:                                  this.SelectedImageIndex = Constants.Enum_Private;                                  this.ImageIndex = Constants.Enum_Private;                                  break;                              case Access.Protected:                                  this.SelectedImageIndex = Constants.Enum_Protected;                                  this.ImageIndex = Constants.Enum_Protected;                                  break;                              case Access.Internal:                                  this.SelectedImageIndex = Constants.Enum_Internal;                                  this.ImageIndex = Constants.Enum_Internal;                                  break;                          }                          break;                      }                  case ClassType.Interface:                      {                            switch (access)                          {                              case Access.Public:                                  this.SelectedImageIndex = Constants.Interface_Public;                                  this.ImageIndex = Constants.Interface_Public;                                  break;                              case Access.Private:                                  this.SelectedImageIndex = Constants.Interface_Private;                                  this.ImageIndex = Constants.Interface_Private;                                  break;                              case Access.Protected:                                  this.SelectedImageIndex = Constants.Interface_Protected;                                  this.ImageIndex = Constants.Interface_Protected;                                  break;                              case Access.Internal:                                  this.SelectedImageIndex = Constants.Interface_Internal;                                  this.ImageIndex = Constants.Interface_Internal;                                  break;                          }                          break;                      }                  case ClassType.ImplementedInterface:                      {                            switch (access)                          {                              case Access.Public:                                  this.SelectedImageIndex = Constants.InterfaceImpl_Public;                                  this.ImageIndex = Constants.InterfaceImpl_Public;                                  break;                              case Access.Private:                                  this.SelectedImageIndex = Constants.InterfaceImpl_Private;                                  this.ImageIndex = Constants.InterfaceImpl_Private;                                  break;                              case Access.Protected:                                  this.SelectedImageIndex = Constants.InterfaceImpl_Protected;                                  this.ImageIndex = Constants.InterfaceImpl_Protected;                                  break;                              case Access.Internal:                                  this.SelectedImageIndex = Constants.InterfaceImpl_Internal;                                  this.ImageIndex = Constants.InterfaceImpl_Internal;                                  break;                          }                          break;                      }                }
Missing Default,PlugViewer.TreeViewNodes,ClassTreeNode,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\TreeViewNodes\ClassTreeNode.cs,ClassTreeNode,The following switch statement is missing a default case: switch (access)                          {                              case Access.Public:                                  this.SelectedImageIndex = Constants.Class_Public;                                  this.ImageIndex = Constants.Class_Public;                                  break;                              case Access.Private:                                  this.SelectedImageIndex = Constants.Class_Private;                                  this.ImageIndex = Constants.Class_Private;                                  break;                              case Access.Protected:                                  this.SelectedImageIndex = Constants.Class_Protected;                                  this.ImageIndex = Constants.Class_Protected;                                  break;                              case Access.Internal:                                  this.SelectedImageIndex = Constants.Class_Internal;                                  this.ImageIndex = Constants.Class_Internal;                                  break;                          }
Missing Default,PlugViewer.TreeViewNodes,ClassTreeNode,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\TreeViewNodes\ClassTreeNode.cs,ClassTreeNode,The following switch statement is missing a default case: switch (access)                          {                              case Access.Public:                                  this.SelectedImageIndex = Constants.Struct_Public;                                  this.ImageIndex = Constants.Struct_Public;                                  break;                              case Access.Private:                                  this.SelectedImageIndex = Constants.Struct_Private;                                  this.ImageIndex = Constants.Struct_Private;                                  break;                              case Access.Protected:                                  this.SelectedImageIndex = Constants.Struct_Protected;                                  this.ImageIndex = Constants.Struct_Protected;                                  break;                              case Access.Internal:                                  this.SelectedImageIndex = Constants.Struct_Internal;                                  this.ImageIndex = Constants.Struct_Internal;                                  break;                          }
Missing Default,PlugViewer.TreeViewNodes,ClassTreeNode,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\TreeViewNodes\ClassTreeNode.cs,ClassTreeNode,The following switch statement is missing a default case: switch (access)                          {                              case Access.Public:                                  this.SelectedImageIndex = Constants.Enum_Public;                                  this.ImageIndex = Constants.Enum_Public;                                  break;                              case Access.Private:                                  this.SelectedImageIndex = Constants.Enum_Private;                                  this.ImageIndex = Constants.Enum_Private;                                  break;                              case Access.Protected:                                  this.SelectedImageIndex = Constants.Enum_Protected;                                  this.ImageIndex = Constants.Enum_Protected;                                  break;                              case Access.Internal:                                  this.SelectedImageIndex = Constants.Enum_Internal;                                  this.ImageIndex = Constants.Enum_Internal;                                  break;                          }
Missing Default,PlugViewer.TreeViewNodes,ClassTreeNode,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\TreeViewNodes\ClassTreeNode.cs,ClassTreeNode,The following switch statement is missing a default case: switch (access)                          {                              case Access.Public:                                  this.SelectedImageIndex = Constants.Interface_Public;                                  this.ImageIndex = Constants.Interface_Public;                                  break;                              case Access.Private:                                  this.SelectedImageIndex = Constants.Interface_Private;                                  this.ImageIndex = Constants.Interface_Private;                                  break;                              case Access.Protected:                                  this.SelectedImageIndex = Constants.Interface_Protected;                                  this.ImageIndex = Constants.Interface_Protected;                                  break;                              case Access.Internal:                                  this.SelectedImageIndex = Constants.Interface_Internal;                                  this.ImageIndex = Constants.Interface_Internal;                                  break;                          }
Missing Default,PlugViewer.TreeViewNodes,ClassTreeNode,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\TreeViewNodes\ClassTreeNode.cs,ClassTreeNode,The following switch statement is missing a default case: switch (access)                          {                              case Access.Public:                                  this.SelectedImageIndex = Constants.InterfaceImpl_Public;                                  this.ImageIndex = Constants.InterfaceImpl_Public;                                  break;                              case Access.Private:                                  this.SelectedImageIndex = Constants.InterfaceImpl_Private;                                  this.ImageIndex = Constants.InterfaceImpl_Private;                                  break;                              case Access.Protected:                                  this.SelectedImageIndex = Constants.InterfaceImpl_Protected;                                  this.ImageIndex = Constants.InterfaceImpl_Protected;                                  break;                              case Access.Internal:                                  this.SelectedImageIndex = Constants.InterfaceImpl_Internal;                                  this.ImageIndex = Constants.InterfaceImpl_Internal;                                  break;                          }
Missing Default,PlugViewer.TreeViewNodes,ClassTreeNode,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\TreeViewNodes\ClassTreeNode.cs,ShowNodeInfo,The following switch statement is missing a default case: switch (tp)              {                  case ClassType.Class:                      {                          sb.AppendLine("Type '" + def.Name + "' contains:");                          sb.AppendLine(def.GetNestedTypes().Length.ToString() + " Nested Types'");                          sb.AppendLine(def.GetProperties().Length.ToString() + " Properties'");                          sb.AppendLine(def.GetMethods().Length.ToString() + " Methods'");                          sb.AppendLine(def.GetFields().Length.ToString() + " Fields'");                          sb.AppendLine(def.GetEvents().Length.ToString() + " Events'");                          sb.AppendLine(def.GetCustomAttributes(true).Length.ToString() + " Attributes'");                          sb.AppendLine(def.GetGenericArguments().Length.ToString() + " Generic Parameters'");                          sb.AppendLine("Implements " + def.GetInterfaces().Length.ToString() + " Interfaces'");                          sb.AppendLine("and has an access modifier of '" + acc.ToString() + "'");                          sb.AppendLine();                          sb.AppendLine();                      }                      break;                  case ClassType.Enum:                      {                          sb.AppendLine("Enum '" + def.Name + "' contains:");                          sb.AppendLine((def.GetFields().Length - 1).ToString() + " Values'");                          sb.AppendLine(def.GetCustomAttributes(true).Length.ToString() + " Attributes'");                          sb.AppendLine("and has an access modifier of '" + acc.ToString() + "'");                          sb.AppendLine();                          sb.AppendLine();                      }                      break;                  case ClassType.Interface:                      {                          sb.AppendLine("Interface '" + def.Name + "' contains:");                          sb.AppendLine(def.GetNestedTypes().Length.ToString() + " Nested Types'");                          sb.AppendLine(def.GetProperties().Length.ToString() + " Properties'");                          sb.AppendLine(def.GetMethods().Length.ToString() + " Methods'");                          sb.AppendLine(def.GetFields().Length.ToString() + " Fields'");                          sb.AppendLine(def.GetEvents().Length.ToString() + " Events'");                          sb.AppendLine(def.GetCustomAttributes(true).Length.ToString() + " Attributes'");                          sb.AppendLine(def.GetGenericArguments().Length.ToString() + " Generic Parameters'");                          sb.AppendLine("Implements " + def.GetInterfaces().Length.ToString() + " Interfaces'");                          sb.AppendLine("and has an access modifier of '" + acc.ToString() + "'");                          sb.AppendLine();                          sb.AppendLine();                      }                      break;                  case ClassType.ImplementedInterface:                      {                          sb.AppendLine("Implemented Interface '" + def.Name + "' contains:");                          sb.AppendLine(def.GetNestedTypes().Length.ToString() + " Nested Types'");                          sb.AppendLine(def.GetProperties().Length.ToString() + " Properties'");                          sb.AppendLine(def.GetMethods().Length.ToString() + " Methods'");                          sb.AppendLine(def.GetFields().Length.ToString() + " Fields'");                          sb.AppendLine(def.GetEvents().Length.ToString() + " Events'");                          sb.AppendLine(def.GetCustomAttributes(true).Length.ToString() + " Attributes'");                          sb.AppendLine(def.GetGenericArguments().Length.ToString() + " Generic Parameters'");                          sb.AppendLine("and has an access modifier of '" + acc.ToString() + "'");                          sb.AppendLine();                          sb.AppendLine();                      }                      break;                  case ClassType.Struct:                      {                          sb.AppendLine("Struct '" + def.Name + "' contains:");                          sb.AppendLine(def.GetNestedTypes().Length.ToString() + " Nested Types'");                          sb.AppendLine(def.GetProperties().Length.ToString() + " Properties'");                          sb.AppendLine(def.GetMethods().Length.ToString() + " Methods'");                          sb.AppendLine(def.GetFields().Length.ToString() + " Fields'");                          sb.AppendLine(def.GetEvents().Length.ToString() + " Events'");                          sb.AppendLine(def.GetCustomAttributes(true).Length.ToString() + " Attributes'");                          sb.AppendLine(def.GetGenericArguments().Length.ToString() + " Generic Parameters'");                          sb.AppendLine("Implements " + def.GetInterfaces().Length.ToString() + " Interfaces'");                          sb.AppendLine("and has an access modifier of '" + acc.ToString() + "'");                          sb.AppendLine();                          sb.AppendLine();                      }                      break;              }
Missing Default,PlugViewer.TreeViewNodes,FieldTreeNode,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\TreeViewNodes\FieldTreeNode.cs,FieldTreeNode,The following switch statement is missing a default case: switch (acc)                  {                      case Access.Public:                          this.SelectedImageIndex = Constants.Field_Public;                          this.ImageIndex = Constants.Field_Public;                          break;                        case Access.Private:                          this.SelectedImageIndex = Constants.Field_Private;                          this.ImageIndex = Constants.Field_Private;                          break;                        case Access.Protected:                          this.SelectedImageIndex = Constants.Field_Protected;                          this.ImageIndex = Constants.Field_Protected;                          break;                        case Access.Internal:                          this.SelectedImageIndex = Constants.Field_Internal;                          this.ImageIndex = Constants.Field_Internal;                          break;                  }
Missing Default,PlugViewer.TreeViewNodes,MethodTreeNode,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\TreeViewNodes\MethodTreeNode.cs,MethodTreeNode,The following switch statement is missing a default case: switch (mType)              {                  case MethodType.BasicMethod:                      {                          switch (mAccess)                          {                              case Access.Public:                                  this.SelectedImageIndex = Constants.Method_Public;                                  this.ImageIndex = Constants.Method_Public;                                  break;                              case Access.Private:                                  this.SelectedImageIndex = Constants.Method_Private;                                  this.ImageIndex = Constants.Method_Private;                                  break;                              case Access.Protected:                                  this.SelectedImageIndex = Constants.Method_Protected;                                  this.ImageIndex = Constants.Method_Protected;                                  break;                              case Access.Internal:                                  this.SelectedImageIndex = Constants.Method_Internal;                                  this.ImageIndex = Constants.Method_Internal;                                  break;                          }                      }                      break;                  case MethodType.OverrideMethod:                      {                            switch (mAccess)                          {                              case Access.Public:                                  this.SelectedImageIndex = Constants.MethodOverride_Public;                                  this.ImageIndex = Constants.MethodOverride_Public;                                  break;                              case Access.Private:                                  this.SelectedImageIndex = Constants.MethodOverride_Private;                                  this.ImageIndex = Constants.MethodOverride_Private;                                  break;                              case Access.Protected:                                  this.SelectedImageIndex = Constants.MethodOverride_Protected;                                  this.ImageIndex = Constants.MethodOverride_Protected;                                  break;                              case Access.Internal:                                  this.SelectedImageIndex = Constants.MethodOverride_Internal;                                  this.ImageIndex = Constants.MethodOverride_Internal;                                  break;                          }                      }                      break;                  case MethodType.VirtualMethod:                      {                            switch (mAccess)                          {                              case Access.Public:                                  this.SelectedImageIndex = Constants.MethodVirtual_Public;                                  this.ImageIndex = Constants.MethodVirtual_Public;                                  break;                              case Access.Private:                                  this.SelectedImageIndex = Constants.MethodVirtual_Private;                                  this.ImageIndex = Constants.MethodVirtual_Private;                                  break;                              case Access.Protected:                                  this.SelectedImageIndex = Constants.MethodVirtual_Protected;                                  this.ImageIndex = Constants.MethodVirtual_Protected;                                  break;                              case Access.Internal:                                  this.SelectedImageIndex = Constants.MethodVirtual_Internal;                                  this.ImageIndex = Constants.MethodVirtual_Internal;                                  break;                          }                      }                      break;              }
Missing Default,PlugViewer.TreeViewNodes,MethodTreeNode,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\TreeViewNodes\MethodTreeNode.cs,MethodTreeNode,The following switch statement is missing a default case: switch (mAccess)                          {                              case Access.Public:                                  this.SelectedImageIndex = Constants.Method_Public;                                  this.ImageIndex = Constants.Method_Public;                                  break;                              case Access.Private:                                  this.SelectedImageIndex = Constants.Method_Private;                                  this.ImageIndex = Constants.Method_Private;                                  break;                              case Access.Protected:                                  this.SelectedImageIndex = Constants.Method_Protected;                                  this.ImageIndex = Constants.Method_Protected;                                  break;                              case Access.Internal:                                  this.SelectedImageIndex = Constants.Method_Internal;                                  this.ImageIndex = Constants.Method_Internal;                                  break;                          }
Missing Default,PlugViewer.TreeViewNodes,MethodTreeNode,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\TreeViewNodes\MethodTreeNode.cs,MethodTreeNode,The following switch statement is missing a default case: switch (mAccess)                          {                              case Access.Public:                                  this.SelectedImageIndex = Constants.MethodOverride_Public;                                  this.ImageIndex = Constants.MethodOverride_Public;                                  break;                              case Access.Private:                                  this.SelectedImageIndex = Constants.MethodOverride_Private;                                  this.ImageIndex = Constants.MethodOverride_Private;                                  break;                              case Access.Protected:                                  this.SelectedImageIndex = Constants.MethodOverride_Protected;                                  this.ImageIndex = Constants.MethodOverride_Protected;                                  break;                              case Access.Internal:                                  this.SelectedImageIndex = Constants.MethodOverride_Internal;                                  this.ImageIndex = Constants.MethodOverride_Internal;                                  break;                          }
Missing Default,PlugViewer.TreeViewNodes,MethodTreeNode,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\TreeViewNodes\MethodTreeNode.cs,MethodTreeNode,The following switch statement is missing a default case: switch (mAccess)                          {                              case Access.Public:                                  this.SelectedImageIndex = Constants.MethodVirtual_Public;                                  this.ImageIndex = Constants.MethodVirtual_Public;                                  break;                              case Access.Private:                                  this.SelectedImageIndex = Constants.MethodVirtual_Private;                                  this.ImageIndex = Constants.MethodVirtual_Private;                                  break;                              case Access.Protected:                                  this.SelectedImageIndex = Constants.MethodVirtual_Protected;                                  this.ImageIndex = Constants.MethodVirtual_Protected;                                  break;                              case Access.Internal:                                  this.SelectedImageIndex = Constants.MethodVirtual_Internal;                                  this.ImageIndex = Constants.MethodVirtual_Internal;                                  break;                          }
Missing Default,PlugViewer.TreeViewNodes,MethodTreeNode,D:\research\architectureSmells\repos\CosmosOS_Cosmos\Users\Orvid\PlugViewer\TreeViewNodes\MethodTreeNode.cs,ShowNodeInfo,The following switch statement is missing a default case: switch (mType)              {                  case MethodType.BasicMethod:                      {                          sb.AppendLine("Basic Method '" + this.Text + "' contains:");                          sb.AppendLine(def.GetGenericArguments().Length.ToString() + " Generic Parameters'");                          sb.AppendLine(def.GetParameters().Length.ToString() + " Parameters'");                          //sb.AppendLine(def.SecurityDeclarations.Count.ToString() + " Security Declarations'");                          sb.AppendLine(def.GetCustomAttributes(true).Length.ToString() + " Custom Attributes'");                          if (def.GetMethodBody() != null)                          {                              sb.AppendLine(def.GetMethodBody().GetILAsByteArray().Length.ToString() + " Instructions'");                              sb.AppendLine(def.GetMethodBody().ExceptionHandlingClauses.Count.ToString() + " Exception Handlers'");                              sb.AppendLine(def.GetMethodBody().LocalVariables.Count.ToString() + " Variables'");                          }                          else                          {                              sb.AppendLine("Doesn't have a body.");                          }                          sb.AppendLine("Has a calling convention of '" + def.CallingConvention.ToString() + "'");                          sb.AppendLine();                          sb.AppendLine();                      }                      break;                  case MethodType.OverrideMethod:                      {                          sb.AppendLine("Override Method '" + this.Text + "' contains:");                          sb.AppendLine(def.GetGenericArguments().Length.ToString() + " Generic Parameters'");                          sb.AppendLine(def.GetParameters().Length.ToString() + " Parameters'");                          //sb.AppendLine(def.SecurityDeclarations.Count.ToString() + " Security Declarations'");                          sb.AppendLine(def.GetCustomAttributes(true).Length.ToString() + " Custom Attributes'");                          if (def.GetMethodBody() != null)                          {                              sb.AppendLine(def.GetMethodBody().GetILAsByteArray().Length.ToString() + " Instructions'");                              sb.AppendLine(def.GetMethodBody().ExceptionHandlingClauses.Count.ToString() + " Exception Handlers'");                              sb.AppendLine(def.GetMethodBody().LocalVariables.Count.ToString() + " Variables'");                          }                          else                          {                              sb.AppendLine("Doesn't have a body.");                          }                          //sb.AppendLine("Overrides " + def..Resolve().Overrides.Count.ToString() + " methods'");                          sb.AppendLine("Has a calling convention of '" + def.CallingConvention.ToString() + "'");                          sb.AppendLine();                          sb.AppendLine();                      }                      break;                  case MethodType.VirtualMethod:                      {                          sb.AppendLine("Virtual Method '" + this.Text + "' contains:");                          sb.AppendLine(def.GetGenericArguments().Length.ToString() + " Generic Parameters'");                          sb.AppendLine(def.GetParameters().Length.ToString() + " Parameters'");                          //sb.AppendLine(def.SecurityDeclarations.Count.ToString() + " Security Declarations'");                          sb.AppendLine(def.GetCustomAttributes(true).Length.ToString() + " Custom Attributes'");                          if (def.GetMethodBody() != null)                          {                              sb.AppendLine(def.GetMethodBody().GetILAsByteArray().Length.ToString() + " Instructions'");                              sb.AppendLine(def.GetMethodBody().ExceptionHandlingClauses.Count.ToString() + " Exception Handlers'");                              sb.AppendLine(def.GetMethodBody().LocalVariables.Count.ToString() + " Variables'");                          }                          else                          {                              sb.AppendLine("Doesn't have a body.");                          }                          sb.AppendLine("Has a calling convention of '" + def.CallingConvention.ToString() + "'");                          sb.AppendLine();                          sb.AppendLine();                      }                      break;              }
