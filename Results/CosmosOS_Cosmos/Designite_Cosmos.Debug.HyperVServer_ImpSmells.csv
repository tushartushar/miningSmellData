Implementation smell,Namespace,Class,File,Method,Description
Complex Conditional,Cosmos.Debug.HyperVServer,Server,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.Debug.HyperVServer\Server.cs,RunAsync,The conditional expression  "buffer[0] == 0xFF                                   && buffer[1] == 0xEC                                   && buffer[2] == 0x34                                   && buffer[3] == 0xFC"  is complex.
Magic Number,Cosmos.Debug.HyperVServer,Client,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.Debug.HyperVServer\Client.cs,RunAsync,The following statement contains a magic number: _namedPipeServer = new NamedPipeServerStream(                  "CosmosSerial"'                  PipeDirection.InOut'                  1'                  PipeTransmissionMode.Byte'                  PipeOptions.Asynchronous'                  256'                  256'                  pipeSecurity'                  HandleInheritability.None);
Magic Number,Cosmos.Debug.HyperVServer,Client,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.Debug.HyperVServer\Client.cs,RunAsync,The following statement contains a magic number: _namedPipeServer = new NamedPipeServerStream(                  "CosmosSerial"'                  PipeDirection.InOut'                  1'                  PipeTransmissionMode.Byte'                  PipeOptions.Asynchronous'                  256'                  256'                  pipeSecurity'                  HandleInheritability.None);
Magic Number,Cosmos.Debug.HyperVServer,Client,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.Debug.HyperVServer\Client.cs,RunAsync,The following statement contains a magic number: switch (parts[0])                          {                              case "CreateVirtualMachine":                                  CreateVirtualMachine(parts[1]' parts[2]' parts[3]);                                  break;                              case "RemoveVirtualMachine":                                  RemoveVirtualMachine(parts[1]);                                  break;                              case "StartVirtualMachine":                                  StartVirtualMachine(parts[1]);                                  break;                              case "StopVirtualMachine":                                  StopVirtualMachine(parts[1]);                                  break;                          }
Magic Number,Cosmos.Debug.HyperVServer,Client,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.Debug.HyperVServer\Client.cs,RunAsync,The following statement contains a magic number: switch (parts[0])                          {                              case "CreateVirtualMachine":                                  CreateVirtualMachine(parts[1]' parts[2]' parts[3]);                                  break;                              case "RemoveVirtualMachine":                                  RemoveVirtualMachine(parts[1]);                                  break;                              case "StartVirtualMachine":                                  StartVirtualMachine(parts[1]);                                  break;                              case "StopVirtualMachine":                                  StopVirtualMachine(parts[1]);                                  break;                          }
Magic Number,Cosmos.Debug.HyperVServer,Client,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.Debug.HyperVServer\Client.cs,ReadPipeAsync,The following statement contains a magic number: var buffer = new byte[256];
Magic Number,Cosmos.Debug.HyperVServer,Client,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.Debug.HyperVServer\Client.cs,WritePipeAsync,The following statement contains a magic number: var buffer = new byte[256];
Magic Number,Cosmos.Debug.HyperVServer,Server,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.Debug.HyperVServer\Server.cs,Server,The following statement contains a magic number: _timer = new Timer(20 * 60 * 1000);
Magic Number,Cosmos.Debug.HyperVServer,Server,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.Debug.HyperVServer\Server.cs,Server,The following statement contains a magic number: _timer = new Timer(20 * 60 * 1000);
Magic Number,Cosmos.Debug.HyperVServer,Server,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.Debug.HyperVServer\Server.cs,Server,The following statement contains a magic number: _timer = new Timer(20 * 60 * 1000);
Magic Number,Cosmos.Debug.HyperVServer,Server,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.Debug.HyperVServer\Server.cs,RunAsync,The following statement contains a magic number: var listener = new TcpListener(IPAddress.Loopback' 4534);
Magic Number,Cosmos.Debug.HyperVServer,Server,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.Debug.HyperVServer\Server.cs,RunAsync,The following statement contains a magic number: _ = Task.Run(                      async () =>                      {                          while (tcpClient.Connected)                          {                              if (tcpClient.Available >= 4)                              {                                  var buffer = new byte[4];                                  tcpClient.GetStream().Read(buffer' 0' buffer.Length);                                    if (buffer[0] == 0xFF                                   && buffer[1] == 0xEC                                   && buffer[2] == 0x34                                   && buffer[3] == 0xFC)                                  {                                      break;                                  }                                  else                                  {                                      return;                                  }                              }                                await Task.Delay(1000).ConfigureAwait(false);                          }                            OnClientConnected();                            using (var client = new Client(tcpClient))                          {                              await client.RunAsync().ConfigureAwait(false);                          }                            OnClientDisconnected();                      });
Magic Number,Cosmos.Debug.HyperVServer,Server,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.Debug.HyperVServer\Server.cs,RunAsync,The following statement contains a magic number: _ = Task.Run(                      async () =>                      {                          while (tcpClient.Connected)                          {                              if (tcpClient.Available >= 4)                              {                                  var buffer = new byte[4];                                  tcpClient.GetStream().Read(buffer' 0' buffer.Length);                                    if (buffer[0] == 0xFF                                   && buffer[1] == 0xEC                                   && buffer[2] == 0x34                                   && buffer[3] == 0xFC)                                  {                                      break;                                  }                                  else                                  {                                      return;                                  }                              }                                await Task.Delay(1000).ConfigureAwait(false);                          }                            OnClientConnected();                            using (var client = new Client(tcpClient))                          {                              await client.RunAsync().ConfigureAwait(false);                          }                            OnClientDisconnected();                      });
Magic Number,Cosmos.Debug.HyperVServer,Server,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.Debug.HyperVServer\Server.cs,RunAsync,The following statement contains a magic number: _ = Task.Run(                      async () =>                      {                          while (tcpClient.Connected)                          {                              if (tcpClient.Available >= 4)                              {                                  var buffer = new byte[4];                                  tcpClient.GetStream().Read(buffer' 0' buffer.Length);                                    if (buffer[0] == 0xFF                                   && buffer[1] == 0xEC                                   && buffer[2] == 0x34                                   && buffer[3] == 0xFC)                                  {                                      break;                                  }                                  else                                  {                                      return;                                  }                              }                                await Task.Delay(1000).ConfigureAwait(false);                          }                            OnClientConnected();                            using (var client = new Client(tcpClient))                          {                              await client.RunAsync().ConfigureAwait(false);                          }                            OnClientDisconnected();                      });
Magic Number,Cosmos.Debug.HyperVServer,Server,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.Debug.HyperVServer\Server.cs,RunAsync,The following statement contains a magic number: _ = Task.Run(                      async () =>                      {                          while (tcpClient.Connected)                          {                              if (tcpClient.Available >= 4)                              {                                  var buffer = new byte[4];                                  tcpClient.GetStream().Read(buffer' 0' buffer.Length);                                    if (buffer[0] == 0xFF                                   && buffer[1] == 0xEC                                   && buffer[2] == 0x34                                   && buffer[3] == 0xFC)                                  {                                      break;                                  }                                  else                                  {                                      return;                                  }                              }                                await Task.Delay(1000).ConfigureAwait(false);                          }                            OnClientConnected();                            using (var client = new Client(tcpClient))                          {                              await client.RunAsync().ConfigureAwait(false);                          }                            OnClientDisconnected();                      });
Magic Number,Cosmos.Debug.HyperVServer,Server,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.Debug.HyperVServer\Server.cs,RunAsync,The following statement contains a magic number: _ = Task.Run(                      async () =>                      {                          while (tcpClient.Connected)                          {                              if (tcpClient.Available >= 4)                              {                                  var buffer = new byte[4];                                  tcpClient.GetStream().Read(buffer' 0' buffer.Length);                                    if (buffer[0] == 0xFF                                   && buffer[1] == 0xEC                                   && buffer[2] == 0x34                                   && buffer[3] == 0xFC)                                  {                                      break;                                  }                                  else                                  {                                      return;                                  }                              }                                await Task.Delay(1000).ConfigureAwait(false);                          }                            OnClientConnected();                            using (var client = new Client(tcpClient))                          {                              await client.RunAsync().ConfigureAwait(false);                          }                            OnClientDisconnected();                      });
Missing Default,Cosmos.Debug.HyperVServer,Client,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.Debug.HyperVServer\Client.cs,RunAsync,The following switch statement is missing a default case: switch (parts[0])                          {                              case "CreateVirtualMachine":                                  CreateVirtualMachine(parts[1]' parts[2]' parts[3]);                                  break;                              case "RemoveVirtualMachine":                                  RemoveVirtualMachine(parts[1]);                                  break;                              case "StartVirtualMachine":                                  StartVirtualMachine(parts[1]);                                  break;                              case "StopVirtualMachine":                                  StopVirtualMachine(parts[1]);                                  break;                          }
