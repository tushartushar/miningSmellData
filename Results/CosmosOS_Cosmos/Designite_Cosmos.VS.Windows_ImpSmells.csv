Implementation smell,Namespace,Class,File,Method,Description
Long Method,Cosmos.VS.Windows,AssemblyUC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\AssemblyUC.xaml.cs,Display,The method has 152 lines of code.
Complex Method,Cosmos.VS.Windows,CosmosWindowsPackage,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\CosmosWindowsPackage.cs,ProcessMessageAsync,Cyclomatic complexity of the method is 13
Complex Method,Cosmos.VS.Windows,AssemblyUC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\AssemblyUC.xaml.cs,Display,Cyclomatic complexity of the method is 20
Complex Method,Cosmos.VS.Windows,AssemblyUC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\AssemblyUC.xaml.cs,Parse,Cyclomatic complexity of the method is 10
Complex Method,Cosmos.VS.Windows,AssemblyUC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\AssemblyUC.xaml.cs,Connect,Cyclomatic complexity of the method is 8
Long Statement,Cosmos.VS.Windows,ConsoleUC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ConsoleUC.xaml.cs,HandleChannelMessage,The length of the statement  "                mOut.WriteLine("Command '{0}' not recognized. Data = '{1}'"' aCommand' Encoding.ASCII.GetString(aData).Replace("\t"' "    ")); " is 126.
Long Statement,Cosmos.VS.Windows,AssemblyUC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\AssemblyUC.xaml.cs,Log,The length of the statement  "            //File.AppendAllText(@"c:\data\sources\AssemblyUC.log"' DateTime.Now.ToString("HH:mm:ss.ffffff: ") + String.Format(message' args) + Environment.NewLine); " is 153.
Long Statement,Cosmos.VS.Windows,AssemblyUC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\AssemblyUC.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Cosmos.VS.Windows;component/toolwindows/assemblyuc.xaml"' System.UriKind.Relative); " is 129.
Long Statement,Cosmos.VS.Windows,DataBytesUC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\DataBytesUC.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Cosmos.VS.Windows;component/toolwindows/databytesuc.xaml"' System.UriKind.Relative); " is 130.
Long Statement,Cosmos.VS.Windows,InternalUC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\InternalUC.xaml.cs,butnPingVSIP_Click,The length of the statement  "      MessageBox.Show("This only works if there is an active debug session' see comment in code for this event for more details."); " is 125.
Long Statement,Cosmos.VS.Windows,InternalUC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\InternalUC.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Cosmos.VS.Windows;component/toolwindows/internaluc.xaml"' System.UriKind.Relative); " is 129.
Long Statement,Cosmos.VS.Windows,MemoryViewUC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\MemoryViewUC.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Cosmos.VS.Windows;component/toolwindows/memoryviewuc.xaml"' System.UriKind.Relative); " is 131.
Long Statement,Cosmos.VS.Windows,RegistersControl,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\RegistersControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Cosmos.VS.Windows;component/toolwindows/registerscontrol.xaml"' System.UriKind.Relative); " is 135.
Long Statement,Cosmos.VS.Windows,StackUC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\StackUC.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Cosmos.VS.Windows;component/toolwindows/stackuc.xaml"' System.UriKind.Relative); " is 126.
Long Statement,XamlGeneratedNamespace,GeneratedInternalTypeHelper,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\obj\Debug\net472\GeneratedInternalTypeHelper.g.cs,CreateInstance,The length of the statement  "            return System.Activator.CreateInstance(type' ((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)  " is 128.
Virtual Method Call from Constructor,Cosmos.VS.Windows,AssemblyUC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\AssemblyUC.xaml.cs,AssemblyUC,The constructor "AssemblyUC" calls a virtual method "Update".
Empty Catch Block,Cosmos.VS.Windows,AssemblyUC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\AssemblyUC.xaml.cs,OnASMCodeTextMouseUp,The method has an empty catch block.
Magic Number,Cosmos.VS.Windows,ConsoleTW,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ConsoleUC.xaml.cs,ConsoleTW,The following statement contains a magic number: BitmapResourceID = 301;
Magic Number,Cosmos.VS.Windows,CosmosWindowsPackage,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\CosmosWindowsPackage.cs,CosmosWindowsPackage,The following statement contains a magic number: mTimer = new Timer(100);
Magic Number,Cosmos.VS.Windows,CosmosWindowsPackage,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\CosmosWindowsPackage.cs,ProcessMessageAsync,The following statement contains a magic number: xCmd <= 127
Magic Number,Cosmos.VS.Windows,AssemblyUC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\AssemblyUC.xaml.cs,Display,The following statement contains a magic number: var gutterRect = new Rectangle()                  {                      Width = 11'                      Height = 11'                      Fill = Brushes.WhiteSmoke                  };
Magic Number,Cosmos.VS.Windows,AssemblyUC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\AssemblyUC.xaml.cs,Display,The following statement contains a magic number: var gutterRect = new Rectangle()                  {                      Width = 11'                      Height = 11'                      Fill = Brushes.WhiteSmoke                  };
Magic Number,Cosmos.VS.Windows,AssemblyUC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\AssemblyUC.xaml.cs,Display,The following statement contains a magic number: double offset = mCurrentLineNumber * 13.1;
Magic Number,Cosmos.VS.Windows,AssemblyUC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\AssemblyUC.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.butnFilter = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              case 2:              this.butnCopy = ((System.Windows.Controls.Button)(target));              return;              case 3:              this.butnStepMode = ((System.Windows.Controls.Button)(target));              return;              case 4:              this.butnStepInto = ((System.Windows.Controls.Button)(target));              return;              case 5:              this.butnStepOver = ((System.Windows.Controls.Button)(target));              return;              case 6:              this.ASMScrollViewer = ((System.Windows.Controls.ScrollViewer)(target));              return;              case 7:              this.tblkSource = ((System.Windows.Controls.TextBlock)(target));              return;              case 8:              this.mitmCopy = ((System.Windows.Controls.MenuItem)(target));              return;              }
Magic Number,Cosmos.VS.Windows,AssemblyUC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\AssemblyUC.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.butnFilter = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              case 2:              this.butnCopy = ((System.Windows.Controls.Button)(target));              return;              case 3:              this.butnStepMode = ((System.Windows.Controls.Button)(target));              return;              case 4:              this.butnStepInto = ((System.Windows.Controls.Button)(target));              return;              case 5:              this.butnStepOver = ((System.Windows.Controls.Button)(target));              return;              case 6:              this.ASMScrollViewer = ((System.Windows.Controls.ScrollViewer)(target));              return;              case 7:              this.tblkSource = ((System.Windows.Controls.TextBlock)(target));              return;              case 8:              this.mitmCopy = ((System.Windows.Controls.MenuItem)(target));              return;              }
Magic Number,Cosmos.VS.Windows,AssemblyUC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\AssemblyUC.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.butnFilter = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              case 2:              this.butnCopy = ((System.Windows.Controls.Button)(target));              return;              case 3:              this.butnStepMode = ((System.Windows.Controls.Button)(target));              return;              case 4:              this.butnStepInto = ((System.Windows.Controls.Button)(target));              return;              case 5:              this.butnStepOver = ((System.Windows.Controls.Button)(target));              return;              case 6:              this.ASMScrollViewer = ((System.Windows.Controls.ScrollViewer)(target));              return;              case 7:              this.tblkSource = ((System.Windows.Controls.TextBlock)(target));              return;              case 8:              this.mitmCopy = ((System.Windows.Controls.MenuItem)(target));              return;              }
Magic Number,Cosmos.VS.Windows,AssemblyUC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\AssemblyUC.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.butnFilter = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              case 2:              this.butnCopy = ((System.Windows.Controls.Button)(target));              return;              case 3:              this.butnStepMode = ((System.Windows.Controls.Button)(target));              return;              case 4:              this.butnStepInto = ((System.Windows.Controls.Button)(target));              return;              case 5:              this.butnStepOver = ((System.Windows.Controls.Button)(target));              return;              case 6:              this.ASMScrollViewer = ((System.Windows.Controls.ScrollViewer)(target));              return;              case 7:              this.tblkSource = ((System.Windows.Controls.TextBlock)(target));              return;              case 8:              this.mitmCopy = ((System.Windows.Controls.MenuItem)(target));              return;              }
Magic Number,Cosmos.VS.Windows,AssemblyUC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\AssemblyUC.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.butnFilter = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              case 2:              this.butnCopy = ((System.Windows.Controls.Button)(target));              return;              case 3:              this.butnStepMode = ((System.Windows.Controls.Button)(target));              return;              case 4:              this.butnStepInto = ((System.Windows.Controls.Button)(target));              return;              case 5:              this.butnStepOver = ((System.Windows.Controls.Button)(target));              return;              case 6:              this.ASMScrollViewer = ((System.Windows.Controls.ScrollViewer)(target));              return;              case 7:              this.tblkSource = ((System.Windows.Controls.TextBlock)(target));              return;              case 8:              this.mitmCopy = ((System.Windows.Controls.MenuItem)(target));              return;              }
Magic Number,Cosmos.VS.Windows,AssemblyUC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\AssemblyUC.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.butnFilter = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              case 2:              this.butnCopy = ((System.Windows.Controls.Button)(target));              return;              case 3:              this.butnStepMode = ((System.Windows.Controls.Button)(target));              return;              case 4:              this.butnStepInto = ((System.Windows.Controls.Button)(target));              return;              case 5:              this.butnStepOver = ((System.Windows.Controls.Button)(target));              return;              case 6:              this.ASMScrollViewer = ((System.Windows.Controls.ScrollViewer)(target));              return;              case 7:              this.tblkSource = ((System.Windows.Controls.TextBlock)(target));              return;              case 8:              this.mitmCopy = ((System.Windows.Controls.MenuItem)(target));              return;              }
Magic Number,Cosmos.VS.Windows,AssemblyUC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\AssemblyUC.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.butnFilter = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              case 2:              this.butnCopy = ((System.Windows.Controls.Button)(target));              return;              case 3:              this.butnStepMode = ((System.Windows.Controls.Button)(target));              return;              case 4:              this.butnStepInto = ((System.Windows.Controls.Button)(target));              return;              case 5:              this.butnStepOver = ((System.Windows.Controls.Button)(target));              return;              case 6:              this.ASMScrollViewer = ((System.Windows.Controls.ScrollViewer)(target));              return;              case 7:              this.tblkSource = ((System.Windows.Controls.TextBlock)(target));              return;              case 8:              this.mitmCopy = ((System.Windows.Controls.MenuItem)(target));              return;              }
Magic Number,Cosmos.VS.Windows,DebuggerChannelUC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\DebuggerChannelUC.cs,HandleChannelMessage,The following statement contains a magic number: HandleChannelMessage((byte)(aChannelAndCommand >> 8)' (byte)(aChannelAndCommand & 0xFF)' aData);
Magic Number,Cosmos.VS.Windows,InternalTW,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\InternalUC.xaml.cs,InternalTW,The following statement contains a magic number: BitmapResourceID = 301;
Magic Number,Cosmos.VS.Windows,InternalUC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\InternalUC.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.toolBar1 = ((System.Windows.Controls.ToolBar)(target));              return;              case 2:              this.butnPingVSIP = ((System.Windows.Controls.Button)(target));              return;              case 3:              this.butnPingDS = ((System.Windows.Controls.Button)(target));              return;              case 4:              this.butnClearLog = ((System.Windows.Controls.Button)(target));              return;              case 5:              this.lboxLog = ((System.Windows.Controls.ListBox)(target));              return;              }
Magic Number,Cosmos.VS.Windows,InternalUC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\InternalUC.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.toolBar1 = ((System.Windows.Controls.ToolBar)(target));              return;              case 2:              this.butnPingVSIP = ((System.Windows.Controls.Button)(target));              return;              case 3:              this.butnPingDS = ((System.Windows.Controls.Button)(target));              return;              case 4:              this.butnClearLog = ((System.Windows.Controls.Button)(target));              return;              case 5:              this.lboxLog = ((System.Windows.Controls.ListBox)(target));              return;              }
Magic Number,Cosmos.VS.Windows,InternalUC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\InternalUC.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.toolBar1 = ((System.Windows.Controls.ToolBar)(target));              return;              case 2:              this.butnPingVSIP = ((System.Windows.Controls.Button)(target));              return;              case 3:              this.butnPingDS = ((System.Windows.Controls.Button)(target));              return;              case 4:              this.butnClearLog = ((System.Windows.Controls.Button)(target));              return;              case 5:              this.lboxLog = ((System.Windows.Controls.ListBox)(target));              return;              }
Magic Number,Cosmos.VS.Windows,InternalUC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\InternalUC.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.toolBar1 = ((System.Windows.Controls.ToolBar)(target));              return;              case 2:              this.butnPingVSIP = ((System.Windows.Controls.Button)(target));              return;              case 3:              this.butnPingDS = ((System.Windows.Controls.Button)(target));              return;              case 4:              this.butnClearLog = ((System.Windows.Controls.Button)(target));              return;              case 5:              this.lboxLog = ((System.Windows.Controls.ListBox)(target));              return;              }
Magic Number,Cosmos.VS.Windows,MemoryViewUC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\MemoryViewUC.xaml.cs,Split,The following statement contains a magic number: var xResult = new List<UInt32>(aData.Length / 4);
Magic Number,Cosmos.VS.Windows,MemoryViewUC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\MemoryViewUC.xaml.cs,Split,The following statement contains a magic number: UInt32 xValue = (UInt32)            (aData[i + 3] << 24 |            aData[i + 2] << 16 |            aData[i + 1] << 8 |            aData[i]);
Magic Number,Cosmos.VS.Windows,MemoryViewUC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\MemoryViewUC.xaml.cs,Split,The following statement contains a magic number: UInt32 xValue = (UInt32)            (aData[i + 3] << 24 |            aData[i + 2] << 16 |            aData[i + 1] << 8 |            aData[i]);
Magic Number,Cosmos.VS.Windows,MemoryViewUC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\MemoryViewUC.xaml.cs,Split,The following statement contains a magic number: UInt32 xValue = (UInt32)            (aData[i + 3] << 24 |            aData[i + 2] << 16 |            aData[i + 1] << 8 |            aData[i]);
Magic Number,Cosmos.VS.Windows,MemoryViewUC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\MemoryViewUC.xaml.cs,Split,The following statement contains a magic number: UInt32 xValue = (UInt32)            (aData[i + 3] << 24 |            aData[i + 2] << 16 |            aData[i + 1] << 8 |            aData[i]);
Magic Number,Cosmos.VS.Windows,MemoryViewUC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\MemoryViewUC.xaml.cs,Split,The following statement contains a magic number: UInt32 xValue = (UInt32)            (aData[i + 3] << 24 |            aData[i + 2] << 16 |            aData[i + 1] << 8 |            aData[i]);
Magic Number,Cosmos.VS.Windows,MemoryViewUC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\MemoryViewUC.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.tblkLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 2:              this.spnlLabel = ((System.Windows.Controls.StackPanel)(target));              return;              case 3:              this.spnlAddress = ((System.Windows.Controls.StackPanel)(target));              return;              case 4:              this.spnlData = ((System.Windows.Controls.StackPanel)(target));              return;              }
Magic Number,Cosmos.VS.Windows,MemoryViewUC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\MemoryViewUC.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.tblkLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 2:              this.spnlLabel = ((System.Windows.Controls.StackPanel)(target));              return;              case 3:              this.spnlAddress = ((System.Windows.Controls.StackPanel)(target));              return;              case 4:              this.spnlData = ((System.Windows.Controls.StackPanel)(target));              return;              }
Magic Number,Cosmos.VS.Windows,MemoryViewUC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\MemoryViewUC.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.tblkLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 2:              this.spnlLabel = ((System.Windows.Controls.StackPanel)(target));              return;              case 3:              this.spnlAddress = ((System.Windows.Controls.StackPanel)(target));              return;              case 4:              this.spnlData = ((System.Windows.Controls.StackPanel)(target));              return;              }
Magic Number,Cosmos.VS.Windows,StackTW,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\StackUC.xaml.cs,StackTW,The following statement contains a magic number: BitmapResourceID = 301;
Magic Number,Cosmos.VS.Windows,StackUC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\StackUC.xaml.cs,UpdateFrame,The following statement contains a magic number: System.Windows.Application.Current.Dispatcher.Invoke(DispatcherPriority.Normal'                  (Action)delegate()                  {                      if (aData == null)                      {                          memvEBP.Clear();                      }                      else                      {                          try                          {                              var xValues = MemoryViewUC.Split(aData);                              int xCount = xValues.Count;                              memvEBP.Clear();                              for (int i = 0; i < xCount; i++)                              {                                  // We start at EBP + 8' because lower is not transmitted                                  // [EBP] is old EBP - not needed                                  // [EBP + 4] is saved EIP - not needed                                  memvEBP.Add("[EBP + " + (i * 4 + 8) + "]"' xValues[i]);                              }                          }                          catch                          {                              memvEBP.Clear();                          }                      }                  }              );
Magic Number,Cosmos.VS.Windows,StackUC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\StackUC.xaml.cs,UpdateFrame,The following statement contains a magic number: System.Windows.Application.Current.Dispatcher.Invoke(DispatcherPriority.Normal'                  (Action)delegate()                  {                      if (aData == null)                      {                          memvEBP.Clear();                      }                      else                      {                          try                          {                              var xValues = MemoryViewUC.Split(aData);                              int xCount = xValues.Count;                              memvEBP.Clear();                              for (int i = 0; i < xCount; i++)                              {                                  // We start at EBP + 8' because lower is not transmitted                                  // [EBP] is old EBP - not needed                                  // [EBP + 4] is saved EIP - not needed                                  memvEBP.Add("[EBP + " + (i * 4 + 8) + "]"' xValues[i]);                              }                          }                          catch                          {                              memvEBP.Clear();                          }                      }                  }              );
Magic Number,Cosmos.VS.Windows,StackUC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\StackUC.xaml.cs,UpdateStack,The following statement contains a magic number: System.Windows.Application.Current.Dispatcher.Invoke(DispatcherPriority.Normal'                  (Action)delegate()                  {                      if (aData == null)                      {                          memvESP.Clear();                      }                      else                      {                          try                          {                              var xValues = MemoryViewUC.Split(aData);                              int xCount = xValues.Count;                              memvESP.Clear();                              for (int i = 0; i < xCount; i++)                              {                                  memvESP.Add(("[EBP - " + ((xCount - i) * 4) + "]").PadRight(10) + " [ESP + " + (i * 4) + "]"' xValues[i]);                              }                          }                          catch                          {                              memvESP.Clear();                          }                      }                  }              );
Magic Number,Cosmos.VS.Windows,StackUC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\StackUC.xaml.cs,UpdateStack,The following statement contains a magic number: System.Windows.Application.Current.Dispatcher.Invoke(DispatcherPriority.Normal'                  (Action)delegate()                  {                      if (aData == null)                      {                          memvESP.Clear();                      }                      else                      {                          try                          {                              var xValues = MemoryViewUC.Split(aData);                              int xCount = xValues.Count;                              memvESP.Clear();                              for (int i = 0; i < xCount; i++)                              {                                  memvESP.Add(("[EBP - " + ((xCount - i) * 4) + "]").PadRight(10) + " [ESP + " + (i * 4) + "]"' xValues[i]);                              }                          }                          catch                          {                              memvESP.Clear();                          }                      }                  }              );
Magic Number,Cosmos.VS.Windows,StackUC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\StackUC.xaml.cs,UpdateStack,The following statement contains a magic number: System.Windows.Application.Current.Dispatcher.Invoke(DispatcherPriority.Normal'                  (Action)delegate()                  {                      if (aData == null)                      {                          memvESP.Clear();                      }                      else                      {                          try                          {                              var xValues = MemoryViewUC.Split(aData);                              int xCount = xValues.Count;                              memvESP.Clear();                              for (int i = 0; i < xCount; i++)                              {                                  memvESP.Add(("[EBP - " + ((xCount - i) * 4) + "]").PadRight(10) + " [ESP + " + (i * 4) + "]"' xValues[i]);                              }                          }                          catch                          {                              memvESP.Clear();                          }                      }                  }              );
Magic Number,Cosmos.VS.Windows,StackUC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\StackUC.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.CosmosStackUserControl = ((Cosmos.VS.Windows.StackUC)(target));              return;              case 2:              this.memvEBP = ((Cosmos.VS.Windows.MemoryViewUC)(target));              return;              case 3:              this.memvESP = ((Cosmos.VS.Windows.MemoryViewUC)(target));              return;              }
Magic Number,Cosmos.VS.Windows,StackUC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\StackUC.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.CosmosStackUserControl = ((Cosmos.VS.Windows.StackUC)(target));              return;              case 2:              this.memvEBP = ((Cosmos.VS.Windows.MemoryViewUC)(target));              return;              case 3:              this.memvESP = ((Cosmos.VS.Windows.MemoryViewUC)(target));              return;              }
Missing Default,Cosmos.VS.Windows,ConsoleUC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ConsoleUC.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.textBox = ((System.Windows.Controls.TextBox)(target));              return;              }
Missing Default,Cosmos.VS.Windows,CosmosWindowsPackage,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\CosmosWindowsPackage.cs,ProcessMessageAsync,The following switch statement is missing a default case: switch (xCmd)                      {                          case Debugger2Windows.Noop:                              break;                            case Debugger2Windows.Stack:                              await UpdateWindowAsync(typeof(StackTW)' "STACK"' xMsg);                              break;                            case Debugger2Windows.Frame:                              await UpdateWindowAsync(typeof(StackTW)' "FRAME"' xMsg);                              break;                            case Debugger2Windows.Registers:                              await UpdateWindowAsync(typeof(RegistersToolWindow)' null' xMsg);                              break;                            case Debugger2Windows.Quit:                              break;                            case Debugger2Windows.AssemblySource:                              await UpdateWindowAsync(typeof(AssemblyToolWindow)' null' xMsg);                              break;                            case Debugger2Windows.PongVSIP:                              await UpdateWindowAsync(typeof(InternalTW)' null' Encoding.UTF8.GetBytes("Pong from VSIP"));                              break;                            case Debugger2Windows.PongDebugStub:                              await UpdateWindowAsync(typeof(InternalTW)' null' Encoding.UTF8.GetBytes("Pong from DebugStub"));                              break;                            case Debugger2Windows.OutputPane:                              await JoinableTaskFactory.SwitchToMainThreadAsync();                              Global.OutputPane.OutputString(Encoding.UTF8.GetString(xMsg));                              break;                            case Debugger2Windows.OutputClear:                              await JoinableTaskFactory.SwitchToMainThreadAsync();                              Global.OutputPane.Clear();                              StateStorer.ClearState();                              break;                      }
Missing Default,Cosmos.VS.Windows,AssemblyUC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\AssemblyUC.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.butnFilter = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              case 2:              this.butnCopy = ((System.Windows.Controls.Button)(target));              return;              case 3:              this.butnStepMode = ((System.Windows.Controls.Button)(target));              return;              case 4:              this.butnStepInto = ((System.Windows.Controls.Button)(target));              return;              case 5:              this.butnStepOver = ((System.Windows.Controls.Button)(target));              return;              case 6:              this.ASMScrollViewer = ((System.Windows.Controls.ScrollViewer)(target));              return;              case 7:              this.tblkSource = ((System.Windows.Controls.TextBlock)(target));              return;              case 8:              this.mitmCopy = ((System.Windows.Controls.MenuItem)(target));              return;              }
Missing Default,Cosmos.VS.Windows,DataBytesUC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\DataBytesUC.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.tblkData = ((System.Windows.Controls.TextBlock)(target));              return;              }
Missing Default,Cosmos.VS.Windows,InternalUC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\InternalUC.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.toolBar1 = ((System.Windows.Controls.ToolBar)(target));              return;              case 2:              this.butnPingVSIP = ((System.Windows.Controls.Button)(target));              return;              case 3:              this.butnPingDS = ((System.Windows.Controls.Button)(target));              return;              case 4:              this.butnClearLog = ((System.Windows.Controls.Button)(target));              return;              case 5:              this.lboxLog = ((System.Windows.Controls.ListBox)(target));              return;              }
Missing Default,Cosmos.VS.Windows,MemoryViewUC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\MemoryViewUC.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.tblkLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 2:              this.spnlLabel = ((System.Windows.Controls.StackPanel)(target));              return;              case 3:              this.spnlAddress = ((System.Windows.Controls.StackPanel)(target));              return;              case 4:              this.spnlData = ((System.Windows.Controls.StackPanel)(target));              return;              }
Missing Default,Cosmos.VS.Windows,StackUC,D:\research\architectureSmells\repos\CosmosOS_Cosmos\source\Cosmos.VS.Windows\ToolWindows\StackUC.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.CosmosStackUserControl = ((Cosmos.VS.Windows.StackUC)(target));              return;              case 2:              this.memvEBP = ((Cosmos.VS.Windows.MemoryViewUC)(target));              return;              case 3:              this.memvESP = ((Cosmos.VS.Windows.MemoryViewUC)(target));              return;              }
