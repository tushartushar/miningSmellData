Implementation smell,Namespace,Class,File,Method,Description
Magic Number,ColoredConsole.Test.Acceptance,ColorConsoleFeature,D:\research\architectureSmells\repos\colored-console_colored-console\src\test\ColoredConsole.Test.Acceptance\ColorConsoleFeature.cs,WritingALineWithColors,The following statement contains a magic number: "Then the console contains a line"                  .x(() =>                  {                      output.Length.Should().Be(                          4' "there should be two tokens for the words' a token for the space and a token for the line ending");                        output[3].Text.Should().Be(Environment.NewLine' "the last token should be a new line");                  });
Magic Number,ColoredConsole.Test.Acceptance,ColorConsoleFeature,D:\research\architectureSmells\repos\colored-console_colored-console\src\test\ColoredConsole.Test.Acceptance\ColorConsoleFeature.cs,WritingALineWithColors,The following statement contains a magic number: "Then the console contains a line"                  .x(() =>                  {                      output.Length.Should().Be(                          4' "there should be two tokens for the words' a token for the space and a token for the line ending");                        output[3].Text.Should().Be(Environment.NewLine' "the last token should be a new line");                  });
Magic Number,ColoredConsole.Test.Acceptance,ColorConsoleFeature,D:\research\architectureSmells\repos\colored-console_colored-console\src\test\ColoredConsole.Test.Acceptance\ColorConsoleFeature.cs,WritingALineWithColors,The following statement contains a magic number: "And the line contains 'Hello' in red' a space and 'world' in blue"                  .x(() =>                  {                      output[0].Text.Should().Be("Hello");                      output[0].Color.Should().Be(ConsoleColor.Red);                      output[1].Text.Should().Be(" ");                      output[1].Color.Should().Be(console.InitialForegroundColor);                      output[2].Text.Should().Be("world");                      output[2].Color.Should().Be(ConsoleColor.Blue);                  });
Magic Number,ColoredConsole.Test.Acceptance,ColorConsoleFeature,D:\research\architectureSmells\repos\colored-console_colored-console\src\test\ColoredConsole.Test.Acceptance\ColorConsoleFeature.cs,WritingALineWithColors,The following statement contains a magic number: "And the line contains 'Hello' in red' a space and 'world' in blue"                  .x(() =>                  {                      output[0].Text.Should().Be("Hello");                      output[0].Color.Should().Be(ConsoleColor.Red);                      output[1].Text.Should().Be(" ");                      output[1].Color.Should().Be(console.InitialForegroundColor);                      output[2].Text.Should().Be("world");                      output[2].Color.Should().Be(ConsoleColor.Blue);                  });
Magic Number,ColoredConsole.Test.Acceptance,ColorConsoleFeature,D:\research\architectureSmells\repos\colored-console_colored-console\src\test\ColoredConsole.Test.Acceptance\ColorConsoleFeature.cs,WritingALineWithBackgroundColors,The following statement contains a magic number: "Then the console contains a line"                  .x(() =>                  {                      output.Length.Should().Be(                          4' "there should be two tokens for the words' a token for the space and a token for the line ending");                        output[3].Text.Should().Be(Environment.NewLine' "the last token should be a new line");                  });
Magic Number,ColoredConsole.Test.Acceptance,ColorConsoleFeature,D:\research\architectureSmells\repos\colored-console_colored-console\src\test\ColoredConsole.Test.Acceptance\ColorConsoleFeature.cs,WritingALineWithBackgroundColors,The following statement contains a magic number: "Then the console contains a line"                  .x(() =>                  {                      output.Length.Should().Be(                          4' "there should be two tokens for the words' a token for the space and a token for the line ending");                        output[3].Text.Should().Be(Environment.NewLine' "the last token should be a new line");                  });
Magic Number,ColoredConsole.Test.Acceptance,ColorConsoleFeature,D:\research\architectureSmells\repos\colored-console_colored-console\src\test\ColoredConsole.Test.Acceptance\ColorConsoleFeature.cs,WritingALineWithBackgroundColors,The following statement contains a magic number: "And the line contains 'Hello' on red' a space and 'world' on blue"                  .x(() =>                  {                      output[0].Text.Should().Be("Hello");                      output[0].BackgroundColor.Should().Be(ConsoleColor.Red);                      output[1].Text.Should().Be(" ");                      output[1].BackgroundColor.Should().Be(console.InitialBackgroundColor);                      output[2].Text.Should().Be("world");                      output[2].BackgroundColor.Should().Be(ConsoleColor.Blue);                  });
Magic Number,ColoredConsole.Test.Acceptance,ColorConsoleFeature,D:\research\architectureSmells\repos\colored-console_colored-console\src\test\ColoredConsole.Test.Acceptance\ColorConsoleFeature.cs,WritingALineWithBackgroundColors,The following statement contains a magic number: "And the line contains 'Hello' on red' a space and 'world' on blue"                  .x(() =>                  {                      output[0].Text.Should().Be("Hello");                      output[0].BackgroundColor.Should().Be(ConsoleColor.Red);                      output[1].Text.Should().Be(" ");                      output[1].BackgroundColor.Should().Be(console.InitialBackgroundColor);                      output[2].Text.Should().Be("world");                      output[2].BackgroundColor.Should().Be(ConsoleColor.Blue);                  });
Magic Number,ColoredConsole.Test.Acceptance,ColorConsoleFeature,D:\research\architectureSmells\repos\colored-console_colored-console\src\test\ColoredConsole.Test.Acceptance\ColorConsoleFeature.cs,WritingALineWithColorsAndBackgroundColors,The following statement contains a magic number: "Then the console contains a line"                  .x(() =>                  {                      output.Length.Should().Be(                          4' "there should be two tokens for the words' a token for the space and a token for the line ending");                        output[3].Text.Should().Be(Environment.NewLine' "the last token should be a new line");                  });
Magic Number,ColoredConsole.Test.Acceptance,ColorConsoleFeature,D:\research\architectureSmells\repos\colored-console_colored-console\src\test\ColoredConsole.Test.Acceptance\ColorConsoleFeature.cs,WritingALineWithColorsAndBackgroundColors,The following statement contains a magic number: "Then the console contains a line"                  .x(() =>                  {                      output.Length.Should().Be(                          4' "there should be two tokens for the words' a token for the space and a token for the line ending");                        output[3].Text.Should().Be(Environment.NewLine' "the last token should be a new line");                  });
Magic Number,ColoredConsole.Test.Acceptance,ColorConsoleFeature,D:\research\architectureSmells\repos\colored-console_colored-console\src\test\ColoredConsole.Test.Acceptance\ColorConsoleFeature.cs,WritingALineWithColorsAndBackgroundColors,The following statement contains a magic number: "And the line contains 'Hello' in red on yellow' a space and 'world' in blue on cyan"                  .x(() =>                  {                      output[0].Text.Should().Be("Hello");                      output[0].Color.Should().Be(ConsoleColor.Red);                      output[0].BackgroundColor.Should().Be(ConsoleColor.Yellow);                      output[1].Text.Should().Be(" ");                      output[1].Color.Should().Be(console.InitialForegroundColor);                      output[1].BackgroundColor.Should().Be(console.InitialBackgroundColor);                      output[2].Text.Should().Be("world");                      output[2].Color.Should().Be(ConsoleColor.Blue);                      output[2].BackgroundColor.Should().Be(ConsoleColor.Cyan);                  });
Magic Number,ColoredConsole.Test.Acceptance,ColorConsoleFeature,D:\research\architectureSmells\repos\colored-console_colored-console\src\test\ColoredConsole.Test.Acceptance\ColorConsoleFeature.cs,WritingALineWithColorsAndBackgroundColors,The following statement contains a magic number: "And the line contains 'Hello' in red on yellow' a space and 'world' in blue on cyan"                  .x(() =>                  {                      output[0].Text.Should().Be("Hello");                      output[0].Color.Should().Be(ConsoleColor.Red);                      output[0].BackgroundColor.Should().Be(ConsoleColor.Yellow);                      output[1].Text.Should().Be(" ");                      output[1].Color.Should().Be(console.InitialForegroundColor);                      output[1].BackgroundColor.Should().Be(console.InitialBackgroundColor);                      output[2].Text.Should().Be("world");                      output[2].Color.Should().Be(ConsoleColor.Blue);                      output[2].BackgroundColor.Should().Be(ConsoleColor.Cyan);                  });
Magic Number,ColoredConsole.Test.Acceptance,ColorConsoleFeature,D:\research\architectureSmells\repos\colored-console_colored-console\src\test\ColoredConsole.Test.Acceptance\ColorConsoleFeature.cs,WritingALineWithColorsAndBackgroundColors,The following statement contains a magic number: "And the line contains 'Hello' in red on yellow' a space and 'world' in blue on cyan"                  .x(() =>                  {                      output[0].Text.Should().Be("Hello");                      output[0].Color.Should().Be(ConsoleColor.Red);                      output[0].BackgroundColor.Should().Be(ConsoleColor.Yellow);                      output[1].Text.Should().Be(" ");                      output[1].Color.Should().Be(console.InitialForegroundColor);                      output[1].BackgroundColor.Should().Be(console.InitialBackgroundColor);                      output[2].Text.Should().Be("world");                      output[2].Color.Should().Be(ConsoleColor.Blue);                      output[2].BackgroundColor.Should().Be(ConsoleColor.Cyan);                  });
Magic Number,ColoredConsole.Test.Acceptance,ColorConsoleFeature,D:\research\architectureSmells\repos\colored-console_colored-console\src\test\ColoredConsole.Test.Acceptance\ColorConsoleFeature.cs,WritingALineWithParsedStringColors,The following statement contains a magic number: "Then the console contains a line"                  .x(() =>                      {                          output.Length.Should().Be(                              3' "there should be two tokens for the words and a token for the line ending");                            output[2].Text.Should().Be(Environment.NewLine' "the last token should be a new line");                      });
Magic Number,ColoredConsole.Test.Acceptance,ColorConsoleFeature,D:\research\architectureSmells\repos\colored-console_colored-console\src\test\ColoredConsole.Test.Acceptance\ColorConsoleFeature.cs,WritingALineWithParsedStringColors,The following statement contains a magic number: "Then the console contains a line"                  .x(() =>                      {                          output.Length.Should().Be(                              3' "there should be two tokens for the words and a token for the line ending");                            output[2].Text.Should().Be(Environment.NewLine' "the last token should be a new line");                      });
Magic Number,ColoredConsole.Test.Acceptance,MaskingFeature,D:\research\architectureSmells\repos\colored-console_colored-console\src\test\ColoredConsole.Test.Acceptance\MaskingFeature.cs,MaskingColors,The following statement contains a magic number: "Then the console contains a line"                  .x(() =>                  {                      output.Length.Should().Be(                          4' "there should be two tokens for the words' a token for the space and a token for the line ending");                        output[3].Text.Should().Be(Environment.NewLine' "the last token should be a new line");                  });
Magic Number,ColoredConsole.Test.Acceptance,MaskingFeature,D:\research\architectureSmells\repos\colored-console_colored-console\src\test\ColoredConsole.Test.Acceptance\MaskingFeature.cs,MaskingColors,The following statement contains a magic number: "Then the console contains a line"                  .x(() =>                  {                      output.Length.Should().Be(                          4' "there should be two tokens for the words' a token for the space and a token for the line ending");                        output[3].Text.Should().Be(Environment.NewLine' "the last token should be a new line");                  });
Magic Number,ColoredConsole.Test.Acceptance,MaskingFeature,D:\research\architectureSmells\repos\colored-console_colored-console\src\test\ColoredConsole.Test.Acceptance\MaskingFeature.cs,MaskingColors,The following statement contains a magic number: "And the line contains 'Hello' in red' a space in blue and 'world' in blue"                  .x(() =>                  {                      output[0].Text.Should().Be("Hello");                      output[0].Color.Should().Be(ConsoleColor.Red);                      output[1].Text.Should().Be(" ");                      output[1].Color.Should().Be(ConsoleColor.Blue);                      output[2].Text.Should().Be("world");                      output[2].Color.Should().Be(ConsoleColor.Blue);                  });
Magic Number,ColoredConsole.Test.Acceptance,MaskingFeature,D:\research\architectureSmells\repos\colored-console_colored-console\src\test\ColoredConsole.Test.Acceptance\MaskingFeature.cs,MaskingColors,The following statement contains a magic number: "And the line contains 'Hello' in red' a space in blue and 'world' in blue"                  .x(() =>                  {                      output[0].Text.Should().Be("Hello");                      output[0].Color.Should().Be(ConsoleColor.Red);                      output[1].Text.Should().Be(" ");                      output[1].Color.Should().Be(ConsoleColor.Blue);                      output[2].Text.Should().Be("world");                      output[2].Color.Should().Be(ConsoleColor.Blue);                  });
Magic Number,ColoredConsole.Test.Acceptance,MaskingFeature,D:\research\architectureSmells\repos\colored-console_colored-console\src\test\ColoredConsole.Test.Acceptance\MaskingFeature.cs,MaskingBackgroundColors,The following statement contains a magic number: "Then the console contains a line"                  .x(() =>                  {                      output.Length.Should().Be(                          4' "there should be two tokens for the words' a token for the space and a token for the line ending");                        output[3].Text.Should().Be(Environment.NewLine' "the last token should be a new line");                  });
Magic Number,ColoredConsole.Test.Acceptance,MaskingFeature,D:\research\architectureSmells\repos\colored-console_colored-console\src\test\ColoredConsole.Test.Acceptance\MaskingFeature.cs,MaskingBackgroundColors,The following statement contains a magic number: "Then the console contains a line"                  .x(() =>                  {                      output.Length.Should().Be(                          4' "there should be two tokens for the words' a token for the space and a token for the line ending");                        output[3].Text.Should().Be(Environment.NewLine' "the last token should be a new line");                  });
Magic Number,ColoredConsole.Test.Acceptance,MaskingFeature,D:\research\architectureSmells\repos\colored-console_colored-console\src\test\ColoredConsole.Test.Acceptance\MaskingFeature.cs,MaskingBackgroundColors,The following statement contains a magic number: "And the line contains 'Hello' on red' a space on blue and 'world' on blue"                  .x(() =>                  {                      output[0].Text.Should().Be("Hello");                      output[0].BackgroundColor.Should().Be(ConsoleColor.Red);                      output[1].Text.Should().Be(" ");                      output[1].BackgroundColor.Should().Be(ConsoleColor.Blue);                      output[2].Text.Should().Be("world");                      output[2].BackgroundColor.Should().Be(ConsoleColor.Blue);                  });
Magic Number,ColoredConsole.Test.Acceptance,MaskingFeature,D:\research\architectureSmells\repos\colored-console_colored-console\src\test\ColoredConsole.Test.Acceptance\MaskingFeature.cs,MaskingBackgroundColors,The following statement contains a magic number: "And the line contains 'Hello' on red' a space on blue and 'world' on blue"                  .x(() =>                  {                      output[0].Text.Should().Be("Hello");                      output[0].BackgroundColor.Should().Be(ConsoleColor.Red);                      output[1].Text.Should().Be(" ");                      output[1].BackgroundColor.Should().Be(ConsoleColor.Blue);                      output[2].Text.Should().Be("world");                      output[2].BackgroundColor.Should().Be(ConsoleColor.Blue);                  });
Magic Number,ColoredConsole.Test.Acceptance,MaskingFeature,D:\research\architectureSmells\repos\colored-console_colored-console\src\test\ColoredConsole.Test.Acceptance\MaskingFeature.cs,MaskingColorsAndBackgroundColors,The following statement contains a magic number: "Then the console contains a line"                  .x(() =>                  {                      output.Length.Should().Be(                          4' "there should be two tokens for the words' a token for the space and a token for the line ending");                        output[3].Text.Should().Be(Environment.NewLine' "the last token should be a new line");                  });
Magic Number,ColoredConsole.Test.Acceptance,MaskingFeature,D:\research\architectureSmells\repos\colored-console_colored-console\src\test\ColoredConsole.Test.Acceptance\MaskingFeature.cs,MaskingColorsAndBackgroundColors,The following statement contains a magic number: "Then the console contains a line"                  .x(() =>                  {                      output.Length.Should().Be(                          4' "there should be two tokens for the words' a token for the space and a token for the line ending");                        output[3].Text.Should().Be(Environment.NewLine' "the last token should be a new line");                  });
Magic Number,ColoredConsole.Test.Acceptance,MaskingFeature,D:\research\architectureSmells\repos\colored-console_colored-console\src\test\ColoredConsole.Test.Acceptance\MaskingFeature.cs,MaskingColorsAndBackgroundColors,The following statement contains a magic number: "And the line contains 'Hello' in red on yellow' a space and 'world' in blue on cyan"                  .x(() =>                  {                      output[0].Text.Should().Be("Hello");                      output[0].Color.Should().Be(ConsoleColor.Red);                      output[0].BackgroundColor.Should().Be(ConsoleColor.Yellow);                      output[1].Text.Should().Be(" ");                      output[1].Color.Should().Be(ConsoleColor.Blue);                      output[1].BackgroundColor.Should().Be(ConsoleColor.Cyan);                      output[2].Text.Should().Be("world");                      output[2].Color.Should().Be(ConsoleColor.Blue);                      output[2].BackgroundColor.Should().Be(ConsoleColor.Cyan);                  });
Magic Number,ColoredConsole.Test.Acceptance,MaskingFeature,D:\research\architectureSmells\repos\colored-console_colored-console\src\test\ColoredConsole.Test.Acceptance\MaskingFeature.cs,MaskingColorsAndBackgroundColors,The following statement contains a magic number: "And the line contains 'Hello' in red on yellow' a space and 'world' in blue on cyan"                  .x(() =>                  {                      output[0].Text.Should().Be("Hello");                      output[0].Color.Should().Be(ConsoleColor.Red);                      output[0].BackgroundColor.Should().Be(ConsoleColor.Yellow);                      output[1].Text.Should().Be(" ");                      output[1].Color.Should().Be(ConsoleColor.Blue);                      output[1].BackgroundColor.Should().Be(ConsoleColor.Cyan);                      output[2].Text.Should().Be("world");                      output[2].Color.Should().Be(ConsoleColor.Blue);                      output[2].BackgroundColor.Should().Be(ConsoleColor.Cyan);                  });
Magic Number,ColoredConsole.Test.Acceptance,MaskingFeature,D:\research\architectureSmells\repos\colored-console_colored-console\src\test\ColoredConsole.Test.Acceptance\MaskingFeature.cs,MaskingColorsAndBackgroundColors,The following statement contains a magic number: "And the line contains 'Hello' in red on yellow' a space and 'world' in blue on cyan"                  .x(() =>                  {                      output[0].Text.Should().Be("Hello");                      output[0].Color.Should().Be(ConsoleColor.Red);                      output[0].BackgroundColor.Should().Be(ConsoleColor.Yellow);                      output[1].Text.Should().Be(" ");                      output[1].Color.Should().Be(ConsoleColor.Blue);                      output[1].BackgroundColor.Should().Be(ConsoleColor.Cyan);                      output[2].Text.Should().Be("world");                      output[2].Color.Should().Be(ConsoleColor.Blue);                      output[2].BackgroundColor.Should().Be(ConsoleColor.Cyan);                  });
