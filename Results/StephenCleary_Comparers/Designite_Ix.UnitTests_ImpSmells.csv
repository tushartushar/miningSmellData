Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Ix.UnitTests,IxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Ix.UnitTests\IxEnumerableExtensions.cs,Max_UsesComparer,The following statement contains a magic number: IEnumerable<int?> input = new int?[] { int.MaxValue' int.MinValue' null' 0' 1' 2' 3 };
Magic Number,Ix.UnitTests,IxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Ix.UnitTests\IxEnumerableExtensions.cs,Max_UsesComparer,The following statement contains a magic number: IEnumerable<int?> input = new int?[] { int.MaxValue' int.MinValue' null' 0' 1' 2' 3 };
Magic Number,Ix.UnitTests,IxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Ix.UnitTests\IxEnumerableExtensions.cs,Max_UsesComparer,The following statement contains a magic number: var result = input.Max(c => c.OrderBy(x => x % 2 == 0).ThenBy(x => x));
Magic Number,Ix.UnitTests,IxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Ix.UnitTests\IxEnumerableExtensions.cs,Max_UsesComparer,The following statement contains a magic number: Assert.Equal(2' result);
Magic Number,Ix.UnitTests,IxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Ix.UnitTests\IxEnumerableExtensions.cs,MaxBy_UsesComparer,The following statement contains a magic number: IEnumerable<int?> input = new int?[] { int.MaxValue' int.MinValue' null' 0' 1' 2' 3 };
Magic Number,Ix.UnitTests,IxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Ix.UnitTests\IxEnumerableExtensions.cs,MaxBy_UsesComparer,The following statement contains a magic number: IEnumerable<int?> input = new int?[] { int.MaxValue' int.MinValue' null' 0' 1' 2' 3 };
Magic Number,Ix.UnitTests,IxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Ix.UnitTests\IxEnumerableExtensions.cs,MaxBy_UsesComparer,The following statement contains a magic number: var result = input.MaxBy(x => x' c => c.OrderBy(x => x % 2 == 0).ThenBy(x => x));
Magic Number,Ix.UnitTests,IxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Ix.UnitTests\IxEnumerableExtensions.cs,MaxBy_UsesComparer,The following statement contains a magic number: Assert.Equal(new int?[] { 2 }' result);
Magic Number,Ix.UnitTests,IxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Ix.UnitTests\IxEnumerableExtensions.cs,Min_UsesComparer,The following statement contains a magic number: IEnumerable<int?> input = new int?[] { int.MaxValue' int.MinValue' null' 0' 1' 2' 3 };
Magic Number,Ix.UnitTests,IxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Ix.UnitTests\IxEnumerableExtensions.cs,Min_UsesComparer,The following statement contains a magic number: IEnumerable<int?> input = new int?[] { int.MaxValue' int.MinValue' null' 0' 1' 2' 3 };
Magic Number,Ix.UnitTests,IxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Ix.UnitTests\IxEnumerableExtensions.cs,Min_UsesComparer,The following statement contains a magic number: var result = input.Min(c => c.OrderBy(x => x % 2 == 0).ThenBy(x => x));
Magic Number,Ix.UnitTests,IxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Ix.UnitTests\IxEnumerableExtensions.cs,MinBy_UsesComparer,The following statement contains a magic number: IEnumerable<int?> input = new int?[] { int.MaxValue' int.MinValue' null' 0' 1' 2' 3 };
Magic Number,Ix.UnitTests,IxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Ix.UnitTests\IxEnumerableExtensions.cs,MinBy_UsesComparer,The following statement contains a magic number: IEnumerable<int?> input = new int?[] { int.MaxValue' int.MinValue' null' 0' 1' 2' 3 };
Magic Number,Ix.UnitTests,IxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Ix.UnitTests\IxEnumerableExtensions.cs,MinBy_UsesComparer,The following statement contains a magic number: var result = input.MinBy(x => x' c => c.OrderBy(x => x % 2 == 0).ThenBy(x => x));
Magic Number,Ix.UnitTests,IxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Ix.UnitTests\IxEnumerableExtensions.cs,Distinct_UsesComparer,The following statement contains a magic number: IEnumerable<int> values = new int[] { 1' 2' 3' 4' 5 };
Magic Number,Ix.UnitTests,IxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Ix.UnitTests\IxEnumerableExtensions.cs,Distinct_UsesComparer,The following statement contains a magic number: IEnumerable<int> values = new int[] { 1' 2' 3' 4' 5 };
Magic Number,Ix.UnitTests,IxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Ix.UnitTests\IxEnumerableExtensions.cs,Distinct_UsesComparer,The following statement contains a magic number: IEnumerable<int> values = new int[] { 1' 2' 3' 4' 5 };
Magic Number,Ix.UnitTests,IxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Ix.UnitTests\IxEnumerableExtensions.cs,Distinct_UsesComparer,The following statement contains a magic number: IEnumerable<int> values = new int[] { 1' 2' 3' 4' 5 };
Magic Number,Ix.UnitTests,IxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Ix.UnitTests\IxEnumerableExtensions.cs,Distinct_UsesComparer,The following statement contains a magic number: var result = values.Distinct(x => x' c => c.EquateBy(x => x % 3));
Magic Number,Ix.UnitTests,IxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Ix.UnitTests\IxEnumerableExtensions.cs,Distinct_UsesComparer,The following statement contains a magic number: Assert.Equal(new int[] { 1' 2' 3 }' result);
Magic Number,Ix.UnitTests,IxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Ix.UnitTests\IxEnumerableExtensions.cs,Distinct_UsesComparer,The following statement contains a magic number: Assert.Equal(new int[] { 1' 2' 3 }' result);
Magic Number,Ix.UnitTests,IxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Ix.UnitTests\IxEnumerableExtensions.cs,DistinctUntilChanged_UsesComparer,The following statement contains a magic number: var input = new int[] { 0' 1' 4' 2' 3' 4' 5 };
Magic Number,Ix.UnitTests,IxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Ix.UnitTests\IxEnumerableExtensions.cs,DistinctUntilChanged_UsesComparer,The following statement contains a magic number: var input = new int[] { 0' 1' 4' 2' 3' 4' 5 };
Magic Number,Ix.UnitTests,IxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Ix.UnitTests\IxEnumerableExtensions.cs,DistinctUntilChanged_UsesComparer,The following statement contains a magic number: var input = new int[] { 0' 1' 4' 2' 3' 4' 5 };
Magic Number,Ix.UnitTests,IxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Ix.UnitTests\IxEnumerableExtensions.cs,DistinctUntilChanged_UsesComparer,The following statement contains a magic number: var input = new int[] { 0' 1' 4' 2' 3' 4' 5 };
Magic Number,Ix.UnitTests,IxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Ix.UnitTests\IxEnumerableExtensions.cs,DistinctUntilChanged_UsesComparer,The following statement contains a magic number: var input = new int[] { 0' 1' 4' 2' 3' 4' 5 };
Magic Number,Ix.UnitTests,IxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Ix.UnitTests\IxEnumerableExtensions.cs,DistinctUntilChanged_UsesComparer,The following statement contains a magic number: var result = input.DistinctUntilChanged(c => c.EquateBy(x => x % 3));
Magic Number,Ix.UnitTests,IxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Ix.UnitTests\IxEnumerableExtensions.cs,DistinctUntilChanged_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 0' 1' 2' 3' 4' 5 }' result);
Magic Number,Ix.UnitTests,IxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Ix.UnitTests\IxEnumerableExtensions.cs,DistinctUntilChanged_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 0' 1' 2' 3' 4' 5 }' result);
Magic Number,Ix.UnitTests,IxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Ix.UnitTests\IxEnumerableExtensions.cs,DistinctUntilChanged_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 0' 1' 2' 3' 4' 5 }' result);
Magic Number,Ix.UnitTests,IxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Ix.UnitTests\IxEnumerableExtensions.cs,DistinctUntilChanged_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 0' 1' 2' 3' 4' 5 }' result);
Magic Number,Ix.UnitTests,IxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Ix.UnitTests\IxEnumerableExtensions.cs,DistinctUntilChanged_KeySelector_UsesComparer,The following statement contains a magic number: var input = new int[] { 0' 1' 4' 2' 3' 4' 5 };
Magic Number,Ix.UnitTests,IxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Ix.UnitTests\IxEnumerableExtensions.cs,DistinctUntilChanged_KeySelector_UsesComparer,The following statement contains a magic number: var input = new int[] { 0' 1' 4' 2' 3' 4' 5 };
Magic Number,Ix.UnitTests,IxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Ix.UnitTests\IxEnumerableExtensions.cs,DistinctUntilChanged_KeySelector_UsesComparer,The following statement contains a magic number: var input = new int[] { 0' 1' 4' 2' 3' 4' 5 };
Magic Number,Ix.UnitTests,IxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Ix.UnitTests\IxEnumerableExtensions.cs,DistinctUntilChanged_KeySelector_UsesComparer,The following statement contains a magic number: var input = new int[] { 0' 1' 4' 2' 3' 4' 5 };
Magic Number,Ix.UnitTests,IxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Ix.UnitTests\IxEnumerableExtensions.cs,DistinctUntilChanged_KeySelector_UsesComparer,The following statement contains a magic number: var input = new int[] { 0' 1' 4' 2' 3' 4' 5 };
Magic Number,Ix.UnitTests,IxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Ix.UnitTests\IxEnumerableExtensions.cs,DistinctUntilChanged_KeySelector_UsesComparer,The following statement contains a magic number: var result = input.DistinctUntilChanged(x => x' c => c.EquateBy(x => x % 3));
Magic Number,Ix.UnitTests,IxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Ix.UnitTests\IxEnumerableExtensions.cs,DistinctUntilChanged_KeySelector_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 0' 1' 2' 3' 4' 5 }' result);
Magic Number,Ix.UnitTests,IxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Ix.UnitTests\IxEnumerableExtensions.cs,DistinctUntilChanged_KeySelector_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 0' 1' 2' 3' 4' 5 }' result);
Magic Number,Ix.UnitTests,IxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Ix.UnitTests\IxEnumerableExtensions.cs,DistinctUntilChanged_KeySelector_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 0' 1' 2' 3' 4' 5 }' result);
Magic Number,Ix.UnitTests,IxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Ix.UnitTests\IxEnumerableExtensions.cs,DistinctUntilChanged_KeySelector_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 0' 1' 2' 3' 4' 5 }' result);
