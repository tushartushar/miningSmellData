Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupBy_UsesComparer,The length of the statement  "            var result = await values.GroupBy(x => x' c => c.EquateBy(x => x % 3)).SelectMany(async x => await x.ToList().LastAsync()).ToList().LastAsync(); " is 144.
Long Statement,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupBy_ElementSelector_UsesComparer,The length of the statement  "            var result = await values.GroupBy(x => x' x => x' c => c.EquateBy(x => x % 3)).SelectMany(async x => await x.ToList().LastAsync()).ToList().LastAsync(); " is 152.
Long Statement,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupBy_Capacity_UsesComparer,The length of the statement  "            var result = await values.GroupBy(x => x' 10' c => c.EquateBy(x => x % 3)).SelectMany(async x => await x.ToList().LastAsync()).ToList().LastAsync(); " is 148.
Long Statement,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupBy_ElementSelectorAndCapacity_UsesComparer,The length of the statement  "            var result = await values.GroupBy(x => x' x => x' 10' c => c.EquateBy(x => x % 3)).SelectMany(async x => await x.ToList().LastAsync()).ToList().LastAsync(); " is 156.
Long Statement,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupByUntil_UsesComparer,The length of the statement  "            var result = await values.GroupByUntil(x => x' x => Observable.Never<Unit>()' c => c.EquateBy(x => x % 3)).SelectMany(async x => await x.ToList().LastAsync()).ToList().LastAsync(); " is 180.
Long Statement,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupByUntil_ElementSelector_UsesComparer,The length of the statement  "            var result = await values.GroupByUntil(x => x' x => x' x => Observable.Never<Unit>()' c => c.EquateBy(x => x % 3)).SelectMany(async x => await x.ToList().LastAsync()).ToList().LastAsync(); " is 188.
Long Statement,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupByUntil_Capacity_UsesComparer,The length of the statement  "            var result = await values.GroupByUntil(x => x' x => Observable.Never<Unit>()' 10' c => c.EquateBy(x => x % 3)).SelectMany(async x => await x.ToList().LastAsync()).ToList().LastAsync(); " is 184.
Long Statement,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupByUntil_ElementSelectorAndCapacity_UsesComparer,The length of the statement  "            var result = await values.GroupByUntil(x => x' x => x' x => Observable.Never<Unit>()' 10' c => c.EquateBy(x => x % 3)).SelectMany(async x => await x.ToList().LastAsync()).ToList().LastAsync(); " is 192.
Long Statement,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,ToDictionary_UsesComparer,The length of the statement  "            await Assert.ThrowsAnyAsync<ArgumentException>(async () => await values.ToDictionary(x => x' c => c.EquateBy(x => x % 3)).LastAsync()); " is 135.
Long Statement,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,ToDictionary_ElementSelector_UsesComparer,The length of the statement  "            await Assert.ThrowsAnyAsync<ArgumentException>(async () => await values.ToDictionary(x => x' x => x' c => c.EquateBy(x => x % 3)).LastAsync()); " is 143.
Long Statement,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,ToLookup_UsesComparer,The length of the statement  "            var observableResult = await values.ToLookup(x => x' c => c.EquateBy(x => x % 3)).SelectMany(x => x).ToList().LastAsync(); " is 122.
Long Statement,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,ToLookup_ElementSelector_UsesComparer,The length of the statement  "            var observableResult = await values.ToLookup(x => x' x => x' c => c.EquateBy(x => x % 3)).SelectMany(x => x).ToList().LastAsync(); " is 130.
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,Max_UsesComparer,The following statement contains a magic number: var input = new int?[] { int.MaxValue' int.MinValue' null' 0' 1' 2' 3 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,Max_UsesComparer,The following statement contains a magic number: var input = new int?[] { int.MaxValue' int.MinValue' null' 0' 1' 2' 3 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,Max_UsesComparer,The following statement contains a magic number: var result = await input.Max(c => c.OrderBy(x => x % 2 == 0).ThenBy(x => x)).LastAsync();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,Max_UsesComparer,The following statement contains a magic number: Assert.Equal(2' result);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,Max_ResultSelector_UsesComparer,The following statement contains a magic number: var input = new int?[] { int.MaxValue' int.MinValue' null' 0' 1' 2' 3 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,Max_ResultSelector_UsesComparer,The following statement contains a magic number: var input = new int?[] { int.MaxValue' int.MinValue' null' 0' 1' 2' 3 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,Max_ResultSelector_UsesComparer,The following statement contains a magic number: var result = await input.Max(x => x' c => c.OrderBy(x => x % 2 == 0).ThenBy(x => x)).LastAsync();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,Max_ResultSelector_UsesComparer,The following statement contains a magic number: Assert.Equal(2' result);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,MaxBy_UsesComparer,The following statement contains a magic number: var input = new int?[] { int.MaxValue' int.MinValue' null' 0' 1' 2' 3 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,MaxBy_UsesComparer,The following statement contains a magic number: var input = new int?[] { int.MaxValue' int.MinValue' null' 0' 1' 2' 3 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,MaxBy_UsesComparer,The following statement contains a magic number: var result = await input.MaxBy(x => x' c => c.OrderBy(x => x % 2 == 0).ThenBy(x => x)).LastAsync();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,MaxBy_UsesComparer,The following statement contains a magic number: Assert.Equal(new int?[] { 2 }' result);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,Min_UsesComparer,The following statement contains a magic number: var input = new int?[] { int.MaxValue' int.MinValue' null' 0' 1' 2' 3 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,Min_UsesComparer,The following statement contains a magic number: var input = new int?[] { int.MaxValue' int.MinValue' null' 0' 1' 2' 3 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,Min_UsesComparer,The following statement contains a magic number: var result = await input.Min(c => c.OrderBy(x => x % 2 == 0).ThenBy(x => x)).LastAsync();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,Min_ResultSelector_UsesComparer,The following statement contains a magic number: var input = new int?[] { int.MaxValue' int.MinValue' null' 0' 1' 2' 3 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,Min_ResultSelector_UsesComparer,The following statement contains a magic number: var input = new int?[] { int.MaxValue' int.MinValue' null' 0' 1' 2' 3 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,Min_ResultSelector_UsesComparer,The following statement contains a magic number: var result = await input.Min(x => x' c => c.OrderBy(x => x % 2 == 0).ThenBy(x => x)).LastAsync();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,MinBy_UsesComparer,The following statement contains a magic number: var input = new int?[] { int.MaxValue' int.MinValue' null' 0' 1' 2' 3 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,MinBy_UsesComparer,The following statement contains a magic number: var input = new int?[] { int.MaxValue' int.MinValue' null' 0' 1' 2' 3 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,MinBy_UsesComparer,The following statement contains a magic number: var result = await input.MinBy(x => x' c => c.OrderBy(x => x % 2 == 0).ThenBy(x => x)).LastAsync();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,Contains_UsesComparer,The following statement contains a magic number: var input = new int[] { 0' 1' 2 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,Contains_UsesComparer,The following statement contains a magic number: var result = await input.Contains(5' c => c.EquateBy(x => x % 3)).LastAsync();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,Contains_UsesComparer,The following statement contains a magic number: var result = await input.Contains(5' c => c.EquateBy(x => x % 3)).LastAsync();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,Distinct_UsesComparer,The following statement contains a magic number: var input = new int[] { 0' 1' 2' 3' 4' 5 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,Distinct_UsesComparer,The following statement contains a magic number: var input = new int[] { 0' 1' 2' 3' 4' 5 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,Distinct_UsesComparer,The following statement contains a magic number: var input = new int[] { 0' 1' 2' 3' 4' 5 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,Distinct_UsesComparer,The following statement contains a magic number: var input = new int[] { 0' 1' 2' 3' 4' 5 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,Distinct_UsesComparer,The following statement contains a magic number: var result = await input.Distinct(c => c.EquateBy(x => x % 3)).ToList().LastAsync();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,Distinct_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 0' 1' 2 }' result);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,Distinct_KeySelector_UsesComparer,The following statement contains a magic number: var input = new int[] { 0' 1' 2' 3' 4' 5 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,Distinct_KeySelector_UsesComparer,The following statement contains a magic number: var input = new int[] { 0' 1' 2' 3' 4' 5 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,Distinct_KeySelector_UsesComparer,The following statement contains a magic number: var input = new int[] { 0' 1' 2' 3' 4' 5 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,Distinct_KeySelector_UsesComparer,The following statement contains a magic number: var input = new int[] { 0' 1' 2' 3' 4' 5 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,Distinct_KeySelector_UsesComparer,The following statement contains a magic number: var result = await input.Distinct(x => x' c => c.EquateBy(x => x % 3)).ToList().LastAsync();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,Distinct_KeySelector_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 0' 1' 2 }' result);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,DistinctUntilChanged_UsesComparer,The following statement contains a magic number: var input = new int[] { 0' 1' 4' 2' 3' 4' 5 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,DistinctUntilChanged_UsesComparer,The following statement contains a magic number: var input = new int[] { 0' 1' 4' 2' 3' 4' 5 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,DistinctUntilChanged_UsesComparer,The following statement contains a magic number: var input = new int[] { 0' 1' 4' 2' 3' 4' 5 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,DistinctUntilChanged_UsesComparer,The following statement contains a magic number: var input = new int[] { 0' 1' 4' 2' 3' 4' 5 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,DistinctUntilChanged_UsesComparer,The following statement contains a magic number: var input = new int[] { 0' 1' 4' 2' 3' 4' 5 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,DistinctUntilChanged_UsesComparer,The following statement contains a magic number: var result = await input.DistinctUntilChanged(c => c.EquateBy(x => x % 3)).ToList().LastAsync();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,DistinctUntilChanged_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 0' 1' 2' 3' 4' 5 }' result);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,DistinctUntilChanged_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 0' 1' 2' 3' 4' 5 }' result);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,DistinctUntilChanged_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 0' 1' 2' 3' 4' 5 }' result);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,DistinctUntilChanged_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 0' 1' 2' 3' 4' 5 }' result);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,DistinctUntilChanged_KeySelector_UsesComparer,The following statement contains a magic number: var input = new int[] { 0' 1' 4' 2' 3' 4' 5 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,DistinctUntilChanged_KeySelector_UsesComparer,The following statement contains a magic number: var input = new int[] { 0' 1' 4' 2' 3' 4' 5 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,DistinctUntilChanged_KeySelector_UsesComparer,The following statement contains a magic number: var input = new int[] { 0' 1' 4' 2' 3' 4' 5 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,DistinctUntilChanged_KeySelector_UsesComparer,The following statement contains a magic number: var input = new int[] { 0' 1' 4' 2' 3' 4' 5 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,DistinctUntilChanged_KeySelector_UsesComparer,The following statement contains a magic number: var input = new int[] { 0' 1' 4' 2' 3' 4' 5 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,DistinctUntilChanged_KeySelector_UsesComparer,The following statement contains a magic number: var result = await input.DistinctUntilChanged(x => x' c => c.EquateBy(x => x % 3)).ToList().LastAsync();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,DistinctUntilChanged_KeySelector_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 0' 1' 2' 3' 4' 5 }' result);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,DistinctUntilChanged_KeySelector_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 0' 1' 2' 3' 4' 5 }' result);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,DistinctUntilChanged_KeySelector_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 0' 1' 2' 3' 4' 5 }' result);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,DistinctUntilChanged_KeySelector_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 0' 1' 2' 3' 4' 5 }' result);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupBy_UsesComparer,The following statement contains a magic number: var values = new int[] { 1' 2' 3' 4' 5 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupBy_UsesComparer,The following statement contains a magic number: var values = new int[] { 1' 2' 3' 4' 5 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupBy_UsesComparer,The following statement contains a magic number: var values = new int[] { 1' 2' 3' 4' 5 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupBy_UsesComparer,The following statement contains a magic number: var values = new int[] { 1' 2' 3' 4' 5 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupBy_UsesComparer,The following statement contains a magic number: var result = await values.GroupBy(x => x' c => c.EquateBy(x => x % 3)).SelectMany(async x => await x.ToList().LastAsync()).ToList().LastAsync();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupBy_UsesComparer,The following statement contains a magic number: Assert.Equal(3' result.Count);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupBy_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 1' 4 }' result[0]);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupBy_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 2' 5 }' result[1]);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupBy_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 2' 5 }' result[1]);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupBy_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 3 }' result[2]);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupBy_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 3 }' result[2]);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupBy_ElementSelector_UsesComparer,The following statement contains a magic number: var values = new int[] { 1' 2' 3' 4' 5 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupBy_ElementSelector_UsesComparer,The following statement contains a magic number: var values = new int[] { 1' 2' 3' 4' 5 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupBy_ElementSelector_UsesComparer,The following statement contains a magic number: var values = new int[] { 1' 2' 3' 4' 5 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupBy_ElementSelector_UsesComparer,The following statement contains a magic number: var values = new int[] { 1' 2' 3' 4' 5 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupBy_ElementSelector_UsesComparer,The following statement contains a magic number: var result = await values.GroupBy(x => x' x => x' c => c.EquateBy(x => x % 3)).SelectMany(async x => await x.ToList().LastAsync()).ToList().LastAsync();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupBy_ElementSelector_UsesComparer,The following statement contains a magic number: Assert.Equal(3' result.Count);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupBy_ElementSelector_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 1' 4 }' result[0]);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupBy_ElementSelector_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 2' 5 }' result[1]);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupBy_ElementSelector_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 2' 5 }' result[1]);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupBy_ElementSelector_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 3 }' result[2]);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupBy_ElementSelector_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 3 }' result[2]);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupBy_Capacity_UsesComparer,The following statement contains a magic number: var values = new int[] { 1' 2' 3' 4' 5 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupBy_Capacity_UsesComparer,The following statement contains a magic number: var values = new int[] { 1' 2' 3' 4' 5 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupBy_Capacity_UsesComparer,The following statement contains a magic number: var values = new int[] { 1' 2' 3' 4' 5 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupBy_Capacity_UsesComparer,The following statement contains a magic number: var values = new int[] { 1' 2' 3' 4' 5 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupBy_Capacity_UsesComparer,The following statement contains a magic number: var result = await values.GroupBy(x => x' 10' c => c.EquateBy(x => x % 3)).SelectMany(async x => await x.ToList().LastAsync()).ToList().LastAsync();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupBy_Capacity_UsesComparer,The following statement contains a magic number: var result = await values.GroupBy(x => x' 10' c => c.EquateBy(x => x % 3)).SelectMany(async x => await x.ToList().LastAsync()).ToList().LastAsync();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupBy_Capacity_UsesComparer,The following statement contains a magic number: Assert.Equal(3' result.Count);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupBy_Capacity_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 1' 4 }' result[0]);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupBy_Capacity_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 2' 5 }' result[1]);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupBy_Capacity_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 2' 5 }' result[1]);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupBy_Capacity_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 3 }' result[2]);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupBy_Capacity_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 3 }' result[2]);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupBy_ElementSelectorAndCapacity_UsesComparer,The following statement contains a magic number: var values = new int[] { 1' 2' 3' 4' 5 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupBy_ElementSelectorAndCapacity_UsesComparer,The following statement contains a magic number: var values = new int[] { 1' 2' 3' 4' 5 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupBy_ElementSelectorAndCapacity_UsesComparer,The following statement contains a magic number: var values = new int[] { 1' 2' 3' 4' 5 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupBy_ElementSelectorAndCapacity_UsesComparer,The following statement contains a magic number: var values = new int[] { 1' 2' 3' 4' 5 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupBy_ElementSelectorAndCapacity_UsesComparer,The following statement contains a magic number: var result = await values.GroupBy(x => x' x => x' 10' c => c.EquateBy(x => x % 3)).SelectMany(async x => await x.ToList().LastAsync()).ToList().LastAsync();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupBy_ElementSelectorAndCapacity_UsesComparer,The following statement contains a magic number: var result = await values.GroupBy(x => x' x => x' 10' c => c.EquateBy(x => x % 3)).SelectMany(async x => await x.ToList().LastAsync()).ToList().LastAsync();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupBy_ElementSelectorAndCapacity_UsesComparer,The following statement contains a magic number: Assert.Equal(3' result.Count);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupBy_ElementSelectorAndCapacity_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 1' 4 }' result[0]);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupBy_ElementSelectorAndCapacity_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 2' 5 }' result[1]);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupBy_ElementSelectorAndCapacity_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 2' 5 }' result[1]);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupBy_ElementSelectorAndCapacity_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 3 }' result[2]);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupBy_ElementSelectorAndCapacity_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 3 }' result[2]);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupByUntil_UsesComparer,The following statement contains a magic number: var values = new int[] { 1' 2' 3' 4' 5 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupByUntil_UsesComparer,The following statement contains a magic number: var values = new int[] { 1' 2' 3' 4' 5 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupByUntil_UsesComparer,The following statement contains a magic number: var values = new int[] { 1' 2' 3' 4' 5 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupByUntil_UsesComparer,The following statement contains a magic number: var values = new int[] { 1' 2' 3' 4' 5 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupByUntil_UsesComparer,The following statement contains a magic number: var result = await values.GroupByUntil(x => x' x => Observable.Never<Unit>()' c => c.EquateBy(x => x % 3)).SelectMany(async x => await x.ToList().LastAsync()).ToList().LastAsync();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupByUntil_UsesComparer,The following statement contains a magic number: Assert.Equal(3' result.Count);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupByUntil_UsesComparer,The following statement contains a magic number: Assert.Contains(new[] { 1' 4 }' result);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupByUntil_UsesComparer,The following statement contains a magic number: Assert.Contains(new[] { 2' 5 }' result);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupByUntil_UsesComparer,The following statement contains a magic number: Assert.Contains(new[] { 2' 5 }' result);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupByUntil_UsesComparer,The following statement contains a magic number: Assert.Contains(new[] { 3 }' result);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupByUntil_ElementSelector_UsesComparer,The following statement contains a magic number: var values = new int[] { 1' 2' 3' 4' 5 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupByUntil_ElementSelector_UsesComparer,The following statement contains a magic number: var values = new int[] { 1' 2' 3' 4' 5 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupByUntil_ElementSelector_UsesComparer,The following statement contains a magic number: var values = new int[] { 1' 2' 3' 4' 5 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupByUntil_ElementSelector_UsesComparer,The following statement contains a magic number: var values = new int[] { 1' 2' 3' 4' 5 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupByUntil_ElementSelector_UsesComparer,The following statement contains a magic number: var result = await values.GroupByUntil(x => x' x => x' x => Observable.Never<Unit>()' c => c.EquateBy(x => x % 3)).SelectMany(async x => await x.ToList().LastAsync()).ToList().LastAsync();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupByUntil_ElementSelector_UsesComparer,The following statement contains a magic number: Assert.Equal(3' result.Count);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupByUntil_ElementSelector_UsesComparer,The following statement contains a magic number: Assert.Contains(new[] { 1' 4 }' result);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupByUntil_ElementSelector_UsesComparer,The following statement contains a magic number: Assert.Contains(new[] { 2' 5 }' result);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupByUntil_ElementSelector_UsesComparer,The following statement contains a magic number: Assert.Contains(new[] { 2' 5 }' result);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupByUntil_ElementSelector_UsesComparer,The following statement contains a magic number: Assert.Contains(new[] { 3 }' result);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupByUntil_Capacity_UsesComparer,The following statement contains a magic number: var values = new int[] { 1' 2' 3' 4' 5 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupByUntil_Capacity_UsesComparer,The following statement contains a magic number: var values = new int[] { 1' 2' 3' 4' 5 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupByUntil_Capacity_UsesComparer,The following statement contains a magic number: var values = new int[] { 1' 2' 3' 4' 5 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupByUntil_Capacity_UsesComparer,The following statement contains a magic number: var values = new int[] { 1' 2' 3' 4' 5 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupByUntil_Capacity_UsesComparer,The following statement contains a magic number: var result = await values.GroupByUntil(x => x' x => Observable.Never<Unit>()' 10' c => c.EquateBy(x => x % 3)).SelectMany(async x => await x.ToList().LastAsync()).ToList().LastAsync();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupByUntil_Capacity_UsesComparer,The following statement contains a magic number: var result = await values.GroupByUntil(x => x' x => Observable.Never<Unit>()' 10' c => c.EquateBy(x => x % 3)).SelectMany(async x => await x.ToList().LastAsync()).ToList().LastAsync();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupByUntil_Capacity_UsesComparer,The following statement contains a magic number: Assert.Equal(3' result.Count);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupByUntil_Capacity_UsesComparer,The following statement contains a magic number: Assert.Contains(new[] { 1' 4 }' result);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupByUntil_Capacity_UsesComparer,The following statement contains a magic number: Assert.Contains(new[] { 2' 5 }' result);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupByUntil_Capacity_UsesComparer,The following statement contains a magic number: Assert.Contains(new[] { 2' 5 }' result);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupByUntil_Capacity_UsesComparer,The following statement contains a magic number: Assert.Contains(new[] { 3 }' result);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupByUntil_ElementSelectorAndCapacity_UsesComparer,The following statement contains a magic number: var values = new int[] { 1' 2' 3' 4' 5 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupByUntil_ElementSelectorAndCapacity_UsesComparer,The following statement contains a magic number: var values = new int[] { 1' 2' 3' 4' 5 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupByUntil_ElementSelectorAndCapacity_UsesComparer,The following statement contains a magic number: var values = new int[] { 1' 2' 3' 4' 5 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupByUntil_ElementSelectorAndCapacity_UsesComparer,The following statement contains a magic number: var values = new int[] { 1' 2' 3' 4' 5 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupByUntil_ElementSelectorAndCapacity_UsesComparer,The following statement contains a magic number: var result = await values.GroupByUntil(x => x' x => x' x => Observable.Never<Unit>()' 10' c => c.EquateBy(x => x % 3)).SelectMany(async x => await x.ToList().LastAsync()).ToList().LastAsync();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupByUntil_ElementSelectorAndCapacity_UsesComparer,The following statement contains a magic number: var result = await values.GroupByUntil(x => x' x => x' x => Observable.Never<Unit>()' 10' c => c.EquateBy(x => x % 3)).SelectMany(async x => await x.ToList().LastAsync()).ToList().LastAsync();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupByUntil_ElementSelectorAndCapacity_UsesComparer,The following statement contains a magic number: Assert.Equal(3' result.Count);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupByUntil_ElementSelectorAndCapacity_UsesComparer,The following statement contains a magic number: Assert.Contains(new[] { 1' 4 }' result);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupByUntil_ElementSelectorAndCapacity_UsesComparer,The following statement contains a magic number: Assert.Contains(new[] { 2' 5 }' result);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupByUntil_ElementSelectorAndCapacity_UsesComparer,The following statement contains a magic number: Assert.Contains(new[] { 2' 5 }' result);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,GroupByUntil_ElementSelectorAndCapacity_UsesComparer,The following statement contains a magic number: Assert.Contains(new[] { 3 }' result);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,SequenceEqual_UsesComparer,The following statement contains a magic number: var first = new int[] { 0' 1' 2 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,SequenceEqual_UsesComparer,The following statement contains a magic number: var second = new int[] { 15' 4' 2 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,SequenceEqual_UsesComparer,The following statement contains a magic number: var second = new int[] { 15' 4' 2 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,SequenceEqual_UsesComparer,The following statement contains a magic number: var second = new int[] { 15' 4' 2 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,SequenceEqual_UsesComparer,The following statement contains a magic number: var result = await first.SequenceEqual(second' c => c.EquateBy(x => x % 3)).LastAsync();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,SequenceEqual_Enumerable_UsesComparer,The following statement contains a magic number: var first = new int[] { 0' 1' 2 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,SequenceEqual_Enumerable_UsesComparer,The following statement contains a magic number: var second = new int[] { 15' 4' 2 };
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,SequenceEqual_Enumerable_UsesComparer,The following statement contains a magic number: var second = new int[] { 15' 4' 2 };
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,SequenceEqual_Enumerable_UsesComparer,The following statement contains a magic number: var second = new int[] { 15' 4' 2 };
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,SequenceEqual_Enumerable_UsesComparer,The following statement contains a magic number: var result = await first.SequenceEqual(second' c => c.EquateBy(x => x % 3)).LastAsync();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,ToDictionary_UsesComparer,The following statement contains a magic number: var values = new int[] { 1' 2' 3' 4 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,ToDictionary_UsesComparer,The following statement contains a magic number: var values = new int[] { 1' 2' 3' 4 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,ToDictionary_UsesComparer,The following statement contains a magic number: var values = new int[] { 1' 2' 3' 4 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,ToDictionary_UsesComparer,The following statement contains a magic number: await Assert.ThrowsAnyAsync<ArgumentException>(async () => await values.ToDictionary(x => x' c => c.EquateBy(x => x % 3)).LastAsync());
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,ToDictionary_ElementSelector_UsesComparer,The following statement contains a magic number: var values = new int[] { 1' 2' 3' 4 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,ToDictionary_ElementSelector_UsesComparer,The following statement contains a magic number: var values = new int[] { 1' 2' 3' 4 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,ToDictionary_ElementSelector_UsesComparer,The following statement contains a magic number: var values = new int[] { 1' 2' 3' 4 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,ToDictionary_ElementSelector_UsesComparer,The following statement contains a magic number: await Assert.ThrowsAnyAsync<ArgumentException>(async () => await values.ToDictionary(x => x' x => x' c => c.EquateBy(x => x % 3)).LastAsync());
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,ToLookup_UsesComparer,The following statement contains a magic number: var values = new int[] { 1' 2' 3' 4 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,ToLookup_UsesComparer,The following statement contains a magic number: var values = new int[] { 1' 2' 3' 4 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,ToLookup_UsesComparer,The following statement contains a magic number: var values = new int[] { 1' 2' 3' 4 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,ToLookup_UsesComparer,The following statement contains a magic number: var observableResult = await values.ToLookup(x => x' c => c.EquateBy(x => x % 3)).SelectMany(x => x).ToList().LastAsync();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,ToLookup_UsesComparer,The following statement contains a magic number: Assert.Contains(new[] { 3 }' result);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,ToLookup_UsesComparer,The following statement contains a magic number: Assert.Contains(new[] { 1' 4 }' result);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,ToLookup_UsesComparer,The following statement contains a magic number: Assert.Contains(new[] { 2 }' result);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,ToLookup_ElementSelector_UsesComparer,The following statement contains a magic number: var values = new int[] { 1' 2' 3' 4 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,ToLookup_ElementSelector_UsesComparer,The following statement contains a magic number: var values = new int[] { 1' 2' 3' 4 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,ToLookup_ElementSelector_UsesComparer,The following statement contains a magic number: var values = new int[] { 1' 2' 3' 4 }.ToObservable();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,ToLookup_ElementSelector_UsesComparer,The following statement contains a magic number: var observableResult = await values.ToLookup(x => x' x => x' c => c.EquateBy(x => x % 3)).SelectMany(x => x).ToList().LastAsync();
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,ToLookup_ElementSelector_UsesComparer,The following statement contains a magic number: Assert.Contains(new[] { 3 }' result);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,ToLookup_ElementSelector_UsesComparer,The following statement contains a magic number: Assert.Contains(new[] { 1' 4 }' result);
Magic Number,Rx.UnitTests,RxEnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Rx.UnitTests\RxEnumerableExtensions.cs,ToLookup_ElementSelector_UsesComparer,The following statement contains a magic number: Assert.Contains(new[] { 2 }' result);
