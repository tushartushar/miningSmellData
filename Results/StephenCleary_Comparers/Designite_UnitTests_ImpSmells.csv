Implementation smell,Namespace,Class,File,Method,Description
Complex Method,UnitTests.Util,DataUtility,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Util\DataUtility.cs,Fake,Cyclomatic complexity of the method is 8
Complex Method,UnitTests.Util,DataUtility,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Util\DataUtility.cs,FakeEquivalent,Cyclomatic complexity of the method is 8
Complex Method,UnitTests.Util,DataUtility,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Util\DataUtility.cs,FakeDifferent,Cyclomatic complexity of the method is 8
Long Identifier,UnitTests,IComparerTUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\IComparerTUnitTests.cs,,The length of the parameter DifferentInstancesAndEqualData is 30.
Long Identifier,UnitTests,IComparerUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\IComparerUnitTests.cs,,The length of the parameter DifferentInstancesAndEqualData is 30.
Long Identifier,UnitTests,IEqualityComparerTUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\IEqualityComparerTUnitTests.cs,,The length of the parameter DifferentInstancesAndEqualData is 30.
Long Identifier,UnitTests,IEqualityComparerUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\IEqualityComparerUnitTests.cs,,The length of the parameter DifferentInstancesAndEqualData is 30.
Long Identifier,UnitTests.Util,DataUtility,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Util\DataUtility.cs,ComparedType,The length of the parameter genericEqualityComparerInterface is 32.
Long Identifier,UnitTests.Util,DataUtility,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Util\DataUtility.cs,FindIComparerTEquals,The length of the parameter genericEqualityComparerInterface is 32.
Long Identifier,UnitTests.Util,DataUtility,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Util\DataUtility.cs,FindIComparerTGetHashCode,The length of the parameter genericEqualityComparerInterface is 32.
Long Statement,UnitTests,Compare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Default.cs,ImplementsGetHashCode,The length of the statement  "            Assert.Equal(bclDefault.GetHashCode(7) == bclDefault.GetHashCode(13)' comparer.GetHashCode(7) == comparer.GetHashCode(13)); " is 123.
Long Statement,UnitTests,Compare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Default.cs,ImplementsGetHashCode_NonGeneric,The length of the statement  "            Assert.Equal(bclDefault.GetHashCode(7) == bclDefault.GetHashCode(13)' comparer.GetHashCode(7) == comparer.GetHashCode(13)); " is 123.
Long Statement,UnitTests,Compare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Default.cs,DefaultForString_IsDefaultComparer,The length of the statement  "            Assert.NotEqual(ComparerBuilder.For<char>().Default().Sequence().ToString()' ComparerBuilder.For<string>().Default().ToString()); " is 129.
Long Statement,UnitTests,Compare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Default.cs,ToString_DumpsComparer_NonGeneric,The length of the statement  "            Assert.Equal("Default(NonGenericComparable: IComparable)"' ComparerBuilder.For<NonGenericComparable>().Default().ToString()); " is 125.
Long Statement,UnitTests,Compare_KeyUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Key.cs,OrderByUsesNestedKeyComparer,The length of the statement  "            list.Sort(ComparerBuilder.For<Person>().OrderBy(p => p.FirstName' c => c.OrderBy(x => x' StringComparer.InvariantCulture.Reverse()))); " is 134.
Long Statement,UnitTests,Compare_KeyUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Key.cs,OrderByDescendingUsesKeyComparer,The length of the statement  "            list.Sort(ComparerBuilder.For<Person>().OrderBy(p => p.FirstName' StringComparer.InvariantCulture.Reverse()' descending: true)); " is 128.
Long Statement,UnitTests,Compare_KeyUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Key.cs,OrderByDescendingUsesNestedKeyComparer,The length of the statement  "            list.Sort(ComparerBuilder.For<Person>().OrderBy(p => p.FirstName' c => c.OrderBy(x => x' StringComparer.InvariantCulture.Reverse())' descending: true)); " is 152.
Long Statement,UnitTests,Compare_KeyUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Key.cs,ThenByUsesKeyComparer,The length of the statement  "            list.Sort(ComparerBuilder.For<Person>().OrderBy(p => p.LastName).ThenBy(p => p.FirstName' StringComparer.InvariantCulture.Reverse())); " is 134.
Long Statement,UnitTests,Compare_KeyUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Key.cs,ThenByUsesNestedKeyComparer,The length of the statement  "            list.Sort(ComparerBuilder.For<Person>().OrderBy(p => p.LastName).ThenBy(p => p.FirstName' c => c.OrderBy(x => x' StringComparer.InvariantCulture.Reverse()))); " is 158.
Long Statement,UnitTests,Compare_KeyUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Key.cs,ThenByDescendingUsesKeyComparer,The length of the statement  "            list.Sort(ComparerBuilder.For<Person>().OrderBy(p => p.LastName).ThenBy(p => p.FirstName' StringComparer.InvariantCulture.Reverse()' descending: true)); " is 152.
Long Statement,UnitTests,Compare_KeyUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Key.cs,ThenByDescendingUsesNestedKeyComparer,The length of the statement  "            list.Sort(ComparerBuilder.For<Person>().OrderBy(p => p.LastName).ThenBy(p => p.FirstName' c => c.OrderBy(x => x' StringComparer.InvariantCulture.Reverse())' descending: true)); " is 176.
Long Statement,UnitTests,Compare_KeyUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Key.cs,OrderByWithNullThenByComparesNullsAsEqual,The length of the statement  "            var comparer = ComparerBuilder.For<Person>().OrderBy(p => p == null' specialNullHandling: true).ThenBy(p => p.FirstName).ThenBy(p => " is 132.
Long Statement,UnitTests,Compare_KeyUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Key.cs,ToString_DumpsComparer,The length of the statement  "            Assert.Equal("Select<String>(Default(String: IComparable<T>))"' ComparerBuilder.For<Person>().OrderBy(p => p.LastName).ToString()); " is 131.
Long Statement,UnitTests,Compare_ReverseUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Reverse.cs,PassesGetHashCodeThrough,The length of the statement  "            Assert.Equal(bclComparer.GetHashCode(7) == bclComparer.GetHashCode(13)' comparer.GetHashCode(7) == comparer.GetHashCode(13)); " is 125.
Long Statement,UnitTests,Compare_SequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Sequence.cs,EqualSequencesAreEqualIfElementsAreEqual,The length of the statement  "            Assert.Equal(ComparerBuilder.For<int>().Default().Sequence().GetHashCode(new[] { 3' 4 })' ComparerBuilder.For<int>().Default().Sequence().GetHashCode(new[] { 3' 4 })); " is 167.
Long Statement,UnitTests,Compare_SequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Sequence.cs,SequenceUsesSourceComparerForElementComparisons,The length of the statement  "            Assert.True(ComparerBuilder.For<int>().Default().Reverse().Sequence().Compare(new[] { 3' 4' 5 }' new[] { 3' 3' 5 }) < 0); " is 121.
Long Statement,UnitTests,Compare_SequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Sequence.cs,ToString_DumpsComparer,The length of the statement  "            Assert.Equal("Sequence<Int32>(Default(Int32: IComparable<T>))"' ComparerBuilder.For<int>().Default().Sequence().ToString()); " is 124.
Long Statement,UnitTests,Compare_ThenByUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_ThenBy.cs,ToString_DumpsComparer,The length of the statement  "            Assert.Equal("Compound(Default(Select<String>(Default(String: IComparable<T>)))' Select<String>(Default(String: IComparable<T>)))"' ComparerBuilder.For<Person>().Default().ThenBy(p => p.LastName).ToString()); " is 208.
Long Statement,UnitTests,EqualityCompare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_Default.cs,IsEquivalentToEqualityComparerDefault,The length of the statement  "            Assert.Equal(netDefaultComparer.GetHashCode(7) == netDefaultComparer.GetHashCode(13)' defaultComparer.GetHashCode(7) == defaultComparer.GetHashCode(13)); " is 153.
Long Statement,UnitTests,EqualityCompare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_Default.cs,IsEquivalentToEqualityComparerDefault,The length of the statement  "            Assert.Equal(defaultComparer.GetHashCode(7) == defaultComparer.GetHashCode(13)' defaultObjectComparer.GetHashCode(7) == defaultObjectComparer.GetHashCode(13)); " is 159.
Long Statement,UnitTests,EqualityCompare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_Default.cs,DefaultForString_IsDefaultComparer,The length of the statement  "            Assert.NotEqual(EqualityComparerBuilder.For<char>().Default().EquateSequence().ToString()' EqualityComparerBuilder.For<string>().Default().ToString()); " is 151.
Long Statement,UnitTests,EqualityCompare_EquateSequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_EquateSequence.cs,SequencesAreEqualIfElementsAreEqual,The length of the statement  "            Assert.True(EqualityComparerBuilder.For<int>().Default().EquateSequence().Equals(new[] { 3' 4' 5 }' new[] { 3' 4' 5 })); " is 120.
Long Statement,UnitTests,EqualityCompare_EquateSequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_EquateSequence.cs,SequencesAreEqualIfElementsAreEqual,The length of the statement  "            Assert.Equal(EqualityComparerBuilder.For<int>().Default().EquateSequence().GetHashCode(new[] { 3' 4 })' EqualityComparerBuilder.For<int>().Default().EquateSequence().GetHashCode(new[] { 3' 4 })); " is 195.
Long Statement,UnitTests,EqualityCompare_EquateSequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_EquateSequence.cs,EnumerablesAreEqualIfElementsAreEqual,The length of the statement  "            Assert.Equal(EqualityComparerBuilder.For<int>().Default().EquateSequence().GetHashCode(E_3_4())' EqualityComparerBuilder.For<int>().Default().EquateSequence().GetHashCode(E_3_4())); " is 181.
Long Statement,UnitTests,EqualityCompare_EquateSequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_EquateSequence.cs,EqualLengthSequencesWithUnequalElementsAreNotEqual,The length of the statement  "            Assert.False(EqualityComparerBuilder.For<int>().Default().EquateSequence().Equals(new[] { 3' 4' 5 }' new[] { 3' 3' 5 })); " is 121.
Long Statement,UnitTests,EqualityCompare_EquateSequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_EquateSequence.cs,ToString_DumpsComparer,The length of the statement  "            Assert.Equal("Sequence<Int32>(Default(Int32: IComparable<T>))"' EqualityComparerBuilder.For<int>().Default().EquateSequence().ToString()); " is 138.
Long Statement,UnitTests,EqualityCompare_KeyUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_Key.cs,OrderByUsesInlineKeyComparer,The length of the statement  "            var comparer = EqualityComparerBuilder.For<Person>().EquateBy(p => p.LastName' c => c.EquateBy(x => x' StringComparer.InvariantCultureIgnoreCase)); " is 147.
Long Statement,UnitTests,EqualityCompare_KeyUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_Key.cs,ThenByUsesKeyComparer,The length of the statement  "            var comparer = EqualityComparerBuilder.For<Person>().EquateBy(p => p.LastName).ThenEquateBy(p => p.FirstName' StringComparer.InvariantCultureIgnoreCase); " is 153.
Long Statement,UnitTests,EqualityCompare_KeyUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_Key.cs,OrderByWithNullThenByHandlesNull,The length of the statement  "            var comparer = EqualityComparerBuilder.For<Person>().EquateBy(p => p == null' specialNullHandling: true).ThenEquateBy(p => p.LastName).ThenEquateBy(p => " is 152.
Long Statement,UnitTests,EqualityCompare_KeyUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_Key.cs,ToString_DumpsComparer,The length of the statement  "            Assert.Equal("Select<String>(Default(String: IComparable<T>))"' EqualityComparerBuilder.For<Person>().EquateBy(p => p.LastName).ToString()); " is 140.
Long Statement,UnitTests,EqualityCompare_ThenEquateByUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_ThenEquateBy.cs,SubstitutesCompareDefaultForComparerDefault,The length of the statement  "            Assert.Equal(EqualityComparerBuilder.For<Person>().Default().ThenEquateBy(thenByComparer).ToString()' comparer.ToString()); " is 123.
Long Statement,UnitTests,EqualityCompare_ThenEquateByUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_ThenEquateBy.cs,SubstitutesCompareDefaultForNull,The length of the statement  "            Assert.Equal(EqualityComparerBuilder.For<Person>().Default().ThenEquateBy(thenByComparer).ToString()' comparer.ToString()); " is 123.
Long Statement,UnitTests,EqualityCompare_ThenEquateByUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_ThenEquateBy.cs,ToString_DumpsComparer,The length of the statement  "            Assert.Equal("Compound(Default(Person: undefined)' Select<String>(Default(String: IComparable<T>)))"' EqualityComparerBuilder.For<Person>().Default().ThenEquateBy(p => p.LastName).ToString()); " is 192.
Long Statement,UnitTests,FixEqualityComparersUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\FixEqualityComparers.cs,Equals_StandardizeNull_HandlesNull,The length of the statement  "            var dangerousComparer = EqualityComparerBuilder.For<object>().EquateBy(x => x.GetHashCode()' specialNullHandling: true); " is 120.
Long Statement,UnitTests,FixEqualityComparersUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\FixEqualityComparers.cs,ToString_DumpsComparer,The length of the statement  "            Assert.StartsWith("StandardNullHandling"' EqualityComparerBuilder.For<int?>().Null().WithStandardNullHandlingForEquality().ToString()); " is 135.
Long Statement,UnitTests,WeirdFrameworkEdgeConditions,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\WeirdFrameworkEdgeConditions.cs,DefaultEqualityComparer_ForValueType_IEqualityComparer_UnexpectedTypes,The length of the statement  "            //   https://github.com/dotnet/corefx/blob/53a33cf2662ac8c9a45d13067012d80cf0ba6956/src/Common/src/CoreLib/System/Collections/Generic/EqualityComparer.cs#L29 " is 157.
Long Statement,UnitTests,WeirdFrameworkEdgeConditions,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\WeirdFrameworkEdgeConditions.cs,StringComparer_Null,The length of the statement  "            //   https://github.com/dotnet/corefx/blob/36e812b0e974fa113c50be71e1701735a8a63481/src/Common/src/CoreLib/System/StringComparer.cs#L150-L153 " is 141.
Long Statement,UnitTests.Examples,AllMembers,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Examples\AllMembers.cs,AllMembersEqualityComparer,The length of the statement  "                    dynamic childComparer = ((MethodInfo)MethodBase.GetCurrentMethod()).MakeGenericMethod(prop.PropertyType).Invoke(null' null); " is 124.
Magic Number,UnitTests,Compare_BuilderUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Builder.cs,ForFuncT_ReturnsBuilderForT_WithoutInvokingFunc,The following statement contains a magic number: var result = ComparerBuilder.For(() =>              {                  throw new Exception();                  return 3;              });
Magic Number,UnitTests,Compare_BuilderUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Builder.cs,ThrowEnumerable,The following statement contains a magic number: yield return 13;
Magic Number,UnitTests,Compare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Default.cs,IsEquivalentToComparerDefault,The following statement contains a magic number: var list1 = new[] { 3' 5' 4' 2' 6 }.ToList();
Magic Number,UnitTests,Compare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Default.cs,IsEquivalentToComparerDefault,The following statement contains a magic number: var list1 = new[] { 3' 5' 4' 2' 6 }.ToList();
Magic Number,UnitTests,Compare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Default.cs,IsEquivalentToComparerDefault,The following statement contains a magic number: var list1 = new[] { 3' 5' 4' 2' 6 }.ToList();
Magic Number,UnitTests,Compare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Default.cs,IsEquivalentToComparerDefault,The following statement contains a magic number: var list1 = new[] { 3' 5' 4' 2' 6 }.ToList();
Magic Number,UnitTests,Compare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Default.cs,IsEquivalentToComparerDefault,The following statement contains a magic number: var list1 = new[] { 3' 5' 4' 2' 6 }.ToList();
Magic Number,UnitTests,Compare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Default.cs,IsEquivalentToComparerDefault,The following statement contains a magic number: var list2 = new[] { 3' 5' 4' 2' 6 }.ToList();
Magic Number,UnitTests,Compare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Default.cs,IsEquivalentToComparerDefault,The following statement contains a magic number: var list2 = new[] { 3' 5' 4' 2' 6 }.ToList();
Magic Number,UnitTests,Compare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Default.cs,IsEquivalentToComparerDefault,The following statement contains a magic number: var list2 = new[] { 3' 5' 4' 2' 6 }.ToList();
Magic Number,UnitTests,Compare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Default.cs,IsEquivalentToComparerDefault,The following statement contains a magic number: var list2 = new[] { 3' 5' 4' 2' 6 }.ToList();
Magic Number,UnitTests,Compare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Default.cs,IsEquivalentToComparerDefault,The following statement contains a magic number: var list2 = new[] { 3' 5' 4' 2' 6 }.ToList();
Magic Number,UnitTests,Compare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Default.cs,UsesSequenceComparerForSequences,The following statement contains a magic number: var three = new[] { 3 };
Magic Number,UnitTests,Compare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Default.cs,UsesSequenceComparerForSequences,The following statement contains a magic number: var four = new[] { 4 };
Magic Number,UnitTests,Compare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Default.cs,UsesSequenceComparerForSequences,The following statement contains a magic number: var five = new[] { 5 };
Magic Number,UnitTests,Compare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Default.cs,NullIsLessThanValue,The following statement contains a magic number: var list = new int?[] { 3' null' 4' 2' 6 }.ToList();
Magic Number,UnitTests,Compare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Default.cs,NullIsLessThanValue,The following statement contains a magic number: var list = new int?[] { 3' null' 4' 2' 6 }.ToList();
Magic Number,UnitTests,Compare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Default.cs,NullIsLessThanValue,The following statement contains a magic number: var list = new int?[] { 3' null' 4' 2' 6 }.ToList();
Magic Number,UnitTests,Compare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Default.cs,NullIsLessThanValue,The following statement contains a magic number: var list = new int?[] { 3' null' 4' 2' 6 }.ToList();
Magic Number,UnitTests,Compare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Default.cs,NullIsLessThanValue,The following statement contains a magic number: Assert.Equal(list' new int?[] { null' 2' 3' 4' 6 });
Magic Number,UnitTests,Compare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Default.cs,NullIsLessThanValue,The following statement contains a magic number: Assert.Equal(list' new int?[] { null' 2' 3' 4' 6 });
Magic Number,UnitTests,Compare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Default.cs,NullIsLessThanValue,The following statement contains a magic number: Assert.Equal(list' new int?[] { null' 2' 3' 4' 6 });
Magic Number,UnitTests,Compare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Default.cs,NullIsLessThanValue,The following statement contains a magic number: Assert.Equal(list' new int?[] { null' 2' 3' 4' 6 });
Magic Number,UnitTests,Compare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Default.cs,NullSequenceIsLessThanValuesAndEmptySequence,The following statement contains a magic number: var five = new[] { 5 };
Magic Number,UnitTests,Compare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Default.cs,ImplementsGetHashCode,The following statement contains a magic number: Assert.Equal(comparer.GetHashCode(13)' comparer.GetHashCode(13));
Magic Number,UnitTests,Compare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Default.cs,ImplementsGetHashCode,The following statement contains a magic number: Assert.Equal(comparer.GetHashCode(13)' comparer.GetHashCode(13));
Magic Number,UnitTests,Compare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Default.cs,ImplementsGetHashCode,The following statement contains a magic number: Assert.Equal(bclDefault.GetHashCode(7) == bclDefault.GetHashCode(13)' comparer.GetHashCode(7) == comparer.GetHashCode(13));
Magic Number,UnitTests,Compare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Default.cs,ImplementsGetHashCode,The following statement contains a magic number: Assert.Equal(bclDefault.GetHashCode(7) == bclDefault.GetHashCode(13)' comparer.GetHashCode(7) == comparer.GetHashCode(13));
Magic Number,UnitTests,Compare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Default.cs,ImplementsGetHashCode,The following statement contains a magic number: Assert.Equal(bclDefault.GetHashCode(7) == bclDefault.GetHashCode(13)' comparer.GetHashCode(7) == comparer.GetHashCode(13));
Magic Number,UnitTests,Compare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Default.cs,ImplementsGetHashCode,The following statement contains a magic number: Assert.Equal(bclDefault.GetHashCode(7) == bclDefault.GetHashCode(13)' comparer.GetHashCode(7) == comparer.GetHashCode(13));
Magic Number,UnitTests,Compare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Default.cs,ImplementsGetHashCode_NonGeneric,The following statement contains a magic number: Assert.Equal(comparer.GetHashCode(13)' comparer.GetHashCode(13));
Magic Number,UnitTests,Compare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Default.cs,ImplementsGetHashCode_NonGeneric,The following statement contains a magic number: Assert.Equal(comparer.GetHashCode(13)' comparer.GetHashCode(13));
Magic Number,UnitTests,Compare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Default.cs,ImplementsGetHashCode_NonGeneric,The following statement contains a magic number: Assert.Equal(bclDefault.GetHashCode(7) == bclDefault.GetHashCode(13)' comparer.GetHashCode(7) == comparer.GetHashCode(13));
Magic Number,UnitTests,Compare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Default.cs,ImplementsGetHashCode_NonGeneric,The following statement contains a magic number: Assert.Equal(bclDefault.GetHashCode(7) == bclDefault.GetHashCode(13)' comparer.GetHashCode(7) == comparer.GetHashCode(13));
Magic Number,UnitTests,Compare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Default.cs,ImplementsGetHashCode_NonGeneric,The following statement contains a magic number: Assert.Equal(bclDefault.GetHashCode(7) == bclDefault.GetHashCode(13)' comparer.GetHashCode(7) == comparer.GetHashCode(13));
Magic Number,UnitTests,Compare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Default.cs,ImplementsGetHashCode_NonGeneric,The following statement contains a magic number: Assert.Equal(bclDefault.GetHashCode(7) == bclDefault.GetHashCode(13)' comparer.GetHashCode(7) == comparer.GetHashCode(13));
Magic Number,UnitTests,Compare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Default.cs,UsesSequenceComparerForEnumerables,The following statement contains a magic number: var three = new[] { 3 };
Magic Number,UnitTests,Compare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Default.cs,UsesSequenceComparerForEnumerables,The following statement contains a magic number: var four = new[] { 4 };
Magic Number,UnitTests,Compare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Default.cs,UsesSequenceComparerForEnumerables,The following statement contains a magic number: var five = new[] { 5 };
Magic Number,UnitTests,Compare_NullUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Null.cs,ComparesUnequalElementsAsEqual,The following statement contains a magic number: Assert.Equal(0' comparer.Compare(13' 17));
Magic Number,UnitTests,Compare_NullUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Null.cs,ComparesUnequalElementsAsEqual,The following statement contains a magic number: Assert.Equal(0' comparer.Compare(13' 17));
Magic Number,UnitTests,Compare_NullUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Null.cs,ComparesUnequalElementsAsEqual,The following statement contains a magic number: Assert.True(comparer.Equals(19' 21));
Magic Number,UnitTests,Compare_NullUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Null.cs,ComparesUnequalElementsAsEqual,The following statement contains a magic number: Assert.True(comparer.Equals(19' 21));
Magic Number,UnitTests,Compare_NullUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Null.cs,ComparesUnequalElementsAsEqual,The following statement contains a magic number: Assert.Equal(comparer.GetHashCode(13)' comparer.GetHashCode(17));
Magic Number,UnitTests,Compare_NullUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Null.cs,ComparesUnequalElementsAsEqual,The following statement contains a magic number: Assert.Equal(comparer.GetHashCode(13)' comparer.GetHashCode(17));
Magic Number,UnitTests,Compare_NullUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Null.cs,ComparesNullElementsAsEqualToValueElements,The following statement contains a magic number: Assert.Equal(0' comparer.Compare(null' 17));
Magic Number,UnitTests,Compare_NullUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Null.cs,ComparesNullElementsAsEqualToValueElements,The following statement contains a magic number: Assert.Equal(0' comparer.Compare(13' null));
Magic Number,UnitTests,Compare_NullUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Null.cs,ComparesNullElementsAsEqualToValueElements,The following statement contains a magic number: Assert.True(comparer.Equals(null' 21));
Magic Number,UnitTests,Compare_NullUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Null.cs,ComparesNullElementsAsEqualToValueElements,The following statement contains a magic number: Assert.True(comparer.Equals(19' null));
Magic Number,UnitTests,Compare_NullUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Null.cs,ComparesNullElementsAsEqualToValueElements,The following statement contains a magic number: Assert.Equal(comparer.GetHashCode(13)' comparer.GetHashCode((object)null));
Magic Number,UnitTests,Compare_NullUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Null.cs,ComparesNullElementsAsEqualToValueElements,The following statement contains a magic number: Assert.Equal(comparer.GetHashCode(13)' comparer.GetHashCode((int?)null));
Magic Number,UnitTests,Compare_NullUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Null.cs,ComparesEqualElementsAsEqual,The following statement contains a magic number: Assert.Equal(0' comparer.Compare(13' 13));
Magic Number,UnitTests,Compare_NullUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Null.cs,ComparesEqualElementsAsEqual,The following statement contains a magic number: Assert.Equal(0' comparer.Compare(13' 13));
Magic Number,UnitTests,Compare_NullUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Null.cs,ComparesEqualElementsAsEqual,The following statement contains a magic number: Assert.True(comparer.Equals(13' 13));
Magic Number,UnitTests,Compare_NullUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Null.cs,ComparesEqualElementsAsEqual,The following statement contains a magic number: Assert.True(comparer.Equals(13' 13));
Magic Number,UnitTests,Compare_NullUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Null.cs,ComparesEqualElementsAsEqual,The following statement contains a magic number: Assert.Equal(comparer.GetHashCode(13)' comparer.GetHashCode(13));
Magic Number,UnitTests,Compare_NullUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Null.cs,ComparesEqualElementsAsEqual,The following statement contains a magic number: Assert.Equal(comparer.GetHashCode(13)' comparer.GetHashCode(13));
Magic Number,UnitTests,Compare_ReverseUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Reverse.cs,SubstitutesCompareDefaultForComparerDefault,The following statement contains a magic number: var list = Enumerable.Range(0' 5).ToList();
Magic Number,UnitTests,Compare_ReverseUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Reverse.cs,SubstitutesCompareDefaultForComparerDefault,The following statement contains a magic number: Assert.Equal(new[] { 4' 3' 2' 1' 0 }' list);
Magic Number,UnitTests,Compare_ReverseUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Reverse.cs,SubstitutesCompareDefaultForComparerDefault,The following statement contains a magic number: Assert.Equal(new[] { 4' 3' 2' 1' 0 }' list);
Magic Number,UnitTests,Compare_ReverseUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Reverse.cs,SubstitutesCompareDefaultForComparerDefault,The following statement contains a magic number: Assert.Equal(new[] { 4' 3' 2' 1' 0 }' list);
Magic Number,UnitTests,Compare_ReverseUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Reverse.cs,SubstitutesCompareDefaultForNull,The following statement contains a magic number: var list = Enumerable.Range(0' 5).ToList();
Magic Number,UnitTests,Compare_ReverseUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Reverse.cs,SubstitutesCompareDefaultForNull,The following statement contains a magic number: Assert.Equal(new[] { 4' 3' 2' 1' 0 }' list);
Magic Number,UnitTests,Compare_ReverseUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Reverse.cs,SubstitutesCompareDefaultForNull,The following statement contains a magic number: Assert.Equal(new[] { 4' 3' 2' 1' 0 }' list);
Magic Number,UnitTests,Compare_ReverseUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Reverse.cs,SubstitutesCompareDefaultForNull,The following statement contains a magic number: Assert.Equal(new[] { 4' 3' 2' 1' 0 }' list);
Magic Number,UnitTests,Compare_ReverseUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Reverse.cs,ReversesComparer,The following statement contains a magic number: var list = Enumerable.Range(0' 5).ToList();
Magic Number,UnitTests,Compare_ReverseUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Reverse.cs,ReversesComparer,The following statement contains a magic number: Assert.Equal(new[] { 4' 3' 2' 1' 0 }' list);
Magic Number,UnitTests,Compare_ReverseUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Reverse.cs,ReversesComparer,The following statement contains a magic number: Assert.Equal(new[] { 4' 3' 2' 1' 0 }' list);
Magic Number,UnitTests,Compare_ReverseUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Reverse.cs,ReversesComparer,The following statement contains a magic number: Assert.Equal(new[] { 4' 3' 2' 1' 0 }' list);
Magic Number,UnitTests,Compare_ReverseUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Reverse.cs,ReversesComparerWithNull,The following statement contains a magic number: var list = Enumerable.Repeat<int?>(null' 1).Concat(Enumerable.Range(0' 5).Cast<int?>()).ToList();
Magic Number,UnitTests,Compare_ReverseUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Reverse.cs,ReversesComparerWithNull,The following statement contains a magic number: Assert.Equal(new int?[] { 4' 3' 2' 1' 0' null }' list);
Magic Number,UnitTests,Compare_ReverseUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Reverse.cs,ReversesComparerWithNull,The following statement contains a magic number: Assert.Equal(new int?[] { 4' 3' 2' 1' 0' null }' list);
Magic Number,UnitTests,Compare_ReverseUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Reverse.cs,ReversesComparerWithNull,The following statement contains a magic number: Assert.Equal(new int?[] { 4' 3' 2' 1' 0' null }' list);
Magic Number,UnitTests,Compare_ReverseUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Reverse.cs,PassesGetHashCodeThrough,The following statement contains a magic number: Assert.Equal(bclComparer.GetHashCode(7) == bclComparer.GetHashCode(13)' comparer.GetHashCode(7) == comparer.GetHashCode(13));
Magic Number,UnitTests,Compare_ReverseUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Reverse.cs,PassesGetHashCodeThrough,The following statement contains a magic number: Assert.Equal(bclComparer.GetHashCode(7) == bclComparer.GetHashCode(13)' comparer.GetHashCode(7) == comparer.GetHashCode(13));
Magic Number,UnitTests,Compare_ReverseUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Reverse.cs,PassesGetHashCodeThrough,The following statement contains a magic number: Assert.Equal(bclComparer.GetHashCode(7) == bclComparer.GetHashCode(13)' comparer.GetHashCode(7) == comparer.GetHashCode(13));
Magic Number,UnitTests,Compare_ReverseUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Reverse.cs,PassesGetHashCodeThrough,The following statement contains a magic number: Assert.Equal(bclComparer.GetHashCode(7) == bclComparer.GetHashCode(13)' comparer.GetHashCode(7) == comparer.GetHashCode(13));
Magic Number,UnitTests,Compare_ReverseUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Reverse.cs,PassesGetHashCodeThrough_NonGeneric,The following statement contains a magic number: Assert.Equal(17' comparer.GetHashCode(13));
Magic Number,UnitTests,Compare_ReverseUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Reverse.cs,PassesGetHashCodeThrough_NonGeneric,The following statement contains a magic number: Assert.Equal(17' comparer.GetHashCode(13));
Magic Number,UnitTests,NongenericEqualityComparer,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Reverse.cs,GetHashCode,The following statement contains a magic number: return 17;
Magic Number,UnitTests,Compare_SequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Sequence.cs,ShorterSequenceIsSmallerIfElementsAreEqual,The following statement contains a magic number: Assert.True(ComparerBuilder.For<int>().Default().Sequence().Compare(new[] { 3' 4 }' new[] { 3' 4' 5 }) < 0);
Magic Number,UnitTests,Compare_SequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Sequence.cs,ShorterSequenceIsSmallerIfElementsAreEqual,The following statement contains a magic number: Assert.True(ComparerBuilder.For<int>().Default().Sequence().Compare(new[] { 3' 4 }' new[] { 3' 4' 5 }) < 0);
Magic Number,UnitTests,Compare_SequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Sequence.cs,ShorterSequenceIsSmallerIfElementsAreEqual,The following statement contains a magic number: Assert.True(ComparerBuilder.For<int>().Default().Sequence().Compare(new[] { 3' 4 }' new[] { 3' 4' 5 }) < 0);
Magic Number,UnitTests,Compare_SequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Sequence.cs,ShorterSequenceIsSmallerIfElementsAreEqual,The following statement contains a magic number: Assert.True(ComparerBuilder.For<int>().Default().Sequence().Compare(new[] { 3' 4 }' new[] { 3' 4' 5 }) < 0);
Magic Number,UnitTests,Compare_SequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Sequence.cs,ShorterSequenceIsSmallerIfElementsAreEqual,The following statement contains a magic number: Assert.True(ComparerBuilder.For<int>().Default().Sequence().Compare(new[] { 3' 4 }' new[] { 3' 4' 5 }) < 0);
Magic Number,UnitTests,Compare_SequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Sequence.cs,ShorterSequenceIsSmallerIfElementsAreEqual,The following statement contains a magic number: Assert.True(ComparerBuilder.For<int>().Default().Sequence().Compare(new[] { 3' 4' 5 }' new[] { 3' 4 }) > 0);
Magic Number,UnitTests,Compare_SequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Sequence.cs,ShorterSequenceIsSmallerIfElementsAreEqual,The following statement contains a magic number: Assert.True(ComparerBuilder.For<int>().Default().Sequence().Compare(new[] { 3' 4' 5 }' new[] { 3' 4 }) > 0);
Magic Number,UnitTests,Compare_SequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Sequence.cs,ShorterSequenceIsSmallerIfElementsAreEqual,The following statement contains a magic number: Assert.True(ComparerBuilder.For<int>().Default().Sequence().Compare(new[] { 3' 4' 5 }' new[] { 3' 4 }) > 0);
Magic Number,UnitTests,Compare_SequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Sequence.cs,ShorterSequenceIsSmallerIfElementsAreEqual,The following statement contains a magic number: Assert.True(ComparerBuilder.For<int>().Default().Sequence().Compare(new[] { 3' 4' 5 }' new[] { 3' 4 }) > 0);
Magic Number,UnitTests,Compare_SequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Sequence.cs,ShorterSequenceIsSmallerIfElementsAreEqual,The following statement contains a magic number: Assert.True(ComparerBuilder.For<int>().Default().Sequence().Compare(new[] { 3' 4' 5 }' new[] { 3' 4 }) > 0);
Magic Number,UnitTests,Compare_SequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Sequence.cs,EqualSequencesAreEqualIfElementsAreEqual,The following statement contains a magic number: Assert.True(ComparerBuilder.For<int>().Default().Sequence().Compare(new[] { 3' 4 }' new[] { 3' 4 }) == 0);
Magic Number,UnitTests,Compare_SequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Sequence.cs,EqualSequencesAreEqualIfElementsAreEqual,The following statement contains a magic number: Assert.True(ComparerBuilder.For<int>().Default().Sequence().Compare(new[] { 3' 4 }' new[] { 3' 4 }) == 0);
Magic Number,UnitTests,Compare_SequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Sequence.cs,EqualSequencesAreEqualIfElementsAreEqual,The following statement contains a magic number: Assert.True(ComparerBuilder.For<int>().Default().Sequence().Compare(new[] { 3' 4 }' new[] { 3' 4 }) == 0);
Magic Number,UnitTests,Compare_SequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Sequence.cs,EqualSequencesAreEqualIfElementsAreEqual,The following statement contains a magic number: Assert.True(ComparerBuilder.For<int>().Default().Sequence().Compare(new[] { 3' 4 }' new[] { 3' 4 }) == 0);
Magic Number,UnitTests,Compare_SequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Sequence.cs,EqualSequencesAreEqualIfElementsAreEqual,The following statement contains a magic number: Assert.True(ComparerBuilder.For<int>().Default().Sequence().Compare(new[] { 3' 4' 5 }' new[] { 3' 4' 5 }) == 0);
Magic Number,UnitTests,Compare_SequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Sequence.cs,EqualSequencesAreEqualIfElementsAreEqual,The following statement contains a magic number: Assert.True(ComparerBuilder.For<int>().Default().Sequence().Compare(new[] { 3' 4' 5 }' new[] { 3' 4' 5 }) == 0);
Magic Number,UnitTests,Compare_SequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Sequence.cs,EqualSequencesAreEqualIfElementsAreEqual,The following statement contains a magic number: Assert.True(ComparerBuilder.For<int>().Default().Sequence().Compare(new[] { 3' 4' 5 }' new[] { 3' 4' 5 }) == 0);
Magic Number,UnitTests,Compare_SequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Sequence.cs,EqualSequencesAreEqualIfElementsAreEqual,The following statement contains a magic number: Assert.True(ComparerBuilder.For<int>().Default().Sequence().Compare(new[] { 3' 4' 5 }' new[] { 3' 4' 5 }) == 0);
Magic Number,UnitTests,Compare_SequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Sequence.cs,EqualSequencesAreEqualIfElementsAreEqual,The following statement contains a magic number: Assert.True(ComparerBuilder.For<int>().Default().Sequence().Compare(new[] { 3' 4' 5 }' new[] { 3' 4' 5 }) == 0);
Magic Number,UnitTests,Compare_SequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Sequence.cs,EqualSequencesAreEqualIfElementsAreEqual,The following statement contains a magic number: Assert.True(ComparerBuilder.For<int>().Default().Sequence().Compare(new[] { 3' 4' 5 }' new[] { 3' 4' 5 }) == 0);
Magic Number,UnitTests,Compare_SequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Sequence.cs,EqualSequencesAreEqualIfElementsAreEqual,The following statement contains a magic number: Assert.Equal(ComparerBuilder.For<int>().Default().Sequence().GetHashCode(new[] { 3' 4 })' ComparerBuilder.For<int>().Default().Sequence().GetHashCode(new[] { 3' 4 }));
Magic Number,UnitTests,Compare_SequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Sequence.cs,EqualSequencesAreEqualIfElementsAreEqual,The following statement contains a magic number: Assert.Equal(ComparerBuilder.For<int>().Default().Sequence().GetHashCode(new[] { 3' 4 })' ComparerBuilder.For<int>().Default().Sequence().GetHashCode(new[] { 3' 4 }));
Magic Number,UnitTests,Compare_SequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Sequence.cs,EqualSequencesAreEqualIfElementsAreEqual,The following statement contains a magic number: Assert.Equal(ComparerBuilder.For<int>().Default().Sequence().GetHashCode(new[] { 3' 4 })' ComparerBuilder.For<int>().Default().Sequence().GetHashCode(new[] { 3' 4 }));
Magic Number,UnitTests,Compare_SequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Sequence.cs,EqualSequencesAreEqualIfElementsAreEqual,The following statement contains a magic number: Assert.Equal(ComparerBuilder.For<int>().Default().Sequence().GetHashCode(new[] { 3' 4 })' ComparerBuilder.For<int>().Default().Sequence().GetHashCode(new[] { 3' 4 }));
Magic Number,UnitTests,Compare_SequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Sequence.cs,SequenceOrderDeterminedByElementsIfElementsAreNotEqual,The following statement contains a magic number: Assert.True(ComparerBuilder.For<int>().Default().Sequence().Compare(new[] { 3' 4 }' new[] { 3' 5 }) < 0);
Magic Number,UnitTests,Compare_SequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Sequence.cs,SequenceOrderDeterminedByElementsIfElementsAreNotEqual,The following statement contains a magic number: Assert.True(ComparerBuilder.For<int>().Default().Sequence().Compare(new[] { 3' 4 }' new[] { 3' 5 }) < 0);
Magic Number,UnitTests,Compare_SequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Sequence.cs,SequenceOrderDeterminedByElementsIfElementsAreNotEqual,The following statement contains a magic number: Assert.True(ComparerBuilder.For<int>().Default().Sequence().Compare(new[] { 3' 4 }' new[] { 3' 5 }) < 0);
Magic Number,UnitTests,Compare_SequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Sequence.cs,SequenceOrderDeterminedByElementsIfElementsAreNotEqual,The following statement contains a magic number: Assert.True(ComparerBuilder.For<int>().Default().Sequence().Compare(new[] { 3' 4 }' new[] { 3' 5 }) < 0);
Magic Number,UnitTests,Compare_SequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Sequence.cs,SequenceOrderDeterminedByElementsIfElementsAreNotEqual,The following statement contains a magic number: Assert.True(ComparerBuilder.For<int>().Default().Sequence().Compare(new[] { 3' 4' 5 }' new[] { 3' 3' 5 }) > 0);
Magic Number,UnitTests,Compare_SequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Sequence.cs,SequenceOrderDeterminedByElementsIfElementsAreNotEqual,The following statement contains a magic number: Assert.True(ComparerBuilder.For<int>().Default().Sequence().Compare(new[] { 3' 4' 5 }' new[] { 3' 3' 5 }) > 0);
Magic Number,UnitTests,Compare_SequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Sequence.cs,SequenceOrderDeterminedByElementsIfElementsAreNotEqual,The following statement contains a magic number: Assert.True(ComparerBuilder.For<int>().Default().Sequence().Compare(new[] { 3' 4' 5 }' new[] { 3' 3' 5 }) > 0);
Magic Number,UnitTests,Compare_SequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Sequence.cs,SequenceOrderDeterminedByElementsIfElementsAreNotEqual,The following statement contains a magic number: Assert.True(ComparerBuilder.For<int>().Default().Sequence().Compare(new[] { 3' 4' 5 }' new[] { 3' 3' 5 }) > 0);
Magic Number,UnitTests,Compare_SequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Sequence.cs,SequenceOrderDeterminedByElementsIfElementsAreNotEqual,The following statement contains a magic number: Assert.True(ComparerBuilder.For<int>().Default().Sequence().Compare(new[] { 3' 4' 5 }' new[] { 3' 3' 5 }) > 0);
Magic Number,UnitTests,Compare_SequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Sequence.cs,SequenceOrderDeterminedByElementsIfElementsAreNotEqual,The following statement contains a magic number: Assert.True(ComparerBuilder.For<int>().Default().Sequence().Compare(new[] { 3' 4' 5 }' new[] { 3' 3' 5 }) > 0);
Magic Number,UnitTests,Compare_SequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Sequence.cs,SequenceUsesSourceComparerForElementComparisons,The following statement contains a magic number: Assert.True(ComparerBuilder.For<int>().Default().Reverse().Sequence().Compare(new[] { 3' 4 }' new[] { 3' 5 }) > 0);
Magic Number,UnitTests,Compare_SequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Sequence.cs,SequenceUsesSourceComparerForElementComparisons,The following statement contains a magic number: Assert.True(ComparerBuilder.For<int>().Default().Reverse().Sequence().Compare(new[] { 3' 4 }' new[] { 3' 5 }) > 0);
Magic Number,UnitTests,Compare_SequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Sequence.cs,SequenceUsesSourceComparerForElementComparisons,The following statement contains a magic number: Assert.True(ComparerBuilder.For<int>().Default().Reverse().Sequence().Compare(new[] { 3' 4 }' new[] { 3' 5 }) > 0);
Magic Number,UnitTests,Compare_SequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Sequence.cs,SequenceUsesSourceComparerForElementComparisons,The following statement contains a magic number: Assert.True(ComparerBuilder.For<int>().Default().Reverse().Sequence().Compare(new[] { 3' 4 }' new[] { 3' 5 }) > 0);
Magic Number,UnitTests,Compare_SequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Sequence.cs,SequenceUsesSourceComparerForElementComparisons,The following statement contains a magic number: Assert.True(ComparerBuilder.For<int>().Default().Reverse().Sequence().Compare(new[] { 3' 4' 5 }' new[] { 3' 3' 5 }) < 0);
Magic Number,UnitTests,Compare_SequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Sequence.cs,SequenceUsesSourceComparerForElementComparisons,The following statement contains a magic number: Assert.True(ComparerBuilder.For<int>().Default().Reverse().Sequence().Compare(new[] { 3' 4' 5 }' new[] { 3' 3' 5 }) < 0);
Magic Number,UnitTests,Compare_SequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Sequence.cs,SequenceUsesSourceComparerForElementComparisons,The following statement contains a magic number: Assert.True(ComparerBuilder.For<int>().Default().Reverse().Sequence().Compare(new[] { 3' 4' 5 }' new[] { 3' 3' 5 }) < 0);
Magic Number,UnitTests,Compare_SequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Sequence.cs,SequenceUsesSourceComparerForElementComparisons,The following statement contains a magic number: Assert.True(ComparerBuilder.For<int>().Default().Reverse().Sequence().Compare(new[] { 3' 4' 5 }' new[] { 3' 3' 5 }) < 0);
Magic Number,UnitTests,Compare_SequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Sequence.cs,SequenceUsesSourceComparerForElementComparisons,The following statement contains a magic number: Assert.True(ComparerBuilder.For<int>().Default().Reverse().Sequence().Compare(new[] { 3' 4' 5 }' new[] { 3' 3' 5 }) < 0);
Magic Number,UnitTests,Compare_SequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Compare_Sequence.cs,SequenceUsesSourceComparerForElementComparisons,The following statement contains a magic number: Assert.True(ComparerBuilder.For<int>().Default().Reverse().Sequence().Compare(new[] { 3' 4' 5 }' new[] { 3' 3' 5 }) < 0);
Magic Number,UnitTests,EqualityCompare_BuilderUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_Builder.cs,ForFuncT_ReturnsBuilderForT_WithoutInvokingFunc,The following statement contains a magic number: var result = EqualityComparerBuilder.For(() =>              {                  throw new Exception();                  return 3;              });
Magic Number,UnitTests,EqualityCompare_BuilderUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_Builder.cs,ThrowEnumerable,The following statement contains a magic number: yield return 13;
Magic Number,UnitTests,EqualityCompare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_Default.cs,IsEquivalentToEqualityComparerDefault,The following statement contains a magic number: var a = 3;
Magic Number,UnitTests,EqualityCompare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_Default.cs,IsEquivalentToEqualityComparerDefault,The following statement contains a magic number: var b = 3;
Magic Number,UnitTests,EqualityCompare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_Default.cs,IsEquivalentToEqualityComparerDefault,The following statement contains a magic number: var c = 5;
Magic Number,UnitTests,EqualityCompare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_Default.cs,IsEquivalentToEqualityComparerDefault,The following statement contains a magic number: Assert.Equal(netDefaultComparer.GetHashCode(7) == netDefaultComparer.GetHashCode(13)' defaultComparer.GetHashCode(7) == defaultComparer.GetHashCode(13));
Magic Number,UnitTests,EqualityCompare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_Default.cs,IsEquivalentToEqualityComparerDefault,The following statement contains a magic number: Assert.Equal(netDefaultComparer.GetHashCode(7) == netDefaultComparer.GetHashCode(13)' defaultComparer.GetHashCode(7) == defaultComparer.GetHashCode(13));
Magic Number,UnitTests,EqualityCompare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_Default.cs,IsEquivalentToEqualityComparerDefault,The following statement contains a magic number: Assert.Equal(netDefaultComparer.GetHashCode(7) == netDefaultComparer.GetHashCode(13)' defaultComparer.GetHashCode(7) == defaultComparer.GetHashCode(13));
Magic Number,UnitTests,EqualityCompare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_Default.cs,IsEquivalentToEqualityComparerDefault,The following statement contains a magic number: Assert.Equal(netDefaultComparer.GetHashCode(7) == netDefaultComparer.GetHashCode(13)' defaultComparer.GetHashCode(7) == defaultComparer.GetHashCode(13));
Magic Number,UnitTests,EqualityCompare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_Default.cs,IsEquivalentToEqualityComparerDefault,The following statement contains a magic number: Assert.Equal(defaultComparer.GetHashCode(7) == defaultComparer.GetHashCode(13)' defaultObjectComparer.GetHashCode(7) == defaultObjectComparer.GetHashCode(13));
Magic Number,UnitTests,EqualityCompare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_Default.cs,IsEquivalentToEqualityComparerDefault,The following statement contains a magic number: Assert.Equal(defaultComparer.GetHashCode(7) == defaultComparer.GetHashCode(13)' defaultObjectComparer.GetHashCode(7) == defaultObjectComparer.GetHashCode(13));
Magic Number,UnitTests,EqualityCompare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_Default.cs,IsEquivalentToEqualityComparerDefault,The following statement contains a magic number: Assert.Equal(defaultComparer.GetHashCode(7) == defaultComparer.GetHashCode(13)' defaultObjectComparer.GetHashCode(7) == defaultObjectComparer.GetHashCode(13));
Magic Number,UnitTests,EqualityCompare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_Default.cs,IsEquivalentToEqualityComparerDefault,The following statement contains a magic number: Assert.Equal(defaultComparer.GetHashCode(7) == defaultComparer.GetHashCode(13)' defaultObjectComparer.GetHashCode(7) == defaultObjectComparer.GetHashCode(13));
Magic Number,UnitTests,EqualityCompare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_Default.cs,UsesSequenceEqualityComparerForSequences,The following statement contains a magic number: var threeA = new[] { 3 };
Magic Number,UnitTests,EqualityCompare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_Default.cs,UsesSequenceEqualityComparerForSequences,The following statement contains a magic number: var threeB = new[] { 3 };
Magic Number,UnitTests,EqualityCompare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_Default.cs,UsesSequenceEqualityComparerForSequences,The following statement contains a magic number: var five = new[] { 5 };
Magic Number,UnitTests,EqualityCompare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_Default.cs,NullIsNotEqualToValue,The following statement contains a magic number: Assert.False(comparer.Equals(3' null));
Magic Number,UnitTests,EqualityCompare_DefaultUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_Default.cs,NullIsNotEqualToValue,The following statement contains a magic number: Assert.False(objectComparer.Equals(3' null));
Magic Number,UnitTests,EqualityCompare_EquateSequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_EquateSequence.cs,ShorterSequenceIsNotEqualToLongerSequenceIfElementsAreEqual,The following statement contains a magic number: Assert.False(EqualityComparerBuilder.For<int>().Default().EquateSequence().Equals(new[] { 3' 4 }' new[] { 3' 4' 5 }));
Magic Number,UnitTests,EqualityCompare_EquateSequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_EquateSequence.cs,ShorterSequenceIsNotEqualToLongerSequenceIfElementsAreEqual,The following statement contains a magic number: Assert.False(EqualityComparerBuilder.For<int>().Default().EquateSequence().Equals(new[] { 3' 4 }' new[] { 3' 4' 5 }));
Magic Number,UnitTests,EqualityCompare_EquateSequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_EquateSequence.cs,ShorterSequenceIsNotEqualToLongerSequenceIfElementsAreEqual,The following statement contains a magic number: Assert.False(EqualityComparerBuilder.For<int>().Default().EquateSequence().Equals(new[] { 3' 4 }' new[] { 3' 4' 5 }));
Magic Number,UnitTests,EqualityCompare_EquateSequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_EquateSequence.cs,ShorterSequenceIsNotEqualToLongerSequenceIfElementsAreEqual,The following statement contains a magic number: Assert.False(EqualityComparerBuilder.For<int>().Default().EquateSequence().Equals(new[] { 3' 4 }' new[] { 3' 4' 5 }));
Magic Number,UnitTests,EqualityCompare_EquateSequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_EquateSequence.cs,ShorterSequenceIsNotEqualToLongerSequenceIfElementsAreEqual,The following statement contains a magic number: Assert.False(EqualityComparerBuilder.For<int>().Default().EquateSequence().Equals(new[] { 3' 4 }' new[] { 3' 4' 5 }));
Magic Number,UnitTests,EqualityCompare_EquateSequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_EquateSequence.cs,ShorterSequenceIsNotEqualToLongerSequenceIfElementsAreEqual,The following statement contains a magic number: Assert.False(EqualityComparerBuilder.For<int>().Default().EquateSequence().Equals(new[] { 3' 4' 5 }' new[] { 3' 4 }));
Magic Number,UnitTests,EqualityCompare_EquateSequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_EquateSequence.cs,ShorterSequenceIsNotEqualToLongerSequenceIfElementsAreEqual,The following statement contains a magic number: Assert.False(EqualityComparerBuilder.For<int>().Default().EquateSequence().Equals(new[] { 3' 4' 5 }' new[] { 3' 4 }));
Magic Number,UnitTests,EqualityCompare_EquateSequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_EquateSequence.cs,ShorterSequenceIsNotEqualToLongerSequenceIfElementsAreEqual,The following statement contains a magic number: Assert.False(EqualityComparerBuilder.For<int>().Default().EquateSequence().Equals(new[] { 3' 4' 5 }' new[] { 3' 4 }));
Magic Number,UnitTests,EqualityCompare_EquateSequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_EquateSequence.cs,ShorterSequenceIsNotEqualToLongerSequenceIfElementsAreEqual,The following statement contains a magic number: Assert.False(EqualityComparerBuilder.For<int>().Default().EquateSequence().Equals(new[] { 3' 4' 5 }' new[] { 3' 4 }));
Magic Number,UnitTests,EqualityCompare_EquateSequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_EquateSequence.cs,ShorterSequenceIsNotEqualToLongerSequenceIfElementsAreEqual,The following statement contains a magic number: Assert.False(EqualityComparerBuilder.For<int>().Default().EquateSequence().Equals(new[] { 3' 4' 5 }' new[] { 3' 4 }));
Magic Number,UnitTests,EqualityCompare_EquateSequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_EquateSequence.cs,SequencesAreEqualIfElementsAreEqual,The following statement contains a magic number: Assert.True(EqualityComparerBuilder.For<int>().Default().EquateSequence().Equals(new[] { 3' 4 }' new[] { 3' 4 }));
Magic Number,UnitTests,EqualityCompare_EquateSequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_EquateSequence.cs,SequencesAreEqualIfElementsAreEqual,The following statement contains a magic number: Assert.True(EqualityComparerBuilder.For<int>().Default().EquateSequence().Equals(new[] { 3' 4 }' new[] { 3' 4 }));
Magic Number,UnitTests,EqualityCompare_EquateSequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_EquateSequence.cs,SequencesAreEqualIfElementsAreEqual,The following statement contains a magic number: Assert.True(EqualityComparerBuilder.For<int>().Default().EquateSequence().Equals(new[] { 3' 4 }' new[] { 3' 4 }));
Magic Number,UnitTests,EqualityCompare_EquateSequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_EquateSequence.cs,SequencesAreEqualIfElementsAreEqual,The following statement contains a magic number: Assert.True(EqualityComparerBuilder.For<int>().Default().EquateSequence().Equals(new[] { 3' 4 }' new[] { 3' 4 }));
Magic Number,UnitTests,EqualityCompare_EquateSequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_EquateSequence.cs,SequencesAreEqualIfElementsAreEqual,The following statement contains a magic number: Assert.True(EqualityComparerBuilder.For<int>().Default().EquateSequence().Equals(new[] { 3' 4' 5 }' new[] { 3' 4' 5 }));
Magic Number,UnitTests,EqualityCompare_EquateSequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_EquateSequence.cs,SequencesAreEqualIfElementsAreEqual,The following statement contains a magic number: Assert.True(EqualityComparerBuilder.For<int>().Default().EquateSequence().Equals(new[] { 3' 4' 5 }' new[] { 3' 4' 5 }));
Magic Number,UnitTests,EqualityCompare_EquateSequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_EquateSequence.cs,SequencesAreEqualIfElementsAreEqual,The following statement contains a magic number: Assert.True(EqualityComparerBuilder.For<int>().Default().EquateSequence().Equals(new[] { 3' 4' 5 }' new[] { 3' 4' 5 }));
Magic Number,UnitTests,EqualityCompare_EquateSequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_EquateSequence.cs,SequencesAreEqualIfElementsAreEqual,The following statement contains a magic number: Assert.True(EqualityComparerBuilder.For<int>().Default().EquateSequence().Equals(new[] { 3' 4' 5 }' new[] { 3' 4' 5 }));
Magic Number,UnitTests,EqualityCompare_EquateSequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_EquateSequence.cs,SequencesAreEqualIfElementsAreEqual,The following statement contains a magic number: Assert.True(EqualityComparerBuilder.For<int>().Default().EquateSequence().Equals(new[] { 3' 4' 5 }' new[] { 3' 4' 5 }));
Magic Number,UnitTests,EqualityCompare_EquateSequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_EquateSequence.cs,SequencesAreEqualIfElementsAreEqual,The following statement contains a magic number: Assert.True(EqualityComparerBuilder.For<int>().Default().EquateSequence().Equals(new[] { 3' 4' 5 }' new[] { 3' 4' 5 }));
Magic Number,UnitTests,EqualityCompare_EquateSequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_EquateSequence.cs,SequencesAreEqualIfElementsAreEqual,The following statement contains a magic number: Assert.Equal(EqualityComparerBuilder.For<int>().Default().EquateSequence().GetHashCode(new[] { 3' 4 })' EqualityComparerBuilder.For<int>().Default().EquateSequence().GetHashCode(new[] { 3' 4 }));
Magic Number,UnitTests,EqualityCompare_EquateSequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_EquateSequence.cs,SequencesAreEqualIfElementsAreEqual,The following statement contains a magic number: Assert.Equal(EqualityComparerBuilder.For<int>().Default().EquateSequence().GetHashCode(new[] { 3' 4 })' EqualityComparerBuilder.For<int>().Default().EquateSequence().GetHashCode(new[] { 3' 4 }));
Magic Number,UnitTests,EqualityCompare_EquateSequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_EquateSequence.cs,SequencesAreEqualIfElementsAreEqual,The following statement contains a magic number: Assert.Equal(EqualityComparerBuilder.For<int>().Default().EquateSequence().GetHashCode(new[] { 3' 4 })' EqualityComparerBuilder.For<int>().Default().EquateSequence().GetHashCode(new[] { 3' 4 }));
Magic Number,UnitTests,EqualityCompare_EquateSequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_EquateSequence.cs,SequencesAreEqualIfElementsAreEqual,The following statement contains a magic number: Assert.Equal(EqualityComparerBuilder.For<int>().Default().EquateSequence().GetHashCode(new[] { 3' 4 })' EqualityComparerBuilder.For<int>().Default().EquateSequence().GetHashCode(new[] { 3' 4 }));
Magic Number,UnitTests,EqualityCompare_EquateSequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_EquateSequence.cs,EqualLengthSequencesWithUnequalElementsAreNotEqual,The following statement contains a magic number: Assert.False(EqualityComparerBuilder.For<int>().Default().EquateSequence().Equals(new[] { 3' 4 }' new[] { 3' 5 }));
Magic Number,UnitTests,EqualityCompare_EquateSequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_EquateSequence.cs,EqualLengthSequencesWithUnequalElementsAreNotEqual,The following statement contains a magic number: Assert.False(EqualityComparerBuilder.For<int>().Default().EquateSequence().Equals(new[] { 3' 4 }' new[] { 3' 5 }));
Magic Number,UnitTests,EqualityCompare_EquateSequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_EquateSequence.cs,EqualLengthSequencesWithUnequalElementsAreNotEqual,The following statement contains a magic number: Assert.False(EqualityComparerBuilder.For<int>().Default().EquateSequence().Equals(new[] { 3' 4 }' new[] { 3' 5 }));
Magic Number,UnitTests,EqualityCompare_EquateSequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_EquateSequence.cs,EqualLengthSequencesWithUnequalElementsAreNotEqual,The following statement contains a magic number: Assert.False(EqualityComparerBuilder.For<int>().Default().EquateSequence().Equals(new[] { 3' 4 }' new[] { 3' 5 }));
Magic Number,UnitTests,EqualityCompare_EquateSequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_EquateSequence.cs,EqualLengthSequencesWithUnequalElementsAreNotEqual,The following statement contains a magic number: Assert.False(EqualityComparerBuilder.For<int>().Default().EquateSequence().Equals(new[] { 3' 4' 5 }' new[] { 3' 3' 5 }));
Magic Number,UnitTests,EqualityCompare_EquateSequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_EquateSequence.cs,EqualLengthSequencesWithUnequalElementsAreNotEqual,The following statement contains a magic number: Assert.False(EqualityComparerBuilder.For<int>().Default().EquateSequence().Equals(new[] { 3' 4' 5 }' new[] { 3' 3' 5 }));
Magic Number,UnitTests,EqualityCompare_EquateSequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_EquateSequence.cs,EqualLengthSequencesWithUnequalElementsAreNotEqual,The following statement contains a magic number: Assert.False(EqualityComparerBuilder.For<int>().Default().EquateSequence().Equals(new[] { 3' 4' 5 }' new[] { 3' 3' 5 }));
Magic Number,UnitTests,EqualityCompare_EquateSequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_EquateSequence.cs,EqualLengthSequencesWithUnequalElementsAreNotEqual,The following statement contains a magic number: Assert.False(EqualityComparerBuilder.For<int>().Default().EquateSequence().Equals(new[] { 3' 4' 5 }' new[] { 3' 3' 5 }));
Magic Number,UnitTests,EqualityCompare_EquateSequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_EquateSequence.cs,EqualLengthSequencesWithUnequalElementsAreNotEqual,The following statement contains a magic number: Assert.False(EqualityComparerBuilder.For<int>().Default().EquateSequence().Equals(new[] { 3' 4' 5 }' new[] { 3' 3' 5 }));
Magic Number,UnitTests,EqualityCompare_EquateSequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_EquateSequence.cs,EqualLengthSequencesWithUnequalElementsAreNotEqual,The following statement contains a magic number: Assert.False(EqualityComparerBuilder.For<int>().Default().EquateSequence().Equals(new[] { 3' 4' 5 }' new[] { 3' 3' 5 }));
Magic Number,UnitTests,EqualityCompare_EquateSequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_EquateSequence.cs,E_3_4,The following statement contains a magic number: yield return 3;
Magic Number,UnitTests,EqualityCompare_EquateSequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_EquateSequence.cs,E_3_4,The following statement contains a magic number: yield return 4;
Magic Number,UnitTests,EqualityCompare_EquateSequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_EquateSequence.cs,E_3_4_5,The following statement contains a magic number: yield return 3;
Magic Number,UnitTests,EqualityCompare_EquateSequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_EquateSequence.cs,E_3_4_5,The following statement contains a magic number: yield return 4;
Magic Number,UnitTests,EqualityCompare_EquateSequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_EquateSequence.cs,E_3_4_5,The following statement contains a magic number: yield return 5;
Magic Number,UnitTests,EqualityCompare_EquateSequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_EquateSequence.cs,E_3_5,The following statement contains a magic number: yield return 3;
Magic Number,UnitTests,EqualityCompare_EquateSequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_EquateSequence.cs,E_3_5,The following statement contains a magic number: yield return 5;
Magic Number,UnitTests,EqualityCompare_EquateSequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_EquateSequence.cs,E_3_3_5,The following statement contains a magic number: yield return 3;
Magic Number,UnitTests,EqualityCompare_EquateSequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_EquateSequence.cs,E_3_3_5,The following statement contains a magic number: yield return 3;
Magic Number,UnitTests,EqualityCompare_EquateSequenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_EquateSequence.cs,E_3_3_5,The following statement contains a magic number: yield return 5;
Magic Number,UnitTests,EqualityCompare_NullUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_Null.cs,ComparesUnequalElementsAsEqual,The following statement contains a magic number: Assert.True(comparer.Equals(13' 17));
Magic Number,UnitTests,EqualityCompare_NullUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_Null.cs,ComparesUnequalElementsAsEqual,The following statement contains a magic number: Assert.True(comparer.Equals(13' 17));
Magic Number,UnitTests,EqualityCompare_NullUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_Null.cs,ComparesUnequalElementsAsEqual,The following statement contains a magic number: Assert.True(objectComparer.Equals(13' 17));
Magic Number,UnitTests,EqualityCompare_NullUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_Null.cs,ComparesUnequalElementsAsEqual,The following statement contains a magic number: Assert.True(objectComparer.Equals(13' 17));
Magic Number,UnitTests,EqualityCompare_NullUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_Null.cs,ComparesUnequalElementsAsEqual,The following statement contains a magic number: Assert.Equal(comparer.GetHashCode(13)' comparer.GetHashCode(17));
Magic Number,UnitTests,EqualityCompare_NullUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_Null.cs,ComparesUnequalElementsAsEqual,The following statement contains a magic number: Assert.Equal(comparer.GetHashCode(13)' comparer.GetHashCode(17));
Magic Number,UnitTests,EqualityCompare_NullUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_Null.cs,ComparesUnequalElementsAsEqual,The following statement contains a magic number: Assert.Equal(objectComparer.GetHashCode(13)' objectComparer.GetHashCode(17));
Magic Number,UnitTests,EqualityCompare_NullUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_Null.cs,ComparesUnequalElementsAsEqual,The following statement contains a magic number: Assert.Equal(objectComparer.GetHashCode(13)' objectComparer.GetHashCode(17));
Magic Number,UnitTests,EqualityCompare_NullUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_Null.cs,ComparesNullElementsAsEqualToValueElements,The following statement contains a magic number: Assert.True(comparer.Equals(null' 21));
Magic Number,UnitTests,EqualityCompare_NullUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_Null.cs,ComparesNullElementsAsEqualToValueElements,The following statement contains a magic number: Assert.True(objectComparer.Equals(null' 21));
Magic Number,UnitTests,EqualityCompare_NullUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_Null.cs,ComparesNullElementsAsEqualToValueElements,The following statement contains a magic number: Assert.True(comparer.Equals(19' null));
Magic Number,UnitTests,EqualityCompare_NullUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_Null.cs,ComparesNullElementsAsEqualToValueElements,The following statement contains a magic number: Assert.True(objectComparer.Equals(19' null));
Magic Number,UnitTests,EqualityCompare_NullUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_Null.cs,ComparesNullElementsAsEqualToValueElements,The following statement contains a magic number: Assert.Equal(comparer.GetHashCode(13)' comparer.GetHashCode(null));
Magic Number,UnitTests,EqualityCompare_NullUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_Null.cs,ComparesNullElementsAsEqualToValueElements,The following statement contains a magic number: Assert.Equal(objectComparer.GetHashCode(13)' objectComparer.GetHashCode(null));
Magic Number,UnitTests,EqualityCompare_NullUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_Null.cs,ComparesEqualElementsAsEqual,The following statement contains a magic number: Assert.True(comparer.Equals(13' 13));
Magic Number,UnitTests,EqualityCompare_NullUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_Null.cs,ComparesEqualElementsAsEqual,The following statement contains a magic number: Assert.True(comparer.Equals(13' 13));
Magic Number,UnitTests,EqualityCompare_NullUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_Null.cs,ComparesEqualElementsAsEqual,The following statement contains a magic number: Assert.True(objectComparer.Equals(13' 13));
Magic Number,UnitTests,EqualityCompare_NullUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_Null.cs,ComparesEqualElementsAsEqual,The following statement contains a magic number: Assert.True(objectComparer.Equals(13' 13));
Magic Number,UnitTests,EqualityCompare_NullUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_Null.cs,ComparesEqualElementsAsEqual,The following statement contains a magic number: Assert.Equal(comparer.GetHashCode(13)' comparer.GetHashCode(13));
Magic Number,UnitTests,EqualityCompare_NullUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_Null.cs,ComparesEqualElementsAsEqual,The following statement contains a magic number: Assert.Equal(comparer.GetHashCode(13)' comparer.GetHashCode(13));
Magic Number,UnitTests,EqualityCompare_NullUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_Null.cs,ComparesEqualElementsAsEqual,The following statement contains a magic number: Assert.Equal(objectComparer.GetHashCode(13)' objectComparer.GetHashCode(13));
Magic Number,UnitTests,EqualityCompare_NullUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_Null.cs,ComparesEqualElementsAsEqual,The following statement contains a magic number: Assert.Equal(objectComparer.GetHashCode(13)' objectComparer.GetHashCode(13));
Magic Number,UnitTests,EqualityCompare_ReferenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_Reference.cs,UsesReferenceEqualityComparerForSequences,The following statement contains a magic number: var threeA = new[] { 3 };
Magic Number,UnitTests,EqualityCompare_ReferenceUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\EqualityCompare_Reference.cs,UsesReferenceEqualityComparerForSequences,The following statement contains a magic number: var threeB = new[] { 3 };
Magic Number,UnitTests,FixComparersUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\FixComparers.cs,GetHashCode_WithGetHashCode_InvokesSpecifiedImplementation,The following statement contains a magic number: var comparer = dangerousComparer.WithGetHashCode(_ => 7).Reverse();
Magic Number,UnitTests,FixComparersUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\FixComparers.cs,GetHashCode_WithGetHashCode_InvokesSpecifiedImplementation,The following statement contains a magic number: Assert.Equal(7' comparer.GetHashCode(13));
Magic Number,UnitTests,FixComparersUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\FixComparers.cs,GetHashCode_WithGetHashCode_InvokesSpecifiedImplementation,The following statement contains a magic number: Assert.Equal(7' comparer.GetHashCode(13));
Magic Number,UnitTests,FixComparersUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\FixComparers.cs,GetHashCode_WithGetHashCode_InvokesSpecifiedImplementation,The following statement contains a magic number: Assert.Equal(dangerousComparer.Compare(7' 13)' comparer.Compare(13' 7));
Magic Number,UnitTests,FixComparersUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\FixComparers.cs,GetHashCode_WithGetHashCode_InvokesSpecifiedImplementation,The following statement contains a magic number: Assert.Equal(dangerousComparer.Compare(7' 13)' comparer.Compare(13' 7));
Magic Number,UnitTests,FixComparersUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\FixComparers.cs,GetHashCode_WithGetHashCode_InvokesSpecifiedImplementation,The following statement contains a magic number: Assert.Equal(dangerousComparer.Compare(7' 13)' comparer.Compare(13' 7));
Magic Number,UnitTests,FixComparersUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\FixComparers.cs,GetHashCode_WithGetHashCode_InvokesSpecifiedImplementation,The following statement contains a magic number: Assert.Equal(dangerousComparer.Compare(7' 13)' comparer.Compare(13' 7));
Magic Number,UnitTests,FixComparersUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\FixComparers.cs,GetHashCode_WithGetHashCodeThrow_Throws,The following statement contains a magic number: Assert.ThrowsAny<NotImplementedException>(() => comparer.GetHashCode(13));
Magic Number,UnitTests,FixComparersUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\FixComparers.cs,GetHashCode_WithGetHashCodeThrow_Throws,The following statement contains a magic number: Assert.Equal(dangerousComparer.Compare(7' 13)' comparer.Compare(13' 7));
Magic Number,UnitTests,FixComparersUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\FixComparers.cs,GetHashCode_WithGetHashCodeThrow_Throws,The following statement contains a magic number: Assert.Equal(dangerousComparer.Compare(7' 13)' comparer.Compare(13' 7));
Magic Number,UnitTests,FixComparersUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\FixComparers.cs,GetHashCode_WithGetHashCodeThrow_Throws,The following statement contains a magic number: Assert.Equal(dangerousComparer.Compare(7' 13)' comparer.Compare(13' 7));
Magic Number,UnitTests,FixComparersUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\FixComparers.cs,GetHashCode_WithGetHashCodeThrow_Throws,The following statement contains a magic number: Assert.Equal(dangerousComparer.Compare(7' 13)' comparer.Compare(13' 7));
Magic Number,UnitTests,FixComparersUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\FixComparers.cs,GetHashCode_WithGetHashCodeConstant_ReturnsZero,The following statement contains a magic number: Assert.Equal(0' comparer.GetHashCode(13));
Magic Number,UnitTests,FixComparersUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\FixComparers.cs,GetHashCode_WithGetHashCodeConstant_ReturnsZero,The following statement contains a magic number: Assert.Equal(dangerousComparer.Compare(7' 13)' comparer.Compare(13' 7));
Magic Number,UnitTests,FixComparersUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\FixComparers.cs,GetHashCode_WithGetHashCodeConstant_ReturnsZero,The following statement contains a magic number: Assert.Equal(dangerousComparer.Compare(7' 13)' comparer.Compare(13' 7));
Magic Number,UnitTests,FixComparersUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\FixComparers.cs,GetHashCode_WithGetHashCodeConstant_ReturnsZero,The following statement contains a magic number: Assert.Equal(dangerousComparer.Compare(7' 13)' comparer.Compare(13' 7));
Magic Number,UnitTests,FixComparersUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\FixComparers.cs,GetHashCode_WithGetHashCodeConstant_ReturnsZero,The following statement contains a magic number: Assert.Equal(dangerousComparer.Compare(7' 13)' comparer.Compare(13' 7));
Magic Number,UnitTests,WeirdFrameworkEdgeConditions,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\WeirdFrameworkEdgeConditions.cs,DefaultEqualityComparer_ForValueType_IEqualityComparer_UnexpectedTypes,The following statement contains a magic number: const double value = 13.0;
Magic Number,UnitTests.Examples,AllMembers,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Examples\AllMembers.cs,BasicTest,The following statement contains a magic number: var c1 = new Component              {                  Weight = 0.7'                  AccumulatedWeight = 0.2'                  NestedRef = new Nested                  {                      NestedProp = 223                  }              };
Magic Number,UnitTests.Examples,AllMembers,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Examples\AllMembers.cs,BasicTest,The following statement contains a magic number: var c1 = new Component              {                  Weight = 0.7'                  AccumulatedWeight = 0.2'                  NestedRef = new Nested                  {                      NestedProp = 223                  }              };
Magic Number,UnitTests.Examples,AllMembers,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Examples\AllMembers.cs,BasicTest,The following statement contains a magic number: var c1 = new Component              {                  Weight = 0.7'                  AccumulatedWeight = 0.2'                  NestedRef = new Nested                  {                      NestedProp = 223                  }              };
Magic Number,UnitTests.Examples,AllMembers,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Examples\AllMembers.cs,BasicTest,The following statement contains a magic number: var c2 = new Component              {                  Weight = 0.7'                  AccumulatedWeight = 0.2'                  NestedRef = new Nested                  {                      NestedProp = 223                  }              };
Magic Number,UnitTests.Examples,AllMembers,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Examples\AllMembers.cs,BasicTest,The following statement contains a magic number: var c2 = new Component              {                  Weight = 0.7'                  AccumulatedWeight = 0.2'                  NestedRef = new Nested                  {                      NestedProp = 223                  }              };
Magic Number,UnitTests.Examples,AllMembers,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Examples\AllMembers.cs,BasicTest,The following statement contains a magic number: var c2 = new Component              {                  Weight = 0.7'                  AccumulatedWeight = 0.2'                  NestedRef = new Nested                  {                      NestedProp = 223                  }              };
Magic Number,UnitTests.Util,DataUtility,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Util\DataUtility.cs,FakeEquivalent,The following statement contains a magic number: return (13' 13);
Magic Number,UnitTests.Util,DataUtility,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Util\DataUtility.cs,FakeEquivalent,The following statement contains a magic number: return (13' 13);
Magic Number,UnitTests.Util,DataUtility,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Util\DataUtility.cs,FakeEquivalent,The following statement contains a magic number: return (new[] { 13 }' new[] { 13 });
Magic Number,UnitTests.Util,DataUtility,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Util\DataUtility.cs,FakeEquivalent,The following statement contains a magic number: return (new[] { 13 }' new[] { 13 });
Magic Number,UnitTests.Util,DataUtility,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Util\DataUtility.cs,FakeEquivalent,The following statement contains a magic number: return (new HierarchyBase { Id = 13 }' new HierarchyBase { Id = 13 });
Magic Number,UnitTests.Util,DataUtility,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Util\DataUtility.cs,FakeEquivalent,The following statement contains a magic number: return (new HierarchyBase { Id = 13 }' new HierarchyBase { Id = 13 });
Magic Number,UnitTests.Util,DataUtility,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Util\DataUtility.cs,FakeEquivalent,The following statement contains a magic number: return (new HierarchyDerived1 { Id = 13 }' new HierarchyDerived1 { Id = 13 });
Magic Number,UnitTests.Util,DataUtility,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Util\DataUtility.cs,FakeEquivalent,The following statement contains a magic number: return (new HierarchyDerived1 { Id = 13 }' new HierarchyDerived1 { Id = 13 });
Magic Number,UnitTests.Util,DataUtility,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Util\DataUtility.cs,FakeEquivalent,The following statement contains a magic number: return (new HierarchyDerived2 { Id = 13 }' new HierarchyDerived2 { Id = 13 });
Magic Number,UnitTests.Util,DataUtility,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Util\DataUtility.cs,FakeEquivalent,The following statement contains a magic number: return (new HierarchyDerived2 { Id = 13 }' new HierarchyDerived2 { Id = 13 });
Magic Number,UnitTests.Util,DataUtility,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Util\DataUtility.cs,FakeDifferent,The following statement contains a magic number: return (7' 13);
Magic Number,UnitTests.Util,DataUtility,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Util\DataUtility.cs,FakeDifferent,The following statement contains a magic number: return (7' 13);
Magic Number,UnitTests.Util,DataUtility,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Util\DataUtility.cs,FakeDifferent,The following statement contains a magic number: return (new[] { 7 }' new[] { 13 });
Magic Number,UnitTests.Util,DataUtility,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Util\DataUtility.cs,FakeDifferent,The following statement contains a magic number: return (new[] { 7 }' new[] { 13 });
Magic Number,UnitTests.Util,DataUtility,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Util\DataUtility.cs,FakeDifferent,The following statement contains a magic number: return (new HierarchyBase { Id = 7 }' new HierarchyBase { Id = 13 });
Magic Number,UnitTests.Util,DataUtility,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Util\DataUtility.cs,FakeDifferent,The following statement contains a magic number: return (new HierarchyBase { Id = 7 }' new HierarchyBase { Id = 13 });
Magic Number,UnitTests.Util,DataUtility,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Util\DataUtility.cs,FakeDifferent,The following statement contains a magic number: return (new HierarchyDerived1 { Id = 7 }' new HierarchyDerived1 { Id = 13 });
Magic Number,UnitTests.Util,DataUtility,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Util\DataUtility.cs,FakeDifferent,The following statement contains a magic number: return (new HierarchyDerived1 { Id = 7 }' new HierarchyDerived1 { Id = 13 });
Magic Number,UnitTests.Util,DataUtility,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Util\DataUtility.cs,FakeDifferent,The following statement contains a magic number: return (new HierarchyDerived2 { Id = 7 }' new HierarchyDerived2 { Id = 13 });
Magic Number,UnitTests.Util,DataUtility,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Util\DataUtility.cs,FakeDifferent,The following statement contains a magic number: return (new HierarchyDerived2 { Id = 7 }' new HierarchyDerived2 { Id = 13 });
Magic Number,UnitTests.Util,DataUtility,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\UnitTests\Util\DataUtility.cs,FakeDifferent,The following statement contains a magic number: var result2 = Array.CreateInstance(innerType' 2);
