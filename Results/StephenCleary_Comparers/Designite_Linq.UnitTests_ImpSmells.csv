Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupJoin_UsesComparer,The length of the statement  "            var result = outer.GroupJoin(inner' x => x' x => x' (outerValue' innerValues) => innerValues.ToList()' c => c.EquateBy(x => x % 3)).ToList(); " is 141.
Long Statement,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,Join_UsesComparer,The length of the statement  "            var result = outer.Join(inner' x => x' x => x' (outerValue' innerValue) => innerValue' c => c.EquateBy(x => x % 3)).ToList(); " is 125.
Magic Number,Linq.UnitTests,ArrayExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ArrayExtensions.cs,Sort_UsesComparer,The following statement contains a magic number: var input = new int?[] { int.MaxValue' int.MinValue' null' 0' 1' 2' 3 };
Magic Number,Linq.UnitTests,ArrayExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ArrayExtensions.cs,Sort_UsesComparer,The following statement contains a magic number: var input = new int?[] { int.MaxValue' int.MinValue' null' 0' 1' 2' 3 };
Magic Number,Linq.UnitTests,ArrayExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ArrayExtensions.cs,Sort_UsesComparer,The following statement contains a magic number: input.Sort(c => c.OrderBy(x => x % 2 == 0).ThenBy(x => x));
Magic Number,Linq.UnitTests,ArrayExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ArrayExtensions.cs,Sort_UsesComparer,The following statement contains a magic number: Assert.Equal(new int?[] { null' 1' 3' int.MaxValue' int.MinValue' 0' 2 }' input);
Magic Number,Linq.UnitTests,ArrayExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ArrayExtensions.cs,Sort_UsesComparer,The following statement contains a magic number: Assert.Equal(new int?[] { null' 1' 3' int.MaxValue' int.MinValue' 0' 2 }' input);
Magic Number,Linq.UnitTests,ArrayExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ArrayExtensions.cs,Sort_IndexAndCount_UsesComparer,The following statement contains a magic number: var input = new int?[] { int.MaxValue' int.MinValue' null' 0' 3' 2' 1 };
Magic Number,Linq.UnitTests,ArrayExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ArrayExtensions.cs,Sort_IndexAndCount_UsesComparer,The following statement contains a magic number: var input = new int?[] { int.MaxValue' int.MinValue' null' 0' 3' 2' 1 };
Magic Number,Linq.UnitTests,ArrayExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ArrayExtensions.cs,Sort_IndexAndCount_UsesComparer,The following statement contains a magic number: input.Sort(2' 4' c => c.OrderBy(x => x % 2 == 0).ThenBy(x => x));
Magic Number,Linq.UnitTests,ArrayExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ArrayExtensions.cs,Sort_IndexAndCount_UsesComparer,The following statement contains a magic number: input.Sort(2' 4' c => c.OrderBy(x => x % 2 == 0).ThenBy(x => x));
Magic Number,Linq.UnitTests,ArrayExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ArrayExtensions.cs,Sort_IndexAndCount_UsesComparer,The following statement contains a magic number: input.Sort(2' 4' c => c.OrderBy(x => x % 2 == 0).ThenBy(x => x));
Magic Number,Linq.UnitTests,ArrayExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ArrayExtensions.cs,Sort_IndexAndCount_UsesComparer,The following statement contains a magic number: Assert.Equal(new int?[] { int.MaxValue' int.MinValue' null' 3' 0' 2' 1 }' input);
Magic Number,Linq.UnitTests,ArrayExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ArrayExtensions.cs,Sort_IndexAndCount_UsesComparer,The following statement contains a magic number: Assert.Equal(new int?[] { int.MaxValue' int.MinValue' null' 3' 0' 2' 1 }' input);
Magic Number,Linq.UnitTests,ArrayExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ArrayExtensions.cs,Sort_Items_UsesComparer,The following statement contains a magic number: var input = new int?[] { int.MaxValue' int.MinValue' null' 0' 1' 2' 3 };
Magic Number,Linq.UnitTests,ArrayExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ArrayExtensions.cs,Sort_Items_UsesComparer,The following statement contains a magic number: var input = new int?[] { int.MaxValue' int.MinValue' null' 0' 1' 2' 3 };
Magic Number,Linq.UnitTests,ArrayExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ArrayExtensions.cs,Sort_Items_UsesComparer,The following statement contains a magic number: var items = new int[] { 0' 1' 2' 3' 4' 5' 6 };
Magic Number,Linq.UnitTests,ArrayExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ArrayExtensions.cs,Sort_Items_UsesComparer,The following statement contains a magic number: var items = new int[] { 0' 1' 2' 3' 4' 5' 6 };
Magic Number,Linq.UnitTests,ArrayExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ArrayExtensions.cs,Sort_Items_UsesComparer,The following statement contains a magic number: var items = new int[] { 0' 1' 2' 3' 4' 5' 6 };
Magic Number,Linq.UnitTests,ArrayExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ArrayExtensions.cs,Sort_Items_UsesComparer,The following statement contains a magic number: var items = new int[] { 0' 1' 2' 3' 4' 5' 6 };
Magic Number,Linq.UnitTests,ArrayExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ArrayExtensions.cs,Sort_Items_UsesComparer,The following statement contains a magic number: var items = new int[] { 0' 1' 2' 3' 4' 5' 6 };
Magic Number,Linq.UnitTests,ArrayExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ArrayExtensions.cs,Sort_Items_UsesComparer,The following statement contains a magic number: input.Sort(items' c => c.OrderBy(x => x % 2 == 0).ThenBy(x => x));
Magic Number,Linq.UnitTests,ArrayExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ArrayExtensions.cs,Sort_Items_UsesComparer,The following statement contains a magic number: Assert.Equal(new int?[] { null' 1' 3' int.MaxValue' int.MinValue' 0' 2 }' input);
Magic Number,Linq.UnitTests,ArrayExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ArrayExtensions.cs,Sort_Items_UsesComparer,The following statement contains a magic number: Assert.Equal(new int?[] { null' 1' 3' int.MaxValue' int.MinValue' 0' 2 }' input);
Magic Number,Linq.UnitTests,ArrayExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ArrayExtensions.cs,Sort_Items_UsesComparer,The following statement contains a magic number: Assert.Equal(new int[] { 2' 4' 6' 0' 1' 3' 5 }' items);
Magic Number,Linq.UnitTests,ArrayExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ArrayExtensions.cs,Sort_Items_UsesComparer,The following statement contains a magic number: Assert.Equal(new int[] { 2' 4' 6' 0' 1' 3' 5 }' items);
Magic Number,Linq.UnitTests,ArrayExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ArrayExtensions.cs,Sort_Items_UsesComparer,The following statement contains a magic number: Assert.Equal(new int[] { 2' 4' 6' 0' 1' 3' 5 }' items);
Magic Number,Linq.UnitTests,ArrayExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ArrayExtensions.cs,Sort_Items_UsesComparer,The following statement contains a magic number: Assert.Equal(new int[] { 2' 4' 6' 0' 1' 3' 5 }' items);
Magic Number,Linq.UnitTests,ArrayExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ArrayExtensions.cs,Sort_Items_UsesComparer,The following statement contains a magic number: Assert.Equal(new int[] { 2' 4' 6' 0' 1' 3' 5 }' items);
Magic Number,Linq.UnitTests,ArrayExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ArrayExtensions.cs,Sort_Items_IndexAndCount_UsesComparer,The following statement contains a magic number: var input = new int?[] { int.MaxValue' int.MinValue' null' 0' 3' 2' 1 };
Magic Number,Linq.UnitTests,ArrayExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ArrayExtensions.cs,Sort_Items_IndexAndCount_UsesComparer,The following statement contains a magic number: var input = new int?[] { int.MaxValue' int.MinValue' null' 0' 3' 2' 1 };
Magic Number,Linq.UnitTests,ArrayExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ArrayExtensions.cs,Sort_Items_IndexAndCount_UsesComparer,The following statement contains a magic number: var items = new int[] { 0' 1' 2' 3' 4' 5' 6 };
Magic Number,Linq.UnitTests,ArrayExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ArrayExtensions.cs,Sort_Items_IndexAndCount_UsesComparer,The following statement contains a magic number: var items = new int[] { 0' 1' 2' 3' 4' 5' 6 };
Magic Number,Linq.UnitTests,ArrayExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ArrayExtensions.cs,Sort_Items_IndexAndCount_UsesComparer,The following statement contains a magic number: var items = new int[] { 0' 1' 2' 3' 4' 5' 6 };
Magic Number,Linq.UnitTests,ArrayExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ArrayExtensions.cs,Sort_Items_IndexAndCount_UsesComparer,The following statement contains a magic number: var items = new int[] { 0' 1' 2' 3' 4' 5' 6 };
Magic Number,Linq.UnitTests,ArrayExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ArrayExtensions.cs,Sort_Items_IndexAndCount_UsesComparer,The following statement contains a magic number: var items = new int[] { 0' 1' 2' 3' 4' 5' 6 };
Magic Number,Linq.UnitTests,ArrayExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ArrayExtensions.cs,Sort_Items_IndexAndCount_UsesComparer,The following statement contains a magic number: input.Sort(items' 2' 4' c => c.OrderBy(x => x % 2 == 0).ThenBy(x => x));
Magic Number,Linq.UnitTests,ArrayExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ArrayExtensions.cs,Sort_Items_IndexAndCount_UsesComparer,The following statement contains a magic number: input.Sort(items' 2' 4' c => c.OrderBy(x => x % 2 == 0).ThenBy(x => x));
Magic Number,Linq.UnitTests,ArrayExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ArrayExtensions.cs,Sort_Items_IndexAndCount_UsesComparer,The following statement contains a magic number: input.Sort(items' 2' 4' c => c.OrderBy(x => x % 2 == 0).ThenBy(x => x));
Magic Number,Linq.UnitTests,ArrayExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ArrayExtensions.cs,Sort_Items_IndexAndCount_UsesComparer,The following statement contains a magic number: Assert.Equal(new int?[] { int.MaxValue' int.MinValue' null' 3' 0' 2' 1 }' input);
Magic Number,Linq.UnitTests,ArrayExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ArrayExtensions.cs,Sort_Items_IndexAndCount_UsesComparer,The following statement contains a magic number: Assert.Equal(new int?[] { int.MaxValue' int.MinValue' null' 3' 0' 2' 1 }' input);
Magic Number,Linq.UnitTests,ArrayExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ArrayExtensions.cs,Sort_Items_IndexAndCount_UsesComparer,The following statement contains a magic number: Assert.Equal(new int[] { 0' 1' 2' 4' 3' 5' 6 }' items);
Magic Number,Linq.UnitTests,ArrayExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ArrayExtensions.cs,Sort_Items_IndexAndCount_UsesComparer,The following statement contains a magic number: Assert.Equal(new int[] { 0' 1' 2' 4' 3' 5' 6 }' items);
Magic Number,Linq.UnitTests,ArrayExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ArrayExtensions.cs,Sort_Items_IndexAndCount_UsesComparer,The following statement contains a magic number: Assert.Equal(new int[] { 0' 1' 2' 4' 3' 5' 6 }' items);
Magic Number,Linq.UnitTests,ArrayExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ArrayExtensions.cs,Sort_Items_IndexAndCount_UsesComparer,The following statement contains a magic number: Assert.Equal(new int[] { 0' 1' 2' 4' 3' 5' 6 }' items);
Magic Number,Linq.UnitTests,ArrayExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ArrayExtensions.cs,Sort_Items_IndexAndCount_UsesComparer,The following statement contains a magic number: Assert.Equal(new int[] { 0' 1' 2' 4' 3' 5' 6 }' items);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,OrderBy_UsesComparer,The following statement contains a magic number: IEnumerable<int?> input = new int?[] { int.MaxValue' int.MinValue' null' 0' 1' 2' 3 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,OrderBy_UsesComparer,The following statement contains a magic number: IEnumerable<int?> input = new int?[] { int.MaxValue' int.MinValue' null' 0' 1' 2' 3 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,OrderBy_UsesComparer,The following statement contains a magic number: var result = input.OrderBy(x => x' c => c.OrderBy(x => x % 2 == 0).ThenBy(x => x));
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,OrderBy_UsesComparer,The following statement contains a magic number: Assert.Equal(new int?[] { null' 1' 3' int.MaxValue' int.MinValue' 0' 2 }' result);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,OrderBy_UsesComparer,The following statement contains a magic number: Assert.Equal(new int?[] { null' 1' 3' int.MaxValue' int.MinValue' 0' 2 }' result);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,OrderByDescending_UsesComparer,The following statement contains a magic number: IEnumerable<int?> input = new int?[] { int.MaxValue' int.MinValue' null' 0' 1' 2' 3 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,OrderByDescending_UsesComparer,The following statement contains a magic number: IEnumerable<int?> input = new int?[] { int.MaxValue' int.MinValue' null' 0' 1' 2' 3 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,OrderByDescending_UsesComparer,The following statement contains a magic number: var result = input.OrderByDescending(x => x' c => c.OrderBy(x => x % 2 == 0).ThenBy(x => x));
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,OrderByDescending_UsesComparer,The following statement contains a magic number: Assert.Equal(new int?[] { 2' 0' int.MinValue' int.MaxValue' 3' 1' null }' result);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,OrderByDescending_UsesComparer,The following statement contains a magic number: Assert.Equal(new int?[] { 2' 0' int.MinValue' int.MaxValue' 3' 1' null }' result);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,ThenBy_UsesComparer,The following statement contains a magic number: IEnumerable<int?> input = new int?[] { int.MaxValue' int.MinValue' null' 0' 3' 2' 1 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,ThenBy_UsesComparer,The following statement contains a magic number: IEnumerable<int?> input = new int?[] { int.MaxValue' int.MinValue' null' 0' 3' 2' 1 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,ThenBy_UsesComparer,The following statement contains a magic number: Assert.Equal(new int?[] { null' int.MinValue' 0' 1' 2' 3' int.MaxValue }' result);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,ThenBy_UsesComparer,The following statement contains a magic number: Assert.Equal(new int?[] { null' int.MinValue' 0' 1' 2' 3' int.MaxValue }' result);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,ThenByDescending_UsesComparer,The following statement contains a magic number: IEnumerable<int?> input = new int?[] { int.MaxValue' int.MinValue' null' 0' 3' 2' 1 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,ThenByDescending_UsesComparer,The following statement contains a magic number: IEnumerable<int?> input = new int?[] { int.MaxValue' int.MinValue' null' 0' 3' 2' 1 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,ThenByDescending_UsesComparer,The following statement contains a magic number: Assert.Equal(new int?[] { int.MaxValue' 3' 2' 1' 0' int.MinValue' null }' result);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,ThenByDescending_UsesComparer,The following statement contains a magic number: Assert.Equal(new int?[] { int.MaxValue' 3' 2' 1' 0' int.MinValue' null }' result);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,Contains_UsesComparer,The following statement contains a magic number: IEnumerable<int> values = new int[] { 1' 2' 3' 4' 5 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,Contains_UsesComparer,The following statement contains a magic number: IEnumerable<int> values = new int[] { 1' 2' 3' 4' 5 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,Contains_UsesComparer,The following statement contains a magic number: IEnumerable<int> values = new int[] { 1' 2' 3' 4' 5 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,Contains_UsesComparer,The following statement contains a magic number: IEnumerable<int> values = new int[] { 1' 2' 3' 4' 5 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,Contains_UsesComparer,The following statement contains a magic number: Assert.True(values.Contains(14' c => c.EquateBy(x => x % 13)));
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,Contains_UsesComparer,The following statement contains a magic number: Assert.True(values.Contains(14' c => c.EquateBy(x => x % 13)));
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,Distinct_UsesComparer,The following statement contains a magic number: IEnumerable<int> values = new int[] { 1' 2' 3' 4' 5 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,Distinct_UsesComparer,The following statement contains a magic number: IEnumerable<int> values = new int[] { 1' 2' 3' 4' 5 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,Distinct_UsesComparer,The following statement contains a magic number: IEnumerable<int> values = new int[] { 1' 2' 3' 4' 5 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,Distinct_UsesComparer,The following statement contains a magic number: IEnumerable<int> values = new int[] { 1' 2' 3' 4' 5 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,Distinct_UsesComparer,The following statement contains a magic number: var result = values.Distinct(c => c.EquateBy(x => x % 3));
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,Distinct_UsesComparer,The following statement contains a magic number: Assert.Equal(new int[] { 1' 2' 3 }' result);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,Distinct_UsesComparer,The following statement contains a magic number: Assert.Equal(new int[] { 1' 2' 3 }' result);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,Except_UsesComparer,The following statement contains a magic number: IEnumerable<int> values = new int[] { 3' 4' 5 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,Except_UsesComparer,The following statement contains a magic number: IEnumerable<int> values = new int[] { 3' 4' 5 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,Except_UsesComparer,The following statement contains a magic number: IEnumerable<int> values = new int[] { 3' 4' 5 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,Except_UsesComparer,The following statement contains a magic number: var result = values.Except(new int[] { 1 }' c => c.EquateBy(x => x % 3));
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,Except_UsesComparer,The following statement contains a magic number: Assert.Equal(new int[] { 3' 5 }' result);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,Except_UsesComparer,The following statement contains a magic number: Assert.Equal(new int[] { 3' 5 }' result);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupBy_UsesComparer,The following statement contains a magic number: IEnumerable<int> values = new int[] { 1' 2' 3' 4' 5 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupBy_UsesComparer,The following statement contains a magic number: IEnumerable<int> values = new int[] { 1' 2' 3' 4' 5 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupBy_UsesComparer,The following statement contains a magic number: IEnumerable<int> values = new int[] { 1' 2' 3' 4' 5 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupBy_UsesComparer,The following statement contains a magic number: IEnumerable<int> values = new int[] { 1' 2' 3' 4' 5 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupBy_UsesComparer,The following statement contains a magic number: var result = values.GroupBy(x => x' c => c.EquateBy(x => x % 3)).ToList();
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupBy_UsesComparer,The following statement contains a magic number: Assert.Equal(3' result.Count);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupBy_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 1' 4 }' result[0]);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupBy_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 2' 5 }' result[1]);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupBy_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 2' 5 }' result[1]);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupBy_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 3 }' result[2]);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupBy_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 3 }' result[2]);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupBy_ElementSelector_UsesComparer,The following statement contains a magic number: IEnumerable<int> values = new int[] { 1' 2' 3' 4' 5 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupBy_ElementSelector_UsesComparer,The following statement contains a magic number: IEnumerable<int> values = new int[] { 1' 2' 3' 4' 5 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupBy_ElementSelector_UsesComparer,The following statement contains a magic number: IEnumerable<int> values = new int[] { 1' 2' 3' 4' 5 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupBy_ElementSelector_UsesComparer,The following statement contains a magic number: IEnumerable<int> values = new int[] { 1' 2' 3' 4' 5 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupBy_ElementSelector_UsesComparer,The following statement contains a magic number: var result = values.GroupBy(x => x' x => x' c => c.EquateBy(x => x % 3)).ToList();
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupBy_ElementSelector_UsesComparer,The following statement contains a magic number: Assert.Equal(3' result.Count);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupBy_ElementSelector_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 1' 4 }' result[0]);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupBy_ElementSelector_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 2' 5 }' result[1]);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupBy_ElementSelector_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 2' 5 }' result[1]);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupBy_ElementSelector_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 3 }' result[2]);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupBy_ElementSelector_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 3 }' result[2]);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupBy_ResultSelector_UsesComparer,The following statement contains a magic number: IEnumerable<int> values = new int[] { 1' 2' 3' 4' 5 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupBy_ResultSelector_UsesComparer,The following statement contains a magic number: IEnumerable<int> values = new int[] { 1' 2' 3' 4' 5 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupBy_ResultSelector_UsesComparer,The following statement contains a magic number: IEnumerable<int> values = new int[] { 1' 2' 3' 4' 5 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupBy_ResultSelector_UsesComparer,The following statement contains a magic number: IEnumerable<int> values = new int[] { 1' 2' 3' 4' 5 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupBy_ResultSelector_UsesComparer,The following statement contains a magic number: var result = values.GroupBy(x => x' (key' source) => source.ToList()' c => c.EquateBy(x => x % 3)).ToList();
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupBy_ResultSelector_UsesComparer,The following statement contains a magic number: Assert.Equal(3' result.Count);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupBy_ResultSelector_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 1' 4 }' result[0]);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupBy_ResultSelector_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 2' 5 }' result[1]);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupBy_ResultSelector_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 2' 5 }' result[1]);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupBy_ResultSelector_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 3 }' result[2]);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupBy_ResultSelector_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 3 }' result[2]);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupBy_ElementAndResultSelector_UsesComparer,The following statement contains a magic number: IEnumerable<int> values = new int[] { 1' 2' 3' 4' 5 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupBy_ElementAndResultSelector_UsesComparer,The following statement contains a magic number: IEnumerable<int> values = new int[] { 1' 2' 3' 4' 5 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupBy_ElementAndResultSelector_UsesComparer,The following statement contains a magic number: IEnumerable<int> values = new int[] { 1' 2' 3' 4' 5 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupBy_ElementAndResultSelector_UsesComparer,The following statement contains a magic number: IEnumerable<int> values = new int[] { 1' 2' 3' 4' 5 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupBy_ElementAndResultSelector_UsesComparer,The following statement contains a magic number: var result = values.GroupBy(x => x' x => x' (key' source) => source.ToList()' c => c.EquateBy(x => x % 3)).ToList();
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupBy_ElementAndResultSelector_UsesComparer,The following statement contains a magic number: Assert.Equal(3' result.Count);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupBy_ElementAndResultSelector_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 1' 4 }' result[0]);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupBy_ElementAndResultSelector_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 2' 5 }' result[1]);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupBy_ElementAndResultSelector_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 2' 5 }' result[1]);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupBy_ElementAndResultSelector_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 3 }' result[2]);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupBy_ElementAndResultSelector_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 3 }' result[2]);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupJoin_UsesComparer,The following statement contains a magic number: IEnumerable<int> outer = new int[] { 0' 1' 2 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupJoin_UsesComparer,The following statement contains a magic number: IEnumerable<int> inner = new int[] { 1' 2' 3' 4' 5 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupJoin_UsesComparer,The following statement contains a magic number: IEnumerable<int> inner = new int[] { 1' 2' 3' 4' 5 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupJoin_UsesComparer,The following statement contains a magic number: IEnumerable<int> inner = new int[] { 1' 2' 3' 4' 5 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupJoin_UsesComparer,The following statement contains a magic number: IEnumerable<int> inner = new int[] { 1' 2' 3' 4' 5 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupJoin_UsesComparer,The following statement contains a magic number: var result = outer.GroupJoin(inner' x => x' x => x' (outerValue' innerValues) => innerValues.ToList()' c => c.EquateBy(x => x % 3)).ToList();
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupJoin_UsesComparer,The following statement contains a magic number: Assert.Equal(3' result.Count);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupJoin_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 3 }' result[0]);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupJoin_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 1' 4 }' result[1]);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupJoin_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 2' 5 }' result[2]);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupJoin_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 2' 5 }' result[2]);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,GroupJoin_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 2' 5 }' result[2]);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,Intersect_UsesComparer,The following statement contains a magic number: IEnumerable<int> second = new int[] { 1' 2' 3' 4' 5 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,Intersect_UsesComparer,The following statement contains a magic number: IEnumerable<int> second = new int[] { 1' 2' 3' 4' 5 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,Intersect_UsesComparer,The following statement contains a magic number: IEnumerable<int> second = new int[] { 1' 2' 3' 4' 5 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,Intersect_UsesComparer,The following statement contains a magic number: IEnumerable<int> second = new int[] { 1' 2' 3' 4' 5 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,Intersect_UsesComparer,The following statement contains a magic number: var result = first.Intersect(second' c => c.EquateBy(x => x % 3));
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,Join_UsesComparer,The following statement contains a magic number: IEnumerable<int> outer = new int[] { 0' 2 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,Join_UsesComparer,The following statement contains a magic number: IEnumerable<int> inner = new int[] { 1' 2' 3' 4' 5 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,Join_UsesComparer,The following statement contains a magic number: IEnumerable<int> inner = new int[] { 1' 2' 3' 4' 5 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,Join_UsesComparer,The following statement contains a magic number: IEnumerable<int> inner = new int[] { 1' 2' 3' 4' 5 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,Join_UsesComparer,The following statement contains a magic number: IEnumerable<int> inner = new int[] { 1' 2' 3' 4' 5 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,Join_UsesComparer,The following statement contains a magic number: var result = outer.Join(inner' x => x' x => x' (outerValue' innerValue) => innerValue' c => c.EquateBy(x => x % 3)).ToList();
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,Join_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 3' 2' 5 }' result);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,Join_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 3' 2' 5 }' result);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,Join_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 3' 2' 5 }' result);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,SequenceEqual_UsesComparer,The following statement contains a magic number: IEnumerable<int> first = new int[] { 0' 1' 2 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,SequenceEqual_UsesComparer,The following statement contains a magic number: IEnumerable<int> second = new int[] { 15' 4' 2 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,SequenceEqual_UsesComparer,The following statement contains a magic number: IEnumerable<int> second = new int[] { 15' 4' 2 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,SequenceEqual_UsesComparer,The following statement contains a magic number: IEnumerable<int> second = new int[] { 15' 4' 2 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,SequenceEqual_UsesComparer,The following statement contains a magic number: var result = first.SequenceEqual(second' c => c.EquateBy(x => x % 3));
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,ToDictionary_UsesComparer,The following statement contains a magic number: IEnumerable<int> values = new int[] { 1' 2' 3' 4 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,ToDictionary_UsesComparer,The following statement contains a magic number: IEnumerable<int> values = new int[] { 1' 2' 3' 4 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,ToDictionary_UsesComparer,The following statement contains a magic number: IEnumerable<int> values = new int[] { 1' 2' 3' 4 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,ToDictionary_UsesComparer,The following statement contains a magic number: Assert.ThrowsAny<ArgumentException>(() => values.ToDictionary(x => x' c => c.EquateBy(x => x % 3)));
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,ToDictionary_ElementSelector_UsesComparer,The following statement contains a magic number: IEnumerable<int> values = new int[] { 1' 2' 3' 4 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,ToDictionary_ElementSelector_UsesComparer,The following statement contains a magic number: IEnumerable<int> values = new int[] { 1' 2' 3' 4 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,ToDictionary_ElementSelector_UsesComparer,The following statement contains a magic number: IEnumerable<int> values = new int[] { 1' 2' 3' 4 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,ToDictionary_ElementSelector_UsesComparer,The following statement contains a magic number: Assert.ThrowsAny<ArgumentException>(() => values.ToDictionary(x => x' x => x' c => c.EquateBy(x => x % 3)));
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,ToHashSet_UsesComparer,The following statement contains a magic number: IEnumerable<int> values = new int[] { 1' 2' 3' 4 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,ToHashSet_UsesComparer,The following statement contains a magic number: IEnumerable<int> values = new int[] { 1' 2' 3' 4 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,ToHashSet_UsesComparer,The following statement contains a magic number: IEnumerable<int> values = new int[] { 1' 2' 3' 4 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,ToHashSet_UsesComparer,The following statement contains a magic number: var result = values.ToHashSet(c => c.EquateBy(x => x % 3));
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,ToHashSet_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 1' 2' 3 }' result.OrderBy(x => x));
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,ToHashSet_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 1' 2' 3 }' result.OrderBy(x => x));
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,ToLookup_UsesComparer,The following statement contains a magic number: IEnumerable<int> values = new int[] { 1' 2' 3' 4 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,ToLookup_UsesComparer,The following statement contains a magic number: IEnumerable<int> values = new int[] { 1' 2' 3' 4 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,ToLookup_UsesComparer,The following statement contains a magic number: IEnumerable<int> values = new int[] { 1' 2' 3' 4 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,ToLookup_UsesComparer,The following statement contains a magic number: var result = values.ToLookup(x => x' c => c.EquateBy(x => x % 3));
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,ToLookup_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 3 }' result[0]);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,ToLookup_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 1' 4 }' result[1]);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,ToLookup_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 2 }' result[2]);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,ToLookup_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 2 }' result[2]);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,ToLookup_ElementSelector_UsesComparer,The following statement contains a magic number: IEnumerable<int> values = new int[] { 1' 2' 3' 4 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,ToLookup_ElementSelector_UsesComparer,The following statement contains a magic number: IEnumerable<int> values = new int[] { 1' 2' 3' 4 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,ToLookup_ElementSelector_UsesComparer,The following statement contains a magic number: IEnumerable<int> values = new int[] { 1' 2' 3' 4 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,ToLookup_ElementSelector_UsesComparer,The following statement contains a magic number: var result = values.ToLookup(x => x' x => x' c => c.EquateBy(x => x % 3));
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,ToLookup_ElementSelector_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 3 }' result[0]);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,ToLookup_ElementSelector_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 1' 4 }' result[1]);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,ToLookup_ElementSelector_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 2 }' result[2]);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,ToLookup_ElementSelector_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 2 }' result[2]);
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,Union_UsesComparer,The following statement contains a magic number: IEnumerable<int> second = new int[] { 1' 2' 3' 4' 5 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,Union_UsesComparer,The following statement contains a magic number: IEnumerable<int> second = new int[] { 1' 2' 3' 4' 5 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,Union_UsesComparer,The following statement contains a magic number: IEnumerable<int> second = new int[] { 1' 2' 3' 4' 5 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,Union_UsesComparer,The following statement contains a magic number: IEnumerable<int> second = new int[] { 1' 2' 3' 4' 5 };
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,Union_UsesComparer,The following statement contains a magic number: var result = first.Union(second' c => c.EquateBy(x => x % 3));
Magic Number,Linq.UnitTests,EnumerableExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\EnumerableExtensions.cs,Union_UsesComparer,The following statement contains a magic number: Assert.Equal(new[] { 0' 1' 2 }' result);
Magic Number,Linq.UnitTests,ListExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ListExtensions.cs,Sort_UsesComparer,The following statement contains a magic number: var input = new List<int?> { int.MaxValue' int.MinValue' null' 0' 1' 2' 3 };
Magic Number,Linq.UnitTests,ListExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ListExtensions.cs,Sort_UsesComparer,The following statement contains a magic number: var input = new List<int?> { int.MaxValue' int.MinValue' null' 0' 1' 2' 3 };
Magic Number,Linq.UnitTests,ListExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ListExtensions.cs,Sort_UsesComparer,The following statement contains a magic number: input.Sort(c => c.OrderBy(x => x % 2 == 0).ThenBy(x => x));
Magic Number,Linq.UnitTests,ListExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ListExtensions.cs,Sort_UsesComparer,The following statement contains a magic number: Assert.Equal(new int?[] { null' 1' 3' int.MaxValue' int.MinValue' 0' 2 }' input);
Magic Number,Linq.UnitTests,ListExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ListExtensions.cs,Sort_UsesComparer,The following statement contains a magic number: Assert.Equal(new int?[] { null' 1' 3' int.MaxValue' int.MinValue' 0' 2 }' input);
Magic Number,Linq.UnitTests,ListExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ListExtensions.cs,Sort_IndexAndCount_UsesComparer,The following statement contains a magic number: var input = new List<int?> { int.MaxValue' int.MinValue' null' 0' 3' 2' 1 };
Magic Number,Linq.UnitTests,ListExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ListExtensions.cs,Sort_IndexAndCount_UsesComparer,The following statement contains a magic number: var input = new List<int?> { int.MaxValue' int.MinValue' null' 0' 3' 2' 1 };
Magic Number,Linq.UnitTests,ListExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ListExtensions.cs,Sort_IndexAndCount_UsesComparer,The following statement contains a magic number: input.Sort(2' 4' c => c.OrderBy(x => x % 2 == 0).ThenBy(x => x));
Magic Number,Linq.UnitTests,ListExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ListExtensions.cs,Sort_IndexAndCount_UsesComparer,The following statement contains a magic number: input.Sort(2' 4' c => c.OrderBy(x => x % 2 == 0).ThenBy(x => x));
Magic Number,Linq.UnitTests,ListExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ListExtensions.cs,Sort_IndexAndCount_UsesComparer,The following statement contains a magic number: input.Sort(2' 4' c => c.OrderBy(x => x % 2 == 0).ThenBy(x => x));
Magic Number,Linq.UnitTests,ListExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ListExtensions.cs,Sort_IndexAndCount_UsesComparer,The following statement contains a magic number: Assert.Equal(new int?[] { int.MaxValue' int.MinValue' null' 3' 0' 2' 1 }' input);
Magic Number,Linq.UnitTests,ListExtensionsUnitTests,D:\research\architectureSmells\repos1\StephenCleary_Comparers\test\Linq.UnitTests\ListExtensions.cs,Sort_IndexAndCount_UsesComparer,The following statement contains a magic number: Assert.Equal(new int?[] { int.MaxValue' int.MinValue' null' 3' 0' 2' 1 }' input);
