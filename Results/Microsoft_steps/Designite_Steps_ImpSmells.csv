Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Steps,App,D:\research\architectureSmells\repos\Microsoft_steps\Steps\App.xaml.cs,OnLaunched,Cyclomatic complexity of the method is 8
Long Statement,Steps,AboutPage,D:\research\architectureSmells\repos\Microsoft_steps\Steps\AboutPage.xaml.cs,AboutPage_Loaded,The length of the statement  "                using (var reader = XmlReader.Create(appManifestStream' new XmlReaderSettings { IgnoreWhitespace = true' IgnoreComments = true })) " is 130.
Long Statement,Steps,MainPage,D:\research\architectureSmells\repos\Microsoft_steps\Steps\MainPage.xaml.cs,CreateOrRemoveTileAsync,The length of the statement  "                    var secondaryTile = new SecondaryTile(TILE_ID' "Steps"' "/MainPage.xaml"' new Uri("ms-appx:///Assets/Tiles/square" + meterSmall + ".png"' UriKind.Absolute)' TileSize.Square150x150); " is 181.
Long Statement,Steps,MainPage,D:\research\architectureSmells\repos\Microsoft_steps\Steps\MainPage.xaml.cs,CreateOrRemoveTileAsync,The length of the statement  "                    secondaryTile.VisualElements.Square71x71Logo = new Uri("ms-appx:///Assets/Tiles/small_square" + meterSmall + ".png"' UriKind.Absolute); " is 135.
Long Statement,Steps,MainPage,D:\research\architectureSmells\repos\Microsoft_steps\Steps\MainPage.xaml.cs,CreateOrRemoveTileAsync,The length of the statement  "                    secondaryTile.VisualElements.Wide310x150Logo = new Uri("ms-appx:///Assets/Tiles/wide" + meter + ".png"' UriKind.Absolute); " is 122.
Long Statement,Steps,StepsEngineFactory,D:\research\architectureSmells\repos\Microsoft_steps\Steps\StepsEngine.cs,GetDefaultAsync,The length of the statement  "                MessageDialog dialog = new MessageDialog("Motion access has been disabled in system settings. Do you want to open settings now?"' "Information"); " is 145.
Long Statement,Steps,StepsEngineFactory,D:\research\architectureSmells\repos\Microsoft_steps\Steps\StepsEngine.cs,GetDefaultAsync,The length of the statement  "                dialog.Commands.Add(new UICommand("Yes"' async cmd => await Windows.System.Launcher.LaunchUriAsync(new Uri("ms-settings:privacy-motion")))); " is 140.
Long Statement,Steps,LumiaStepsEngine,D:\research\architectureSmells\repos\Microsoft_steps\Steps\StepsEngine.cs,ValidateSettingsAsync,The length of the statement  "                // Starting from version 2 of Motion data settings Step counter and Acitivity monitor are always available. In earlier versions system " is 134.
Long Statement,Steps,LumiaStepsEngine,D:\research\architectureSmells\repos\Microsoft_steps\Steps\StepsEngine.cs,ValidateSettingsAsync,The length of the statement  "                        MessageDialog dlg = new MessageDialog("In order to count steps you need to enable location in system settings. Do you want to open settings now? If not' application will exit."' "Information"); " is 193.
Long Statement,Steps,LumiaStepsEngine,D:\research\architectureSmells\repos\Microsoft_steps\Steps\StepsEngine.cs,ValidateSettingsAsync,The length of the statement  "                        dlg.Commands.Add(new UICommand("Yes"' new UICommandInvokedHandler(async (cmd) => await SenseHelper.LaunchLocationSettingsAsync()))); " is 132.
Long Statement,Steps,LumiaStepsEngine,D:\research\architectureSmells\repos\Microsoft_steps\Steps\StepsEngine.cs,ValidateSettingsAsync,The length of the statement  "                        MessageDialog dlg = new MessageDialog("In order to count steps you need to enable Motion data in Motion data settings. Do you want to open settings now? If not' application will exit."' "Information"); " is 201.
Long Statement,Steps,LumiaStepsEngine,D:\research\architectureSmells\repos\Microsoft_steps\Steps\StepsEngine.cs,ValidateSettingsAsync,The length of the statement  "                        dlg.Commands.Add(new UICommand("Yes"' new UICommandInvokedHandler(async (cmd) => await SenseHelper.LaunchSenseSettingsAsync()))); " is 129.
Long Statement,Steps,LumiaStepsEngine,D:\research\architectureSmells\repos\Microsoft_steps\Steps\StepsEngine.cs,InitializeAsync,The length of the statement  "            // Using this method to detect if the application runs in the emulator or on a real device. Later the *Simulator API is used to read fake sense data on emulator.  " is 161.
Long Statement,Steps,LumiaStepsEngine,D:\research\architectureSmells\repos\Microsoft_steps\Steps\StepsEngine.cs,InitializeAsync,The length of the statement  "            // In production code you do not need this and in fact you should ensure that you do not include the Lumia.Sense.Testing reference in your project. " is 147.
Long Statement,Steps,LumiaStepsEngine,D:\research\architectureSmells\repos\Microsoft_steps\Steps\StepsEngine.cs,CallSensorCoreApiAsync,The length of the statement  "                            dlg = new MessageDialog(_resourceLoader.GetString("FeatureDisabled/Location")' _resourceLoader.GetString("FeatureDisabled/Title")); " is 131.
Long Statement,Steps,LumiaStepsEngine,D:\research\architectureSmells\repos\Microsoft_steps\Steps\StepsEngine.cs,CallSensorCoreApiAsync,The length of the statement  "                            dlg.Commands.Add(new UICommand("Yes"' new UICommandInvokedHandler(async (cmd) => await SenseHelper.LaunchLocationSettingsAsync()))); " is 132.
Long Statement,Steps,LumiaStepsEngine,D:\research\architectureSmells\repos\Microsoft_steps\Steps\StepsEngine.cs,CallSensorCoreApiAsync,The length of the statement  "                            dlg = new MessageDialog(_resourceLoader.GetString("FeatureDisabled/MotionData")' _resourceLoader.GetString("FeatureDisabled/Title")); " is 133.
Long Statement,Steps,LumiaStepsEngine,D:\research\architectureSmells\repos\Microsoft_steps\Steps\StepsEngine.cs,CallSensorCoreApiAsync,The length of the statement  "                            dlg.Commands.Add(new UICommand("Yes"' new UICommandInvokedHandler(async (cmd) => await SenseHelper.LaunchSenseSettingsAsync()))); " is 129.
Long Statement,Steps,LumiaStepsEngine,D:\research\architectureSmells\repos\Microsoft_steps\Steps\StepsEngine.cs,CallSensorCoreApiAsync,The length of the statement  "                            dlg = new MessageDialog(_resourceLoader.GetString("FeatureNotSupported/Message")' _resourceLoader.GetString("FeatureNotSupported/Title")); " is 138.
Empty Catch Block,Steps,MainPage,D:\research\architectureSmells\repos\Microsoft_steps\Steps\MainPage.xaml.cs,CreateOrRemoveTileAsync,The method has an empty catch block.
Empty Catch Block,Steps,LumiaStepsEngine,D:\research\architectureSmells\repos\Microsoft_steps\Steps\StepsEngine.cs,GetStepsCountsForDay,The method has an empty catch block.
Magic Number,Steps,MainModel,D:\research\architectureSmells\repos\Microsoft_steps\Steps\DataModels\MainModel.cs,IncreaseDayOffsetAsync,The following statement contains a magic number: DayOffset < 6
Magic Number,Steps,Half,D:\research\architectureSmells\repos\Microsoft_steps\Steps\DataConverter.cs,Convert,The following statement contains a magic number: return (double)value / 2;
Magic Number,Steps,Margin,D:\research\architectureSmells\repos\Microsoft_steps\Steps\DataConverter.cs,Convert,The following statement contains a magic number: return (double)value - 6;
Magic Number,Steps,MainPage,D:\research\architectureSmells\repos\Microsoft_steps\Steps\MainPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: _pollTimer.Interval = TimeSpan.FromSeconds(5);
Magic Number,Steps,MainPage,D:\research\architectureSmells\repos\Microsoft_steps\Steps\MainPage.xaml.cs,CommandBar_Closed,The following statement contains a magic number: cmdBar.Opacity = 0.5;
Magic Number,Steps,MainPage,D:\research\architectureSmells\repos\Microsoft_steps\Steps\MainPage.xaml.cs,CreateOrRemoveTileAsync,The following statement contains a magic number: secondaryTile.VisualElements.BackgroundColor = Color.FromArgb(255' 0' 138' 0);
Magic Number,Steps,MainPage,D:\research\architectureSmells\repos\Microsoft_steps\Steps\MainPage.xaml.cs,CreateOrRemoveTileAsync,The following statement contains a magic number: secondaryTile.VisualElements.BackgroundColor = Color.FromArgb(255' 0' 138' 0);
Magic Number,Steps,MainPage,D:\research\architectureSmells\repos\Microsoft_steps\Steps\MainPage.xaml.cs,UpdateMenuAndAppBarIcons,The following statement contains a magic number: backButton.IsEnabled = _model.DayOffset != 6;
Magic Number,Steps,OSStepsEngine,D:\research\architectureSmells\repos\Microsoft_steps\Steps\StepsEngine.cs,GetStepsCountsForDay,The following statement contains a magic number: uint numIntervals = (((24 * 60) / resolution) + 1);
Magic Number,Steps,OSStepsEngine,D:\research\architectureSmells\repos\Microsoft_steps\Steps\StepsEngine.cs,GetStepsCountsForDay,The following statement contains a magic number: uint numIntervals = (((24 * 60) / resolution) + 1);
Magic Number,Steps,LumiaStepsEngine,D:\research\architectureSmells\repos\Microsoft_steps\Steps\StepsEngine.cs,ValidateSettingsAsync,The following statement contains a magic number: settings.Version < 2
Magic Number,Steps,LumiaStepsEngine,D:\research\architectureSmells\repos\Microsoft_steps\Steps\StepsEngine.cs,GetStepsCountsForDay,The following statement contains a magic number: uint numIntervals = (((24 * 60) / resolution) + 1);
Magic Number,Steps,LumiaStepsEngine,D:\research\architectureSmells\repos\Microsoft_steps\Steps\StepsEngine.cs,GetStepsCountsForDay,The following statement contains a magic number: uint numIntervals = (((24 * 60) / resolution) + 1);
Magic Number,Steps,LumiaStepsEngine,D:\research\architectureSmells\repos\Microsoft_steps\Steps\StepsEngine.cs,CallSensorCoreApiAsync,The following statement contains a magic number: switch (SenseHelper.GetSenseError(failure.HResult))                  {                      case SenseError.LocationDisabled:                          {                              dlg = new MessageDialog(_resourceLoader.GetString("FeatureDisabled/Location")' _resourceLoader.GetString("FeatureDisabled/Title"));                              dlg.Commands.Add(new UICommand("Yes"' new UICommandInvokedHandler(async (cmd) => await SenseHelper.LaunchLocationSettingsAsync())));                              dlg.Commands.Add(new UICommand("No"' new UICommandInvokedHandler((cmd) => { /* do nothing */ })));                              await dlg.ShowAsync();                              new System.Threading.ManualResetEvent(false).WaitOne(500);                              return false;                          }                      case SenseError.SenseDisabled:                          {                              dlg = new MessageDialog(_resourceLoader.GetString("FeatureDisabled/MotionData")' _resourceLoader.GetString("FeatureDisabled/Title"));                              dlg.Commands.Add(new UICommand("Yes"' new UICommandInvokedHandler(async (cmd) => await SenseHelper.LaunchSenseSettingsAsync())));                              dlg.Commands.Add(new UICommand("No"' new UICommandInvokedHandler((cmd) => { /* do nothing */ })));                              await dlg.ShowAsync();                              return false;                          }                      case SenseError.SenseNotAvailable:                          {                              dlg = new MessageDialog(_resourceLoader.GetString("FeatureNotSupported/Message")' _resourceLoader.GetString("FeatureNotSupported/Title"));                              await dlg.ShowAsync();                              return false;                          }                      default:                          {                              dlg = new MessageDialog("Failure: " + SenseHelper.GetSenseError(failure.HResult)' "");                              await dlg.ShowAsync();                              return false;                          }                  }
