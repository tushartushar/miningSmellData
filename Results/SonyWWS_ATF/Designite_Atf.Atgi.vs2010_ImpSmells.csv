Implementation smell,Namespace,Class,File,Method,Description
Long Method,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The method has 2479 lines of code.
Long Identifier,Sce.Atf.Atgi,cameraType,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,,The length of the parameter horizontalFilmApertureAttribute is 31.
Long Identifier,Sce.Atf.Atgi,jointType,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,,The length of the parameter scalePivotTranslationAttribute is 30.
Long Identifier,Sce.Atf.Atgi,jointType,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,,The length of the parameter rotatePivotTranslationAttribute is 31.
Long Identifier,Sce.Atf.Atgi,nodeType,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,,The length of the parameter scalePivotTranslationAttribute is 30.
Long Identifier,Sce.Atf.Atgi,nodeType,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,,The length of the parameter rotatePivotTranslationAttribute is 31.
Long Identifier,Sce.Atf.Atgi,lodgroupType,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,,The length of the parameter scalePivotTranslationAttribute is 30.
Long Identifier,Sce.Atf.Atgi,lodgroupType,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,,The length of the parameter rotatePivotTranslationAttribute is 31.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            parseaccelerationType.Type = getNodeType("http://www.atg.development.scee.net/atgi/1_29_0/atgi"' "parseaccelerationType"); " is 122.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            animChannelType_animData.Type = getNodeType("http://www.atg.development.scee.net/atgi/1_29_0/atgi"' "animChannelType_animData"); " is 128.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            animDiscontinuitiesType.Type = getNodeType("http://www.atg.development.scee.net/atgi/1_29_0/atgi"' "animDiscontinuitiesType"); " is 126.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            animDiscontinuitiesType_corner.Type = getNodeType("http://www.atg.development.scee.net/atgi/1_29_0/atgi"' "animDiscontinuitiesType_corner"); " is 140.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            animDiscontinuitiesType_step.Type = getNodeType("http://www.atg.development.scee.net/atgi/1_29_0/atgi"' "animDiscontinuitiesType_step"); " is 136.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            aimConstraintType_upobject.Type = getNodeType("http://www.atg.development.scee.net/atgi/1_29_0/atgi"' "aimConstraintType_upobject"); " is 132.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            constraintTargetType.Type = getNodeType("http://www.atg.development.scee.net/atgi/1_29_0/atgi"' "constraintTargetType"); " is 120.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            atgiLocatorType_file.Type = getNodeType("http://www.atg.development.scee.net/atgi/1_29_0/atgi"' "atgiLocatorType_file"); " is 120.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            blendtargetType_diff.Type = getNodeType("http://www.atg.development.scee.net/atgi/1_29_0/atgi"' "blendtargetType_diff"); " is 120.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            lightType_colourRamp.Type = getNodeType("http://www.atg.development.scee.net/atgi/1_29_0/atgi"' "lightType_colourRamp"); " is 120.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            lodgroupType_thresholds.Type = getNodeType("http://www.atg.development.scee.net/atgi/1_29_0/atgi"' "lodgroupType_thresholds"); " is 126.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            meshType_vertexArray.Type = getNodeType("http://www.atg.development.scee.net/atgi/1_29_0/atgi"' "meshType_vertexArray"); " is 120.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            vertexArray_primitives.Type = getNodeType("http://www.atg.development.scee.net/atgi/1_29_0/atgi"' "vertexArray_primitives"); " is 124.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            blindDataType_attribute.Type = getNodeType("http://www.atg.development.scee.net/atgi/1_29_0/atgi"' "blindDataType_attribute"); " is 126.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            multiBlendTargetType.Type = getNodeType("http://www.atg.development.scee.net/atgi/1_29_0/atgi"' "multiBlendTargetType"); " is 120.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            multiBlendTargetType_blendStage.Type = getNodeType("http://www.atg.development.scee.net/atgi/1_29_0/atgi"' "multiBlendTargetType_blendStage"); " is 142.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            multiBlendTargetType_blendStage.interpolantAttribute = multiBlendTargetType_blendStage.Type.GetAttributeInfo("interpolant"); " is 124.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            multiBlendTargetType_blendStage.animDiscontinuitiesChild = multiBlendTargetType_blendStage.Type.GetChildInfo("animDiscontinuities"); " is 132.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            multiBlendTargetType_blendStage.aimConstraintChild = multiBlendTargetType_blendStage.Type.GetChildInfo("aimConstraint"); " is 120.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            multiBlendTargetType_blendStage.multiBlendTargetChild = multiBlendTargetType_blendStage.Type.GetChildInfo("multiBlendTarget"); " is 126.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            multiBlendTargetType_blendStage.orientationConstraintChild = multiBlendTargetType_blendStage.Type.GetChildInfo("orientationConstraint"); " is 136.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            multiBlendTargetType_blendStage.parentConstraintChild = multiBlendTargetType_blendStage.Type.GetChildInfo("parentConstraint"); " is 126.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            multiBlendTargetType_blendStage.scaleConstraintChild = multiBlendTargetType_blendStage.Type.GetChildInfo("scaleConstraint"); " is 124.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            multiBlendTargetType_blendStage.springConstraintChild = multiBlendTargetType_blendStage.Type.GetChildInfo("springConstraint"); " is 126.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            multiBlendTargetType_blendStage.translationConstraintChild = multiBlendTargetType_blendStage.Type.GetChildInfo("translationConstraint"); " is 136.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            multiBlendTargetType_blendStage.blendshapeControllerChild = multiBlendTargetType_blendStage.Type.GetChildInfo("blendshapeController"); " is 134.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            nurbsCurveType_points.Type = getNodeType("http://www.atg.development.scee.net/atgi/1_29_0/atgi"' "nurbsCurveType_points"); " is 122.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            nurbsCurveType_knots.Type = getNodeType("http://www.atg.development.scee.net/atgi/1_29_0/atgi"' "nurbsCurveType_knots"); " is 120.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            nurbsSurfaceType_surface.Type = getNodeType("http://www.atg.development.scee.net/atgi/1_29_0/atgi"' "nurbsSurfaceType_surface"); " is 128.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            surface_controlVertices.Type = getNodeType("http://www.atg.development.scee.net/atgi/1_29_0/atgi"' "surface_controlVertices"); " is 126.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            orientConstraintType.Type = getNodeType("http://www.atg.development.scee.net/atgi/1_29_0/atgi"' "orientConstraintType"); " is 120.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            parentConstraintType.Type = getNodeType("http://www.atg.development.scee.net/atgi/1_29_0/atgi"' "parentConstraintType"); " is 120.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            parentConstraintType_offset.Type = getNodeType("http://www.atg.development.scee.net/atgi/1_29_0/atgi"' "parentConstraintType_offset"); " is 134.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            primitiveShapeType_cube.Type = getNodeType("http://www.atg.development.scee.net/atgi/1_29_0/atgi"' "primitiveShapeType_cube"); " is 126.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            primitiveShapeType_cylinder.Type = getNodeType("http://www.atg.development.scee.net/atgi/1_29_0/atgi"' "primitiveShapeType_cylinder"); " is 134.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            primitiveShapeType_sphere.Type = getNodeType("http://www.atg.development.scee.net/atgi/1_29_0/atgi"' "primitiveShapeType_sphere"); " is 130.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            springConstraintType.Type = getNodeType("http://www.atg.development.scee.net/atgi/1_29_0/atgi"' "springConstraintType"); " is 120.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            translationConstraintType.Type = getNodeType("http://www.atg.development.scee.net/atgi/1_29_0/atgi"' "translationConstraintType"); " is 130.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            translationConstraintType.animDiscontinuitiesChild = translationConstraintType.Type.GetChildInfo("animDiscontinuities"); " is 120.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            translationConstraintType.orientationConstraintChild = translationConstraintType.Type.GetChildInfo("orientationConstraint"); " is 124.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            translationConstraintType.translationConstraintChild = translationConstraintType.Type.GetChildInfo("translationConstraint"); " is 124.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            translationConstraintType.blendshapeControllerChild = translationConstraintType.Type.GetChildInfo("blendshapeController"); " is 122.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            blendshapeControllerType.Type = getNodeType("http://www.atg.development.scee.net/atgi/1_29_0/atgi"' "blendshapeControllerType"); " is 128.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            blendshapeControllerType.orientationConstraintChild = blendshapeControllerType.Type.GetChildInfo("orientationConstraint"); " is 122.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            blendshapeControllerType.translationConstraintChild = blendshapeControllerType.Type.GetChildInfo("translationConstraint"); " is 122.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            blendshapeControllerType.blendshapeControllerChild = blendshapeControllerType.Type.GetChildInfo("blendshapeController"); " is 120.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            blendshapeControllerType_weight.Type = getNodeType("http://www.atg.development.scee.net/atgi/1_29_0/atgi"' "blendshapeControllerType_weight"); " is 142.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            blendshapeControllerType_weight.weightNameAttribute = blendshapeControllerType_weight.Type.GetAttributeInfo("weightName"); " is 122.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            cgshaderType_binding.Type = getNodeType("http://www.atg.development.scee.net/atgi/1_29_0/atgi"' "cgshaderType_binding"); " is 120.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            expressionType_input.Type = getNodeType("http://www.atg.development.scee.net/atgi/1_29_0/atgi"' "expressionType_input"); " is 120.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            expressionType_output.Type = getNodeType("http://www.atg.development.scee.net/atgi/1_29_0/atgi"' "expressionType_output"); " is 122.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            image_channelType_data.Type = getNodeType("http://www.atg.development.scee.net/atgi/1_29_0/atgi"' "image_channelType_data"); " is 124.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            materialType_renderstate.Type = getNodeType("http://www.atg.development.scee.net/atgi/1_29_0/atgi"' "materialType_renderstate"); " is 128.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            renderstate_alphablend.Type = getNodeType("http://www.atg.development.scee.net/atgi/1_29_0/atgi"' "renderstate_alphablend"); " is 124.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            renderstate_alphatest.Type = getNodeType("http://www.atg.development.scee.net/atgi/1_29_0/atgi"' "renderstate_alphatest"); " is 122.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            renderstate_backfaceculling.Type = getNodeType("http://www.atg.development.scee.net/atgi/1_29_0/atgi"' "renderstate_backfaceculling"); " is 134.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            materialType_binding.Type = getNodeType("http://www.atg.development.scee.net/atgi/1_29_0/atgi"' "materialType_binding"); " is 120.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            motionPathType_upobject.Type = getNodeType("http://www.atg.development.scee.net/atgi/1_29_0/atgi"' "motionPathType_upobject"); " is 126.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            blendshapeType_target.Type = getNodeType("http://www.atg.development.scee.net/atgi/1_29_0/atgi"' "blendshapeType_target"); " is 122.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            customDataAttributeType.Type = getNodeType("http://www.atg.development.scee.net/atgi/1_29_0/atgi"' "customDataAttributeType"); " is 126.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            jointType_minrotation.Type = getNodeType("http://www.atg.development.scee.net/atgi/1_29_0/atgi"' "jointType_minrotation"); " is 122.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            jointType_maxrotation.Type = getNodeType("http://www.atg.development.scee.net/atgi/1_29_0/atgi"' "jointType_maxrotation"); " is 122.
Long Statement,Sce.Atf.Atgi,Schema,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\schemas\Schema.cs,Initialize,The length of the statement  "            jointType_jointOrientEul.Type = getNodeType("http://www.atg.development.scee.net/atgi/1_29_0/atgi"' "jointType_jointOrientEul"); " is 128.
Empty Catch Block,Sce.Atf.Atgi,MaterialProperties,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\Material.cs,MaterialProperties,The method has an empty catch block.
Magic Number,Sce.Atf.Atgi,Material,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\Material.cs,ParseBindingsForTexture,The following statement contains a magic number: if (bestMatch != null)              {                  DomNode textureObject = (DomNode)bestMatch.Source;                  ITexture texture = textureObject.As<ITexture>();                    int texId = Global<TextureManager>.Instance.GetTextureName(texture.PathName);                    if (texId != -1)                  {                      rs.RenderMode |= RenderMode.Textured;                      rs.TextureName = texId;                        TextureInfo info = Global<TextureManager>.Instance.GetTextureInfo(texId);                      if (info.Components == 4 &&                          AlphaBlend)                      {                          rs.RenderMode |= RenderMode.Alpha;                      }                  }              }
Magic Number,Sce.Atf.Atgi,Shader,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\Shader.cs,ParseCustomAttributesForLightingInfo,The following statement contains a magic number: if (attributes != null)              {                  float[] alpha = null;                    foreach (DomNode attribute in attributes)                  {                      string name = attribute.GetAttribute(Schema.customDataAttributeType.nameAttribute) as string;                      if (name == "color")                      {                          float[] diffuse = new float[3];                          PopulateCustomAttributeValueArray(                              attribute.GetAttribute(Schema.customDataAttributeType.valueAttribute) as string' diffuse);                          rs.SolidColor = new Vec4F(diffuse[0]' diffuse[1]' diffuse[2]' 1.0f);                      }                      else if (name == "specularColor")                      {                          float[] specular = new float[3];                          PopulateCustomAttributeValueArray(                              attribute.GetAttribute(Schema.customDataAttributeType.valueAttribute) as string' specular);                      }                      else if (name == "transparency")                      {                          alpha = new float[3];                          PopulateCustomAttributeValueArray(                              attribute.GetAttribute(Schema.customDataAttributeType.valueAttribute) as string' alpha);                      }                  }                    if (alpha != null)                  {                      Vec4F color = new Vec4F(rs.SolidColor);                      color[3] = alpha[0];                      rs.SolidColor = color;                      rs.RenderMode |= RenderMode.Alpha;                  }              }
Magic Number,Sce.Atf.Atgi,Shader,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\Shader.cs,ParseCustomAttributesForLightingInfo,The following statement contains a magic number: if (attributes != null)              {                  float[] alpha = null;                    foreach (DomNode attribute in attributes)                  {                      string name = attribute.GetAttribute(Schema.customDataAttributeType.nameAttribute) as string;                      if (name == "color")                      {                          float[] diffuse = new float[3];                          PopulateCustomAttributeValueArray(                              attribute.GetAttribute(Schema.customDataAttributeType.valueAttribute) as string' diffuse);                          rs.SolidColor = new Vec4F(diffuse[0]' diffuse[1]' diffuse[2]' 1.0f);                      }                      else if (name == "specularColor")                      {                          float[] specular = new float[3];                          PopulateCustomAttributeValueArray(                              attribute.GetAttribute(Schema.customDataAttributeType.valueAttribute) as string' specular);                      }                      else if (name == "transparency")                      {                          alpha = new float[3];                          PopulateCustomAttributeValueArray(                              attribute.GetAttribute(Schema.customDataAttributeType.valueAttribute) as string' alpha);                      }                  }                    if (alpha != null)                  {                      Vec4F color = new Vec4F(rs.SolidColor);                      color[3] = alpha[0];                      rs.SolidColor = color;                      rs.RenderMode |= RenderMode.Alpha;                  }              }
Magic Number,Sce.Atf.Atgi,Shader,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\Shader.cs,ParseCustomAttributesForLightingInfo,The following statement contains a magic number: if (attributes != null)              {                  float[] alpha = null;                    foreach (DomNode attribute in attributes)                  {                      string name = attribute.GetAttribute(Schema.customDataAttributeType.nameAttribute) as string;                      if (name == "color")                      {                          float[] diffuse = new float[3];                          PopulateCustomAttributeValueArray(                              attribute.GetAttribute(Schema.customDataAttributeType.valueAttribute) as string' diffuse);                          rs.SolidColor = new Vec4F(diffuse[0]' diffuse[1]' diffuse[2]' 1.0f);                      }                      else if (name == "specularColor")                      {                          float[] specular = new float[3];                          PopulateCustomAttributeValueArray(                              attribute.GetAttribute(Schema.customDataAttributeType.valueAttribute) as string' specular);                      }                      else if (name == "transparency")                      {                          alpha = new float[3];                          PopulateCustomAttributeValueArray(                              attribute.GetAttribute(Schema.customDataAttributeType.valueAttribute) as string' alpha);                      }                  }                    if (alpha != null)                  {                      Vec4F color = new Vec4F(rs.SolidColor);                      color[3] = alpha[0];                      rs.SolidColor = color;                      rs.RenderMode |= RenderMode.Alpha;                  }              }
Magic Number,Sce.Atf.Atgi,Shader,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\Shader.cs,ParseCustomAttributesForLightingInfo,The following statement contains a magic number: if (attributes != null)              {                  float[] alpha = null;                    foreach (DomNode attribute in attributes)                  {                      string name = attribute.GetAttribute(Schema.customDataAttributeType.nameAttribute) as string;                      if (name == "color")                      {                          float[] diffuse = new float[3];                          PopulateCustomAttributeValueArray(                              attribute.GetAttribute(Schema.customDataAttributeType.valueAttribute) as string' diffuse);                          rs.SolidColor = new Vec4F(diffuse[0]' diffuse[1]' diffuse[2]' 1.0f);                      }                      else if (name == "specularColor")                      {                          float[] specular = new float[3];                          PopulateCustomAttributeValueArray(                              attribute.GetAttribute(Schema.customDataAttributeType.valueAttribute) as string' specular);                      }                      else if (name == "transparency")                      {                          alpha = new float[3];                          PopulateCustomAttributeValueArray(                              attribute.GetAttribute(Schema.customDataAttributeType.valueAttribute) as string' alpha);                      }                  }                    if (alpha != null)                  {                      Vec4F color = new Vec4F(rs.SolidColor);                      color[3] = alpha[0];                      rs.SolidColor = color;                      rs.RenderMode |= RenderMode.Alpha;                  }              }
Magic Number,Sce.Atf.Atgi,Shader,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\Shader.cs,ParseCustomAttributesForLightingInfo,The following statement contains a magic number: if (attributes != null)              {                  float[] alpha = null;                    foreach (DomNode attribute in attributes)                  {                      string name = attribute.GetAttribute(Schema.customDataAttributeType.nameAttribute) as string;                      if (name == "color")                      {                          float[] diffuse = new float[3];                          PopulateCustomAttributeValueArray(                              attribute.GetAttribute(Schema.customDataAttributeType.valueAttribute) as string' diffuse);                          rs.SolidColor = new Vec4F(diffuse[0]' diffuse[1]' diffuse[2]' 1.0f);                      }                      else if (name == "specularColor")                      {                          float[] specular = new float[3];                          PopulateCustomAttributeValueArray(                              attribute.GetAttribute(Schema.customDataAttributeType.valueAttribute) as string' specular);                      }                      else if (name == "transparency")                      {                          alpha = new float[3];                          PopulateCustomAttributeValueArray(                              attribute.GetAttribute(Schema.customDataAttributeType.valueAttribute) as string' alpha);                      }                  }                    if (alpha != null)                  {                      Vec4F color = new Vec4F(rs.SolidColor);                      color[3] = alpha[0];                      rs.SolidColor = color;                      rs.RenderMode |= RenderMode.Alpha;                  }              }
Magic Number,Sce.Atf.Atgi,Shader,C:\repos\SonyWWS_ATF\Framework\Atf.Atgi\Shader.cs,ParseBindingsForTexture,The following statement contains a magic number: foreach (IBinding binding in Bindings)              {                  if (binding.BindingType == "texture")                  {                      DomNode textureObject = (DomNode)binding.Source;                      ITexture texture = textureObject.As<ITexture>();                        string texUri = texture.PathName;                        int texName = Global<TextureManager>.Instance.GetTextureName(texUri);                                            if (texName != -1)                      {                          rs.RenderMode |= RenderMode.Textured;                          rs.TextureName = texName;                            TextureInfo info = Global<TextureManager>.Instance.GetTextureInfo(texName);                          if (info.Components == 4)                              rs.RenderMode |= RenderMode.Alpha;                      }                        return;                  }              }
