Implementation smell,Namespace,Class,File,Method,Description
Long Method,Sce.Atf.Dom,DomXmlReader,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Dom\DomXmlReader.cs,ReadElement,The method has 132 lines of code.
Long Method,Sce.Atf.Dom,AttributeType,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Dom\AttributeType.cs,Convert,The method has 161 lines of code.
Long Method,Sce.Atf.Dom,XmlSchemaTypeLoader,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Dom\XmlSchemaTypeLoader.cs,Load,The method has 155 lines of code.
Long Method,Sce.Atf.VectorMath,Box,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Box.cs,Intersects,The method has 137 lines of code.
Long Method,Sce.Atf.VectorMath,EulerAngles3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\EulerAngles.cs,CalculateMatrix,The method has 112 lines of code.
Complex Method,Sce.Atf,AtfVersion,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\AtfVersion.cs,GetVersion,Cyclomatic complexity of the method is 10
Complex Method,Sce.Atf,FileMoveService,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\FileMoveService.cs,MoveFile,Cyclomatic complexity of the method is 8
Complex Method,Sce.Atf,DependencySystem<T>,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\DependencySystem.cs,GetInvalidDependents,Cyclomatic complexity of the method is 12
Complex Method,Sce.Atf,Selection<T>,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Selection.cs,SetRange,Cyclomatic complexity of the method is 9
Complex Method,Sce.Atf,StringUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\StringUtil.cs,CompareNaturalOrder,Cyclomatic complexity of the method is 8
Complex Method,Sce.Atf,PathUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\PathUtil.cs,IsValidPath,Cyclomatic complexity of the method is 9
Complex Method,Sce.Atf,XmlStringLocalizer,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\XmlStringLocalizer.cs,AddLocalizedStrings,Cyclomatic complexity of the method is 9
Complex Method,Sce.Atf.Dom,TransactionReporter,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Dom\TransactionReporter.cs,OnChildRemoved,Cyclomatic complexity of the method is 10
Complex Method,Sce.Atf.Dom,DomXmlWriter,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Dom\DomXmlWriter.cs,WriteStartElement,Cyclomatic complexity of the method is 13
Complex Method,Sce.Atf.Dom,DomXmlWriter,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Dom\DomXmlWriter.cs,WriteAttributes,Cyclomatic complexity of the method is 12
Complex Method,Sce.Atf.Dom,DomXmlReader,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Dom\DomXmlReader.cs,ReadElement,Cyclomatic complexity of the method is 27
Complex Method,Sce.Atf.Dom,DomNodeSerializer,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Dom\DomNodeSerializer.cs,Serialize,Cyclomatic complexity of the method is 9
Complex Method,Sce.Atf.Dom,DomNodeSerializer,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Dom\DomNodeSerializer.cs,Deserialize,Cyclomatic complexity of the method is 9
Complex Method,Sce.Atf.Dom,NumericMaxRule,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Dom\NumericMaxRule.cs,Validate,Cyclomatic complexity of the method is 11
Complex Method,Sce.Atf.Dom,NumericMinRule,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Dom\NumericMinRule.cs,Validate,Cyclomatic complexity of the method is 11
Complex Method,Sce.Atf.Dom,UniquePathIdValidator,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Dom\UniquePathIdValidator.cs,RenameNodes,Cyclomatic complexity of the method is 8
Complex Method,Sce.Atf.Dom,AttributeType,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Dom\AttributeType.cs,AttributeType,Cyclomatic complexity of the method is 19
Complex Method,Sce.Atf.Dom,AttributeType,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Dom\AttributeType.cs,GetDefault,Cyclomatic complexity of the method is 28
Complex Method,Sce.Atf.Dom,AttributeType,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Dom\AttributeType.cs,AreEqual,Cyclomatic complexity of the method is 15
Complex Method,Sce.Atf.Dom,AttributeType,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Dom\AttributeType.cs,Clone,Cyclomatic complexity of the method is 15
Complex Method,Sce.Atf.Dom,AttributeType,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Dom\AttributeType.cs,Convert,Cyclomatic complexity of the method is 21
Complex Method,Sce.Atf.Dom,AttributeType,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Dom\AttributeType.cs,Convert,Cyclomatic complexity of the method is 53
Complex Method,Sce.Atf.Dom,DomNodeType,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Dom\DomNodeType.cs,FreezeExtensions,Cyclomatic complexity of the method is 8
Complex Method,Sce.Atf.Dom,XmlSchemaTypeLoader,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Dom\XmlSchemaTypeLoader.cs,Load,Cyclomatic complexity of the method is 31
Complex Method,Sce.Atf.Dom,XmlSchemaTypeLoader,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Dom\XmlSchemaTypeLoader.cs,GetAttributeType,Cyclomatic complexity of the method is 21
Complex Method,Sce.Atf.Dom,XmlSchemaTypeLoader,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Dom\XmlSchemaTypeLoader.cs,GetNodeType,Cyclomatic complexity of the method is 10
Complex Method,Sce.Atf.Dom,XmlSchemaTypeLoader,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Dom\XmlSchemaTypeLoader.cs,WalkParticle,Cyclomatic complexity of the method is 22
Complex Method,Sce.Atf.Dom,XmlSchemaTypeLoader,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Dom\XmlSchemaTypeLoader.cs,GetLocalTypeName,Cyclomatic complexity of the method is 8
Complex Method,Sce.Atf.Dom,XmlSchemaTypeLoader,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Dom\XmlSchemaTypeLoader.cs,GetRules,Cyclomatic complexity of the method is 13
Complex Method,Sce.Atf.Dom,XmlSchemaTypeLoader,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Dom\XmlSchemaTypeLoader.cs,MergeRedefinedTypeAnnotations,Cyclomatic complexity of the method is 8
Complex Method,Sce.Atf.VectorMath,BezierSpline,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\BezierSpline.cs,BuildCurves,Cyclomatic complexity of the method is 9
Complex Method,Sce.Atf.VectorMath,Box,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Box.cs,Intersects,Cyclomatic complexity of the method is 24
Complex Method,Sce.Atf.VectorMath,EulerAngles3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\EulerAngles.cs,CalculateMatrix,Cyclomatic complexity of the method is 25
Complex Method,Sce.Atf.VectorMath,Frustum,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Frustum.cs,ContainsPolygon,Cyclomatic complexity of the method is 9
Complex Method,Sce.Atf.VectorMath,Polygon3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Polygon3F.cs,Triangulate,Cyclomatic complexity of the method is 13
Complex Method,Sce.Atf.VectorMath,Ray3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Ray3F.cs,IntersectPolygon,Cyclomatic complexity of the method is 12
Long Parameter List,Sce.Atf,LiveConnectService,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\LiveConnectService.cs,GotMessage,The method has 6 parameters. Parameters: status' senderId' groupId' messageId' data' context
Long Parameter List,Sce.Atf,IntSet,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\IntSet.cs,FindRanges,The method has 5 parameters. Parameters: begin' end' rangeBeginIndex' rangeEndIndex' newRangeIndex
Long Parameter List,Sce.Atf,MathUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\MathUtil.cs,CatmullRomInterp,The method has 5 parameters. Parameters: p1' p2' p3' p4' t
Long Parameter List,Sce.Atf,MathUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\MathUtil.cs,HermiteInterp,The method has 5 parameters. Parameters: p1' tan1' p2' tan2' t
Long Parameter List,Sce.Atf,MathUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\MathUtil.cs,Remap,The method has 5 parameters. Parameters: value' min' max' newMin' newMax
Long Parameter List,Sce.Atf,PathUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\PathUtil.cs,PathRelativePathTo,The method has 5 parameters. Parameters: path' from' attrFrom' to' attrTo
Long Parameter List,Sce.Atf,Shell32,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Shell32.cs,SHGetFileInfo,The method has 5 parameters. Parameters: pszPath' dwFileAttributes' psfi' cbFileInfo' uFlags
Long Parameter List,Sce.Atf.Dom,DomNodeType,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Dom\DomNodeType.cs,DomNodeType,The method has 5 parameters. Parameters: name' baseType' attributes' children' extensions
Long Parameter List,Sce.Atf.VectorMath,Frustum,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Frustum.cs,Frustum,The method has 6 parameters. Parameters: right' left' top' bottom' near' far
Long Parameter List,Sce.Atf.VectorMath,Frustum,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Frustum.cs,SetOrtho,The method has 6 parameters. Parameters: right' left' top' bottom' near' far
Long Parameter List,Sce.Atf.VectorMath,Matrix3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix3F.cs,Matrix3F,The method has 9 parameters. Parameters: m00' m01' m02' m10' m11' m12' m20' m21' m22
Long Parameter List,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,Matrix4F,The method has 16 parameters. Parameters: m11' m12' m13' m14' m21' m22' m23' m24' m31' m32' m33' m34' m41' m42' m43' m44
Long Parameter List,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,Set,The method has 16 parameters. Parameters: m11' m12' m13' m14' m21' m22' m23' m24' m31' m32' m33' m34' m41' m42' m43' m44
Long Parameter List,Sce.Atf.VectorMath,Ray2F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Ray2F.cs,SlabIntersect,The method has 6 parameters. Parameters: direction' origin' min' max' tmin' tmax
Long Parameter List,Sce.Atf.VectorMath,Ray3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Ray3F.cs,IntersectPolygon,The method has 5 parameters. Parameters: vertices' intersectionPoint' nearestVert' normal' backFaceCull
Long Identifier,Sce.Atf.Adaptation,DomBindingAdapterObject,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Adaptation\BindingAdapterObject.cs,DomBindingAdapterObject,The length of the parameter enableNodeTypeExtensionOptimisation is 35.
Long Identifier,Sce.Atf.Dom,PropertyDescriptorQueryable,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\SearchAndReplace\DomNodePropertyPredicate.cs,,The length of the parameter m_propertyDescriptorCollection is 30.
Long Statement,Sce.Atf,LiveConnectService,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\LiveConnectService.cs,CommonInit,The length of the statement  "                    msg = "The Live Connect Service failed to initialize because Bonjour is either not installed or the Windows service' 'Bonjour Service'' is not running.".Localize(); " is 164.
Long Statement,Sce.Atf,LinqQueryPredicate,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\SearchAndReplace\LinqQueryPredicate.cs,AddStringSearchExpression,The length of the statement  "            MethodCallExpression regexMatchTest = Expression.Call(typeof(Regex)' "Match"' null' new Expression[3] { sourceStringExp' patternStringExp' optionsExp }); " is 153.
Long Statement,Sce.Atf,XmlStringLocalizer,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\XmlStringLocalizer.cs,AddLocalizedStrings,The length of the statement  "                throw new InvalidOperationException("Conflicting translations in a localized XML file: \n\t" + string.Join("\n\t"' duplicates)); " is 128.
Long Statement,Sce.Atf.Adaptation,BindingAdapterObject,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Adaptation\BindingAdapterObject.cs,GetDescriptorsFromBaseTypes,The length of the statement  "                        System.Diagnostics.Debug.WriteLine("Binding Adapter Warning: Ignoring multiple base types with the same simple name: " + baseType.Name); " is 136.
Long Statement,Sce.Atf.Dom,TransactionReporter,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Dom\TransactionReporter.cs,OnAttributeChanged,The length of the statement  "                var domNodeAndAttributeInfo = new Pair<DomNode' AttributeInfo>(attributeEventArgs.DomNode' attributeEventArgs.AttributeInfo); " is 125.
Long Statement,Sce.Atf.Dom,DomNodeNamePredicate,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\SearchAndReplace\DomNodeNamePredicate.cs,GetDomNodeProperties,The length of the statement  "            ICustomTypeDescriptor iCustomTypeDescriptor = node.GetAdapter(typeof(CustomTypeDescriptorNodeAdapter)) as ICustomTypeDescriptor; " is 128.
Long Statement,Sce.Atf.Dom,DomNodeNamePredicate,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\SearchAndReplace\DomNodeNamePredicate.cs,Replace,The length of the statement  "                queryMatch.SetValue(Regex.Replace(value' StringToMatch' replaceValue.ToString()' RegexOptions.IgnoreCase | RegexOptions.CultureInvariant)); " is 139.
Long Statement,Sce.Atf.Dom,DomNodePropertyPredicate,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\SearchAndReplace\DomNodePropertyPredicate.cs,GetQueryableElements,The length of the statement  "                ICustomTypeDescriptor iCustomTypeDescriptor = m_domNode.GetAdapter(typeof(ICustomTypeDescriptor)) as ICustomTypeDescriptor; " is 123.
Long Statement,Sce.Atf.Dom,DataValidator,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Dom\DataValidator.cs,OnChildInserted,The length of the statement  "                m_childChanges.Add(new Pair<Pair<DomNode' DomNode>' ChildInfo>(new Pair<DomNode' DomNode>(e.Parent' e.Child)' e.ChildInfo)); " is 124.
Long Statement,Sce.Atf.Dom,DataValidator,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Dom\DataValidator.cs,OnChildRemoved,The length of the statement  "                m_childChanges.Add(new Pair<Pair<DomNode' DomNode>' ChildInfo>(new Pair<DomNode' DomNode>(e.Parent' e.Child)' e.ChildInfo)); " is 124.
Long Statement,Sce.Atf.Dom,XmlSchemaTypeLoader,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Dom\XmlSchemaTypeLoader.cs,WalkParticle,The length of the statement  "                            throw new InvalidOperationException(string.Format("Schema element {0} cannot have both a default value and a fixed value"' element.QualifiedName)); " is 147.
Long Statement,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,Invert,The length of the statement  "            float m11 = m.M23 * m.M34 * m.M42 - m.M24 * m.M33 * m.M42 + m.M24 * m.M32 * m.M43 - m.M22 * m.M34 * m.M43 - m.M23 * m.M32 * m.M44 + m.M22 * m.M33 * m.M44; " is 154.
Long Statement,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,Invert,The length of the statement  "            float m12 = m.M14 * m.M33 * m.M42 - m.M13 * m.M34 * m.M42 - m.M14 * m.M32 * m.M43 + m.M12 * m.M34 * m.M43 + m.M13 * m.M32 * m.M44 - m.M12 * m.M33 * m.M44; " is 154.
Long Statement,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,Invert,The length of the statement  "            float m13 = m.M13 * m.M24 * m.M42 - m.M14 * m.M23 * m.M42 + m.M14 * m.M22 * m.M43 - m.M12 * m.M24 * m.M43 - m.M13 * m.M22 * m.M44 + m.M12 * m.M23 * m.M44; " is 154.
Long Statement,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,Invert,The length of the statement  "            float m14 = m.M14 * m.M23 * m.M32 - m.M13 * m.M24 * m.M32 - m.M14 * m.M22 * m.M33 + m.M12 * m.M24 * m.M33 + m.M13 * m.M22 * m.M34 - m.M12 * m.M23 * m.M34; " is 154.
Long Statement,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,Invert,The length of the statement  "            float m21 = m.M24 * m.M33 * m.M41 - m.M23 * m.M34 * m.M41 - m.M24 * m.M31 * m.M43 + m.M21 * m.M34 * m.M43 + m.M23 * m.M31 * m.M44 - m.M21 * m.M33 * m.M44; " is 154.
Long Statement,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,Invert,The length of the statement  "            float m22 = m.M13 * m.M34 * m.M41 - m.M14 * m.M33 * m.M41 + m.M14 * m.M31 * m.M43 - m.M11 * m.M34 * m.M43 - m.M13 * m.M31 * m.M44 + m.M11 * m.M33 * m.M44; " is 154.
Long Statement,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,Invert,The length of the statement  "            float m23 = m.M14 * m.M23 * m.M41 - m.M13 * m.M24 * m.M41 - m.M14 * m.M21 * m.M43 + m.M11 * m.M24 * m.M43 + m.M13 * m.M21 * m.M44 - m.M11 * m.M23 * m.M44; " is 154.
Long Statement,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,Invert,The length of the statement  "            float m24 = m.M13 * m.M24 * m.M31 - m.M14 * m.M23 * m.M31 + m.M14 * m.M21 * m.M33 - m.M11 * m.M24 * m.M33 - m.M13 * m.M21 * m.M34 + m.M11 * m.M23 * m.M34; " is 154.
Long Statement,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,Invert,The length of the statement  "            float m31 = m.M22 * m.M34 * m.M41 - m.M24 * m.M32 * m.M41 + m.M24 * m.M31 * m.M42 - m.M21 * m.M34 * m.M42 - m.M22 * m.M31 * m.M44 + m.M21 * m.M32 * m.M44; " is 154.
Long Statement,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,Invert,The length of the statement  "            float m32 = m.M14 * m.M32 * m.M41 - m.M12 * m.M34 * m.M41 - m.M14 * m.M31 * m.M42 + m.M11 * m.M34 * m.M42 + m.M12 * m.M31 * m.M44 - m.M11 * m.M32 * m.M44; " is 154.
Long Statement,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,Invert,The length of the statement  "            float m33 = m.M12 * m.M24 * m.M41 - m.M14 * m.M22 * m.M41 + m.M14 * m.M21 * m.M42 - m.M11 * m.M24 * m.M42 - m.M12 * m.M21 * m.M44 + m.M11 * m.M22 * m.M44; " is 154.
Long Statement,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,Invert,The length of the statement  "            float m34 = m.M14 * m.M22 * m.M31 - m.M12 * m.M24 * m.M31 - m.M14 * m.M21 * m.M32 + m.M11 * m.M24 * m.M32 + m.M12 * m.M21 * m.M34 - m.M11 * m.M22 * m.M34; " is 154.
Long Statement,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,Invert,The length of the statement  "            float m41 = m.M23 * m.M32 * m.M41 - m.M22 * m.M33 * m.M41 - m.M23 * m.M31 * m.M42 + m.M21 * m.M33 * m.M42 + m.M22 * m.M31 * m.M43 - m.M21 * m.M32 * m.M43; " is 154.
Long Statement,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,Invert,The length of the statement  "            float m42 = m.M12 * m.M33 * m.M41 - m.M13 * m.M32 * m.M41 + m.M13 * m.M31 * m.M42 - m.M11 * m.M33 * m.M42 - m.M12 * m.M31 * m.M43 + m.M11 * m.M32 * m.M43; " is 154.
Long Statement,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,Invert,The length of the statement  "            float m43 = m.M13 * m.M22 * m.M41 - m.M12 * m.M23 * m.M41 - m.M13 * m.M21 * m.M42 + m.M11 * m.M23 * m.M42 + m.M12 * m.M21 * m.M43 - m.M11 * m.M22 * m.M43; " is 154.
Long Statement,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,Invert,The length of the statement  "            float m44 = m.M12 * m.M23 * m.M31 - m.M13 * m.M22 * m.M31 + m.M13 * m.M21 * m.M32 - m.M11 * m.M23 * m.M32 - m.M12 * m.M21 * m.M33 + m.M11 * m.M22 * m.M33; " is 154.
Complex Conditional,Sce.Atf,UniqueNamer,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\UniqueNamer.cs,UniqueNamer,The conditional expression  "suffixSeparator != ' ' &&                  suffixSeparator != '-' &&                  suffixSeparator != '_' &&                  suffixSeparator != '/' &&                  suffixSeparator != '\\' &&                  suffixSeparator != '('"  is complex.
Complex Conditional,Sce.Atf.VectorMath,Polygon3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Polygon3F.cs,IsEar,The conditional expression  "v.IsReflex && v != v0 && v != v1 && v != v2"  is complex.
Virtual Method Call from Constructor,Sce.Atf.Dom,DomNode,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Dom\DomNode.cs,DomNode,The constructor "DomNode" calls a virtual method "Create".
Empty Catch Block,Sce.Atf,FileMoveService,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\FileMoveService.cs,ClearDirectory,The method has an empty catch block.
Empty Catch Block,Sce.Atf,FileMoveService,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\FileMoveService.cs,ClearDirectory,The method has an empty catch block.
Magic Number,Sce.Atf,NumericUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\NumericUtil.cs,IsZero,The following statement contains a magic number: return Math.Abs(value) < 2.2204460492503131E-15;
Magic Number,Sce.Atf,NumericUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\NumericUtil.cs,AreClose,The following statement contains a magic number: double a = (Math.Abs(left) + Math.Abs(right) + 10.0) * 2.2204460492503131E-16;
Magic Number,Sce.Atf,NumericUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\NumericUtil.cs,AreClose,The following statement contains a magic number: double a = (Math.Abs(left) + Math.Abs(right) + 10.0) * 2.2204460492503131E-16;
Magic Number,Sce.Atf,LinqQueryPredicate,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\SearchAndReplace\LinqQueryPredicate.cs,AddStringSearchExpression,The following statement contains a magic number: MethodCallExpression regexMatchTest = Expression.Call(typeof(Regex)' "Match"' null' new Expression[3] { sourceStringExp' patternStringExp' optionsExp });
Magic Number,Sce.Atf,EnumUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\EnumUtil.cs,ParseFlagDefinitions,The following statement contains a magic number: flagValue *= 2;
Magic Number,Sce.Atf,IntSet,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\IntSet.cs,FindRange,The following statement contains a magic number: int middle = (low + high) / 2;
Magic Number,Sce.Atf,MathUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\MathUtil.cs,LogBase2,The following statement contains a magic number: int bitFieldRight16 = bitField >> 16;
Magic Number,Sce.Atf,MathUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\MathUtil.cs,LogBase2,The following statement contains a magic number: int bitFieldRight24 = bitField >> 24;
Magic Number,Sce.Atf,MathUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\MathUtil.cs,LogBase2,The following statement contains a magic number: int bitFieldRight8 = bitField >> 8;
Magic Number,Sce.Atf,MathUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\MathUtil.cs,LogBase2,The following statement contains a magic number: result = 24 + s_logBase2Table[bitFieldRight24];
Magic Number,Sce.Atf,MathUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\MathUtil.cs,Snap,The following statement contains a magic number: const double MinFraction = 1.0 / (double.MaxValue / 2);
Magic Number,Sce.Atf,MathUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\MathUtil.cs,Snap,The following statement contains a magic number: result = Math.Floor(result + 0.5);
Magic Number,Sce.Atf,MathUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\MathUtil.cs,Snap,The following statement contains a magic number: result = x + step / 2;
Magic Number,Sce.Atf,MathUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\MathUtil.cs,CatmullRomInterp,The following statement contains a magic number: float n = (2f * p2) +                         (p3-p1) * t +                         (2f * p1 - 5f * p2 + 4f * p3 - p4) * t2 +                        (3f * p2 - p1 + p4 - 3f * p3)  * t3;
Magic Number,Sce.Atf,MathUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\MathUtil.cs,CatmullRomInterp,The following statement contains a magic number: float n = (2f * p2) +                         (p3-p1) * t +                         (2f * p1 - 5f * p2 + 4f * p3 - p4) * t2 +                        (3f * p2 - p1 + p4 - 3f * p3)  * t3;
Magic Number,Sce.Atf,MathUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\MathUtil.cs,CatmullRomInterp,The following statement contains a magic number: float n = (2f * p2) +                         (p3-p1) * t +                         (2f * p1 - 5f * p2 + 4f * p3 - p4) * t2 +                        (3f * p2 - p1 + p4 - 3f * p3)  * t3;
Magic Number,Sce.Atf,MathUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\MathUtil.cs,CatmullRomInterp,The following statement contains a magic number: float n = (2f * p2) +                         (p3-p1) * t +                         (2f * p1 - 5f * p2 + 4f * p3 - p4) * t2 +                        (3f * p2 - p1 + p4 - 3f * p3)  * t3;
Magic Number,Sce.Atf,MathUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\MathUtil.cs,CatmullRomInterp,The following statement contains a magic number: float n = (2f * p2) +                         (p3-p1) * t +                         (2f * p1 - 5f * p2 + 4f * p3 - p4) * t2 +                        (3f * p2 - p1 + p4 - 3f * p3)  * t3;
Magic Number,Sce.Atf,MathUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\MathUtil.cs,CatmullRomInterp,The following statement contains a magic number: float n = (2f * p2) +                         (p3-p1) * t +                         (2f * p1 - 5f * p2 + 4f * p3 - p4) * t2 +                        (3f * p2 - p1 + p4 - 3f * p3)  * t3;
Magic Number,Sce.Atf,MathUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\MathUtil.cs,CatmullRomInterp,The following statement contains a magic number: return (n * 0.5f);
Magic Number,Sce.Atf,MathUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\MathUtil.cs,HermiteInterp,The following statement contains a magic number: return                  (2 * tCubed - 3 * tSquared + 1) * p1 +                  (tCubed - 2 * tSquared + t) * tan1 +                  (-2 * tCubed + 3 * tSquared) * p2 +                  (tCubed - tSquared) * tan2;
Magic Number,Sce.Atf,MathUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\MathUtil.cs,HermiteInterp,The following statement contains a magic number: return                  (2 * tCubed - 3 * tSquared + 1) * p1 +                  (tCubed - 2 * tSquared + t) * tan1 +                  (-2 * tCubed + 3 * tSquared) * p2 +                  (tCubed - tSquared) * tan2;
Magic Number,Sce.Atf,MathUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\MathUtil.cs,HermiteInterp,The following statement contains a magic number: return                  (2 * tCubed - 3 * tSquared + 1) * p1 +                  (tCubed - 2 * tSquared + t) * tan1 +                  (-2 * tCubed + 3 * tSquared) * p2 +                  (tCubed - tSquared) * tan2;
Magic Number,Sce.Atf,MathUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\MathUtil.cs,HermiteInterp,The following statement contains a magic number: return                  (2 * tCubed - 3 * tSquared + 1) * p1 +                  (tCubed - 2 * tSquared + t) * tan1 +                  (-2 * tCubed + 3 * tSquared) * p2 +                  (tCubed - tSquared) * tan2;
Magic Number,Sce.Atf,MathUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\MathUtil.cs,HermiteInterp,The following statement contains a magic number: return                  (2 * tCubed - 3 * tSquared + 1) * p1 +                  (tCubed - 2 * tSquared + t) * tan1 +                  (-2 * tCubed + 3 * tSquared) * p2 +                  (tCubed - tSquared) * tan2;
Magic Number,Sce.Atf,MathUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\MathUtil.cs,CubicSplineInterp,The following statement contains a magic number: float e = (t * t) * (3f - 2f * t);
Magic Number,Sce.Atf,MathUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\MathUtil.cs,CubicSplineInterp,The following statement contains a magic number: float e = (t * t) * (3f - 2f * t);
Magic Number,Sce.Atf,MathUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\MathUtil.cs,MathUtil,The following statement contains a magic number: s_logBase2Table = new byte[256];
Magic Number,Sce.Atf,MathUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\MathUtil.cs,MathUtil,The following statement contains a magic number: s_logBase2Table[i] = (byte)(1 + s_logBase2Table[i / 2]);
Magic Number,Sce.Atf,MathUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\MathUtil.cs,MathUtil,The following statement contains a magic number: i < 256
Magic Number,Sce.Atf,Kernel32,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Kernel32.cs,GetPhysicalMemoryMB,The following statement contains a magic number: return (int)(memoryStatus.ullTotalPhys / (1024 * 1024));
Magic Number,Sce.Atf,Kernel32,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Kernel32.cs,GetPhysicalMemoryMB,The following statement contains a magic number: return (int)(memoryStatus.ullTotalPhys / (1024 * 1024));
Magic Number,Sce.Atf,PathUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\PathUtil.cs,GetCanonicalPath,The following statement contains a magic number: string drive = path.Substring(0' 2);
Magic Number,Sce.Atf,PathUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\PathUtil.cs,GetCanonicalPath,The following statement contains a magic number: StringBuilder sb = new StringBuilder(256);
Magic Number,Sce.Atf,PathUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\PathUtil.cs,GetCanonicalPath,The following statement contains a magic number: Kernel32.QueryDosDeviceW(drive' sb' 256);
Magic Number,Sce.Atf,PathUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\PathUtil.cs,GetCanonicalPath,The following statement contains a magic number: path = device.Substring(cSubstDrivePrefix.Length) + path.Substring(2);
Magic Number,Sce.Atf.Dom,AttributeType,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Dom\AttributeType.cs,GetUnescapedChar,The following statement contains a magic number: index += 2;
Magic Number,Sce.Atf.Dom,StringIndex,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Dom\DomNodeType.cs,StringIndex,The following statement contains a magic number: m_strings.Length >= 2
Magic Number,Sce.Atf.Dom,StringIndex,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Dom\DomNodeType.cs,FindIndex,The following statement contains a magic number: int mid = (lo + hi) / 2;
Magic Number,Sce.Atf.Dom,XmlSchemaTypeLoader,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Dom\XmlSchemaTypeLoader.cs,Load,The following statement contains a magic number: int idx = depth - 2;
Magic Number,Sce.Atf.Rendering,DomNodeUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Rendering\DomNodeUtil.cs,GetSphere,The following statement contains a magic number: s.Center = new Vec3F(value[0]' value[1]' value[2]);
Magic Number,Sce.Atf.Rendering,DomNodeUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Rendering\DomNodeUtil.cs,GetSphere,The following statement contains a magic number: s.Radius = value[3];
Magic Number,Sce.Atf.Rendering,DomNodeUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Rendering\DomNodeUtil.cs,SetSphere,The following statement contains a magic number: float[] value = new float[4];
Magic Number,Sce.Atf.Rendering,DomNodeUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Rendering\DomNodeUtil.cs,SetSphere,The following statement contains a magic number: value[2] = s.Center.Z;
Magic Number,Sce.Atf.Rendering,DomNodeUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Rendering\DomNodeUtil.cs,SetSphere,The following statement contains a magic number: value[3] = s.Radius;
Magic Number,Sce.Atf.Rendering,DomNodeUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Rendering\DomNodeUtil.cs,GetBox,The following statement contains a magic number: return new Box(new Vec3F(value[0]' value[1]' value[2])'                                 new Vec3F(value[3]' value[4]' value[5]));
Magic Number,Sce.Atf.Rendering,DomNodeUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Rendering\DomNodeUtil.cs,GetBox,The following statement contains a magic number: return new Box(new Vec3F(value[0]' value[1]' value[2])'                                 new Vec3F(value[3]' value[4]' value[5]));
Magic Number,Sce.Atf.Rendering,DomNodeUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Rendering\DomNodeUtil.cs,GetBox,The following statement contains a magic number: return new Box(new Vec3F(value[0]' value[1]' value[2])'                                 new Vec3F(value[3]' value[4]' value[5]));
Magic Number,Sce.Atf.Rendering,DomNodeUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Rendering\DomNodeUtil.cs,GetBox,The following statement contains a magic number: return new Box(new Vec3F(value[0]' value[1]' value[2])'                                 new Vec3F(value[3]' value[4]' value[5]));
Magic Number,Sce.Atf.Rendering,DomNodeUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Rendering\DomNodeUtil.cs,SetBox,The following statement contains a magic number: float[] value = new float[6];
Magic Number,Sce.Atf.Rendering,DomNodeUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Rendering\DomNodeUtil.cs,SetBox,The following statement contains a magic number: value[2] = b.Min.Z;
Magic Number,Sce.Atf.Rendering,DomNodeUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Rendering\DomNodeUtil.cs,SetBox,The following statement contains a magic number: value[3] = b.Max.X;
Magic Number,Sce.Atf.Rendering,DomNodeUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Rendering\DomNodeUtil.cs,SetBox,The following statement contains a magic number: value[4] = b.Max.Y;
Magic Number,Sce.Atf.Rendering,DomNodeUtil,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Rendering\DomNodeUtil.cs,SetBox,The following statement contains a magic number: value[5] = b.Max.Z;
Magic Number,Sce.Atf.VectorMath,AngleAxisF,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\AngleAxisF.cs,Set,The following statement contains a magic number: double sin = 0.5 * mag;
Magic Number,Sce.Atf.VectorMath,AngleAxisF,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\AngleAxisF.cs,Set,The following statement contains a magic number: double cos = 0.5 * (m.M11 + m.M22 + m.M33 - 1.0);
Magic Number,Sce.Atf.VectorMath,AngleAxisF,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\AngleAxisF.cs,Set,The following statement contains a magic number: Angle = (float)(2.0 * Math.Atan2(mag' q.W));
Magic Number,Sce.Atf.VectorMath,AngleAxisF,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\AngleAxisF.cs,GetHashCode,The following statement contains a magic number: bits = 31 * bits + Angle.GetHashCode();
Magic Number,Sce.Atf.VectorMath,AngleAxisF,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\AngleAxisF.cs,GetHashCode,The following statement contains a magic number: bits = 31 * bits + Axis.GetHashCode();
Magic Number,Sce.Atf.VectorMath,AngleAxisF,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\AngleAxisF.cs,GetHashCode,The following statement contains a magic number: return (int)(bits ^ (bits >> 32));
Magic Number,Sce.Atf.VectorMath,BezierCurve,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\BezierCurve.cs,BezierCurve,The following statement contains a magic number: m_coefficients = new Vec3F[3];
Magic Number,Sce.Atf.VectorMath,BezierCurve,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\BezierCurve.cs,BezierCurve,The following statement contains a magic number: m_coefficients[2] = 3.0f * (m_ctrlPoints[1] - m_ctrlPoints[0]);
Magic Number,Sce.Atf.VectorMath,BezierCurve,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\BezierCurve.cs,BezierCurve,The following statement contains a magic number: m_coefficients[2] = 3.0f * (m_ctrlPoints[1] - m_ctrlPoints[0]);
Magic Number,Sce.Atf.VectorMath,BezierCurve,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\BezierCurve.cs,BezierCurve,The following statement contains a magic number: m_coefficients[1] = 3.0f * (m_ctrlPoints[2] - m_ctrlPoints[1]) - m_coefficients[2];
Magic Number,Sce.Atf.VectorMath,BezierCurve,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\BezierCurve.cs,BezierCurve,The following statement contains a magic number: m_coefficients[1] = 3.0f * (m_ctrlPoints[2] - m_ctrlPoints[1]) - m_coefficients[2];
Magic Number,Sce.Atf.VectorMath,BezierCurve,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\BezierCurve.cs,BezierCurve,The following statement contains a magic number: m_coefficients[1] = 3.0f * (m_ctrlPoints[2] - m_ctrlPoints[1]) - m_coefficients[2];
Magic Number,Sce.Atf.VectorMath,BezierCurve,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\BezierCurve.cs,BezierCurve,The following statement contains a magic number: m_coefficients[0] = m_ctrlPoints[3] - m_ctrlPoints[0] - m_coefficients[2] - m_coefficients[1];
Magic Number,Sce.Atf.VectorMath,BezierCurve,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\BezierCurve.cs,BezierCurve,The following statement contains a magic number: m_coefficients[0] = m_ctrlPoints[3] - m_ctrlPoints[0] - m_coefficients[2] - m_coefficients[1];
Magic Number,Sce.Atf.VectorMath,BezierCurve,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\BezierCurve.cs,Evaluate,The following statement contains a magic number: result = (m_coefficients[0] * tCubed) + (m_coefficients[1] * tSquared) + (m_coefficients[2] * t) + m_ctrlPoints[0];
Magic Number,Sce.Atf.VectorMath,BezierCurve,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\BezierCurve.cs,ToString,The following statement contains a magic number: return String.Format(                  "{1}{0} {2}{0} {3}{0} {4}{0} {5}{0} {6}{0} {7}{0} {8}{0} {9}{0} {10}{0} {11}{0} {12}"'                  listSeparator'                  m_ctrlPoints[0].X.ToString(format' formatProvider)'                  m_ctrlPoints[0].Y.ToString(format' formatProvider)'                  m_ctrlPoints[0].Z.ToString(format' formatProvider)'                  m_ctrlPoints[1].X.ToString(format' formatProvider)'                  m_ctrlPoints[1].Y.ToString(format' formatProvider)'                  m_ctrlPoints[1].Z.ToString(format' formatProvider)'                  m_ctrlPoints[2].X.ToString(format' formatProvider)'                  m_ctrlPoints[2].Y.ToString(format' formatProvider)'                  m_ctrlPoints[2].Z.ToString(format' formatProvider)'                  m_ctrlPoints[3].X.ToString(format' formatProvider)'                  m_ctrlPoints[3].Y.ToString(format' formatProvider)'                  m_ctrlPoints[3].Z.ToString(format' formatProvider));
Magic Number,Sce.Atf.VectorMath,BezierCurve,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\BezierCurve.cs,ToString,The following statement contains a magic number: return String.Format(                  "{1}{0} {2}{0} {3}{0} {4}{0} {5}{0} {6}{0} {7}{0} {8}{0} {9}{0} {10}{0} {11}{0} {12}"'                  listSeparator'                  m_ctrlPoints[0].X.ToString(format' formatProvider)'                  m_ctrlPoints[0].Y.ToString(format' formatProvider)'                  m_ctrlPoints[0].Z.ToString(format' formatProvider)'                  m_ctrlPoints[1].X.ToString(format' formatProvider)'                  m_ctrlPoints[1].Y.ToString(format' formatProvider)'                  m_ctrlPoints[1].Z.ToString(format' formatProvider)'                  m_ctrlPoints[2].X.ToString(format' formatProvider)'                  m_ctrlPoints[2].Y.ToString(format' formatProvider)'                  m_ctrlPoints[2].Z.ToString(format' formatProvider)'                  m_ctrlPoints[3].X.ToString(format' formatProvider)'                  m_ctrlPoints[3].Y.ToString(format' formatProvider)'                  m_ctrlPoints[3].Z.ToString(format' formatProvider));
Magic Number,Sce.Atf.VectorMath,BezierCurve,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\BezierCurve.cs,ToString,The following statement contains a magic number: return String.Format(                  "{1}{0} {2}{0} {3}{0} {4}{0} {5}{0} {6}{0} {7}{0} {8}{0} {9}{0} {10}{0} {11}{0} {12}"'                  listSeparator'                  m_ctrlPoints[0].X.ToString(format' formatProvider)'                  m_ctrlPoints[0].Y.ToString(format' formatProvider)'                  m_ctrlPoints[0].Z.ToString(format' formatProvider)'                  m_ctrlPoints[1].X.ToString(format' formatProvider)'                  m_ctrlPoints[1].Y.ToString(format' formatProvider)'                  m_ctrlPoints[1].Z.ToString(format' formatProvider)'                  m_ctrlPoints[2].X.ToString(format' formatProvider)'                  m_ctrlPoints[2].Y.ToString(format' formatProvider)'                  m_ctrlPoints[2].Z.ToString(format' formatProvider)'                  m_ctrlPoints[3].X.ToString(format' formatProvider)'                  m_ctrlPoints[3].Y.ToString(format' formatProvider)'                  m_ctrlPoints[3].Z.ToString(format' formatProvider));
Magic Number,Sce.Atf.VectorMath,BezierCurve,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\BezierCurve.cs,ToString,The following statement contains a magic number: return String.Format(                  "{1}{0} {2}{0} {3}{0} {4}{0} {5}{0} {6}{0} {7}{0} {8}{0} {9}{0} {10}{0} {11}{0} {12}"'                  listSeparator'                  m_ctrlPoints[0].X.ToString(format' formatProvider)'                  m_ctrlPoints[0].Y.ToString(format' formatProvider)'                  m_ctrlPoints[0].Z.ToString(format' formatProvider)'                  m_ctrlPoints[1].X.ToString(format' formatProvider)'                  m_ctrlPoints[1].Y.ToString(format' formatProvider)'                  m_ctrlPoints[1].Z.ToString(format' formatProvider)'                  m_ctrlPoints[2].X.ToString(format' formatProvider)'                  m_ctrlPoints[2].Y.ToString(format' formatProvider)'                  m_ctrlPoints[2].Z.ToString(format' formatProvider)'                  m_ctrlPoints[3].X.ToString(format' formatProvider)'                  m_ctrlPoints[3].Y.ToString(format' formatProvider)'                  m_ctrlPoints[3].Z.ToString(format' formatProvider));
Magic Number,Sce.Atf.VectorMath,BezierCurve,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\BezierCurve.cs,ToString,The following statement contains a magic number: return String.Format(                  "{1}{0} {2}{0} {3}{0} {4}{0} {5}{0} {6}{0} {7}{0} {8}{0} {9}{0} {10}{0} {11}{0} {12}"'                  listSeparator'                  m_ctrlPoints[0].X.ToString(format' formatProvider)'                  m_ctrlPoints[0].Y.ToString(format' formatProvider)'                  m_ctrlPoints[0].Z.ToString(format' formatProvider)'                  m_ctrlPoints[1].X.ToString(format' formatProvider)'                  m_ctrlPoints[1].Y.ToString(format' formatProvider)'                  m_ctrlPoints[1].Z.ToString(format' formatProvider)'                  m_ctrlPoints[2].X.ToString(format' formatProvider)'                  m_ctrlPoints[2].Y.ToString(format' formatProvider)'                  m_ctrlPoints[2].Z.ToString(format' formatProvider)'                  m_ctrlPoints[3].X.ToString(format' formatProvider)'                  m_ctrlPoints[3].Y.ToString(format' formatProvider)'                  m_ctrlPoints[3].Z.ToString(format' formatProvider));
Magic Number,Sce.Atf.VectorMath,BezierCurve,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\BezierCurve.cs,ToString,The following statement contains a magic number: return String.Format(                  "{1}{0} {2}{0} {3}{0} {4}{0} {5}{0} {6}{0} {7}{0} {8}{0} {9}{0} {10}{0} {11}{0} {12}"'                  listSeparator'                  m_ctrlPoints[0].X.ToString(format' formatProvider)'                  m_ctrlPoints[0].Y.ToString(format' formatProvider)'                  m_ctrlPoints[0].Z.ToString(format' formatProvider)'                  m_ctrlPoints[1].X.ToString(format' formatProvider)'                  m_ctrlPoints[1].Y.ToString(format' formatProvider)'                  m_ctrlPoints[1].Z.ToString(format' formatProvider)'                  m_ctrlPoints[2].X.ToString(format' formatProvider)'                  m_ctrlPoints[2].Y.ToString(format' formatProvider)'                  m_ctrlPoints[2].Z.ToString(format' formatProvider)'                  m_ctrlPoints[3].X.ToString(format' formatProvider)'                  m_ctrlPoints[3].Y.ToString(format' formatProvider)'                  m_ctrlPoints[3].Z.ToString(format' formatProvider));
Magic Number,Sce.Atf.VectorMath,BezierSpline,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\BezierSpline.cs,BuildCurves,The following statement contains a magic number: Count == 2
Magic Number,Sce.Atf.VectorMath,BezierSpline,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\BezierSpline.cs,BuildInitialCurveFrom2Points,The following statement contains a magic number: Vec3F[] points = new Vec3F[4];
Magic Number,Sce.Atf.VectorMath,BezierSpline,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\BezierSpline.cs,BuildInitialCurveFrom2Points,The following statement contains a magic number: points[3] = this[1].Position;
Magic Number,Sce.Atf.VectorMath,BezierSpline,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\BezierSpline.cs,BuildInitialCurveFrom2Points,The following statement contains a magic number: points[1] = points[0] + (points[3] - points[0]) * 0.333f;
Magic Number,Sce.Atf.VectorMath,BezierSpline,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\BezierSpline.cs,BuildInitialCurveFrom2Points,The following statement contains a magic number: points[1] = points[0] + (points[3] - points[0]) * 0.333f;
Magic Number,Sce.Atf.VectorMath,BezierSpline,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\BezierSpline.cs,BuildInitialCurveFrom2Points,The following statement contains a magic number: points[2] = points[0] + (points[3] - points[0]) * 0.666f;
Magic Number,Sce.Atf.VectorMath,BezierSpline,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\BezierSpline.cs,BuildInitialCurveFrom2Points,The following statement contains a magic number: points[2] = points[0] + (points[3] - points[0]) * 0.666f;
Magic Number,Sce.Atf.VectorMath,BezierSpline,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\BezierSpline.cs,BuildInitialCurveFrom2Points,The following statement contains a magic number: points[2] = points[0] + (points[3] - points[0]) * 0.666f;
Magic Number,Sce.Atf.VectorMath,BezierSpline,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\BezierSpline.cs,CalcTangent,The following statement contains a magic number: normal.Length < 0.1e-5f
Magic Number,Sce.Atf.VectorMath,BezierSpline,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\BezierSpline.cs,CalcEndTangents,The following statement contains a magic number: float t = (0.5f * v1Len) / Vec3F.Dot(p2Tangent' u1);
Magic Number,Sce.Atf.VectorMath,BezierSpline,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\BezierSpline.cs,CalcPointTangents,The following statement contains a magic number: tangents[n - 1] = CalcTangent(this[n - 2].Position' this[n - 1].Position' this[0].Position);
Magic Number,Sce.Atf.VectorMath,Box,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Box.cs,Extend,The following statement contains a magic number: Max.Z = Min.Z = v[2];
Magic Number,Sce.Atf.VectorMath,Box,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Box.cs,Extend,The following statement contains a magic number: Min.Z = Math.Min(Min.Z' v[i + 2]);
Magic Number,Sce.Atf.VectorMath,Box,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Box.cs,Extend,The following statement contains a magic number: Max.Z = Math.Max(Max.Z' v[i + 2]);
Magic Number,Sce.Atf.VectorMath,Box,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Box.cs,Extend,The following statement contains a magic number: v.Count >= 3
Magic Number,Sce.Atf.VectorMath,Box,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Box.cs,Transform,The following statement contains a magic number: float[] newMax = new[] { newMin[0]' newMin[1]' newMin[2] };
Magic Number,Sce.Atf.VectorMath,Box,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Box.cs,Transform,The following statement contains a magic number: a = mArray[j * 4 + i] * oldMin[j];
Magic Number,Sce.Atf.VectorMath,Box,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Box.cs,Transform,The following statement contains a magic number: b = mArray[j * 4 + i] * oldMax[j];
Magic Number,Sce.Atf.VectorMath,Box,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Box.cs,Transform,The following statement contains a magic number: j < 3
Magic Number,Sce.Atf.VectorMath,Box,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Box.cs,Transform,The following statement contains a magic number: i < 3
Magic Number,Sce.Atf.VectorMath,Box,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Box.cs,Transform,The following statement contains a magic number: Min.Z = newMin[2];
Magic Number,Sce.Atf.VectorMath,Box,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Box.cs,Transform,The following statement contains a magic number: Max.Z = newMax[2];
Magic Number,Sce.Atf.VectorMath,Box,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Box.cs,ToArray,The following statement contains a magic number: float[] temp = new float[6];
Magic Number,Sce.Atf.VectorMath,Box,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Box.cs,ToArray,The following statement contains a magic number: temp[2] = Min.Z;
Magic Number,Sce.Atf.VectorMath,Box,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Box.cs,ToArray,The following statement contains a magic number: temp[3] = Max.X;
Magic Number,Sce.Atf.VectorMath,Box,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Box.cs,ToArray,The following statement contains a magic number: temp[4] = Max.Y;
Magic Number,Sce.Atf.VectorMath,Box,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Box.cs,ToArray,The following statement contains a magic number: temp[5] = Max.Z;
Magic Number,Sce.Atf.VectorMath,Box,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Box.cs,Intersects,The following statement contains a magic number: Vec3F rayDelta = ray.Direction * 100000f;
Magic Number,Sce.Atf.VectorMath,Box2F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Box2F.cs,Extend,The following statement contains a magic number: v.Length >= 2
Magic Number,Sce.Atf.VectorMath,CircleF,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\CircleF.cs,CircleF,The following statement contains a magic number: o1 *= 0.5f;
Magic Number,Sce.Atf.VectorMath,CircleF,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\CircleF.cs,CircleF,The following statement contains a magic number: o2 *= 0.5f;
Magic Number,Sce.Atf.VectorMath,CircleF,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\CircleF.cs,Project,The following statement contains a magic number: length > 0.000001f * c.Radius
Magic Number,Sce.Atf.VectorMath,CircleF,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\CircleF.cs,Intersect,The following statement contains a magic number: const double EPS = 1.0e-6;
Magic Number,Sce.Atf.VectorMath,CircleF,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\CircleF.cs,Intersect,The following statement contains a magic number: double cos = (d * d + c1.Radius * c1.Radius - c2.Radius * c2.Radius) / (2 * c1.Radius * d);
Magic Number,Sce.Atf.VectorMath,Frustum,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Frustum.cs,Frustum,The following statement contains a magic number: m_planes = new Plane3F[6];
Magic Number,Sce.Atf.VectorMath,Frustum,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Frustum.cs,Set,The following statement contains a magic number: i < 6
Magic Number,Sce.Atf.VectorMath,Frustum,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Frustum.cs,SetPerspective,The following statement contains a magic number: float tanY = (float)Math.Tan((double)fovY / 2.0);
Magic Number,Sce.Atf.VectorMath,Frustum,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Frustum.cs,Contains,The following statement contains a magic number: i < 6
Magic Number,Sce.Atf.VectorMath,Frustum,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Frustum.cs,Contains,The following statement contains a magic number: Vec3F center = (box.Min + box.Max) * 0.5f;
Magic Number,Sce.Atf.VectorMath,Frustum,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Frustum.cs,Contains,The following statement contains a magic number: Vec3F center_to_max = (box.Max - box.Min) * 0.5f;
Magic Number,Sce.Atf.VectorMath,Frustum,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Frustum.cs,Contains,The following statement contains a magic number: i < 6
Magic Number,Sce.Atf.VectorMath,Frustum,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Frustum.cs,ContainsPolygon,The following statement contains a magic number: p < 6
Magic Number,Sce.Atf.VectorMath,Frustum,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Frustum.cs,Transform,The following statement contains a magic number: i < 6
Magic Number,Sce.Atf.VectorMath,Frustum,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Frustum.cs,ClipPerspective,The following statement contains a magic number: float h = near * (float)Math.Tan(FovY / 2.0f) * 2.0f;
Magic Number,Sce.Atf.VectorMath,Frustum,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Frustum.cs,ClipPerspective,The following statement contains a magic number: float h = near * (float)Math.Tan(FovY / 2.0f) * 2.0f;
Magic Number,Sce.Atf.VectorMath,Frustum,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Frustum.cs,ClipPerspective,The following statement contains a magic number: float w = near * (float)Math.Tan(FovX / 2.0f) * 2.0f;
Magic Number,Sce.Atf.VectorMath,Frustum,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Frustum.cs,ClipPerspective,The following statement contains a magic number: float w = near * (float)Math.Tan(FovX / 2.0f) * 2.0f;
Magic Number,Sce.Atf.VectorMath,Frustum,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Frustum.cs,ClipOrtho,The following statement contains a magic number: float viewHeight = Top * 2.0f;
Magic Number,Sce.Atf.VectorMath,Frustum,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Frustum.cs,ClipOrtho,The following statement contains a magic number: float viewWidth = Right * 2.0f;
Magic Number,Sce.Atf.VectorMath,Matrix3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix3F.cs,Matrix3F,The following statement contains a magic number: M13 = m[2];
Magic Number,Sce.Atf.VectorMath,Matrix3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix3F.cs,Matrix3F,The following statement contains a magic number: M21 = m[3];
Magic Number,Sce.Atf.VectorMath,Matrix3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix3F.cs,Matrix3F,The following statement contains a magic number: M22 = m[4];
Magic Number,Sce.Atf.VectorMath,Matrix3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix3F.cs,Matrix3F,The following statement contains a magic number: M23 = m[5];
Magic Number,Sce.Atf.VectorMath,Matrix3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix3F.cs,Matrix3F,The following statement contains a magic number: M31 = m[6];
Magic Number,Sce.Atf.VectorMath,Matrix3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix3F.cs,Matrix3F,The following statement contains a magic number: M32 = m[7];
Magic Number,Sce.Atf.VectorMath,Matrix3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix3F.cs,Matrix3F,The following statement contains a magic number: M33 = m[8];
Magic Number,Sce.Atf.VectorMath,Matrix3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix3F.cs,Set,The following statement contains a magic number: M11 = (float)(1.0 - 2.0 * q.Y * q.Y - 2.0 * q.Z * q.Z);
Magic Number,Sce.Atf.VectorMath,Matrix3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix3F.cs,Set,The following statement contains a magic number: M11 = (float)(1.0 - 2.0 * q.Y * q.Y - 2.0 * q.Z * q.Z);
Magic Number,Sce.Atf.VectorMath,Matrix3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix3F.cs,Set,The following statement contains a magic number: M21 = (float)(2.0 * (q.X * q.Y + q.W * q.Z));
Magic Number,Sce.Atf.VectorMath,Matrix3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix3F.cs,Set,The following statement contains a magic number: M31 = (float)(2.0 * (q.X * q.Z - q.W * q.Y));
Magic Number,Sce.Atf.VectorMath,Matrix3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix3F.cs,Set,The following statement contains a magic number: M12 = (float)(2.0 * (q.X * q.Y - q.W * q.Z));
Magic Number,Sce.Atf.VectorMath,Matrix3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix3F.cs,Set,The following statement contains a magic number: M22 = (float)(1.0 - 2.0 * q.X * q.X - 2.0 * q.Z * q.Z);
Magic Number,Sce.Atf.VectorMath,Matrix3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix3F.cs,Set,The following statement contains a magic number: M22 = (float)(1.0 - 2.0 * q.X * q.X - 2.0 * q.Z * q.Z);
Magic Number,Sce.Atf.VectorMath,Matrix3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix3F.cs,Set,The following statement contains a magic number: M32 = (float)(2.0 * (q.Y * q.Z + q.W * q.X));
Magic Number,Sce.Atf.VectorMath,Matrix3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix3F.cs,Set,The following statement contains a magic number: M13 = (float)(2.0 * (q.X * q.Z + q.W * q.Y));
Magic Number,Sce.Atf.VectorMath,Matrix3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix3F.cs,Set,The following statement contains a magic number: M23 = (float)(2.0 * (q.Y * q.Z - q.W * q.X));
Magic Number,Sce.Atf.VectorMath,Matrix3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix3F.cs,Set,The following statement contains a magic number: M33 = (float)(1.0 - 2.0 * q.X * q.X - 2.0 * q.Y * q.Y);
Magic Number,Sce.Atf.VectorMath,Matrix3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix3F.cs,Set,The following statement contains a magic number: M33 = (float)(1.0 - 2.0 * q.X * q.X - 2.0 * q.Y * q.Y);
Magic Number,Sce.Atf.VectorMath,Matrix3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix3F.cs,GetEulerAngles,The following statement contains a magic number: cY > 1e-6f
Magic Number,Sce.Atf.VectorMath,Matrix3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix3F.cs,GetHashCode,The following statement contains a magic number: bits = 31 * bits + M11.GetHashCode();
Magic Number,Sce.Atf.VectorMath,Matrix3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix3F.cs,GetHashCode,The following statement contains a magic number: bits = 31 * bits + M12.GetHashCode();
Magic Number,Sce.Atf.VectorMath,Matrix3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix3F.cs,GetHashCode,The following statement contains a magic number: bits = 31 * bits + M13.GetHashCode();
Magic Number,Sce.Atf.VectorMath,Matrix3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix3F.cs,GetHashCode,The following statement contains a magic number: bits = 31 * bits + M21.GetHashCode();
Magic Number,Sce.Atf.VectorMath,Matrix3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix3F.cs,GetHashCode,The following statement contains a magic number: bits = 31 * bits + M22.GetHashCode();
Magic Number,Sce.Atf.VectorMath,Matrix3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix3F.cs,GetHashCode,The following statement contains a magic number: bits = 31 * bits + M23.GetHashCode();
Magic Number,Sce.Atf.VectorMath,Matrix3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix3F.cs,GetHashCode,The following statement contains a magic number: bits = 31 * bits + M31.GetHashCode();
Magic Number,Sce.Atf.VectorMath,Matrix3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix3F.cs,GetHashCode,The following statement contains a magic number: bits = 31 * bits + M32.GetHashCode();
Magic Number,Sce.Atf.VectorMath,Matrix3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix3F.cs,GetHashCode,The following statement contains a magic number: bits = 31 * bits + M33.GetHashCode();
Magic Number,Sce.Atf.VectorMath,Matrix3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix3F.cs,GetHashCode,The following statement contains a magic number: return (int)(bits ^ (bits >> 32));
Magic Number,Sce.Atf.VectorMath,Matrix3x2F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix3x2F.cs,CreateRotation,The following statement contains a magic number: double radians = (angle * 3.1415926535897931) / 180.0;
Magic Number,Sce.Atf.VectorMath,Matrix3x2F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix3x2F.cs,CreateRotation,The following statement contains a magic number: double radians = (angle * 3.1415926535897931) / 180.0;
Magic Number,Sce.Atf.VectorMath,Matrix3x2F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix3x2F.cs,CreateRotation,The following statement contains a magic number: double radians = (angle * 3.1415926535897931) / 180.0;
Magic Number,Sce.Atf.VectorMath,Matrix3x2F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix3x2F.cs,CreateRotation,The following statement contains a magic number: double radians = (angle * 3.1415926535897931) / 180.0;
Magic Number,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,Set,The following statement contains a magic number: M13 = m[2];
Magic Number,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,Set,The following statement contains a magic number: M14 = m[3];
Magic Number,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,Set,The following statement contains a magic number: M21 = m[4];
Magic Number,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,Set,The following statement contains a magic number: M22 = m[5];
Magic Number,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,Set,The following statement contains a magic number: M23 = m[6];
Magic Number,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,Set,The following statement contains a magic number: M24 = m[7];
Magic Number,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,Set,The following statement contains a magic number: M31 = m[8];
Magic Number,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,Set,The following statement contains a magic number: M32 = m[9];
Magic Number,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,Set,The following statement contains a magic number: M33 = m[10];
Magic Number,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,Set,The following statement contains a magic number: M34 = m[11];
Magic Number,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,Set,The following statement contains a magic number: M41 = m[12];
Magic Number,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,Set,The following statement contains a magic number: M42 = m[13];
Magic Number,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,Set,The following statement contains a magic number: M43 = m[14];
Magic Number,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,Set,The following statement contains a magic number: M44 = m[15];
Magic Number,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,Set,The following statement contains a magic number: M11 = (float)(1.0 - 2.0 * q.Y * q.Y - 2.0 * q.Z * q.Z);
Magic Number,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,Set,The following statement contains a magic number: M11 = (float)(1.0 - 2.0 * q.Y * q.Y - 2.0 * q.Z * q.Z);
Magic Number,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,Set,The following statement contains a magic number: M21 = (float)(2.0 * (q.X * q.Y + q.W * q.Z));
Magic Number,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,Set,The following statement contains a magic number: M31 = (float)(2.0 * (q.X * q.Z - q.W * q.Y));
Magic Number,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,Set,The following statement contains a magic number: M12 = (float)(2.0 * (q.X * q.Y - q.W * q.Z));
Magic Number,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,Set,The following statement contains a magic number: M22 = (float)(1.0 - 2.0 * q.X * q.X - 2.0 * q.Z * q.Z);
Magic Number,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,Set,The following statement contains a magic number: M22 = (float)(1.0 - 2.0 * q.X * q.X - 2.0 * q.Z * q.Z);
Magic Number,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,Set,The following statement contains a magic number: M32 = (float)(2.0 * (q.Y * q.Z + q.W * q.X));
Magic Number,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,Set,The following statement contains a magic number: M13 = (float)(2.0 * (q.X * q.Z + q.W * q.Y));
Magic Number,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,Set,The following statement contains a magic number: M23 = (float)(2.0 * (q.Y * q.Z - q.W * q.X));
Magic Number,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,Set,The following statement contains a magic number: M33 = (float)(1.0 - 2.0 * q.X * q.X - 2.0 * q.Y * q.Y);
Magic Number,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,Set,The following statement contains a magic number: M33 = (float)(1.0 - 2.0 * q.X * q.X - 2.0 * q.Y * q.Y);
Magic Number,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,GetEulerAngles,The following statement contains a magic number: cY > 1e-6f
Magic Number,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,GetHashCode,The following statement contains a magic number: bits = 31 * bits + M11.GetHashCode();
Magic Number,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,GetHashCode,The following statement contains a magic number: bits = 31 * bits + M12.GetHashCode();
Magic Number,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,GetHashCode,The following statement contains a magic number: bits = 31 * bits + M13.GetHashCode();
Magic Number,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,GetHashCode,The following statement contains a magic number: bits = 31 * bits + M14.GetHashCode();
Magic Number,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,GetHashCode,The following statement contains a magic number: bits = 31 * bits + M21.GetHashCode();
Magic Number,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,GetHashCode,The following statement contains a magic number: bits = 31 * bits + M22.GetHashCode();
Magic Number,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,GetHashCode,The following statement contains a magic number: bits = 31 * bits + M23.GetHashCode();
Magic Number,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,GetHashCode,The following statement contains a magic number: bits = 31 * bits + M24.GetHashCode();
Magic Number,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,GetHashCode,The following statement contains a magic number: bits = 31 * bits + M31.GetHashCode();
Magic Number,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,GetHashCode,The following statement contains a magic number: bits = 31 * bits + M32.GetHashCode();
Magic Number,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,GetHashCode,The following statement contains a magic number: bits = 31 * bits + M33.GetHashCode();
Magic Number,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,GetHashCode,The following statement contains a magic number: bits = 31 * bits + M34.GetHashCode();
Magic Number,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,GetHashCode,The following statement contains a magic number: bits = 31 * bits + M41.GetHashCode();
Magic Number,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,GetHashCode,The following statement contains a magic number: bits = 31 * bits + M42.GetHashCode();
Magic Number,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,GetHashCode,The following statement contains a magic number: bits = 31 * bits + M43.GetHashCode();
Magic Number,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,GetHashCode,The following statement contains a magic number: bits = 31 * bits + M44.GetHashCode();
Magic Number,Sce.Atf.VectorMath,Matrix4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Matrix4F.cs,GetHashCode,The following statement contains a magic number: return (int)(bits ^ (bits >> 32));
Magic Number,Sce.Atf.VectorMath,Polygon3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Polygon3F.cs,Triangulate,The following statement contains a magic number: polygon.Count < 3
Magic Number,Sce.Atf.VectorMath,Polygon3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Polygon3F.cs,Triangulate,The following statement contains a magic number: polygon.Count == 3
Magic Number,Sce.Atf.VectorMath,Polygon3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Polygon3F.cs,Triangulate,The following statement contains a magic number: polygon.Count == 3
Magic Number,Sce.Atf.VectorMath,QuatF,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\QuatF.cs,QuatF,The following statement contains a magic number: coords.Length < 4
Magic Number,Sce.Atf.VectorMath,QuatF,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\QuatF.cs,QuatF,The following statement contains a magic number: Z = coords[2];
Magic Number,Sce.Atf.VectorMath,QuatF,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\QuatF.cs,QuatF,The following statement contains a magic number: W = coords[3];
Magic Number,Sce.Atf.VectorMath,QuatF,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\QuatF.cs,Set,The following statement contains a magic number: double ww = 0.25 * (m.M11 + m.M22 + m.M33 + 1.0f);
Magic Number,Sce.Atf.VectorMath,QuatF,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\QuatF.cs,Set,The following statement contains a magic number: ww = 0.25 / wwSqrt;
Magic Number,Sce.Atf.VectorMath,QuatF,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\QuatF.cs,Set,The following statement contains a magic number: ww = -0.5 * (m.M22 + m.M33);
Magic Number,Sce.Atf.VectorMath,QuatF,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\QuatF.cs,Set,The following statement contains a magic number: ww = 0.5 / wwSqrt;
Magic Number,Sce.Atf.VectorMath,QuatF,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\QuatF.cs,Set,The following statement contains a magic number: ww = 0.5 * (1.0f - m.M33);
Magic Number,Sce.Atf.VectorMath,QuatF,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\QuatF.cs,Set,The following statement contains a magic number: Z = (float)(m.M32 / (2.0 * wwSqrt));
Magic Number,Sce.Atf.VectorMath,QuatF,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\QuatF.cs,GetHashCode,The following statement contains a magic number: bits = 31 * bits + W.GetHashCode();
Magic Number,Sce.Atf.VectorMath,QuatF,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\QuatF.cs,GetHashCode,The following statement contains a magic number: bits = 31 * bits + X.GetHashCode();
Magic Number,Sce.Atf.VectorMath,QuatF,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\QuatF.cs,GetHashCode,The following statement contains a magic number: bits = 31 * bits + Y.GetHashCode();
Magic Number,Sce.Atf.VectorMath,QuatF,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\QuatF.cs,GetHashCode,The following statement contains a magic number: bits = 31 * bits + Z.GetHashCode();
Magic Number,Sce.Atf.VectorMath,QuatF,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\QuatF.cs,GetHashCode,The following statement contains a magic number: return (int)(bits ^ (bits >> 32));
Magic Number,Sce.Atf.VectorMath,Ray2F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Ray2F.cs,Intersect,The following statement contains a magic number: Math.Abs(denom) < 0.000001f
Magic Number,Sce.Atf.VectorMath,Ray3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Ray3F.cs,IntersectPlane,The following statement contains a magic number: Math.Abs(cos) > 0.0001f
Magic Number,Sce.Atf.VectorMath,Sphere3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Sphere3F.cs,Extend,The following statement contains a magic number: Sphere3F tmp = new Sphere3F((box.Max + box.Min) / 2.0f'                  (box.Max - box.Min).Length / 2.0f);
Magic Number,Sce.Atf.VectorMath,Sphere3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Sphere3F.cs,Extend,The following statement contains a magic number: Sphere3F tmp = new Sphere3F((box.Max + box.Min) / 2.0f'                  (box.Max - box.Min).Length / 2.0f);
Magic Number,Sce.Atf.VectorMath,Vec2F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Vec2F.cs,Vec2F,The following statement contains a magic number: coords.Length < 2
Magic Number,Sce.Atf.VectorMath,Vec2F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Vec2F.cs,Set,The following statement contains a magic number: coords.Length < 2
Magic Number,Sce.Atf.VectorMath,Vec2F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Vec2F.cs,Normalize,The following statement contains a magic number: len < 0.000001f
Magic Number,Sce.Atf.VectorMath,Vec2F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Vec2F.cs,GetHashCode,The following statement contains a magic number: bits = 31 * bits + X.GetHashCode();
Magic Number,Sce.Atf.VectorMath,Vec2F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Vec2F.cs,GetHashCode,The following statement contains a magic number: bits = 31 * bits + Y.GetHashCode();
Magic Number,Sce.Atf.VectorMath,Vec2F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Vec2F.cs,GetHashCode,The following statement contains a magic number: return (int)(bits ^ (bits >> 32));
Magic Number,Sce.Atf.VectorMath,Vec3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Vec3F.cs,Vec3F,The following statement contains a magic number: Z = coords[2];
Magic Number,Sce.Atf.VectorMath,Vec3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Vec3F.cs,Set,The following statement contains a magic number: Z = coords[2];
Magic Number,Sce.Atf.VectorMath,Vec3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Vec3F.cs,Normalize,The following statement contains a magic number: len < 0.000001f
Magic Number,Sce.Atf.VectorMath,Vec3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Vec3F.cs,Parse,The following statement contains a magic number: components.Length != 3
Magic Number,Sce.Atf.VectorMath,Vec3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Vec3F.cs,Parse,The following statement contains a magic number: i < 3
Magic Number,Sce.Atf.VectorMath,Vec3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Vec3F.cs,GetHashCode,The following statement contains a magic number: bits = 31 * bits + X.GetHashCode();
Magic Number,Sce.Atf.VectorMath,Vec3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Vec3F.cs,GetHashCode,The following statement contains a magic number: bits = 31 * bits + Y.GetHashCode();
Magic Number,Sce.Atf.VectorMath,Vec3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Vec3F.cs,GetHashCode,The following statement contains a magic number: bits = 31 * bits + Z.GetHashCode();
Magic Number,Sce.Atf.VectorMath,Vec3F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Vec3F.cs,GetHashCode,The following statement contains a magic number: return (int)(bits ^ (bits >> 32));
Magic Number,Sce.Atf.VectorMath,Vec4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Vec4F.cs,Vec4F,The following statement contains a magic number: coords.Length < 4
Magic Number,Sce.Atf.VectorMath,Vec4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Vec4F.cs,Vec4F,The following statement contains a magic number: Z = coords[2];
Magic Number,Sce.Atf.VectorMath,Vec4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Vec4F.cs,Vec4F,The following statement contains a magic number: W = coords[3];
Magic Number,Sce.Atf.VectorMath,Vec4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Vec4F.cs,Set,The following statement contains a magic number: coords.Length < 4
Magic Number,Sce.Atf.VectorMath,Vec4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Vec4F.cs,Set,The following statement contains a magic number: Z = coords[2];
Magic Number,Sce.Atf.VectorMath,Vec4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Vec4F.cs,Set,The following statement contains a magic number: W = coords[3];
Magic Number,Sce.Atf.VectorMath,Vec4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Vec4F.cs,Normalize,The following statement contains a magic number: len < 0.000001f
Magic Number,Sce.Atf.VectorMath,Vec4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Vec4F.cs,GetHashCode,The following statement contains a magic number: bits = 31 * bits + X.GetHashCode();
Magic Number,Sce.Atf.VectorMath,Vec4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Vec4F.cs,GetHashCode,The following statement contains a magic number: bits = 31 * bits + Y.GetHashCode();
Magic Number,Sce.Atf.VectorMath,Vec4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Vec4F.cs,GetHashCode,The following statement contains a magic number: bits = 31 * bits + Z.GetHashCode();
Magic Number,Sce.Atf.VectorMath,Vec4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Vec4F.cs,GetHashCode,The following statement contains a magic number: bits = 31 * bits + W.GetHashCode();
Magic Number,Sce.Atf.VectorMath,Vec4F,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\VectorMath\Vec4F.cs,GetHashCode,The following statement contains a magic number: return (int)(bits ^ (bits >> 32));
Missing Default,Sce.Atf,Outputs,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Outputs.cs,Write,The following switch statement is missing a default case: switch (type)              {                  case OutputMessageType.Error:                      s_atfOutputTracer.TraceEvent(TraceEventType.Error' id' message);                      break;                  case OutputMessageType.Warning:                      s_atfOutputTracer.TraceEvent(TraceEventType.Warning' id' message);                      break;                  case OutputMessageType.Info:                      s_atfOutputTracer.TraceEvent(TraceEventType.Information' id' message);                      break;              }
Missing Default,Sce.Atf.Dom,AttributeType,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Dom\AttributeType.cs,GetDefault,The following switch statement is missing a default case: switch (m_type)              {                  case AttributeTypes.Boolean:                      result = s_defaultBoolean;                      break;                    case AttributeTypes.BooleanArray:                      result = GetDefaultArrayValue<Boolean>();                      break;                    case AttributeTypes.Int8:                      result = s_defaultInt8;                      break;                    case AttributeTypes.Int8Array:                      result = GetDefaultArrayValue<SByte>();                      break;                    case AttributeTypes.UInt8:                      result = s_defaultUInt8;                      break;                    case AttributeTypes.UInt8Array:                      result = GetDefaultArrayValue<Byte>();                      break;                    case AttributeTypes.Int16:                      result = s_defaultInt16;                      break;                    case AttributeTypes.Int16Array:                      result = GetDefaultArrayValue<Int16>();                      break;                    case AttributeTypes.UInt16:                      result = s_defaultUInt16;                      break;                    case AttributeTypes.UInt16Array:                      result = GetDefaultArrayValue<UInt16>();                      break;                    case AttributeTypes.Int32:                      result = s_defaultInt32;                      break;                    case AttributeTypes.Int32Array:                      result = GetDefaultArrayValue<Int32>();                      break;                    case AttributeTypes.UInt32:                      result = s_defaultUInt32;                      break;                    case AttributeTypes.UInt32Array:                      result = GetDefaultArrayValue<UInt32>();                      break;                    case AttributeTypes.Int64:                      result = s_defaultInt64;                      break;                    case AttributeTypes.Int64Array:                      result = GetDefaultArrayValue<Int64>();                      break;                    case AttributeTypes.UInt64:                      result = s_defaultUInt64;                      break;                    case AttributeTypes.UInt64Array:                      result = GetDefaultArrayValue<UInt64>();                      break;                    case AttributeTypes.Single:                      result = s_defaultSingle;                      break;                    case AttributeTypes.SingleArray:                      result = GetDefaultArrayValue<Single>();                      break;                    case AttributeTypes.Double:                      result = s_defaultDouble;                      break;                    case AttributeTypes.DoubleArray:                      result = GetDefaultArrayValue<Double>();                      break;                    case AttributeTypes.Decimal:                      result = s_defaultDecimal;                      break;                    case AttributeTypes.DecimalArray:                      result = GetDefaultArrayValue<Decimal>();                      break;                    case AttributeTypes.String:                      result = string.Empty;                      break;                    case AttributeTypes.StringArray:                      result = GetDefaultArrayValue<String>();                      break;                    case AttributeTypes.Reference:                      break;                    //case AttributeTypes.Uri: // null' no good default value for URI                  //    break;                    case AttributeTypes.DateTime:                      result = s_defaultDateTime;                      break;              }
Missing Default,Sce.Atf.Dom,AttributeType,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Dom\AttributeType.cs,AreEqual,The following switch statement is missing a default case: switch (m_type)              {                  case AttributeTypes.Boolean:                  case AttributeTypes.Int8:                  case AttributeTypes.UInt8:                  case AttributeTypes.Int16:                  case AttributeTypes.UInt16:                  case AttributeTypes.Int32:                  case AttributeTypes.UInt32:                  case AttributeTypes.Int64:                  case AttributeTypes.UInt64:                  case AttributeTypes.Single:                  case AttributeTypes.Double:                  case AttributeTypes.Decimal:                  case AttributeTypes.String:                  case AttributeTypes.Reference:                  case AttributeTypes.Uri:                  case AttributeTypes.DateTime:                      result = val1.Equals(val2);                      break;                    case AttributeTypes.BooleanArray:                      result = AreEqualArraysOf<Boolean>(val1' val2);                      break;                    case AttributeTypes.Int8Array:                      result = AreEqualArraysOf<SByte>(val1' val2);                      break;                    case AttributeTypes.UInt8Array:                      result = AreEqualArraysOf<Byte>(val1' val2);                      break;                    case AttributeTypes.Int16Array:                      result = AreEqualArraysOf<Int16>(val1' val2);                      break;                    case AttributeTypes.UInt16Array:                      result = AreEqualArraysOf<UInt16>(val1' val2);                      break;                    case AttributeTypes.Int32Array:                      result = AreEqualArraysOf<Int32>(val1' val2);                      break;                    case AttributeTypes.UInt32Array:                      result = AreEqualArraysOf<UInt32>(val1' val2);                      break;                    case AttributeTypes.Int64Array:                      result = AreEqualArraysOf<Int64>(val1' val2);                      break;                    case AttributeTypes.UInt64Array:                      result = AreEqualArraysOf<UInt64>(val1' val2);                      break;                    case AttributeTypes.SingleArray:                      result = AreEqualArraysOf<Single>(val1' val2);                      break;                    case AttributeTypes.DoubleArray:                      result = AreEqualArraysOf<Double>(val1' val2);                      break;                    case AttributeTypes.DecimalArray:                      result = AreEqualArraysOf<Decimal>(val1' val2);                      break;                    case AttributeTypes.StringArray:                      result = AreEqualArraysOf<String>(val1' val2);                      break;              }
Missing Default,Sce.Atf.Dom,AttributeType,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Dom\AttributeType.cs,Clone,The following switch statement is missing a default case: switch (m_type)                  {                      case AttributeTypes.Boolean:                      case AttributeTypes.Int8:                      case AttributeTypes.UInt8:                      case AttributeTypes.Int16:                      case AttributeTypes.UInt16:                      case AttributeTypes.Int32:                      case AttributeTypes.UInt32:                      case AttributeTypes.Int64:                      case AttributeTypes.UInt64:                      case AttributeTypes.Single:                      case AttributeTypes.Double:                      case AttributeTypes.Decimal:                      case AttributeTypes.String:                      case AttributeTypes.Reference:                      case AttributeTypes.Uri:                      case AttributeTypes.DateTime:                          result = value; // immutable types don't need to be cloned                          break;                        case AttributeTypes.BooleanArray:                          result = ((Boolean[])value).Clone();                          break;                        case AttributeTypes.Int8Array:                          result = ((SByte[])value).Clone();                          break;                        case AttributeTypes.UInt8Array:                          result = ((Byte[])value).Clone();                          break;                        case AttributeTypes.Int16Array:                          result = ((Int16[])value).Clone();                          break;                        case AttributeTypes.UInt16Array:                          result = ((UInt16[])value).Clone();                          break;                        case AttributeTypes.Int32Array:                          result = ((Int32[])value).Clone();                          break;                        case AttributeTypes.UInt32Array:                          result = ((UInt32[])value).Clone();                          break;                        case AttributeTypes.Int64Array:                          result = ((Int64[])value).Clone();                          break;                        case AttributeTypes.UInt64Array:                          result = ((UInt64[])value).Clone();                          break;                        case AttributeTypes.SingleArray:                          result = ((Single[])value).Clone();                          break;                        case AttributeTypes.DoubleArray:                          result = ((Double[])value).Clone();                          break;                        case AttributeTypes.DecimalArray:                          result = ((Decimal[])value).Clone();                          break;                        case AttributeTypes.StringArray:                          result = ((String[])value).Clone();                          break;                  }
Missing Default,Sce.Atf.Dom,AttributeType,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Dom\AttributeType.cs,Convert,The following switch statement is missing a default case: switch (m_type)              {                  case AttributeTypes.Int8:                  case AttributeTypes.UInt8:                  case AttributeTypes.Int16:                  case AttributeTypes.UInt16:                  case AttributeTypes.Int32:                  case AttributeTypes.UInt32:                  case AttributeTypes.Int64:                  case AttributeTypes.UInt64:                  case AttributeTypes.Decimal:                      result = ((IFormattable)value).ToString(null' CultureInfo.InvariantCulture);                      break;                  case AttributeTypes.DateTime:                      // Persist in UTC.                      DateTime utc = ((DateTime)value).ToUniversalTime();                      result = utc.ToString("o"' DateTimeFormatInfo.InvariantInfo); //round-trip                      break;                  case AttributeTypes.Single:                  case AttributeTypes.Double:                      result = ((IFormattable)value).ToString("R"' CultureInfo.InvariantCulture);                      break;                    case AttributeTypes.String:                      result = value.ToString();                      break;                  case AttributeTypes.Uri:                      result = Uri.EscapeUriString(Uri.UnescapeDataString(value.ToString()));                      break;                    //case AttributeTypes.Reference: // references require special handling by persisters                  //    break;                    // we need to convert "True" and "False" to lower case to be valid xs:boolean values                  case AttributeTypes.Boolean:                      result = (bool)value ? "true" : "false";                      break;                    case AttributeTypes.Int8Array:                      result = Convert<SByte>(value);                      break;                    case AttributeTypes.UInt8Array:                      result = Convert<Byte>(value);                      break;                    case AttributeTypes.Int16Array:                      result = Convert<Int16>(value);                      break;                    case AttributeTypes.UInt16Array:                      result = Convert<UInt16>(value);                      break;                    case AttributeTypes.Int32Array:                      result = Convert<Int32>(value);                      break;                    case AttributeTypes.UInt32Array:                      result = Convert<UInt32>(value);                      break;                    case AttributeTypes.Int64Array:                      result = Convert<Int64>(value);                      break;                    case AttributeTypes.UInt64Array:                      result = Convert<UInt64>(value);                      break;                    case AttributeTypes.SingleArray:                      result = Convert<Single>(value);                      break;                    case AttributeTypes.DoubleArray:                      result = Convert<Double>(value);                      break;                    case AttributeTypes.DecimalArray:                      result = Convert<Decimal>(value);                      break;                    case AttributeTypes.StringArray:                      result = ConvertStringArrayToString((string[])value);                      break;                    case AttributeTypes.BooleanArray:                      sb = new StringBuilder();                      foreach (bool b in value as bool[])                      {                          sb.Append(b ? "true" : "false");                          sb.Append(" ");                      }                      if (sb.Length > 0)                          sb.Length -= 1; // remove trailing space                      result = sb.ToString();                      break;              }
Missing Default,Sce.Atf.Dom,AttributeType,D:\research\architectureSmells\repos1\SonyWWS_ATF\Framework\Atf.Core\Dom\AttributeType.cs,Convert,The following switch statement is missing a default case: switch (m_type)              {                  case AttributeTypes.Boolean:                      Boolean boolResult;                      if (Boolean.TryParse(s' out boolResult))                          result = boolResult;                      break;                    case AttributeTypes.Int8:                      SByte int8Result;                      if (SByte.TryParse(s' NumberStyles.Integer' CultureInfo.InvariantCulture' out int8Result))                          result = int8Result;                      break;                    case AttributeTypes.UInt8:                      Byte uint8Result;                      if (Byte.TryParse(s' NumberStyles.Integer' CultureInfo.InvariantCulture' out uint8Result))                          result = uint8Result;                      break;                    case AttributeTypes.Int16:                      Int16 int16Result;                      if (Int16.TryParse(s' NumberStyles.Integer' CultureInfo.InvariantCulture' out int16Result))                          result = int16Result;                      break;                    case AttributeTypes.UInt16:                      UInt16 uint16Result;                      if (UInt16.TryParse(s' NumberStyles.Integer' CultureInfo.InvariantCulture' out uint16Result))                          result = uint16Result;                      break;                    case AttributeTypes.Int32:                      Int32 int32Result;                      if (Int32.TryParse(s' NumberStyles.Integer' CultureInfo.InvariantCulture' out int32Result))                          result = int32Result;                      break;                    case AttributeTypes.UInt32:                      UInt32 uint32Result;                      if (UInt32.TryParse(s' NumberStyles.Integer' CultureInfo.InvariantCulture' out uint32Result))                          result = uint32Result;                      break;                    case AttributeTypes.Int64:                      Int64 int64Result;                      if (Int64.TryParse(s' NumberStyles.Integer' CultureInfo.InvariantCulture' out int64Result))                          result = int64Result;                      break;                    case AttributeTypes.UInt64:                      UInt64 uint64Result;                      if (UInt64.TryParse(s' NumberStyles.Integer' CultureInfo.InvariantCulture' out uint64Result))                          result = uint64Result;                      break;                    case AttributeTypes.Single:                      Single singleResult;                      if (Single.TryParse(s' NumberStyles.Float' CultureInfo.InvariantCulture' out singleResult))                          result = singleResult;                      break;                    case AttributeTypes.Double:                      Double doubleResult;                      if (Double.TryParse(s' NumberStyles.Float' CultureInfo.InvariantCulture' out doubleResult))                          result = doubleResult;                      break;                    case AttributeTypes.Decimal:                      Decimal decimalResult;                      if (Decimal.TryParse(s' NumberStyles.Number' CultureInfo.InvariantCulture' out decimalResult))                          result = decimalResult;                      break;                    case AttributeTypes.String:                      result = s;                      break;                    case AttributeTypes.Uri:                      Uri uri;                      Uri.TryCreate(s' UriKind.RelativeOrAbsolute' out uri);                      result = uri;                      break;                    //case AttributeTypes.Reference: // references require special handling by persisters                  //    break;                    case AttributeTypes.DateTime:                      // Use local time in the client app.                      DateTime dateTimeResult;                      if (DateTime.TryParse(s' DateTimeFormatInfo.InvariantInfo' DateTimeStyles.RoundtripKind' out dateTimeResult))                          dateTimeResult = dateTimeResult.ToLocalTime();                      result = dateTimeResult;                      break;                    case AttributeTypes.BooleanArray:                      Boolean[] booleans = CreateArrayValue<Boolean>(s' out strings' out stringsToParse);                      for (int i = 0; i < stringsToParse; i++)                          Boolean.TryParse(strings[i]' out booleans[i]);                      result = booleans;                      break;                    case AttributeTypes.Int8Array:                      SByte[] int8s = CreateArrayValue<SByte>(s' out strings' out stringsToParse);                      for (int i = 0; i < stringsToParse; i++)                          SByte.TryParse(strings[i]' NumberStyles.Integer' CultureInfo.InvariantCulture' out int8s[i]);                      result = int8s;                      break;                    case AttributeTypes.UInt8Array:                      Byte[] uint8s = CreateArrayValue<Byte>(s' out strings' out stringsToParse);                      for (int i = 0; i < stringsToParse; i++)                          Byte.TryParse(strings[i]' NumberStyles.Integer' CultureInfo.InvariantCulture' out uint8s[i]);                      result = uint8s;                      break;                    case AttributeTypes.Int16Array:                      Int16[] int16s = CreateArrayValue<Int16>(s' out strings' out stringsToParse);                      for (int i = 0; i < stringsToParse; i++)                          Int16.TryParse(strings[i]' NumberStyles.Integer' CultureInfo.InvariantCulture' out int16s[i]);                      result = int16s;                      break;                    case AttributeTypes.UInt16Array:                      UInt16[] uint16s = CreateArrayValue<UInt16>(s' out strings' out stringsToParse);                      for (int i = 0; i < stringsToParse; i++)                          UInt16.TryParse(strings[i]' NumberStyles.Integer' CultureInfo.InvariantCulture' out uint16s[i]);                      result = uint16s;                      break;                    case AttributeTypes.Int32Array:                      Int32[] int32s = CreateArrayValue<Int32>(s' out strings' out stringsToParse);                      for (int i = 0; i < stringsToParse; i++)                          Int32.TryParse(strings[i]' NumberStyles.Integer' CultureInfo.InvariantCulture' out int32s[i]);                      result = int32s;                      break;                    case AttributeTypes.UInt32Array:                      UInt32[] uint32s = CreateArrayValue<UInt32>(s' out strings' out stringsToParse);                      for (int i = 0; i < stringsToParse; i++)                          UInt32.TryParse(strings[i]' NumberStyles.Integer' CultureInfo.InvariantCulture' out uint32s[i]);                      result = uint32s;                      break;                    case AttributeTypes.Int64Array:                      Int64[] int64s = CreateArrayValue<Int64>(s' out strings' out stringsToParse);                      for (int i = 0; i < stringsToParse; i++)                          Int64.TryParse(strings[i]' NumberStyles.Integer' CultureInfo.InvariantCulture' out int64s[i]);                      result = int64s;                      break;                    case AttributeTypes.UInt64Array:                      UInt64[] uint64s = CreateArrayValue<UInt64>(s' out strings' out stringsToParse);                      for (int i = 0; i < stringsToParse; i++)                          UInt64.TryParse(strings[i]' NumberStyles.Integer' CultureInfo.InvariantCulture' out uint64s[i]);                      result = uint64s;                      break;                    case AttributeTypes.SingleArray:                      Single[] singles = CreateArrayValue<Single>(s' out strings' out stringsToParse);                      for (int i = 0; i < stringsToParse; i++)                          Single.TryParse(strings[i]' NumberStyles.Float' CultureInfo.InvariantCulture' out singles[i]);                      result = singles;                      break;                    case AttributeTypes.DoubleArray:                      Double[] doubles = CreateArrayValue<Double>(s' out strings' out stringsToParse);                      for (int i = 0; i < stringsToParse; i++)                          Double.TryParse(strings[i]' NumberStyles.Float' CultureInfo.InvariantCulture' out doubles[i]);                      result = doubles;                      break;                    case AttributeTypes.DecimalArray:                      Decimal[] decimals = CreateArrayValue<Decimal>(s' out strings' out stringsToParse);                      for (int i = 0; i < stringsToParse; i++)                          Decimal.TryParse(strings[i]' NumberStyles.Number' CultureInfo.InvariantCulture' out decimals[i]);                      result = decimals;                      break;                    case AttributeTypes.StringArray:                      result = ConvertStringToStringArray(s);                      break;              }
