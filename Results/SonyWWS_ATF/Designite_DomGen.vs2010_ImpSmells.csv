Implementation smell,Namespace,Class,File,Method,Description
Long Method,DomGen,SchemaGen,C:\repos\SonyWWS_ATF\DevTools\DomGen\SchemaGen.cs,Generate,The method has 156 lines of code.
Complex Method,DomGen,Program,C:\repos\SonyWWS_ATF\DevTools\DomGen\Program.cs,Main,Cyclomatic complexity of the method is 9
Complex Method,DomGen,SchemaGen,C:\repos\SonyWWS_ATF\DevTools\DomGen\SchemaGen.cs,Generate,Cyclomatic complexity of the method is 22
Complex Method,DomGen,SchemaGen,C:\repos\SonyWWS_ATF\DevTools\DomGen\SchemaGen.cs,GenerateEnums,Cyclomatic complexity of the method is 8
Long Parameter List,DomGen,SchemaGen,C:\repos\SonyWWS_ATF\DevTools\DomGen\SchemaGen.cs,Generate,The method has 5 parameters. Parameters: typeLoader' schemaNamespace' codeNamespace' className' args
Long Parameter List,DomGen,SchemaGen,C:\repos\SonyWWS_ATF\DevTools\DomGen\SchemaGen.cs,GenerateEnums,The method has 5 parameters. Parameters: sb' typeLoader' namespaces' domNodeTypeToClassName' classNameToDomNodeType
Long Statement,DomGen,SchemaGen,C:\repos\SonyWWS_ATF\DevTools\DomGen\SchemaGen.cs,Generate,The length of the statement  "            WriteLine(sb' "        private static void Initialize(Func<string' string' DomNodeType> getNodeType' Func<string' string' ChildInfo> getRootElement)"); " is 151.
Long Statement,DomGen,SchemaGen,C:\repos\SonyWWS_ATF\DevTools\DomGen\SchemaGen.cs,GenerateEnums,The length of the statement  "            System.Reflection.FieldInfo fInfo = typeof(StringEnumRule).GetField("m_values"' System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance); " is 164.
Long Statement,DomGen,SchemaGen,C:\repos\SonyWWS_ATF\DevTools\DomGen\SchemaGen.cs,GetTypeCollection,The length of the statement  "                throw new InvalidOperationException(string.Format("schema namespace '{0}' is missing or has no types"' schemaNamespace)); " is 121.
Long Statement,DomGen,SchemaGen,C:\repos\SonyWWS_ATF\DevTools\DomGen\SchemaGen.cs,GenerateFileProlog,The length of the statement  "            WriteLine(sb' "// -------------------------------------------------------------------------------------------------------------------"); " is 136.
Long Statement,DomGen,SchemaGen,C:\repos\SonyWWS_ATF\DevTools\DomGen\SchemaGen.cs,GenerateFileProlog,The length of the statement  "            WriteLine(sb' "// -------------------------------------------------------------------------------------------------------------------"); " is 136.
Empty Catch Block,DomGen,Program,C:\repos\SonyWWS_ATF\DevTools\DomGen\Program.cs,Main,The method has an empty catch block.
Magic Number,DomGen,Program,C:\repos\SonyWWS_ATF\DevTools\DomGen\Program.cs,Main,The following statement contains a magic number: if (args.Length < 4)              {                  Console.WriteLine(                      "usage:\n" +                      "DomGen {schemaPath} {outputPath} {schemaNamespace}  {classNamespace} {options}\n" +                      "eg:      DomGen echo.xsd Schema.cs http://sce/audio Sce.Audio -a\n" +                      "options:\n" +                      "-a or -adapters\n" +                      "   Will generate DomNodeAdapters with properties\n" +                      "-annotatedOnly\n" +                      "   If the -annotatedOnly argument is set: types will be included ONLY if\n" +                      "   <sce.domgen include=\"true\"> is defined for this type' all other types will\n" +                      "   be skipped.\n" +                      "   If -annotatedOnly is NOT set: types will be included by default UNLESS\n" +                      "   <sce.domgen include=\"false\"> is explicitly set for this type" +                      "-enums\n" +                      "   Will generate Enum types for all AttributeTypes which have string value restrictions\n" +                      "-cache\n" +                      "   If -cache is set will generate an intermediate file and will not rebuild the output unless\n" +                      "   the schema has changed\n");                  return;              }
Magic Number,DomGen,Program,C:\repos\SonyWWS_ATF\DevTools\DomGen\Program.cs,Main,The following statement contains a magic number: schemaNamespace = args[2];
Magic Number,DomGen,Program,C:\repos\SonyWWS_ATF\DevTools\DomGen\Program.cs,Main,The following statement contains a magic number: codeNamespace = args[3];
Magic Number,DomGen,Program,C:\repos\SonyWWS_ATF\DevTools\DomGen\Program.cs,Main,The following statement contains a magic number: for (int i = 4; i < args.Length; i++)              {                  string arg = args[i];                  if (arg == "-cache")                      useCacheFile = true;              }
Magic Number,DomGen,SchemaGen,C:\repos\SonyWWS_ATF\DevTools\DomGen\SchemaGen.cs,Generate,The following statement contains a magic number: for (int i = 4; i < args.Length; i++)              {                  string arg = args[i];                  if (arg == "-a" || arg == "-adapters")                      generateAdapters = true;                  else if (arg == "-annotatedOnly")                      annotatedOnly = true;                  else if (arg == "-enums")                      generateEnums = true;              }
