Implementation smell,Namespace,Class,File,Method,Description
Long Method,TreeListEditor,CommonEditor,D:\research\architectureSmells\repos1\SonyWWS_ATF\Samples\TreeListEditor\Editors.cs,CommonEditor,The method has 117 lines of code.
Complex Method,TreeListEditor,DataComparer,D:\research\architectureSmells\repos1\SonyWWS_ATF\Samples\TreeListEditor\DataGenerator.cs,Compare,Cyclomatic complexity of the method is 13
Complex Method,TreeListEditor,CommonEditor,D:\research\architectureSmells\repos1\SonyWWS_ATF\Samples\TreeListEditor\Editors.cs,CommonEditor,Cyclomatic complexity of the method is 11
Complex Method,TreeListEditor,CommonEditor,D:\research\architectureSmells\repos1\SonyWWS_ATF\Samples\TreeListEditor\Editors.cs,BtnClick,Cyclomatic complexity of the method is 11
Complex Method,TreeListEditor,MySorter,D:\research\architectureSmells\repos1\SonyWWS_ATF\Samples\TreeListEditor\RawUsage.cs,Compare,Cyclomatic complexity of the method is 9
Long Parameter List,TreeListEditor,CommonEditor,D:\research\architectureSmells\repos1\SonyWWS_ATF\Samples\TreeListEditor\Editors.cs,CommonEditor,The method has 6 parameters. Parameters: name' style' flags' contextRegistry' settingsService' controlHostService
Long Statement,TreeListEditor,Program,D:\research\architectureSmells\repos1\SonyWWS_ATF\Samples\TreeListEditor\Program.cs,Main,The length of the statement  "            Application.DoEvents(); // see http://www.codeproject.com/buglist/EnableVisualStylesBug.asp?df=100&forumid=25268&exp=0&select=984714 " is 132.
Long Statement,TreeListEditor,Program,D:\research\architectureSmells\repos1\SonyWWS_ATF\Samples\TreeListEditor\Program.cs,Main,The length of the statement  "                        typeof(OutputService)'                  // rich text box for displaying error and warning messages. Implements IOutputWriter. " is 125.
Long Statement,TreeListEditor,Program,D:\research\architectureSmells\repos1\SonyWWS_ATF\Samples\TreeListEditor\Program.cs,Main,The length of the statement  "                        typeof(AutomationService)               // provides facilities to run an automated script using the .NET remoting service " is 121.
Magic Number,TreeListEditor,DataContainer,D:\research\architectureSmells\repos1\SonyWWS_ATF\Samples\TreeListEditor\DataGenerator.cs,GenerateFlat,The following statement contains a magic number: var items = s_random.Next(5' 16);
Magic Number,TreeListEditor,DataContainer,D:\research\architectureSmells\repos1\SonyWWS_ATF\Samples\TreeListEditor\DataGenerator.cs,GenerateFlat,The following statement contains a magic number: var items = s_random.Next(5' 16);
Magic Number,TreeListEditor,DataContainer,D:\research\architectureSmells\repos1\SonyWWS_ATF\Samples\TreeListEditor\DataGenerator.cs,GenerateHierarchical,The following statement contains a magic number: var items = s_random.Next(3' 10);
Magic Number,TreeListEditor,DataContainer,D:\research\architectureSmells\repos1\SonyWWS_ATF\Samples\TreeListEditor\DataGenerator.cs,GenerateHierarchical,The following statement contains a magic number: var items = s_random.Next(3' 10);
Magic Number,TreeListEditor,DataContainer,D:\research\architectureSmells\repos1\SonyWWS_ATF\Samples\TreeListEditor\DataGenerator.cs,GenerateVirtual,The following statement contains a magic number: var items = s_random.Next(10000' 100001);
Magic Number,TreeListEditor,DataContainer,D:\research\architectureSmells\repos1\SonyWWS_ATF\Samples\TreeListEditor\DataGenerator.cs,GenerateVirtual,The following statement contains a magic number: var items = s_random.Next(10000' 100001);
Magic Number,TreeListEditor,DataContainer,D:\research\architectureSmells\repos1\SonyWWS_ATF\Samples\TreeListEditor\DataGenerator.cs,ModifySelected,The following statement contains a magic number: switch (data.Type)                  {                      case DataType.Integer:                          data.Value = (int)data.Value + s_random.Next(2' 6);                          break;                        case DataType.String:                          data.Value = string.Format("{0}{1}"' data.Value' Alphabet[s_random.Next(0' Alphabet.Length)]);                          break;                  }
Magic Number,TreeListEditor,DataContainer,D:\research\architectureSmells\repos1\SonyWWS_ATF\Samples\TreeListEditor\DataGenerator.cs,ModifySelected,The following statement contains a magic number: switch (data.Type)                  {                      case DataType.Integer:                          data.Value = (int)data.Value + s_random.Next(2' 6);                          break;                        case DataType.String:                          data.Value = string.Format("{0}{1}"' data.Value' Alphabet[s_random.Next(0' Alphabet.Length)]);                          break;                  }
Magic Number,TreeListEditor,DataContainer,D:\research\architectureSmells\repos1\SonyWWS_ATF\Samples\TreeListEditor\DataGenerator.cs,CreateItem,The following statement contains a magic number: var name = CreateString(s_random.Next(2' 11));
Magic Number,TreeListEditor,DataContainer,D:\research\architectureSmells\repos1\SonyWWS_ATF\Samples\TreeListEditor\DataGenerator.cs,CreateItem,The following statement contains a magic number: var name = CreateString(s_random.Next(2' 11));
Magic Number,TreeListEditor,DataContainer,D:\research\architectureSmells\repos1\SonyWWS_ATF\Samples\TreeListEditor\DataGenerator.cs,CreateItem,The following statement contains a magic number: switch (type)              {                  case DataType.Integer:                      value = s_random.Next(0' 51);                      break;                    case DataType.String:                      value = CreateString(s_random.Next(5' 16));                      break;                    default:                      value = type.ToString();                      break;              }
Magic Number,TreeListEditor,DataContainer,D:\research\architectureSmells\repos1\SonyWWS_ATF\Samples\TreeListEditor\DataGenerator.cs,CreateItem,The following statement contains a magic number: switch (type)              {                  case DataType.Integer:                      value = s_random.Next(0' 51);                      break;                    case DataType.String:                      value = CreateString(s_random.Next(5' 16));                      break;                    default:                      value = type.ToString();                      break;              }
Magic Number,TreeListEditor,DataContainer,D:\research\architectureSmells\repos1\SonyWWS_ATF\Samples\TreeListEditor\DataGenerator.cs,CreateItem,The following statement contains a magic number: switch (type)              {                  case DataType.Integer:                      value = s_random.Next(0' 51);                      break;                    case DataType.String:                      value = CreateString(s_random.Next(5' 16));                      break;                    default:                      value = type.ToString();                      break;              }
Magic Number,TreeListEditor,DataComparer,D:\research\architectureSmells\repos1\SonyWWS_ATF\Samples\TreeListEditor\DataGenerator.cs,Compare,The following statement contains a magic number: switch (m_control.SortColumn)              {                  case 1: sortFuncs = s_column1Sort; break;                  case 2: sortFuncs = s_column2Sort; break;                  default: sortFuncs = s_column0Sort; break;              }
Magic Number,TreeListEditor,CommonEditor,D:\research\architectureSmells\repos1\SonyWWS_ATF\Samples\TreeListEditor\Editors.cs,CommonEditor,The following statement contains a magic number: int x = 2' y = 2;
Magic Number,TreeListEditor,CommonEditor,D:\research\architectureSmells\repos1\SonyWWS_ATF\Samples\TreeListEditor\Editors.cs,CommonEditor,The following statement contains a magic number: int x = 2' y = 2;
Magic Number,TreeListEditor,CommonEditor,D:\research\architectureSmells\repos1\SonyWWS_ATF\Samples\TreeListEditor\Editors.cs,CommonEditor,The following statement contains a magic number: TreeListView.Control.Location = new Point(0' buttonHeight + 2);
Magic Number,TreeListEditor,CommonEditor,D:\research\architectureSmells\repos1\SonyWWS_ATF\Samples\TreeListEditor\Editors.cs,CommonEditor,The following statement contains a magic number: TreeListView.Control.Height = m_uberControl.Height - buttonHeight - 2;
Magic Number,TreeListEditor,CommonEditor,D:\research\architectureSmells\repos1\SonyWWS_ATF\Samples\TreeListEditor\Editors.cs,CreateButton,The following statement contains a magic number: btn.Width = size.Width + 20;
Magic Number,TreeListEditor,CommonEditor,D:\research\architectureSmells\repos1\SonyWWS_ATF\Samples\TreeListEditor\Editors.cs,CreateButton,The following statement contains a magic number: x += btn.Width + 2;
Magic Number,TreeListEditor,RawTreeListView,D:\research\architectureSmells\repos1\SonyWWS_ATF\Samples\TreeListEditor\RawUsage.cs,RawTreeListView,The following statement contains a magic number: int x = 2' y = 2;
Magic Number,TreeListEditor,RawTreeListView,D:\research\architectureSmells\repos1\SonyWWS_ATF\Samples\TreeListEditor\RawUsage.cs,RawTreeListView,The following statement contains a magic number: int x = 2' y = 2;
Magic Number,TreeListEditor,RawTreeListView,D:\research\architectureSmells\repos1\SonyWWS_ATF\Samples\TreeListEditor\RawUsage.cs,RawTreeListView,The following statement contains a magic number: m_control.Control.Location = new Point(0' buttonHeight + 2);
Magic Number,TreeListEditor,RawTreeListView,D:\research\architectureSmells\repos1\SonyWWS_ATF\Samples\TreeListEditor\RawUsage.cs,RawTreeListView,The following statement contains a magic number: m_control.Control.Height = m_host.Height - buttonHeight - 2;
Magic Number,TreeListEditor,RawTreeListView,D:\research\architectureSmells\repos1\SonyWWS_ATF\Samples\TreeListEditor\RawUsage.cs,CreateButton,The following statement contains a magic number: btn.Width = size.Width + 20;
Magic Number,TreeListEditor,RawTreeListView,D:\research\architectureSmells\repos1\SonyWWS_ATF\Samples\TreeListEditor\RawUsage.cs,CreateButton,The following statement contains a magic number: x += btn.Width + 2;
Missing Default,TreeListEditor,DataContainer,D:\research\architectureSmells\repos1\SonyWWS_ATF\Samples\TreeListEditor\DataGenerator.cs,ModifySelected,The following switch statement is missing a default case: switch (data.Type)                  {                      case DataType.Integer:                          data.Value = (int)data.Value + s_random.Next(2' 6);                          break;                        case DataType.String:                          data.Value = string.Format("{0}{1}"' data.Value' Alphabet[s_random.Next(0' Alphabet.Length)]);                          break;                  }
Missing Default,TreeListEditor,CommonEditor,D:\research\architectureSmells\repos1\SonyWWS_ATF\Samples\TreeListEditor\Editors.cs,BtnClick,The following switch statement is missing a default case: switch (flags)              {                  case Buttons.AddFlat:                      DataContainer.GenerateFlat(                          View'                          (TreeListView.TheStyle != TreeListView.Style.TreeList) &&                          (TreeListView.TheStyle != TreeListView.Style.CheckedTreeList)                              ? null                              : TreeListViewAdapter.LastHit);                      break;                    case Buttons.AddHierarchical:                      DataContainer.GenerateHierarchical(                          View'                          TreeListViewAdapter.LastHit);                      break;                    case Buttons.AddVirtual:                      DataContainer.GenerateVirtual(View);                      break;                    case Buttons.Reload:                      DataContainer.Reload(View);                      break;                    case Buttons.ExpandAll:                      TreeListView.ExpandAll();                      break;                    case Buttons.CollapseAll:                      TreeListView.CollapseAll();                      break;                    case Buttons.RemoveItem:                      DataContainer.RemoveItem(View' TreeListViewAdapter.LastHit);                      break;                    case Buttons.ModifySelected:                      DataContainer.ModifySelected(View' TreeListViewAdapter.Selection);                      break;                    case Buttons.SelectAll:                      {                          TreeListView.BeginUpdate();                          foreach (var node in TreeListView.Nodes)                              node.Selected = true;                          TreeListView.EndUpdate();                      }                      break;                    case Buttons.RecursiveCheckBoxes:                      {                          TreeListView.RecursiveCheckBoxes = !TreeListView.RecursiveCheckBoxes;                          btn.Text = TreeListView.RecursiveCheckBoxes ? RecursiveCheckBoxesOnText : RecursiveCheckBoxesOffText;                      }                      break;              }
